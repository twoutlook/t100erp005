#該程式未解開Section, 採用最新樣板產出!
{<section id="axmt500.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0080(2017-02-17 14:16:14), PR版次:
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:
#+ Build......: 001440
#+ Filename...: axmt500
#+ Description: 訂單維護作業
#+ Creator....: 02040(2014-01-23 17:03:13)
#+ Modifier...: 08992 -SD/PR-

{</section>}

{<section id="axmt500.global" >}
#應用 t01 樣板自動產生(Version:79)
#add-point:填寫註解說明 name="global.memo" 
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"
{<point name="global.memo_customerization" edit="c"/>}
#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"
{<point name="global.import"/>}
#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"
{<point name="global.inc" mark="Y"/>}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_xmda_m        RECORD
       xmdadocno LIKE xmda_t.xmdadocno, 
   xmda001 LIKE xmda_t.xmda001, 
   xmdadocno_desc LIKE type_t.chr80, 
   xmdadocdt LIKE xmda_t.xmdadocdt, 
   xmda004 LIKE xmda_t.xmda004, 
   xmda004_desc LIKE type_t.chr80, 
   xmda002 LIKE xmda_t.xmda002, 
   xmda002_desc LIKE type_t.chr80, 
   xmda003 LIKE xmda_t.xmda003, 
   xmda003_desc LIKE type_t.chr80, 
   xmdasite LIKE xmda_t.xmdasite, 
   xmdastus LIKE xmda_t.xmdastus, 
   xmda005 LIKE xmda_t.xmda005, 
   xmda006 LIKE xmda_t.xmda006, 
   xmda007 LIKE xmda_t.xmda007, 
   xmda008 LIKE xmda_t.xmda008, 
   xmda033 LIKE xmda_t.xmda033, 
   xmda027 LIKE xmda_t.xmda027, 
   xmda027_desc LIKE type_t.chr80, 
   xmda009 LIKE xmda_t.xmda009, 
   xmda009_desc LIKE type_t.chr80, 
   xmda010 LIKE xmda_t.xmda010, 
   xmda010_desc LIKE type_t.chr80, 
   xmda011 LIKE xmda_t.xmda011, 
   xmda011_desc LIKE type_t.chr80, 
   xmda012 LIKE xmda_t.xmda012, 
   xmda013 LIKE xmda_t.xmda013, 
   xmda035 LIKE xmda_t.xmda035, 
   xmda035_desc LIKE type_t.chr80, 
   xmda015 LIKE xmda_t.xmda015, 
   xmda015_desc LIKE type_t.chr80, 
   xmda016 LIKE xmda_t.xmda016, 
   xmda017 LIKE xmda_t.xmda017, 
   xmda017_desc LIKE type_t.chr80, 
   xmda018 LIKE xmda_t.xmda018, 
   xmda018_desc LIKE type_t.chr80, 
   xmda019 LIKE xmda_t.xmda019, 
   xmda023 LIKE xmda_t.xmda023, 
   xmda023_desc LIKE type_t.chr80, 
   xmda032 LIKE xmda_t.xmda032, 
   xmda032_desc LIKE type_t.chr80, 
   xmda071 LIKE xmda_t.xmda071, 
   xmda050 LIKE xmda_t.xmda050, 
   xmda050_desc LIKE type_t.chr80, 
   xmda021 LIKE xmda_t.xmda021, 
   xmda021_desc LIKE type_t.chr80, 
   xmda022 LIKE xmda_t.xmda022, 
   xmda022_desc LIKE type_t.chr80, 
   xmda034 LIKE xmda_t.xmda034, 
   xmda034_desc LIKE type_t.chr80, 
   xmda203 LIKE xmda_t.xmda203, 
   xmda203_desc LIKE type_t.chr80, 
   xmda024 LIKE xmda_t.xmda024, 
   xmda024_desc LIKE type_t.chr80, 
   xmda048 LIKE xmda_t.xmda048, 
   xmda052 LIKE xmda_t.xmda052, 
   xmda049 LIKE xmda_t.xmda049, 
   xmda044 LIKE xmda_t.xmda044, 
   xmda044_desc LIKE type_t.chr80, 
   xmda030 LIKE xmda_t.xmda030, 
   xmda031 LIKE xmda_t.xmda031, 
   xmda045 LIKE xmda_t.xmda045, 
   xmda046 LIKE xmda_t.xmda046, 
   xmda047 LIKE xmda_t.xmda047, 
   xmda028 LIKE xmda_t.xmda028, 
   xmda043 LIKE xmda_t.xmda043, 
   xmda025 LIKE xmda_t.xmda025, 
   xmda025_desc LIKE type_t.chr80, 
   oofb0171 LIKE type_t.chr500, 
   xmda026 LIKE xmda_t.xmda026, 
   xmda026_desc LIKE type_t.chr80, 
   oofb0172 LIKE type_t.chr500, 
   xmda020 LIKE xmda_t.xmda020, 
   xmda020_desc LIKE type_t.chr80, 
   xmda037 LIKE xmda_t.xmda037, 
   xmda037_desc LIKE type_t.chr80, 
   xmda038 LIKE xmda_t.xmda038, 
   xmda038_desc LIKE type_t.chr80, 
   xmda036 LIKE xmda_t.xmda036, 
   xmda036_desc LIKE type_t.chr80, 
   xmda039 LIKE xmda_t.xmda039, 
   xmda041 LIKE xmda_t.xmda041, 
   xmda042 LIKE xmda_t.xmda042, 
   xmdaownid LIKE xmda_t.xmdaownid, 
   xmdaownid_desc LIKE type_t.chr80, 
   xmdaowndp LIKE xmda_t.xmdaowndp, 
   xmdaowndp_desc LIKE type_t.chr80, 
   xmdacrtid LIKE xmda_t.xmdacrtid, 
   xmdacrtid_desc LIKE type_t.chr80, 
   xmdacrtdp LIKE xmda_t.xmdacrtdp, 
   xmdacrtdp_desc LIKE type_t.chr80, 
   xmdacrtdt LIKE xmda_t.xmdacrtdt, 
   xmdamodid LIKE xmda_t.xmdamodid, 
   xmdamodid_desc LIKE type_t.chr80, 
   xmdamoddt LIKE xmda_t.xmdamoddt, 
   xmdacnfid LIKE xmda_t.xmdacnfid, 
   xmdacnfid_desc LIKE type_t.chr80, 
   xmdacnfdt LIKE xmda_t.xmdacnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_xmdc_d        RECORD
       xmdcseq LIKE xmdc_t.xmdcseq, 
   xmdc027 LIKE xmdc_t.xmdc027, 
   l_pmao009 LIKE type_t.chr500, 
   l_pmao010 LIKE type_t.chr500, 
   xmdc001 LIKE xmdc_t.xmdc001, 
   xmdc062 LIKE xmdc_t.xmdc062, 
   xmdc001_desc LIKE type_t.chr500, 
   xmdc001_desc_desc LIKE type_t.chr500, 
   xmdc019 LIKE xmdc_t.xmdc019, 
   xmdc002 LIKE xmdc_t.xmdc002, 
   xmdc002_desc LIKE type_t.chr500, 
   xmdc006 LIKE xmdc_t.xmdc006, 
   xmdc006_desc LIKE type_t.chr500, 
   xmdc007 LIKE xmdc_t.xmdc007, 
   xmdc008 LIKE xmdc_t.xmdc008, 
   xmdc008_desc LIKE type_t.chr500, 
   xmdc009 LIKE xmdc_t.xmdc009, 
   xmdc024 LIKE xmdc_t.xmdc024, 
   xmdc012 LIKE xmdc_t.xmdc012, 
   xmdc013 LIKE xmdc_t.xmdc013, 
   xmdc045 LIKE xmdc_t.xmdc045, 
   xmdc016 LIKE xmdc_t.xmdc016, 
   xmdc016_desc LIKE type_t.chr500, 
   xmdc017 LIKE xmdc_t.xmdc017, 
   xmdc010 LIKE xmdc_t.xmdc010, 
   xmdc010_desc LIKE type_t.chr500, 
   xmdc011 LIKE xmdc_t.xmdc011, 
   xmdc015 LIKE xmdc_t.xmdc015, 
   xmdc046 LIKE xmdc_t.xmdc046, 
   xmdc047 LIKE xmdc_t.xmdc047, 
   xmdc048 LIKE xmdc_t.xmdc048, 
   xmdc023 LIKE xmdc_t.xmdc023, 
   xmdc020 LIKE xmdc_t.xmdc020, 
   xmdc021 LIKE xmdc_t.xmdc021, 
   xmdc022 LIKE xmdc_t.xmdc022, 
   xmdcunit LIKE xmdc_t.xmdcunit, 
   xmdcunit_desc LIKE type_t.chr500, 
   xmdcorga LIKE xmdc_t.xmdcorga, 
   xmdcorga_desc LIKE type_t.chr500, 
   xmdc052 LIKE xmdc_t.xmdc052, 
   xmdc049 LIKE xmdc_t.xmdc049, 
   xmdc049_desc LIKE type_t.chr500, 
   xmdc053 LIKE xmdc_t.xmdc053, 
   xmdc053_desc LIKE type_t.chr500, 
   xmdc050 LIKE xmdc_t.xmdc050, 
   xmdcsite LIKE xmdc_t.xmdcsite, 
   xmdc058 LIKE xmdc_t.xmdc058, 
   xmdc059 LIKE xmdc_t.xmdc059, 
   xmdc060 LIKE xmdc_t.xmdc060, 
   xmdc061 LIKE xmdc_t.xmdc061, 
   ooff013 LIKE type_t.chr500
       END RECORD
PRIVATE TYPE type_g_xmdc2_d RECORD
       xmdcseq LIKE xmdc_t.xmdcseq, 
   imaa001 LIKE type_t.chr500, 
   imaal003 LIKE type_t.chr500, 
   imaal004 LIKE type_t.chr500, 
   imaa005 LIKE type_t.chr500, 
   imaa005_desc LIKE type_t.chr500, 
   xmdc0272 LIKE type_t.chr500, 
   l_pmao0092 LIKE type_t.chr500, 
   l_pmao0102 LIKE type_t.chr500, 
   xmdc028 LIKE xmdc_t.xmdc028, 
   xmdc028_desc LIKE type_t.chr500, 
   xmdc029 LIKE xmdc_t.xmdc029, 
   xmdc029_desc LIKE type_t.chr500, 
   xmdc030 LIKE xmdc_t.xmdc030, 
   xmdc057 LIKE xmdc_t.xmdc057, 
   xmdc025 LIKE xmdc_t.xmdc025, 
   oofb0173 LIKE type_t.chr500, 
   xmdc026 LIKE xmdc_t.xmdc026, 
   oofb0174 LIKE type_t.chr500, 
   xmdc031 LIKE xmdc_t.xmdc031, 
   xmdc031_desc LIKE type_t.chr500, 
   xmdc032 LIKE xmdc_t.xmdc032, 
   xmdc033 LIKE xmdc_t.xmdc033, 
   xmdc003 LIKE xmdc_t.xmdc003, 
   xmdc003_desc LIKE type_t.chr500, 
   xmdc054 LIKE xmdc_t.xmdc054, 
   xmdc036 LIKE xmdc_t.xmdc036, 
   xmdc036_desc LIKE type_t.chr500, 
   xmdc037 LIKE xmdc_t.xmdc037, 
   xmdc037_desc LIKE type_t.chr500, 
   xmdc038 LIKE xmdc_t.xmdc038, 
   xmdc038_desc LIKE type_t.chr500, 
   xmdc039 LIKE xmdc_t.xmdc039, 
   xmdc035 LIKE xmdc_t.xmdc035, 
   xmdc040 LIKE xmdc_t.xmdc040, 
   xmdc041 LIKE xmdc_t.xmdc041, 
   xmdc042 LIKE xmdc_t.xmdc042, 
   xmdc043 LIKE xmdc_t.xmdc043, 
   xmdc044 LIKE xmdc_t.xmdc044, 
   xmdc055 LIKE xmdc_t.xmdc055, 
   xmdc056 LIKE xmdc_t.xmdc056
       END RECORD
PRIVATE TYPE type_g_xmdc3_d RECORD
       xmddseq LIKE xmdd_t.xmddseq, 
   xmddseq1 LIKE xmdd_t.xmddseq1, 
   xmdd003 LIKE xmdd_t.xmdd003, 
   xmdd001 LIKE xmdd_t.xmdd001, 
   xmdd040 LIKE xmdd_t.xmdd040, 
   xmdd001_desc LIKE type_t.chr500, 
   xmdd001_desc_desc LIKE type_t.chr500, 
   xmdd002 LIKE xmdd_t.xmdd002, 
   xmdd002_desc LIKE type_t.chr500, 
   xmdd004 LIKE xmdd_t.xmdd004, 
   xmdd004_desc LIKE type_t.chr500, 
   xmdd005 LIKE xmdd_t.xmdd005, 
   xmdc012 LIKE xmdc_t.xmdc012, 
   xmdc013 LIKE xmdc_t.xmdc013, 
   xmddseq2 LIKE xmdd_t.xmddseq2, 
   xmdd006 LIKE xmdd_t.xmdd006, 
   xmdd024 LIKE xmdd_t.xmdd024, 
   xmdd024_desc LIKE type_t.chr500, 
   xmdd025 LIKE xmdd_t.xmdd025, 
   xmdd011 LIKE xmdd_t.xmdd011, 
   xmdd012 LIKE xmdd_t.xmdd012, 
   xmdd010 LIKE xmdd_t.xmdd010, 
   xmdd010_desc LIKE type_t.chr500, 
   xmdd013 LIKE xmdd_t.xmdd013, 
   xmdd009 LIKE xmdd_t.xmdd009, 
   xmdd031 LIKE xmdd_t.xmdd031, 
   xmdd014 LIKE xmdd_t.xmdd014, 
   xmdd015 LIKE xmdd_t.xmdd015, 
   xmdd016 LIKE xmdd_t.xmdd016, 
   xmdd017 LIKE xmdd_t.xmdd017, 
   xmdd026 LIKE xmdd_t.xmdd026, 
   xmdd026_desc LIKE type_t.chr500, 
   xmdd027 LIKE xmdd_t.xmdd027, 
   xmdd018 LIKE xmdd_t.xmdd018, 
   xmdd019 LIKE xmdd_t.xmdd019, 
   xmdd019_desc LIKE type_t.chr500, 
   xmdd020 LIKE xmdd_t.xmdd020, 
   xmdd028 LIKE xmdd_t.xmdd028, 
   xmdd029 LIKE xmdd_t.xmdd029, 
   xmdd030 LIKE xmdd_t.xmdd030, 
   xmdd021 LIKE xmdd_t.xmdd021, 
   xmdd022 LIKE xmdd_t.xmdd022, 
   xmdd022_desc LIKE type_t.chr500, 
   xmdd023 LIKE xmdd_t.xmdd023, 
   xmddsite LIKE xmdd_t.xmddsite, 
   xmdd036 LIKE xmdd_t.xmdd036, 
   xmdd037 LIKE xmdd_t.xmdd037, 
   xmdd038 LIKE xmdd_t.xmdd038, 
   xmdd039 LIKE xmdd_t.xmdd039
       END RECORD
PRIVATE TYPE type_g_xmdc4_d RECORD
       xmdqdocno LIKE type_t.chr20, 
   xmdqseq LIKE type_t.num10, 
   xmdqseq1 LIKE type_t.num10, 
   xmdq001 LIKE type_t.chr500, 
   xmdq001_desc LIKE type_t.chr500, 
   xmdq001_desc_desc LIKE type_t.chr500, 
   xmdq006 LIKE type_t.num20_6, 
   xmdq007 LIKE type_t.num20_6, 
   xmdq008 LIKE type_t.chr10, 
   xmdq008_desc LIKE type_t.chr500, 
   xmdq009 LIKE type_t.num20_6, 
   xmdq002 LIKE type_t.chr500, 
   xmdq002_desc LIKE type_t.chr500, 
   xmdq002_desc_desc LIKE type_t.chr500, 
   xmdq004 LIKE type_t.chr10, 
   xmdq005 LIKE type_t.chr10, 
   xmdqsite LIKE type_t.chr10
       END RECORD
PRIVATE TYPE type_g_xmdc5_d RECORD
       xmdb001 LIKE xmdb_t.xmdb001, 
   xmdb002 LIKE xmdb_t.xmdb002, 
   xmdb002_desc LIKE type_t.chr500, 
   xmdb003 LIKE xmdb_t.xmdb003, 
   xmdb004 LIKE xmdb_t.xmdb004, 
   xmdb005 LIKE xmdb_t.xmdb005, 
   xmdb006 LIKE xmdb_t.xmdb006, 
   xmdb016 LIKE xmdb_t.xmdb016, 
   xmdb017 LIKE xmdb_t.xmdb017, 
   xmdb007 LIKE xmdb_t.xmdb007, 
   xmdb008 LIKE xmdb_t.xmdb008, 
   xmdb009 LIKE xmdb_t.xmdb009, 
   xmdbsite LIKE xmdb_t.xmdbsite
       END RECORD
PRIVATE TYPE type_g_xmdc6_d RECORD
       xmdsseq LIKE xmds_t.xmdsseq, 
   xmds001 LIKE xmds_t.xmds001, 
   xmds001_desc LIKE type_t.chr500, 
   xmds001_desc_desc LIKE type_t.chr500, 
   xmds002 LIKE xmds_t.xmds002, 
   xmds002_desc LIKE type_t.chr500, 
   xmds003 LIKE xmds_t.xmds003, 
   xmds004 LIKE xmds_t.xmds004, 
   xmds005 LIKE xmds_t.xmds005, 
   xmds005_desc LIKE type_t.chr500, 
   xmds006 LIKE xmds_t.xmds006, 
   xmdssite LIKE xmds_t.xmdssite
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_xmdadocno LIKE xmda_t.xmdadocno,
      b_xmdadocdt LIKE xmda_t.xmdadocdt,
      b_xmda001 LIKE xmda_t.xmda001,
      b_xmda002 LIKE xmda_t.xmda002,
   b_xmda002_desc LIKE type_t.chr80,
      b_xmda003 LIKE xmda_t.xmda003,
   b_xmda003_desc LIKE type_t.chr80,
      b_xmda004 LIKE xmda_t.xmda004,
   b_xmda004_desc LIKE type_t.chr80
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>} 
#end add-point
       
#模組變數(Module Variables)
DEFINE g_xmda_m          type_g_xmda_m
DEFINE g_xmda_m_t        type_g_xmda_m
DEFINE g_xmda_m_o        type_g_xmda_m
DEFINE g_xmda_m_mask_o   type_g_xmda_m #轉換遮罩前資料
DEFINE g_xmda_m_mask_n   type_g_xmda_m #轉換遮罩後資料
 
   DEFINE g_xmdadocno_t LIKE xmda_t.xmdadocno
 
 
DEFINE g_xmdc_d          DYNAMIC ARRAY OF type_g_xmdc_d
DEFINE g_xmdc_d_t        type_g_xmdc_d
DEFINE g_xmdc_d_o        type_g_xmdc_d
DEFINE g_xmdc_d_mask_o   DYNAMIC ARRAY OF type_g_xmdc_d #轉換遮罩前資料
DEFINE g_xmdc_d_mask_n   DYNAMIC ARRAY OF type_g_xmdc_d #轉換遮罩後資料
DEFINE g_xmdc2_d          DYNAMIC ARRAY OF type_g_xmdc2_d
DEFINE g_xmdc2_d_t        type_g_xmdc2_d
DEFINE g_xmdc2_d_o        type_g_xmdc2_d
DEFINE g_xmdc2_d_mask_o   DYNAMIC ARRAY OF type_g_xmdc2_d #轉換遮罩前資料
DEFINE g_xmdc2_d_mask_n   DYNAMIC ARRAY OF type_g_xmdc2_d #轉換遮罩後資料
DEFINE g_xmdc3_d          DYNAMIC ARRAY OF type_g_xmdc3_d
DEFINE g_xmdc3_d_t        type_g_xmdc3_d
DEFINE g_xmdc3_d_o        type_g_xmdc3_d
DEFINE g_xmdc3_d_mask_o   DYNAMIC ARRAY OF type_g_xmdc3_d #轉換遮罩前資料
DEFINE g_xmdc3_d_mask_n   DYNAMIC ARRAY OF type_g_xmdc3_d #轉換遮罩後資料
DEFINE g_xmdc4_d          DYNAMIC ARRAY OF type_g_xmdc4_d
DEFINE g_xmdc4_d_t        type_g_xmdc4_d
DEFINE g_xmdc4_d_o        type_g_xmdc4_d
DEFINE g_xmdc4_d_mask_o   DYNAMIC ARRAY OF type_g_xmdc4_d #轉換遮罩前資料
DEFINE g_xmdc4_d_mask_n   DYNAMIC ARRAY OF type_g_xmdc4_d #轉換遮罩後資料
DEFINE g_xmdc5_d          DYNAMIC ARRAY OF type_g_xmdc5_d
DEFINE g_xmdc5_d_t        type_g_xmdc5_d
DEFINE g_xmdc5_d_o        type_g_xmdc5_d
DEFINE g_xmdc5_d_mask_o   DYNAMIC ARRAY OF type_g_xmdc5_d #轉換遮罩前資料
DEFINE g_xmdc5_d_mask_n   DYNAMIC ARRAY OF type_g_xmdc5_d #轉換遮罩後資料
DEFINE g_xmdc6_d          DYNAMIC ARRAY OF type_g_xmdc6_d
DEFINE g_xmdc6_d_t        type_g_xmdc6_d
DEFINE g_xmdc6_d_o        type_g_xmdc6_d
DEFINE g_xmdc6_d_mask_o   DYNAMIC ARRAY OF type_g_xmdc6_d #轉換遮罩前資料
DEFINE g_xmdc6_d_mask_n   DYNAMIC ARRAY OF type_g_xmdc6_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
DEFINE g_wc2_table4   STRING
 
DEFINE g_wc2_table5   STRING
 
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"
{<point name="global.argv"/>}
#end add-point

{</section>}

{<section id="axmt500.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   {<point name="main.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   {<point name="main.define"/>}
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axm","")
 
   #add-point:作業初始化 name="main.init"
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT xmdadocno,xmda001,'',xmdadocdt,xmda004,'',xmda002,'',xmda003,'',xmdasite, 
       xmdastus,xmda005,xmda006,xmda007,xmda008,xmda033,xmda027,'',xmda009,'',xmda010,'',xmda011,'', 
       xmda012,xmda013,xmda035,'',xmda015,'',xmda016,xmda017,'',xmda018,'',xmda019,xmda023,'',xmda032, 
       '',xmda071,xmda050,'',xmda021,'',xmda022,'',xmda034,'',xmda203,'',xmda024,'',xmda048,xmda052, 
       xmda049,xmda044,'',xmda030,xmda031,xmda045,xmda046,xmda047,xmda028,xmda043,xmda025,'','',xmda026, 
       '','',xmda020,'',xmda037,'',xmda038,'',xmda036,'',xmda039,xmda041,xmda042,xmdaownid,'',xmdaowndp, 
       '',xmdacrtid,'',xmdacrtdp,'',xmdacrtdt,xmdamodid,'',xmdamoddt,xmdacnfid,'',xmdacnfdt", 
                      " FROM xmda_t",
                      " WHERE xmdaent= ? AND xmdadocno=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt500_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.xmdadocno,t0.xmda001,t0.xmdadocdt,t0.xmda004,t0.xmda002,t0.xmda003, 
       t0.xmdasite,t0.xmdastus,t0.xmda005,t0.xmda006,t0.xmda007,t0.xmda008,t0.xmda033,t0.xmda027,t0.xmda009, 
       t0.xmda010,t0.xmda011,t0.xmda012,t0.xmda013,t0.xmda035,t0.xmda015,t0.xmda016,t0.xmda017,t0.xmda018, 
       t0.xmda019,t0.xmda023,t0.xmda032,t0.xmda071,t0.xmda050,t0.xmda021,t0.xmda022,t0.xmda034,t0.xmda203, 
       t0.xmda024,t0.xmda048,t0.xmda052,t0.xmda049,t0.xmda044,t0.xmda030,t0.xmda031,t0.xmda045,t0.xmda046, 
       t0.xmda047,t0.xmda028,t0.xmda043,t0.xmda025,t0.xmda026,t0.xmda020,t0.xmda037,t0.xmda038,t0.xmda036, 
       t0.xmda039,t0.xmda041,t0.xmda042,t0.xmdaownid,t0.xmdaowndp,t0.xmdacrtid,t0.xmdacrtdp,t0.xmdacrtdt, 
       t0.xmdamodid,t0.xmdamoddt,t0.xmdacnfid,t0.xmdacnfdt,t1.pmaal004 ,t2.ooag011 ,t3.ooefl003 ,t4.ooibl004 , 
       t5.oocql004 ,t6.ooail003 ,t7.xmahl003 ,t8.ooidl003 ,t9.oojdl003 ,t10.oocql004 ,t11.icaal003 , 
       t12.pmaal004 ,t13.pmaal004 ,t14.pmaal004 ,t15.pmaal004 ,t16.oocql004 ,t17.xmaol004 ,t18.oofb011 , 
       t19.oofb011 ,t20.oocql004 ,t21.pmaal004 ,t22.ooag011 ,t23.ooefl003 ,t24.ooag011 ,t25.ooefl003 , 
       t26.ooag011 ,t27.ooag011",
               " FROM xmda_t t0",
                              " LEFT JOIN pmaal_t t1 ON t1.pmaalent="||g_enterprise||" AND t1.pmaal001=t0.xmda004 AND t1.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent="||g_enterprise||" AND t2.ooag001=t0.xmda002  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent="||g_enterprise||" AND t3.ooefl001=t0.xmda003 AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooibl_t t4 ON t4.ooiblent="||g_enterprise||" AND t4.ooibl002=t0.xmda009 AND t4.ooibl003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t5 ON t5.oocqlent="||g_enterprise||" AND t5.oocql001='238' AND t5.oocql002=t0.xmda010 AND t5.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooail_t t6 ON t6.ooailent="||g_enterprise||" AND t6.ooail001=t0.xmda015 AND t6.ooail002='"||g_dlang||"' ",
               " LEFT JOIN xmahl_t t7 ON t7.xmahlent="||g_enterprise||" AND t7.xmahl001=t0.xmda017 AND t7.xmahl002='"||g_dlang||"' ",
               " LEFT JOIN ooidl_t t8 ON t8.ooidlent="||g_enterprise||" AND t8.ooidl001=t0.xmda018 AND t8.ooidl002='"||g_dlang||"' ",
               " LEFT JOIN oojdl_t t9 ON t9.oojdlent="||g_enterprise||" AND t9.oojdl001=t0.xmda023 AND t9.oojdl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t10 ON t10.oocqlent="||g_enterprise||" AND t10.oocql001='297' AND t10.oocql002=t0.xmda032 AND t10.oocql003='"||g_dlang||"' ",
               " LEFT JOIN icaal_t t11 ON t11.icaalent="||g_enterprise||" AND t11.icaal001=t0.xmda050 AND t11.icaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t12 ON t12.pmaalent="||g_enterprise||" AND t12.pmaal001=t0.xmda021 AND t12.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t13 ON t13.pmaalent="||g_enterprise||" AND t13.pmaal001=t0.xmda022 AND t13.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t14 ON t14.pmaalent="||g_enterprise||" AND t14.pmaal001=t0.xmda034 AND t14.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t15 ON t15.pmaalent="||g_enterprise||" AND t15.pmaal001=t0.xmda203 AND t15.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t16 ON t16.oocqlent="||g_enterprise||" AND t16.oocql001='295' AND t16.oocql002=t0.xmda024 AND t16.oocql003='"||g_dlang||"' ",
               " LEFT JOIN xmaol_t t17 ON t17.xmaolent="||g_enterprise||" AND t17.xmaol001=t0.xmda004 AND t17.xmaol002=t0.xmda044 AND t17.xmaol003='"||g_dlang||"' ",
               " LEFT JOIN oofb_t t18 ON t18.oofbent="||g_enterprise||" AND t18.oofb001=t0.xmda025  ",
               " LEFT JOIN oofb_t t19 ON t19.oofbent="||g_enterprise||" AND t19.oofb001=t0.xmda026  ",
               " LEFT JOIN oocql_t t20 ON t20.oocqlent="||g_enterprise||" AND t20.oocql001='263' AND t20.oocql002=t0.xmda020 AND t20.oocql003='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t21 ON t21.pmaalent="||g_enterprise||" AND t21.pmaal001=t0.xmda036 AND t21.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t22 ON t22.ooagent="||g_enterprise||" AND t22.ooag001=t0.xmdaownid  ",
               " LEFT JOIN ooefl_t t23 ON t23.ooeflent="||g_enterprise||" AND t23.ooefl001=t0.xmdaowndp AND t23.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t24 ON t24.ooagent="||g_enterprise||" AND t24.ooag001=t0.xmdacrtid  ",
               " LEFT JOIN ooefl_t t25 ON t25.ooeflent="||g_enterprise||" AND t25.ooefl001=t0.xmdacrtdp AND t25.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t26 ON t26.ooagent="||g_enterprise||" AND t26.ooag001=t0.xmdamodid  ",
               " LEFT JOIN ooag_t t27 ON t27.ooagent="||g_enterprise||" AND t27.ooag001=t0.xmdacnfid  ",
 
               " WHERE t0.xmdaent = " ||g_enterprise|| " AND t0.xmdadocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE axmt500_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axmt500 WITH FORM cl_ap_formpath("axm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axmt500_init()   
 
      #進入選單 Menu (="N")
      CALL axmt500_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axmt500
      
   END IF 
   
   CLOSE axmt500_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 

{</section>}

{<section id="axmt500.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION axmt500_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   {<point name="init.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   {<point name="init.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   {<point name="init.pre_function"/>}
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
   LET g_detail_idx_list[4] = 1
   LET g_detail_idx_list[5] = 1
   LET g_detail_idx_list[6] = 1
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('xmdastus','13','N,Y,A,D,R,W,C,H,UH,X')
 
      CALL cl_set_combo_scc('xmda005','2063') 
   CALL cl_set_combo_scc('xmda006','2064') 
   CALL cl_set_combo_scc('xmda007','2065') 
   CALL cl_set_combo_scc('xmda048','2085') 
   CALL cl_set_combo_scc('xmda049','2084') 
   CALL cl_set_combo_scc('xmda039','8321') 
   CALL cl_set_combo_scc('xmdc019','2055') 
   CALL cl_set_combo_scc('xmdc045','2035') 
   CALL cl_set_combo_scc('xmdc020','2036') 
   CALL cl_set_combo_scc('xmdc032','2097') 
   CALL cl_set_combo_scc('xmdc035','2039') 
   CALL cl_set_combo_scc('xmdc040','2067') 
   CALL cl_set_combo_scc('xmdd003','2055') 
   CALL cl_set_combo_scc('xmdd009','2057') 
   CALL cl_set_combo_scc('xmdd017','2058') 
   CALL cl_set_combo_scc('xmdb016','3015') 
   CALL cl_set_combo_scc('xmdb017','3016') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1','2',","1")
   CALL g_idx_group.addAttribute("'3',","1")
   CALL g_idx_group.addAttribute("'4',","1")
   CALL g_idx_group.addAttribute("'5',","1")
   CALL g_idx_group.addAttribute("'6',","1")
   CALL g_idx_group.addAttribute("","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL axmt500_default_search()
    
END FUNCTION

{</section>}

{<section id="axmt500.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION axmt500_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   {<point name="ui_dialog.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   {<point name="ui_dialog.define"/>} 
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   {<point name="ui_dialog.pre_function"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL axmt500_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_xmda_m.* TO NULL
         CALL g_xmdc_d.clear()
         CALL g_xmdc2_d.clear()
         CALL g_xmdc3_d.clear()
         CALL g_xmdc4_d.clear()
         CALL g_xmdc5_d.clear()
         CALL g_xmdc6_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL axmt500_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL axmt500_fetch('') # reload data
               LET l_ac = 1
               CALL axmt500_ui_detailshow() #Setting the current row 
         
               CALL axmt500_idx_chk()
               #NEXT FIELD xmdcseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_xmdc_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axmt500_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1','2',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1','2',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL axmt500_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_xmdc2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axmt500_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[2] = l_ac
               CALL g_idx_group.addAttribute("'3',",l_ac)
               
               #add-point:page2, before row動作 name="ui_dialog.body2.before_row"
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL axmt500_idx_chk()
               #add-point:page2自定義行為 name="ui_dialog.body2.before_display"
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為 name="ui_dialog.body2.action"
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_xmdc3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axmt500_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[3] = l_ac
               CALL g_idx_group.addAttribute("'4',",l_ac)
               
               #add-point:page3, before row動作 name="ui_dialog.body3.before_row"
               {<point name="ui_dialog.body3.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'4',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
               #顯示單身筆數
               CALL axmt500_idx_chk()
               #add-point:page3自定義行為 name="ui_dialog.body3.before_display"
               {<point name="ui_dialog.body3.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為 name="ui_dialog.body3.action"
            {<point name="ui_dialog.body3.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_xmdc4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axmt500_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[4] = l_ac
               CALL g_idx_group.addAttribute("'5',",l_ac)
               
               #add-point:page4, before row動作 name="ui_dialog.body4.before_row"
               {<point name="ui_dialog.body4.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'5',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_current_page = 4
               #顯示單身筆數
               CALL axmt500_idx_chk()
               #add-point:page4自定義行為 name="ui_dialog.body4.before_display"
               {<point name="ui_dialog.body4.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_4)
            
         
            #add-point:page4自定義行為 name="ui_dialog.body4.action"
            {<point name="ui_dialog.body4.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_xmdc5_d TO s_detail5.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axmt500_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[5] = l_ac
               CALL g_idx_group.addAttribute("'6',",l_ac)
               
               #add-point:page5, before row動作 name="ui_dialog.body5.before_row"
               {<point name="ui_dialog.body5.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'6',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               LET g_current_page = 5
               #顯示單身筆數
               CALL axmt500_idx_chk()
               #add-point:page5自定義行為 name="ui_dialog.body5.before_display"
               {<point name="ui_dialog.body5.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_5)
            
         
            #add-point:page5自定義行為 name="ui_dialog.body5.action"
            {<point name="ui_dialog.body5.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_xmdc6_d TO s_detail6.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axmt500_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail6")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[6] = l_ac
               CALL g_idx_group.addAttribute("",l_ac)
               
               #add-point:page6, before row動作 name="ui_dialog.body6.before_row"
               {<point name="ui_dialog.body6.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue(""))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail6")
               LET g_current_page = 6
               #顯示單身筆數
               CALL axmt500_idx_chk()
               #add-point:page6自定義行為 name="ui_dialog.body6.before_display"
               {<point name="ui_dialog.body6.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_6)
            
         
            #add-point:page6自定義行為 name="ui_dialog.body6.action"
            {<point name="ui_dialog.body6.action"/>}
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL axmt500_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL axmt500_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL axmt500_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL axmt500_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         {<point name="ui_dialog.more_action"/>}
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL axmt500_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL axmt500_set_act_visible()   
            CALL axmt500_set_act_no_visible()
            IF NOT (g_xmda_m.xmdadocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " xmdaent = " ||g_enterprise|| " AND",
                                  " xmdadocno = '", g_xmda_m.xmdadocno, "' "
 
               #填到對應位置
               CALL axmt500_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:3)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status name="menu.bpm_status"
            {<point name="menu.bpm_status" />}
            #END add-point
 
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
               INITIALIZE g_wc2_table4 TO NULL
 
               INITIALIZE g_wc2_table5 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "xmda_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmdc_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmdd_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "xmdq_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "xmdb_t" 
                        LET g_wc2_table4 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "xmds_t" 
                        LET g_wc2_table5 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
                  OR NOT cl_null(g_wc2_table4)
 
                  OR NOT cl_null(g_wc2_table5)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
                  IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
                  END IF
 
                  IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL axmt500_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
               INITIALIZE g_wc2_table4 TO NULL
 
               INITIALIZE g_wc2_table5 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "xmda_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmdc_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmdd_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "xmdq_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "xmdb_t" 
                        LET g_wc2_table4 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "xmds_t" 
                        LET g_wc2_table5 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
                  OR NOT cl_null(g_wc2_table4)
 
                  OR NOT cl_null(g_wc2_table5)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
                  IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
                  END IF
 
                  IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL axmt500_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code = "-100" 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL axmt500_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:4)
            #過濾瀏覽頁資料
            ON ACTION filter
               LET g_action_choice = "fetch"
               #add-point:filter action name="ui_dialog.action.filter"
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL axmt500_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL axmt500_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt500_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL axmt500_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt500_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL axmt500_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt500_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL axmt500_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt500_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL axmt500_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt500_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_xmdc_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_xmdc2_d)
                  LET g_export_id[2]   = "s_detail2"
                  LET g_export_node[3] = base.typeInfo.create(g_xmdc3_d)
                  LET g_export_id[3]   = "s_detail3"
                  LET g_export_node[4] = base.typeInfo.create(g_xmdc4_d)
                  LET g_export_id[4]   = "s_detail4"
                  LET g_export_node[5] = base.typeInfo.create(g_xmdc5_d)
                  LET g_export_id[5]   = "s_detail5"
                  LET g_export_node[6] = base.typeInfo.create(g_xmdc6_d)
                  LET g_export_id[6]   = "s_detail6"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD xmdcseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL axmt500_modify()
               #add-point:ON ACTION modify name="menu.modify"
               {<point name="menu.modify" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL axmt500_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               {<point name="menu.modify_detail" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION make_apmt400
            LET g_action_choice="make_apmt400"
            IF cl_auth_chk_act("make_apmt400") THEN
               
               #add-point:ON ACTION make_apmt400 name="menu.make_apmt400"
               {<point name="menu.make_apmt400" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_apmi004_01
            LET g_action_choice="open_apmi004_01"
            IF cl_auth_chk_act("open_apmi004_01") THEN
               
               #add-point:ON ACTION open_apmi004_01 name="menu.open_apmi004_01"
               {<point name="menu.open_apmi004_01" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL axmt500_delete()
               #add-point:ON ACTION delete name="menu.delete"
               {<point name="menu.delete" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL axmt500_insert()
               #add-point:ON ACTION insert name="menu.insert"
               {<point name="menu.insert" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_axmq140
            LET g_action_choice="open_axmq140"
            IF cl_auth_chk_act("open_axmq140") THEN
               
               #add-point:ON ACTION open_axmq140 name="menu.open_axmq140"
               {<point name="menu.open_axmq140" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_memo
            LET g_action_choice="open_memo"
            IF cl_auth_chk_act("open_memo") THEN
               
               #add-point:ON ACTION open_memo name="menu.open_memo"
               {<point name="menu.open_memo" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_axmt500_03
            LET g_action_choice="open_axmt500_03"
            IF cl_auth_chk_act("open_axmt500_03") THEN
               
               #add-point:ON ACTION open_axmt500_03 name="menu.open_axmt500_03"
               {<point name="menu.open_axmt500_03" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               {<point name="menu.output" mark="Y"/>}
               #END add-point
               &include "erp/axm/axmt500_rep.4gl"
               #add-point:ON ACTION output.after name="menu.after_output"
               {<point name="menu.after_output" />}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION quickprint
            LET g_action_choice="quickprint"
            IF cl_auth_chk_act("quickprint") THEN
               
               #add-point:ON ACTION quickprint name="menu.quickprint"
               {<point name="menu.quickprint" mark="Y"/>}
               #END add-point
               &include "erp/axm/axmt500_rep.4gl"
               #add-point:ON ACTION quickprint.after name="menu.after_quickprint"
               {<point name="menu.after_quickprint" />}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL axmt500_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
               {<point name="menu.reproduce" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION get_price
            LET g_action_choice="get_price"
            IF cl_auth_chk_act("get_price") THEN
               
               #add-point:ON ACTION get_price name="menu.get_price"
               {<point name="menu.get_price" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_axmt500_05
            LET g_action_choice="open_axmt500_05"
            IF cl_auth_chk_act("open_axmt500_05") THEN
               
               #add-point:ON ACTION open_axmt500_05 name="menu.open_axmt500_05"
               {<point name="menu.open_axmt500_05" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL axmt500_query()
               #add-point:ON ACTION query name="menu.query"
               {<point name="menu.query" mark="Y"/>}
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
               CALL g_curr_diag.setCurrentRow("s_detail3",1)
               CALL g_curr_diag.setCurrentRow("s_detail4",1)
               CALL g_curr_diag.setCurrentRow("s_detail5",1)
               CALL g_curr_diag.setCurrentRow("s_detail6",1)
 
 
 
 
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION direct_orders
            LET g_action_choice="direct_orders"
            IF cl_auth_chk_act("direct_orders") THEN
               
               #add-point:ON ACTION direct_orders name="menu.direct_orders"
               {<point name="menu.direct_orders" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_axmt500_02
            LET g_action_choice="open_axmt500_02"
            IF cl_auth_chk_act("open_axmt500_02") THEN
               
               #add-point:ON ACTION open_axmt500_02 name="menu.open_axmt500_02"
               {<point name="menu.open_axmt500_02" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_xmdb
            LET g_action_choice="open_xmdb"
            IF cl_auth_chk_act("open_xmdb") THEN
               
               #add-point:ON ACTION open_xmdb name="menu.open_xmdb"
               {<point name="menu.open_xmdb" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION s_item_select
            LET g_action_choice="s_item_select"
            IF cl_auth_chk_act("s_item_select") THEN
               
               #add-point:ON ACTION s_item_select name="menu.s_item_select"
               {<point name="menu.s_item_select" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION prog_xmda002
            LET g_action_choice="prog_xmda002"
            IF cl_auth_chk_act("prog_xmda002") THEN
               
               #add-point:ON ACTION prog_xmda002 name="menu.prog_xmda002"
               {<point name="menu.prog_xmda002" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION prog_xmda008
            LET g_action_choice="prog_xmda008"
            IF cl_auth_chk_act("prog_xmda008") THEN
               
               #add-point:ON ACTION prog_xmda008 name="menu.prog_xmda008"
               {<point name="menu.prog_xmda008" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION prog_xmda027
            LET g_action_choice="prog_xmda027"
            IF cl_auth_chk_act("prog_xmda027") THEN
               
               #add-point:ON ACTION prog_xmda027 name="menu.prog_xmda027"
               {<point name="menu.prog_xmda027" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL axmt500_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL axmt500_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL axmt500_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_xmda_m.xmdadocdt)
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
 
      #(ver:79) ---add start---
      #add-point:ui_dialog段 after dialog name="ui_dialog.exit_dialog"
      {<point name="ui_dialog.exit_dialog"/>}
      #end add-point
      #(ver:79) --- add end ---
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION

{</section>}

{<section id="axmt500.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION axmt500_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   {<point name="browser_fill.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   {<point name="browser_fill.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT xmdadocno ",
                      " FROM xmda_t ",
                      " ",
                      " LEFT JOIN xmdc_t ON xmdcent = xmdaent AND xmdadocno = xmdcdocno ", "  ",
                      #add-point:browser_fill段sql(xmdc_t1) name="browser_fill.cnt.join.}"
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
                      " LEFT JOIN xmdd_t ON xmddent = xmdaent AND xmdadocno = xmdddocno", "  AND xmdcseq=xmddseq ",
                      #add-point:browser_fill段sql(xmdd_t1) name="browser_fill.cnt.join.xmdd_t1"
                      {<point name="browser_fill.cnt.join.xmdd_t1"/>}
                      #end add-point
 
                      " LEFT JOIN xmdq_t ON xmdqent = xmdaent AND xmdadocno = xmdqdocno", "  ",
                      #add-point:browser_fill段sql(xmdq_t1) name="browser_fill.cnt.join.xmdq_t1"
                      {<point name="browser_fill.cnt.join.xmdq_t1"/>}
                      #end add-point
 
                      " LEFT JOIN xmdb_t ON xmdbent = xmdaent AND xmdadocno = xmdbdocno", "  ",
                      #add-point:browser_fill段sql(xmdb_t1) name="browser_fill.cnt.join.xmdb_t1"
                      {<point name="browser_fill.cnt.join.xmdb_t1"/>}
                      #end add-point
 
                      " LEFT JOIN xmds_t ON xmdsent = xmdaent AND xmdadocno = xmdsdocno", "  ",
                      #add-point:browser_fill段sql(xmds_t1) name="browser_fill.cnt.join.xmds_t1"
                      {<point name="browser_fill.cnt.join.xmds_t1"/>}
                      #end add-point
 
 
 
                      " ", 
                      " ", 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
 
 
                      " WHERE xmdaent = " ||g_enterprise|| " AND xmdcent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("xmda_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT xmdadocno ",
                      " FROM xmda_t ", 
                      "  ",
                      "  ",
                      " WHERE xmdaent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("xmda_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code = 9035 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_xmda_m.* TO NULL
      CALL g_xmdc_d.clear()        
      CALL g_xmdc2_d.clear() 
      CALL g_xmdc3_d.clear() 
      CALL g_xmdc4_d.clear() 
      CALL g_xmdc5_d.clear() 
      CALL g_xmdc6_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.xmdadocno,t0.xmdadocdt,t0.xmda001,t0.xmda002,t0.xmda003,t0.xmda004 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.xmdastus,t0.xmdadocno,t0.xmdadocdt,t0.xmda001,t0.xmda002,t0.xmda003, 
          t0.xmda004,t1.ooag011 ,t2.ooefl003 ,t3.pmaal004 ",
                  " FROM xmda_t t0",
                  "  ",
                  "  LEFT JOIN xmdc_t ON xmdcent = xmdaent AND xmdadocno = xmdcdocno ", "  ", 
                  #add-point:browser_fill段sql(xmdc_t1) name="browser_fill.join.xmdc_t1"
                  {<point name="browser_fill.join.xmdc_t1"/>}
                  #end add-point
                  "  LEFT JOIN xmdd_t ON xmddent = xmdaent AND xmdadocno = xmdddocno", "  AND xmdcseq=xmddseq ", 
                  #add-point:browser_fill段sql(xmdd_t1) name="browser_fill.join.xmdd_t1"
                  {<point name="browser_fill.join.xmdd_t1"/>}
                  #end add-point
 
                  "  LEFT JOIN xmdq_t ON xmdqent = xmdaent AND xmdadocno = xmdqdocno", "  ", 
                  #add-point:browser_fill段sql(xmdq_t1) name="browser_fill.join.xmdq_t1"
                  {<point name="browser_fill.join.xmdq_t1"/>}
                  #end add-point
 
                  "  LEFT JOIN xmdb_t ON xmdbent = xmdaent AND xmdadocno = xmdbdocno", "  ", 
                  #add-point:browser_fill段sql(xmdb_t1) name="browser_fill.join.xmdb_t1"
                  {<point name="browser_fill.join.xmdb_t1"/>}
                  #end add-point
 
                  "  LEFT JOIN xmds_t ON xmdsent = xmdaent AND xmdadocno = xmdsdocno", "  ", 
                  #add-point:browser_fill段sql(xmds_t1) name="browser_fill.join.xmds_t1"
                  {<point name="browser_fill.join.xmds_t1"/>}
                  #end add-point
 
 
 
                  " ", 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
 
 
                                 " LEFT JOIN ooag_t t1 ON t1.ooagent="||g_enterprise||" AND t1.ooag001=t0.xmda002  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=t0.xmda003 AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t3 ON t3.pmaalent="||g_enterprise||" AND t3.pmaal001=t0.xmda004 AND t3.pmaal002='"||g_dlang||"' ",
 
                  " WHERE t0.xmdaent = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("xmda_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.xmdastus,t0.xmdadocno,t0.xmdadocdt,t0.xmda001,t0.xmda002,t0.xmda003, 
          t0.xmda004,t1.ooag011 ,t2.ooefl003 ,t3.pmaal004 ",
                  " FROM xmda_t t0",
                  "  ",
                                 " LEFT JOIN ooag_t t1 ON t1.ooagent="||g_enterprise||" AND t1.ooag001=t0.xmda002  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=t0.xmda003 AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t3 ON t3.pmaalent="||g_enterprise||" AND t3.pmaal001=t0.xmda004 AND t3.pmaal002='"||g_dlang||"' ",
 
                  " WHERE t0.xmdaent = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("xmda_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY xmdadocno ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"xmda_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      {<point name="browser_fill.open"/>}
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_xmdadocno,g_browser[g_cnt].b_xmdadocdt, 
          g_browser[g_cnt].b_xmda001,g_browser[g_cnt].b_xmda002,g_browser[g_cnt].b_xmda003,g_browser[g_cnt].b_xmda004, 
          g_browser[g_cnt].b_xmda002_desc,g_browser[g_cnt].b_xmda003_desc,g_browser[g_cnt].b_xmda004_desc 

         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
         {<point name="browser_fill.reference"/>}
         #end add-point
      
         #遮罩相關處理
         CALL axmt500_browser_mask()
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "C"
            LET g_browser[g_cnt].b_statepic = "stus/16/closed.png"
         WHEN "H"
            LET g_browser[g_cnt].b_statepic = "stus/16/hold.png"
         WHEN "UH"
            LET g_browser[g_cnt].b_statepic = "stus/16/unhold.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_xmdadocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION

{</section>}

{<section id="axmt500.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION axmt500_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   {<point name="ui_headershow.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   {<point name="ui_headershow.define"/>} 
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   {<point name="ui_headershow.pre_function"/>}
   #end add-point
   
   LET g_xmda_m.xmdadocno = g_browser[g_current_idx].b_xmdadocno   
 
   EXECUTE axmt500_master_referesh USING g_xmda_m.xmdadocno INTO g_xmda_m.xmdadocno,g_xmda_m.xmda001, 
       g_xmda_m.xmdadocdt,g_xmda_m.xmda004,g_xmda_m.xmda002,g_xmda_m.xmda003,g_xmda_m.xmdasite,g_xmda_m.xmdastus, 
       g_xmda_m.xmda005,g_xmda_m.xmda006,g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda033,g_xmda_m.xmda027, 
       g_xmda_m.xmda009,g_xmda_m.xmda010,g_xmda_m.xmda011,g_xmda_m.xmda012,g_xmda_m.xmda013,g_xmda_m.xmda035, 
       g_xmda_m.xmda015,g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda018,g_xmda_m.xmda019,g_xmda_m.xmda023, 
       g_xmda_m.xmda032,g_xmda_m.xmda071,g_xmda_m.xmda050,g_xmda_m.xmda021,g_xmda_m.xmda022,g_xmda_m.xmda034, 
       g_xmda_m.xmda203,g_xmda_m.xmda024,g_xmda_m.xmda048,g_xmda_m.xmda052,g_xmda_m.xmda049,g_xmda_m.xmda044, 
       g_xmda_m.xmda030,g_xmda_m.xmda031,g_xmda_m.xmda045,g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028, 
       g_xmda_m.xmda043,g_xmda_m.xmda025,g_xmda_m.xmda026,g_xmda_m.xmda020,g_xmda_m.xmda037,g_xmda_m.xmda038, 
       g_xmda_m.xmda036,g_xmda_m.xmda039,g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdaownid,g_xmda_m.xmdaowndp, 
       g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid,g_xmda_m.xmdamoddt, 
       g_xmda_m.xmdacnfid,g_xmda_m.xmdacnfdt,g_xmda_m.xmda004_desc,g_xmda_m.xmda002_desc,g_xmda_m.xmda003_desc, 
       g_xmda_m.xmda009_desc,g_xmda_m.xmda010_desc,g_xmda_m.xmda015_desc,g_xmda_m.xmda017_desc,g_xmda_m.xmda018_desc, 
       g_xmda_m.xmda023_desc,g_xmda_m.xmda032_desc,g_xmda_m.xmda050_desc,g_xmda_m.xmda021_desc,g_xmda_m.xmda022_desc, 
       g_xmda_m.xmda034_desc,g_xmda_m.xmda203_desc,g_xmda_m.xmda024_desc,g_xmda_m.xmda044_desc,g_xmda_m.xmda025_desc, 
       g_xmda_m.xmda026_desc,g_xmda_m.xmda020_desc,g_xmda_m.xmda036_desc,g_xmda_m.xmdaownid_desc,g_xmda_m.xmdaowndp_desc, 
       g_xmda_m.xmdacrtid_desc,g_xmda_m.xmdacrtdp_desc,g_xmda_m.xmdamodid_desc,g_xmda_m.xmdacnfid_desc 

   
   CALL axmt500_xmda_t_mask()
   CALL axmt500_show()
      
END FUNCTION

{</section>}

{<section id="axmt500.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION axmt500_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   {<point name="ui_detailshow.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   {<point name="ui_detailshow.define"/>} 
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail4",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail5",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail6",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION

{</section>}

{<section id="axmt500.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION axmt500_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   {<point name="ui_browser_refresh.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   {<point name="ui_browser_refresh.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   {<point name="ui_browser_refresh.pre_function"/>}
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_xmdadocno = g_xmda_m.xmdadocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION

{</section>}

{<section id="axmt500.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION axmt500_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   {<point name="cs.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   {<point name="cs.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   {<point name="cs.pre_function"/>}
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_xmda_m.* TO NULL
   CALL g_xmdc_d.clear()        
   CALL g_xmdc2_d.clear() 
   CALL g_xmdc3_d.clear() 
   CALL g_xmdc4_d.clear() 
   CALL g_xmdc5_d.clear() 
   CALL g_xmdc6_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
   INITIALIZE g_wc2_table3 TO NULL
 
   INITIALIZE g_wc2_table4 TO NULL
 
   INITIALIZE g_wc2_table5 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON xmdadocno,xmda001,xmdadocdt,xmda004,xmda002,xmda003,xmdastus,xmda005, 
          xmda006,xmda007,xmda008,xmda033,xmda027,xmda009,xmda010,xmda011,xmda012,xmda013,xmda035,xmda015, 
          xmda016,xmda017,xmda018,xmda019,xmda023,xmda032,xmda071,xmda050,xmda021,xmda022,xmda034,xmda203, 
          xmda024,xmda048,xmda052,xmda049,xmda044,xmda030,xmda031,xmda045,xmda046,xmda047,xmda028,xmda025, 
          oofb0171,xmda026,oofb0172,xmda020,xmda037,xmda037_desc,xmda038,xmda038_desc,xmda036,xmda039, 
          xmda041,xmda042,xmdaownid,xmdaowndp,xmdacrtid,xmdacrtdp,xmdacrtdt,xmdamodid,xmdamoddt,xmdacnfid, 
          xmdacnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<xmdacrtdt>>----
         AFTER FIELD xmdacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<xmdamoddt>>----
         AFTER FIELD xmdamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmdacnfdt>>----
         AFTER FIELD xmdacnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmdapstdt>>----
 
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.xmdadocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdadocno
            #add-point:ON ACTION controlp INFIELD xmdadocno name="construct.c.xmdadocno"
            {<point name="construct.c.xmdadocno" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdadocno
            #add-point:BEFORE FIELD xmdadocno name="construct.b.xmdadocno"
            {<point name="construct.b.xmdadocno" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdadocno
            
            #add-point:AFTER FIELD xmdadocno name="construct.a.xmdadocno"
            {<point name="construct.a.xmdadocno" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda001
            #add-point:BEFORE FIELD xmda001 name="construct.b.xmda001"
            {<point name="construct.b.xmda001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda001
            
            #add-point:AFTER FIELD xmda001 name="construct.a.xmda001"
            {<point name="construct.a.xmda001" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda001
            #add-point:ON ACTION controlp INFIELD xmda001 name="construct.c.xmda001"
            {<point name="construct.c.xmda001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdadocdt
            #add-point:BEFORE FIELD xmdadocdt name="construct.b.xmdadocdt"
            {<point name="construct.b.xmdadocdt" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdadocdt
            
            #add-point:AFTER FIELD xmdadocdt name="construct.a.xmdadocdt"
            {<point name="construct.a.xmdadocdt" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdadocdt
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdadocdt
            #add-point:ON ACTION controlp INFIELD xmdadocdt name="construct.c.xmdadocdt"
            {<point name="construct.c.xmdadocdt" />}
            #END add-point
 
 
         #Ctrlp:construct.c.xmda004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda004
            #add-point:ON ACTION controlp INFIELD xmda004 name="construct.c.xmda004"
            {<point name="construct.c.xmda004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda004
            #add-point:BEFORE FIELD xmda004 name="construct.b.xmda004"
            {<point name="construct.b.xmda004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda004
            
            #add-point:AFTER FIELD xmda004 name="construct.a.xmda004"
            {<point name="construct.a.xmda004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda002
            #add-point:ON ACTION controlp INFIELD xmda002 name="construct.c.xmda002"
            {<point name="construct.c.xmda002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda002
            #add-point:BEFORE FIELD xmda002 name="construct.b.xmda002"
            {<point name="construct.b.xmda002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda002
            
            #add-point:AFTER FIELD xmda002 name="construct.a.xmda002"
            {<point name="construct.a.xmda002" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda003
            #add-point:ON ACTION controlp INFIELD xmda003 name="construct.c.xmda003"
            {<point name="construct.c.xmda003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda003
            #add-point:BEFORE FIELD xmda003 name="construct.b.xmda003"
            {<point name="construct.b.xmda003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda003
            
            #add-point:AFTER FIELD xmda003 name="construct.a.xmda003"
            {<point name="construct.a.xmda003" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdastus
            #add-point:BEFORE FIELD xmdastus name="construct.b.xmdastus"
            {<point name="construct.b.xmdastus" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdastus
            
            #add-point:AFTER FIELD xmdastus name="construct.a.xmdastus"
            {<point name="construct.a.xmdastus" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdastus
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdastus
            #add-point:ON ACTION controlp INFIELD xmdastus name="construct.c.xmdastus"
            {<point name="construct.c.xmdastus" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda005
            #add-point:BEFORE FIELD xmda005 name="construct.b.xmda005"
            {<point name="construct.b.xmda005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda005
            
            #add-point:AFTER FIELD xmda005 name="construct.a.xmda005"
            {<point name="construct.a.xmda005" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda005
            #add-point:ON ACTION controlp INFIELD xmda005 name="construct.c.xmda005"
            {<point name="construct.c.xmda005" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda006
            #add-point:BEFORE FIELD xmda006 name="construct.b.xmda006"
            {<point name="construct.b.xmda006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda006
            
            #add-point:AFTER FIELD xmda006 name="construct.a.xmda006"
            {<point name="construct.a.xmda006" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda006
            #add-point:ON ACTION controlp INFIELD xmda006 name="construct.c.xmda006"
            {<point name="construct.c.xmda006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda007
            #add-point:BEFORE FIELD xmda007 name="construct.b.xmda007"
            {<point name="construct.b.xmda007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda007
            
            #add-point:AFTER FIELD xmda007 name="construct.a.xmda007"
            {<point name="construct.a.xmda007" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda007
            #add-point:ON ACTION controlp INFIELD xmda007 name="construct.c.xmda007"
            {<point name="construct.c.xmda007" />}
            #END add-point
 
 
         #Ctrlp:construct.c.xmda008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda008
            #add-point:ON ACTION controlp INFIELD xmda008 name="construct.c.xmda008"
            {<point name="construct.c.xmda008" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda008
            #add-point:BEFORE FIELD xmda008 name="construct.b.xmda008"
            {<point name="construct.b.xmda008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda008
            
            #add-point:AFTER FIELD xmda008 name="construct.a.xmda008"
            {<point name="construct.a.xmda008" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda033
            #add-point:BEFORE FIELD xmda033 name="construct.b.xmda033"
            {<point name="construct.b.xmda033" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda033
            
            #add-point:AFTER FIELD xmda033 name="construct.a.xmda033"
            {<point name="construct.a.xmda033" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda033
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda033
            #add-point:ON ACTION controlp INFIELD xmda033 name="construct.c.xmda033"
            {<point name="construct.c.xmda033" />}
            #END add-point
 
 
         #Ctrlp:construct.c.xmda027
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda027
            #add-point:ON ACTION controlp INFIELD xmda027 name="construct.c.xmda027"
            {<point name="construct.c.xmda027" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda027
            #add-point:BEFORE FIELD xmda027 name="construct.b.xmda027"
            {<point name="construct.b.xmda027" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda027
            
            #add-point:AFTER FIELD xmda027 name="construct.a.xmda027"
            {<point name="construct.a.xmda027" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda009
            #add-point:ON ACTION controlp INFIELD xmda009 name="construct.c.xmda009"
            {<point name="construct.c.xmda009" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda009
            #add-point:BEFORE FIELD xmda009 name="construct.b.xmda009"
            {<point name="construct.b.xmda009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda009
            
            #add-point:AFTER FIELD xmda009 name="construct.a.xmda009"
            {<point name="construct.a.xmda009" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda010
            #add-point:ON ACTION controlp INFIELD xmda010 name="construct.c.xmda010"
            {<point name="construct.c.xmda010" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda010
            #add-point:BEFORE FIELD xmda010 name="construct.b.xmda010"
            {<point name="construct.b.xmda010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda010
            
            #add-point:AFTER FIELD xmda010 name="construct.a.xmda010"
            {<point name="construct.a.xmda010" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda011
            #add-point:ON ACTION controlp INFIELD xmda011 name="construct.c.xmda011"
            {<point name="construct.c.xmda011" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda011
            #add-point:BEFORE FIELD xmda011 name="construct.b.xmda011"
            {<point name="construct.b.xmda011" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda011
            
            #add-point:AFTER FIELD xmda011 name="construct.a.xmda011"
            {<point name="construct.a.xmda011" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda012
            #add-point:BEFORE FIELD xmda012 name="construct.b.xmda012"
            {<point name="construct.b.xmda012" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda012
            
            #add-point:AFTER FIELD xmda012 name="construct.a.xmda012"
            {<point name="construct.a.xmda012" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda012
            #add-point:ON ACTION controlp INFIELD xmda012 name="construct.c.xmda012"
            {<point name="construct.c.xmda012" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda013
            #add-point:BEFORE FIELD xmda013 name="construct.b.xmda013"
            {<point name="construct.b.xmda013" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda013
            
            #add-point:AFTER FIELD xmda013 name="construct.a.xmda013"
            {<point name="construct.a.xmda013" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda013
            #add-point:ON ACTION controlp INFIELD xmda013 name="construct.c.xmda013"
            {<point name="construct.c.xmda013" />}
            #END add-point
 
 
         #Ctrlp:construct.c.xmda035
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda035
            #add-point:ON ACTION controlp INFIELD xmda035 name="construct.c.xmda035"
            {<point name="construct.c.xmda035" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda035
            #add-point:BEFORE FIELD xmda035 name="construct.b.xmda035"
            {<point name="construct.b.xmda035" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda035
            
            #add-point:AFTER FIELD xmda035 name="construct.a.xmda035"
            {<point name="construct.a.xmda035" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda015
            #add-point:ON ACTION controlp INFIELD xmda015 name="construct.c.xmda015"
            {<point name="construct.c.xmda015" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda015
            #add-point:BEFORE FIELD xmda015 name="construct.b.xmda015"
            {<point name="construct.b.xmda015" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda015
            
            #add-point:AFTER FIELD xmda015 name="construct.a.xmda015"
            {<point name="construct.a.xmda015" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda016
            #add-point:BEFORE FIELD xmda016 name="construct.b.xmda016"
            {<point name="construct.b.xmda016" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda016
            
            #add-point:AFTER FIELD xmda016 name="construct.a.xmda016"
            {<point name="construct.a.xmda016" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda016
            #add-point:ON ACTION controlp INFIELD xmda016 name="construct.c.xmda016"
            {<point name="construct.c.xmda016" />}
            #END add-point
 
 
         #Ctrlp:construct.c.xmda017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda017
            #add-point:ON ACTION controlp INFIELD xmda017 name="construct.c.xmda017"
            {<point name="construct.c.xmda017" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda017
            #add-point:BEFORE FIELD xmda017 name="construct.b.xmda017"
            {<point name="construct.b.xmda017" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda017
            
            #add-point:AFTER FIELD xmda017 name="construct.a.xmda017"
            {<point name="construct.a.xmda017" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda018
            #add-point:ON ACTION controlp INFIELD xmda018 name="construct.c.xmda018"
            {<point name="construct.c.xmda018" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda018
            #add-point:BEFORE FIELD xmda018 name="construct.b.xmda018"
            {<point name="construct.b.xmda018" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda018
            
            #add-point:AFTER FIELD xmda018 name="construct.a.xmda018"
            {<point name="construct.a.xmda018" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda019
            #add-point:BEFORE FIELD xmda019 name="construct.b.xmda019"
            {<point name="construct.b.xmda019" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda019
            
            #add-point:AFTER FIELD xmda019 name="construct.a.xmda019"
            {<point name="construct.a.xmda019" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda019
            #add-point:ON ACTION controlp INFIELD xmda019 name="construct.c.xmda019"
            {<point name="construct.c.xmda019" />}
            #END add-point
 
 
         #Ctrlp:construct.c.xmda023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda023
            #add-point:ON ACTION controlp INFIELD xmda023 name="construct.c.xmda023"
            {<point name="construct.c.xmda023" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda023
            #add-point:BEFORE FIELD xmda023 name="construct.b.xmda023"
            {<point name="construct.b.xmda023" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda023
            
            #add-point:AFTER FIELD xmda023 name="construct.a.xmda023"
            {<point name="construct.a.xmda023" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda032
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda032
            #add-point:ON ACTION controlp INFIELD xmda032 name="construct.c.xmda032"
            {<point name="construct.c.xmda032" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda032
            #add-point:BEFORE FIELD xmda032 name="construct.b.xmda032"
            {<point name="construct.b.xmda032" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda032
            
            #add-point:AFTER FIELD xmda032 name="construct.a.xmda032"
            {<point name="construct.a.xmda032" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda071
            #add-point:BEFORE FIELD xmda071 name="construct.b.xmda071"
            {<point name="construct.b.xmda071" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda071
            
            #add-point:AFTER FIELD xmda071 name="construct.a.xmda071"
            {<point name="construct.a.xmda071" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda071
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda071
            #add-point:ON ACTION controlp INFIELD xmda071 name="construct.c.xmda071"
            {<point name="construct.c.xmda071" />}
            #END add-point
 
 
         #Ctrlp:construct.c.xmda050
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda050
            #add-point:ON ACTION controlp INFIELD xmda050 name="construct.c.xmda050"
            {<point name="construct.c.xmda050" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda050
            #add-point:BEFORE FIELD xmda050 name="construct.b.xmda050"
            {<point name="construct.b.xmda050" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda050
            
            #add-point:AFTER FIELD xmda050 name="construct.a.xmda050"
            {<point name="construct.a.xmda050" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda021
            #add-point:ON ACTION controlp INFIELD xmda021 name="construct.c.xmda021"
            {<point name="construct.c.xmda021" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda021
            #add-point:BEFORE FIELD xmda021 name="construct.b.xmda021"
            {<point name="construct.b.xmda021" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda021
            
            #add-point:AFTER FIELD xmda021 name="construct.a.xmda021"
            {<point name="construct.a.xmda021" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda022
            #add-point:ON ACTION controlp INFIELD xmda022 name="construct.c.xmda022"
            {<point name="construct.c.xmda022" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda022
            #add-point:BEFORE FIELD xmda022 name="construct.b.xmda022"
            {<point name="construct.b.xmda022" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda022
            
            #add-point:AFTER FIELD xmda022 name="construct.a.xmda022"
            {<point name="construct.a.xmda022" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda034
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda034
            #add-point:ON ACTION controlp INFIELD xmda034 name="construct.c.xmda034"
            {<point name="construct.c.xmda034" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda034
            #add-point:BEFORE FIELD xmda034 name="construct.b.xmda034"
            {<point name="construct.b.xmda034" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda034
            
            #add-point:AFTER FIELD xmda034 name="construct.a.xmda034"
            {<point name="construct.a.xmda034" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda203
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda203
            #add-point:ON ACTION controlp INFIELD xmda203 name="construct.c.xmda203"
            {<point name="construct.c.xmda203" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda203
            #add-point:BEFORE FIELD xmda203 name="construct.b.xmda203"
            {<point name="construct.b.xmda203" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda203
            
            #add-point:AFTER FIELD xmda203 name="construct.a.xmda203"
            {<point name="construct.a.xmda203" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda024
            #add-point:ON ACTION controlp INFIELD xmda024 name="construct.c.xmda024"
            {<point name="construct.c.xmda024" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda024
            #add-point:BEFORE FIELD xmda024 name="construct.b.xmda024"
            {<point name="construct.b.xmda024" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda024
            
            #add-point:AFTER FIELD xmda024 name="construct.a.xmda024"
            {<point name="construct.a.xmda024" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda048
            #add-point:BEFORE FIELD xmda048 name="construct.b.xmda048"
            {<point name="construct.b.xmda048" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda048
            
            #add-point:AFTER FIELD xmda048 name="construct.a.xmda048"
            {<point name="construct.a.xmda048" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda048
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda048
            #add-point:ON ACTION controlp INFIELD xmda048 name="construct.c.xmda048"
            {<point name="construct.c.xmda048" />}
            #END add-point
 
 
         #Ctrlp:construct.c.xmda052
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda052
            #add-point:ON ACTION controlp INFIELD xmda052 name="construct.c.xmda052"
            {<point name="construct.c.xmda052" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda052
            #add-point:BEFORE FIELD xmda052 name="construct.b.xmda052"
            {<point name="construct.b.xmda052" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda052
            
            #add-point:AFTER FIELD xmda052 name="construct.a.xmda052"
            {<point name="construct.a.xmda052" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda049
            #add-point:BEFORE FIELD xmda049 name="construct.b.xmda049"
            {<point name="construct.b.xmda049" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda049
            
            #add-point:AFTER FIELD xmda049 name="construct.a.xmda049"
            {<point name="construct.a.xmda049" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda049
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda049
            #add-point:ON ACTION controlp INFIELD xmda049 name="construct.c.xmda049"
            {<point name="construct.c.xmda049" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda044
            #add-point:BEFORE FIELD xmda044 name="construct.b.xmda044"
            {<point name="construct.b.xmda044" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda044
            
            #add-point:AFTER FIELD xmda044 name="construct.a.xmda044"
            {<point name="construct.a.xmda044" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda044
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda044
            #add-point:ON ACTION controlp INFIELD xmda044 name="construct.c.xmda044"
            {<point name="construct.c.xmda044" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda030
            #add-point:BEFORE FIELD xmda030 name="construct.b.xmda030"
            {<point name="construct.b.xmda030" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda030
            
            #add-point:AFTER FIELD xmda030 name="construct.a.xmda030"
            {<point name="construct.a.xmda030" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda030
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda030
            #add-point:ON ACTION controlp INFIELD xmda030 name="construct.c.xmda030"
            {<point name="construct.c.xmda030" />}
            #END add-point
 
 
         #Ctrlp:construct.c.xmda031
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda031
            #add-point:ON ACTION controlp INFIELD xmda031 name="construct.c.xmda031"
            {<point name="construct.c.xmda031" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda031
            #add-point:BEFORE FIELD xmda031 name="construct.b.xmda031"
            {<point name="construct.b.xmda031" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda031
            
            #add-point:AFTER FIELD xmda031 name="construct.a.xmda031"
            {<point name="construct.a.xmda031" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda045
            #add-point:BEFORE FIELD xmda045 name="construct.b.xmda045"
            {<point name="construct.b.xmda045" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda045
            
            #add-point:AFTER FIELD xmda045 name="construct.a.xmda045"
            {<point name="construct.a.xmda045" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda045
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda045
            #add-point:ON ACTION controlp INFIELD xmda045 name="construct.c.xmda045"
            {<point name="construct.c.xmda045" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda046
            #add-point:BEFORE FIELD xmda046 name="construct.b.xmda046"
            {<point name="construct.b.xmda046" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda046
            
            #add-point:AFTER FIELD xmda046 name="construct.a.xmda046"
            {<point name="construct.a.xmda046" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda046
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda046
            #add-point:ON ACTION controlp INFIELD xmda046 name="construct.c.xmda046"
            {<point name="construct.c.xmda046" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda047
            #add-point:BEFORE FIELD xmda047 name="construct.b.xmda047"
            {<point name="construct.b.xmda047" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda047
            
            #add-point:AFTER FIELD xmda047 name="construct.a.xmda047"
            {<point name="construct.a.xmda047" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda047
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda047
            #add-point:ON ACTION controlp INFIELD xmda047 name="construct.c.xmda047"
            {<point name="construct.c.xmda047" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda028
            #add-point:BEFORE FIELD xmda028 name="construct.b.xmda028"
            {<point name="construct.b.xmda028" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda028
            
            #add-point:AFTER FIELD xmda028 name="construct.a.xmda028"
            {<point name="construct.a.xmda028" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda028
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda028
            #add-point:ON ACTION controlp INFIELD xmda028 name="construct.c.xmda028"
            {<point name="construct.c.xmda028" />}
            #END add-point
 
 
         #Ctrlp:construct.c.xmda025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda025
            #add-point:ON ACTION controlp INFIELD xmda025 name="construct.c.xmda025"
            {<point name="construct.c.xmda025" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda025
            #add-point:BEFORE FIELD xmda025 name="construct.b.xmda025"
            {<point name="construct.b.xmda025" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda025
            
            #add-point:AFTER FIELD xmda025 name="construct.a.xmda025"
            {<point name="construct.a.xmda025" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD oofb0171
            #add-point:BEFORE FIELD oofb0171 name="construct.b.oofb0171"
            {<point name="construct.b.oofb0171" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD oofb0171
            
            #add-point:AFTER FIELD oofb0171 name="construct.a.oofb0171"
            {<point name="construct.a.oofb0171" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.oofb0171
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD oofb0171
            #add-point:ON ACTION controlp INFIELD oofb0171 name="construct.c.oofb0171"
            {<point name="construct.c.oofb0171" />}
            #END add-point
 
 
         #Ctrlp:construct.c.xmda026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda026
            #add-point:ON ACTION controlp INFIELD xmda026 name="construct.c.xmda026"
            {<point name="construct.c.xmda026" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda026
            #add-point:BEFORE FIELD xmda026 name="construct.b.xmda026"
            {<point name="construct.b.xmda026" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda026
            
            #add-point:AFTER FIELD xmda026 name="construct.a.xmda026"
            {<point name="construct.a.xmda026" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD oofb0172
            #add-point:BEFORE FIELD oofb0172 name="construct.b.oofb0172"
            {<point name="construct.b.oofb0172" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD oofb0172
            
            #add-point:AFTER FIELD oofb0172 name="construct.a.oofb0172"
            {<point name="construct.a.oofb0172" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.oofb0172
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD oofb0172
            #add-point:ON ACTION controlp INFIELD oofb0172 name="construct.c.oofb0172"
            {<point name="construct.c.oofb0172" />}
            #END add-point
 
 
         #Ctrlp:construct.c.xmda020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda020
            #add-point:ON ACTION controlp INFIELD xmda020 name="construct.c.xmda020"
            {<point name="construct.c.xmda020" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda020
            #add-point:BEFORE FIELD xmda020 name="construct.b.xmda020"
            {<point name="construct.b.xmda020" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda020
            
            #add-point:AFTER FIELD xmda020 name="construct.a.xmda020"
            {<point name="construct.a.xmda020" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda037
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda037
            #add-point:ON ACTION controlp INFIELD xmda037 name="construct.c.xmda037"
            {<point name="construct.c.xmda037" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda037
            #add-point:BEFORE FIELD xmda037 name="construct.b.xmda037"
            {<point name="construct.b.xmda037" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda037
            
            #add-point:AFTER FIELD xmda037 name="construct.a.xmda037"
            {<point name="construct.a.xmda037" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda037_desc
            #add-point:BEFORE FIELD xmda037_desc name="construct.b.xmda037_desc"
            {<point name="construct.b.xmda037_desc" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda037_desc
            
            #add-point:AFTER FIELD xmda037_desc name="construct.a.xmda037_desc"
            {<point name="construct.a.xmda037_desc" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda037_desc
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda037_desc
            #add-point:ON ACTION controlp INFIELD xmda037_desc name="construct.c.xmda037_desc"
            {<point name="construct.c.xmda037_desc" />}
            #END add-point
 
 
         #Ctrlp:construct.c.xmda038
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda038
            #add-point:ON ACTION controlp INFIELD xmda038 name="construct.c.xmda038"
            {<point name="construct.c.xmda038" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda038
            #add-point:BEFORE FIELD xmda038 name="construct.b.xmda038"
            {<point name="construct.b.xmda038" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda038
            
            #add-point:AFTER FIELD xmda038 name="construct.a.xmda038"
            {<point name="construct.a.xmda038" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda038_desc
            #add-point:BEFORE FIELD xmda038_desc name="construct.b.xmda038_desc"
            {<point name="construct.b.xmda038_desc" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda038_desc
            
            #add-point:AFTER FIELD xmda038_desc name="construct.a.xmda038_desc"
            {<point name="construct.a.xmda038_desc" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda038_desc
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda038_desc
            #add-point:ON ACTION controlp INFIELD xmda038_desc name="construct.c.xmda038_desc"
            {<point name="construct.c.xmda038_desc" />}
            #END add-point
 
 
         #Ctrlp:construct.c.xmda036
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda036
            #add-point:ON ACTION controlp INFIELD xmda036 name="construct.c.xmda036"
            {<point name="construct.c.xmda036" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda036
            #add-point:BEFORE FIELD xmda036 name="construct.b.xmda036"
            {<point name="construct.b.xmda036" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda036
            
            #add-point:AFTER FIELD xmda036 name="construct.a.xmda036"
            {<point name="construct.a.xmda036" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda039
            #add-point:BEFORE FIELD xmda039 name="construct.b.xmda039"
            {<point name="construct.b.xmda039" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda039
            
            #add-point:AFTER FIELD xmda039 name="construct.a.xmda039"
            {<point name="construct.a.xmda039" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda039
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda039
            #add-point:ON ACTION controlp INFIELD xmda039 name="construct.c.xmda039"
            {<point name="construct.c.xmda039" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda041
            #add-point:BEFORE FIELD xmda041 name="construct.b.xmda041"
            {<point name="construct.b.xmda041" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda041
            
            #add-point:AFTER FIELD xmda041 name="construct.a.xmda041"
            {<point name="construct.a.xmda041" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda041
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda041
            #add-point:ON ACTION controlp INFIELD xmda041 name="construct.c.xmda041"
            {<point name="construct.c.xmda041" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda042
            #add-point:BEFORE FIELD xmda042 name="construct.b.xmda042"
            {<point name="construct.b.xmda042" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda042
            
            #add-point:AFTER FIELD xmda042 name="construct.a.xmda042"
            {<point name="construct.a.xmda042" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda042
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda042
            #add-point:ON ACTION controlp INFIELD xmda042 name="construct.c.xmda042"
            {<point name="construct.c.xmda042" />}
            #END add-point
 
 
         #Ctrlp:construct.c.xmdaownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdaownid
            #add-point:ON ACTION controlp INFIELD xmdaownid name="construct.c.xmdaownid"
            {<point name="construct.c.xmdaownid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdaownid
            #add-point:BEFORE FIELD xmdaownid name="construct.b.xmdaownid"
            {<point name="construct.b.xmdaownid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdaownid
            
            #add-point:AFTER FIELD xmdaownid name="construct.a.xmdaownid"
            {<point name="construct.a.xmdaownid" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdaowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdaowndp
            #add-point:ON ACTION controlp INFIELD xmdaowndp name="construct.c.xmdaowndp"
            {<point name="construct.c.xmdaowndp" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdaowndp
            #add-point:BEFORE FIELD xmdaowndp name="construct.b.xmdaowndp"
            {<point name="construct.b.xmdaowndp" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdaowndp
            
            #add-point:AFTER FIELD xmdaowndp name="construct.a.xmdaowndp"
            {<point name="construct.a.xmdaowndp" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdacrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdacrtid
            #add-point:ON ACTION controlp INFIELD xmdacrtid name="construct.c.xmdacrtid"
            {<point name="construct.c.xmdacrtid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdacrtid
            #add-point:BEFORE FIELD xmdacrtid name="construct.b.xmdacrtid"
            {<point name="construct.b.xmdacrtid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdacrtid
            
            #add-point:AFTER FIELD xmdacrtid name="construct.a.xmdacrtid"
            {<point name="construct.a.xmdacrtid" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdacrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdacrtdp
            #add-point:ON ACTION controlp INFIELD xmdacrtdp name="construct.c.xmdacrtdp"
            {<point name="construct.c.xmdacrtdp" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdacrtdp
            #add-point:BEFORE FIELD xmdacrtdp name="construct.b.xmdacrtdp"
            {<point name="construct.b.xmdacrtdp" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdacrtdp
            
            #add-point:AFTER FIELD xmdacrtdp name="construct.a.xmdacrtdp"
            {<point name="construct.a.xmdacrtdp" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdacrtdt
            #add-point:BEFORE FIELD xmdacrtdt name="construct.b.xmdacrtdt"
            {<point name="construct.b.xmdacrtdt" />}
            #END add-point
 
 
         #Ctrlp:construct.c.xmdamodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdamodid
            #add-point:ON ACTION controlp INFIELD xmdamodid name="construct.c.xmdamodid"
            {<point name="construct.c.xmdamodid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdamodid
            #add-point:BEFORE FIELD xmdamodid name="construct.b.xmdamodid"
            {<point name="construct.b.xmdamodid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdamodid
            
            #add-point:AFTER FIELD xmdamodid name="construct.a.xmdamodid"
            {<point name="construct.a.xmdamodid" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdamoddt
            #add-point:BEFORE FIELD xmdamoddt name="construct.b.xmdamoddt"
            {<point name="construct.b.xmdamoddt" />}
            #END add-point
 
 
         #Ctrlp:construct.c.xmdacnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdacnfid
            #add-point:ON ACTION controlp INFIELD xmdacnfid name="construct.c.xmdacnfid"
            {<point name="construct.c.xmdacnfid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdacnfid
            #add-point:BEFORE FIELD xmdacnfid name="construct.b.xmdacnfid"
            {<point name="construct.b.xmdacnfid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdacnfid
            
            #add-point:AFTER FIELD xmdacnfid name="construct.a.xmdacnfid"
            {<point name="construct.a.xmdacnfid" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdacnfdt
            #add-point:BEFORE FIELD xmdacnfdt name="construct.b.xmdacnfdt"
            {<point name="construct.b.xmdacnfdt" />}
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON xmdcseq,xmdc027,xmdc001,xmdc062,xmdc019,xmdc002,xmdc002_desc,xmdc006, 
          xmdc007,xmdc008,xmdc009,xmdc024,xmdc012,xmdc013,xmdc045,xmdc016,xmdc017,xmdc010,xmdc011,xmdc015, 
          xmdc046,xmdc047,xmdc048,xmdc023,xmdc020,xmdc021,xmdc022,xmdcunit,xmdcorga,xmdc052,xmdc049, 
          xmdc053,xmdc050,xmdc058,xmdc059,xmdc060,xmdc061,ooff013,imaa005_desc,xmdc0272,l_pmao0092,l_pmao0102, 
          xmdc028,xmdc029,xmdc030,xmdc057,xmdc025,oofb0173,xmdc026,oofb0174,xmdc031,xmdc032,xmdc033, 
          xmdc003,xmdc054,xmdc036,xmdc037,xmdc038,xmdc039,xmdc035,xmdc040,xmdc041,xmdc042,xmdc043,xmdc044, 
          xmdc055,xmdc056
           FROM s_detail1[1].xmdcseq,s_detail1[1].xmdc027,s_detail1[1].xmdc001,s_detail1[1].xmdc062, 
               s_detail1[1].xmdc019,s_detail1[1].xmdc002,s_detail1[1].xmdc002_desc,s_detail1[1].xmdc006, 
               s_detail1[1].xmdc007,s_detail1[1].xmdc008,s_detail1[1].xmdc009,s_detail1[1].xmdc024,s_detail1[1].xmdc012, 
               s_detail1[1].xmdc013,s_detail1[1].xmdc045,s_detail1[1].xmdc016,s_detail1[1].xmdc017,s_detail1[1].xmdc010, 
               s_detail1[1].xmdc011,s_detail1[1].xmdc015,s_detail1[1].xmdc046,s_detail1[1].xmdc047,s_detail1[1].xmdc048, 
               s_detail1[1].xmdc023,s_detail1[1].xmdc020,s_detail1[1].xmdc021,s_detail1[1].xmdc022,s_detail1[1].xmdcunit, 
               s_detail1[1].xmdcorga,s_detail1[1].xmdc052,s_detail1[1].xmdc049,s_detail1[1].xmdc053, 
               s_detail1[1].xmdc050,s_detail1[1].xmdc058,s_detail1[1].xmdc059,s_detail1[1].xmdc060,s_detail1[1].xmdc061, 
               s_detail1[1].ooff013,s_detail2[1].imaa005_desc,s_detail2[1].xmdc0272,s_detail2[1].l_pmao0092, 
               s_detail2[1].l_pmao0102,s_detail2[1].xmdc028,s_detail2[1].xmdc029,s_detail2[1].xmdc030, 
               s_detail2[1].xmdc057,s_detail2[1].xmdc025,s_detail2[1].oofb0173,s_detail2[1].xmdc026, 
               s_detail2[1].oofb0174,s_detail2[1].xmdc031,s_detail2[1].xmdc032,s_detail2[1].xmdc033, 
               s_detail2[1].xmdc003,s_detail2[1].xmdc054,s_detail2[1].xmdc036,s_detail2[1].xmdc037,s_detail2[1].xmdc038, 
               s_detail2[1].xmdc039,s_detail2[1].xmdc035,s_detail2[1].xmdc040,s_detail2[1].xmdc041,s_detail2[1].xmdc042, 
               s_detail2[1].xmdc043,s_detail2[1].xmdc044,s_detail2[1].xmdc055,s_detail2[1].xmdc056
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdcseq
            #add-point:BEFORE FIELD xmdcseq name="construct.b.page1.xmdcseq"
            {<point name="construct.b.page1.xmdcseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdcseq
            
            #add-point:AFTER FIELD xmdcseq name="construct.a.page1.xmdcseq"
            {<point name="construct.a.page1.xmdcseq" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdcseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdcseq
            #add-point:ON ACTION controlp INFIELD xmdcseq name="construct.c.page1.xmdcseq"
            {<point name="construct.c.page1.xmdcseq" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdc027
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc027
            #add-point:ON ACTION controlp INFIELD xmdc027 name="construct.c.page1.xmdc027"
            {<point name="construct.c.page1.xmdc027" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc027
            #add-point:BEFORE FIELD xmdc027 name="construct.b.page1.xmdc027"
            {<point name="construct.b.page1.xmdc027" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc027
            
            #add-point:AFTER FIELD xmdc027 name="construct.a.page1.xmdc027"
            {<point name="construct.a.page1.xmdc027" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_pmao009
            #add-point:BEFORE FIELD l_pmao009 name="construct.b.page1.l_pmao009"
            {<point name="construct.b.page1.l_pmao009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_pmao009
            
            #add-point:AFTER FIELD l_pmao009 name="construct.a.page1.l_pmao009"
            {<point name="construct.a.page1.l_pmao009" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.l_pmao009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_pmao009
            #add-point:ON ACTION controlp INFIELD l_pmao009 name="construct.c.page1.l_pmao009"
            {<point name="construct.c.page1.l_pmao009" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_pmao010
            #add-point:BEFORE FIELD l_pmao010 name="construct.b.page1.l_pmao010"
            {<point name="construct.b.page1.l_pmao010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_pmao010
            
            #add-point:AFTER FIELD l_pmao010 name="construct.a.page1.l_pmao010"
            {<point name="construct.a.page1.l_pmao010" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.l_pmao010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_pmao010
            #add-point:ON ACTION controlp INFIELD l_pmao010 name="construct.c.page1.l_pmao010"
            {<point name="construct.c.page1.l_pmao010" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdc001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc001
            #add-point:ON ACTION controlp INFIELD xmdc001 name="construct.c.page1.xmdc001"
            {<point name="construct.c.page1.xmdc001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc001
            #add-point:BEFORE FIELD xmdc001 name="construct.b.page1.xmdc001"
            {<point name="construct.b.page1.xmdc001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc001
            
            #add-point:AFTER FIELD xmdc001 name="construct.a.page1.xmdc001"
            {<point name="construct.a.page1.xmdc001" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc062
            #add-point:BEFORE FIELD xmdc062 name="construct.b.page1.xmdc062"
            {<point name="construct.b.page1.xmdc062" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc062
            
            #add-point:AFTER FIELD xmdc062 name="construct.a.page1.xmdc062"
            {<point name="construct.a.page1.xmdc062" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc062
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc062
            #add-point:ON ACTION controlp INFIELD xmdc062 name="construct.c.page1.xmdc062"
            {<point name="construct.c.page1.xmdc062" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc019
            #add-point:BEFORE FIELD xmdc019 name="construct.b.page1.xmdc019"
            {<point name="construct.b.page1.xmdc019" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc019
            
            #add-point:AFTER FIELD xmdc019 name="construct.a.page1.xmdc019"
            {<point name="construct.a.page1.xmdc019" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc019
            #add-point:ON ACTION controlp INFIELD xmdc019 name="construct.c.page1.xmdc019"
            {<point name="construct.c.page1.xmdc019" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc002
            #add-point:BEFORE FIELD xmdc002 name="construct.b.page1.xmdc002"
            {<point name="construct.b.page1.xmdc002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc002
            
            #add-point:AFTER FIELD xmdc002 name="construct.a.page1.xmdc002"
            {<point name="construct.a.page1.xmdc002" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc002
            #add-point:ON ACTION controlp INFIELD xmdc002 name="construct.c.page1.xmdc002"
            {<point name="construct.c.page1.xmdc002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc002_desc
            #add-point:BEFORE FIELD xmdc002_desc name="construct.b.page1.xmdc002_desc"
            {<point name="construct.b.page1.xmdc002_desc" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc002_desc
            
            #add-point:AFTER FIELD xmdc002_desc name="construct.a.page1.xmdc002_desc"
            {<point name="construct.a.page1.xmdc002_desc" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc002_desc
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc002_desc
            #add-point:ON ACTION controlp INFIELD xmdc002_desc name="construct.c.page1.xmdc002_desc"
            {<point name="construct.c.page1.xmdc002_desc" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdc006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc006
            #add-point:ON ACTION controlp INFIELD xmdc006 name="construct.c.page1.xmdc006"
            {<point name="construct.c.page1.xmdc006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc006
            #add-point:BEFORE FIELD xmdc006 name="construct.b.page1.xmdc006"
            {<point name="construct.b.page1.xmdc006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc006
            
            #add-point:AFTER FIELD xmdc006 name="construct.a.page1.xmdc006"
            {<point name="construct.a.page1.xmdc006" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc007
            #add-point:BEFORE FIELD xmdc007 name="construct.b.page1.xmdc007"
            {<point name="construct.b.page1.xmdc007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc007
            
            #add-point:AFTER FIELD xmdc007 name="construct.a.page1.xmdc007"
            {<point name="construct.a.page1.xmdc007" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc007
            #add-point:ON ACTION controlp INFIELD xmdc007 name="construct.c.page1.xmdc007"
            {<point name="construct.c.page1.xmdc007" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdc008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc008
            #add-point:ON ACTION controlp INFIELD xmdc008 name="construct.c.page1.xmdc008"
            {<point name="construct.c.page1.xmdc008" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc008
            #add-point:BEFORE FIELD xmdc008 name="construct.b.page1.xmdc008"
            {<point name="construct.b.page1.xmdc008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc008
            
            #add-point:AFTER FIELD xmdc008 name="construct.a.page1.xmdc008"
            {<point name="construct.a.page1.xmdc008" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc009
            #add-point:BEFORE FIELD xmdc009 name="construct.b.page1.xmdc009"
            {<point name="construct.b.page1.xmdc009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc009
            
            #add-point:AFTER FIELD xmdc009 name="construct.a.page1.xmdc009"
            {<point name="construct.a.page1.xmdc009" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc009
            #add-point:ON ACTION controlp INFIELD xmdc009 name="construct.c.page1.xmdc009"
            {<point name="construct.c.page1.xmdc009" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc024
            #add-point:BEFORE FIELD xmdc024 name="construct.b.page1.xmdc024"
            {<point name="construct.b.page1.xmdc024" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc024
            
            #add-point:AFTER FIELD xmdc024 name="construct.a.page1.xmdc024"
            {<point name="construct.a.page1.xmdc024" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc024
            #add-point:ON ACTION controlp INFIELD xmdc024 name="construct.c.page1.xmdc024"
            {<point name="construct.c.page1.xmdc024" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc012
            #add-point:BEFORE FIELD xmdc012 name="construct.b.page1.xmdc012"
            {<point name="construct.b.page1.xmdc012" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc012
            
            #add-point:AFTER FIELD xmdc012 name="construct.a.page1.xmdc012"
            {<point name="construct.a.page1.xmdc012" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc012
            #add-point:ON ACTION controlp INFIELD xmdc012 name="construct.c.page1.xmdc012"
            {<point name="construct.c.page1.xmdc012" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc013
            #add-point:BEFORE FIELD xmdc013 name="construct.b.page1.xmdc013"
            {<point name="construct.b.page1.xmdc013" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc013
            
            #add-point:AFTER FIELD xmdc013 name="construct.a.page1.xmdc013"
            {<point name="construct.a.page1.xmdc013" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc013
            #add-point:ON ACTION controlp INFIELD xmdc013 name="construct.c.page1.xmdc013"
            {<point name="construct.c.page1.xmdc013" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc045
            #add-point:BEFORE FIELD xmdc045 name="construct.b.page1.xmdc045"
            {<point name="construct.b.page1.xmdc045" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc045
            
            #add-point:AFTER FIELD xmdc045 name="construct.a.page1.xmdc045"
            {<point name="construct.a.page1.xmdc045" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc045
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc045
            #add-point:ON ACTION controlp INFIELD xmdc045 name="construct.c.page1.xmdc045"
            {<point name="construct.c.page1.xmdc045" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdc016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc016
            #add-point:ON ACTION controlp INFIELD xmdc016 name="construct.c.page1.xmdc016"
            {<point name="construct.c.page1.xmdc016" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc016
            #add-point:BEFORE FIELD xmdc016 name="construct.b.page1.xmdc016"
            {<point name="construct.b.page1.xmdc016" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc016
            
            #add-point:AFTER FIELD xmdc016 name="construct.a.page1.xmdc016"
            {<point name="construct.a.page1.xmdc016" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc017
            #add-point:BEFORE FIELD xmdc017 name="construct.b.page1.xmdc017"
            {<point name="construct.b.page1.xmdc017" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc017
            
            #add-point:AFTER FIELD xmdc017 name="construct.a.page1.xmdc017"
            {<point name="construct.a.page1.xmdc017" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc017
            #add-point:ON ACTION controlp INFIELD xmdc017 name="construct.c.page1.xmdc017"
            {<point name="construct.c.page1.xmdc017" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdc010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc010
            #add-point:ON ACTION controlp INFIELD xmdc010 name="construct.c.page1.xmdc010"
            {<point name="construct.c.page1.xmdc010" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc010
            #add-point:BEFORE FIELD xmdc010 name="construct.b.page1.xmdc010"
            {<point name="construct.b.page1.xmdc010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc010
            
            #add-point:AFTER FIELD xmdc010 name="construct.a.page1.xmdc010"
            {<point name="construct.a.page1.xmdc010" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc011
            #add-point:BEFORE FIELD xmdc011 name="construct.b.page1.xmdc011"
            {<point name="construct.b.page1.xmdc011" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc011
            
            #add-point:AFTER FIELD xmdc011 name="construct.a.page1.xmdc011"
            {<point name="construct.a.page1.xmdc011" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc011
            #add-point:ON ACTION controlp INFIELD xmdc011 name="construct.c.page1.xmdc011"
            {<point name="construct.c.page1.xmdc011" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc015
            #add-point:BEFORE FIELD xmdc015 name="construct.b.page1.xmdc015"
            {<point name="construct.b.page1.xmdc015" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc015
            
            #add-point:AFTER FIELD xmdc015 name="construct.a.page1.xmdc015"
            {<point name="construct.a.page1.xmdc015" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc015
            #add-point:ON ACTION controlp INFIELD xmdc015 name="construct.c.page1.xmdc015"
            {<point name="construct.c.page1.xmdc015" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc046
            #add-point:BEFORE FIELD xmdc046 name="construct.b.page1.xmdc046"
            {<point name="construct.b.page1.xmdc046" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc046
            
            #add-point:AFTER FIELD xmdc046 name="construct.a.page1.xmdc046"
            {<point name="construct.a.page1.xmdc046" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc046
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc046
            #add-point:ON ACTION controlp INFIELD xmdc046 name="construct.c.page1.xmdc046"
            {<point name="construct.c.page1.xmdc046" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc047
            #add-point:BEFORE FIELD xmdc047 name="construct.b.page1.xmdc047"
            {<point name="construct.b.page1.xmdc047" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc047
            
            #add-point:AFTER FIELD xmdc047 name="construct.a.page1.xmdc047"
            {<point name="construct.a.page1.xmdc047" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc047
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc047
            #add-point:ON ACTION controlp INFIELD xmdc047 name="construct.c.page1.xmdc047"
            {<point name="construct.c.page1.xmdc047" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc048
            #add-point:BEFORE FIELD xmdc048 name="construct.b.page1.xmdc048"
            {<point name="construct.b.page1.xmdc048" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc048
            
            #add-point:AFTER FIELD xmdc048 name="construct.a.page1.xmdc048"
            {<point name="construct.a.page1.xmdc048" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc048
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc048
            #add-point:ON ACTION controlp INFIELD xmdc048 name="construct.c.page1.xmdc048"
            {<point name="construct.c.page1.xmdc048" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdc023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc023
            #add-point:ON ACTION controlp INFIELD xmdc023 name="construct.c.page1.xmdc023"
            {<point name="construct.c.page1.xmdc023" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc023
            #add-point:BEFORE FIELD xmdc023 name="construct.b.page1.xmdc023"
            {<point name="construct.b.page1.xmdc023" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc023
            
            #add-point:AFTER FIELD xmdc023 name="construct.a.page1.xmdc023"
            {<point name="construct.a.page1.xmdc023" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc020
            #add-point:BEFORE FIELD xmdc020 name="construct.b.page1.xmdc020"
            {<point name="construct.b.page1.xmdc020" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc020
            
            #add-point:AFTER FIELD xmdc020 name="construct.a.page1.xmdc020"
            {<point name="construct.a.page1.xmdc020" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc020
            #add-point:ON ACTION controlp INFIELD xmdc020 name="construct.c.page1.xmdc020"
            {<point name="construct.c.page1.xmdc020" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc021
            #add-point:BEFORE FIELD xmdc021 name="construct.b.page1.xmdc021"
            {<point name="construct.b.page1.xmdc021" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc021
            
            #add-point:AFTER FIELD xmdc021 name="construct.a.page1.xmdc021"
            {<point name="construct.a.page1.xmdc021" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc021
            #add-point:ON ACTION controlp INFIELD xmdc021 name="construct.c.page1.xmdc021"
            {<point name="construct.c.page1.xmdc021" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc022
            #add-point:BEFORE FIELD xmdc022 name="construct.b.page1.xmdc022"
            {<point name="construct.b.page1.xmdc022" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc022
            
            #add-point:AFTER FIELD xmdc022 name="construct.a.page1.xmdc022"
            {<point name="construct.a.page1.xmdc022" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc022
            #add-point:ON ACTION controlp INFIELD xmdc022 name="construct.c.page1.xmdc022"
            {<point name="construct.c.page1.xmdc022" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdcunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdcunit
            #add-point:ON ACTION controlp INFIELD xmdcunit name="construct.c.page1.xmdcunit"
            {<point name="construct.c.page1.xmdcunit" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdcunit
            #add-point:BEFORE FIELD xmdcunit name="construct.b.page1.xmdcunit"
            {<point name="construct.b.page1.xmdcunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdcunit
            
            #add-point:AFTER FIELD xmdcunit name="construct.a.page1.xmdcunit"
            {<point name="construct.a.page1.xmdcunit" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdcorga
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdcorga
            #add-point:ON ACTION controlp INFIELD xmdcorga name="construct.c.page1.xmdcorga"
            {<point name="construct.c.page1.xmdcorga" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdcorga
            #add-point:BEFORE FIELD xmdcorga name="construct.b.page1.xmdcorga"
            {<point name="construct.b.page1.xmdcorga" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdcorga
            
            #add-point:AFTER FIELD xmdcorga name="construct.a.page1.xmdcorga"
            {<point name="construct.a.page1.xmdcorga" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc052
            #add-point:BEFORE FIELD xmdc052 name="construct.b.page1.xmdc052"
            {<point name="construct.b.page1.xmdc052" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc052
            
            #add-point:AFTER FIELD xmdc052 name="construct.a.page1.xmdc052"
            {<point name="construct.a.page1.xmdc052" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc052
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc052
            #add-point:ON ACTION controlp INFIELD xmdc052 name="construct.c.page1.xmdc052"
            {<point name="construct.c.page1.xmdc052" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdc049
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc049
            #add-point:ON ACTION controlp INFIELD xmdc049 name="construct.c.page1.xmdc049"
            {<point name="construct.c.page1.xmdc049" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc049
            #add-point:BEFORE FIELD xmdc049 name="construct.b.page1.xmdc049"
            {<point name="construct.b.page1.xmdc049" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc049
            
            #add-point:AFTER FIELD xmdc049 name="construct.a.page1.xmdc049"
            {<point name="construct.a.page1.xmdc049" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc053
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc053
            #add-point:ON ACTION controlp INFIELD xmdc053 name="construct.c.page1.xmdc053"
            {<point name="construct.c.page1.xmdc053" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc053
            #add-point:BEFORE FIELD xmdc053 name="construct.b.page1.xmdc053"
            {<point name="construct.b.page1.xmdc053" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc053
            
            #add-point:AFTER FIELD xmdc053 name="construct.a.page1.xmdc053"
            {<point name="construct.a.page1.xmdc053" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc050
            #add-point:BEFORE FIELD xmdc050 name="construct.b.page1.xmdc050"
            {<point name="construct.b.page1.xmdc050" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc050
            
            #add-point:AFTER FIELD xmdc050 name="construct.a.page1.xmdc050"
            {<point name="construct.a.page1.xmdc050" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc050
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc050
            #add-point:ON ACTION controlp INFIELD xmdc050 name="construct.c.page1.xmdc050"
            {<point name="construct.c.page1.xmdc050" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc058
            #add-point:BEFORE FIELD xmdc058 name="construct.b.page1.xmdc058"
            {<point name="construct.b.page1.xmdc058" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc058
            
            #add-point:AFTER FIELD xmdc058 name="construct.a.page1.xmdc058"
            {<point name="construct.a.page1.xmdc058" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc058
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc058
            #add-point:ON ACTION controlp INFIELD xmdc058 name="construct.c.page1.xmdc058"
            {<point name="construct.c.page1.xmdc058" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc059
            #add-point:BEFORE FIELD xmdc059 name="construct.b.page1.xmdc059"
            {<point name="construct.b.page1.xmdc059" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc059
            
            #add-point:AFTER FIELD xmdc059 name="construct.a.page1.xmdc059"
            {<point name="construct.a.page1.xmdc059" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc059
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc059
            #add-point:ON ACTION controlp INFIELD xmdc059 name="construct.c.page1.xmdc059"
            {<point name="construct.c.page1.xmdc059" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc060
            #add-point:BEFORE FIELD xmdc060 name="construct.b.page1.xmdc060"
            {<point name="construct.b.page1.xmdc060" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc060
            
            #add-point:AFTER FIELD xmdc060 name="construct.a.page1.xmdc060"
            {<point name="construct.a.page1.xmdc060" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc060
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc060
            #add-point:ON ACTION controlp INFIELD xmdc060 name="construct.c.page1.xmdc060"
            {<point name="construct.c.page1.xmdc060" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc061
            #add-point:BEFORE FIELD xmdc061 name="construct.b.page1.xmdc061"
            {<point name="construct.b.page1.xmdc061" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc061
            
            #add-point:AFTER FIELD xmdc061 name="construct.a.page1.xmdc061"
            {<point name="construct.a.page1.xmdc061" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc061
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc061
            #add-point:ON ACTION controlp INFIELD xmdc061 name="construct.c.page1.xmdc061"
            {<point name="construct.c.page1.xmdc061" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD ooff013
            #add-point:BEFORE FIELD ooff013 name="construct.b.page1.ooff013"
            {<point name="construct.b.page1.ooff013" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD ooff013
            
            #add-point:AFTER FIELD ooff013 name="construct.a.page1.ooff013"
            {<point name="construct.a.page1.ooff013" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.ooff013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD ooff013
            #add-point:ON ACTION controlp INFIELD ooff013 name="construct.c.page1.ooff013"
            {<point name="construct.c.page1.ooff013" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imaa005
            #add-point:BEFORE FIELD imaa005 name="construct.b.page2.imaa005"
            {<point name="construct.b.page2.imaa005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imaa005
            
            #add-point:AFTER FIELD imaa005 name="construct.a.page2.imaa005"
            {<point name="construct.a.page2.imaa005" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.imaa005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imaa005
            #add-point:ON ACTION controlp INFIELD imaa005 name="construct.c.page2.imaa005"
            {<point name="construct.c.page2.imaa005" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imaa005_desc
            #add-point:BEFORE FIELD imaa005_desc name="construct.b.page2.imaa005_desc"
            {<point name="construct.b.page2.imaa005_desc" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imaa005_desc
            
            #add-point:AFTER FIELD imaa005_desc name="construct.a.page2.imaa005_desc"
            {<point name="construct.a.page2.imaa005_desc" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.imaa005_desc
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imaa005_desc
            #add-point:ON ACTION controlp INFIELD imaa005_desc name="construct.c.page2.imaa005_desc"
            {<point name="construct.c.page2.imaa005_desc" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page2.xmdc0272
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc0272
            #add-point:ON ACTION controlp INFIELD xmdc0272 name="construct.c.page2.xmdc0272"
            {<point name="construct.c.page2.xmdc0272" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc0272
            #add-point:BEFORE FIELD xmdc0272 name="construct.b.page2.xmdc0272"
            {<point name="construct.b.page2.xmdc0272" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc0272
            
            #add-point:AFTER FIELD xmdc0272 name="construct.a.page2.xmdc0272"
            {<point name="construct.a.page2.xmdc0272" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_pmao0092
            #add-point:BEFORE FIELD l_pmao0092 name="construct.b.page2.l_pmao0092"
            {<point name="construct.b.page2.l_pmao0092" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_pmao0092
            
            #add-point:AFTER FIELD l_pmao0092 name="construct.a.page2.l_pmao0092"
            {<point name="construct.a.page2.l_pmao0092" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.l_pmao0092
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_pmao0092
            #add-point:ON ACTION controlp INFIELD l_pmao0092 name="construct.c.page2.l_pmao0092"
            {<point name="construct.c.page2.l_pmao0092" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_pmao0102
            #add-point:BEFORE FIELD l_pmao0102 name="construct.b.page2.l_pmao0102"
            {<point name="construct.b.page2.l_pmao0102" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_pmao0102
            
            #add-point:AFTER FIELD l_pmao0102 name="construct.a.page2.l_pmao0102"
            {<point name="construct.a.page2.l_pmao0102" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.l_pmao0102
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_pmao0102
            #add-point:ON ACTION controlp INFIELD l_pmao0102 name="construct.c.page2.l_pmao0102"
            {<point name="construct.c.page2.l_pmao0102" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page2.xmdc028
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc028
            #add-point:ON ACTION controlp INFIELD xmdc028 name="construct.c.page2.xmdc028"
            {<point name="construct.c.page2.xmdc028" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc028
            #add-point:BEFORE FIELD xmdc028 name="construct.b.page2.xmdc028"
            {<point name="construct.b.page2.xmdc028" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc028
            
            #add-point:AFTER FIELD xmdc028 name="construct.a.page2.xmdc028"
            {<point name="construct.a.page2.xmdc028" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdc029
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc029
            #add-point:ON ACTION controlp INFIELD xmdc029 name="construct.c.page2.xmdc029"
            {<point name="construct.c.page2.xmdc029" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc029
            #add-point:BEFORE FIELD xmdc029 name="construct.b.page2.xmdc029"
            {<point name="construct.b.page2.xmdc029" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc029
            
            #add-point:AFTER FIELD xmdc029 name="construct.a.page2.xmdc029"
            {<point name="construct.a.page2.xmdc029" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc030
            #add-point:BEFORE FIELD xmdc030 name="construct.b.page2.xmdc030"
            {<point name="construct.b.page2.xmdc030" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc030
            
            #add-point:AFTER FIELD xmdc030 name="construct.a.page2.xmdc030"
            {<point name="construct.a.page2.xmdc030" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdc030
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc030
            #add-point:ON ACTION controlp INFIELD xmdc030 name="construct.c.page2.xmdc030"
            {<point name="construct.c.page2.xmdc030" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc057
            #add-point:BEFORE FIELD xmdc057 name="construct.b.page2.xmdc057"
            {<point name="construct.b.page2.xmdc057" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc057
            
            #add-point:AFTER FIELD xmdc057 name="construct.a.page2.xmdc057"
            {<point name="construct.a.page2.xmdc057" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdc057
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc057
            #add-point:ON ACTION controlp INFIELD xmdc057 name="construct.c.page2.xmdc057"
            {<point name="construct.c.page2.xmdc057" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page2.xmdc025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc025
            #add-point:ON ACTION controlp INFIELD xmdc025 name="construct.c.page2.xmdc025"
            {<point name="construct.c.page2.xmdc025" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc025
            #add-point:BEFORE FIELD xmdc025 name="construct.b.page2.xmdc025"
            {<point name="construct.b.page2.xmdc025" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc025
            
            #add-point:AFTER FIELD xmdc025 name="construct.a.page2.xmdc025"
            {<point name="construct.a.page2.xmdc025" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD oofb0173
            #add-point:BEFORE FIELD oofb0173 name="construct.b.page2.oofb0173"
            {<point name="construct.b.page2.oofb0173" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD oofb0173
            
            #add-point:AFTER FIELD oofb0173 name="construct.a.page2.oofb0173"
            {<point name="construct.a.page2.oofb0173" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.oofb0173
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD oofb0173
            #add-point:ON ACTION controlp INFIELD oofb0173 name="construct.c.page2.oofb0173"
            {<point name="construct.c.page2.oofb0173" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page2.xmdc026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc026
            #add-point:ON ACTION controlp INFIELD xmdc026 name="construct.c.page2.xmdc026"
            {<point name="construct.c.page2.xmdc026" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc026
            #add-point:BEFORE FIELD xmdc026 name="construct.b.page2.xmdc026"
            {<point name="construct.b.page2.xmdc026" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc026
            
            #add-point:AFTER FIELD xmdc026 name="construct.a.page2.xmdc026"
            {<point name="construct.a.page2.xmdc026" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD oofb0174
            #add-point:BEFORE FIELD oofb0174 name="construct.b.page2.oofb0174"
            {<point name="construct.b.page2.oofb0174" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD oofb0174
            
            #add-point:AFTER FIELD oofb0174 name="construct.a.page2.oofb0174"
            {<point name="construct.a.page2.oofb0174" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.oofb0174
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD oofb0174
            #add-point:ON ACTION controlp INFIELD oofb0174 name="construct.c.page2.oofb0174"
            {<point name="construct.c.page2.oofb0174" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page2.xmdc031
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc031
            #add-point:ON ACTION controlp INFIELD xmdc031 name="construct.c.page2.xmdc031"
            {<point name="construct.c.page2.xmdc031" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc031
            #add-point:BEFORE FIELD xmdc031 name="construct.b.page2.xmdc031"
            {<point name="construct.b.page2.xmdc031" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc031
            
            #add-point:AFTER FIELD xmdc031 name="construct.a.page2.xmdc031"
            {<point name="construct.a.page2.xmdc031" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc032
            #add-point:BEFORE FIELD xmdc032 name="construct.b.page2.xmdc032"
            {<point name="construct.b.page2.xmdc032" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc032
            
            #add-point:AFTER FIELD xmdc032 name="construct.a.page2.xmdc032"
            {<point name="construct.a.page2.xmdc032" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdc032
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc032
            #add-point:ON ACTION controlp INFIELD xmdc032 name="construct.c.page2.xmdc032"
            {<point name="construct.c.page2.xmdc032" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc033
            #add-point:BEFORE FIELD xmdc033 name="construct.b.page2.xmdc033"
            {<point name="construct.b.page2.xmdc033" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc033
            
            #add-point:AFTER FIELD xmdc033 name="construct.a.page2.xmdc033"
            {<point name="construct.a.page2.xmdc033" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdc033
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc033
            #add-point:ON ACTION controlp INFIELD xmdc033 name="construct.c.page2.xmdc033"
            {<point name="construct.c.page2.xmdc033" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page2.xmdc003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc003
            #add-point:ON ACTION controlp INFIELD xmdc003 name="construct.c.page2.xmdc003"
            {<point name="construct.c.page2.xmdc003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc003
            #add-point:BEFORE FIELD xmdc003 name="construct.b.page2.xmdc003"
            {<point name="construct.b.page2.xmdc003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc003
            
            #add-point:AFTER FIELD xmdc003 name="construct.a.page2.xmdc003"
            {<point name="construct.a.page2.xmdc003" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc054
            #add-point:BEFORE FIELD xmdc054 name="construct.b.page2.xmdc054"
            {<point name="construct.b.page2.xmdc054" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc054
            
            #add-point:AFTER FIELD xmdc054 name="construct.a.page2.xmdc054"
            {<point name="construct.a.page2.xmdc054" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdc054
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc054
            #add-point:ON ACTION controlp INFIELD xmdc054 name="construct.c.page2.xmdc054"
            {<point name="construct.c.page2.xmdc054" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page2.xmdc036
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc036
            #add-point:ON ACTION controlp INFIELD xmdc036 name="construct.c.page2.xmdc036"
            {<point name="construct.c.page2.xmdc036" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc036
            #add-point:BEFORE FIELD xmdc036 name="construct.b.page2.xmdc036"
            {<point name="construct.b.page2.xmdc036" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc036
            
            #add-point:AFTER FIELD xmdc036 name="construct.a.page2.xmdc036"
            {<point name="construct.a.page2.xmdc036" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdc037
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc037
            #add-point:ON ACTION controlp INFIELD xmdc037 name="construct.c.page2.xmdc037"
            {<point name="construct.c.page2.xmdc037" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc037
            #add-point:BEFORE FIELD xmdc037 name="construct.b.page2.xmdc037"
            {<point name="construct.b.page2.xmdc037" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc037
            
            #add-point:AFTER FIELD xmdc037 name="construct.a.page2.xmdc037"
            {<point name="construct.a.page2.xmdc037" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdc038
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc038
            #add-point:ON ACTION controlp INFIELD xmdc038 name="construct.c.page2.xmdc038"
            {<point name="construct.c.page2.xmdc038" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc038
            #add-point:BEFORE FIELD xmdc038 name="construct.b.page2.xmdc038"
            {<point name="construct.b.page2.xmdc038" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc038
            
            #add-point:AFTER FIELD xmdc038 name="construct.a.page2.xmdc038"
            {<point name="construct.a.page2.xmdc038" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc039
            #add-point:BEFORE FIELD xmdc039 name="construct.b.page2.xmdc039"
            {<point name="construct.b.page2.xmdc039" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc039
            
            #add-point:AFTER FIELD xmdc039 name="construct.a.page2.xmdc039"
            {<point name="construct.a.page2.xmdc039" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdc039
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc039
            #add-point:ON ACTION controlp INFIELD xmdc039 name="construct.c.page2.xmdc039"
            {<point name="construct.c.page2.xmdc039" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc035
            #add-point:BEFORE FIELD xmdc035 name="construct.b.page2.xmdc035"
            {<point name="construct.b.page2.xmdc035" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc035
            
            #add-point:AFTER FIELD xmdc035 name="construct.a.page2.xmdc035"
            {<point name="construct.a.page2.xmdc035" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdc035
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc035
            #add-point:ON ACTION controlp INFIELD xmdc035 name="construct.c.page2.xmdc035"
            {<point name="construct.c.page2.xmdc035" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc040
            #add-point:BEFORE FIELD xmdc040 name="construct.b.page2.xmdc040"
            {<point name="construct.b.page2.xmdc040" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc040
            
            #add-point:AFTER FIELD xmdc040 name="construct.a.page2.xmdc040"
            {<point name="construct.a.page2.xmdc040" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdc040
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc040
            #add-point:ON ACTION controlp INFIELD xmdc040 name="construct.c.page2.xmdc040"
            {<point name="construct.c.page2.xmdc040" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc041
            #add-point:BEFORE FIELD xmdc041 name="construct.b.page2.xmdc041"
            {<point name="construct.b.page2.xmdc041" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc041
            
            #add-point:AFTER FIELD xmdc041 name="construct.a.page2.xmdc041"
            {<point name="construct.a.page2.xmdc041" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdc041
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc041
            #add-point:ON ACTION controlp INFIELD xmdc041 name="construct.c.page2.xmdc041"
            {<point name="construct.c.page2.xmdc041" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc042
            #add-point:BEFORE FIELD xmdc042 name="construct.b.page2.xmdc042"
            {<point name="construct.b.page2.xmdc042" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc042
            
            #add-point:AFTER FIELD xmdc042 name="construct.a.page2.xmdc042"
            {<point name="construct.a.page2.xmdc042" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdc042
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc042
            #add-point:ON ACTION controlp INFIELD xmdc042 name="construct.c.page2.xmdc042"
            {<point name="construct.c.page2.xmdc042" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc043
            #add-point:BEFORE FIELD xmdc043 name="construct.b.page2.xmdc043"
            {<point name="construct.b.page2.xmdc043" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc043
            
            #add-point:AFTER FIELD xmdc043 name="construct.a.page2.xmdc043"
            {<point name="construct.a.page2.xmdc043" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdc043
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc043
            #add-point:ON ACTION controlp INFIELD xmdc043 name="construct.c.page2.xmdc043"
            {<point name="construct.c.page2.xmdc043" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc044
            #add-point:BEFORE FIELD xmdc044 name="construct.b.page2.xmdc044"
            {<point name="construct.b.page2.xmdc044" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc044
            
            #add-point:AFTER FIELD xmdc044 name="construct.a.page2.xmdc044"
            {<point name="construct.a.page2.xmdc044" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdc044
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc044
            #add-point:ON ACTION controlp INFIELD xmdc044 name="construct.c.page2.xmdc044"
            {<point name="construct.c.page2.xmdc044" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc055
            #add-point:BEFORE FIELD xmdc055 name="construct.b.page2.xmdc055"
            {<point name="construct.b.page2.xmdc055" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc055
            
            #add-point:AFTER FIELD xmdc055 name="construct.a.page2.xmdc055"
            {<point name="construct.a.page2.xmdc055" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdc055
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc055
            #add-point:ON ACTION controlp INFIELD xmdc055 name="construct.c.page2.xmdc055"
            {<point name="construct.c.page2.xmdc055" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc056
            #add-point:BEFORE FIELD xmdc056 name="construct.b.page2.xmdc056"
            {<point name="construct.b.page2.xmdc056" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc056
            
            #add-point:AFTER FIELD xmdc056 name="construct.a.page2.xmdc056"
            {<point name="construct.a.page2.xmdc056" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdc056
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc056
            #add-point:ON ACTION controlp INFIELD xmdc056 name="construct.c.page2.xmdc056"
            {<point name="construct.c.page2.xmdc056" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON xmddseq,xmddseq1,xmdd003,xmdd001,xmdd040,xmdd002,xmdd002_desc,xmdd004, 
          xmdd005,xmdc012_1,xmdc013_1,xmddseq2,xmdd006,xmdd024,xmdd025,xmdd011,xmdd012,xmdd010,xmdd013, 
          xmdd009,xmdd031,xmdd014,xmdd015,xmdd016,xmdd017,xmdd026,xmdd027,xmdd018,xmdd019,xmdd020,xmdd028, 
          xmdd029,xmdd030,xmdd021,xmdd022,xmdd023,xmdd036,xmdd037,xmdd038,xmdd039
           FROM s_detail3[1].xmddseq,s_detail3[1].xmddseq1,s_detail3[1].xmdd003,s_detail3[1].xmdd001, 
               s_detail3[1].xmdd040,s_detail3[1].xmdd002,s_detail3[1].xmdd002_desc,s_detail3[1].xmdd004, 
               s_detail3[1].xmdd005,s_detail3[1].xmdc012_1,s_detail3[1].xmdc013_1,s_detail3[1].xmddseq2, 
               s_detail3[1].xmdd006,s_detail3[1].xmdd024,s_detail3[1].xmdd025,s_detail3[1].xmdd011,s_detail3[1].xmdd012, 
               s_detail3[1].xmdd010,s_detail3[1].xmdd013,s_detail3[1].xmdd009,s_detail3[1].xmdd031,s_detail3[1].xmdd014, 
               s_detail3[1].xmdd015,s_detail3[1].xmdd016,s_detail3[1].xmdd017,s_detail3[1].xmdd026,s_detail3[1].xmdd027, 
               s_detail3[1].xmdd018,s_detail3[1].xmdd019,s_detail3[1].xmdd020,s_detail3[1].xmdd028,s_detail3[1].xmdd029, 
               s_detail3[1].xmdd030,s_detail3[1].xmdd021,s_detail3[1].xmdd022,s_detail3[1].xmdd023,s_detail3[1].xmdd036, 
               s_detail3[1].xmdd037,s_detail3[1].xmdd038,s_detail3[1].xmdd039
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body2.before_construct"
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmddseq
            #add-point:BEFORE FIELD xmddseq name="construct.b.page3.xmddseq"
            {<point name="construct.b.page3.xmddseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmddseq
            
            #add-point:AFTER FIELD xmddseq name="construct.a.page3.xmddseq"
            {<point name="construct.a.page3.xmddseq" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmddseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmddseq
            #add-point:ON ACTION controlp INFIELD xmddseq name="construct.c.page3.xmddseq"
            {<point name="construct.c.page3.xmddseq" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmddseq1
            #add-point:BEFORE FIELD xmddseq1 name="construct.b.page3.xmddseq1"
            {<point name="construct.b.page3.xmddseq1" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmddseq1
            
            #add-point:AFTER FIELD xmddseq1 name="construct.a.page3.xmddseq1"
            {<point name="construct.a.page3.xmddseq1" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmddseq1
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmddseq1
            #add-point:ON ACTION controlp INFIELD xmddseq1 name="construct.c.page3.xmddseq1"
            {<point name="construct.c.page3.xmddseq1" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd003
            #add-point:BEFORE FIELD xmdd003 name="construct.b.page3.xmdd003"
            {<point name="construct.b.page3.xmdd003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd003
            
            #add-point:AFTER FIELD xmdd003 name="construct.a.page3.xmdd003"
            {<point name="construct.a.page3.xmdd003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd003
            #add-point:ON ACTION controlp INFIELD xmdd003 name="construct.c.page3.xmdd003"
            {<point name="construct.c.page3.xmdd003" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page3.xmdd001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd001
            #add-point:ON ACTION controlp INFIELD xmdd001 name="construct.c.page3.xmdd001"
            {<point name="construct.c.page3.xmdd001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd001
            #add-point:BEFORE FIELD xmdd001 name="construct.b.page3.xmdd001"
            {<point name="construct.b.page3.xmdd001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd001
            
            #add-point:AFTER FIELD xmdd001 name="construct.a.page3.xmdd001"
            {<point name="construct.a.page3.xmdd001" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd040
            #add-point:BEFORE FIELD xmdd040 name="construct.b.page3.xmdd040"
            {<point name="construct.b.page3.xmdd040" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd040
            
            #add-point:AFTER FIELD xmdd040 name="construct.a.page3.xmdd040"
            {<point name="construct.a.page3.xmdd040" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd040
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd040
            #add-point:ON ACTION controlp INFIELD xmdd040 name="construct.c.page3.xmdd040"
            {<point name="construct.c.page3.xmdd040" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd002
            #add-point:BEFORE FIELD xmdd002 name="construct.b.page3.xmdd002"
            {<point name="construct.b.page3.xmdd002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd002
            
            #add-point:AFTER FIELD xmdd002 name="construct.a.page3.xmdd002"
            {<point name="construct.a.page3.xmdd002" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd002
            #add-point:ON ACTION controlp INFIELD xmdd002 name="construct.c.page3.xmdd002"
            {<point name="construct.c.page3.xmdd002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd002_desc
            #add-point:BEFORE FIELD xmdd002_desc name="construct.b.page3.xmdd002_desc"
            {<point name="construct.b.page3.xmdd002_desc" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd002_desc
            
            #add-point:AFTER FIELD xmdd002_desc name="construct.a.page3.xmdd002_desc"
            {<point name="construct.a.page3.xmdd002_desc" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd002_desc
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd002_desc
            #add-point:ON ACTION controlp INFIELD xmdd002_desc name="construct.c.page3.xmdd002_desc"
            {<point name="construct.c.page3.xmdd002_desc" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page3.xmdd004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd004
            #add-point:ON ACTION controlp INFIELD xmdd004 name="construct.c.page3.xmdd004"
            {<point name="construct.c.page3.xmdd004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd004
            #add-point:BEFORE FIELD xmdd004 name="construct.b.page3.xmdd004"
            {<point name="construct.b.page3.xmdd004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd004
            
            #add-point:AFTER FIELD xmdd004 name="construct.a.page3.xmdd004"
            {<point name="construct.a.page3.xmdd004" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd005
            #add-point:BEFORE FIELD xmdd005 name="construct.b.page3.xmdd005"
            {<point name="construct.b.page3.xmdd005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd005
            
            #add-point:AFTER FIELD xmdd005 name="construct.a.page3.xmdd005"
            {<point name="construct.a.page3.xmdd005" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd005
            #add-point:ON ACTION controlp INFIELD xmdd005 name="construct.c.page3.xmdd005"
            {<point name="construct.c.page3.xmdd005" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc012_1
            #add-point:BEFORE FIELD xmdc012_1 name="construct.b.page3.xmdc012_1"
            {<point name="construct.b.page3.xmdc012_1" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc012_1
            
            #add-point:AFTER FIELD xmdc012_1 name="construct.a.page3.xmdc012_1"
            {<point name="construct.a.page3.xmdc012_1" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdc012_1
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc012_1
            #add-point:ON ACTION controlp INFIELD xmdc012_1 name="construct.c.page3.xmdc012_1"
            {<point name="construct.c.page3.xmdc012_1" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc013_1
            #add-point:BEFORE FIELD xmdc013_1 name="construct.b.page3.xmdc013_1"
            {<point name="construct.b.page3.xmdc013_1" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc013_1
            
            #add-point:AFTER FIELD xmdc013_1 name="construct.a.page3.xmdc013_1"
            {<point name="construct.a.page3.xmdc013_1" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdc013_1
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc013_1
            #add-point:ON ACTION controlp INFIELD xmdc013_1 name="construct.c.page3.xmdc013_1"
            {<point name="construct.c.page3.xmdc013_1" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmddseq2
            #add-point:BEFORE FIELD xmddseq2 name="construct.b.page3.xmddseq2"
            {<point name="construct.b.page3.xmddseq2" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmddseq2
            
            #add-point:AFTER FIELD xmddseq2 name="construct.a.page3.xmddseq2"
            {<point name="construct.a.page3.xmddseq2" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmddseq2
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmddseq2
            #add-point:ON ACTION controlp INFIELD xmddseq2 name="construct.c.page3.xmddseq2"
            {<point name="construct.c.page3.xmddseq2" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd006
            #add-point:BEFORE FIELD xmdd006 name="construct.b.page3.xmdd006"
            {<point name="construct.b.page3.xmdd006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd006
            
            #add-point:AFTER FIELD xmdd006 name="construct.a.page3.xmdd006"
            {<point name="construct.a.page3.xmdd006" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd006
            #add-point:ON ACTION controlp INFIELD xmdd006 name="construct.c.page3.xmdd006"
            {<point name="construct.c.page3.xmdd006" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page3.xmdd024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd024
            #add-point:ON ACTION controlp INFIELD xmdd024 name="construct.c.page3.xmdd024"
            {<point name="construct.c.page3.xmdd024" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd024
            #add-point:BEFORE FIELD xmdd024 name="construct.b.page3.xmdd024"
            {<point name="construct.b.page3.xmdd024" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd024
            
            #add-point:AFTER FIELD xmdd024 name="construct.a.page3.xmdd024"
            {<point name="construct.a.page3.xmdd024" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd025
            #add-point:BEFORE FIELD xmdd025 name="construct.b.page3.xmdd025"
            {<point name="construct.b.page3.xmdd025" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd025
            
            #add-point:AFTER FIELD xmdd025 name="construct.a.page3.xmdd025"
            {<point name="construct.a.page3.xmdd025" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd025
            #add-point:ON ACTION controlp INFIELD xmdd025 name="construct.c.page3.xmdd025"
            {<point name="construct.c.page3.xmdd025" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd011
            #add-point:BEFORE FIELD xmdd011 name="construct.b.page3.xmdd011"
            {<point name="construct.b.page3.xmdd011" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd011
            
            #add-point:AFTER FIELD xmdd011 name="construct.a.page3.xmdd011"
            {<point name="construct.a.page3.xmdd011" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd011
            #add-point:ON ACTION controlp INFIELD xmdd011 name="construct.c.page3.xmdd011"
            {<point name="construct.c.page3.xmdd011" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd012
            #add-point:BEFORE FIELD xmdd012 name="construct.b.page3.xmdd012"
            {<point name="construct.b.page3.xmdd012" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd012
            
            #add-point:AFTER FIELD xmdd012 name="construct.a.page3.xmdd012"
            {<point name="construct.a.page3.xmdd012" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd012
            #add-point:ON ACTION controlp INFIELD xmdd012 name="construct.c.page3.xmdd012"
            {<point name="construct.c.page3.xmdd012" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd010
            #add-point:BEFORE FIELD xmdd010 name="construct.b.page3.xmdd010"
            {<point name="construct.b.page3.xmdd010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd010
            
            #add-point:AFTER FIELD xmdd010 name="construct.a.page3.xmdd010"
            {<point name="construct.a.page3.xmdd010" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd010
            #add-point:ON ACTION controlp INFIELD xmdd010 name="construct.c.page3.xmdd010"
            {<point name="construct.c.page3.xmdd010" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd013
            #add-point:BEFORE FIELD xmdd013 name="construct.b.page3.xmdd013"
            {<point name="construct.b.page3.xmdd013" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd013
            
            #add-point:AFTER FIELD xmdd013 name="construct.a.page3.xmdd013"
            {<point name="construct.a.page3.xmdd013" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd013
            #add-point:ON ACTION controlp INFIELD xmdd013 name="construct.c.page3.xmdd013"
            {<point name="construct.c.page3.xmdd013" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd009
            #add-point:BEFORE FIELD xmdd009 name="construct.b.page3.xmdd009"
            {<point name="construct.b.page3.xmdd009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd009
            
            #add-point:AFTER FIELD xmdd009 name="construct.a.page3.xmdd009"
            {<point name="construct.a.page3.xmdd009" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd009
            #add-point:ON ACTION controlp INFIELD xmdd009 name="construct.c.page3.xmdd009"
            {<point name="construct.c.page3.xmdd009" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd031
            #add-point:BEFORE FIELD xmdd031 name="construct.b.page3.xmdd031"
            {<point name="construct.b.page3.xmdd031" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd031
            
            #add-point:AFTER FIELD xmdd031 name="construct.a.page3.xmdd031"
            {<point name="construct.a.page3.xmdd031" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd031
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd031
            #add-point:ON ACTION controlp INFIELD xmdd031 name="construct.c.page3.xmdd031"
            {<point name="construct.c.page3.xmdd031" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd014
            #add-point:BEFORE FIELD xmdd014 name="construct.b.page3.xmdd014"
            {<point name="construct.b.page3.xmdd014" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd014
            
            #add-point:AFTER FIELD xmdd014 name="construct.a.page3.xmdd014"
            {<point name="construct.a.page3.xmdd014" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd014
            #add-point:ON ACTION controlp INFIELD xmdd014 name="construct.c.page3.xmdd014"
            {<point name="construct.c.page3.xmdd014" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd015
            #add-point:BEFORE FIELD xmdd015 name="construct.b.page3.xmdd015"
            {<point name="construct.b.page3.xmdd015" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd015
            
            #add-point:AFTER FIELD xmdd015 name="construct.a.page3.xmdd015"
            {<point name="construct.a.page3.xmdd015" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd015
            #add-point:ON ACTION controlp INFIELD xmdd015 name="construct.c.page3.xmdd015"
            {<point name="construct.c.page3.xmdd015" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd016
            #add-point:BEFORE FIELD xmdd016 name="construct.b.page3.xmdd016"
            {<point name="construct.b.page3.xmdd016" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd016
            
            #add-point:AFTER FIELD xmdd016 name="construct.a.page3.xmdd016"
            {<point name="construct.a.page3.xmdd016" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd016
            #add-point:ON ACTION controlp INFIELD xmdd016 name="construct.c.page3.xmdd016"
            {<point name="construct.c.page3.xmdd016" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page3.xmdd017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd017
            #add-point:ON ACTION controlp INFIELD xmdd017 name="construct.c.page3.xmdd017"
            {<point name="construct.c.page3.xmdd017" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd017
            #add-point:BEFORE FIELD xmdd017 name="construct.b.page3.xmdd017"
            {<point name="construct.b.page3.xmdd017" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd017
            
            #add-point:AFTER FIELD xmdd017 name="construct.a.page3.xmdd017"
            {<point name="construct.a.page3.xmdd017" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd026
            #add-point:ON ACTION controlp INFIELD xmdd026 name="construct.c.page3.xmdd026"
            {<point name="construct.c.page3.xmdd026" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd026
            #add-point:BEFORE FIELD xmdd026 name="construct.b.page3.xmdd026"
            {<point name="construct.b.page3.xmdd026" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd026
            
            #add-point:AFTER FIELD xmdd026 name="construct.a.page3.xmdd026"
            {<point name="construct.a.page3.xmdd026" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd027
            #add-point:BEFORE FIELD xmdd027 name="construct.b.page3.xmdd027"
            {<point name="construct.b.page3.xmdd027" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd027
            
            #add-point:AFTER FIELD xmdd027 name="construct.a.page3.xmdd027"
            {<point name="construct.a.page3.xmdd027" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd027
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd027
            #add-point:ON ACTION controlp INFIELD xmdd027 name="construct.c.page3.xmdd027"
            {<point name="construct.c.page3.xmdd027" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd018
            #add-point:BEFORE FIELD xmdd018 name="construct.b.page3.xmdd018"
            {<point name="construct.b.page3.xmdd018" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd018
            
            #add-point:AFTER FIELD xmdd018 name="construct.a.page3.xmdd018"
            {<point name="construct.a.page3.xmdd018" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd018
            #add-point:ON ACTION controlp INFIELD xmdd018 name="construct.c.page3.xmdd018"
            {<point name="construct.c.page3.xmdd018" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page3.xmdd019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd019
            #add-point:ON ACTION controlp INFIELD xmdd019 name="construct.c.page3.xmdd019"
            {<point name="construct.c.page3.xmdd019" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd019
            #add-point:BEFORE FIELD xmdd019 name="construct.b.page3.xmdd019"
            {<point name="construct.b.page3.xmdd019" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd019
            
            #add-point:AFTER FIELD xmdd019 name="construct.a.page3.xmdd019"
            {<point name="construct.a.page3.xmdd019" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd020
            #add-point:BEFORE FIELD xmdd020 name="construct.b.page3.xmdd020"
            {<point name="construct.b.page3.xmdd020" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd020
            
            #add-point:AFTER FIELD xmdd020 name="construct.a.page3.xmdd020"
            {<point name="construct.a.page3.xmdd020" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd020
            #add-point:ON ACTION controlp INFIELD xmdd020 name="construct.c.page3.xmdd020"
            {<point name="construct.c.page3.xmdd020" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd028
            #add-point:BEFORE FIELD xmdd028 name="construct.b.page3.xmdd028"
            {<point name="construct.b.page3.xmdd028" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd028
            
            #add-point:AFTER FIELD xmdd028 name="construct.a.page3.xmdd028"
            {<point name="construct.a.page3.xmdd028" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd028
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd028
            #add-point:ON ACTION controlp INFIELD xmdd028 name="construct.c.page3.xmdd028"
            {<point name="construct.c.page3.xmdd028" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd029
            #add-point:BEFORE FIELD xmdd029 name="construct.b.page3.xmdd029"
            {<point name="construct.b.page3.xmdd029" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd029
            
            #add-point:AFTER FIELD xmdd029 name="construct.a.page3.xmdd029"
            {<point name="construct.a.page3.xmdd029" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd029
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd029
            #add-point:ON ACTION controlp INFIELD xmdd029 name="construct.c.page3.xmdd029"
            {<point name="construct.c.page3.xmdd029" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd030
            #add-point:BEFORE FIELD xmdd030 name="construct.b.page3.xmdd030"
            {<point name="construct.b.page3.xmdd030" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd030
            
            #add-point:AFTER FIELD xmdd030 name="construct.a.page3.xmdd030"
            {<point name="construct.a.page3.xmdd030" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd030
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd030
            #add-point:ON ACTION controlp INFIELD xmdd030 name="construct.c.page3.xmdd030"
            {<point name="construct.c.page3.xmdd030" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd021
            #add-point:BEFORE FIELD xmdd021 name="construct.b.page3.xmdd021"
            {<point name="construct.b.page3.xmdd021" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd021
            
            #add-point:AFTER FIELD xmdd021 name="construct.a.page3.xmdd021"
            {<point name="construct.a.page3.xmdd021" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd021
            #add-point:ON ACTION controlp INFIELD xmdd021 name="construct.c.page3.xmdd021"
            {<point name="construct.c.page3.xmdd021" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page3.xmdd022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd022
            #add-point:ON ACTION controlp INFIELD xmdd022 name="construct.c.page3.xmdd022"
            {<point name="construct.c.page3.xmdd022" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd022
            #add-point:BEFORE FIELD xmdd022 name="construct.b.page3.xmdd022"
            {<point name="construct.b.page3.xmdd022" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd022
            
            #add-point:AFTER FIELD xmdd022 name="construct.a.page3.xmdd022"
            {<point name="construct.a.page3.xmdd022" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd023
            #add-point:BEFORE FIELD xmdd023 name="construct.b.page3.xmdd023"
            {<point name="construct.b.page3.xmdd023" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd023
            
            #add-point:AFTER FIELD xmdd023 name="construct.a.page3.xmdd023"
            {<point name="construct.a.page3.xmdd023" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd023
            #add-point:ON ACTION controlp INFIELD xmdd023 name="construct.c.page3.xmdd023"
            {<point name="construct.c.page3.xmdd023" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd036
            #add-point:BEFORE FIELD xmdd036 name="construct.b.page3.xmdd036"
            {<point name="construct.b.page3.xmdd036" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd036
            
            #add-point:AFTER FIELD xmdd036 name="construct.a.page3.xmdd036"
            {<point name="construct.a.page3.xmdd036" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd036
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd036
            #add-point:ON ACTION controlp INFIELD xmdd036 name="construct.c.page3.xmdd036"
            {<point name="construct.c.page3.xmdd036" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd037
            #add-point:BEFORE FIELD xmdd037 name="construct.b.page3.xmdd037"
            {<point name="construct.b.page3.xmdd037" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd037
            
            #add-point:AFTER FIELD xmdd037 name="construct.a.page3.xmdd037"
            {<point name="construct.a.page3.xmdd037" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd037
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd037
            #add-point:ON ACTION controlp INFIELD xmdd037 name="construct.c.page3.xmdd037"
            {<point name="construct.c.page3.xmdd037" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd038
            #add-point:BEFORE FIELD xmdd038 name="construct.b.page3.xmdd038"
            {<point name="construct.b.page3.xmdd038" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd038
            
            #add-point:AFTER FIELD xmdd038 name="construct.a.page3.xmdd038"
            {<point name="construct.a.page3.xmdd038" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd038
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd038
            #add-point:ON ACTION controlp INFIELD xmdd038 name="construct.c.page3.xmdd038"
            {<point name="construct.c.page3.xmdd038" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd039
            #add-point:BEFORE FIELD xmdd039 name="construct.b.page3.xmdd039"
            {<point name="construct.b.page3.xmdd039" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd039
            
            #add-point:AFTER FIELD xmdd039 name="construct.a.page3.xmdd039"
            {<point name="construct.a.page3.xmdd039" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd039
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd039
            #add-point:ON ACTION controlp INFIELD xmdd039 name="construct.c.page3.xmdd039"
            {<point name="construct.c.page3.xmdd039" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON xmdqdocno,xmdqseq,xmdqseq1,xmdq001,xmdq006,xmdq007,xmdq008,xmdq009,xmdq002, 
          xmdq004,xmdq005
           FROM s_detail4[1].xmdqdocno,s_detail4[1].xmdqseq,s_detail4[1].xmdqseq1,s_detail4[1].xmdq001, 
               s_detail4[1].xmdq006,s_detail4[1].xmdq007,s_detail4[1].xmdq008,s_detail4[1].xmdq009,s_detail4[1].xmdq002, 
               s_detail4[1].xmdq004,s_detail4[1].xmdq005
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body3.before_construct"
            {<point name="cs.body3.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdqdocno
            #add-point:BEFORE FIELD xmdqdocno name="construct.b.page4.xmdqdocno"
            {<point name="construct.b.page4.xmdqdocno" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdqdocno
            
            #add-point:AFTER FIELD xmdqdocno name="construct.a.page4.xmdqdocno"
            {<point name="construct.a.page4.xmdqdocno" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmdqdocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdqdocno
            #add-point:ON ACTION controlp INFIELD xmdqdocno name="construct.c.page4.xmdqdocno"
            {<point name="construct.c.page4.xmdqdocno" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdqseq
            #add-point:BEFORE FIELD xmdqseq name="construct.b.page4.xmdqseq"
            {<point name="construct.b.page4.xmdqseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdqseq
            
            #add-point:AFTER FIELD xmdqseq name="construct.a.page4.xmdqseq"
            {<point name="construct.a.page4.xmdqseq" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmdqseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdqseq
            #add-point:ON ACTION controlp INFIELD xmdqseq name="construct.c.page4.xmdqseq"
            {<point name="construct.c.page4.xmdqseq" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdqseq1
            #add-point:BEFORE FIELD xmdqseq1 name="construct.b.page4.xmdqseq1"
            {<point name="construct.b.page4.xmdqseq1" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdqseq1
            
            #add-point:AFTER FIELD xmdqseq1 name="construct.a.page4.xmdqseq1"
            {<point name="construct.a.page4.xmdqseq1" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmdqseq1
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdqseq1
            #add-point:ON ACTION controlp INFIELD xmdqseq1 name="construct.c.page4.xmdqseq1"
            {<point name="construct.c.page4.xmdqseq1" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdq001
            #add-point:BEFORE FIELD xmdq001 name="construct.b.page4.xmdq001"
            {<point name="construct.b.page4.xmdq001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdq001
            
            #add-point:AFTER FIELD xmdq001 name="construct.a.page4.xmdq001"
            {<point name="construct.a.page4.xmdq001" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmdq001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdq001
            #add-point:ON ACTION controlp INFIELD xmdq001 name="construct.c.page4.xmdq001"
            {<point name="construct.c.page4.xmdq001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdq006
            #add-point:BEFORE FIELD xmdq006 name="construct.b.page4.xmdq006"
            {<point name="construct.b.page4.xmdq006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdq006
            
            #add-point:AFTER FIELD xmdq006 name="construct.a.page4.xmdq006"
            {<point name="construct.a.page4.xmdq006" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmdq006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdq006
            #add-point:ON ACTION controlp INFIELD xmdq006 name="construct.c.page4.xmdq006"
            {<point name="construct.c.page4.xmdq006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdq007
            #add-point:BEFORE FIELD xmdq007 name="construct.b.page4.xmdq007"
            {<point name="construct.b.page4.xmdq007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdq007
            
            #add-point:AFTER FIELD xmdq007 name="construct.a.page4.xmdq007"
            {<point name="construct.a.page4.xmdq007" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmdq007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdq007
            #add-point:ON ACTION controlp INFIELD xmdq007 name="construct.c.page4.xmdq007"
            {<point name="construct.c.page4.xmdq007" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdq008
            #add-point:BEFORE FIELD xmdq008 name="construct.b.page4.xmdq008"
            {<point name="construct.b.page4.xmdq008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdq008
            
            #add-point:AFTER FIELD xmdq008 name="construct.a.page4.xmdq008"
            {<point name="construct.a.page4.xmdq008" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmdq008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdq008
            #add-point:ON ACTION controlp INFIELD xmdq008 name="construct.c.page4.xmdq008"
            {<point name="construct.c.page4.xmdq008" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdq009
            #add-point:BEFORE FIELD xmdq009 name="construct.b.page4.xmdq009"
            {<point name="construct.b.page4.xmdq009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdq009
            
            #add-point:AFTER FIELD xmdq009 name="construct.a.page4.xmdq009"
            {<point name="construct.a.page4.xmdq009" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmdq009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdq009
            #add-point:ON ACTION controlp INFIELD xmdq009 name="construct.c.page4.xmdq009"
            {<point name="construct.c.page4.xmdq009" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdq002
            #add-point:BEFORE FIELD xmdq002 name="construct.b.page4.xmdq002"
            {<point name="construct.b.page4.xmdq002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdq002
            
            #add-point:AFTER FIELD xmdq002 name="construct.a.page4.xmdq002"
            {<point name="construct.a.page4.xmdq002" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmdq002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdq002
            #add-point:ON ACTION controlp INFIELD xmdq002 name="construct.c.page4.xmdq002"
            {<point name="construct.c.page4.xmdq002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdq004
            #add-point:BEFORE FIELD xmdq004 name="construct.b.page4.xmdq004"
            {<point name="construct.b.page4.xmdq004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdq004
            
            #add-point:AFTER FIELD xmdq004 name="construct.a.page4.xmdq004"
            {<point name="construct.a.page4.xmdq004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmdq004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdq004
            #add-point:ON ACTION controlp INFIELD xmdq004 name="construct.c.page4.xmdq004"
            {<point name="construct.c.page4.xmdq004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdq005
            #add-point:BEFORE FIELD xmdq005 name="construct.b.page4.xmdq005"
            {<point name="construct.b.page4.xmdq005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdq005
            
            #add-point:AFTER FIELD xmdq005 name="construct.a.page4.xmdq005"
            {<point name="construct.a.page4.xmdq005" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmdq005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdq005
            #add-point:ON ACTION controlp INFIELD xmdq005 name="construct.c.page4.xmdq005"
            {<point name="construct.c.page4.xmdq005" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table4 ON xmdb001,xmdb002,xmdb003,xmdb004,xmdb005,xmdb006,xmdb016,xmdb017,xmdb007, 
          xmdb008,xmdb009
           FROM s_detail5[1].xmdb001,s_detail5[1].xmdb002,s_detail5[1].xmdb003,s_detail5[1].xmdb004, 
               s_detail5[1].xmdb005,s_detail5[1].xmdb006,s_detail5[1].xmdb016,s_detail5[1].xmdb017,s_detail5[1].xmdb007, 
               s_detail5[1].xmdb008,s_detail5[1].xmdb009
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body4.before_construct"
            {<point name="cs.body4.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 4)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdb001
            #add-point:BEFORE FIELD xmdb001 name="construct.b.page5.xmdb001"
            {<point name="construct.b.page5.xmdb001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdb001
            
            #add-point:AFTER FIELD xmdb001 name="construct.a.page5.xmdb001"
            {<point name="construct.a.page5.xmdb001" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.xmdb001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdb001
            #add-point:ON ACTION controlp INFIELD xmdb001 name="construct.c.page5.xmdb001"
            {<point name="construct.c.page5.xmdb001" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page5.xmdb002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdb002
            #add-point:ON ACTION controlp INFIELD xmdb002 name="construct.c.page5.xmdb002"
            {<point name="construct.c.page5.xmdb002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdb002
            #add-point:BEFORE FIELD xmdb002 name="construct.b.page5.xmdb002"
            {<point name="construct.b.page5.xmdb002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdb002
            
            #add-point:AFTER FIELD xmdb002 name="construct.a.page5.xmdb002"
            {<point name="construct.a.page5.xmdb002" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdb003
            #add-point:BEFORE FIELD xmdb003 name="construct.b.page5.xmdb003"
            {<point name="construct.b.page5.xmdb003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdb003
            
            #add-point:AFTER FIELD xmdb003 name="construct.a.page5.xmdb003"
            {<point name="construct.a.page5.xmdb003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.xmdb003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdb003
            #add-point:ON ACTION controlp INFIELD xmdb003 name="construct.c.page5.xmdb003"
            {<point name="construct.c.page5.xmdb003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdb004
            #add-point:BEFORE FIELD xmdb004 name="construct.b.page5.xmdb004"
            {<point name="construct.b.page5.xmdb004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdb004
            
            #add-point:AFTER FIELD xmdb004 name="construct.a.page5.xmdb004"
            {<point name="construct.a.page5.xmdb004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.xmdb004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdb004
            #add-point:ON ACTION controlp INFIELD xmdb004 name="construct.c.page5.xmdb004"
            {<point name="construct.c.page5.xmdb004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdb005
            #add-point:BEFORE FIELD xmdb005 name="construct.b.page5.xmdb005"
            {<point name="construct.b.page5.xmdb005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdb005
            
            #add-point:AFTER FIELD xmdb005 name="construct.a.page5.xmdb005"
            {<point name="construct.a.page5.xmdb005" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.xmdb005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdb005
            #add-point:ON ACTION controlp INFIELD xmdb005 name="construct.c.page5.xmdb005"
            {<point name="construct.c.page5.xmdb005" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdb006
            #add-point:BEFORE FIELD xmdb006 name="construct.b.page5.xmdb006"
            {<point name="construct.b.page5.xmdb006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdb006
            
            #add-point:AFTER FIELD xmdb006 name="construct.a.page5.xmdb006"
            {<point name="construct.a.page5.xmdb006" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.xmdb006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdb006
            #add-point:ON ACTION controlp INFIELD xmdb006 name="construct.c.page5.xmdb006"
            {<point name="construct.c.page5.xmdb006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdb016
            #add-point:BEFORE FIELD xmdb016 name="construct.b.page5.xmdb016"
            {<point name="construct.b.page5.xmdb016" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdb016
            
            #add-point:AFTER FIELD xmdb016 name="construct.a.page5.xmdb016"
            {<point name="construct.a.page5.xmdb016" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.xmdb016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdb016
            #add-point:ON ACTION controlp INFIELD xmdb016 name="construct.c.page5.xmdb016"
            {<point name="construct.c.page5.xmdb016" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdb017
            #add-point:BEFORE FIELD xmdb017 name="construct.b.page5.xmdb017"
            {<point name="construct.b.page5.xmdb017" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdb017
            
            #add-point:AFTER FIELD xmdb017 name="construct.a.page5.xmdb017"
            {<point name="construct.a.page5.xmdb017" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.xmdb017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdb017
            #add-point:ON ACTION controlp INFIELD xmdb017 name="construct.c.page5.xmdb017"
            {<point name="construct.c.page5.xmdb017" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdb007
            #add-point:BEFORE FIELD xmdb007 name="construct.b.page5.xmdb007"
            {<point name="construct.b.page5.xmdb007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdb007
            
            #add-point:AFTER FIELD xmdb007 name="construct.a.page5.xmdb007"
            {<point name="construct.a.page5.xmdb007" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.xmdb007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdb007
            #add-point:ON ACTION controlp INFIELD xmdb007 name="construct.c.page5.xmdb007"
            {<point name="construct.c.page5.xmdb007" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdb008
            #add-point:BEFORE FIELD xmdb008 name="construct.b.page5.xmdb008"
            {<point name="construct.b.page5.xmdb008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdb008
            
            #add-point:AFTER FIELD xmdb008 name="construct.a.page5.xmdb008"
            {<point name="construct.a.page5.xmdb008" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.xmdb008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdb008
            #add-point:ON ACTION controlp INFIELD xmdb008 name="construct.c.page5.xmdb008"
            {<point name="construct.c.page5.xmdb008" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdb009
            #add-point:BEFORE FIELD xmdb009 name="construct.b.page5.xmdb009"
            {<point name="construct.b.page5.xmdb009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdb009
            
            #add-point:AFTER FIELD xmdb009 name="construct.a.page5.xmdb009"
            {<point name="construct.a.page5.xmdb009" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.xmdb009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdb009
            #add-point:ON ACTION controlp INFIELD xmdb009 name="construct.c.page5.xmdb009"
            {<point name="construct.c.page5.xmdb009" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table5 ON xmdsseq,xmds001,xmds002,xmds003,xmds004,xmds005,xmds006
           FROM s_detail6[1].xmdsseq,s_detail6[1].xmds001,s_detail6[1].xmds002,s_detail6[1].xmds003, 
               s_detail6[1].xmds004,s_detail6[1].xmds005,s_detail6[1].xmds006
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body5.before_construct"
            {<point name="cs.body5.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 5)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdsseq
            #add-point:BEFORE FIELD xmdsseq name="construct.b.page6.xmdsseq"
            {<point name="construct.b.page6.xmdsseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdsseq
            
            #add-point:AFTER FIELD xmdsseq name="construct.a.page6.xmdsseq"
            {<point name="construct.a.page6.xmdsseq" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.xmdsseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdsseq
            #add-point:ON ACTION controlp INFIELD xmdsseq name="construct.c.page6.xmdsseq"
            {<point name="construct.c.page6.xmdsseq" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page6.xmds001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmds001
            #add-point:ON ACTION controlp INFIELD xmds001 name="construct.c.page6.xmds001"
            {<point name="construct.c.page6.xmds001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmds001
            #add-point:BEFORE FIELD xmds001 name="construct.b.page6.xmds001"
            {<point name="construct.b.page6.xmds001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmds001
            
            #add-point:AFTER FIELD xmds001 name="construct.a.page6.xmds001"
            {<point name="construct.a.page6.xmds001" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.xmds002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmds002
            #add-point:ON ACTION controlp INFIELD xmds002 name="construct.c.page6.xmds002"
            {<point name="construct.c.page6.xmds002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmds002
            #add-point:BEFORE FIELD xmds002 name="construct.b.page6.xmds002"
            {<point name="construct.b.page6.xmds002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmds002
            
            #add-point:AFTER FIELD xmds002 name="construct.a.page6.xmds002"
            {<point name="construct.a.page6.xmds002" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmds003
            #add-point:BEFORE FIELD xmds003 name="construct.b.page6.xmds003"
            {<point name="construct.b.page6.xmds003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmds003
            
            #add-point:AFTER FIELD xmds003 name="construct.a.page6.xmds003"
            {<point name="construct.a.page6.xmds003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.xmds003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmds003
            #add-point:ON ACTION controlp INFIELD xmds003 name="construct.c.page6.xmds003"
            {<point name="construct.c.page6.xmds003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmds004
            #add-point:BEFORE FIELD xmds004 name="construct.b.page6.xmds004"
            {<point name="construct.b.page6.xmds004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmds004
            
            #add-point:AFTER FIELD xmds004 name="construct.a.page6.xmds004"
            {<point name="construct.a.page6.xmds004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.xmds004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmds004
            #add-point:ON ACTION controlp INFIELD xmds004 name="construct.c.page6.xmds004"
            {<point name="construct.c.page6.xmds004" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page6.xmds005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmds005
            #add-point:ON ACTION controlp INFIELD xmds005 name="construct.c.page6.xmds005"
            {<point name="construct.c.page6.xmds005" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmds005
            #add-point:BEFORE FIELD xmds005 name="construct.b.page6.xmds005"
            {<point name="construct.b.page6.xmds005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmds005
            
            #add-point:AFTER FIELD xmds005 name="construct.a.page6.xmds005"
            {<point name="construct.a.page6.xmds005" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmds006
            #add-point:BEFORE FIELD xmds006 name="construct.b.page6.xmds006"
            {<point name="construct.b.page6.xmds006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmds006
            
            #add-point:AFTER FIELD xmds006 name="construct.a.page6.xmds006"
            {<point name="construct.a.page6.xmds006" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.xmds006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmds006
            #add-point:ON ACTION controlp INFIELD xmds006 name="construct.c.page6.xmds006"
            {<point name="construct.c.page6.xmds006" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
            INITIALIZE g_wc2_table2 TO NULL
 
            INITIALIZE g_wc2_table3 TO NULL
 
            INITIALIZE g_wc2_table4 TO NULL
 
            INITIALIZE g_wc2_table5 TO NULL
 
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "xmda_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "xmdc_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "xmdd_t" 
                     LET g_wc2_table2 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "xmdq_t" 
                     LET g_wc2_table3 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "xmdb_t" 
                     LET g_wc2_table4 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "xmds_t" 
                     LET g_wc2_table5 = la_wc[li_idx].wc
 
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
   IF g_wc2_table4 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
   END IF
 
   IF g_wc2_table5 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
   END IF
 
 
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION

{</section>}

{<section id="axmt500.filter" >}
#應用 a50 樣板自動產生(Version:8)
#+ filter過濾功能
PRIVATE FUNCTION axmt500_filter()
   #add-point:filter段define name="filter.define_customerization"
   {<point name="filter.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   {<point name="filter.define"/>}
   #end add-point   
   
   #add-point:Function前置處理  name="filter.pre_function"
   {<point name="filter.pre_function"/>}
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON xmdadocno,xmdadocdt,xmda001,xmda002,xmda003,xmda004
                          FROM s_browse[1].b_xmdadocno,s_browse[1].b_xmdadocdt,s_browse[1].b_xmda001, 
                              s_browse[1].b_xmda002,s_browse[1].b_xmda003,s_browse[1].b_xmda004
 
         BEFORE CONSTRUCT
               DISPLAY axmt500_filter_parser('xmdadocno') TO s_browse[1].b_xmdadocno
            DISPLAY axmt500_filter_parser('xmdadocdt') TO s_browse[1].b_xmdadocdt
            DISPLAY axmt500_filter_parser('xmda001') TO s_browse[1].b_xmda001
            DISPLAY axmt500_filter_parser('xmda002') TO s_browse[1].b_xmda002
            DISPLAY axmt500_filter_parser('xmda003') TO s_browse[1].b_xmda003
            DISPLAY axmt500_filter_parser('xmda004') TO s_browse[1].b_xmda004
      
         #add-point:filter段cs_ctrl name="filter.cs_ctrl"
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL axmt500_filter_show('xmdadocno')
   CALL axmt500_filter_show('xmdadocdt')
   CALL axmt500_filter_show('xmda001')
   CALL axmt500_filter_show('xmda002')
   CALL axmt500_filter_show('xmda003')
   CALL axmt500_filter_show('xmda004')
 
END FUNCTION

{</section>}

{<section id="axmt500.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION axmt500_filter_parser(ps_field)
   #add-point:filter段define name="filter_parser.define_customerization"
   {<point name="filter_parser.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   {<point name="filter_parser.define"/>}
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION

{</section>}

{<section id="axmt500.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION axmt500_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = axmt500_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION

{</section>}

{<section id="axmt500.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION axmt500_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   {<point name="query.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   {<point name="query.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   {<point name="query.pre_function"/>}
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_xmdc_d.clear()
   CALL g_xmdc2_d.clear()
   CALL g_xmdc3_d.clear()
   CALL g_xmdc4_d.clear()
   CALL g_xmdc5_d.clear()
   CALL g_xmdc6_d.clear()
 
   
   #add-point:query段other name="query.other"
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL axmt500_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL axmt500_browser_fill("")
      CALL axmt500_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
   LET g_detail_idx_list[4] = 1
   LET g_detail_idx_list[5] = 1
   LET g_detail_idx_list[6] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL axmt500_filter_show('xmdadocno')
   CALL axmt500_filter_show('xmdadocdt')
   CALL axmt500_filter_show('xmda001')
   CALL axmt500_filter_show('xmda002')
   CALL axmt500_filter_show('xmda003')
   CALL axmt500_filter_show('xmda004')
   CALL axmt500_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "-100" 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
   ELSE
      CALL axmt500_fetch("F") 
      #顯示單身筆數
      CALL axmt500_idx_chk()
   END IF
 
END FUNCTION

{</section>}

{<section id="axmt500.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION axmt500_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   {<point name="fetch.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   {<point name="fetch.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   {<point name="fetch.pre_function"/>}
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_xmda_m.xmdadocno = g_browser[g_current_idx].b_xmdadocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE axmt500_master_referesh USING g_xmda_m.xmdadocno INTO g_xmda_m.xmdadocno,g_xmda_m.xmda001, 
       g_xmda_m.xmdadocdt,g_xmda_m.xmda004,g_xmda_m.xmda002,g_xmda_m.xmda003,g_xmda_m.xmdasite,g_xmda_m.xmdastus, 
       g_xmda_m.xmda005,g_xmda_m.xmda006,g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda033,g_xmda_m.xmda027, 
       g_xmda_m.xmda009,g_xmda_m.xmda010,g_xmda_m.xmda011,g_xmda_m.xmda012,g_xmda_m.xmda013,g_xmda_m.xmda035, 
       g_xmda_m.xmda015,g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda018,g_xmda_m.xmda019,g_xmda_m.xmda023, 
       g_xmda_m.xmda032,g_xmda_m.xmda071,g_xmda_m.xmda050,g_xmda_m.xmda021,g_xmda_m.xmda022,g_xmda_m.xmda034, 
       g_xmda_m.xmda203,g_xmda_m.xmda024,g_xmda_m.xmda048,g_xmda_m.xmda052,g_xmda_m.xmda049,g_xmda_m.xmda044, 
       g_xmda_m.xmda030,g_xmda_m.xmda031,g_xmda_m.xmda045,g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028, 
       g_xmda_m.xmda043,g_xmda_m.xmda025,g_xmda_m.xmda026,g_xmda_m.xmda020,g_xmda_m.xmda037,g_xmda_m.xmda038, 
       g_xmda_m.xmda036,g_xmda_m.xmda039,g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdaownid,g_xmda_m.xmdaowndp, 
       g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid,g_xmda_m.xmdamoddt, 
       g_xmda_m.xmdacnfid,g_xmda_m.xmdacnfdt,g_xmda_m.xmda004_desc,g_xmda_m.xmda002_desc,g_xmda_m.xmda003_desc, 
       g_xmda_m.xmda009_desc,g_xmda_m.xmda010_desc,g_xmda_m.xmda015_desc,g_xmda_m.xmda017_desc,g_xmda_m.xmda018_desc, 
       g_xmda_m.xmda023_desc,g_xmda_m.xmda032_desc,g_xmda_m.xmda050_desc,g_xmda_m.xmda021_desc,g_xmda_m.xmda022_desc, 
       g_xmda_m.xmda034_desc,g_xmda_m.xmda203_desc,g_xmda_m.xmda024_desc,g_xmda_m.xmda044_desc,g_xmda_m.xmda025_desc, 
       g_xmda_m.xmda026_desc,g_xmda_m.xmda020_desc,g_xmda_m.xmda036_desc,g_xmda_m.xmdaownid_desc,g_xmda_m.xmdaowndp_desc, 
       g_xmda_m.xmdacrtid_desc,g_xmda_m.xmdacrtdp_desc,g_xmda_m.xmdamodid_desc,g_xmda_m.xmdacnfid_desc 

   
   #遮罩相關處理
   LET g_xmda_m_mask_o.* =  g_xmda_m.*
   CALL axmt500_xmda_t_mask()
   LET g_xmda_m_mask_n.* =  g_xmda_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt500_set_act_visible()   
   CALL axmt500_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_xmda_m_t.* = g_xmda_m.*
   LET g_xmda_m_o.* = g_xmda_m.*
   
   LET g_data_owner = g_xmda_m.xmdaownid      
   LET g_data_dept  = g_xmda_m.xmdaowndp
   
   #重新顯示   
   CALL axmt500_show()
 
   #應用 a56 樣板自動產生(Version:3)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
 
END FUNCTION

{</section>}

{<section id="axmt500.insert" >}
#+ 資料新增
PRIVATE FUNCTION axmt500_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   {<point name="insert.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   {<point name="insert.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   {<point name="insert.pre_function"/>}
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_xmdc_d.clear()   
   CALL g_xmdc2_d.clear()  
   CALL g_xmdc3_d.clear()  
   CALL g_xmdc4_d.clear()  
   CALL g_xmdc5_d.clear()  
   CALL g_xmdc6_d.clear()  
 
 
   INITIALIZE g_xmda_m.* TO NULL             #DEFAULT 設定
   
   LET g_xmdadocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_xmda_m.xmdaownid = g_user
      LET g_xmda_m.xmdaowndp = g_dept
      LET g_xmda_m.xmdacrtid = g_user
      LET g_xmda_m.xmdacrtdp = g_dept 
      LET g_xmda_m.xmdacrtdt = cl_get_current()
      LET g_xmda_m.xmdamodid = g_user
      LET g_xmda_m.xmdamoddt = cl_get_current()
      LET g_xmda_m.xmdastus = 'N'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_xmda_m.xmda001 = "0"
      LET g_xmda_m.xmdastus = "N"
      LET g_xmda_m.xmda005 = "1"
      LET g_xmda_m.xmda006 = "1"
      LET g_xmda_m.xmda007 = "1"
      LET g_xmda_m.xmda013 = "N"
      LET g_xmda_m.xmda019 = "Y"
      LET g_xmda_m.xmda048 = "1"
      LET g_xmda_m.xmda049 = "1"
      LET g_xmda_m.xmda030 = "N"
      LET g_xmda_m.xmda045 = "N"
      LET g_xmda_m.xmda046 = "N"
      LET g_xmda_m.xmda047 = "N"
      LET g_xmda_m.xmda043 = "0"
      LET g_xmda_m.xmda039 = "1"
      LET g_xmda_m.xmda041 = "0"
      LET g_xmda_m.xmda042 = "0"
 
  
      #add-point:單頭預設值 name="insert.default"
      {<point name="insert.default"/>}
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_xmda_m_t.* = g_xmda_m.*
      LET g_xmda_m_o.* = g_xmda_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_xmda_m.xmdastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "H"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/hold.png")
         WHEN "UH"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unhold.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
    
      CALL axmt500_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_xmda_m.* TO NULL
         INITIALIZE g_xmdc_d TO NULL
         INITIALIZE g_xmdc2_d TO NULL
         INITIALIZE g_xmdc3_d TO NULL
         INITIALIZE g_xmdc4_d TO NULL
         INITIALIZE g_xmdc5_d TO NULL
         INITIALIZE g_xmdc6_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL axmt500_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_xmdc_d.clear()
      #CALL g_xmdc2_d.clear()
      #CALL g_xmdc3_d.clear()
      #CALL g_xmdc4_d.clear()
      #CALL g_xmdc5_d.clear()
      #CALL g_xmdc6_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt500_set_act_visible()   
   CALL axmt500_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_xmdadocno_t = g_xmda_m.xmdadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " xmdaent = " ||g_enterprise|| " AND",
                      " xmdadocno = '", g_xmda_m.xmdadocno, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axmt500_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE axmt500_cl
   
   CALL axmt500_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE axmt500_master_referesh USING g_xmda_m.xmdadocno INTO g_xmda_m.xmdadocno,g_xmda_m.xmda001, 
       g_xmda_m.xmdadocdt,g_xmda_m.xmda004,g_xmda_m.xmda002,g_xmda_m.xmda003,g_xmda_m.xmdasite,g_xmda_m.xmdastus, 
       g_xmda_m.xmda005,g_xmda_m.xmda006,g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda033,g_xmda_m.xmda027, 
       g_xmda_m.xmda009,g_xmda_m.xmda010,g_xmda_m.xmda011,g_xmda_m.xmda012,g_xmda_m.xmda013,g_xmda_m.xmda035, 
       g_xmda_m.xmda015,g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda018,g_xmda_m.xmda019,g_xmda_m.xmda023, 
       g_xmda_m.xmda032,g_xmda_m.xmda071,g_xmda_m.xmda050,g_xmda_m.xmda021,g_xmda_m.xmda022,g_xmda_m.xmda034, 
       g_xmda_m.xmda203,g_xmda_m.xmda024,g_xmda_m.xmda048,g_xmda_m.xmda052,g_xmda_m.xmda049,g_xmda_m.xmda044, 
       g_xmda_m.xmda030,g_xmda_m.xmda031,g_xmda_m.xmda045,g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028, 
       g_xmda_m.xmda043,g_xmda_m.xmda025,g_xmda_m.xmda026,g_xmda_m.xmda020,g_xmda_m.xmda037,g_xmda_m.xmda038, 
       g_xmda_m.xmda036,g_xmda_m.xmda039,g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdaownid,g_xmda_m.xmdaowndp, 
       g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid,g_xmda_m.xmdamoddt, 
       g_xmda_m.xmdacnfid,g_xmda_m.xmdacnfdt,g_xmda_m.xmda004_desc,g_xmda_m.xmda002_desc,g_xmda_m.xmda003_desc, 
       g_xmda_m.xmda009_desc,g_xmda_m.xmda010_desc,g_xmda_m.xmda015_desc,g_xmda_m.xmda017_desc,g_xmda_m.xmda018_desc, 
       g_xmda_m.xmda023_desc,g_xmda_m.xmda032_desc,g_xmda_m.xmda050_desc,g_xmda_m.xmda021_desc,g_xmda_m.xmda022_desc, 
       g_xmda_m.xmda034_desc,g_xmda_m.xmda203_desc,g_xmda_m.xmda024_desc,g_xmda_m.xmda044_desc,g_xmda_m.xmda025_desc, 
       g_xmda_m.xmda026_desc,g_xmda_m.xmda020_desc,g_xmda_m.xmda036_desc,g_xmda_m.xmdaownid_desc,g_xmda_m.xmdaowndp_desc, 
       g_xmda_m.xmdacrtid_desc,g_xmda_m.xmdacrtdp_desc,g_xmda_m.xmdamodid_desc,g_xmda_m.xmdacnfid_desc 

   
   
   #遮罩相關處理
   LET g_xmda_m_mask_o.* =  g_xmda_m.*
   CALL axmt500_xmda_t_mask()
   LET g_xmda_m_mask_n.* =  g_xmda_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_xmda_m.xmdadocno,g_xmda_m.xmda001,g_xmda_m.xmdadocno_desc,g_xmda_m.xmdadocdt,g_xmda_m.xmda004, 
       g_xmda_m.xmda004_desc,g_xmda_m.xmda002,g_xmda_m.xmda002_desc,g_xmda_m.xmda003,g_xmda_m.xmda003_desc, 
       g_xmda_m.xmdasite,g_xmda_m.xmdastus,g_xmda_m.xmda005,g_xmda_m.xmda006,g_xmda_m.xmda007,g_xmda_m.xmda008, 
       g_xmda_m.xmda033,g_xmda_m.xmda027,g_xmda_m.xmda027_desc,g_xmda_m.xmda009,g_xmda_m.xmda009_desc, 
       g_xmda_m.xmda010,g_xmda_m.xmda010_desc,g_xmda_m.xmda011,g_xmda_m.xmda011_desc,g_xmda_m.xmda012, 
       g_xmda_m.xmda013,g_xmda_m.xmda035,g_xmda_m.xmda035_desc,g_xmda_m.xmda015,g_xmda_m.xmda015_desc, 
       g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda017_desc,g_xmda_m.xmda018,g_xmda_m.xmda018_desc, 
       g_xmda_m.xmda019,g_xmda_m.xmda023,g_xmda_m.xmda023_desc,g_xmda_m.xmda032,g_xmda_m.xmda032_desc, 
       g_xmda_m.xmda071,g_xmda_m.xmda050,g_xmda_m.xmda050_desc,g_xmda_m.xmda021,g_xmda_m.xmda021_desc, 
       g_xmda_m.xmda022,g_xmda_m.xmda022_desc,g_xmda_m.xmda034,g_xmda_m.xmda034_desc,g_xmda_m.xmda203, 
       g_xmda_m.xmda203_desc,g_xmda_m.xmda024,g_xmda_m.xmda024_desc,g_xmda_m.xmda048,g_xmda_m.xmda052, 
       g_xmda_m.xmda049,g_xmda_m.xmda044,g_xmda_m.xmda044_desc,g_xmda_m.xmda030,g_xmda_m.xmda031,g_xmda_m.xmda045, 
       g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028,g_xmda_m.xmda043,g_xmda_m.xmda025,g_xmda_m.xmda025_desc, 
       g_xmda_m.oofb0171,g_xmda_m.xmda026,g_xmda_m.xmda026_desc,g_xmda_m.oofb0172,g_xmda_m.xmda020,g_xmda_m.xmda020_desc, 
       g_xmda_m.xmda037,g_xmda_m.xmda037_desc,g_xmda_m.xmda038,g_xmda_m.xmda038_desc,g_xmda_m.xmda036, 
       g_xmda_m.xmda036_desc,g_xmda_m.xmda039,g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdaownid,g_xmda_m.xmdaownid_desc, 
       g_xmda_m.xmdaowndp,g_xmda_m.xmdaowndp_desc,g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtid_desc,g_xmda_m.xmdacrtdp, 
       g_xmda_m.xmdacrtdp_desc,g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid,g_xmda_m.xmdamodid_desc,g_xmda_m.xmdamoddt, 
       g_xmda_m.xmdacnfid,g_xmda_m.xmdacnfid_desc,g_xmda_m.xmdacnfdt
   
   #add-point:新增結束後 name="insert.after"
   {<point name="insert.after"/>}
   #end add-point 
   
   LET g_data_owner = g_xmda_m.xmdaownid      
   LET g_data_dept  = g_xmda_m.xmdaowndp
   
   #功能已完成,通報訊息中心
   CALL axmt500_msgcentre_notify('insert')
   
END FUNCTION

{</section>}

{<section id="axmt500.modify" >}
#+ 資料修改
PRIVATE FUNCTION axmt500_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   {<point name="modify.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING
 
   DEFINE l_wc2_table3   STRING
 
   DEFINE l_wc2_table4   STRING
 
   DEFINE l_wc2_table5   STRING
 
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   {<point name="modify.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   {<point name="modify.pre_function"/>}
   #end add-point
   
   #保存單頭舊值
   LET g_xmda_m_t.* = g_xmda_m.*
   LET g_xmda_m_o.* = g_xmda_m.*
   
   IF g_xmda_m.xmdadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_xmdadocno_t = g_xmda_m.xmdadocno
 
   CALL s_transaction_begin()
   
   OPEN axmt500_cl USING g_enterprise,g_xmda_m.xmdadocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axmt500_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE axmt500_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axmt500_master_referesh USING g_xmda_m.xmdadocno INTO g_xmda_m.xmdadocno,g_xmda_m.xmda001, 
       g_xmda_m.xmdadocdt,g_xmda_m.xmda004,g_xmda_m.xmda002,g_xmda_m.xmda003,g_xmda_m.xmdasite,g_xmda_m.xmdastus, 
       g_xmda_m.xmda005,g_xmda_m.xmda006,g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda033,g_xmda_m.xmda027, 
       g_xmda_m.xmda009,g_xmda_m.xmda010,g_xmda_m.xmda011,g_xmda_m.xmda012,g_xmda_m.xmda013,g_xmda_m.xmda035, 
       g_xmda_m.xmda015,g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda018,g_xmda_m.xmda019,g_xmda_m.xmda023, 
       g_xmda_m.xmda032,g_xmda_m.xmda071,g_xmda_m.xmda050,g_xmda_m.xmda021,g_xmda_m.xmda022,g_xmda_m.xmda034, 
       g_xmda_m.xmda203,g_xmda_m.xmda024,g_xmda_m.xmda048,g_xmda_m.xmda052,g_xmda_m.xmda049,g_xmda_m.xmda044, 
       g_xmda_m.xmda030,g_xmda_m.xmda031,g_xmda_m.xmda045,g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028, 
       g_xmda_m.xmda043,g_xmda_m.xmda025,g_xmda_m.xmda026,g_xmda_m.xmda020,g_xmda_m.xmda037,g_xmda_m.xmda038, 
       g_xmda_m.xmda036,g_xmda_m.xmda039,g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdaownid,g_xmda_m.xmdaowndp, 
       g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid,g_xmda_m.xmdamoddt, 
       g_xmda_m.xmdacnfid,g_xmda_m.xmdacnfdt,g_xmda_m.xmda004_desc,g_xmda_m.xmda002_desc,g_xmda_m.xmda003_desc, 
       g_xmda_m.xmda009_desc,g_xmda_m.xmda010_desc,g_xmda_m.xmda015_desc,g_xmda_m.xmda017_desc,g_xmda_m.xmda018_desc, 
       g_xmda_m.xmda023_desc,g_xmda_m.xmda032_desc,g_xmda_m.xmda050_desc,g_xmda_m.xmda021_desc,g_xmda_m.xmda022_desc, 
       g_xmda_m.xmda034_desc,g_xmda_m.xmda203_desc,g_xmda_m.xmda024_desc,g_xmda_m.xmda044_desc,g_xmda_m.xmda025_desc, 
       g_xmda_m.xmda026_desc,g_xmda_m.xmda020_desc,g_xmda_m.xmda036_desc,g_xmda_m.xmdaownid_desc,g_xmda_m.xmdaowndp_desc, 
       g_xmda_m.xmdacrtid_desc,g_xmda_m.xmdacrtdp_desc,g_xmda_m.xmdamodid_desc,g_xmda_m.xmdacnfid_desc 

   
   #檢查是否允許此動作
   IF NOT axmt500_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_xmda_m_mask_o.* =  g_xmda_m.*
   CALL axmt500_xmda_t_mask()
   LET g_xmda_m_mask_n.* =  g_xmda_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
   #LET l_wc2_table3 = g_wc2_table3
   #LET l_wc2_table3 = " 1=1"
 
   #LET l_wc2_table4 = g_wc2_table4
   #LET l_wc2_table4 = " 1=1"
 
   #LET l_wc2_table5 = g_wc2_table5
   #LET l_wc2_table5 = " 1=1"
 
 
 
   
   CALL axmt500_show()
   #add-point:modify段show之後 name="modify.after_show"
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 
 
   #LET  g_wc2_table3 = l_wc2_table3 
 
   #LET  g_wc2_table4 = l_wc2_table4 
 
   #LET  g_wc2_table5 = l_wc2_table5 
 
 
 
    
   WHILE TRUE
      LET g_xmdadocno_t = g_xmda_m.xmdadocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_xmda_m.xmdamodid = g_user 
LET g_xmda_m.xmdamoddt = cl_get_current()
LET g_xmda_m.xmdamodid_desc = cl_get_username(g_xmda_m.xmdamodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL axmt500_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE xmda_t SET (xmdamodid,xmdamoddt) = (g_xmda_m.xmdamodid,g_xmda_m.xmdamoddt)
          WHERE xmdaent = g_enterprise AND xmdadocno = g_xmdadocno_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_xmda_m.* = g_xmda_m_t.*
            CALL axmt500_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_xmda_m.xmdadocno != g_xmda_m_t.xmdadocno
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE xmdc_t SET xmdcdocno = g_xmda_m.xmdadocno
 
          WHERE xmdcent = g_enterprise AND xmdcdocno = g_xmda_m_t.xmdadocno
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "xmdc_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmdc_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update2"
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         
         UPDATE xmdd_t
            SET xmdddocno = g_xmda_m.xmdadocno
 
          WHERE xmddent = g_enterprise AND
                xmdddocno = g_xmdadocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update2"
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "xmdd_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmdd_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update2"
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update3"
         {<point name="modify.body.b_fk_update3" mark="Y"/>}
         #end add-point
         
         UPDATE xmdq_t
            SET xmdqdocno = g_xmda_m.xmdadocno
 
          WHERE xmdqent = g_enterprise AND
                xmdqdocno = g_xmdadocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update3"
         {<point name="modify.body.m_fk_update3"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "xmdq_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmdq_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update3"
         {<point name="modify.body.a_fk_update3"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update4"
         {<point name="modify.body.b_fk_update4" mark="Y"/>}
         #end add-point
         
         UPDATE xmdb_t
            SET xmdbdocno = g_xmda_m.xmdadocno
 
          WHERE xmdbent = g_enterprise AND
                xmdbdocno = g_xmdadocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update4"
         {<point name="modify.body.m_fk_update4"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "xmdb_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmdb_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update4"
         {<point name="modify.body.a_fk_update4"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update5"
         {<point name="modify.body.b_fk_update5" mark="Y"/>}
         #end add-point
         
         UPDATE xmds_t
            SET xmdsdocno = g_xmda_m.xmdadocno
 
          WHERE xmdsent = g_enterprise AND
                xmdsdocno = g_xmdadocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update5"
         {<point name="modify.body.m_fk_update5"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "xmds_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmds_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update5"
         {<point name="modify.body.a_fk_update5"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
         
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt500_set_act_visible()   
   CALL axmt500_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " xmdaent = " ||g_enterprise|| " AND",
                      " xmdadocno = '", g_xmda_m.xmdadocno, "' "
 
   #填到對應位置
   CALL axmt500_browser_fill("")
 
   CLOSE axmt500_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL axmt500_msgcentre_notify('modify')
 
END FUNCTION 

{</section>}

{<section id="axmt500.input" >}
#+ 資料輸入
PRIVATE FUNCTION axmt500_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   {<point name="input.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   {<point name="input.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   {<point name="input.pre_function"/>}
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xmda_m.xmdadocno,g_xmda_m.xmda001,g_xmda_m.xmdadocno_desc,g_xmda_m.xmdadocdt,g_xmda_m.xmda004, 
       g_xmda_m.xmda004_desc,g_xmda_m.xmda002,g_xmda_m.xmda002_desc,g_xmda_m.xmda003,g_xmda_m.xmda003_desc, 
       g_xmda_m.xmdasite,g_xmda_m.xmdastus,g_xmda_m.xmda005,g_xmda_m.xmda006,g_xmda_m.xmda007,g_xmda_m.xmda008, 
       g_xmda_m.xmda033,g_xmda_m.xmda027,g_xmda_m.xmda027_desc,g_xmda_m.xmda009,g_xmda_m.xmda009_desc, 
       g_xmda_m.xmda010,g_xmda_m.xmda010_desc,g_xmda_m.xmda011,g_xmda_m.xmda011_desc,g_xmda_m.xmda012, 
       g_xmda_m.xmda013,g_xmda_m.xmda035,g_xmda_m.xmda035_desc,g_xmda_m.xmda015,g_xmda_m.xmda015_desc, 
       g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda017_desc,g_xmda_m.xmda018,g_xmda_m.xmda018_desc, 
       g_xmda_m.xmda019,g_xmda_m.xmda023,g_xmda_m.xmda023_desc,g_xmda_m.xmda032,g_xmda_m.xmda032_desc, 
       g_xmda_m.xmda071,g_xmda_m.xmda050,g_xmda_m.xmda050_desc,g_xmda_m.xmda021,g_xmda_m.xmda021_desc, 
       g_xmda_m.xmda022,g_xmda_m.xmda022_desc,g_xmda_m.xmda034,g_xmda_m.xmda034_desc,g_xmda_m.xmda203, 
       g_xmda_m.xmda203_desc,g_xmda_m.xmda024,g_xmda_m.xmda024_desc,g_xmda_m.xmda048,g_xmda_m.xmda052, 
       g_xmda_m.xmda049,g_xmda_m.xmda044,g_xmda_m.xmda044_desc,g_xmda_m.xmda030,g_xmda_m.xmda031,g_xmda_m.xmda045, 
       g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028,g_xmda_m.xmda043,g_xmda_m.xmda025,g_xmda_m.xmda025_desc, 
       g_xmda_m.oofb0171,g_xmda_m.xmda026,g_xmda_m.xmda026_desc,g_xmda_m.oofb0172,g_xmda_m.xmda020,g_xmda_m.xmda020_desc, 
       g_xmda_m.xmda037,g_xmda_m.xmda037_desc,g_xmda_m.xmda038,g_xmda_m.xmda038_desc,g_xmda_m.xmda036, 
       g_xmda_m.xmda036_desc,g_xmda_m.xmda039,g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdaownid,g_xmda_m.xmdaownid_desc, 
       g_xmda_m.xmdaowndp,g_xmda_m.xmdaowndp_desc,g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtid_desc,g_xmda_m.xmdacrtdp, 
       g_xmda_m.xmdacrtdp_desc,g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid,g_xmda_m.xmdamodid_desc,g_xmda_m.xmdamoddt, 
       g_xmda_m.xmdacnfid,g_xmda_m.xmdacnfid_desc,g_xmda_m.xmdacnfdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT xmdcseq,xmdc027,xmdc001,xmdc062,xmdc019,xmdc002,xmdc006,xmdc007,xmdc008, 
       xmdc009,xmdc024,xmdc012,xmdc013,xmdc045,xmdc016,xmdc017,xmdc010,xmdc011,xmdc015,xmdc046,xmdc047, 
       xmdc048,xmdc023,xmdc020,xmdc021,xmdc022,xmdcunit,xmdcorga,xmdc052,xmdc049,xmdc053,xmdc050,xmdcsite, 
       xmdc058,xmdc059,xmdc060,xmdc061,xmdcseq,xmdc028,xmdc029,xmdc030,xmdc057,xmdc025,xmdc026,xmdc031, 
       xmdc032,xmdc033,xmdc003,xmdc054,xmdc036,xmdc037,xmdc038,xmdc039,xmdc035,xmdc040,xmdc041,xmdc042, 
       xmdc043,xmdc044,xmdc055,xmdc056 FROM xmdc_t WHERE xmdcent=? AND xmdcdocno=? AND xmdcseq=? FOR  
       UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt500_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql name="input.define_sql2"
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT xmddseq,xmddseq1,xmdd003,xmdd001,xmdd040,xmdd002,xmdd004,xmdd005,xmddseq2, 
       xmdd006,xmdd024,xmdd025,xmdd011,xmdd012,xmdd010,xmdd013,xmdd009,xmdd031,xmdd014,xmdd015,xmdd016, 
       xmdd017,xmdd026,xmdd027,xmdd018,xmdd019,xmdd020,xmdd028,xmdd029,xmdd030,xmdd021,xmdd022,xmdd023, 
       xmddsite,xmdd036,xmdd037,xmdd038,xmdd039 FROM xmdd_t WHERE xmddent=? AND xmdddocno=? AND xmddseq=?  
       AND xmddseq1=? AND xmddseq2=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql2"
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt500_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql3"
   {<point name="input.define_sql3" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT xmdqdocno,xmdqseq,xmdqseq1,xmdq001,xmdq006,xmdq007,xmdq008,xmdq009,xmdq002, 
       xmdq004,xmdq005,xmdqsite FROM xmdq_t WHERE xmdqent=? AND xmdqdocno=? AND xmdqseq=? AND xmdqseq1=?  
       FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql3"
   {<point name="input.after_define_sql3"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt500_bcl3 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql4"
   {<point name="input.define_sql4" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT xmdb001,xmdb002,xmdb003,xmdb004,xmdb005,xmdb006,xmdb016,xmdb017,xmdb007, 
       xmdb008,xmdb009,xmdbsite FROM xmdb_t WHERE xmdbent=? AND xmdbdocno=? AND xmdb001=? FOR UPDATE" 

   #add-point:input段define_sql name="input.after_define_sql4"
   {<point name="input.after_define_sql4"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt500_bcl4 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql5"
   {<point name="input.define_sql5" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT xmdsseq,xmds001,xmds002,xmds003,xmds004,xmds005,xmds006,xmdssite FROM  
       xmds_t WHERE xmdsent=? AND xmdsdocno=? AND xmdsseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql5"
   {<point name="input.after_define_sql5"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt500_bcl5 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql name="input.other_sql"
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL axmt500_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL axmt500_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_xmda_m.xmdadocno,g_xmda_m.xmdadocdt,g_xmda_m.xmda004,g_xmda_m.xmda002,g_xmda_m.xmda003, 
       g_xmda_m.xmdastus,g_xmda_m.xmda005,g_xmda_m.xmda006,g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda033, 
       g_xmda_m.xmda027,g_xmda_m.xmda009,g_xmda_m.xmda010,g_xmda_m.xmda011,g_xmda_m.xmda035,g_xmda_m.xmda015, 
       g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda018,g_xmda_m.xmda019,g_xmda_m.xmda023,g_xmda_m.xmda032, 
       g_xmda_m.xmda071,g_xmda_m.xmda050,g_xmda_m.xmda021,g_xmda_m.xmda022,g_xmda_m.xmda034,g_xmda_m.xmda203, 
       g_xmda_m.xmda024,g_xmda_m.xmda048,g_xmda_m.xmda052,g_xmda_m.xmda049,g_xmda_m.xmda044,g_xmda_m.xmda028, 
       g_xmda_m.xmda025,g_xmda_m.xmda026,g_xmda_m.xmda020,g_xmda_m.xmda037,g_xmda_m.xmda038,g_xmda_m.xmda036, 
       g_xmda_m.xmda039
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

{</section>}

{<section id="axmt500.input.head" >}
      #單頭段
      INPUT BY NAME g_xmda_m.xmdadocno,g_xmda_m.xmdadocdt,g_xmda_m.xmda004,g_xmda_m.xmda002,g_xmda_m.xmda003, 
          g_xmda_m.xmdastus,g_xmda_m.xmda005,g_xmda_m.xmda006,g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda033, 
          g_xmda_m.xmda027,g_xmda_m.xmda009,g_xmda_m.xmda010,g_xmda_m.xmda011,g_xmda_m.xmda035,g_xmda_m.xmda015, 
          g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda018,g_xmda_m.xmda019,g_xmda_m.xmda023,g_xmda_m.xmda032, 
          g_xmda_m.xmda071,g_xmda_m.xmda050,g_xmda_m.xmda021,g_xmda_m.xmda022,g_xmda_m.xmda034,g_xmda_m.xmda203, 
          g_xmda_m.xmda024,g_xmda_m.xmda048,g_xmda_m.xmda052,g_xmda_m.xmda049,g_xmda_m.xmda044,g_xmda_m.xmda028, 
          g_xmda_m.xmda025,g_xmda_m.xmda026,g_xmda_m.xmda020,g_xmda_m.xmda037,g_xmda_m.xmda038,g_xmda_m.xmda036, 
          g_xmda_m.xmda039 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN axmt500_cl USING g_enterprise,g_xmda_m.xmdadocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axmt500_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE axmt500_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL axmt500_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL axmt500_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdadocno
            
            #add-point:AFTER FIELD xmdadocno name="input.a.xmdadocno"
            {<point name="input.a.xmdadocno" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdadocno
            #add-point:BEFORE FIELD xmdadocno name="input.b.xmdadocno"
            {<point name="input.b.xmdadocno" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdadocno
            #add-point:ON CHANGE xmdadocno name="input.g.xmdadocno"
            {<point name="input.g.xmdadocno" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdadocdt
            #add-point:BEFORE FIELD xmdadocdt name="input.b.xmdadocdt"
            {<point name="input.b.xmdadocdt" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdadocdt
            
            #add-point:AFTER FIELD xmdadocdt name="input.a.xmdadocdt"
            {<point name="input.a.xmdadocdt" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdadocdt
            #add-point:ON CHANGE xmdadocdt name="input.g.xmdadocdt"
            {<point name="input.g.xmdadocdt" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda004
            
            #add-point:AFTER FIELD xmda004 name="input.a.xmda004"
            {<point name="input.a.xmda004" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda004
            #add-point:BEFORE FIELD xmda004 name="input.b.xmda004"
            {<point name="input.b.xmda004" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda004
            #add-point:ON CHANGE xmda004 name="input.g.xmda004"
            {<point name="input.g.xmda004" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda002
            
            #add-point:AFTER FIELD xmda002 name="input.a.xmda002"
            {<point name="input.a.xmda002" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda002
            #add-point:BEFORE FIELD xmda002 name="input.b.xmda002"
            {<point name="input.b.xmda002" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda002
            #add-point:ON CHANGE xmda002 name="input.g.xmda002"
            {<point name="input.g.xmda002" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda003
            
            #add-point:AFTER FIELD xmda003 name="input.a.xmda003"
            {<point name="input.a.xmda003" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda003
            #add-point:BEFORE FIELD xmda003 name="input.b.xmda003"
            {<point name="input.b.xmda003" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda003
            #add-point:ON CHANGE xmda003 name="input.g.xmda003"
            {<point name="input.g.xmda003" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdastus
            #add-point:BEFORE FIELD xmdastus name="input.b.xmdastus"
            {<point name="input.b.xmdastus" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdastus
            
            #add-point:AFTER FIELD xmdastus name="input.a.xmdastus"
            {<point name="input.a.xmdastus" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdastus
            #add-point:ON CHANGE xmdastus name="input.g.xmdastus"
            {<point name="input.g.xmdastus" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda005
            #add-point:BEFORE FIELD xmda005 name="input.b.xmda005"
            {<point name="input.b.xmda005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda005
            
            #add-point:AFTER FIELD xmda005 name="input.a.xmda005"
            {<point name="input.a.xmda005" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda005
            #add-point:ON CHANGE xmda005 name="input.g.xmda005"
            {<point name="input.g.xmda005" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda006
            #add-point:BEFORE FIELD xmda006 name="input.b.xmda006"
            {<point name="input.b.xmda006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda006
            
            #add-point:AFTER FIELD xmda006 name="input.a.xmda006"
            {<point name="input.a.xmda006" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda006
            #add-point:ON CHANGE xmda006 name="input.g.xmda006"
            {<point name="input.g.xmda006" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda007
            #add-point:BEFORE FIELD xmda007 name="input.b.xmda007"
            {<point name="input.b.xmda007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda007
            
            #add-point:AFTER FIELD xmda007 name="input.a.xmda007"
            {<point name="input.a.xmda007" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda007
            #add-point:ON CHANGE xmda007 name="input.g.xmda007"
            {<point name="input.g.xmda007" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda008
            #add-point:BEFORE FIELD xmda008 name="input.b.xmda008"
            {<point name="input.b.xmda008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda008
            
            #add-point:AFTER FIELD xmda008 name="input.a.xmda008"
            {<point name="input.a.xmda008" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda008
            #add-point:ON CHANGE xmda008 name="input.g.xmda008"
            {<point name="input.g.xmda008" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda033
            #add-point:BEFORE FIELD xmda033 name="input.b.xmda033"
            {<point name="input.b.xmda033" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda033
            
            #add-point:AFTER FIELD xmda033 name="input.a.xmda033"
            {<point name="input.a.xmda033" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda033
            #add-point:ON CHANGE xmda033 name="input.g.xmda033"
            {<point name="input.g.xmda033" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda027
            
            #add-point:AFTER FIELD xmda027 name="input.a.xmda027"
            {<point name="input.a.xmda027" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda027
            #add-point:BEFORE FIELD xmda027 name="input.b.xmda027"
            {<point name="input.b.xmda027" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda027
            #add-point:ON CHANGE xmda027 name="input.g.xmda027"
            {<point name="input.g.xmda027" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda009
            
            #add-point:AFTER FIELD xmda009 name="input.a.xmda009"
            {<point name="input.a.xmda009" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda009
            #add-point:BEFORE FIELD xmda009 name="input.b.xmda009"
            {<point name="input.b.xmda009" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda009
            #add-point:ON CHANGE xmda009 name="input.g.xmda009"
            {<point name="input.g.xmda009" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda010
            
            #add-point:AFTER FIELD xmda010 name="input.a.xmda010"
            {<point name="input.a.xmda010" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda010
            #add-point:BEFORE FIELD xmda010 name="input.b.xmda010"
            {<point name="input.b.xmda010" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda010
            #add-point:ON CHANGE xmda010 name="input.g.xmda010"
            {<point name="input.g.xmda010" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda011
            
            #add-point:AFTER FIELD xmda011 name="input.a.xmda011"
            {<point name="input.a.xmda011" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda011
            #add-point:BEFORE FIELD xmda011 name="input.b.xmda011"
            {<point name="input.b.xmda011" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda011
            #add-point:ON CHANGE xmda011 name="input.g.xmda011"
            {<point name="input.g.xmda011" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda035
            
            #add-point:AFTER FIELD xmda035 name="input.a.xmda035"
            {<point name="input.a.xmda035" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda035
            #add-point:BEFORE FIELD xmda035 name="input.b.xmda035"
            {<point name="input.b.xmda035" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda035
            #add-point:ON CHANGE xmda035 name="input.g.xmda035"
            {<point name="input.g.xmda035" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda015
            
            #add-point:AFTER FIELD xmda015 name="input.a.xmda015"
            {<point name="input.a.xmda015" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda015
            #add-point:BEFORE FIELD xmda015 name="input.b.xmda015"
            {<point name="input.b.xmda015" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda015
            #add-point:ON CHANGE xmda015 name="input.g.xmda015"
            {<point name="input.g.xmda015" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda016
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmda_m.xmda016,"0","0","","","azz-00079",1) THEN
               NEXT FIELD xmda016
            END IF 
 
 
 
            #add-point:AFTER FIELD xmda016 name="input.a.xmda016"
            {<point name="input.a.xmda016" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda016
            #add-point:BEFORE FIELD xmda016 name="input.b.xmda016"
            {<point name="input.b.xmda016" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda016
            #add-point:ON CHANGE xmda016 name="input.g.xmda016"
            {<point name="input.g.xmda016" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda017
            
            #add-point:AFTER FIELD xmda017 name="input.a.xmda017"
            {<point name="input.a.xmda017" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda017
            #add-point:BEFORE FIELD xmda017 name="input.b.xmda017"
            {<point name="input.b.xmda017" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda017
            #add-point:ON CHANGE xmda017 name="input.g.xmda017"
            {<point name="input.g.xmda017" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda018
            
            #add-point:AFTER FIELD xmda018 name="input.a.xmda018"
            {<point name="input.a.xmda018" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda018
            #add-point:BEFORE FIELD xmda018 name="input.b.xmda018"
            {<point name="input.b.xmda018" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda018
            #add-point:ON CHANGE xmda018 name="input.g.xmda018"
            {<point name="input.g.xmda018" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda019
            #add-point:BEFORE FIELD xmda019 name="input.b.xmda019"
            {<point name="input.b.xmda019" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda019
            
            #add-point:AFTER FIELD xmda019 name="input.a.xmda019"
            {<point name="input.a.xmda019" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda019
            #add-point:ON CHANGE xmda019 name="input.g.xmda019"
            {<point name="input.g.xmda019" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda023
            
            #add-point:AFTER FIELD xmda023 name="input.a.xmda023"
            {<point name="input.a.xmda023" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda023
            #add-point:BEFORE FIELD xmda023 name="input.b.xmda023"
            {<point name="input.b.xmda023" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda023
            #add-point:ON CHANGE xmda023 name="input.g.xmda023"
            {<point name="input.g.xmda023" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda032
            
            #add-point:AFTER FIELD xmda032 name="input.a.xmda032"
            {<point name="input.a.xmda032" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda032
            #add-point:BEFORE FIELD xmda032 name="input.b.xmda032"
            {<point name="input.b.xmda032" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda032
            #add-point:ON CHANGE xmda032 name="input.g.xmda032"
            {<point name="input.g.xmda032" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda071
            #add-point:BEFORE FIELD xmda071 name="input.b.xmda071"
            {<point name="input.b.xmda071" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda071
            
            #add-point:AFTER FIELD xmda071 name="input.a.xmda071"
            {<point name="input.a.xmda071" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda071
            #add-point:ON CHANGE xmda071 name="input.g.xmda071"
            {<point name="input.g.xmda071" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda050
            
            #add-point:AFTER FIELD xmda050 name="input.a.xmda050"
            {<point name="input.a.xmda050" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda050
            #add-point:BEFORE FIELD xmda050 name="input.b.xmda050"
            {<point name="input.b.xmda050" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda050
            #add-point:ON CHANGE xmda050 name="input.g.xmda050"
            {<point name="input.g.xmda050" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda021
            
            #add-point:AFTER FIELD xmda021 name="input.a.xmda021"
            {<point name="input.a.xmda021" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda021
            #add-point:BEFORE FIELD xmda021 name="input.b.xmda021"
            {<point name="input.b.xmda021" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda021
            #add-point:ON CHANGE xmda021 name="input.g.xmda021"
            {<point name="input.g.xmda021" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda022
            
            #add-point:AFTER FIELD xmda022 name="input.a.xmda022"
            {<point name="input.a.xmda022" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda022
            #add-point:BEFORE FIELD xmda022 name="input.b.xmda022"
            {<point name="input.b.xmda022" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda022
            #add-point:ON CHANGE xmda022 name="input.g.xmda022"
            {<point name="input.g.xmda022" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda034
            
            #add-point:AFTER FIELD xmda034 name="input.a.xmda034"
            {<point name="input.a.xmda034" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda034
            #add-point:BEFORE FIELD xmda034 name="input.b.xmda034"
            {<point name="input.b.xmda034" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda034
            #add-point:ON CHANGE xmda034 name="input.g.xmda034"
            {<point name="input.g.xmda034" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda203
            
            #add-point:AFTER FIELD xmda203 name="input.a.xmda203"
            {<point name="input.a.xmda203" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda203
            #add-point:BEFORE FIELD xmda203 name="input.b.xmda203"
            {<point name="input.b.xmda203" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda203
            #add-point:ON CHANGE xmda203 name="input.g.xmda203"
            {<point name="input.g.xmda203" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda024
            
            #add-point:AFTER FIELD xmda024 name="input.a.xmda024"
            {<point name="input.a.xmda024" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda024
            #add-point:BEFORE FIELD xmda024 name="input.b.xmda024"
            {<point name="input.b.xmda024" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda024
            #add-point:ON CHANGE xmda024 name="input.g.xmda024"
            {<point name="input.g.xmda024" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda048
            #add-point:BEFORE FIELD xmda048 name="input.b.xmda048"
            {<point name="input.b.xmda048" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda048
            
            #add-point:AFTER FIELD xmda048 name="input.a.xmda048"
            {<point name="input.a.xmda048" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda048
            #add-point:ON CHANGE xmda048 name="input.g.xmda048"
            {<point name="input.g.xmda048" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda052
            #add-point:BEFORE FIELD xmda052 name="input.b.xmda052"
            {<point name="input.b.xmda052" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda052
            
            #add-point:AFTER FIELD xmda052 name="input.a.xmda052"
            {<point name="input.a.xmda052" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda052
            #add-point:ON CHANGE xmda052 name="input.g.xmda052"
            {<point name="input.g.xmda052" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda049
            #add-point:BEFORE FIELD xmda049 name="input.b.xmda049"
            {<point name="input.b.xmda049" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda049
            
            #add-point:AFTER FIELD xmda049 name="input.a.xmda049"
            {<point name="input.a.xmda049" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda049
            #add-point:ON CHANGE xmda049 name="input.g.xmda049"
            {<point name="input.g.xmda049" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda044
            
            #add-point:AFTER FIELD xmda044 name="input.a.xmda044"
            {<point name="input.a.xmda044" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda044
            #add-point:BEFORE FIELD xmda044 name="input.b.xmda044"
            {<point name="input.b.xmda044" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda044
            #add-point:ON CHANGE xmda044 name="input.g.xmda044"
            {<point name="input.g.xmda044" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda028
            #add-point:BEFORE FIELD xmda028 name="input.b.xmda028"
            {<point name="input.b.xmda028" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda028
            
            #add-point:AFTER FIELD xmda028 name="input.a.xmda028"
            {<point name="input.a.xmda028" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda028
            #add-point:ON CHANGE xmda028 name="input.g.xmda028"
            {<point name="input.g.xmda028" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda025
            
            #add-point:AFTER FIELD xmda025 name="input.a.xmda025"
            {<point name="input.a.xmda025" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda025
            #add-point:BEFORE FIELD xmda025 name="input.b.xmda025"
            {<point name="input.b.xmda025" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda025
            #add-point:ON CHANGE xmda025 name="input.g.xmda025"
            {<point name="input.g.xmda025" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda026
            
            #add-point:AFTER FIELD xmda026 name="input.a.xmda026"
            {<point name="input.a.xmda026" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda026
            #add-point:BEFORE FIELD xmda026 name="input.b.xmda026"
            {<point name="input.b.xmda026" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda026
            #add-point:ON CHANGE xmda026 name="input.g.xmda026"
            {<point name="input.g.xmda026" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda020
            
            #add-point:AFTER FIELD xmda020 name="input.a.xmda020"
            {<point name="input.a.xmda020" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda020
            #add-point:BEFORE FIELD xmda020 name="input.b.xmda020"
            {<point name="input.b.xmda020" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda020
            #add-point:ON CHANGE xmda020 name="input.g.xmda020"
            {<point name="input.g.xmda020" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda037
            
            #add-point:AFTER FIELD xmda037 name="input.a.xmda037"
            {<point name="input.a.xmda037" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda037
            #add-point:BEFORE FIELD xmda037 name="input.b.xmda037"
            {<point name="input.b.xmda037" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda037
            #add-point:ON CHANGE xmda037 name="input.g.xmda037"
            {<point name="input.g.xmda037" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda038
            
            #add-point:AFTER FIELD xmda038 name="input.a.xmda038"
            {<point name="input.a.xmda038" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda038
            #add-point:BEFORE FIELD xmda038 name="input.b.xmda038"
            {<point name="input.b.xmda038" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda038
            #add-point:ON CHANGE xmda038 name="input.g.xmda038"
            {<point name="input.g.xmda038" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda036
            
            #add-point:AFTER FIELD xmda036 name="input.a.xmda036"
            {<point name="input.a.xmda036" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda036
            #add-point:BEFORE FIELD xmda036 name="input.b.xmda036"
            {<point name="input.b.xmda036" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda036
            #add-point:ON CHANGE xmda036 name="input.g.xmda036"
            {<point name="input.g.xmda036" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda039
            #add-point:BEFORE FIELD xmda039 name="input.b.xmda039"
            {<point name="input.b.xmda039" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda039
            
            #add-point:AFTER FIELD xmda039 name="input.a.xmda039"
            {<point name="input.a.xmda039" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda039
            #add-point:ON CHANGE xmda039 name="input.g.xmda039"
            {<point name="input.g.xmda039" />}
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.xmdadocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdadocno
            #add-point:ON ACTION controlp INFIELD xmdadocno name="input.c.xmdadocno"
            {<point name="input.c.xmdadocno" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmdadocdt
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdadocdt
            #add-point:ON ACTION controlp INFIELD xmdadocdt name="input.c.xmdadocdt"
            {<point name="input.c.xmdadocdt" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda004
            #add-point:ON ACTION controlp INFIELD xmda004 name="input.c.xmda004"
            {<point name="input.c.xmda004" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda002
            #add-point:ON ACTION controlp INFIELD xmda002 name="input.c.xmda002"
            {<point name="input.c.xmda002" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda003
            #add-point:ON ACTION controlp INFIELD xmda003 name="input.c.xmda003"
            {<point name="input.c.xmda003" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmdastus
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdastus
            #add-point:ON ACTION controlp INFIELD xmdastus name="input.c.xmdastus"
            {<point name="input.c.xmdastus" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda005
            #add-point:ON ACTION controlp INFIELD xmda005 name="input.c.xmda005"
            {<point name="input.c.xmda005" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda006
            #add-point:ON ACTION controlp INFIELD xmda006 name="input.c.xmda006"
            {<point name="input.c.xmda006" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda007
            #add-point:ON ACTION controlp INFIELD xmda007 name="input.c.xmda007"
            {<point name="input.c.xmda007" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda008
            #add-point:ON ACTION controlp INFIELD xmda008 name="input.c.xmda008"
            {<point name="input.c.xmda008" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda033
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda033
            #add-point:ON ACTION controlp INFIELD xmda033 name="input.c.xmda033"
            {<point name="input.c.xmda033" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda027
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda027
            #add-point:ON ACTION controlp INFIELD xmda027 name="input.c.xmda027"
            {<point name="input.c.xmda027" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda009
            #add-point:ON ACTION controlp INFIELD xmda009 name="input.c.xmda009"
            {<point name="input.c.xmda009" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda010
            #add-point:ON ACTION controlp INFIELD xmda010 name="input.c.xmda010"
            {<point name="input.c.xmda010" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda011
            #add-point:ON ACTION controlp INFIELD xmda011 name="input.c.xmda011"
            {<point name="input.c.xmda011" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda035
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda035
            #add-point:ON ACTION controlp INFIELD xmda035 name="input.c.xmda035"
            {<point name="input.c.xmda035" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda015
            #add-point:ON ACTION controlp INFIELD xmda015 name="input.c.xmda015"
            {<point name="input.c.xmda015" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda016
            #add-point:ON ACTION controlp INFIELD xmda016 name="input.c.xmda016"
            {<point name="input.c.xmda016" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda017
            #add-point:ON ACTION controlp INFIELD xmda017 name="input.c.xmda017"
            {<point name="input.c.xmda017" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda018
            #add-point:ON ACTION controlp INFIELD xmda018 name="input.c.xmda018"
            {<point name="input.c.xmda018" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda019
            #add-point:ON ACTION controlp INFIELD xmda019 name="input.c.xmda019"
            {<point name="input.c.xmda019" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda023
            #add-point:ON ACTION controlp INFIELD xmda023 name="input.c.xmda023"
            {<point name="input.c.xmda023" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda032
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda032
            #add-point:ON ACTION controlp INFIELD xmda032 name="input.c.xmda032"
            {<point name="input.c.xmda032" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda071
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda071
            #add-point:ON ACTION controlp INFIELD xmda071 name="input.c.xmda071"
            {<point name="input.c.xmda071" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda050
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda050
            #add-point:ON ACTION controlp INFIELD xmda050 name="input.c.xmda050"
            {<point name="input.c.xmda050" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda021
            #add-point:ON ACTION controlp INFIELD xmda021 name="input.c.xmda021"
            {<point name="input.c.xmda021" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda022
            #add-point:ON ACTION controlp INFIELD xmda022 name="input.c.xmda022"
            {<point name="input.c.xmda022" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda034
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda034
            #add-point:ON ACTION controlp INFIELD xmda034 name="input.c.xmda034"
            {<point name="input.c.xmda034" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda203
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda203
            #add-point:ON ACTION controlp INFIELD xmda203 name="input.c.xmda203"
            {<point name="input.c.xmda203" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda024
            #add-point:ON ACTION controlp INFIELD xmda024 name="input.c.xmda024"
            {<point name="input.c.xmda024" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda048
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda048
            #add-point:ON ACTION controlp INFIELD xmda048 name="input.c.xmda048"
            {<point name="input.c.xmda048" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda052
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda052
            #add-point:ON ACTION controlp INFIELD xmda052 name="input.c.xmda052"
            {<point name="input.c.xmda052" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda049
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda049
            #add-point:ON ACTION controlp INFIELD xmda049 name="input.c.xmda049"
            {<point name="input.c.xmda049" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda044
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda044
            #add-point:ON ACTION controlp INFIELD xmda044 name="input.c.xmda044"
            {<point name="input.c.xmda044" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda028
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda028
            #add-point:ON ACTION controlp INFIELD xmda028 name="input.c.xmda028"
            {<point name="input.c.xmda028" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda025
            #add-point:ON ACTION controlp INFIELD xmda025 name="input.c.xmda025"
            {<point name="input.c.xmda025" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda026
            #add-point:ON ACTION controlp INFIELD xmda026 name="input.c.xmda026"
            {<point name="input.c.xmda026" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda020
            #add-point:ON ACTION controlp INFIELD xmda020 name="input.c.xmda020"
            {<point name="input.c.xmda020" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda037
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda037
            #add-point:ON ACTION controlp INFIELD xmda037 name="input.c.xmda037"
            {<point name="input.c.xmda037" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda038
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda038
            #add-point:ON ACTION controlp INFIELD xmda038 name="input.c.xmda038"
            {<point name="input.c.xmda038" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda036
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda036
            #add-point:ON ACTION controlp INFIELD xmda036 name="input.c.xmda036"
            {<point name="input.c.xmda036" />}
            #END add-point
 
 
         #Ctrlp:input.c.xmda039
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda039
            #add-point:ON ACTION controlp INFIELD xmda039 name="input.c.xmda039"
            {<point name="input.c.xmda039" />}
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_xmda_m.xmdadocno
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO xmda_t (xmdaent,xmdadocno,xmda001,xmdadocdt,xmda004,xmda002,xmda003,xmdasite, 
                   xmdastus,xmda005,xmda006,xmda007,xmda008,xmda033,xmda027,xmda009,xmda010,xmda011, 
                   xmda012,xmda013,xmda035,xmda015,xmda016,xmda017,xmda018,xmda019,xmda023,xmda032,xmda071, 
                   xmda050,xmda021,xmda022,xmda034,xmda203,xmda024,xmda048,xmda052,xmda049,xmda044,xmda030, 
                   xmda031,xmda045,xmda046,xmda047,xmda028,xmda043,xmda025,xmda026,xmda020,xmda037,xmda038, 
                   xmda036,xmda039,xmda041,xmda042,xmdaownid,xmdaowndp,xmdacrtid,xmdacrtdp,xmdacrtdt, 
                   xmdamodid,xmdamoddt,xmdacnfid,xmdacnfdt)
               VALUES (g_enterprise,g_xmda_m.xmdadocno,g_xmda_m.xmda001,g_xmda_m.xmdadocdt,g_xmda_m.xmda004, 
                   g_xmda_m.xmda002,g_xmda_m.xmda003,g_xmda_m.xmdasite,g_xmda_m.xmdastus,g_xmda_m.xmda005, 
                   g_xmda_m.xmda006,g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda033,g_xmda_m.xmda027, 
                   g_xmda_m.xmda009,g_xmda_m.xmda010,g_xmda_m.xmda011,g_xmda_m.xmda012,g_xmda_m.xmda013, 
                   g_xmda_m.xmda035,g_xmda_m.xmda015,g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda018, 
                   g_xmda_m.xmda019,g_xmda_m.xmda023,g_xmda_m.xmda032,g_xmda_m.xmda071,g_xmda_m.xmda050, 
                   g_xmda_m.xmda021,g_xmda_m.xmda022,g_xmda_m.xmda034,g_xmda_m.xmda203,g_xmda_m.xmda024, 
                   g_xmda_m.xmda048,g_xmda_m.xmda052,g_xmda_m.xmda049,g_xmda_m.xmda044,g_xmda_m.xmda030, 
                   g_xmda_m.xmda031,g_xmda_m.xmda045,g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028, 
                   g_xmda_m.xmda043,g_xmda_m.xmda025,g_xmda_m.xmda026,g_xmda_m.xmda020,g_xmda_m.xmda037, 
                   g_xmda_m.xmda038,g_xmda_m.xmda036,g_xmda_m.xmda039,g_xmda_m.xmda041,g_xmda_m.xmda042, 
                   g_xmda_m.xmdaownid,g_xmda_m.xmdaowndp,g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdt, 
                   g_xmda_m.xmdamodid,g_xmda_m.xmdamoddt,g_xmda_m.xmdacnfid,g_xmda_m.xmdacnfdt) 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_xmda_m:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後 name="input.head.a_insert"
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL axmt500_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL axmt500_b_fill()
                  CALL axmt500_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL axmt500_xmda_t_mask_restore('restore_mask_o')
               
               UPDATE xmda_t SET (xmdadocno,xmda001,xmdadocdt,xmda004,xmda002,xmda003,xmdasite,xmdastus, 
                   xmda005,xmda006,xmda007,xmda008,xmda033,xmda027,xmda009,xmda010,xmda011,xmda012,xmda013, 
                   xmda035,xmda015,xmda016,xmda017,xmda018,xmda019,xmda023,xmda032,xmda071,xmda050,xmda021, 
                   xmda022,xmda034,xmda203,xmda024,xmda048,xmda052,xmda049,xmda044,xmda030,xmda031,xmda045, 
                   xmda046,xmda047,xmda028,xmda043,xmda025,xmda026,xmda020,xmda037,xmda038,xmda036,xmda039, 
                   xmda041,xmda042,xmdaownid,xmdaowndp,xmdacrtid,xmdacrtdp,xmdacrtdt,xmdamodid,xmdamoddt, 
                   xmdacnfid,xmdacnfdt) = (g_xmda_m.xmdadocno,g_xmda_m.xmda001,g_xmda_m.xmdadocdt,g_xmda_m.xmda004, 
                   g_xmda_m.xmda002,g_xmda_m.xmda003,g_xmda_m.xmdasite,g_xmda_m.xmdastus,g_xmda_m.xmda005, 
                   g_xmda_m.xmda006,g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda033,g_xmda_m.xmda027, 
                   g_xmda_m.xmda009,g_xmda_m.xmda010,g_xmda_m.xmda011,g_xmda_m.xmda012,g_xmda_m.xmda013, 
                   g_xmda_m.xmda035,g_xmda_m.xmda015,g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda018, 
                   g_xmda_m.xmda019,g_xmda_m.xmda023,g_xmda_m.xmda032,g_xmda_m.xmda071,g_xmda_m.xmda050, 
                   g_xmda_m.xmda021,g_xmda_m.xmda022,g_xmda_m.xmda034,g_xmda_m.xmda203,g_xmda_m.xmda024, 
                   g_xmda_m.xmda048,g_xmda_m.xmda052,g_xmda_m.xmda049,g_xmda_m.xmda044,g_xmda_m.xmda030, 
                   g_xmda_m.xmda031,g_xmda_m.xmda045,g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028, 
                   g_xmda_m.xmda043,g_xmda_m.xmda025,g_xmda_m.xmda026,g_xmda_m.xmda020,g_xmda_m.xmda037, 
                   g_xmda_m.xmda038,g_xmda_m.xmda036,g_xmda_m.xmda039,g_xmda_m.xmda041,g_xmda_m.xmda042, 
                   g_xmda_m.xmdaownid,g_xmda_m.xmdaowndp,g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdt, 
                   g_xmda_m.xmdamodid,g_xmda_m.xmdamoddt,g_xmda_m.xmdacnfid,g_xmda_m.xmdacnfdt)
                WHERE xmdaent = g_enterprise AND xmdadocno = g_xmdadocno_t
 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "xmda_t:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL axmt500_xmda_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_xmda_m_t)
               LET g_log2 = util.JSON.stringify(g_xmda_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_xmdadocno_t = g_xmda_m.xmdadocno
 
            
      END INPUT
   

{</section>}

{<section id="axmt500.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_xmdc_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xmdc_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axmt500_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1','2',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_xmdc_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN axmt500_cl USING g_enterprise,g_xmda_m.xmdadocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axmt500_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE axmt500_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_xmdc_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xmdc_d[l_ac].xmdcseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xmdc_d_t.* = g_xmdc_d[l_ac].*  #BACKUP
               LET g_xmdc_d_o.* = g_xmdc_d[l_ac].*  #BACKUP
               CALL axmt500_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL axmt500_set_no_entry_b(l_cmd)
               IF NOT axmt500_lock_b("xmdc_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axmt500_bcl INTO g_xmdc_d[l_ac].xmdcseq,g_xmdc_d[l_ac].xmdc027,g_xmdc_d[l_ac].xmdc001, 
                      g_xmdc_d[l_ac].xmdc062,g_xmdc_d[l_ac].xmdc019,g_xmdc_d[l_ac].xmdc002,g_xmdc_d[l_ac].xmdc006, 
                      g_xmdc_d[l_ac].xmdc007,g_xmdc_d[l_ac].xmdc008,g_xmdc_d[l_ac].xmdc009,g_xmdc_d[l_ac].xmdc024, 
                      g_xmdc_d[l_ac].xmdc012,g_xmdc_d[l_ac].xmdc013,g_xmdc_d[l_ac].xmdc045,g_xmdc_d[l_ac].xmdc016, 
                      g_xmdc_d[l_ac].xmdc017,g_xmdc_d[l_ac].xmdc010,g_xmdc_d[l_ac].xmdc011,g_xmdc_d[l_ac].xmdc015, 
                      g_xmdc_d[l_ac].xmdc046,g_xmdc_d[l_ac].xmdc047,g_xmdc_d[l_ac].xmdc048,g_xmdc_d[l_ac].xmdc023, 
                      g_xmdc_d[l_ac].xmdc020,g_xmdc_d[l_ac].xmdc021,g_xmdc_d[l_ac].xmdc022,g_xmdc_d[l_ac].xmdcunit, 
                      g_xmdc_d[l_ac].xmdcorga,g_xmdc_d[l_ac].xmdc052,g_xmdc_d[l_ac].xmdc049,g_xmdc_d[l_ac].xmdc053, 
                      g_xmdc_d[l_ac].xmdc050,g_xmdc_d[l_ac].xmdcsite,g_xmdc_d[l_ac].xmdc058,g_xmdc_d[l_ac].xmdc059, 
                      g_xmdc_d[l_ac].xmdc060,g_xmdc_d[l_ac].xmdc061,g_xmdc2_d[l_ac].xmdcseq,g_xmdc2_d[l_ac].xmdc028, 
                      g_xmdc2_d[l_ac].xmdc029,g_xmdc2_d[l_ac].xmdc030,g_xmdc2_d[l_ac].xmdc057,g_xmdc2_d[l_ac].xmdc025, 
                      g_xmdc2_d[l_ac].xmdc026,g_xmdc2_d[l_ac].xmdc031,g_xmdc2_d[l_ac].xmdc032,g_xmdc2_d[l_ac].xmdc033, 
                      g_xmdc2_d[l_ac].xmdc003,g_xmdc2_d[l_ac].xmdc054,g_xmdc2_d[l_ac].xmdc036,g_xmdc2_d[l_ac].xmdc037, 
                      g_xmdc2_d[l_ac].xmdc038,g_xmdc2_d[l_ac].xmdc039,g_xmdc2_d[l_ac].xmdc035,g_xmdc2_d[l_ac].xmdc040, 
                      g_xmdc2_d[l_ac].xmdc041,g_xmdc2_d[l_ac].xmdc042,g_xmdc2_d[l_ac].xmdc043,g_xmdc2_d[l_ac].xmdc044, 
                      g_xmdc2_d[l_ac].xmdc055,g_xmdc2_d[l_ac].xmdc056
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_xmdc_d_t.xmdcseq,":",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_xmdc_d_mask_o[l_ac].* =  g_xmdc_d[l_ac].*
                  CALL axmt500_xmdc_t_mask()
                  LET g_xmdc_d_mask_n[l_ac].* =  g_xmdc_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL axmt500_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
 
            #其他table進行lock
            
 
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmdc_d[l_ac].* TO NULL 
            INITIALIZE g_xmdc_d_t.* TO NULL 
            INITIALIZE g_xmdc_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_xmdc_d[l_ac].xmdc019 = "1"
      LET g_xmdc_d[l_ac].xmdc009 = "0"
      LET g_xmdc_d[l_ac].xmdc024 = "N"
      LET g_xmdc_d[l_ac].xmdc045 = "1"
      LET g_xmdc_d[l_ac].xmdc011 = "0"
      LET g_xmdc_d[l_ac].xmdc015 = "0"
      LET g_xmdc_d[l_ac].xmdc046 = "0"
      LET g_xmdc_d[l_ac].xmdc047 = "0"
      LET g_xmdc_d[l_ac].xmdc048 = "0"
      LET g_xmdc_d[l_ac].xmdc020 = "2"
      LET g_xmdc_d[l_ac].xmdc021 = "N"
      LET g_xmdc_d[l_ac].xmdc022 = "Y"
      LET g_xmdc_d[l_ac].xmdc052 = "Y"
      LET g_xmdc_d[l_ac].xmdc058 = "0"
      LET g_xmdc_d[l_ac].xmdc059 = "0"
      LET g_xmdc_d[l_ac].xmdc060 = "0"
      LET g_xmdc_d[l_ac].xmdc061 = "0"
 
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_xmdc_d_t.* = g_xmdc_d[l_ac].*     #新輸入資料
            LET g_xmdc_d_o.* = g_xmdc_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axmt500_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL axmt500_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmdc_d[li_reproduce_target].* = g_xmdc_d[li_reproduce].*
               LET g_xmdc2_d[li_reproduce_target].* = g_xmdc2_d[li_reproduce].*
 
               LET g_xmdc_d[li_reproduce_target].xmdcseq = NULL
 
            END IF
            
 
 
            #add-point:modify段before insert name="input.body.before_insert"
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM xmdc_t 
             WHERE xmdcent = g_enterprise AND xmdcdocno = g_xmda_m.xmdadocno
 
               AND xmdcseq = g_xmdc_d[l_ac].xmdcseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmda_m.xmdadocno
               LET gs_keys[2] = g_xmdc_d[g_detail_idx].xmdcseq
               CALL axmt500_insert_b('xmdc_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               INITIALIZE g_xmdc_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmdc_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axmt500_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               {<point name="input.body.b_delete_ask" />}
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_xmda_m.xmdadocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_xmdc_d_t.xmdcseq
 
            
               #刪除同層單身
               IF NOT axmt500_delete_b('xmdc_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt500_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT axmt500_key_delete_b(gs_keys,'xmdc_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt500_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE axmt500_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_xmdc_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_xmdc_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdcseq
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdc_d[l_ac].xmdcseq,"0","0","","","azz-00079",1) THEN
               NEXT FIELD xmdcseq
            END IF 
 
 
 
            #add-point:AFTER FIELD xmdcseq name="input.a.page1.xmdcseq"
            {<point name="input.a.page1.xmdcseq" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdcseq
            #add-point:BEFORE FIELD xmdcseq name="input.b.page1.xmdcseq"
            {<point name="input.b.page1.xmdcseq" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdcseq
            #add-point:ON CHANGE xmdcseq name="input.g.page1.xmdcseq"
            {<point name="input.g.page1.xmdcseq" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc027
            
            #add-point:AFTER FIELD xmdc027 name="input.a.page1.xmdc027"
            {<point name="input.a.page1.xmdc027" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc027
            #add-point:BEFORE FIELD xmdc027 name="input.b.page1.xmdc027"
            {<point name="input.b.page1.xmdc027" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc027
            #add-point:ON CHANGE xmdc027 name="input.g.page1.xmdc027"
            {<point name="input.g.page1.xmdc027" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_pmao009
            #add-point:BEFORE FIELD l_pmao009 name="input.b.page1.l_pmao009"
            {<point name="input.b.page1.l_pmao009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_pmao009
            
            #add-point:AFTER FIELD l_pmao009 name="input.a.page1.l_pmao009"
            {<point name="input.a.page1.l_pmao009" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_pmao009
            #add-point:ON CHANGE l_pmao009 name="input.g.page1.l_pmao009"
            {<point name="input.g.page1.l_pmao009" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_pmao010
            #add-point:BEFORE FIELD l_pmao010 name="input.b.page1.l_pmao010"
            {<point name="input.b.page1.l_pmao010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_pmao010
            
            #add-point:AFTER FIELD l_pmao010 name="input.a.page1.l_pmao010"
            {<point name="input.a.page1.l_pmao010" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_pmao010
            #add-point:ON CHANGE l_pmao010 name="input.g.page1.l_pmao010"
            {<point name="input.g.page1.l_pmao010" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc001
            
            #add-point:AFTER FIELD xmdc001 name="input.a.page1.xmdc001"
            {<point name="input.a.page1.xmdc001" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc001
            #add-point:BEFORE FIELD xmdc001 name="input.b.page1.xmdc001"
            {<point name="input.b.page1.xmdc001" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc001
            #add-point:ON CHANGE xmdc001 name="input.g.page1.xmdc001"
            {<point name="input.g.page1.xmdc001" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc062
            
            #add-point:AFTER FIELD xmdc062 name="input.a.page1.xmdc062"
            {<point name="input.a.page1.xmdc062" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc062
            #add-point:BEFORE FIELD xmdc062 name="input.b.page1.xmdc062"
            {<point name="input.b.page1.xmdc062" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc062
            #add-point:ON CHANGE xmdc062 name="input.g.page1.xmdc062"
            {<point name="input.g.page1.xmdc062" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc019
            #add-point:BEFORE FIELD xmdc019 name="input.b.page1.xmdc019"
            {<point name="input.b.page1.xmdc019" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc019
            
            #add-point:AFTER FIELD xmdc019 name="input.a.page1.xmdc019"
            {<point name="input.a.page1.xmdc019" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc019
            #add-point:ON CHANGE xmdc019 name="input.g.page1.xmdc019"
            {<point name="input.g.page1.xmdc019" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc002
            
            #add-point:AFTER FIELD xmdc002 name="input.a.page1.xmdc002"
            {<point name="input.a.page1.xmdc002" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc002
            #add-point:BEFORE FIELD xmdc002 name="input.b.page1.xmdc002"
            {<point name="input.b.page1.xmdc002" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc002
            #add-point:ON CHANGE xmdc002 name="input.g.page1.xmdc002"
            {<point name="input.g.page1.xmdc002" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc002_desc
            #add-point:BEFORE FIELD xmdc002_desc name="input.b.page1.xmdc002_desc"
            {<point name="input.b.page1.xmdc002_desc" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc002_desc
            
            #add-point:AFTER FIELD xmdc002_desc name="input.a.page1.xmdc002_desc"
            {<point name="input.a.page1.xmdc002_desc" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc002_desc
            #add-point:ON CHANGE xmdc002_desc name="input.g.page1.xmdc002_desc"
            {<point name="input.g.page1.xmdc002_desc" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc006
            
            #add-point:AFTER FIELD xmdc006 name="input.a.page1.xmdc006"
            {<point name="input.a.page1.xmdc006" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc006
            #add-point:BEFORE FIELD xmdc006 name="input.b.page1.xmdc006"
            {<point name="input.b.page1.xmdc006" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc006
            #add-point:ON CHANGE xmdc006 name="input.g.page1.xmdc006"
            {<point name="input.g.page1.xmdc006" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc007
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdc_d[l_ac].xmdc007,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD xmdc007
            END IF 
 
 
 
            #add-point:AFTER FIELD xmdc007 name="input.a.page1.xmdc007"
            {<point name="input.a.page1.xmdc007" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc007
            #add-point:BEFORE FIELD xmdc007 name="input.b.page1.xmdc007"
            {<point name="input.b.page1.xmdc007" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc007
            #add-point:ON CHANGE xmdc007 name="input.g.page1.xmdc007"
            {<point name="input.g.page1.xmdc007" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc009
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdc_d[l_ac].xmdc009,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD xmdc009
            END IF 
 
 
 
            #add-point:AFTER FIELD xmdc009 name="input.a.page1.xmdc009"
            {<point name="input.a.page1.xmdc009" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc009
            #add-point:BEFORE FIELD xmdc009 name="input.b.page1.xmdc009"
            {<point name="input.b.page1.xmdc009" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc009
            #add-point:ON CHANGE xmdc009 name="input.g.page1.xmdc009"
            {<point name="input.g.page1.xmdc009" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc024
            #add-point:BEFORE FIELD xmdc024 name="input.b.page1.xmdc024"
            {<point name="input.b.page1.xmdc024" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc024
            
            #add-point:AFTER FIELD xmdc024 name="input.a.page1.xmdc024"
            {<point name="input.a.page1.xmdc024" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc024
            #add-point:ON CHANGE xmdc024 name="input.g.page1.xmdc024"
            {<point name="input.g.page1.xmdc024" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc012
            #add-point:BEFORE FIELD xmdc012 name="input.b.page1.xmdc012"
            {<point name="input.b.page1.xmdc012" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc012
            
            #add-point:AFTER FIELD xmdc012 name="input.a.page1.xmdc012"
            {<point name="input.a.page1.xmdc012" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc012
            #add-point:ON CHANGE xmdc012 name="input.g.page1.xmdc012"
            {<point name="input.g.page1.xmdc012" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc013
            #add-point:BEFORE FIELD xmdc013 name="input.b.page1.xmdc013"
            {<point name="input.b.page1.xmdc013" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc013
            
            #add-point:AFTER FIELD xmdc013 name="input.a.page1.xmdc013"
            {<point name="input.a.page1.xmdc013" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc013
            #add-point:ON CHANGE xmdc013 name="input.g.page1.xmdc013"
            {<point name="input.g.page1.xmdc013" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc045
            #add-point:BEFORE FIELD xmdc045 name="input.b.page1.xmdc045"
            {<point name="input.b.page1.xmdc045" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc045
            
            #add-point:AFTER FIELD xmdc045 name="input.a.page1.xmdc045"
            {<point name="input.a.page1.xmdc045" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc045
            #add-point:ON CHANGE xmdc045 name="input.g.page1.xmdc045"
            {<point name="input.g.page1.xmdc045" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc016
            
            #add-point:AFTER FIELD xmdc016 name="input.a.page1.xmdc016"
            {<point name="input.a.page1.xmdc016" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc016
            #add-point:BEFORE FIELD xmdc016 name="input.b.page1.xmdc016"
            {<point name="input.b.page1.xmdc016" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc016
            #add-point:ON CHANGE xmdc016 name="input.g.page1.xmdc016"
            {<point name="input.g.page1.xmdc016" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc010
            
            #add-point:AFTER FIELD xmdc010 name="input.a.page1.xmdc010"
            {<point name="input.a.page1.xmdc010" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc010
            #add-point:BEFORE FIELD xmdc010 name="input.b.page1.xmdc010"
            {<point name="input.b.page1.xmdc010" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc010
            #add-point:ON CHANGE xmdc010 name="input.g.page1.xmdc010"
            {<point name="input.g.page1.xmdc010" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc011
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdc_d[l_ac].xmdc011,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD xmdc011
            END IF 
 
 
 
            #add-point:AFTER FIELD xmdc011 name="input.a.page1.xmdc011"
            {<point name="input.a.page1.xmdc011" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc011
            #add-point:BEFORE FIELD xmdc011 name="input.b.page1.xmdc011"
            {<point name="input.b.page1.xmdc011" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc011
            #add-point:ON CHANGE xmdc011 name="input.g.page1.xmdc011"
            {<point name="input.g.page1.xmdc011" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc015
            #add-point:BEFORE FIELD xmdc015 name="input.b.page1.xmdc015"
            {<point name="input.b.page1.xmdc015" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc015
            
            #add-point:AFTER FIELD xmdc015 name="input.a.page1.xmdc015"
            {<point name="input.a.page1.xmdc015" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc015
            #add-point:ON CHANGE xmdc015 name="input.g.page1.xmdc015"
            {<point name="input.g.page1.xmdc015" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc023
            
            #add-point:AFTER FIELD xmdc023 name="input.a.page1.xmdc023"
            {<point name="input.a.page1.xmdc023" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc023
            #add-point:BEFORE FIELD xmdc023 name="input.b.page1.xmdc023"
            {<point name="input.b.page1.xmdc023" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc023
            #add-point:ON CHANGE xmdc023 name="input.g.page1.xmdc023"
            {<point name="input.g.page1.xmdc023" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc020
            #add-point:BEFORE FIELD xmdc020 name="input.b.page1.xmdc020"
            {<point name="input.b.page1.xmdc020" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc020
            
            #add-point:AFTER FIELD xmdc020 name="input.a.page1.xmdc020"
            {<point name="input.a.page1.xmdc020" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc020
            #add-point:ON CHANGE xmdc020 name="input.g.page1.xmdc020"
            {<point name="input.g.page1.xmdc020" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc021
            #add-point:BEFORE FIELD xmdc021 name="input.b.page1.xmdc021"
            {<point name="input.b.page1.xmdc021" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc021
            
            #add-point:AFTER FIELD xmdc021 name="input.a.page1.xmdc021"
            {<point name="input.a.page1.xmdc021" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc021
            #add-point:ON CHANGE xmdc021 name="input.g.page1.xmdc021"
            {<point name="input.g.page1.xmdc021" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc022
            #add-point:BEFORE FIELD xmdc022 name="input.b.page1.xmdc022"
            {<point name="input.b.page1.xmdc022" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc022
            
            #add-point:AFTER FIELD xmdc022 name="input.a.page1.xmdc022"
            {<point name="input.a.page1.xmdc022" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc022
            #add-point:ON CHANGE xmdc022 name="input.g.page1.xmdc022"
            {<point name="input.g.page1.xmdc022" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdcunit
            
            #add-point:AFTER FIELD xmdcunit name="input.a.page1.xmdcunit"
            {<point name="input.a.page1.xmdcunit" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdcunit
            #add-point:BEFORE FIELD xmdcunit name="input.b.page1.xmdcunit"
            {<point name="input.b.page1.xmdcunit" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdcunit
            #add-point:ON CHANGE xmdcunit name="input.g.page1.xmdcunit"
            {<point name="input.g.page1.xmdcunit" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc052
            #add-point:BEFORE FIELD xmdc052 name="input.b.page1.xmdc052"
            {<point name="input.b.page1.xmdc052" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc052
            
            #add-point:AFTER FIELD xmdc052 name="input.a.page1.xmdc052"
            {<point name="input.a.page1.xmdc052" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc052
            #add-point:ON CHANGE xmdc052 name="input.g.page1.xmdc052"
            {<point name="input.g.page1.xmdc052" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc049
            
            #add-point:AFTER FIELD xmdc049 name="input.a.page1.xmdc049"
            {<point name="input.a.page1.xmdc049" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc049
            #add-point:BEFORE FIELD xmdc049 name="input.b.page1.xmdc049"
            {<point name="input.b.page1.xmdc049" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc049
            #add-point:ON CHANGE xmdc049 name="input.g.page1.xmdc049"
            {<point name="input.g.page1.xmdc049" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc050
            #add-point:BEFORE FIELD xmdc050 name="input.b.page1.xmdc050"
            {<point name="input.b.page1.xmdc050" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc050
            
            #add-point:AFTER FIELD xmdc050 name="input.a.page1.xmdc050"
            {<point name="input.a.page1.xmdc050" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc050
            #add-point:ON CHANGE xmdc050 name="input.g.page1.xmdc050"
            {<point name="input.g.page1.xmdc050" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD ooff013
            #add-point:BEFORE FIELD ooff013 name="input.b.page1.ooff013"
            {<point name="input.b.page1.ooff013" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD ooff013
            
            #add-point:AFTER FIELD ooff013 name="input.a.page1.ooff013"
            {<point name="input.a.page1.ooff013" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE ooff013
            #add-point:ON CHANGE ooff013 name="input.g.page1.ooff013"
            {<point name="input.g.page1.ooff013" />}
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.xmdcseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdcseq
            #add-point:ON ACTION controlp INFIELD xmdcseq name="input.c.page1.xmdcseq"
            {<point name="input.c.page1.xmdcseq" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdc027
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc027
            #add-point:ON ACTION controlp INFIELD xmdc027 name="input.c.page1.xmdc027"
            {<point name="input.c.page1.xmdc027" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.l_pmao009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_pmao009
            #add-point:ON ACTION controlp INFIELD l_pmao009 name="input.c.page1.l_pmao009"
            {<point name="input.c.page1.l_pmao009" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.l_pmao010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_pmao010
            #add-point:ON ACTION controlp INFIELD l_pmao010 name="input.c.page1.l_pmao010"
            {<point name="input.c.page1.l_pmao010" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdc001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc001
            #add-point:ON ACTION controlp INFIELD xmdc001 name="input.c.page1.xmdc001"
            {<point name="input.c.page1.xmdc001" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdc062
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc062
            #add-point:ON ACTION controlp INFIELD xmdc062 name="input.c.page1.xmdc062"
            {<point name="input.c.page1.xmdc062" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdc019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc019
            #add-point:ON ACTION controlp INFIELD xmdc019 name="input.c.page1.xmdc019"
            {<point name="input.c.page1.xmdc019" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdc002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc002
            #add-point:ON ACTION controlp INFIELD xmdc002 name="input.c.page1.xmdc002"
            {<point name="input.c.page1.xmdc002" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdc002_desc
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc002_desc
            #add-point:ON ACTION controlp INFIELD xmdc002_desc name="input.c.page1.xmdc002_desc"
            {<point name="input.c.page1.xmdc002_desc" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdc006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc006
            #add-point:ON ACTION controlp INFIELD xmdc006 name="input.c.page1.xmdc006"
            {<point name="input.c.page1.xmdc006" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdc007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc007
            #add-point:ON ACTION controlp INFIELD xmdc007 name="input.c.page1.xmdc007"
            {<point name="input.c.page1.xmdc007" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdc009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc009
            #add-point:ON ACTION controlp INFIELD xmdc009 name="input.c.page1.xmdc009"
            {<point name="input.c.page1.xmdc009" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdc024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc024
            #add-point:ON ACTION controlp INFIELD xmdc024 name="input.c.page1.xmdc024"
            {<point name="input.c.page1.xmdc024" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdc012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc012
            #add-point:ON ACTION controlp INFIELD xmdc012 name="input.c.page1.xmdc012"
            {<point name="input.c.page1.xmdc012" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdc013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc013
            #add-point:ON ACTION controlp INFIELD xmdc013 name="input.c.page1.xmdc013"
            {<point name="input.c.page1.xmdc013" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdc045
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc045
            #add-point:ON ACTION controlp INFIELD xmdc045 name="input.c.page1.xmdc045"
            {<point name="input.c.page1.xmdc045" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdc016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc016
            #add-point:ON ACTION controlp INFIELD xmdc016 name="input.c.page1.xmdc016"
            {<point name="input.c.page1.xmdc016" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdc010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc010
            #add-point:ON ACTION controlp INFIELD xmdc010 name="input.c.page1.xmdc010"
            {<point name="input.c.page1.xmdc010" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdc011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc011
            #add-point:ON ACTION controlp INFIELD xmdc011 name="input.c.page1.xmdc011"
            {<point name="input.c.page1.xmdc011" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdc015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc015
            #add-point:ON ACTION controlp INFIELD xmdc015 name="input.c.page1.xmdc015"
            {<point name="input.c.page1.xmdc015" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdc023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc023
            #add-point:ON ACTION controlp INFIELD xmdc023 name="input.c.page1.xmdc023"
            {<point name="input.c.page1.xmdc023" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdc020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc020
            #add-point:ON ACTION controlp INFIELD xmdc020 name="input.c.page1.xmdc020"
            {<point name="input.c.page1.xmdc020" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdc021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc021
            #add-point:ON ACTION controlp INFIELD xmdc021 name="input.c.page1.xmdc021"
            {<point name="input.c.page1.xmdc021" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdc022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc022
            #add-point:ON ACTION controlp INFIELD xmdc022 name="input.c.page1.xmdc022"
            {<point name="input.c.page1.xmdc022" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdcunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdcunit
            #add-point:ON ACTION controlp INFIELD xmdcunit name="input.c.page1.xmdcunit"
            {<point name="input.c.page1.xmdcunit" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdc052
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc052
            #add-point:ON ACTION controlp INFIELD xmdc052 name="input.c.page1.xmdc052"
            {<point name="input.c.page1.xmdc052" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdc049
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc049
            #add-point:ON ACTION controlp INFIELD xmdc049 name="input.c.page1.xmdc049"
            {<point name="input.c.page1.xmdc049" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdc050
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc050
            #add-point:ON ACTION controlp INFIELD xmdc050 name="input.c.page1.xmdc050"
            {<point name="input.c.page1.xmdc050" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.ooff013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD ooff013
            #add-point:ON ACTION controlp INFIELD ooff013 name="input.c.page1.ooff013"
            {<point name="input.c.page1.ooff013" />}
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_xmdc_d[l_ac].* = g_xmdc_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE axmt500_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_xmdc_d[l_ac].xmdcseq 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_xmdc_d[l_ac].* = g_xmdc_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL axmt500_xmdc_t_mask_restore('restore_mask_o')
      
               UPDATE xmdc_t SET (xmdcdocno,xmdcseq,xmdc027,xmdc001,xmdc062,xmdc019,xmdc002,xmdc006, 
                   xmdc007,xmdc008,xmdc009,xmdc024,xmdc012,xmdc013,xmdc045,xmdc016,xmdc017,xmdc010,xmdc011, 
                   xmdc015,xmdc046,xmdc047,xmdc048,xmdc023,xmdc020,xmdc021,xmdc022,xmdcunit,xmdcorga, 
                   xmdc052,xmdc049,xmdc053,xmdc050,xmdcsite,xmdc058,xmdc059,xmdc060,xmdc061,xmdc028, 
                   xmdc029,xmdc030,xmdc057,xmdc025,xmdc026,xmdc031,xmdc032,xmdc033,xmdc003,xmdc054,xmdc036, 
                   xmdc037,xmdc038,xmdc039,xmdc035,xmdc040,xmdc041,xmdc042,xmdc043,xmdc044,xmdc055,xmdc056) = (g_xmda_m.xmdadocno, 
                   g_xmdc_d[l_ac].xmdcseq,g_xmdc_d[l_ac].xmdc027,g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc062, 
                   g_xmdc_d[l_ac].xmdc019,g_xmdc_d[l_ac].xmdc002,g_xmdc_d[l_ac].xmdc006,g_xmdc_d[l_ac].xmdc007, 
                   g_xmdc_d[l_ac].xmdc008,g_xmdc_d[l_ac].xmdc009,g_xmdc_d[l_ac].xmdc024,g_xmdc_d[l_ac].xmdc012, 
                   g_xmdc_d[l_ac].xmdc013,g_xmdc_d[l_ac].xmdc045,g_xmdc_d[l_ac].xmdc016,g_xmdc_d[l_ac].xmdc017, 
                   g_xmdc_d[l_ac].xmdc010,g_xmdc_d[l_ac].xmdc011,g_xmdc_d[l_ac].xmdc015,g_xmdc_d[l_ac].xmdc046, 
                   g_xmdc_d[l_ac].xmdc047,g_xmdc_d[l_ac].xmdc048,g_xmdc_d[l_ac].xmdc023,g_xmdc_d[l_ac].xmdc020, 
                   g_xmdc_d[l_ac].xmdc021,g_xmdc_d[l_ac].xmdc022,g_xmdc_d[l_ac].xmdcunit,g_xmdc_d[l_ac].xmdcorga, 
                   g_xmdc_d[l_ac].xmdc052,g_xmdc_d[l_ac].xmdc049,g_xmdc_d[l_ac].xmdc053,g_xmdc_d[l_ac].xmdc050, 
                   g_xmdc_d[l_ac].xmdcsite,g_xmdc_d[l_ac].xmdc058,g_xmdc_d[l_ac].xmdc059,g_xmdc_d[l_ac].xmdc060, 
                   g_xmdc_d[l_ac].xmdc061,g_xmdc2_d[l_ac].xmdc028,g_xmdc2_d[l_ac].xmdc029,g_xmdc2_d[l_ac].xmdc030, 
                   g_xmdc2_d[l_ac].xmdc057,g_xmdc2_d[l_ac].xmdc025,g_xmdc2_d[l_ac].xmdc026,g_xmdc2_d[l_ac].xmdc031, 
                   g_xmdc2_d[l_ac].xmdc032,g_xmdc2_d[l_ac].xmdc033,g_xmdc2_d[l_ac].xmdc003,g_xmdc2_d[l_ac].xmdc054, 
                   g_xmdc2_d[l_ac].xmdc036,g_xmdc2_d[l_ac].xmdc037,g_xmdc2_d[l_ac].xmdc038,g_xmdc2_d[l_ac].xmdc039, 
                   g_xmdc2_d[l_ac].xmdc035,g_xmdc2_d[l_ac].xmdc040,g_xmdc2_d[l_ac].xmdc041,g_xmdc2_d[l_ac].xmdc042, 
                   g_xmdc2_d[l_ac].xmdc043,g_xmdc2_d[l_ac].xmdc044,g_xmdc2_d[l_ac].xmdc055,g_xmdc2_d[l_ac].xmdc056) 

                WHERE xmdcent = g_enterprise AND xmdcdocno = g_xmda_m.xmdadocno 
 
                  AND xmdcseq = g_xmdc_d_t.xmdcseq #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_xmdc_d[l_ac].* = g_xmdc_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmdc_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_xmdc_d[l_ac].* = g_xmdc_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmdc_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmda_m.xmdadocno
               LET gs_keys_bak[1] = g_xmdadocno_t
               LET gs_keys[2] = g_xmdc_d[g_detail_idx].xmdcseq
               LET gs_keys_bak[2] = g_xmdc_d_t.xmdcseq
               CALL axmt500_update_b('xmdc_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL axmt500_xmdc_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_xmdc_d[g_detail_idx].xmdcseq = g_xmdc_d_t.xmdcseq 
 
                  ) THEN
                  LET gs_keys[01] = g_xmda_m.xmdadocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_xmdc_d_t.xmdcseq
 
                  CALL axmt500_key_update_b(gs_keys,'xmdc_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_xmda_m),util.JSON.stringify(g_xmdc_d_t)
               LET g_log2 = util.JSON.stringify(g_xmda_m),util.JSON.stringify(g_xmdc_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL axmt500_unlock_b("xmdc_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
            {<point name="input.body.after_input"/>}
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_xmdc_d[li_reproduce_target].* = g_xmdc_d[li_reproduce].*
               LET g_xmdc2_d[li_reproduce_target].* = g_xmdc2_d[li_reproduce].*
 
               LET g_xmdc_d[li_reproduce_target].xmdcseq = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_xmdc_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_xmdc_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_xmdc2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = FALSE, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = FALSE,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body2.before_input2"
            {<point name="input.body2.before_input2"/>}
            #end add-point
            
            CALL axmt500_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_xmdc2_d.getLength()
            #add-point:資料輸入前 name="input.body2.before_input"
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmdc2_d[l_ac].* TO NULL 
            INITIALIZE g_xmdc2_d_t.* TO NULL 
            INITIALIZE g_xmdc2_d_o.* TO NULL 
            #公用欄位給值(單身2)
            
            #自定義預設值(單身2)
                  LET g_xmdc2_d[l_ac].xmdc032 = "1"
      LET g_xmdc2_d[l_ac].xmdc035 = "1"
      LET g_xmdc2_d[l_ac].xmdc040 = "1"
      LET g_xmdc2_d[l_ac].xmdc043 = "0"
 
            #add-point:modify段before備份 name="input.body2.insert.before_bak"
            {<point name="input.body2.insert.before_bak"/>}
            #end add-point
            LET g_xmdc2_d_t.* = g_xmdc2_d[l_ac].*     #新輸入資料
            LET g_xmdc2_d_o.* = g_xmdc2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axmt500_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body2.insert.after_set_entry_b"
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL axmt500_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmdc_d[li_reproduce_target].* = g_xmdc_d[li_reproduce].*
               LET g_xmdc2_d[li_reproduce_target].* = g_xmdc2_d[li_reproduce].*
 
               LET g_xmdc2_d[li_reproduce_target].xmdcseq = NULL
            END IF
            
 
 
            #add-point:modify段before insert name="input.body2.before_insert"
            {<point name="input.body2.before_insert"/>}
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body2.before_row2"
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[2] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 2
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN axmt500_cl USING g_enterprise,g_xmda_m.xmdadocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axmt500_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE axmt500_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_xmdc2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xmdc2_d[l_ac].xmdcseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_xmdc2_d_t.* = g_xmdc2_d[l_ac].*  #BACKUP
               LET g_xmdc2_d_o.* = g_xmdc2_d[l_ac].*  #BACKUP
               CALL axmt500_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body2.after_set_entry_b"
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL axmt500_set_no_entry_b(l_cmd)
               IF NOT axmt500_lock_b("xmdc_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axmt500_bcl INTO g_xmdc_d[l_ac].xmdcseq,g_xmdc_d[l_ac].xmdc027,g_xmdc_d[l_ac].xmdc001, 
                      g_xmdc_d[l_ac].xmdc062,g_xmdc_d[l_ac].xmdc019,g_xmdc_d[l_ac].xmdc002,g_xmdc_d[l_ac].xmdc006, 
                      g_xmdc_d[l_ac].xmdc007,g_xmdc_d[l_ac].xmdc008,g_xmdc_d[l_ac].xmdc009,g_xmdc_d[l_ac].xmdc024, 
                      g_xmdc_d[l_ac].xmdc012,g_xmdc_d[l_ac].xmdc013,g_xmdc_d[l_ac].xmdc045,g_xmdc_d[l_ac].xmdc016, 
                      g_xmdc_d[l_ac].xmdc017,g_xmdc_d[l_ac].xmdc010,g_xmdc_d[l_ac].xmdc011,g_xmdc_d[l_ac].xmdc015, 
                      g_xmdc_d[l_ac].xmdc046,g_xmdc_d[l_ac].xmdc047,g_xmdc_d[l_ac].xmdc048,g_xmdc_d[l_ac].xmdc023, 
                      g_xmdc_d[l_ac].xmdc020,g_xmdc_d[l_ac].xmdc021,g_xmdc_d[l_ac].xmdc022,g_xmdc_d[l_ac].xmdcunit, 
                      g_xmdc_d[l_ac].xmdcorga,g_xmdc_d[l_ac].xmdc052,g_xmdc_d[l_ac].xmdc049,g_xmdc_d[l_ac].xmdc053, 
                      g_xmdc_d[l_ac].xmdc050,g_xmdc_d[l_ac].xmdcsite,g_xmdc_d[l_ac].xmdc058,g_xmdc_d[l_ac].xmdc059, 
                      g_xmdc_d[l_ac].xmdc060,g_xmdc_d[l_ac].xmdc061,g_xmdc2_d[l_ac].xmdcseq,g_xmdc2_d[l_ac].xmdc028, 
                      g_xmdc2_d[l_ac].xmdc029,g_xmdc2_d[l_ac].xmdc030,g_xmdc2_d[l_ac].xmdc057,g_xmdc2_d[l_ac].xmdc025, 
                      g_xmdc2_d[l_ac].xmdc026,g_xmdc2_d[l_ac].xmdc031,g_xmdc2_d[l_ac].xmdc032,g_xmdc2_d[l_ac].xmdc033, 
                      g_xmdc2_d[l_ac].xmdc003,g_xmdc2_d[l_ac].xmdc054,g_xmdc2_d[l_ac].xmdc036,g_xmdc2_d[l_ac].xmdc037, 
                      g_xmdc2_d[l_ac].xmdc038,g_xmdc2_d[l_ac].xmdc039,g_xmdc2_d[l_ac].xmdc035,g_xmdc2_d[l_ac].xmdc040, 
                      g_xmdc2_d[l_ac].xmdc041,g_xmdc2_d[l_ac].xmdc042,g_xmdc2_d[l_ac].xmdc043,g_xmdc2_d[l_ac].xmdc044, 
                      g_xmdc2_d[l_ac].xmdc055,g_xmdc2_d[l_ac].xmdc056
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_xmdc2_d_mask_o[l_ac].* =  g_xmdc2_d[l_ac].*
                  CALL axmt500_xmdc_t_mask()
                  LET g_xmdc2_d_mask_n[l_ac].* =  g_xmdc2_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL axmt500_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body2.before_row"
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
 
            #其他table進行lock
            
 
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body2.after_delete_d"
               {<point name="input.body2.after_delete_d"/>}
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body2.b_delete_ask"
               {<point name="input.body2.b_delete_ask" />}
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前 name="input.body2.b_delete"
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_xmda_m.xmdadocno
               LET gs_keys[gs_keys.getLength()+1] = g_xmdc2_d_t.xmdcseq
            
               #刪除同層單身
               IF NOT axmt500_delete_b('xmdc_t',gs_keys,"'2'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt500_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT axmt500_key_delete_b(gs_keys,'xmdc_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt500_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
 
               
               #add-point:單身2刪除中 name="input.body2.m_delete"
               {<point name="input.body2.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE axmt500_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身2刪除後 name="input.body2.a_delete"
               {<point name="input.body2.a_delete"/>}
               #end add-point
               LET l_count = g_xmdc_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body2.after_delete"
               {<point name="input.body2.after_delete"/>}
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_xmdc2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前 name="input.body2.b_a_insert"
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM xmdc_t 
             WHERE xmdcent = g_enterprise AND xmdcdocno = g_xmda_m.xmdadocno
               AND xmdcseq = g_xmdc2_d[l_ac].xmdcseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前 name="input.body2.b_insert"
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmda_m.xmdadocno
               LET gs_keys[2] = g_xmdc2_d[g_detail_idx].xmdcseq
               CALL axmt500_insert_b('xmdc_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2 name="input.body2.a_insert"
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_xmdc_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmdc_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axmt500_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body2.after_insert"
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_xmdc2_d[l_ac].* = g_xmdc2_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE axmt500_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_xmdc2_d[l_ac].* = g_xmdc2_d_t.*
            ELSE
               #add-point:單身page2修改前 name="input.body2.b_update"
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               #將遮罩欄位還原
               CALL axmt500_xmdc_t_mask_restore('restore_mask_o')
                              
               UPDATE xmdc_t SET (xmdcdocno,xmdcseq,xmdc027,xmdc001,xmdc062,xmdc019,xmdc002,xmdc006, 
                   xmdc007,xmdc008,xmdc009,xmdc024,xmdc012,xmdc013,xmdc045,xmdc016,xmdc017,xmdc010,xmdc011, 
                   xmdc015,xmdc046,xmdc047,xmdc048,xmdc023,xmdc020,xmdc021,xmdc022,xmdcunit,xmdcorga, 
                   xmdc052,xmdc049,xmdc053,xmdc050,xmdcsite,xmdc058,xmdc059,xmdc060,xmdc061,xmdc028, 
                   xmdc029,xmdc030,xmdc057,xmdc025,xmdc026,xmdc031,xmdc032,xmdc033,xmdc003,xmdc054,xmdc036, 
                   xmdc037,xmdc038,xmdc039,xmdc035,xmdc040,xmdc041,xmdc042,xmdc043,xmdc044,xmdc055,xmdc056) = (g_xmda_m.xmdadocno, 
                   g_xmdc_d[l_ac].xmdcseq,g_xmdc_d[l_ac].xmdc027,g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc062, 
                   g_xmdc_d[l_ac].xmdc019,g_xmdc_d[l_ac].xmdc002,g_xmdc_d[l_ac].xmdc006,g_xmdc_d[l_ac].xmdc007, 
                   g_xmdc_d[l_ac].xmdc008,g_xmdc_d[l_ac].xmdc009,g_xmdc_d[l_ac].xmdc024,g_xmdc_d[l_ac].xmdc012, 
                   g_xmdc_d[l_ac].xmdc013,g_xmdc_d[l_ac].xmdc045,g_xmdc_d[l_ac].xmdc016,g_xmdc_d[l_ac].xmdc017, 
                   g_xmdc_d[l_ac].xmdc010,g_xmdc_d[l_ac].xmdc011,g_xmdc_d[l_ac].xmdc015,g_xmdc_d[l_ac].xmdc046, 
                   g_xmdc_d[l_ac].xmdc047,g_xmdc_d[l_ac].xmdc048,g_xmdc_d[l_ac].xmdc023,g_xmdc_d[l_ac].xmdc020, 
                   g_xmdc_d[l_ac].xmdc021,g_xmdc_d[l_ac].xmdc022,g_xmdc_d[l_ac].xmdcunit,g_xmdc_d[l_ac].xmdcorga, 
                   g_xmdc_d[l_ac].xmdc052,g_xmdc_d[l_ac].xmdc049,g_xmdc_d[l_ac].xmdc053,g_xmdc_d[l_ac].xmdc050, 
                   g_xmdc_d[l_ac].xmdcsite,g_xmdc_d[l_ac].xmdc058,g_xmdc_d[l_ac].xmdc059,g_xmdc_d[l_ac].xmdc060, 
                   g_xmdc_d[l_ac].xmdc061,g_xmdc2_d[l_ac].xmdc028,g_xmdc2_d[l_ac].xmdc029,g_xmdc2_d[l_ac].xmdc030, 
                   g_xmdc2_d[l_ac].xmdc057,g_xmdc2_d[l_ac].xmdc025,g_xmdc2_d[l_ac].xmdc026,g_xmdc2_d[l_ac].xmdc031, 
                   g_xmdc2_d[l_ac].xmdc032,g_xmdc2_d[l_ac].xmdc033,g_xmdc2_d[l_ac].xmdc003,g_xmdc2_d[l_ac].xmdc054, 
                   g_xmdc2_d[l_ac].xmdc036,g_xmdc2_d[l_ac].xmdc037,g_xmdc2_d[l_ac].xmdc038,g_xmdc2_d[l_ac].xmdc039, 
                   g_xmdc2_d[l_ac].xmdc035,g_xmdc2_d[l_ac].xmdc040,g_xmdc2_d[l_ac].xmdc041,g_xmdc2_d[l_ac].xmdc042, 
                   g_xmdc2_d[l_ac].xmdc043,g_xmdc2_d[l_ac].xmdc044,g_xmdc2_d[l_ac].xmdc055,g_xmdc2_d[l_ac].xmdc056)  
                   #自訂欄位頁簽
                WHERE xmdcent = g_enterprise AND xmdcdocno = g_xmda_m.xmdadocno
                  AND xmdcseq = g_xmdc2_d_t.xmdcseq #項次 
                  
               #add-point:單身page2修改中 name="input.body2.m_update"
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_xmdc2_d[l_ac].* = g_xmdc2_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmdc_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_xmdc2_d[l_ac].* = g_xmdc2_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmdc_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmda_m.xmdadocno
               LET gs_keys_bak[1] = g_xmdadocno_t
               LET gs_keys[2] = g_xmdc2_d[g_detail_idx].xmdcseq
               LET gs_keys_bak[2] = g_xmdc2_d_t.xmdcseq
               CALL axmt500_update_b('xmdc_t',gs_keys,gs_keys_bak,"'2'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL axmt500_xmdc_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_xmdc2_d[g_detail_idx].xmdcseq = g_xmdc2_d_t.xmdcseq 
                  ) THEN
                  LET gs_keys[01] = g_xmda_m.xmdadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_xmdc2_d_t.xmdcseq
                  CALL axmt500_key_update_b(gs_keys,'xmdc_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_xmda_m),util.JSON.stringify(g_xmdc2_d_t)
               LET g_log2 = util.JSON.stringify(g_xmda_m),util.JSON.stringify(g_xmdc2_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後 name="input.body2.a_update"
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imaa005
            
            #add-point:AFTER FIELD imaa005 name="input.a.page2.imaa005"
            {<point name="input.a.page2.imaa005" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imaa005
            #add-point:BEFORE FIELD imaa005 name="input.b.page2.imaa005"
            {<point name="input.b.page2.imaa005" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imaa005
            #add-point:ON CHANGE imaa005 name="input.g.page2.imaa005"
            {<point name="input.g.page2.imaa005" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imaa005_desc
            #add-point:BEFORE FIELD imaa005_desc name="input.b.page2.imaa005_desc"
            {<point name="input.b.page2.imaa005_desc" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imaa005_desc
            
            #add-point:AFTER FIELD imaa005_desc name="input.a.page2.imaa005_desc"
            {<point name="input.a.page2.imaa005_desc" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imaa005_desc
            #add-point:ON CHANGE imaa005_desc name="input.g.page2.imaa005_desc"
            {<point name="input.g.page2.imaa005_desc" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_pmao0092
            #add-point:BEFORE FIELD l_pmao0092 name="input.b.page2.l_pmao0092"
            {<point name="input.b.page2.l_pmao0092" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_pmao0092
            
            #add-point:AFTER FIELD l_pmao0092 name="input.a.page2.l_pmao0092"
            {<point name="input.a.page2.l_pmao0092" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_pmao0092
            #add-point:ON CHANGE l_pmao0092 name="input.g.page2.l_pmao0092"
            {<point name="input.g.page2.l_pmao0092" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_pmao0102
            #add-point:BEFORE FIELD l_pmao0102 name="input.b.page2.l_pmao0102"
            {<point name="input.b.page2.l_pmao0102" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_pmao0102
            
            #add-point:AFTER FIELD l_pmao0102 name="input.a.page2.l_pmao0102"
            {<point name="input.a.page2.l_pmao0102" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_pmao0102
            #add-point:ON CHANGE l_pmao0102 name="input.g.page2.l_pmao0102"
            {<point name="input.g.page2.l_pmao0102" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc028
            
            #add-point:AFTER FIELD xmdc028 name="input.a.page2.xmdc028"
            {<point name="input.a.page2.xmdc028" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc028
            #add-point:BEFORE FIELD xmdc028 name="input.b.page2.xmdc028"
            {<point name="input.b.page2.xmdc028" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc028
            #add-point:ON CHANGE xmdc028 name="input.g.page2.xmdc028"
            {<point name="input.g.page2.xmdc028" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc029
            
            #add-point:AFTER FIELD xmdc029 name="input.a.page2.xmdc029"
            {<point name="input.a.page2.xmdc029" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc029
            #add-point:BEFORE FIELD xmdc029 name="input.b.page2.xmdc029"
            {<point name="input.b.page2.xmdc029" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc029
            #add-point:ON CHANGE xmdc029 name="input.g.page2.xmdc029"
            {<point name="input.g.page2.xmdc029" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc030
            #add-point:BEFORE FIELD xmdc030 name="input.b.page2.xmdc030"
            {<point name="input.b.page2.xmdc030" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc030
            
            #add-point:AFTER FIELD xmdc030 name="input.a.page2.xmdc030"
            {<point name="input.a.page2.xmdc030" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc030
            #add-point:ON CHANGE xmdc030 name="input.g.page2.xmdc030"
            {<point name="input.g.page2.xmdc030" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc057
            #add-point:BEFORE FIELD xmdc057 name="input.b.page2.xmdc057"
            {<point name="input.b.page2.xmdc057" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc057
            
            #add-point:AFTER FIELD xmdc057 name="input.a.page2.xmdc057"
            {<point name="input.a.page2.xmdc057" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc057
            #add-point:ON CHANGE xmdc057 name="input.g.page2.xmdc057"
            {<point name="input.g.page2.xmdc057" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc025
            
            #add-point:AFTER FIELD xmdc025 name="input.a.page2.xmdc025"
            {<point name="input.a.page2.xmdc025" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc025
            #add-point:BEFORE FIELD xmdc025 name="input.b.page2.xmdc025"
            {<point name="input.b.page2.xmdc025" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc025
            #add-point:ON CHANGE xmdc025 name="input.g.page2.xmdc025"
            {<point name="input.g.page2.xmdc025" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc026
            
            #add-point:AFTER FIELD xmdc026 name="input.a.page2.xmdc026"
            {<point name="input.a.page2.xmdc026" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc026
            #add-point:BEFORE FIELD xmdc026 name="input.b.page2.xmdc026"
            {<point name="input.b.page2.xmdc026" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc026
            #add-point:ON CHANGE xmdc026 name="input.g.page2.xmdc026"
            {<point name="input.g.page2.xmdc026" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc031
            
            #add-point:AFTER FIELD xmdc031 name="input.a.page2.xmdc031"
            {<point name="input.a.page2.xmdc031" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc031
            #add-point:BEFORE FIELD xmdc031 name="input.b.page2.xmdc031"
            {<point name="input.b.page2.xmdc031" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc031
            #add-point:ON CHANGE xmdc031 name="input.g.page2.xmdc031"
            {<point name="input.g.page2.xmdc031" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc032
            #add-point:BEFORE FIELD xmdc032 name="input.b.page2.xmdc032"
            {<point name="input.b.page2.xmdc032" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc032
            
            #add-point:AFTER FIELD xmdc032 name="input.a.page2.xmdc032"
            {<point name="input.a.page2.xmdc032" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc032
            #add-point:ON CHANGE xmdc032 name="input.g.page2.xmdc032"
            {<point name="input.g.page2.xmdc032" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc033
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdc2_d[l_ac].xmdc033,"0.000","1","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD xmdc033
            END IF 
 
 
 
            #add-point:AFTER FIELD xmdc033 name="input.a.page2.xmdc033"
            {<point name="input.a.page2.xmdc033" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc033
            #add-point:BEFORE FIELD xmdc033 name="input.b.page2.xmdc033"
            {<point name="input.b.page2.xmdc033" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc033
            #add-point:ON CHANGE xmdc033 name="input.g.page2.xmdc033"
            {<point name="input.g.page2.xmdc033" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc003
            
            #add-point:AFTER FIELD xmdc003 name="input.a.page2.xmdc003"
            {<point name="input.a.page2.xmdc003" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc003
            #add-point:BEFORE FIELD xmdc003 name="input.b.page2.xmdc003"
            {<point name="input.b.page2.xmdc003" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc003
            #add-point:ON CHANGE xmdc003 name="input.g.page2.xmdc003"
            {<point name="input.g.page2.xmdc003" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc054
            #add-point:BEFORE FIELD xmdc054 name="input.b.page2.xmdc054"
            {<point name="input.b.page2.xmdc054" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc054
            
            #add-point:AFTER FIELD xmdc054 name="input.a.page2.xmdc054"
            {<point name="input.a.page2.xmdc054" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc054
            #add-point:ON CHANGE xmdc054 name="input.g.page2.xmdc054"
            {<point name="input.g.page2.xmdc054" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc036
            
            #add-point:AFTER FIELD xmdc036 name="input.a.page2.xmdc036"
            {<point name="input.a.page2.xmdc036" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc036
            #add-point:BEFORE FIELD xmdc036 name="input.b.page2.xmdc036"
            {<point name="input.b.page2.xmdc036" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc036
            #add-point:ON CHANGE xmdc036 name="input.g.page2.xmdc036"
            {<point name="input.g.page2.xmdc036" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc037
            
            #add-point:AFTER FIELD xmdc037 name="input.a.page2.xmdc037"
            {<point name="input.a.page2.xmdc037" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc037
            #add-point:BEFORE FIELD xmdc037 name="input.b.page2.xmdc037"
            {<point name="input.b.page2.xmdc037" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc037
            #add-point:ON CHANGE xmdc037 name="input.g.page2.xmdc037"
            {<point name="input.g.page2.xmdc037" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc038
            
            #add-point:AFTER FIELD xmdc038 name="input.a.page2.xmdc038"
            {<point name="input.a.page2.xmdc038" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc038
            #add-point:BEFORE FIELD xmdc038 name="input.b.page2.xmdc038"
            {<point name="input.b.page2.xmdc038" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc038
            #add-point:ON CHANGE xmdc038 name="input.g.page2.xmdc038"
            {<point name="input.g.page2.xmdc038" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc039
            #add-point:BEFORE FIELD xmdc039 name="input.b.page2.xmdc039"
            {<point name="input.b.page2.xmdc039" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc039
            
            #add-point:AFTER FIELD xmdc039 name="input.a.page2.xmdc039"
            {<point name="input.a.page2.xmdc039" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc039
            #add-point:ON CHANGE xmdc039 name="input.g.page2.xmdc039"
            {<point name="input.g.page2.xmdc039" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc056
            #add-point:BEFORE FIELD xmdc056 name="input.b.page2.xmdc056"
            {<point name="input.b.page2.xmdc056" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc056
            
            #add-point:AFTER FIELD xmdc056 name="input.a.page2.xmdc056"
            {<point name="input.a.page2.xmdc056" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdc056
            #add-point:ON CHANGE xmdc056 name="input.g.page2.xmdc056"
            {<point name="input.g.page2.xmdc056" />}
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page2.imaa005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imaa005
            #add-point:ON ACTION controlp INFIELD imaa005 name="input.c.page2.imaa005"
            {<point name="input.c.page2.imaa005" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.imaa005_desc
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imaa005_desc
            #add-point:ON ACTION controlp INFIELD imaa005_desc name="input.c.page2.imaa005_desc"
            {<point name="input.c.page2.imaa005_desc" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.l_pmao0092
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_pmao0092
            #add-point:ON ACTION controlp INFIELD l_pmao0092 name="input.c.page2.l_pmao0092"
            {<point name="input.c.page2.l_pmao0092" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.l_pmao0102
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_pmao0102
            #add-point:ON ACTION controlp INFIELD l_pmao0102 name="input.c.page2.l_pmao0102"
            {<point name="input.c.page2.l_pmao0102" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.xmdc028
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc028
            #add-point:ON ACTION controlp INFIELD xmdc028 name="input.c.page2.xmdc028"
            {<point name="input.c.page2.xmdc028" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.xmdc029
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc029
            #add-point:ON ACTION controlp INFIELD xmdc029 name="input.c.page2.xmdc029"
            {<point name="input.c.page2.xmdc029" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.xmdc030
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc030
            #add-point:ON ACTION controlp INFIELD xmdc030 name="input.c.page2.xmdc030"
            {<point name="input.c.page2.xmdc030" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.xmdc057
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc057
            #add-point:ON ACTION controlp INFIELD xmdc057 name="input.c.page2.xmdc057"
            {<point name="input.c.page2.xmdc057" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.xmdc025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc025
            #add-point:ON ACTION controlp INFIELD xmdc025 name="input.c.page2.xmdc025"
            {<point name="input.c.page2.xmdc025" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.xmdc026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc026
            #add-point:ON ACTION controlp INFIELD xmdc026 name="input.c.page2.xmdc026"
            {<point name="input.c.page2.xmdc026" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.xmdc031
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc031
            #add-point:ON ACTION controlp INFIELD xmdc031 name="input.c.page2.xmdc031"
            {<point name="input.c.page2.xmdc031" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.xmdc032
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc032
            #add-point:ON ACTION controlp INFIELD xmdc032 name="input.c.page2.xmdc032"
            {<point name="input.c.page2.xmdc032" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.xmdc033
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc033
            #add-point:ON ACTION controlp INFIELD xmdc033 name="input.c.page2.xmdc033"
            {<point name="input.c.page2.xmdc033" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.xmdc003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc003
            #add-point:ON ACTION controlp INFIELD xmdc003 name="input.c.page2.xmdc003"
            {<point name="input.c.page2.xmdc003" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.xmdc054
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc054
            #add-point:ON ACTION controlp INFIELD xmdc054 name="input.c.page2.xmdc054"
            {<point name="input.c.page2.xmdc054" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.xmdc036
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc036
            #add-point:ON ACTION controlp INFIELD xmdc036 name="input.c.page2.xmdc036"
            {<point name="input.c.page2.xmdc036" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.xmdc037
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc037
            #add-point:ON ACTION controlp INFIELD xmdc037 name="input.c.page2.xmdc037"
            {<point name="input.c.page2.xmdc037" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.xmdc038
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc038
            #add-point:ON ACTION controlp INFIELD xmdc038 name="input.c.page2.xmdc038"
            {<point name="input.c.page2.xmdc038" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.xmdc039
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc039
            #add-point:ON ACTION controlp INFIELD xmdc039 name="input.c.page2.xmdc039"
            {<point name="input.c.page2.xmdc039" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.xmdc056
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc056
            #add-point:ON ACTION controlp INFIELD xmdc056 name="input.c.page2.xmdc056"
            {<point name="input.c.page2.xmdc056" />}
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row name="input.body2.after_row"
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_xmdc2_d[l_ac].* = g_xmdc2_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE axmt500_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL axmt500_unlock_b("xmdc_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2 name="input.body2.after_row2"
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body2.after_input"
            {<point name="input.body2.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_xmdc_d[li_reproduce_target].* = g_xmdc_d[li_reproduce].*
               LET g_xmdc2_d[li_reproduce_target].* = g_xmdc2_d[li_reproduce].*
 
               LET g_xmdc2_d[li_reproduce_target].xmdcseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_xmdc2_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_xmdc2_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_xmdc6_d FROM s_detail6.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_6)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body6.before_input2"
            {<point name="input.body6.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xmdc6_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axmt500_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue(""))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_xmdc6_d.getLength()
            #add-point:資料輸入前 name="input.body6.before_input"
            {<point name="input.body6.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmdc6_d[l_ac].* TO NULL 
            INITIALIZE g_xmdc6_d_t.* TO NULL 
            INITIALIZE g_xmdc6_d_o.* TO NULL 
            #公用欄位給值(單身6)
            
            #自定義預設值(單身6)
            
            #add-point:modify段before備份 name="input.body6.insert.before_bak"
            {<point name="input.body6.insert.before_bak"/>}
            #end add-point
            LET g_xmdc6_d_t.* = g_xmdc6_d[l_ac].*     #新輸入資料
            LET g_xmdc6_d_o.* = g_xmdc6_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axmt500_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body6.insert.after_set_entry_b"
            {<point name="input.body6.insert.after_set_entry_b"/>}
            #end add-point
            CALL axmt500_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmdc6_d[li_reproduce_target].* = g_xmdc6_d[li_reproduce].*
 
               LET g_xmdc6_d[li_reproduce_target].xmdsseq = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body6.before_insert"
            {<point name="input.body6.before_insert"/>}
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body6.before_row2"
            {<point name="input.body6.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[6] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 6
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN axmt500_cl USING g_enterprise,g_xmda_m.xmdadocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axmt500_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE axmt500_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_xmdc6_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xmdc6_d[l_ac].xmdsseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_xmdc6_d_t.* = g_xmdc6_d[l_ac].*  #BACKUP
               LET g_xmdc6_d_o.* = g_xmdc6_d[l_ac].*  #BACKUP
               CALL axmt500_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body6.after_set_entry_b"
               {<point name="input.body6.after_set_entry_b"/>}
               #end add-point  
               CALL axmt500_set_no_entry_b(l_cmd)
               IF NOT axmt500_lock_b("xmds_t","'6'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axmt500_bcl5 INTO g_xmdc6_d[l_ac].xmdsseq,g_xmdc6_d[l_ac].xmds001,g_xmdc6_d[l_ac].xmds002, 
                      g_xmdc6_d[l_ac].xmds003,g_xmdc6_d[l_ac].xmds004,g_xmdc6_d[l_ac].xmds005,g_xmdc6_d[l_ac].xmds006, 
                      g_xmdc6_d[l_ac].xmdssite
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_xmdc6_d_mask_o[l_ac].* =  g_xmdc6_d[l_ac].*
                  CALL axmt500_xmds_t_mask()
                  LET g_xmdc6_d_mask_n[l_ac].* =  g_xmdc6_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL axmt500_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body6.before_row"
            {<point name="input.body6.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body6.after_delete_d"
               {<point name="input.body6.after_delete_d"/>}
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body6.b_delete_ask"
               {<point name="input.body6.b_delete_ask" />}
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身6刪除前 name="input.body6.b_delete"
               {<point name="input.body6.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_xmda_m.xmdadocno
               LET gs_keys[gs_keys.getLength()+1] = g_xmdc6_d_t.xmdsseq
            
               #刪除同層單身
               IF NOT axmt500_delete_b('xmds_t',gs_keys,"'6'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt500_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT axmt500_key_delete_b(gs_keys,'xmds_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt500_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身6刪除中 name="input.body6.m_delete"
               {<point name="input.body6.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE axmt500_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身6刪除後 name="input.body6.a_delete"
               {<point name="input.body6.a_delete"/>}
               #end add-point
               LET l_count = g_xmdc_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body6.after_delete"
               {<point name="input.body6.after_delete"/>}
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_xmdc6_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身6新增前 name="input.body6.b_a_insert"
            {<point name="input.body6.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM xmds_t 
             WHERE xmdsent = g_enterprise AND xmdsdocno = g_xmda_m.xmdadocno
               AND xmdsseq = g_xmdc6_d[l_ac].xmdsseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身6新增前 name="input.body6.b_insert"
               {<point name="input.body6.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmda_m.xmdadocno
               LET gs_keys[2] = g_xmdc6_d[g_detail_idx].xmdsseq
               CALL axmt500_insert_b('xmds_t',gs_keys,"'6'")
                           
               #add-point:單身新增後6 name="input.body6.a_insert"
               {<point name="input.body6.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_xmdc_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmds_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axmt500_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body6.after_insert"
               {<point name="input.body6.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_xmdc6_d[l_ac].* = g_xmdc6_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE axmt500_bcl5
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_xmdc6_d[l_ac].* = g_xmdc6_d_t.*
            ELSE
               #add-point:單身page6修改前 name="input.body6.b_update"
               {<point name="input.body6.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身6)
               
               
               #將遮罩欄位還原
               CALL axmt500_xmds_t_mask_restore('restore_mask_o')
                              
               UPDATE xmds_t SET (xmdsdocno,xmdsseq,xmds001,xmds002,xmds003,xmds004,xmds005,xmds006, 
                   xmdssite) = (g_xmda_m.xmdadocno,g_xmdc6_d[l_ac].xmdsseq,g_xmdc6_d[l_ac].xmds001,g_xmdc6_d[l_ac].xmds002, 
                   g_xmdc6_d[l_ac].xmds003,g_xmdc6_d[l_ac].xmds004,g_xmdc6_d[l_ac].xmds005,g_xmdc6_d[l_ac].xmds006, 
                   g_xmdc6_d[l_ac].xmdssite) #自訂欄位頁簽
                WHERE xmdsent = g_enterprise AND xmdsdocno = g_xmda_m.xmdadocno
                  AND xmdsseq = g_xmdc6_d_t.xmdsseq #項次 
                  
               #add-point:單身page6修改中 name="input.body6.m_update"
               {<point name="input.body6.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_xmdc6_d[l_ac].* = g_xmdc6_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmds_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_xmdc6_d[l_ac].* = g_xmdc6_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmds_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmda_m.xmdadocno
               LET gs_keys_bak[1] = g_xmdadocno_t
               LET gs_keys[2] = g_xmdc6_d[g_detail_idx].xmdsseq
               LET gs_keys_bak[2] = g_xmdc6_d_t.xmdsseq
               CALL axmt500_update_b('xmds_t',gs_keys,gs_keys_bak,"'6'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL axmt500_xmds_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_xmdc6_d[g_detail_idx].xmdsseq = g_xmdc6_d_t.xmdsseq 
                  ) THEN
                  LET gs_keys[01] = g_xmda_m.xmdadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_xmdc6_d_t.xmdsseq
                  CALL axmt500_key_update_b(gs_keys,'xmds_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_xmda_m),util.JSON.stringify(g_xmdc6_d_t)
               LET g_log2 = util.JSON.stringify(g_xmda_m),util.JSON.stringify(g_xmdc6_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page6修改後 name="input.body6.a_update"
               {<point name="input.body6.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmds001
            
            #add-point:AFTER FIELD xmds001 name="input.a.page6.xmds001"
            {<point name="input.a.page6.xmds001" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmds001
            #add-point:BEFORE FIELD xmds001 name="input.b.page6.xmds001"
            {<point name="input.b.page6.xmds001" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmds001
            #add-point:ON CHANGE xmds001 name="input.g.page6.xmds001"
            {<point name="input.g.page6.xmds001" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmds002
            
            #add-point:AFTER FIELD xmds002 name="input.a.page6.xmds002"
            {<point name="input.a.page6.xmds002" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmds002
            #add-point:BEFORE FIELD xmds002 name="input.b.page6.xmds002"
            {<point name="input.b.page6.xmds002" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmds002
            #add-point:ON CHANGE xmds002 name="input.g.page6.xmds002"
            {<point name="input.g.page6.xmds002" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmds003
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdc6_d[l_ac].xmds003,"0","0","","","azz-00079",1) THEN
               NEXT FIELD xmds003
            END IF 
 
 
 
            #add-point:AFTER FIELD xmds003 name="input.a.page6.xmds003"
            {<point name="input.a.page6.xmds003" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmds003
            #add-point:BEFORE FIELD xmds003 name="input.b.page6.xmds003"
            {<point name="input.b.page6.xmds003" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmds003
            #add-point:ON CHANGE xmds003 name="input.g.page6.xmds003"
            {<point name="input.g.page6.xmds003" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmds004
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdc6_d[l_ac].xmds004,"0","0","","","azz-00079",1) THEN
               NEXT FIELD xmds004
            END IF 
 
 
 
            #add-point:AFTER FIELD xmds004 name="input.a.page6.xmds004"
            {<point name="input.a.page6.xmds004" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmds004
            #add-point:BEFORE FIELD xmds004 name="input.b.page6.xmds004"
            {<point name="input.b.page6.xmds004" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmds004
            #add-point:ON CHANGE xmds004 name="input.g.page6.xmds004"
            {<point name="input.g.page6.xmds004" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmds005
            
            #add-point:AFTER FIELD xmds005 name="input.a.page6.xmds005"
            {<point name="input.a.page6.xmds005" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmds005
            #add-point:BEFORE FIELD xmds005 name="input.b.page6.xmds005"
            {<point name="input.b.page6.xmds005" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmds005
            #add-point:ON CHANGE xmds005 name="input.g.page6.xmds005"
            {<point name="input.g.page6.xmds005" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmds006
            #add-point:BEFORE FIELD xmds006 name="input.b.page6.xmds006"
            {<point name="input.b.page6.xmds006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmds006
            
            #add-point:AFTER FIELD xmds006 name="input.a.page6.xmds006"
            {<point name="input.a.page6.xmds006" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmds006
            #add-point:ON CHANGE xmds006 name="input.g.page6.xmds006"
            {<point name="input.g.page6.xmds006" />}
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page6.xmds001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmds001
            #add-point:ON ACTION controlp INFIELD xmds001 name="input.c.page6.xmds001"
            {<point name="input.c.page6.xmds001" />}
            #END add-point
 
 
         #Ctrlp:input.c.page6.xmds002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmds002
            #add-point:ON ACTION controlp INFIELD xmds002 name="input.c.page6.xmds002"
            {<point name="input.c.page6.xmds002" />}
            #END add-point
 
 
         #Ctrlp:input.c.page6.xmds003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmds003
            #add-point:ON ACTION controlp INFIELD xmds003 name="input.c.page6.xmds003"
            {<point name="input.c.page6.xmds003" />}
            #END add-point
 
 
         #Ctrlp:input.c.page6.xmds004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmds004
            #add-point:ON ACTION controlp INFIELD xmds004 name="input.c.page6.xmds004"
            {<point name="input.c.page6.xmds004" />}
            #END add-point
 
 
         #Ctrlp:input.c.page6.xmds005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmds005
            #add-point:ON ACTION controlp INFIELD xmds005 name="input.c.page6.xmds005"
            {<point name="input.c.page6.xmds005" />}
            #END add-point
 
 
         #Ctrlp:input.c.page6.xmds006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmds006
            #add-point:ON ACTION controlp INFIELD xmds006 name="input.c.page6.xmds006"
            {<point name="input.c.page6.xmds006" />}
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page6 after_row name="input.body6.after_row"
            {<point name="input.body6.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_xmdc6_d[l_ac].* = g_xmdc6_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE axmt500_bcl5
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL axmt500_unlock_b("xmds_t","'6'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page6 after_row2 name="input.body6.after_row2"
            {<point name="input.body6.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body6.after_input"
            {<point name="input.body6.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_xmdc6_d[li_reproduce_target].* = g_xmdc6_d[li_reproduce].*
 
               LET g_xmdc6_d[li_reproduce_target].xmdsseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_xmdc6_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_xmdc6_d.getLength()+1
            END IF
            
      END INPUT
 
      
 
      DISPLAY ARRAY g_xmdc3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL axmt500_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail3")
            LET g_detail_idx = l_ac
            
            #add-point:page3, before row動作 name="input.body3.before_row"
            {<point name="input.body3.before_row"/>}
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'4',"))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail3")
            CALL axmt500_idx_chk()
            LET g_current_page = 3
      
         #add-point:page3自定義行為 name="input.body3.action"
         {<point name="input.body3.action"/>}
         #end add-point
      
      END DISPLAY
      DISPLAY ARRAY g_xmdc4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL axmt500_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail4")
            LET g_detail_idx = l_ac
            
            #add-point:page4, before row動作 name="input.body4.before_row"
            {<point name="input.body4.before_row"/>}
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'5',"))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail4")
            CALL axmt500_idx_chk()
            LET g_current_page = 4
      
         #add-point:page4自定義行為 name="input.body4.action"
         {<point name="input.body4.action"/>}
         #end add-point
      
      END DISPLAY
      DISPLAY ARRAY g_xmdc5_d TO s_detail5.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL axmt500_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail5")
            LET g_detail_idx = l_ac
            
            #add-point:page5, before row動作 name="input.body5.before_row"
            {<point name="input.body5.before_row"/>}
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'6',"))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail5")
            CALL axmt500_idx_chk()
            LET g_current_page = 5
      
         #add-point:page5自定義行為 name="input.body5.action"
         {<point name="input.body5.action"/>}
         #end add-point
      
      END DISPLAY
 
 

{</section>}

{<section id="axmt500.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1','2',"))      
         CALL DIALOG.setCurrentRow("s_detail2",g_idx_group.getValue("'3',"))
         CALL DIALOG.setCurrentRow("s_detail3",g_idx_group.getValue("'4',"))
         CALL DIALOG.setCurrentRow("s_detail4",g_idx_group.getValue("'5',"))
         CALL DIALOG.setCurrentRow("s_detail5",g_idx_group.getValue("'6',"))
         CALL DIALOG.setCurrentRow("s_detail6",g_idx_group.getValue(""))
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD xmdadocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xmdcseq
               WHEN "s_detail2"
                  NEXT FIELD xmdcseq_2
               WHEN "s_detail3"
                  NEXT FIELD xmddseq
               WHEN "s_detail4"
                  NEXT FIELD xmdqdocno
               WHEN "s_detail5"
                  NEXT FIELD xmdb001
               WHEN "s_detail6"
                  NEXT FIELD xmdsseq
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         {<point name="input.after_dialog"/>}
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         {<point name="input.cancel"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
         LET g_detail_idx_list[4] = 1
         LET g_detail_idx_list[5] = 1
         LET g_detail_idx_list[6] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
         CALL g_curr_diag.setCurrentRow("s_detail4",1)
         CALL g_curr_diag.setCurrentRow("s_detail5",1)
         CALL g_curr_diag.setCurrentRow("s_detail6",1)
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         {<point name="input.close"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         {<point name="input.exit"/>}
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
         LET g_detail_idx_list[4] = 1
         LET g_detail_idx_list[5] = 1
         LET g_detail_idx_list[6] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
         CALL g_curr_diag.setCurrentRow("s_detail4",1)
         CALL g_curr_diag.setCurrentRow("s_detail5",1)
         CALL g_curr_diag.setCurrentRow("s_detail6",1)
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION

{</section>}

{<section id="axmt500.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION axmt500_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   {<point name="show.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   {<point name="show.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL axmt500_b_fill() #單身填充
      CALL axmt500_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL axmt500_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_xmda_m_mask_o.* =  g_xmda_m.*
   CALL axmt500_xmda_t_mask()
   LET g_xmda_m_mask_n.* =  g_xmda_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xmda_m.xmdadocno,g_xmda_m.xmda001,g_xmda_m.xmdadocno_desc,g_xmda_m.xmdadocdt,g_xmda_m.xmda004, 
       g_xmda_m.xmda004_desc,g_xmda_m.xmda002,g_xmda_m.xmda002_desc,g_xmda_m.xmda003,g_xmda_m.xmda003_desc, 
       g_xmda_m.xmdasite,g_xmda_m.xmdastus,g_xmda_m.xmda005,g_xmda_m.xmda006,g_xmda_m.xmda007,g_xmda_m.xmda008, 
       g_xmda_m.xmda033,g_xmda_m.xmda027,g_xmda_m.xmda027_desc,g_xmda_m.xmda009,g_xmda_m.xmda009_desc, 
       g_xmda_m.xmda010,g_xmda_m.xmda010_desc,g_xmda_m.xmda011,g_xmda_m.xmda011_desc,g_xmda_m.xmda012, 
       g_xmda_m.xmda013,g_xmda_m.xmda035,g_xmda_m.xmda035_desc,g_xmda_m.xmda015,g_xmda_m.xmda015_desc, 
       g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda017_desc,g_xmda_m.xmda018,g_xmda_m.xmda018_desc, 
       g_xmda_m.xmda019,g_xmda_m.xmda023,g_xmda_m.xmda023_desc,g_xmda_m.xmda032,g_xmda_m.xmda032_desc, 
       g_xmda_m.xmda071,g_xmda_m.xmda050,g_xmda_m.xmda050_desc,g_xmda_m.xmda021,g_xmda_m.xmda021_desc, 
       g_xmda_m.xmda022,g_xmda_m.xmda022_desc,g_xmda_m.xmda034,g_xmda_m.xmda034_desc,g_xmda_m.xmda203, 
       g_xmda_m.xmda203_desc,g_xmda_m.xmda024,g_xmda_m.xmda024_desc,g_xmda_m.xmda048,g_xmda_m.xmda052, 
       g_xmda_m.xmda049,g_xmda_m.xmda044,g_xmda_m.xmda044_desc,g_xmda_m.xmda030,g_xmda_m.xmda031,g_xmda_m.xmda045, 
       g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028,g_xmda_m.xmda043,g_xmda_m.xmda025,g_xmda_m.xmda025_desc, 
       g_xmda_m.oofb0171,g_xmda_m.xmda026,g_xmda_m.xmda026_desc,g_xmda_m.oofb0172,g_xmda_m.xmda020,g_xmda_m.xmda020_desc, 
       g_xmda_m.xmda037,g_xmda_m.xmda037_desc,g_xmda_m.xmda038,g_xmda_m.xmda038_desc,g_xmda_m.xmda036, 
       g_xmda_m.xmda036_desc,g_xmda_m.xmda039,g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdaownid,g_xmda_m.xmdaownid_desc, 
       g_xmda_m.xmdaowndp,g_xmda_m.xmdaowndp_desc,g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtid_desc,g_xmda_m.xmdacrtdp, 
       g_xmda_m.xmdacrtdp_desc,g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid,g_xmda_m.xmdamodid_desc,g_xmda_m.xmdamoddt, 
       g_xmda_m.xmdacnfid,g_xmda_m.xmdacnfid_desc,g_xmda_m.xmdacnfdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_xmda_m.xmdastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "H"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/hold.png")
         WHEN "UH"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unhold.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_xmdc_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_xmdc2_d.getLength()
      #add-point:show段單身reference name="show.body2.reference"
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_xmdc3_d.getLength()
      #add-point:show段單身reference name="show.body3.reference"
      {<point name="show.body3.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_xmdc4_d.getLength()
      #add-point:show段單身reference name="show.body4.reference"
      {<point name="show.body4.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_xmdc5_d.getLength()
      #add-point:show段單身reference name="show.body5.reference"
      {<point name="show.body5.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_xmdc6_d.getLength()
      #add-point:show段單身reference name="show.body6.reference"
      {<point name="show.body6.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other name="show.other"
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL axmt500_detail_show()
 
   #add-point:show段之後 name="show.after"
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION

{</section>}

{<section id="axmt500.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION axmt500_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   {<point name="detail_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   {<point name="detail_show.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION

{</section>}

{<section id="axmt500.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION axmt500_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   {<point name="reproduce.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE l_newno     LIKE xmda_t.xmdadocno 
   DEFINE l_oldno     LIKE xmda_t.xmdadocno 
 
   DEFINE l_master    RECORD LIKE xmda_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE xmdc_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE xmdd_t.* #此變數樣板目前無使用
 
   DEFINE l_detail3    RECORD LIKE xmdq_t.* #此變數樣板目前無使用
 
   DEFINE l_detail4    RECORD LIKE xmdb_t.* #此變數樣板目前無使用
 
   DEFINE l_detail5    RECORD LIKE xmds_t.* #此變數樣板目前無使用
 
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   {<point name="reproduce.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   {<point name="reproduce.pre_function"/>}
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_xmda_m.xmdadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_xmdadocno_t = g_xmda_m.xmdadocno
 
    
   LET g_xmda_m.xmdadocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_xmda_m.xmdaownid = g_user
      LET g_xmda_m.xmdaowndp = g_dept
      LET g_xmda_m.xmdacrtid = g_user
      LET g_xmda_m.xmdacrtdp = g_dept 
      LET g_xmda_m.xmdacrtdt = cl_get_current()
      LET g_xmda_m.xmdamodid = g_user
      LET g_xmda_m.xmdamoddt = cl_get_current()
      LET g_xmda_m.xmdastus = 'N'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_xmda_m.xmdastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "H"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/hold.png")
         WHEN "UH"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unhold.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
      LET g_xmda_m.xmdadocno_desc = ''
   DISPLAY BY NAME g_xmda_m.xmdadocno_desc
 
   
   CALL axmt500_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_xmda_m.* TO NULL
      INITIALIZE g_xmdc_d TO NULL
      INITIALIZE g_xmdc2_d TO NULL
      INITIALIZE g_xmdc3_d TO NULL
      INITIALIZE g_xmdc4_d TO NULL
      INITIALIZE g_xmdc5_d TO NULL
      INITIALIZE g_xmdc6_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL axmt500_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code = 9001 
      LET g_errparam.popup = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt500_set_act_visible()   
   CALL axmt500_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_xmdadocno_t = g_xmda_m.xmdadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " xmdaent = " ||g_enterprise|| " AND",
                      " xmdadocno = '", g_xmda_m.xmdadocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axmt500_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL axmt500_idx_chk()
   
   LET g_data_owner = g_xmda_m.xmdaownid      
   LET g_data_dept  = g_xmda_m.xmdaowndp
   
   #功能已完成,通報訊息中心
   CALL axmt500_msgcentre_notify('reproduce')
 
END FUNCTION

{</section>}

{<section id="axmt500.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION axmt500_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   {<point name="detail_reproduce.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE xmdc_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE xmdd_t.* #此變數樣板目前無使用
 
   DEFINE l_detail3    RECORD LIKE xmdq_t.* #此變數樣板目前無使用
 
   DEFINE l_detail4    RECORD LIKE xmdb_t.* #此變數樣板目前無使用
 
   DEFINE l_detail5    RECORD LIKE xmds_t.* #此變數樣板目前無使用
 
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   {<point name="detail_reproduce.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   {<point name="detail_reproduce.pre_function"/>}
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE axmt500_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xmdc_t
    WHERE xmdcent = g_enterprise AND xmdcdocno = g_xmdadocno_t
 
    INTO TEMP axmt500_detail
 
   #將key修正為調整後   
   UPDATE axmt500_detail 
      #更新key欄位
      SET xmdcdocno = g_xmda_m.xmdadocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO xmdc_t SELECT * FROM axmt500_detail
   
   IF SQLCA.SQLCODE THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmt500_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table2.b_insert"
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xmdd_t 
    WHERE xmddent = g_enterprise AND xmdddocno = g_xmdadocno_t
 
    INTO TEMP axmt500_detail
 
   #將key修正為調整後   
   UPDATE axmt500_detail SET xmdddocno = g_xmda_m.xmdadocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table2.b_update"
   {<point name="detail_reproduce.body.table2.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO xmdd_t SELECT * FROM axmt500_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table2.m_insert"
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmt500_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table2.a_insert"
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table3.b_insert"
   {<point name="detail_reproduce.body.table3.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xmdq_t 
    WHERE xmdqent = g_enterprise AND xmdqdocno = g_xmdadocno_t
 
    INTO TEMP axmt500_detail
 
   #將key修正為調整後   
   UPDATE axmt500_detail SET xmdqdocno = g_xmda_m.xmdadocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table3.b_update"
   {<point name="detail_reproduce.body.table3.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO xmdq_t SELECT * FROM axmt500_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table3.m_insert"
   {<point name="detail_reproduce.body.table3.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmt500_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table3.a_insert"
   {<point name="detail_reproduce.body.table3.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table4.b_insert"
   {<point name="detail_reproduce.body.table4.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xmdb_t 
    WHERE xmdbent = g_enterprise AND xmdbdocno = g_xmdadocno_t
 
    INTO TEMP axmt500_detail
 
   #將key修正為調整後   
   UPDATE axmt500_detail SET xmdbdocno = g_xmda_m.xmdadocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table4.b_update"
   {<point name="detail_reproduce.body.table4.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO xmdb_t SELECT * FROM axmt500_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table4.m_insert"
   {<point name="detail_reproduce.body.table4.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmt500_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table4.a_insert"
   {<point name="detail_reproduce.body.table4.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table5.b_insert"
   {<point name="detail_reproduce.body.table5.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xmds_t 
    WHERE xmdsent = g_enterprise AND xmdsdocno = g_xmdadocno_t
 
    INTO TEMP axmt500_detail
 
   #將key修正為調整後   
   UPDATE axmt500_detail SET xmdsdocno = g_xmda_m.xmdadocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table5.b_update"
   {<point name="detail_reproduce.body.table5.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO xmds_t SELECT * FROM axmt500_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table5.m_insert"
   {<point name="detail_reproduce.body.table5.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmt500_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table5.a_insert"
   {<point name="detail_reproduce.body.table5.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_xmdadocno_t = g_xmda_m.xmdadocno
 
   
END FUNCTION

{</section>}

{<section id="axmt500.delete" >}
#+ 資料刪除
PRIVATE FUNCTION axmt500_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   {<point name="delete.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   {<point name="delete.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   {<point name="delete.pre_function"/>}
   #end add-point
   
   IF g_xmda_m.xmdadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN axmt500_cl USING g_enterprise,g_xmda_m.xmdadocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axmt500_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE axmt500_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axmt500_master_referesh USING g_xmda_m.xmdadocno INTO g_xmda_m.xmdadocno,g_xmda_m.xmda001, 
       g_xmda_m.xmdadocdt,g_xmda_m.xmda004,g_xmda_m.xmda002,g_xmda_m.xmda003,g_xmda_m.xmdasite,g_xmda_m.xmdastus, 
       g_xmda_m.xmda005,g_xmda_m.xmda006,g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda033,g_xmda_m.xmda027, 
       g_xmda_m.xmda009,g_xmda_m.xmda010,g_xmda_m.xmda011,g_xmda_m.xmda012,g_xmda_m.xmda013,g_xmda_m.xmda035, 
       g_xmda_m.xmda015,g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda018,g_xmda_m.xmda019,g_xmda_m.xmda023, 
       g_xmda_m.xmda032,g_xmda_m.xmda071,g_xmda_m.xmda050,g_xmda_m.xmda021,g_xmda_m.xmda022,g_xmda_m.xmda034, 
       g_xmda_m.xmda203,g_xmda_m.xmda024,g_xmda_m.xmda048,g_xmda_m.xmda052,g_xmda_m.xmda049,g_xmda_m.xmda044, 
       g_xmda_m.xmda030,g_xmda_m.xmda031,g_xmda_m.xmda045,g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028, 
       g_xmda_m.xmda043,g_xmda_m.xmda025,g_xmda_m.xmda026,g_xmda_m.xmda020,g_xmda_m.xmda037,g_xmda_m.xmda038, 
       g_xmda_m.xmda036,g_xmda_m.xmda039,g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdaownid,g_xmda_m.xmdaowndp, 
       g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid,g_xmda_m.xmdamoddt, 
       g_xmda_m.xmdacnfid,g_xmda_m.xmdacnfdt,g_xmda_m.xmda004_desc,g_xmda_m.xmda002_desc,g_xmda_m.xmda003_desc, 
       g_xmda_m.xmda009_desc,g_xmda_m.xmda010_desc,g_xmda_m.xmda015_desc,g_xmda_m.xmda017_desc,g_xmda_m.xmda018_desc, 
       g_xmda_m.xmda023_desc,g_xmda_m.xmda032_desc,g_xmda_m.xmda050_desc,g_xmda_m.xmda021_desc,g_xmda_m.xmda022_desc, 
       g_xmda_m.xmda034_desc,g_xmda_m.xmda203_desc,g_xmda_m.xmda024_desc,g_xmda_m.xmda044_desc,g_xmda_m.xmda025_desc, 
       g_xmda_m.xmda026_desc,g_xmda_m.xmda020_desc,g_xmda_m.xmda036_desc,g_xmda_m.xmdaownid_desc,g_xmda_m.xmdaowndp_desc, 
       g_xmda_m.xmdacrtid_desc,g_xmda_m.xmdacrtdp_desc,g_xmda_m.xmdamodid_desc,g_xmda_m.xmdacnfid_desc 

   
   
   #檢查是否允許此動作
   IF NOT axmt500_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_xmda_m_mask_o.* =  g_xmda_m.*
   CALL axmt500_xmda_t_mask()
   LET g_xmda_m_mask_n.* =  g_xmda_m.*
   
   CALL axmt500_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL axmt500_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_xmdadocno_t = g_xmda_m.xmdadocno
 
 
      DELETE FROM xmda_t
       WHERE xmdaent = g_enterprise AND xmdadocno = g_xmda_m.xmdadocno
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_xmda_m.xmdadocno,":",SQLERRMESSAGE  
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM xmdc_t
       WHERE xmdcent = g_enterprise AND xmdcdocno = g_xmda_m.xmdadocno
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdc_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前 name="delete.body.b_delete2"
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM xmdd_t
       WHERE xmddent = g_enterprise AND
             xmdddocno = g_xmda_m.xmdadocno
      #add-point:單身刪除中 name="delete.body.m_delete2"
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdc_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete2"
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete3"
      {<point name="delete.body.b_delete3" mark="Y"/>}
      #end add-point
      DELETE FROM xmdq_t
       WHERE xmdqent = g_enterprise AND
             xmdqdocno = g_xmda_m.xmdadocno
      #add-point:單身刪除中 name="delete.body.m_delete3"
      {<point name="delete.body.m_delete3"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdd_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete3"
      {<point name="delete.body.a_delete3"/>}
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete4"
      {<point name="delete.body.b_delete4" mark="Y"/>}
      #end add-point
      DELETE FROM xmdb_t
       WHERE xmdbent = g_enterprise AND
             xmdbdocno = g_xmda_m.xmdadocno
      #add-point:單身刪除中 name="delete.body.m_delete4"
      {<point name="delete.body.m_delete4"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdq_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete4"
      {<point name="delete.body.a_delete4"/>}
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete5"
      {<point name="delete.body.b_delete5" mark="Y"/>}
      #end add-point
      DELETE FROM xmds_t
       WHERE xmdsent = g_enterprise AND
             xmdsdocno = g_xmda_m.xmdadocno
      #add-point:單身刪除中 name="delete.body.m_delete5"
      {<point name="delete.body.m_delete5"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdb_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete5"
      {<point name="delete.body.a_delete5"/>}
      #end add-point
 
 
 
 
      
      #修改歷程記錄(刪除)
      LET g_log1 = util.JSON.stringify(g_xmda_m)   #(ver:78)
      IF NOT cl_log_modified_record(g_log1,'') THEN    #(ver:78)
         CLOSE axmt500_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_xmdc_d.clear() 
      CALL g_xmdc2_d.clear()       
      CALL g_xmdc3_d.clear()       
      CALL g_xmdc4_d.clear()       
      CALL g_xmdc5_d.clear()       
      CALL g_xmdc6_d.clear()       
 
     
      CALL axmt500_ui_browser_refresh()  
      #CALL axmt500_ui_headershow()  
      #CALL axmt500_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
      
      
      
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      {<point name="delete.lang.delete"/>}
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL axmt500_browser_fill("")
         CALL axmt500_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE axmt500_cl
 
   #功能已完成,通報訊息中心
   CALL axmt500_msgcentre_notify('delete')
    
END FUNCTION

{</section>}

{<section id="axmt500.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION axmt500_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   {<point name="b_fill.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   {<point name="b_fill.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   {<point name="b_fill.pre_function"/>}
   #end add-point
   
   #清空第一階單身
   CALL g_xmdc_d.clear()
   CALL g_xmdc2_d.clear()
   CALL g_xmdc3_d.clear()
   CALL g_xmdc4_d.clear()
   CALL g_xmdc5_d.clear()
   CALL g_xmdc6_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF axmt500_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      {<point name="b_fill.long_sql_if"/>}
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT xmdcseq,xmdc027,xmdc001,xmdc062,xmdc019,xmdc002,xmdc006,xmdc007, 
             xmdc008,xmdc009,xmdc024,xmdc012,xmdc013,xmdc045,xmdc016,xmdc017,xmdc010,xmdc011,xmdc015, 
             xmdc046,xmdc047,xmdc048,xmdc023,xmdc020,xmdc021,xmdc022,xmdcunit,xmdcorga,xmdc052,xmdc049, 
             xmdc053,xmdc050,xmdcsite,xmdc058,xmdc059,xmdc060,xmdc061,xmdcseq,xmdc028,xmdc029,xmdc030, 
             xmdc057,xmdc025,xmdc026,xmdc031,xmdc032,xmdc033,xmdc003,xmdc054,xmdc036,xmdc037,xmdc038, 
             xmdc039,xmdc035,xmdc040,xmdc041,xmdc042,xmdc043,xmdc044,xmdc055,xmdc056 ,t1.imaal003 ,t2.imaal004 , 
             t3.oocal003 ,t4.oocal003 ,t5.oocal003 ,t6.ooefl003 ,t7.ooefl003 ,t8.oocql004 ,t9.oocql004 , 
             t10.inayl003 ,t11.inab003 ,t12.oocql004 ,t13.imaal003 ,t14.pjabl003 ,t15.pjbbl004 ,t16.pjbml004 FROM xmdc_t", 
                
                     " INNER JOIN xmda_t ON xmdaent = " ||g_enterprise|| " AND xmdadocno = xmdcdocno ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
 
                                    " LEFT JOIN imaal_t t1 ON t1.imaalent="||g_enterprise||" AND t1.imaal001=xmdc001 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t2 ON t2.imaalent="||g_enterprise||" AND t2.imaal001=xmdc001 AND t2.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t3 ON t3.oocalent="||g_enterprise||" AND t3.oocal001=xmdc006 AND t3.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t4 ON t4.oocalent="||g_enterprise||" AND t4.oocal001=xmdc008 AND t4.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t5 ON t5.oocalent="||g_enterprise||" AND t5.oocal001=xmdc010 AND t5.oocal002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent="||g_enterprise||" AND t6.ooefl001=xmdcunit AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent="||g_enterprise||" AND t7.ooefl001=xmdcorga AND t7.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t8 ON t8.oocqlent="||g_enterprise||" AND t8.oocql001='265' AND t8.oocql002=xmdc049 AND t8.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t9 ON t9.oocqlent="||g_enterprise||" AND t9.oocql001='284' AND t9.oocql002=xmdc053 AND t9.oocql003='"||g_dlang||"' ",
               " LEFT JOIN inayl_t t10 ON t10.inaylent="||g_enterprise||" AND t10.inayl001=xmdc028 AND t10.inayl002='"||g_dlang||"' ",
               " LEFT JOIN inab_t t11 ON t11.inabent="||g_enterprise||" AND t11.inabsite=xmdcsite AND t11.inab001=xmdc028 AND t11.inab002=xmdc029  ",
               " LEFT JOIN oocql_t t12 ON t12.oocqlent="||g_enterprise||" AND t12.oocql001='263' AND t12.oocql002=xmdc031 AND t12.oocql003='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t13 ON t13.imaalent="||g_enterprise||" AND t13.imaal001=xmdc003 AND t13.imaal002='"||g_dlang||"' ",
               " LEFT JOIN pjabl_t t14 ON t14.pjablent="||g_enterprise||" AND t14.pjabl001=xmdc036 AND t14.pjabl002='"||g_dlang||"' ",
               " LEFT JOIN pjbbl_t t15 ON t15.pjbblent="||g_enterprise||" AND t15.pjbbl001=xmdc037 AND t15.pjbbl003='"||g_dlang||"' ",
               " LEFT JOIN pjbml_t t16 ON t16.pjbmlent="||g_enterprise||" AND t16.pjbml002=xmdc038 AND t16.pjbml003='"||g_dlang||"' ",
 
                     " WHERE xmdcent=? AND xmdcdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xmdc_t.xmdcseq"
         
         #add-point:單身填充控制 name="b_fill.sql"
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axmt500_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR axmt500_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
   #  OPEN b_fill_cs USING g_enterprise,g_xmda_m.xmdadocno   #(ver:78)
                                               
      FOREACH b_fill_cs USING g_enterprise,g_xmda_m.xmdadocno INTO g_xmdc_d[l_ac].xmdcseq,g_xmdc_d[l_ac].xmdc027, 
          g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc062,g_xmdc_d[l_ac].xmdc019,g_xmdc_d[l_ac].xmdc002, 
          g_xmdc_d[l_ac].xmdc006,g_xmdc_d[l_ac].xmdc007,g_xmdc_d[l_ac].xmdc008,g_xmdc_d[l_ac].xmdc009, 
          g_xmdc_d[l_ac].xmdc024,g_xmdc_d[l_ac].xmdc012,g_xmdc_d[l_ac].xmdc013,g_xmdc_d[l_ac].xmdc045, 
          g_xmdc_d[l_ac].xmdc016,g_xmdc_d[l_ac].xmdc017,g_xmdc_d[l_ac].xmdc010,g_xmdc_d[l_ac].xmdc011, 
          g_xmdc_d[l_ac].xmdc015,g_xmdc_d[l_ac].xmdc046,g_xmdc_d[l_ac].xmdc047,g_xmdc_d[l_ac].xmdc048, 
          g_xmdc_d[l_ac].xmdc023,g_xmdc_d[l_ac].xmdc020,g_xmdc_d[l_ac].xmdc021,g_xmdc_d[l_ac].xmdc022, 
          g_xmdc_d[l_ac].xmdcunit,g_xmdc_d[l_ac].xmdcorga,g_xmdc_d[l_ac].xmdc052,g_xmdc_d[l_ac].xmdc049, 
          g_xmdc_d[l_ac].xmdc053,g_xmdc_d[l_ac].xmdc050,g_xmdc_d[l_ac].xmdcsite,g_xmdc_d[l_ac].xmdc058, 
          g_xmdc_d[l_ac].xmdc059,g_xmdc_d[l_ac].xmdc060,g_xmdc_d[l_ac].xmdc061,g_xmdc2_d[l_ac].xmdcseq, 
          g_xmdc2_d[l_ac].xmdc028,g_xmdc2_d[l_ac].xmdc029,g_xmdc2_d[l_ac].xmdc030,g_xmdc2_d[l_ac].xmdc057, 
          g_xmdc2_d[l_ac].xmdc025,g_xmdc2_d[l_ac].xmdc026,g_xmdc2_d[l_ac].xmdc031,g_xmdc2_d[l_ac].xmdc032, 
          g_xmdc2_d[l_ac].xmdc033,g_xmdc2_d[l_ac].xmdc003,g_xmdc2_d[l_ac].xmdc054,g_xmdc2_d[l_ac].xmdc036, 
          g_xmdc2_d[l_ac].xmdc037,g_xmdc2_d[l_ac].xmdc038,g_xmdc2_d[l_ac].xmdc039,g_xmdc2_d[l_ac].xmdc035, 
          g_xmdc2_d[l_ac].xmdc040,g_xmdc2_d[l_ac].xmdc041,g_xmdc2_d[l_ac].xmdc042,g_xmdc2_d[l_ac].xmdc043, 
          g_xmdc2_d[l_ac].xmdc044,g_xmdc2_d[l_ac].xmdc055,g_xmdc2_d[l_ac].xmdc056,g_xmdc_d[l_ac].xmdc001_desc, 
          g_xmdc_d[l_ac].xmdc001_desc_desc,g_xmdc_d[l_ac].xmdc006_desc,g_xmdc_d[l_ac].xmdc008_desc,g_xmdc_d[l_ac].xmdc010_desc, 
          g_xmdc_d[l_ac].xmdcunit_desc,g_xmdc_d[l_ac].xmdcorga_desc,g_xmdc_d[l_ac].xmdc049_desc,g_xmdc_d[l_ac].xmdc053_desc, 
          g_xmdc2_d[l_ac].xmdc028_desc,g_xmdc2_d[l_ac].xmdc029_desc,g_xmdc2_d[l_ac].xmdc031_desc,g_xmdc2_d[l_ac].xmdc003_desc, 
          g_xmdc2_d[l_ac].xmdc036_desc,g_xmdc2_d[l_ac].xmdc037_desc,g_xmdc2_d[l_ac].xmdc038_desc   #(ver:78) 

         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code = 9035 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
   #判斷是否填充
   IF axmt500_fill_chk(2) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body2.long_sql_if"
         {<point name="b_fill.body2.long_sql_if"/>}
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT xmddseq,xmddseq1,xmdd003,xmdd001,xmdd040,xmdd002,xmdd004,xmdd005, 
             xmddseq2,xmdd006,xmdd024,xmdd025,xmdd011,xmdd012,xmdd010,xmdd013,xmdd009,xmdd031,xmdd014, 
             xmdd015,xmdd016,xmdd017,xmdd026,xmdd027,xmdd018,xmdd019,xmdd020,xmdd028,xmdd029,xmdd030, 
             xmdd021,xmdd022,xmdd023,xmddsite,xmdd036,xmdd037,xmdd038,xmdd039 ,t17.imaal003 ,t18.imaal004 , 
             t19.oocal003 ,t20.oocal003 ,t21.oocql004 ,t22.oocal003 ,t23.ooag011 FROM xmdd_t",   
                     " INNER JOIN  xmda_t ON xmdaent = " ||g_enterprise|| " AND xmdadocno = xmdddocno ",
 
                     "",
                     
                                    " LEFT JOIN imaal_t t17 ON t17.imaalent="||g_enterprise||" AND t17.imaal001=xmdd001 AND t17.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t18 ON t18.imaalent="||g_enterprise||" AND t18.imaal001=xmdd001 AND t18.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t19 ON t19.oocalent="||g_enterprise||" AND t19.oocal001=xmdd004 AND t19.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t20 ON t20.oocalent="||g_enterprise||" AND t20.oocal001=xmdd024 AND t20.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t21 ON t21.oocqlent="||g_enterprise||" AND t21.oocql001='274' AND t21.oocql002=xmdd010 AND t21.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t22 ON t22.oocalent="||g_enterprise||" AND t22.oocal001=xmdd026 AND t22.oocal002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t23 ON t23.ooagent="||g_enterprise||" AND t23.ooag001=xmdd022  ",
 
                     " WHERE xmddent=? AND xmdddocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body2.fill_sql"
         {<point name="b_fill.body2.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xmdd_t.xmddseq,xmdd_t.xmddseq1,xmdd_t.xmddseq2"
         
         #add-point:單身填充控制 name="b_fill.sql2"
         {<point name="b_fill.sql2"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axmt500_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR axmt500_pb2
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs2 USING g_enterprise,g_xmda_m.xmdadocno   #(ver:78)
                                               
      FOREACH b_fill_cs2 USING g_enterprise,g_xmda_m.xmdadocno INTO g_xmdc3_d[l_ac].xmddseq,g_xmdc3_d[l_ac].xmddseq1, 
          g_xmdc3_d[l_ac].xmdd003,g_xmdc3_d[l_ac].xmdd001,g_xmdc3_d[l_ac].xmdd040,g_xmdc3_d[l_ac].xmdd002, 
          g_xmdc3_d[l_ac].xmdd004,g_xmdc3_d[l_ac].xmdd005,g_xmdc3_d[l_ac].xmddseq2,g_xmdc3_d[l_ac].xmdd006, 
          g_xmdc3_d[l_ac].xmdd024,g_xmdc3_d[l_ac].xmdd025,g_xmdc3_d[l_ac].xmdd011,g_xmdc3_d[l_ac].xmdd012, 
          g_xmdc3_d[l_ac].xmdd010,g_xmdc3_d[l_ac].xmdd013,g_xmdc3_d[l_ac].xmdd009,g_xmdc3_d[l_ac].xmdd031, 
          g_xmdc3_d[l_ac].xmdd014,g_xmdc3_d[l_ac].xmdd015,g_xmdc3_d[l_ac].xmdd016,g_xmdc3_d[l_ac].xmdd017, 
          g_xmdc3_d[l_ac].xmdd026,g_xmdc3_d[l_ac].xmdd027,g_xmdc3_d[l_ac].xmdd018,g_xmdc3_d[l_ac].xmdd019, 
          g_xmdc3_d[l_ac].xmdd020,g_xmdc3_d[l_ac].xmdd028,g_xmdc3_d[l_ac].xmdd029,g_xmdc3_d[l_ac].xmdd030, 
          g_xmdc3_d[l_ac].xmdd021,g_xmdc3_d[l_ac].xmdd022,g_xmdc3_d[l_ac].xmdd023,g_xmdc3_d[l_ac].xmddsite, 
          g_xmdc3_d[l_ac].xmdd036,g_xmdc3_d[l_ac].xmdd037,g_xmdc3_d[l_ac].xmdd038,g_xmdc3_d[l_ac].xmdd039, 
          g_xmdc3_d[l_ac].xmdd001_desc,g_xmdc3_d[l_ac].xmdd001_desc_desc,g_xmdc3_d[l_ac].xmdd004_desc, 
          g_xmdc3_d[l_ac].xmdd024_desc,g_xmdc3_d[l_ac].xmdd010_desc,g_xmdc3_d[l_ac].xmdd026_desc,g_xmdc3_d[l_ac].xmdd022_desc  
            #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill2.fill"
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF axmt500_fill_chk(3) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body3.long_sql_if"
         {<point name="b_fill.body3.long_sql_if"/>}
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT xmdqdocno,xmdqseq,xmdqseq1,xmdq001,xmdq006,xmdq007,xmdq008,xmdq009, 
             xmdq002,xmdq004,xmdq005,xmdqsite ,t24.imaal003 ,t25.imaal004 ,t26.oocal003 ,t27.imaal003 , 
             t28.imaal004 FROM xmdq_t",   
                     " INNER JOIN  xmda_t ON xmdaent = " ||g_enterprise|| " AND xmdadocno = xmdqdocno ",
 
                     "",
                     
                                    " LEFT JOIN imaal_t t24 ON t24.imaalent="||g_enterprise||" AND t24.imaal001=xmdq001 AND t24.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t25 ON t25.imaalent="||g_enterprise||" AND t25.imaal001=xmdq001 AND t25.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t26 ON t26.oocalent="||g_enterprise||" AND t26.oocal001=xmdq008 AND t26.oocal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t27 ON t27.imaalent="||g_enterprise||" AND t27.imaal001=xmdq002 AND t27.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t28 ON t28.imaalent="||g_enterprise||" AND t28.imaal001=xmdq002 AND t28.imaal002='"||g_dlang||"' ",
 
                     " WHERE xmdqent=? AND xmdqdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body3.fill_sql"
         {<point name="b_fill.body3.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table3) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xmdq_t.xmdqseq,xmdq_t.xmdqseq1"
         
         #add-point:單身填充控制 name="b_fill.sql3"
         {<point name="b_fill.sql3"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axmt500_pb3 FROM g_sql
         DECLARE b_fill_cs3 CURSOR FOR axmt500_pb3
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs3 USING g_enterprise,g_xmda_m.xmdadocno   #(ver:78)
                                               
      FOREACH b_fill_cs3 USING g_enterprise,g_xmda_m.xmdadocno INTO g_xmdc4_d[l_ac].xmdqdocno,g_xmdc4_d[l_ac].xmdqseq, 
          g_xmdc4_d[l_ac].xmdqseq1,g_xmdc4_d[l_ac].xmdq001,g_xmdc4_d[l_ac].xmdq006,g_xmdc4_d[l_ac].xmdq007, 
          g_xmdc4_d[l_ac].xmdq008,g_xmdc4_d[l_ac].xmdq009,g_xmdc4_d[l_ac].xmdq002,g_xmdc4_d[l_ac].xmdq004, 
          g_xmdc4_d[l_ac].xmdq005,g_xmdc4_d[l_ac].xmdqsite,g_xmdc4_d[l_ac].xmdq001_desc,g_xmdc4_d[l_ac].xmdq001_desc_desc, 
          g_xmdc4_d[l_ac].xmdq008_desc,g_xmdc4_d[l_ac].xmdq002_desc,g_xmdc4_d[l_ac].xmdq002_desc_desc  
            #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill3.fill"
         {<point name="b_fill3.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF axmt500_fill_chk(4) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body4.long_sql_if"
         {<point name="b_fill.body4.long_sql_if"/>}
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT xmdb001,xmdb002,xmdb003,xmdb004,xmdb005,xmdb006,xmdb016,xmdb017, 
             xmdb007,xmdb008,xmdb009,xmdbsite ,t29.ooibl004 FROM xmdb_t",   
                     " INNER JOIN  xmda_t ON xmdaent = " ||g_enterprise|| " AND xmdadocno = xmdbdocno ",
 
                     "",
                     
                                    " LEFT JOIN ooibl_t t29 ON t29.ooiblent="||g_enterprise||" AND t29.ooibl002=xmdb002 AND t29.ooibl003='"||g_dlang||"' ",
 
                     " WHERE xmdbent=? AND xmdbdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body4.fill_sql"
         {<point name="b_fill.body4.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table4) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table4 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xmdb_t.xmdb001"
         
         #add-point:單身填充控制 name="b_fill.sql4"
         {<point name="b_fill.sql4"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axmt500_pb4 FROM g_sql
         DECLARE b_fill_cs4 CURSOR FOR axmt500_pb4
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs4 USING g_enterprise,g_xmda_m.xmdadocno   #(ver:78)
                                               
      FOREACH b_fill_cs4 USING g_enterprise,g_xmda_m.xmdadocno INTO g_xmdc5_d[l_ac].xmdb001,g_xmdc5_d[l_ac].xmdb002, 
          g_xmdc5_d[l_ac].xmdb003,g_xmdc5_d[l_ac].xmdb004,g_xmdc5_d[l_ac].xmdb005,g_xmdc5_d[l_ac].xmdb006, 
          g_xmdc5_d[l_ac].xmdb016,g_xmdc5_d[l_ac].xmdb017,g_xmdc5_d[l_ac].xmdb007,g_xmdc5_d[l_ac].xmdb008, 
          g_xmdc5_d[l_ac].xmdb009,g_xmdc5_d[l_ac].xmdbsite,g_xmdc5_d[l_ac].xmdb002_desc   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill4.fill"
         {<point name="b_fill4.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF axmt500_fill_chk(5) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body5.long_sql_if"
         {<point name="b_fill.body5.long_sql_if"/>}
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT xmdsseq,xmds001,xmds002,xmds003,xmds004,xmds005,xmds006,xmdssite , 
             t30.imaal003 ,t31.imaal004 ,t32.ooail003 ,t33.pmaal004 FROM xmds_t",   
                     " INNER JOIN  xmda_t ON xmdaent = " ||g_enterprise|| " AND xmdadocno = xmdsdocno ",
 
                     "",
                     
                                    " LEFT JOIN imaal_t t30 ON t30.imaalent="||g_enterprise||" AND t30.imaal001=xmds001 AND t30.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t31 ON t31.imaalent="||g_enterprise||" AND t31.imaal001=xmds001 AND t31.imaal002='"||g_dlang||"' ",
               " LEFT JOIN ooail_t t32 ON t32.ooailent="||g_enterprise||" AND t32.ooail001=xmds002 AND t32.ooail002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t33 ON t33.pmaalent="||g_enterprise||" AND t33.pmaal001=xmds005 AND t33.pmaal002='"||g_dlang||"' ",
 
                     " WHERE xmdsent=? AND xmdsdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body5.fill_sql"
         {<point name="b_fill.body5.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table5) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table5 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xmds_t.xmdsseq"
         
         #add-point:單身填充控制 name="b_fill.sql5"
         {<point name="b_fill.sql5"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axmt500_pb5 FROM g_sql
         DECLARE b_fill_cs5 CURSOR FOR axmt500_pb5
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs5 USING g_enterprise,g_xmda_m.xmdadocno   #(ver:78)
                                               
      FOREACH b_fill_cs5 USING g_enterprise,g_xmda_m.xmdadocno INTO g_xmdc6_d[l_ac].xmdsseq,g_xmdc6_d[l_ac].xmds001, 
          g_xmdc6_d[l_ac].xmds002,g_xmdc6_d[l_ac].xmds003,g_xmdc6_d[l_ac].xmds004,g_xmdc6_d[l_ac].xmds005, 
          g_xmdc6_d[l_ac].xmds006,g_xmdc6_d[l_ac].xmdssite,g_xmdc6_d[l_ac].xmds001_desc,g_xmdc6_d[l_ac].xmds001_desc_desc, 
          g_xmdc6_d[l_ac].xmds002_desc,g_xmdc6_d[l_ac].xmds005_desc   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill5.fill"
         {<point name="b_fill5.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_xmdc_d.deleteElement(g_xmdc_d.getLength())
   CALL g_xmdc2_d.deleteElement(g_xmdc2_d.getLength())
   CALL g_xmdc3_d.deleteElement(g_xmdc3_d.getLength())
   CALL g_xmdc4_d.deleteElement(g_xmdc4_d.getLength())
   CALL g_xmdc5_d.deleteElement(g_xmdc5_d.getLength())
   CALL g_xmdc6_d.deleteElement(g_xmdc6_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE axmt500_pb
   FREE axmt500_pb2
 
   FREE axmt500_pb3
 
   FREE axmt500_pb4
 
   FREE axmt500_pb5
 
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_xmdc_d.getLength()
      LET g_xmdc_d_mask_o[l_ac].* =  g_xmdc_d[l_ac].*
      CALL axmt500_xmdc_t_mask()
      LET g_xmdc_d_mask_n[l_ac].* =  g_xmdc_d[l_ac].*
   END FOR
   
   LET g_xmdc2_d_mask_o.* =  g_xmdc2_d.*
   FOR l_ac = 1 TO g_xmdc2_d.getLength()
      LET g_xmdc2_d_mask_o[l_ac].* =  g_xmdc2_d[l_ac].*
      CALL axmt500_xmdc_t_mask()
      LET g_xmdc2_d_mask_n[l_ac].* =  g_xmdc2_d[l_ac].*
   END FOR
   LET g_xmdc3_d_mask_o.* =  g_xmdc3_d.*
   FOR l_ac = 1 TO g_xmdc3_d.getLength()
      LET g_xmdc3_d_mask_o[l_ac].* =  g_xmdc3_d[l_ac].*
      CALL axmt500_xmdd_t_mask()
      LET g_xmdc3_d_mask_n[l_ac].* =  g_xmdc3_d[l_ac].*
   END FOR
   LET g_xmdc4_d_mask_o.* =  g_xmdc4_d.*
   FOR l_ac = 1 TO g_xmdc4_d.getLength()
      LET g_xmdc4_d_mask_o[l_ac].* =  g_xmdc4_d[l_ac].*
      CALL axmt500_xmdq_t_mask()
      LET g_xmdc4_d_mask_n[l_ac].* =  g_xmdc4_d[l_ac].*
   END FOR
   LET g_xmdc5_d_mask_o.* =  g_xmdc5_d.*
   FOR l_ac = 1 TO g_xmdc5_d.getLength()
      LET g_xmdc5_d_mask_o[l_ac].* =  g_xmdc5_d[l_ac].*
      CALL axmt500_xmdb_t_mask()
      LET g_xmdc5_d_mask_n[l_ac].* =  g_xmdc5_d[l_ac].*
   END FOR
   LET g_xmdc6_d_mask_o.* =  g_xmdc6_d.*
   FOR l_ac = 1 TO g_xmdc6_d.getLength()
      LET g_xmdc6_d_mask_o[l_ac].* =  g_xmdc6_d[l_ac].*
      CALL axmt500_xmds_t_mask()
      LET g_xmdc6_d_mask_n[l_ac].* =  g_xmdc6_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION

{</section>}

{<section id="axmt500.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION axmt500_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   {<point name="delete_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   {<point name="delete_b.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   {<point name="delete_b.pre_function"/>}
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM xmdc_t
       WHERE xmdcent = g_enterprise AND
         xmdcdocno = ps_keys_bak[1] AND xmdcseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_xmdc_d.deleteElement(li_idx) 
      END IF 
      IF ps_page <> "'2'" THEN 
         CALL g_xmdc2_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete2"
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM xmdd_t
       WHERE xmddent = g_enterprise AND
             xmdddocno = ps_keys_bak[1] AND xmddseq = ps_keys_bak[2] AND xmddseq1 = ps_keys_bak[3] AND xmddseq2 = ps_keys_bak[4]
      #add-point:delete_b段刪除中 name="delete_b.m_delete2"
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdd_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_xmdc3_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete2"
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete3"
      {<point name="delete_b.b_delete3" mark="Y"/>}
      #end add-point    
      DELETE FROM xmdq_t
       WHERE xmdqent = g_enterprise AND
             xmdqdocno = ps_keys_bak[1] AND xmdqseq = ps_keys_bak[2] AND xmdqseq1 = ps_keys_bak[3]
      #add-point:delete_b段刪除中 name="delete_b.m_delete3"
      {<point name="delete_b.m_delete3"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdq_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_xmdc4_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete3"
      {<point name="delete_b.a_delete3"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete4"
      {<point name="delete_b.b_delete4" mark="Y"/>}
      #end add-point    
      DELETE FROM xmdb_t
       WHERE xmdbent = g_enterprise AND
             xmdbdocno = ps_keys_bak[1] AND xmdb001 = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete4"
      {<point name="delete_b.m_delete4"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdb_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'5'" THEN 
         CALL g_xmdc5_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete4"
      {<point name="delete_b.a_delete4"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'6',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete5"
      {<point name="delete_b.b_delete5" mark="Y"/>}
      #end add-point    
      DELETE FROM xmds_t
       WHERE xmdsent = g_enterprise AND
             xmdsdocno = ps_keys_bak[1] AND xmdsseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete5"
      {<point name="delete_b.m_delete5"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmds_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'6'" THEN 
         CALL g_xmdc6_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete5"
      {<point name="delete_b.a_delete5"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other name="delete_b.other"
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION

{</section>}

{<section id="axmt500.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION axmt500_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   {<point name="insert_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   {<point name="insert_b.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   {<point name="insert_b.pre_function"/>}
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO xmdc_t
                  (xmdcent,
                   xmdcdocno,
                   xmdcseq
                   ,xmdc027,xmdc001,xmdc062,xmdc019,xmdc002,xmdc006,xmdc007,xmdc008,xmdc009,xmdc024,xmdc012,xmdc013,xmdc045,xmdc016,xmdc017,xmdc010,xmdc011,xmdc015,xmdc046,xmdc047,xmdc048,xmdc023,xmdc020,xmdc021,xmdc022,xmdcunit,xmdcorga,xmdc052,xmdc049,xmdc053,xmdc050,xmdcsite,xmdc058,xmdc059,xmdc060,xmdc061,xmdc028,xmdc029,xmdc030,xmdc057,xmdc025,xmdc026,xmdc031,xmdc032,xmdc033,xmdc003,xmdc054,xmdc036,xmdc037,xmdc038,xmdc039,xmdc035,xmdc040,xmdc041,xmdc042,xmdc043,xmdc044,xmdc055,xmdc056) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_xmdc_d[g_detail_idx].xmdc027,g_xmdc_d[g_detail_idx].xmdc001,g_xmdc_d[g_detail_idx].xmdc062, 
                       g_xmdc_d[g_detail_idx].xmdc019,g_xmdc_d[g_detail_idx].xmdc002,g_xmdc_d[g_detail_idx].xmdc006, 
                       g_xmdc_d[g_detail_idx].xmdc007,g_xmdc_d[g_detail_idx].xmdc008,g_xmdc_d[g_detail_idx].xmdc009, 
                       g_xmdc_d[g_detail_idx].xmdc024,g_xmdc_d[g_detail_idx].xmdc012,g_xmdc_d[g_detail_idx].xmdc013, 
                       g_xmdc_d[g_detail_idx].xmdc045,g_xmdc_d[g_detail_idx].xmdc016,g_xmdc_d[g_detail_idx].xmdc017, 
                       g_xmdc_d[g_detail_idx].xmdc010,g_xmdc_d[g_detail_idx].xmdc011,g_xmdc_d[g_detail_idx].xmdc015, 
                       g_xmdc_d[g_detail_idx].xmdc046,g_xmdc_d[g_detail_idx].xmdc047,g_xmdc_d[g_detail_idx].xmdc048, 
                       g_xmdc_d[g_detail_idx].xmdc023,g_xmdc_d[g_detail_idx].xmdc020,g_xmdc_d[g_detail_idx].xmdc021, 
                       g_xmdc_d[g_detail_idx].xmdc022,g_xmdc_d[g_detail_idx].xmdcunit,g_xmdc_d[g_detail_idx].xmdcorga, 
                       g_xmdc_d[g_detail_idx].xmdc052,g_xmdc_d[g_detail_idx].xmdc049,g_xmdc_d[g_detail_idx].xmdc053, 
                       g_xmdc_d[g_detail_idx].xmdc050,g_xmdc_d[g_detail_idx].xmdcsite,g_xmdc_d[g_detail_idx].xmdc058, 
                       g_xmdc_d[g_detail_idx].xmdc059,g_xmdc_d[g_detail_idx].xmdc060,g_xmdc_d[g_detail_idx].xmdc061, 
                       g_xmdc2_d[g_detail_idx].xmdc028,g_xmdc2_d[g_detail_idx].xmdc029,g_xmdc2_d[g_detail_idx].xmdc030, 
                       g_xmdc2_d[g_detail_idx].xmdc057,g_xmdc2_d[g_detail_idx].xmdc025,g_xmdc2_d[g_detail_idx].xmdc026, 
                       g_xmdc2_d[g_detail_idx].xmdc031,g_xmdc2_d[g_detail_idx].xmdc032,g_xmdc2_d[g_detail_idx].xmdc033, 
                       g_xmdc2_d[g_detail_idx].xmdc003,g_xmdc2_d[g_detail_idx].xmdc054,g_xmdc2_d[g_detail_idx].xmdc036, 
                       g_xmdc2_d[g_detail_idx].xmdc037,g_xmdc2_d[g_detail_idx].xmdc038,g_xmdc2_d[g_detail_idx].xmdc039, 
                       g_xmdc2_d[g_detail_idx].xmdc035,g_xmdc2_d[g_detail_idx].xmdc040,g_xmdc2_d[g_detail_idx].xmdc041, 
                       g_xmdc2_d[g_detail_idx].xmdc042,g_xmdc2_d[g_detail_idx].xmdc043,g_xmdc2_d[g_detail_idx].xmdc044, 
                       g_xmdc2_d[g_detail_idx].xmdc055,g_xmdc2_d[g_detail_idx].xmdc056)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdc_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_xmdc_d.insertElement(li_idx) 
      END IF 
      IF ps_page <> "'2'" THEN 
         CALL g_xmdc2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert2"
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO xmdd_t
                  (xmddent,
                   xmdddocno,
                   xmddseq,xmddseq1,xmddseq2
                   ,xmdd003,xmdd001,xmdd040,xmdd002,xmdd004,xmdd005,xmdd006,xmdd024,xmdd025,xmdd011,xmdd012,xmdd010,xmdd013,xmdd009,xmdd031,xmdd014,xmdd015,xmdd016,xmdd017,xmdd026,xmdd027,xmdd018,xmdd019,xmdd020,xmdd028,xmdd029,xmdd030,xmdd021,xmdd022,xmdd023,xmddsite,xmdd036,xmdd037,xmdd038,xmdd039) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
                   ,g_xmdc3_d[g_detail_idx].xmdd003,g_xmdc3_d[g_detail_idx].xmdd001,g_xmdc3_d[g_detail_idx].xmdd040, 
                       g_xmdc3_d[g_detail_idx].xmdd002,g_xmdc3_d[g_detail_idx].xmdd004,g_xmdc3_d[g_detail_idx].xmdd005, 
                       g_xmdc3_d[g_detail_idx].xmdd006,g_xmdc3_d[g_detail_idx].xmdd024,g_xmdc3_d[g_detail_idx].xmdd025, 
                       g_xmdc3_d[g_detail_idx].xmdd011,g_xmdc3_d[g_detail_idx].xmdd012,g_xmdc3_d[g_detail_idx].xmdd010, 
                       g_xmdc3_d[g_detail_idx].xmdd013,g_xmdc3_d[g_detail_idx].xmdd009,g_xmdc3_d[g_detail_idx].xmdd031, 
                       g_xmdc3_d[g_detail_idx].xmdd014,g_xmdc3_d[g_detail_idx].xmdd015,g_xmdc3_d[g_detail_idx].xmdd016, 
                       g_xmdc3_d[g_detail_idx].xmdd017,g_xmdc3_d[g_detail_idx].xmdd026,g_xmdc3_d[g_detail_idx].xmdd027, 
                       g_xmdc3_d[g_detail_idx].xmdd018,g_xmdc3_d[g_detail_idx].xmdd019,g_xmdc3_d[g_detail_idx].xmdd020, 
                       g_xmdc3_d[g_detail_idx].xmdd028,g_xmdc3_d[g_detail_idx].xmdd029,g_xmdc3_d[g_detail_idx].xmdd030, 
                       g_xmdc3_d[g_detail_idx].xmdd021,g_xmdc3_d[g_detail_idx].xmdd022,g_xmdc3_d[g_detail_idx].xmdd023, 
                       g_xmdc3_d[g_detail_idx].xmddsite,g_xmdc3_d[g_detail_idx].xmdd036,g_xmdc3_d[g_detail_idx].xmdd037, 
                       g_xmdc3_d[g_detail_idx].xmdd038,g_xmdc3_d[g_detail_idx].xmdd039)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert2"
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdd_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_xmdc3_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert2"
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert3"
      {<point name="insert_b.before_insert3" mark="Y"/>}
      #end add-point 
      INSERT INTO xmdq_t
                  (xmdqent,
                   xmdqdocno,
                   xmdqseq,xmdqseq1
                   ,xmdq001,xmdq006,xmdq007,xmdq008,xmdq009,xmdq002,xmdq004,xmdq005,xmdqsite) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_xmdc4_d[g_detail_idx].xmdq001,g_xmdc4_d[g_detail_idx].xmdq006,g_xmdc4_d[g_detail_idx].xmdq007, 
                       g_xmdc4_d[g_detail_idx].xmdq008,g_xmdc4_d[g_detail_idx].xmdq009,g_xmdc4_d[g_detail_idx].xmdq002, 
                       g_xmdc4_d[g_detail_idx].xmdq004,g_xmdc4_d[g_detail_idx].xmdq005,g_xmdc4_d[g_detail_idx].xmdqsite) 

      #add-point:insert_b段資料新增中 name="insert_b.m_insert3"
      {<point name="insert_b.m_insert3"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdq_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_xmdc4_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert3"
      {<point name="insert_b.after_insert3"/>}
      #end add-point
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert4"
      {<point name="insert_b.before_insert4" mark="Y"/>}
      #end add-point 
      INSERT INTO xmdb_t
                  (xmdbent,
                   xmdbdocno,
                   xmdb001
                   ,xmdb002,xmdb003,xmdb004,xmdb005,xmdb006,xmdb016,xmdb017,xmdb007,xmdb008,xmdb009,xmdbsite) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_xmdc5_d[g_detail_idx].xmdb002,g_xmdc5_d[g_detail_idx].xmdb003,g_xmdc5_d[g_detail_idx].xmdb004, 
                       g_xmdc5_d[g_detail_idx].xmdb005,g_xmdc5_d[g_detail_idx].xmdb006,g_xmdc5_d[g_detail_idx].xmdb016, 
                       g_xmdc5_d[g_detail_idx].xmdb017,g_xmdc5_d[g_detail_idx].xmdb007,g_xmdc5_d[g_detail_idx].xmdb008, 
                       g_xmdc5_d[g_detail_idx].xmdb009,g_xmdc5_d[g_detail_idx].xmdbsite)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert4"
      {<point name="insert_b.m_insert4"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdb_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'5'" THEN 
         CALL g_xmdc5_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert4"
      {<point name="insert_b.after_insert4"/>}
      #end add-point
   END IF
 
   LET ls_group = "'6',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert5"
      {<point name="insert_b.before_insert5" mark="Y"/>}
      #end add-point 
      INSERT INTO xmds_t
                  (xmdsent,
                   xmdsdocno,
                   xmdsseq
                   ,xmds001,xmds002,xmds003,xmds004,xmds005,xmds006,xmdssite) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_xmdc6_d[g_detail_idx].xmds001,g_xmdc6_d[g_detail_idx].xmds002,g_xmdc6_d[g_detail_idx].xmds003, 
                       g_xmdc6_d[g_detail_idx].xmds004,g_xmdc6_d[g_detail_idx].xmds005,g_xmdc6_d[g_detail_idx].xmds006, 
                       g_xmdc6_d[g_detail_idx].xmdssite)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert5"
      {<point name="insert_b.m_insert5"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmds_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'6'" THEN 
         CALL g_xmdc6_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert5"
      {<point name="insert_b.after_insert5"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other name="insert_b.other"
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION

{</section>}

{<section id="axmt500.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION axmt500_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   {<point name="update_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   {<point name="update_b.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   {<point name="update_b.pre_function"/>}
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmdc_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL axmt500_xmdc_t_mask_restore('restore_mask_o')
               
      UPDATE xmdc_t 
         SET (xmdcdocno,
              xmdcseq
              ,xmdc027,xmdc001,xmdc062,xmdc019,xmdc002,xmdc006,xmdc007,xmdc008,xmdc009,xmdc024,xmdc012,xmdc013,xmdc045,xmdc016,xmdc017,xmdc010,xmdc011,xmdc015,xmdc046,xmdc047,xmdc048,xmdc023,xmdc020,xmdc021,xmdc022,xmdcunit,xmdcorga,xmdc052,xmdc049,xmdc053,xmdc050,xmdcsite,xmdc058,xmdc059,xmdc060,xmdc061,xmdc028,xmdc029,xmdc030,xmdc057,xmdc025,xmdc026,xmdc031,xmdc032,xmdc033,xmdc003,xmdc054,xmdc036,xmdc037,xmdc038,xmdc039,xmdc035,xmdc040,xmdc041,xmdc042,xmdc043,xmdc044,xmdc055,xmdc056) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_xmdc_d[g_detail_idx].xmdc027,g_xmdc_d[g_detail_idx].xmdc001,g_xmdc_d[g_detail_idx].xmdc062, 
                  g_xmdc_d[g_detail_idx].xmdc019,g_xmdc_d[g_detail_idx].xmdc002,g_xmdc_d[g_detail_idx].xmdc006, 
                  g_xmdc_d[g_detail_idx].xmdc007,g_xmdc_d[g_detail_idx].xmdc008,g_xmdc_d[g_detail_idx].xmdc009, 
                  g_xmdc_d[g_detail_idx].xmdc024,g_xmdc_d[g_detail_idx].xmdc012,g_xmdc_d[g_detail_idx].xmdc013, 
                  g_xmdc_d[g_detail_idx].xmdc045,g_xmdc_d[g_detail_idx].xmdc016,g_xmdc_d[g_detail_idx].xmdc017, 
                  g_xmdc_d[g_detail_idx].xmdc010,g_xmdc_d[g_detail_idx].xmdc011,g_xmdc_d[g_detail_idx].xmdc015, 
                  g_xmdc_d[g_detail_idx].xmdc046,g_xmdc_d[g_detail_idx].xmdc047,g_xmdc_d[g_detail_idx].xmdc048, 
                  g_xmdc_d[g_detail_idx].xmdc023,g_xmdc_d[g_detail_idx].xmdc020,g_xmdc_d[g_detail_idx].xmdc021, 
                  g_xmdc_d[g_detail_idx].xmdc022,g_xmdc_d[g_detail_idx].xmdcunit,g_xmdc_d[g_detail_idx].xmdcorga, 
                  g_xmdc_d[g_detail_idx].xmdc052,g_xmdc_d[g_detail_idx].xmdc049,g_xmdc_d[g_detail_idx].xmdc053, 
                  g_xmdc_d[g_detail_idx].xmdc050,g_xmdc_d[g_detail_idx].xmdcsite,g_xmdc_d[g_detail_idx].xmdc058, 
                  g_xmdc_d[g_detail_idx].xmdc059,g_xmdc_d[g_detail_idx].xmdc060,g_xmdc_d[g_detail_idx].xmdc061, 
                  g_xmdc2_d[g_detail_idx].xmdc028,g_xmdc2_d[g_detail_idx].xmdc029,g_xmdc2_d[g_detail_idx].xmdc030, 
                  g_xmdc2_d[g_detail_idx].xmdc057,g_xmdc2_d[g_detail_idx].xmdc025,g_xmdc2_d[g_detail_idx].xmdc026, 
                  g_xmdc2_d[g_detail_idx].xmdc031,g_xmdc2_d[g_detail_idx].xmdc032,g_xmdc2_d[g_detail_idx].xmdc033, 
                  g_xmdc2_d[g_detail_idx].xmdc003,g_xmdc2_d[g_detail_idx].xmdc054,g_xmdc2_d[g_detail_idx].xmdc036, 
                  g_xmdc2_d[g_detail_idx].xmdc037,g_xmdc2_d[g_detail_idx].xmdc038,g_xmdc2_d[g_detail_idx].xmdc039, 
                  g_xmdc2_d[g_detail_idx].xmdc035,g_xmdc2_d[g_detail_idx].xmdc040,g_xmdc2_d[g_detail_idx].xmdc041, 
                  g_xmdc2_d[g_detail_idx].xmdc042,g_xmdc2_d[g_detail_idx].xmdc043,g_xmdc2_d[g_detail_idx].xmdc044, 
                  g_xmdc2_d[g_detail_idx].xmdc055,g_xmdc2_d[g_detail_idx].xmdc056) 
         WHERE xmdcent = g_enterprise AND xmdcdocno = ps_keys_bak[1] AND xmdcseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update"
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmdc_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmdc_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL axmt500_xmdc_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmdd_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update2"
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL axmt500_xmdd_t_mask_restore('restore_mask_o')
               
      UPDATE xmdd_t 
         SET (xmdddocno,
              xmddseq,xmddseq1,xmddseq2
              ,xmdd003,xmdd001,xmdd040,xmdd002,xmdd004,xmdd005,xmdd006,xmdd024,xmdd025,xmdd011,xmdd012,xmdd010,xmdd013,xmdd009,xmdd031,xmdd014,xmdd015,xmdd016,xmdd017,xmdd026,xmdd027,xmdd018,xmdd019,xmdd020,xmdd028,xmdd029,xmdd030,xmdd021,xmdd022,xmdd023,xmddsite,xmdd036,xmdd037,xmdd038,xmdd039) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
              ,g_xmdc3_d[g_detail_idx].xmdd003,g_xmdc3_d[g_detail_idx].xmdd001,g_xmdc3_d[g_detail_idx].xmdd040, 
                  g_xmdc3_d[g_detail_idx].xmdd002,g_xmdc3_d[g_detail_idx].xmdd004,g_xmdc3_d[g_detail_idx].xmdd005, 
                  g_xmdc3_d[g_detail_idx].xmdd006,g_xmdc3_d[g_detail_idx].xmdd024,g_xmdc3_d[g_detail_idx].xmdd025, 
                  g_xmdc3_d[g_detail_idx].xmdd011,g_xmdc3_d[g_detail_idx].xmdd012,g_xmdc3_d[g_detail_idx].xmdd010, 
                  g_xmdc3_d[g_detail_idx].xmdd013,g_xmdc3_d[g_detail_idx].xmdd009,g_xmdc3_d[g_detail_idx].xmdd031, 
                  g_xmdc3_d[g_detail_idx].xmdd014,g_xmdc3_d[g_detail_idx].xmdd015,g_xmdc3_d[g_detail_idx].xmdd016, 
                  g_xmdc3_d[g_detail_idx].xmdd017,g_xmdc3_d[g_detail_idx].xmdd026,g_xmdc3_d[g_detail_idx].xmdd027, 
                  g_xmdc3_d[g_detail_idx].xmdd018,g_xmdc3_d[g_detail_idx].xmdd019,g_xmdc3_d[g_detail_idx].xmdd020, 
                  g_xmdc3_d[g_detail_idx].xmdd028,g_xmdc3_d[g_detail_idx].xmdd029,g_xmdc3_d[g_detail_idx].xmdd030, 
                  g_xmdc3_d[g_detail_idx].xmdd021,g_xmdc3_d[g_detail_idx].xmdd022,g_xmdc3_d[g_detail_idx].xmdd023, 
                  g_xmdc3_d[g_detail_idx].xmddsite,g_xmdc3_d[g_detail_idx].xmdd036,g_xmdc3_d[g_detail_idx].xmdd037, 
                  g_xmdc3_d[g_detail_idx].xmdd038,g_xmdc3_d[g_detail_idx].xmdd039) 
         WHERE xmddent = g_enterprise AND xmdddocno = ps_keys_bak[1] AND xmddseq = ps_keys_bak[2] AND xmddseq1 = ps_keys_bak[3] AND xmddseq2 = ps_keys_bak[4]
      #add-point:update_b段修改中 name="update_b.m_update2"
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmdd_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmdd_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL axmt500_xmdd_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update2"
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmdq_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update3"
      {<point name="update_b.before_update3" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL axmt500_xmdq_t_mask_restore('restore_mask_o')
               
      UPDATE xmdq_t 
         SET (xmdqdocno,
              xmdqseq,xmdqseq1
              ,xmdq001,xmdq006,xmdq007,xmdq008,xmdq009,xmdq002,xmdq004,xmdq005,xmdqsite) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_xmdc4_d[g_detail_idx].xmdq001,g_xmdc4_d[g_detail_idx].xmdq006,g_xmdc4_d[g_detail_idx].xmdq007, 
                  g_xmdc4_d[g_detail_idx].xmdq008,g_xmdc4_d[g_detail_idx].xmdq009,g_xmdc4_d[g_detail_idx].xmdq002, 
                  g_xmdc4_d[g_detail_idx].xmdq004,g_xmdc4_d[g_detail_idx].xmdq005,g_xmdc4_d[g_detail_idx].xmdqsite)  

         WHERE xmdqent = g_enterprise AND xmdqdocno = ps_keys_bak[1] AND xmdqseq = ps_keys_bak[2] AND xmdqseq1 = ps_keys_bak[3]
      #add-point:update_b段修改中 name="update_b.m_update3"
      {<point name="update_b.m_update3"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmdq_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmdq_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL axmt500_xmdq_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update3"
      {<point name="update_b.after_update3"/>}
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmdb_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update4"
      {<point name="update_b.before_update4" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL axmt500_xmdb_t_mask_restore('restore_mask_o')
               
      UPDATE xmdb_t 
         SET (xmdbdocno,
              xmdb001
              ,xmdb002,xmdb003,xmdb004,xmdb005,xmdb006,xmdb016,xmdb017,xmdb007,xmdb008,xmdb009,xmdbsite) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_xmdc5_d[g_detail_idx].xmdb002,g_xmdc5_d[g_detail_idx].xmdb003,g_xmdc5_d[g_detail_idx].xmdb004, 
                  g_xmdc5_d[g_detail_idx].xmdb005,g_xmdc5_d[g_detail_idx].xmdb006,g_xmdc5_d[g_detail_idx].xmdb016, 
                  g_xmdc5_d[g_detail_idx].xmdb017,g_xmdc5_d[g_detail_idx].xmdb007,g_xmdc5_d[g_detail_idx].xmdb008, 
                  g_xmdc5_d[g_detail_idx].xmdb009,g_xmdc5_d[g_detail_idx].xmdbsite) 
         WHERE xmdbent = g_enterprise AND xmdbdocno = ps_keys_bak[1] AND xmdb001 = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update4"
      {<point name="update_b.m_update4"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmdb_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmdb_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL axmt500_xmdb_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update4"
      {<point name="update_b.after_update4"/>}
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'6',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmds_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update5"
      {<point name="update_b.before_update5" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL axmt500_xmds_t_mask_restore('restore_mask_o')
               
      UPDATE xmds_t 
         SET (xmdsdocno,
              xmdsseq
              ,xmds001,xmds002,xmds003,xmds004,xmds005,xmds006,xmdssite) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_xmdc6_d[g_detail_idx].xmds001,g_xmdc6_d[g_detail_idx].xmds002,g_xmdc6_d[g_detail_idx].xmds003, 
                  g_xmdc6_d[g_detail_idx].xmds004,g_xmdc6_d[g_detail_idx].xmds005,g_xmdc6_d[g_detail_idx].xmds006, 
                  g_xmdc6_d[g_detail_idx].xmdssite) 
         WHERE xmdsent = g_enterprise AND xmdsdocno = ps_keys_bak[1] AND xmdsseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update5"
      {<point name="update_b.m_update5"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmds_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmds_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL axmt500_xmds_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update5"
      {<point name="update_b.after_update5"/>}
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
 
   
 
   
   #add-point:update_b段other name="update_b.other"
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="axmt500.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION axmt500_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   {<point name="key_update_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   {<point name="key_update_b.define"/>} 
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   {<point name="key_update_b.pre_function"/>}
   #end add-point
   
 
   
END FUNCTION

{</section>}

{<section id="axmt500.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION axmt500_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   {<point name="key_delete_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   {<point name="key_delete_b.define"/>} 
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   {<point name="key_delete_b.pre_function"/>}
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION

{</section>}

{<section id="axmt500.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION axmt500_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   {<point name="lock_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   {<point name="lock_b.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   {<point name="lock_b.pre_function"/>}
   #end add-point
    
   #先刷新資料
   #CALL axmt500_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1','2',"
   #僅鎖定自身table
   LET ls_group = "xmdc_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN axmt500_bcl USING g_enterprise,
                                       g_xmda_m.xmdadocno,g_xmdc_d[g_detail_idx].xmdcseq     
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "axmt500_bcl:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "xmdd_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN axmt500_bcl2 USING g_enterprise,
                                             g_xmda_m.xmdadocno,g_xmdc3_d[g_detail_idx].xmddseq,g_xmdc3_d[g_detail_idx].xmddseq1, 
                                                 g_xmdc3_d[g_detail_idx].xmddseq2
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "axmt500_bcl2:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'4',"
   #僅鎖定自身table
   LET ls_group = "xmdq_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN axmt500_bcl3 USING g_enterprise,
                                             g_xmda_m.xmdadocno,g_xmdc4_d[g_detail_idx].xmdqseq,g_xmdc4_d[g_detail_idx].xmdqseq1 

      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "axmt500_bcl3:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'5',"
   #僅鎖定自身table
   LET ls_group = "xmdb_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN axmt500_bcl4 USING g_enterprise,
                                             g_xmda_m.xmdadocno,g_xmdc5_d[g_detail_idx].xmdb001
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "axmt500_bcl4:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'6',"
   #僅鎖定自身table
   LET ls_group = "xmds_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN axmt500_bcl5 USING g_enterprise,
                                             g_xmda_m.xmdadocno,g_xmdc6_d[g_detail_idx].xmdsseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "axmt500_bcl5:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other name="lock_b.other"
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION

{</section>}

{<section id="axmt500.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION axmt500_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   {<point name="unlock_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   {<point name="unlock_b.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   {<point name="unlock_b.pre_function"/>}
   #end add-point
    
   LET ls_group = "'1','2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmt500_bcl
   END IF
   
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmt500_bcl2
   END IF
 
   LET ls_group = "'4',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmt500_bcl3
   END IF
 
   LET ls_group = "'5',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmt500_bcl4
   END IF
 
   LET ls_group = "'6',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmt500_bcl5
   END IF
 
 
   
 
 
   #add-point:unlock_b段other name="unlock_b.other"
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION

{</section>}

{<section id="axmt500.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION axmt500_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   {<point name="set_entry.define_customerization" edit="c" mark="Y"/>}
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   {<point name="set_entry.define"/>} 
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   {<point name="set_entry.pre_function"/>}
   #end add-point
   
   CALL cl_set_comp_entry("xmdadocno",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("xmdadocno",TRUE)
      CALL cl_set_comp_entry("xmdadocdt",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION

{</section>}

{<section id="axmt500.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION axmt500_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   {<point name="set_no_entry.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   {<point name="set_no_entry.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   {<point name="set_no_entry.pre_function"/>}
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("xmdadocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("xmdadocno",FALSE)
   END IF 
 
#  IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正) #(ver:78)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("xmdadocdt",FALSE)
      END IF
#  END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION

{</section>}

{<section id="axmt500.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION axmt500_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   {<point name="set_entry_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   {<point name="set_entry_b.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   {<point name="set_entry_b.pre_function"/>}
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION

{</section>}

{<section id="axmt500.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION axmt500_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   {<point name="set_no_entry_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   {<point name="set_no_entry_b.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   {<point name="set_no_entry_b.pre_function"/>}
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION

{</section>}

{<section id="axmt500.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION axmt500_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   {<point name="set_act_visible.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   {<point name="set_act_visible.define"/>} 
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION

{</section>}

{<section id="axmt500.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION axmt500_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   {<point name="set_act_no_visible.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   {<point name="set_act_no_visible.define"/>} 
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION

{</section>}

{<section id="axmt500.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION axmt500_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   {<point name="set_act_visible_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   {<point name="set_act_visible_b.define"/>} 
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION

{</section>}

{<section id="axmt500.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION axmt500_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   {<point name="set_act_no_visible_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   {<point name="set_act_no_visible_b.define"/>} 
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION

{</section>}

{<section id="axmt500.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION axmt500_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   {<point name="default_search.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   {<point name="default_search.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " xmdadocno = '", g_argv[02], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
         INITIALIZE g_wc2_table2 TO NULL
 
         INITIALIZE g_wc2_table3 TO NULL
 
         INITIALIZE g_wc2_table4 TO NULL
 
         INITIALIZE g_wc2_table5 TO NULL
 
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "xmda_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "xmdc_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "xmdd_t" 
                  LET g_wc2_table2 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "xmdq_t" 
                  LET g_wc2_table3 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "xmdb_t" 
                  LET g_wc2_table4 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "xmds_t" 
                  LET g_wc2_table5 = la_wc[li_idx].wc
 
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
            OR NOT cl_null(g_wc2_table2)
 
            OR NOT cl_null(g_wc2_table3)
 
            OR NOT cl_null(g_wc2_table4)
 
            OR NOT cl_null(g_wc2_table5)
 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
            IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
            END IF
 
            IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
            END IF
 
            IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
            END IF
 
            IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
            END IF
 
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION

{</section>}

{<section id="axmt500.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION axmt500_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   {<point name="statechange.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_xmda_m.xmdadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN axmt500_cl USING g_enterprise,g_xmda_m.xmdadocno
   IF STATUS THEN
      CLOSE axmt500_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axmt500_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE axmt500_master_referesh USING g_xmda_m.xmdadocno INTO g_xmda_m.xmdadocno,g_xmda_m.xmda001, 
       g_xmda_m.xmdadocdt,g_xmda_m.xmda004,g_xmda_m.xmda002,g_xmda_m.xmda003,g_xmda_m.xmdasite,g_xmda_m.xmdastus, 
       g_xmda_m.xmda005,g_xmda_m.xmda006,g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda033,g_xmda_m.xmda027, 
       g_xmda_m.xmda009,g_xmda_m.xmda010,g_xmda_m.xmda011,g_xmda_m.xmda012,g_xmda_m.xmda013,g_xmda_m.xmda035, 
       g_xmda_m.xmda015,g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda018,g_xmda_m.xmda019,g_xmda_m.xmda023, 
       g_xmda_m.xmda032,g_xmda_m.xmda071,g_xmda_m.xmda050,g_xmda_m.xmda021,g_xmda_m.xmda022,g_xmda_m.xmda034, 
       g_xmda_m.xmda203,g_xmda_m.xmda024,g_xmda_m.xmda048,g_xmda_m.xmda052,g_xmda_m.xmda049,g_xmda_m.xmda044, 
       g_xmda_m.xmda030,g_xmda_m.xmda031,g_xmda_m.xmda045,g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028, 
       g_xmda_m.xmda043,g_xmda_m.xmda025,g_xmda_m.xmda026,g_xmda_m.xmda020,g_xmda_m.xmda037,g_xmda_m.xmda038, 
       g_xmda_m.xmda036,g_xmda_m.xmda039,g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdaownid,g_xmda_m.xmdaowndp, 
       g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid,g_xmda_m.xmdamoddt, 
       g_xmda_m.xmdacnfid,g_xmda_m.xmdacnfdt,g_xmda_m.xmda004_desc,g_xmda_m.xmda002_desc,g_xmda_m.xmda003_desc, 
       g_xmda_m.xmda009_desc,g_xmda_m.xmda010_desc,g_xmda_m.xmda015_desc,g_xmda_m.xmda017_desc,g_xmda_m.xmda018_desc, 
       g_xmda_m.xmda023_desc,g_xmda_m.xmda032_desc,g_xmda_m.xmda050_desc,g_xmda_m.xmda021_desc,g_xmda_m.xmda022_desc, 
       g_xmda_m.xmda034_desc,g_xmda_m.xmda203_desc,g_xmda_m.xmda024_desc,g_xmda_m.xmda044_desc,g_xmda_m.xmda025_desc, 
       g_xmda_m.xmda026_desc,g_xmda_m.xmda020_desc,g_xmda_m.xmda036_desc,g_xmda_m.xmdaownid_desc,g_xmda_m.xmdaowndp_desc, 
       g_xmda_m.xmdacrtid_desc,g_xmda_m.xmdacrtdp_desc,g_xmda_m.xmdamodid_desc,g_xmda_m.xmdacnfid_desc 

   
 
   #檢查是否允許此動作
   IF NOT axmt500_action_chk() THEN
      CLOSE axmt500_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_xmda_m.xmdadocno,g_xmda_m.xmda001,g_xmda_m.xmdadocno_desc,g_xmda_m.xmdadocdt,g_xmda_m.xmda004, 
       g_xmda_m.xmda004_desc,g_xmda_m.xmda002,g_xmda_m.xmda002_desc,g_xmda_m.xmda003,g_xmda_m.xmda003_desc, 
       g_xmda_m.xmdasite,g_xmda_m.xmdastus,g_xmda_m.xmda005,g_xmda_m.xmda006,g_xmda_m.xmda007,g_xmda_m.xmda008, 
       g_xmda_m.xmda033,g_xmda_m.xmda027,g_xmda_m.xmda027_desc,g_xmda_m.xmda009,g_xmda_m.xmda009_desc, 
       g_xmda_m.xmda010,g_xmda_m.xmda010_desc,g_xmda_m.xmda011,g_xmda_m.xmda011_desc,g_xmda_m.xmda012, 
       g_xmda_m.xmda013,g_xmda_m.xmda035,g_xmda_m.xmda035_desc,g_xmda_m.xmda015,g_xmda_m.xmda015_desc, 
       g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda017_desc,g_xmda_m.xmda018,g_xmda_m.xmda018_desc, 
       g_xmda_m.xmda019,g_xmda_m.xmda023,g_xmda_m.xmda023_desc,g_xmda_m.xmda032,g_xmda_m.xmda032_desc, 
       g_xmda_m.xmda071,g_xmda_m.xmda050,g_xmda_m.xmda050_desc,g_xmda_m.xmda021,g_xmda_m.xmda021_desc, 
       g_xmda_m.xmda022,g_xmda_m.xmda022_desc,g_xmda_m.xmda034,g_xmda_m.xmda034_desc,g_xmda_m.xmda203, 
       g_xmda_m.xmda203_desc,g_xmda_m.xmda024,g_xmda_m.xmda024_desc,g_xmda_m.xmda048,g_xmda_m.xmda052, 
       g_xmda_m.xmda049,g_xmda_m.xmda044,g_xmda_m.xmda044_desc,g_xmda_m.xmda030,g_xmda_m.xmda031,g_xmda_m.xmda045, 
       g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028,g_xmda_m.xmda043,g_xmda_m.xmda025,g_xmda_m.xmda025_desc, 
       g_xmda_m.oofb0171,g_xmda_m.xmda026,g_xmda_m.xmda026_desc,g_xmda_m.oofb0172,g_xmda_m.xmda020,g_xmda_m.xmda020_desc, 
       g_xmda_m.xmda037,g_xmda_m.xmda037_desc,g_xmda_m.xmda038,g_xmda_m.xmda038_desc,g_xmda_m.xmda036, 
       g_xmda_m.xmda036_desc,g_xmda_m.xmda039,g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdaownid,g_xmda_m.xmdaownid_desc, 
       g_xmda_m.xmdaowndp,g_xmda_m.xmdaowndp_desc,g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtid_desc,g_xmda_m.xmdacrtdp, 
       g_xmda_m.xmdacrtdp_desc,g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid,g_xmda_m.xmdamodid_desc,g_xmda_m.xmdamoddt, 
       g_xmda_m.xmdacnfid,g_xmda_m.xmdacnfid_desc,g_xmda_m.xmdacnfdt
 
   CASE g_xmda_m.xmdastus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "C"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
      WHEN "H"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/hold.png")
      WHEN "UH"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unhold.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_xmda_m.xmdastus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "C"
               HIDE OPTION "closed"
            WHEN "H"
               HIDE OPTION "hold"
            WHEN "UH"
               HIDE OPTION "unhold"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      #應用 a36 樣板自動產生(Version:5)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT axmt500_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE axmt500_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT axmt500_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE axmt500_cl
            RETURN
         END IF
 
 
 
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.unconfirmed"
            {<point name="statechange.unconfirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.confirmed"
            {<point name="statechange.confirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制 name="statechange.approved"
            {<point name="statechange.approved"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制 name="statechange.withdraw"
      #      {<point name="statechange.withdraw"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制 name="statechange.rejection"
            {<point name="statechange.rejection"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制 name="statechange.signing"
      #      {<point name="statechange.signing"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION closed
         IF cl_auth_chk_act("closed") THEN
            LET lc_state = "C"
            #add-point:action控制 name="statechange.closed"
            {<point name="statechange.closed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION hold
         IF cl_auth_chk_act("hold") THEN
            LET lc_state = "H"
            #add-point:action控制 name="statechange.hold"
            {<point name="statechange.hold"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION unhold
         IF cl_auth_chk_act("unhold") THEN
            LET lc_state = "UH"
            #add-point:action控制 name="statechange.unhold"
            {<point name="statechange.unhold"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.invalid"
            {<point name="statechange.invalid"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "C"
      AND lc_state <> "H"
      AND lc_state <> "UH"
      AND lc_state <> "X"
      ) OR 
      g_xmda_m.xmdastus = lc_state OR cl_null(lc_state) THEN
      CLOSE axmt500_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_xmda_m.xmdamodid = g_user
   LET g_xmda_m.xmdamoddt = cl_get_current()
   LET g_xmda_m.xmdastus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE xmda_t 
      SET (xmdastus,xmdamodid,xmdamoddt) 
        = (g_xmda_m.xmdastus,g_xmda_m.xmdamodid,g_xmda_m.xmdamoddt)     
    WHERE xmdaent = g_enterprise AND xmdadocno = g_xmda_m.xmdadocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "H"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/hold.png")
         WHEN "UH"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unhold.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE axmt500_master_referesh USING g_xmda_m.xmdadocno INTO g_xmda_m.xmdadocno,g_xmda_m.xmda001, 
          g_xmda_m.xmdadocdt,g_xmda_m.xmda004,g_xmda_m.xmda002,g_xmda_m.xmda003,g_xmda_m.xmdasite,g_xmda_m.xmdastus, 
          g_xmda_m.xmda005,g_xmda_m.xmda006,g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda033,g_xmda_m.xmda027, 
          g_xmda_m.xmda009,g_xmda_m.xmda010,g_xmda_m.xmda011,g_xmda_m.xmda012,g_xmda_m.xmda013,g_xmda_m.xmda035, 
          g_xmda_m.xmda015,g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda018,g_xmda_m.xmda019,g_xmda_m.xmda023, 
          g_xmda_m.xmda032,g_xmda_m.xmda071,g_xmda_m.xmda050,g_xmda_m.xmda021,g_xmda_m.xmda022,g_xmda_m.xmda034, 
          g_xmda_m.xmda203,g_xmda_m.xmda024,g_xmda_m.xmda048,g_xmda_m.xmda052,g_xmda_m.xmda049,g_xmda_m.xmda044, 
          g_xmda_m.xmda030,g_xmda_m.xmda031,g_xmda_m.xmda045,g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028, 
          g_xmda_m.xmda043,g_xmda_m.xmda025,g_xmda_m.xmda026,g_xmda_m.xmda020,g_xmda_m.xmda037,g_xmda_m.xmda038, 
          g_xmda_m.xmda036,g_xmda_m.xmda039,g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdaownid,g_xmda_m.xmdaowndp, 
          g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid,g_xmda_m.xmdamoddt, 
          g_xmda_m.xmdacnfid,g_xmda_m.xmdacnfdt,g_xmda_m.xmda004_desc,g_xmda_m.xmda002_desc,g_xmda_m.xmda003_desc, 
          g_xmda_m.xmda009_desc,g_xmda_m.xmda010_desc,g_xmda_m.xmda015_desc,g_xmda_m.xmda017_desc,g_xmda_m.xmda018_desc, 
          g_xmda_m.xmda023_desc,g_xmda_m.xmda032_desc,g_xmda_m.xmda050_desc,g_xmda_m.xmda021_desc,g_xmda_m.xmda022_desc, 
          g_xmda_m.xmda034_desc,g_xmda_m.xmda203_desc,g_xmda_m.xmda024_desc,g_xmda_m.xmda044_desc,g_xmda_m.xmda025_desc, 
          g_xmda_m.xmda026_desc,g_xmda_m.xmda020_desc,g_xmda_m.xmda036_desc,g_xmda_m.xmdaownid_desc, 
          g_xmda_m.xmdaowndp_desc,g_xmda_m.xmdacrtid_desc,g_xmda_m.xmdacrtdp_desc,g_xmda_m.xmdamodid_desc, 
          g_xmda_m.xmdacnfid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_xmda_m.xmdadocno,g_xmda_m.xmda001,g_xmda_m.xmdadocno_desc,g_xmda_m.xmdadocdt, 
          g_xmda_m.xmda004,g_xmda_m.xmda004_desc,g_xmda_m.xmda002,g_xmda_m.xmda002_desc,g_xmda_m.xmda003, 
          g_xmda_m.xmda003_desc,g_xmda_m.xmdasite,g_xmda_m.xmdastus,g_xmda_m.xmda005,g_xmda_m.xmda006, 
          g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda033,g_xmda_m.xmda027,g_xmda_m.xmda027_desc, 
          g_xmda_m.xmda009,g_xmda_m.xmda009_desc,g_xmda_m.xmda010,g_xmda_m.xmda010_desc,g_xmda_m.xmda011, 
          g_xmda_m.xmda011_desc,g_xmda_m.xmda012,g_xmda_m.xmda013,g_xmda_m.xmda035,g_xmda_m.xmda035_desc, 
          g_xmda_m.xmda015,g_xmda_m.xmda015_desc,g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda017_desc, 
          g_xmda_m.xmda018,g_xmda_m.xmda018_desc,g_xmda_m.xmda019,g_xmda_m.xmda023,g_xmda_m.xmda023_desc, 
          g_xmda_m.xmda032,g_xmda_m.xmda032_desc,g_xmda_m.xmda071,g_xmda_m.xmda050,g_xmda_m.xmda050_desc, 
          g_xmda_m.xmda021,g_xmda_m.xmda021_desc,g_xmda_m.xmda022,g_xmda_m.xmda022_desc,g_xmda_m.xmda034, 
          g_xmda_m.xmda034_desc,g_xmda_m.xmda203,g_xmda_m.xmda203_desc,g_xmda_m.xmda024,g_xmda_m.xmda024_desc, 
          g_xmda_m.xmda048,g_xmda_m.xmda052,g_xmda_m.xmda049,g_xmda_m.xmda044,g_xmda_m.xmda044_desc, 
          g_xmda_m.xmda030,g_xmda_m.xmda031,g_xmda_m.xmda045,g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028, 
          g_xmda_m.xmda043,g_xmda_m.xmda025,g_xmda_m.xmda025_desc,g_xmda_m.oofb0171,g_xmda_m.xmda026, 
          g_xmda_m.xmda026_desc,g_xmda_m.oofb0172,g_xmda_m.xmda020,g_xmda_m.xmda020_desc,g_xmda_m.xmda037, 
          g_xmda_m.xmda037_desc,g_xmda_m.xmda038,g_xmda_m.xmda038_desc,g_xmda_m.xmda036,g_xmda_m.xmda036_desc, 
          g_xmda_m.xmda039,g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdaownid,g_xmda_m.xmdaownid_desc, 
          g_xmda_m.xmdaowndp,g_xmda_m.xmdaowndp_desc,g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtid_desc,g_xmda_m.xmdacrtdp, 
          g_xmda_m.xmdacrtdp_desc,g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid,g_xmda_m.xmdamodid_desc,g_xmda_m.xmdamoddt, 
          g_xmda_m.xmdacnfid,g_xmda_m.xmdacnfid_desc,g_xmda_m.xmdacnfdt
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE axmt500_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL axmt500_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 

{</section>}

{<section id="axmt500.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION axmt500_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   {<point name="idx_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   {<point name="idx_chk.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   {<point name="idx_chk.pre_function"/>}
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_xmdc_d.getLength() THEN
         LET g_detail_idx = g_xmdc_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmdc_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmdc_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_xmdc2_d.getLength() THEN
         LET g_detail_idx = g_xmdc2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmdc2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmdc2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_xmdc3_d.getLength() THEN
         LET g_detail_idx = g_xmdc3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmdc3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmdc3_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 4 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail4")
      IF g_detail_idx > g_xmdc4_d.getLength() THEN
         LET g_detail_idx = g_xmdc4_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmdc4_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmdc4_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 5 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail5")
      IF g_detail_idx > g_xmdc5_d.getLength() THEN
         LET g_detail_idx = g_xmdc5_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmdc5_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmdc5_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 6 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail6")
      IF g_detail_idx > g_xmdc6_d.getLength() THEN
         LET g_detail_idx = g_xmdc6_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmdc6_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmdc6_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="axmt500.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION axmt500_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   {<point name="b_fill2.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   {<point name="b_fill2.define"/>} 
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   {<point name="b_fill2.pre_function"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL axmt500_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION

{</section>}

{<section id="axmt500.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION axmt500_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   {<point name="fill_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   {<point name="fill_chk.define"/>} 
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1')  AND 
      (cl_null(g_wc2_table4) OR g_wc2_table4.trim() = '1=1')  AND 
      (cl_null(g_wc2_table5) OR g_wc2_table5.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION

{</section>}

{<section id="axmt500.status_show" >}
PRIVATE FUNCTION axmt500_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   {<point name="status_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   {<point name="status_show.define"/>} 
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION

{</section>}

{<section id="axmt500.mask_functions" >}
&include "erp/axm/axmt500_mask.4gl"

{</section>}

{<section id="axmt500.signature" >}
   #應用 a39 樣板自動產生(Version:10)
#+ BPM提交
PRIVATE FUNCTION axmt500_send()
   #add-point:send段define(客製用) name="send.define_customerization"
   {<point name="send.define_customerization" edit="c" mark="Y"/>}
   #end add-point 
   #add-point:send段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="send.define"
   {<point name="send.define"/>}
   #end add-point 
   
   #add-point:Function前置處理  name="send.pre_function"
   {<point name="send.pre_function"/>}
   #end add-point
   
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
   LET g_wc2_table2 = " 1=1"
   LET g_wc2_table3 = " 1=1"
   LET g_wc2_table4 = " 1=1"
   LET g_wc2_table5 = " 1=1"
 
 
   CALL axmt500_show()
   CALL axmt500_set_pk_array()
   
   #add-point: 初始化的ADP name="send.before_send"
   {<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_xmda_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_xmdc_d))
   CALL cl_bpm_set_detail_data("s_detail2", util.JSONArray.fromFGL(g_xmdc2_d))
   CALL cl_bpm_set_detail_data("s_detail3", util.JSONArray.fromFGL(g_xmdc3_d))
   CALL cl_bpm_set_detail_data("s_detail4", util.JSONArray.fromFGL(g_xmdc4_d))
   CALL cl_bpm_set_detail_data("s_detail5", util.JSONArray.fromFGL(g_xmdc5_d))
   CALL cl_bpm_set_detail_data("s_detail6", util.JSONArray.fromFGL(g_xmdc6_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP name="send.before_cli"
   {<point name="send.before_cli" />}
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP name="send.after_send"
   {<point name="send.after_send" />}
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL axmt500_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL axmt500_ui_headershow()
   CALL axmt500_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
#應用 a40 樣板自動產生(Version:9)
#+ BPM抽單
PRIVATE FUNCTION axmt500_draw_out()
   #add-point:draw段define name="draw.define_customerization"
   {<point name="draw.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:draw段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="draw.define"
   {<point name="draw.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="draw.pre_function"
   {<point name="draw.pre_function"/>}
   #end add-point
   
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_idx].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL axmt500_ui_headershow()  
   CALL axmt500_ui_detailshow()
 
   #add-point:Function後置處理  name="draw.after_function"
   {<point name="draw.after_function"/>}
   #end add-point
 
   RETURN TRUE
   
END FUNCTION
 
 
 
 

{</section>}

{<section id="axmt500.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION axmt500_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   {<point name="set_pk_array.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_xmda_m.xmdadocno
   LET g_pk_array[1].column = 'xmdadocno'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
 

{</section>}

{<section id="axmt500.other_dialog" readonly="Y" >}
   

{</section>}

{<section id="axmt500.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION axmt500_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   {<point name="msgcentre_notify.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   {<point name="msgcentre_notify.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   {<point name="msgcentre_notify.pre_function"/>}
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL axmt500_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_xmda_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 

{</section>}

{<section id="axmt500.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION axmt500_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   {<point name="action_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   {<point name="action_chk.define"/>} 
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   {<point name="action_chk.action_chk"/>}
   #end add-point
      
   RETURN TRUE
   
END FUNCTION

{</section>}

{<section id="axmt500.other_function" readonly="Y" >}
{<point name="other.function"/>}

{</section>}

