#該程式未解開Section, 採用最新樣板產出!
{<section id="axmr009_x01.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:5(2017-01-12 11:30:18), PR版次:
#+ Customerized Version.: SD版次:(), PR版次:
#+ Build......: 000040
#+ Filename...: axmr009_x01
#+ Description: ...
#+ Creator....: 05384(2015-07-07 11:36:50)
#+ Modifier...: 05423 -SD/PR-

{</section>}

{<section id="axmr009_x01.global" readonly="Y" >}
#報表 x01 樣板自動產生(Version:8)
#add-point:填寫註解說明 name="global.memo"
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明 name="global.memo_customerization"
{<point name="global.memo_customerization" edit="c"/>}
#end add-point
 
IMPORT os
#add-point:增加匯入項目 name="global.import"
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
DEFINE tm RECORD
       wc STRING,                  #where condition 
       chk1 LIKE type_t.chr1          #多庫儲批明細
       END RECORD
 
DEFINE g_str           STRING,                      #列印條件回傳值              
       g_sql           STRING  
 
#add-point:自定義環境變數(Global Variable)(客製用) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:自定義環境變數(Global Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>}
#end add-point

{</section>}

{<section id="axmr009_x01.main" readonly="Y" >}
PUBLIC FUNCTION axmr009_x01(p_arg1,p_arg2)
DEFINE  p_arg1 STRING                  #tm.wc  where condition 
DEFINE  p_arg2 LIKE type_t.chr1         #tm.chk1  多庫儲批明細
#add-point:init段define(客製用) name="component.define_customerization"
{<point name="component.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="component.define"
{<point name="component.define"/>}
#end add-point
 
   LET tm.wc = p_arg1
   LET tm.chk1 = p_arg2
 
   #add-point:報表元件參數準備 name="component.arg.prep"
   {<point name="component.arg.prep" />}
   #end add-point
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'
   
   #報表元件代號      
   LET g_rep_code = "axmr009_x01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #create 暫存檔
   CALL axmr009_x01_create_tmptable()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #報表select欄位準備
   CALL axmr009_x01_sel_prep()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #報表insert的prepare
   CALL axmr009_x01_ins_prep()  
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #將資料存入tmptable
   CALL axmr009_x01_ins_data() 
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #將tmptable資料印出
   CALL axmr009_x01_rep_data()
 
END FUNCTION

{</section>}

{<section id="axmr009_x01.create_tmptable" readonly="Y" >}
PRIVATE FUNCTION axmr009_x01_create_tmptable()
 
   #清除temptable 陣列
   CALL g_rep_tmpname.clear()
   
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.before name="create_tmp.before"
   {<point name="create_tmp.before"/>}
   #end add-point:create_tmp.before
 
   #主報表TEMP TABLE的欄位SQL   
   LET g_sql = "xmdgdocno.xmdg_t.xmdgdocno,xmdgdocdt.xmdg_t.xmdgdocdt,xmdg028.xmdg_t.xmdg028,l_xmdgstus_desc.gzcbl_t.gzcbl004,xmdg002.xmdg_t.xmdg002,ooag_t_ooag011.ooag_t.ooag011,xmdg003.xmdg_t.xmdg003,ooefl_t_ooefl003.ooefl_t.ooefl003,xmdg005.xmdg_t.xmdg005,t6_pmaal004.pmaal_t.pmaal004,t8_pmaal004.pmaal_t.pmaal004,t7_pmaal004.pmaal_t.pmaal004,pmaal_t_pmaal004.pmaal_t.pmaal004,t4_oocql004.oocql_t.oocql004,t5_pmaal004.pmaal_t.pmaal004,xmdhseq.xmdh_t.xmdhseq,xmdh001.xmdh_t.xmdh001,xmdh002.xmdh_t.xmdh002,xmdh003.xmdh_t.xmdh003,xmdh004.xmdh_t.xmdh004,l_xmdh005_desc.gzcbl_t.gzcbl004,xmdh006.xmdh_t.xmdh006,x_imaal_t_imaal003.imaal_t.imaal003,x_imaal_t_imaal004.imaal_t.imaal004,xmdh007.xmdh_t.xmdh007,l_xmdh007_desc.type_t.chr1000,xmdh016.xmdh_t.xmdh016,xmdh017.xmdh_t.xmdh017,xmdh015.xmdh_t.xmdh015,xmdh030.xmdh_t.xmdh030,l_xmdh017_xmdh030.xmdh_t.xmdh017,xmdh012.xmdh_t.xmdh012,x_inayl_t_inayl003.inayl_t.inayl003,xmdh013.xmdh_t.xmdh013,x_inab_t_inab003.inab_t.inab003,xmdh014.xmdh_t.xmdh014,xmdh029.xmdh_t.xmdh029,xmdh011.xmdh_t.xmdh011,l_imaa127desc.type_t.chr80" 
   
   #建立TEMP TABLE,主報表序號1 
   IF NOT cl_xg_create_tmptable(g_sql,1) THEN
      LET g_rep_success = 'N'            
   END IF
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.after name="create_tmp.after"
   {<point name="create_tmp.after"/>}
   #end add-point:create_tmp.after
END FUNCTION

{</section>}

{<section id="axmr009_x01.ins_prep" readonly="Y" >}
PRIVATE FUNCTION axmr009_x01_ins_prep()
DEFINE i              INTEGER
DEFINE l_prep_str     STRING
#add-point:ins_prep.define (客製用) name="ins_prep.define_customerization"
{<point name="ins_prep.define_customerization" edit="c" mark="Y"/>}
#end add-point:ins_prep.define
#add-point:ins_prep.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_prep.define"
{<point name="ins_prep.define"/>}
#end add-point:ins_prep.define
 
   FOR i = 1 TO g_rep_tmpname.getLength()
      CALL cl_xg_del_data(g_rep_tmpname[i])
      #LET g_sql = g_rep_ins_prep[i]              #透過此lib取得prepare字串 lib精簡
      CASE i
         WHEN 1
         #INSERT INTO PREP
         LET g_sql = " INSERT INTO ",g_rep_db CLIPPED,g_rep_tmpname[1] CLIPPED," VALUES(?,?,?,?,?,?, 
             ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)"
         PREPARE insert_prep FROM g_sql
         IF STATUS THEN
            LET l_prep_str ="insert_prep",i
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = l_prep_str
            LET g_errparam.code   = status
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            CALL cl_xg_drop_tmptable()
            LET g_rep_success = 'N'           
         END IF 
         #add-point:insert_prep段 name="insert_prep"
         {<point name="insert_prep"/>}
         #end add-point                  
 
 
      END CASE
   END FOR
END FUNCTION

{</section>}

{<section id="axmr009_x01.sel_prep" readonly="Y" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION axmr009_x01_sel_prep()
DEFINE g_select      STRING
DEFINE g_from        STRING
DEFINE g_where       STRING
#add-point:sel_prep段define(客製用) name="sel_prep.define_customerization"
{<point name="sel_prep.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:sel_prep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sel_prep.define"
{<point name="sel_prep.define"/>}
#end add-point
 
   #add-point:sel_prep before name="sel_prep.before"
   {<point name="sel_prep.before" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep g_select name="sel_prep.g_select"
   {<point name="sel_prep.g_select" mark="Y"/>}
   #end add-point
   LET g_select = " SELECT xmdgdocno,xmdgdocdt,xmdg028,'',xmdg002,( SELECT ooag011 FROM ooag_t WHERE ooag_t.ooag001 = xmdg_t.xmdg002 AND ooag_t.ooagent = xmdg_t.xmdgent), 
       xmdg003,( SELECT ooefl003 FROM ooefl_t WHERE ooefl_t.ooefl001 = xmdg_t.xmdg003 AND ooefl_t.ooeflent = xmdg_t.xmdgent AND ooefl_t.ooefl002 = '" , 
       g_dlang,"'" ,"),xmdg005,( SELECT pmaal004 FROM pmaal_t WHERE pmaal_t.pmaal001 = xmdg_t.xmdg005 AND pmaal_t.pmaalent = xmdg_t.xmdgent AND pmaal_t.pmaal002 = '" , 
       g_dlang,"'" ,"),( SELECT pmaal004 FROM pmaal_t WHERE pmaal_t.pmaal001 = xmdg_t.xmdg007 AND pmaal_t.pmaalent = xmdg_t.xmdgent AND pmaal_t.pmaal002 = '" , 
       g_dlang,"'" ,"),( SELECT pmaal004 FROM pmaal_t WHERE pmaal_t.pmaal001 = xmdg_t.xmdg006 AND pmaal_t.pmaalent = xmdg_t.xmdgent AND pmaal_t.pmaal002 = '" , 
       g_dlang,"'" ,"),( SELECT pmaal004 FROM pmaal_t WHERE pmaal_t.pmaal001 = xmdg_t.xmdg202 AND pmaal_t.pmaalent = xmdg_t.xmdgent AND pmaal_t.pmaal002 = '" , 
       g_dlang,"'" ,"),( SELECT oocql004 FROM oocql_t WHERE oocql_t.oocql001 = '263' AND oocql_t.oocql002 = xmdg_t.xmdg018 AND oocql_t.oocqlent = xmdg_t.xmdgent AND oocql_t.oocql003 = '" , 
       g_dlang,"'" ,"),( SELECT pmaal004 FROM pmaal_t WHERE pmaal_t.pmaal001 = xmdg_t.xmdg016 AND pmaal_t.pmaalent = xmdg_t.xmdgent AND pmaal_t.pmaal002 = '" , 
       g_dlang,"'" ,"),xmdhseq,xmdh001,xmdh002,xmdh003,xmdh004,'',xmdh006,x.imaal_t_imaal003,x.imaal_t_imaal004, 
       xmdh007,'',xmdh016,xmdh017,xmdh015,xmdh030,'',xmdh012,x.inayl_t_inayl003,xmdh013,x.inab_t_inab003, 
       xmdh014,xmdh029,xmdgent,xmdgsite,xmdh011,''"
 
   #add-point:sel_prep g_from name="sel_prep.g_from"
   {<point name="sel_prep.g_from" mark="Y"/>}
   #end add-point
    LET g_from = " FROM xmdg_t LEFT OUTER JOIN ( SELECT xmdh_t.*,( SELECT imaal003 FROM imaal_t WHERE imaal_t.imaal001 = xmdh_t.xmdh006 AND imaal_t.imaalent = xmdh_t.xmdhent AND imaal_t.imaal002 = '" , 
        g_dlang,"'" ,") imaal_t_imaal003,( SELECT imaal004 FROM imaal_t WHERE imaal_t.imaal001 = xmdh_t.xmdh006 AND imaal_t.imaalent = xmdh_t.xmdhent AND imaal_t.imaal002 = '" , 
        g_dlang,"'" ,") imaal_t_imaal004,( SELECT inayl003 FROM inayl_t WHERE inayl_t.inayl001 = xmdh_t.xmdh012 AND inayl_t.inaylent = xmdh_t.xmdhent AND inayl_t.inayl002 = '" , 
        g_dlang,"'" ,") inayl_t_inayl003,( SELECT inab003 FROM inab_t WHERE inab_t.inabsite = xmdh_t.xmdhsite  
        AND inab_t.inab001 = xmdh_t.xmdh012 AND inab_t.inab002 = xmdh_t.xmdh013 AND inab_t.inabent =  
        xmdh_t.xmdhent) inab_t_inab003 FROM xmdh_t ) x  ON xmdg_t.xmdgent = x.xmdhent AND xmdg_t.xmdgdocno  
        = x.xmdhdocno"
 
   #add-point:sel_prep g_where name="sel_prep.g_where"
   {<point name="sel_prep.g_where" mark="Y"/>}
   #end add-point
    LET g_where = " WHERE " ,tm.wc CLIPPED
 
   #add-point:sel_prep g_order name="sel_prep.g_order"
   {<point name="sel_prep.g_order" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep.sql.before name="sel_prep.sql.before"
   {<point name="sel_prep.sql.before" mark="Y"/>}
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("xmdg_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段
 
   #add-point:sel_prep.sql.after name="sel_prep.sql.after"
   {<point name="sel_prep.sql.after" mark="Y"/>}
   #end add-point
   PREPARE axmr009_x01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET g_rep_success = 'N' 
   END IF
   DECLARE axmr009_x01_curs CURSOR FOR axmr009_x01_prepare
 
END FUNCTION

{</section>}

{<section id="axmr009_x01.ins_data" readonly="Y" >}
PRIVATE FUNCTION axmr009_x01_ins_data()
DEFINE sr RECORD 
   xmdgdocno LIKE xmdg_t.xmdgdocno, 
   xmdgdocdt LIKE xmdg_t.xmdgdocdt, 
   xmdg028 LIKE xmdg_t.xmdg028, 
   l_xmdgstus_desc LIKE gzcbl_t.gzcbl004, 
   xmdg002 LIKE xmdg_t.xmdg002, 
   ooag_t_ooag011 LIKE ooag_t.ooag011, 
   xmdg003 LIKE xmdg_t.xmdg003, 
   ooefl_t_ooefl003 LIKE ooefl_t.ooefl003, 
   xmdg005 LIKE xmdg_t.xmdg005, 
   t6_pmaal004 LIKE pmaal_t.pmaal004, 
   t8_pmaal004 LIKE pmaal_t.pmaal004, 
   t7_pmaal004 LIKE pmaal_t.pmaal004, 
   pmaal_t_pmaal004 LIKE pmaal_t.pmaal004, 
   t4_oocql004 LIKE oocql_t.oocql004, 
   t5_pmaal004 LIKE pmaal_t.pmaal004, 
   xmdhseq LIKE xmdh_t.xmdhseq, 
   xmdh001 LIKE xmdh_t.xmdh001, 
   xmdh002 LIKE xmdh_t.xmdh002, 
   xmdh003 LIKE xmdh_t.xmdh003, 
   xmdh004 LIKE xmdh_t.xmdh004, 
   l_xmdh005_desc LIKE gzcbl_t.gzcbl004, 
   xmdh006 LIKE xmdh_t.xmdh006, 
   x_imaal_t_imaal003 LIKE imaal_t.imaal003, 
   x_imaal_t_imaal004 LIKE imaal_t.imaal004, 
   xmdh007 LIKE xmdh_t.xmdh007, 
   l_xmdh007_desc LIKE type_t.chr1000, 
   xmdh016 LIKE xmdh_t.xmdh016, 
   xmdh017 LIKE xmdh_t.xmdh017, 
   xmdh015 LIKE xmdh_t.xmdh015, 
   xmdh030 LIKE xmdh_t.xmdh030, 
   l_xmdh017_xmdh030 LIKE xmdh_t.xmdh017, 
   xmdh012 LIKE xmdh_t.xmdh012, 
   x_inayl_t_inayl003 LIKE inayl_t.inayl003, 
   xmdh013 LIKE xmdh_t.xmdh013, 
   x_inab_t_inab003 LIKE inab_t.inab003, 
   xmdh014 LIKE xmdh_t.xmdh014, 
   xmdh029 LIKE xmdh_t.xmdh029, 
   xmdgent LIKE xmdg_t.xmdgent, 
   xmdgsite LIKE xmdg_t.xmdgsite, 
   xmdh011 LIKE xmdh_t.xmdh011, 
   l_imaa127desc LIKE type_t.chr80
 END RECORD
#add-point:ins_data段define (客製用) name="ins_data.define_customerization"
{<point name="ins_data.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:ins_data段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_data.define"
{<point name="ins_data.define"/>}
#end add-point
 
    #add-point:ins_data段before name="ins_data.before"
    {<point name="ins_data.before"/>}
    #end add-point
 
    LET g_rep_success = 'Y'
 
    FOREACH axmr009_x01_curs INTO sr.*                               
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach name="ins_data.foreach"
       {<point name="ins_data.foreach"/>}
       #end add-point
 
       #add-point:ins_data段before.save name="ins_data.before.save"
       {<point name="ins_data.before.save"/>}
       #end add-point
 
       #EXECUTE
       EXECUTE insert_prep USING sr.xmdgdocno,sr.xmdgdocdt,sr.xmdg028,sr.l_xmdgstus_desc,sr.xmdg002,sr.ooag_t_ooag011,sr.xmdg003,sr.ooefl_t_ooefl003,sr.xmdg005,sr.t6_pmaal004,sr.t8_pmaal004,sr.t7_pmaal004,sr.pmaal_t_pmaal004,sr.t4_oocql004,sr.t5_pmaal004,sr.xmdhseq,sr.xmdh001,sr.xmdh002,sr.xmdh003,sr.xmdh004,sr.l_xmdh005_desc,sr.xmdh006,sr.x_imaal_t_imaal003,sr.x_imaal_t_imaal004,sr.xmdh007,sr.l_xmdh007_desc,sr.xmdh016,sr.xmdh017,sr.xmdh015,sr.xmdh030,sr.l_xmdh017_xmdh030,sr.xmdh012,sr.x_inayl_t_inayl003,sr.xmdh013,sr.x_inab_t_inab003,sr.xmdh014,sr.xmdh029,sr.xmdh011,sr.l_imaa127desc
 
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = "axmr009_x01_execute"
          LET g_errparam.code   = SQLCA.sqlcode
          LET g_errparam.popup  = FALSE
          CALL cl_err()       
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段after_save name="ins_data.after.save"
       {<point name="ins_data.after.save"/>}
       #end add-point
       
    END FOREACH
    
    #add-point:ins_data段after name="ins_data.after"
    {<point name="ins_data.after"/>}
    #end add-point
 
END FUNCTION

{</section>}

{<section id="axmr009_x01.rep_data" readonly="Y" >}
PRIVATE FUNCTION axmr009_x01_rep_data()
#add-point:rep_data.define (客製用) name="rep_data.define_customerization"
{<point name="rep_data.define_customerization" edit="c" mark="Y"/>}
#end add-point:rep_data.define
#add-point:rep_data.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="rep_data.define"
{<point name="rep_data.define"/>}
#end add-point:rep_data.define
 
    #add-point:rep_data.before name="rep_data.before"
    {<point name="rep_data.before"/>}
    #end add-point:rep_data.before
    
    CALL cl_xg_view()
    #add-point:rep_data.after name="rep_data.after"
    {<point name="rep_data.after"/>}
    #end add-point:rep_data.after
END FUNCTION

{</section>}

{<section id="axmr009_x01.other_function" readonly="Y" >}
{<point name="other.function"/>}

{</section>}

