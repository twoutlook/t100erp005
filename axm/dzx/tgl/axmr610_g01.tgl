#該程式未解開Section, 採用最新樣板產出!
{<section id="axmr610_g01.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:13(2017-02-22 20:33:29), PR版次:
#+ Customerized Version.: SD版次:(), PR版次:
#+ Build......: 000651
#+ Filename...: axmr610_g01
#+ Description: ...
#+ Creator....: 05229(2014-05-26 19:13:38)
#+ Modifier...: 06021 -SD/PR-

{</section>}

{<section id="axmr610_g01.global" readonly="Y" >}
#報表 g01 樣板自動產生(Version:13)
#add-point:填寫註解說明 name="global.memo"
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明 name="global.memo_customerization"
{<point name="global.memo_customerization" edit="c"/>}
 
IMPORT os
#add-point:增加匯入項目 name="global.import"
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
PRIVATE TYPE sr1_r RECORD
   xmel001 LIKE xmel_t.xmel001, 
   xmel002 LIKE xmel_t.xmel002, 
   xmel003 LIKE xmel_t.xmel003, 
   xmel004 LIKE xmel_t.xmel004, 
   xmel005 LIKE xmel_t.xmel005, 
   xmel006 LIKE xmel_t.xmel006, 
   xmel007 LIKE xmel_t.xmel007, 
   xmel008 LIKE xmel_t.xmel008, 
   xmel009 LIKE xmel_t.xmel009, 
   xmel010 LIKE xmel_t.xmel010, 
   xmel011 LIKE xmel_t.xmel011, 
   xmel012 LIKE xmel_t.xmel012, 
   xmel013 LIKE xmel_t.xmel013, 
   xmel014 LIKE xmel_t.xmel014, 
   xmel015 LIKE xmel_t.xmel015, 
   xmel016 LIKE xmel_t.xmel016, 
   xmel017 LIKE xmel_t.xmel017, 
   xmel018 LIKE xmel_t.xmel018, 
   xmel019 LIKE xmel_t.xmel019, 
   xmel020 LIKE xmel_t.xmel020, 
   xmel021 LIKE xmel_t.xmel021, 
   xmeldocdt LIKE xmel_t.xmeldocdt, 
   xmeldocno LIKE xmel_t.xmeldocno, 
   xmelent LIKE xmel_t.xmelent, 
   xmelsite LIKE xmel_t.xmelsite, 
   xmelstus LIKE xmel_t.xmelstus, 
   xmem001 LIKE xmem_t.xmem001, 
   xmem002 LIKE xmem_t.xmem002, 
   xmem003 LIKE xmem_t.xmem003, 
   xmem004 LIKE xmem_t.xmem004, 
   xmem005 LIKE xmem_t.xmem005, 
   xmem006 LIKE xmem_t.xmem006, 
   xmem007 LIKE xmem_t.xmem007, 
   xmem008 LIKE xmem_t.xmem008, 
   xmem009 LIKE xmem_t.xmem009, 
   xmem010 LIKE xmem_t.xmem010, 
   xmem011 LIKE xmem_t.xmem011, 
   xmem012 LIKE xmem_t.xmem012, 
   xmem013 LIKE xmem_t.xmem013, 
   xmem014 LIKE xmem_t.xmem014, 
   xmem015 LIKE xmem_t.xmem015, 
   xmem016 LIKE xmem_t.xmem016, 
   xmem017 LIKE xmem_t.xmem017, 
   xmem018 LIKE xmem_t.xmem018, 
   xmem019 LIKE xmem_t.xmem019, 
   xmemseq LIKE xmem_t.xmemseq, 
   xmemsite LIKE xmem_t.xmemsite, 
   ooag_t_ooag011 LIKE ooag_t.ooag011, 
   ooefl_t_ooefl003 LIKE ooefl_t.ooefl003, 
   pmaal_t_pmaal004 LIKE pmaal_t.pmaal004, 
   oocql_t_oocql004 LIKE oocql_t.oocql004, 
   t1_oocql004 LIKE oocql_t.oocql004, 
   pmaal_t_pmaal003 LIKE pmaal_t.pmaal003, 
   oobxl_t_oobxl003 LIKE oobxl_t.oobxl003, 
   x_imaal_t_imaal003 LIKE imaal_t.imaal003, 
   l_xmeldocno_oobxl003 LIKE type_t.chr1000, 
   l_xmel001_ooag011 LIKE type_t.chr300, 
   l_xmel002_ooefl003 LIKE type_t.chr1000, 
   l_address_desc LIKE type_t.chr200, 
   l_bill_address LIKE type_t.chr1000, 
   l_payment_desc LIKE type_t.chr80, 
   l_currency_desc LIKE type_t.chr30, 
   l_imaal004_desc LIKE type_t.chr80, 
   l_volume_desc LIKE type_t.chr12, 
   l_xmem014_at LIKE type_t.chr80, 
   l_xmem016_at LIKE type_t.chr80, 
   l_xmem018_at LIKE type_t.chr80, 
   l_pallet_desc LIKE type_t.chr1000, 
   xmemdocno LIKE xmem_t.xmemdocno, 
   xmement LIKE xmem_t.xmement, 
   l_unit_desc LIKE type_t.chr30, 
   l_xmel009_desc LIKE type_t.chr200, 
   l_xmel010_desc LIKE type_t.chr200, 
   l_xmel003_pmaal003 LIKE type_t.chr1000, 
   l_xmem008_xmem010 LIKE type_t.chr30, 
   l_customer_item LIKE imaa_t.imaa001, 
   l_customer_show LIKE type_t.chr1, 
   l_xmem008_xmem011 LIKE type_t.chr30, 
   l_xmel014_show LIKE type_t.chr1, 
   l_xmdadocno LIKE xmda_t.xmdadocno, 
   l_xmdadocno_show LIKE type_t.chr1, 
   l_xmelsite_desc LIKE ooefl_t.ooefl006, 
   l_xmda033 LIKE xmda_t.xmda033, 
   l_xmel007_desc LIKE oocql_t.oocql004, 
   l_dims LIKE type_t.chr1000
END RECORD
 
PRIVATE TYPE sr2_r RECORD
   ooff013 LIKE ooff_t.ooff013
END RECORD
 
 
DEFINE tm RECORD
       wc STRING,                  #where condition 
       c1 LIKE type_t.chr1          #列印額外品名
       END RECORD
DEFINE sr DYNAMIC ARRAY OF sr1_r                   #宣告sr為sr1_t資料結構的動態陣列
DEFINE g_select        STRING
DEFINE g_from          STRING
DEFINE g_where         STRING
DEFINE g_order         STRING
DEFINE g_sql           STRING                         #report_select_prep,REPORT段使用
 
#add-point:自定義環境變數(Global Variable)(客製用) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:自定義環境變數(Global Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>}
#end add-point

{</section>}

{<section id="axmr610_g01.main" readonly="Y" >}
PUBLIC FUNCTION axmr610_g01(p_arg1,p_arg2)
DEFINE  p_arg1 STRING                  #tm.wc  where condition 
DEFINE  p_arg2 LIKE type_t.chr1         #tm.c1  列印額外品名
#add-point:init段define (客製用) name="component_name.define_customerization"
{<point name="component_name.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:init段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="component_name.define"
{<point name="component_name.define"/>}
#end add-point
 
   LET tm.wc = p_arg1
   LET tm.c1 = p_arg2
 
   #add-point:報表元件參數準備 name="component.arg.prep"
   {<point name="component.arg.prep" />}
   #end add-point
   #報表元件代號
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'   
   
   LET g_rep_code = "axmr610_g01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #主報表select子句準備
   CALL axmr610_g01_sel_prep()
   
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
 
   #將資料存入array
   CALL axmr610_g01_ins_data()
   
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
 
   #將資料印出
   CALL axmr610_g01_rep_data()
 
END FUNCTION

{</section>}

{<section id="axmr610_g01.sel_prep" readonly="Y" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION axmr610_g01_sel_prep()
   #add-point:sel_prep段define (客製用) name="sel_prep.define_customerization"
   {<point name="sel_prep.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:sel_prep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sel_prep.define"
   {<point name="sel_prep.define"/>}
   #end add-point
 
   #add-point:sel_prep before name="sel_prep.before"
   {<point name="sel_prep.before" mark="Y"/>}
   #end add-point
   
   #add-point:sel_prep g_select name="sel_prep.g_select"
   {<point name="sel_prep.g_select" mark="Y"/>}
   #end add-point
   LET g_select = " SELECT xmel001,xmel002,xmel003,xmel004,xmel005,xmel006,xmel007,xmel008,xmel009,xmel010, 
       xmel011,xmel012,xmel013,xmel014,xmel015,xmel016,xmel017,xmel018,xmel019,xmel020,xmel021,xmeldocdt, 
       xmeldocno,xmelent,xmelsite,xmelstus,xmem001,xmem002,xmem003,xmem004,xmem005,xmem006,xmem007,xmem008, 
       xmem009,xmem010,xmem011,xmem012,xmem013,xmem014,xmem015,xmem016,xmem017,xmem018,xmem019,xmemseq, 
       xmemsite,( SELECT ooag011 FROM ooag_t WHERE ooag_t.ooag001 = xmel_t.xmel001 AND ooag_t.ooagent = xmel_t.xmelent), 
       ( SELECT ooefl003 FROM ooefl_t WHERE ooefl_t.ooefl001 = xmel_t.xmel002 AND ooefl_t.ooeflent = xmel_t.xmelent AND ooefl_t.ooefl002 = '" , 
       g_dlang,"'" ,"),( SELECT pmaal004 FROM pmaal_t WHERE pmaal_t.pmaal001 = xmel_t.xmel003 AND pmaal_t.pmaalent = xmel_t.xmelent AND pmaal_t.pmaal002 = '" , 
       g_dlang,"'" ,"),( SELECT oocql004 FROM oocql_t WHERE oocql_t.oocql001 = '263' AND oocql_t.oocql002 = xmel_t.xmel007 AND oocql_t.oocqlent = xmel_t.xmelent AND oocql_t.oocql003 = '" , 
       g_dlang,"'" ,"),( SELECT oocql004 FROM oocql_t WHERE oocql_t.oocql001 = '209' AND oocql_t.oocql002 = xmel_t.xmel013 AND oocql_t.oocqlent = xmel_t.xmelent AND oocql_t.oocql003 = '" , 
       g_dlang,"'" ,"),( SELECT pmaal003 FROM pmaal_t WHERE pmaal_t.pmaal001 = xmel_t.xmel003 AND pmaal_t.pmaalent = xmel_t.xmelent AND pmaal_t.pmaal002 = '" , 
       g_dlang,"'" ,"),( SELECT oobxl003 FROM oobxl_t WHERE oobxl_t.oobxl001 = xmel_t.xmeldocno AND oobxl_t.oobxlent = xmel_t.xmelent AND oobxl_t.oobxl002 = '" , 
       g_dlang,"'" ,"),x.imaal_t_imaal003,trim(xmeldocno)||'.'||trim((SELECT oobxl003 FROM oobxl_t WHERE oobxl_t.oobxl001 = xmel_t.xmeldocno AND oobxl_t.oobxlent = xmel_t.xmelent AND oobxl_t.oobxl002 = '" , 
       g_dlang,"'" ,")),trim(xmel001)||'.'||trim((SELECT ooag011 FROM ooag_t WHERE ooag_t.ooag001 = xmel_t.xmel001 AND ooag_t.ooagent = xmel_t.xmelent)), 
       trim(xmel002)||'.'||trim((SELECT ooefl003 FROM ooefl_t WHERE ooefl_t.ooefl001 = xmel_t.xmel002 AND ooefl_t.ooeflent = xmel_t.xmelent AND ooefl_t.ooefl002 = '" , 
       g_dlang,"'" ,")),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,xmemdocno,xmement,NULL,NULL, 
       NULL,trim(xmel003)||'.'||trim((SELECT pmaal003 FROM pmaal_t WHERE pmaal_t.pmaal001 = xmel_t.xmel003 AND pmaal_t.pmaalent = xmel_t.xmelent AND pmaal_t.pmaal002 = '" , 
       g_dlang,"'" ,")),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'','',''"
 
   #add-point:sel_prep g_from name="sel_prep.g_from"
   {<point name="sel_prep.g_from" mark="Y"/>}
   #end add-point
    LET g_from = " FROM xmel_t LEFT OUTER JOIN ( SELECT xmem_t.*,( SELECT imaal003 FROM imaal_t WHERE imaal_t.imaal001 = xmem_t.xmem003 AND imaal_t.imaalent = xmem_t.xmement AND imaal_t.imaal002 = '" , 
        g_dlang,"'" ,") imaal_t_imaal003 FROM xmem_t ) x  ON xmel_t.xmelent = x.xmement AND xmel_t.xmeldocno  
        = x.xmemdocno"
 
   #add-point:sel_prep g_where name="sel_prep.g_where"
   {<point name="sel_prep.g_where" mark="Y"/>}
   #end add-point
    LET g_where = " WHERE " ,tm.wc CLIPPED 
 
   #add-point:sel_prep g_order name="sel_prep.g_order"
   {<point name="sel_prep.g_order" mark="Y"/>}
   #end add-point
    LET g_order = " ORDER BY xmeldocno,xmem010"
 
   #add-point:sel_prep.sql.before name="sel_prep.sql.before"
   {<point name="sel_prep.sql.before" mark="Y"/>}
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("xmel_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED ," ",g_order CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段 
 
   #add-point:sel_prep.sql.after name="sel_prep.sql.after"
   {<point name="sel_prep.sql.after" mark="Y"/>}
   #end add-point
   PREPARE axmr610_g01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()   
      LET g_rep_success = 'N'    
   END IF
   DECLARE axmr610_g01_curs CURSOR FOR axmr610_g01_prepare
 
END FUNCTION

{</section>}

{<section id="axmr610_g01.ins_data" readonly="Y" >}
PRIVATE FUNCTION axmr610_g01_ins_data()
#主報表record(用於select子句)
   DEFINE sr_s RECORD 
   xmel001 LIKE xmel_t.xmel001, 
   xmel002 LIKE xmel_t.xmel002, 
   xmel003 LIKE xmel_t.xmel003, 
   xmel004 LIKE xmel_t.xmel004, 
   xmel005 LIKE xmel_t.xmel005, 
   xmel006 LIKE xmel_t.xmel006, 
   xmel007 LIKE xmel_t.xmel007, 
   xmel008 LIKE xmel_t.xmel008, 
   xmel009 LIKE xmel_t.xmel009, 
   xmel010 LIKE xmel_t.xmel010, 
   xmel011 LIKE xmel_t.xmel011, 
   xmel012 LIKE xmel_t.xmel012, 
   xmel013 LIKE xmel_t.xmel013, 
   xmel014 LIKE xmel_t.xmel014, 
   xmel015 LIKE xmel_t.xmel015, 
   xmel016 LIKE xmel_t.xmel016, 
   xmel017 LIKE xmel_t.xmel017, 
   xmel018 LIKE xmel_t.xmel018, 
   xmel019 LIKE xmel_t.xmel019, 
   xmel020 LIKE xmel_t.xmel020, 
   xmel021 LIKE xmel_t.xmel021, 
   xmeldocdt LIKE xmel_t.xmeldocdt, 
   xmeldocno LIKE xmel_t.xmeldocno, 
   xmelent LIKE xmel_t.xmelent, 
   xmelsite LIKE xmel_t.xmelsite, 
   xmelstus LIKE xmel_t.xmelstus, 
   xmem001 LIKE xmem_t.xmem001, 
   xmem002 LIKE xmem_t.xmem002, 
   xmem003 LIKE xmem_t.xmem003, 
   xmem004 LIKE xmem_t.xmem004, 
   xmem005 LIKE xmem_t.xmem005, 
   xmem006 LIKE xmem_t.xmem006, 
   xmem007 LIKE xmem_t.xmem007, 
   xmem008 LIKE xmem_t.xmem008, 
   xmem009 LIKE xmem_t.xmem009, 
   xmem010 LIKE xmem_t.xmem010, 
   xmem011 LIKE xmem_t.xmem011, 
   xmem012 LIKE xmem_t.xmem012, 
   xmem013 LIKE xmem_t.xmem013, 
   xmem014 LIKE xmem_t.xmem014, 
   xmem015 LIKE xmem_t.xmem015, 
   xmem016 LIKE xmem_t.xmem016, 
   xmem017 LIKE xmem_t.xmem017, 
   xmem018 LIKE xmem_t.xmem018, 
   xmem019 LIKE xmem_t.xmem019, 
   xmemseq LIKE xmem_t.xmemseq, 
   xmemsite LIKE xmem_t.xmemsite, 
   ooag_t_ooag011 LIKE ooag_t.ooag011, 
   ooefl_t_ooefl003 LIKE ooefl_t.ooefl003, 
   pmaal_t_pmaal004 LIKE pmaal_t.pmaal004, 
   oocql_t_oocql004 LIKE oocql_t.oocql004, 
   t1_oocql004 LIKE oocql_t.oocql004, 
   pmaal_t_pmaal003 LIKE pmaal_t.pmaal003, 
   oobxl_t_oobxl003 LIKE oobxl_t.oobxl003, 
   x_imaal_t_imaal003 LIKE imaal_t.imaal003, 
   l_xmeldocno_oobxl003 LIKE type_t.chr1000, 
   l_xmel001_ooag011 LIKE type_t.chr300, 
   l_xmel002_ooefl003 LIKE type_t.chr1000, 
   l_address_desc LIKE type_t.chr200, 
   l_bill_address LIKE type_t.chr1000, 
   l_payment_desc LIKE type_t.chr80, 
   l_currency_desc LIKE type_t.chr30, 
   l_imaal004_desc LIKE type_t.chr80, 
   l_volume_desc LIKE type_t.chr12, 
   l_xmem014_at LIKE type_t.chr80, 
   l_xmem016_at LIKE type_t.chr80, 
   l_xmem018_at LIKE type_t.chr80, 
   l_pallet_desc LIKE type_t.chr1000, 
   xmemdocno LIKE xmem_t.xmemdocno, 
   xmement LIKE xmem_t.xmement, 
   l_unit_desc LIKE type_t.chr30, 
   l_xmel009_desc LIKE type_t.chr200, 
   l_xmel010_desc LIKE type_t.chr200, 
   l_xmel003_pmaal003 LIKE type_t.chr1000, 
   l_xmem008_xmem010 LIKE type_t.chr30, 
   l_customer_item LIKE imaa_t.imaa001, 
   l_customer_show LIKE type_t.chr1, 
   l_xmem008_xmem011 LIKE type_t.chr30, 
   l_xmel014_show LIKE type_t.chr1, 
   l_xmdadocno LIKE xmda_t.xmdadocno, 
   l_xmdadocno_show LIKE type_t.chr1, 
   l_xmelsite_desc LIKE ooefl_t.ooefl006, 
   l_xmda033 LIKE xmda_t.xmda033, 
   l_xmel007_desc LIKE oocql_t.oocql004, 
   l_dims LIKE type_t.chr1000
 END RECORD
   DEFINE l_cnt           LIKE type_t.num10
#add-point:ins_data段define (客製用) name="ins_data.define_customerization"
{<point name="ins_data.define_customerization" edit="c" mark="Y"/>}
#end add-point   
#add-point:ins_data段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_data.define"
{<point name="ins_data.define"/>}
#end add-point
 
    #add-point:ins_data段before name="ins_data.before"
    {<point name="ins_data.before"/>}
    #end add-point
 
    CALL sr.clear()                                  #rep sr
    LET l_cnt = 1
    FOREACH axmr610_g01_curs INTO sr_s.*
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()       
          LET g_rep_success = 'N'    
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach name="ins_data.foreach"
       {<point name="ins_data.foreach"/>}
       #end add-point
 
       #add-point:ins_data段before_arr name="ins_data.before.save"
       {<point name="ins_data.before.save"/>}
       #end add-point
 
       #set rep array value
       LET sr[l_cnt].xmel001 = sr_s.xmel001
       LET sr[l_cnt].xmel002 = sr_s.xmel002
       LET sr[l_cnt].xmel003 = sr_s.xmel003
       LET sr[l_cnt].xmel004 = sr_s.xmel004
       LET sr[l_cnt].xmel005 = sr_s.xmel005
       LET sr[l_cnt].xmel006 = sr_s.xmel006
       LET sr[l_cnt].xmel007 = sr_s.xmel007
       LET sr[l_cnt].xmel008 = sr_s.xmel008
       LET sr[l_cnt].xmel009 = sr_s.xmel009
       LET sr[l_cnt].xmel010 = sr_s.xmel010
       LET sr[l_cnt].xmel011 = sr_s.xmel011
       LET sr[l_cnt].xmel012 = sr_s.xmel012
       LET sr[l_cnt].xmel013 = sr_s.xmel013
       LET sr[l_cnt].xmel014 = sr_s.xmel014
       LET sr[l_cnt].xmel015 = sr_s.xmel015
       LET sr[l_cnt].xmel016 = sr_s.xmel016
       LET sr[l_cnt].xmel017 = sr_s.xmel017
       LET sr[l_cnt].xmel018 = sr_s.xmel018
       LET sr[l_cnt].xmel019 = sr_s.xmel019
       LET sr[l_cnt].xmel020 = sr_s.xmel020
       LET sr[l_cnt].xmel021 = sr_s.xmel021
       LET sr[l_cnt].xmeldocdt = sr_s.xmeldocdt
       LET sr[l_cnt].xmeldocno = sr_s.xmeldocno
       LET sr[l_cnt].xmelent = sr_s.xmelent
       LET sr[l_cnt].xmelsite = sr_s.xmelsite
       LET sr[l_cnt].xmelstus = sr_s.xmelstus
       LET sr[l_cnt].xmem001 = sr_s.xmem001
       LET sr[l_cnt].xmem002 = sr_s.xmem002
       LET sr[l_cnt].xmem003 = sr_s.xmem003
       LET sr[l_cnt].xmem004 = sr_s.xmem004
       LET sr[l_cnt].xmem005 = sr_s.xmem005
       LET sr[l_cnt].xmem006 = sr_s.xmem006
       LET sr[l_cnt].xmem007 = sr_s.xmem007
       LET sr[l_cnt].xmem008 = sr_s.xmem008
       LET sr[l_cnt].xmem009 = sr_s.xmem009
       LET sr[l_cnt].xmem010 = sr_s.xmem010
       LET sr[l_cnt].xmem011 = sr_s.xmem011
       LET sr[l_cnt].xmem012 = sr_s.xmem012
       LET sr[l_cnt].xmem013 = sr_s.xmem013
       LET sr[l_cnt].xmem014 = sr_s.xmem014
       LET sr[l_cnt].xmem015 = sr_s.xmem015
       LET sr[l_cnt].xmem016 = sr_s.xmem016
       LET sr[l_cnt].xmem017 = sr_s.xmem017
       LET sr[l_cnt].xmem018 = sr_s.xmem018
       LET sr[l_cnt].xmem019 = sr_s.xmem019
       LET sr[l_cnt].xmemseq = sr_s.xmemseq
       LET sr[l_cnt].xmemsite = sr_s.xmemsite
       LET sr[l_cnt].ooag_t_ooag011 = sr_s.ooag_t_ooag011
       LET sr[l_cnt].ooefl_t_ooefl003 = sr_s.ooefl_t_ooefl003
       LET sr[l_cnt].pmaal_t_pmaal004 = sr_s.pmaal_t_pmaal004
       LET sr[l_cnt].oocql_t_oocql004 = sr_s.oocql_t_oocql004
       LET sr[l_cnt].t1_oocql004 = sr_s.t1_oocql004
       LET sr[l_cnt].pmaal_t_pmaal003 = sr_s.pmaal_t_pmaal003
       LET sr[l_cnt].oobxl_t_oobxl003 = sr_s.oobxl_t_oobxl003
       LET sr[l_cnt].x_imaal_t_imaal003 = sr_s.x_imaal_t_imaal003
       LET sr[l_cnt].l_xmeldocno_oobxl003 = sr_s.l_xmeldocno_oobxl003
       LET sr[l_cnt].l_xmel001_ooag011 = sr_s.l_xmel001_ooag011
       LET sr[l_cnt].l_xmel002_ooefl003 = sr_s.l_xmel002_ooefl003
       LET sr[l_cnt].l_address_desc = sr_s.l_address_desc
       LET sr[l_cnt].l_bill_address = sr_s.l_bill_address
       LET sr[l_cnt].l_payment_desc = sr_s.l_payment_desc
       LET sr[l_cnt].l_currency_desc = sr_s.l_currency_desc
       LET sr[l_cnt].l_imaal004_desc = sr_s.l_imaal004_desc
       LET sr[l_cnt].l_volume_desc = sr_s.l_volume_desc
       LET sr[l_cnt].l_xmem014_at = sr_s.l_xmem014_at
       LET sr[l_cnt].l_xmem016_at = sr_s.l_xmem016_at
       LET sr[l_cnt].l_xmem018_at = sr_s.l_xmem018_at
       LET sr[l_cnt].l_pallet_desc = sr_s.l_pallet_desc
       LET sr[l_cnt].xmemdocno = sr_s.xmemdocno
       LET sr[l_cnt].xmement = sr_s.xmement
       LET sr[l_cnt].l_unit_desc = sr_s.l_unit_desc
       LET sr[l_cnt].l_xmel009_desc = sr_s.l_xmel009_desc
       LET sr[l_cnt].l_xmel010_desc = sr_s.l_xmel010_desc
       LET sr[l_cnt].l_xmel003_pmaal003 = sr_s.l_xmel003_pmaal003
       LET sr[l_cnt].l_xmem008_xmem010 = sr_s.l_xmem008_xmem010
       LET sr[l_cnt].l_customer_item = sr_s.l_customer_item
       LET sr[l_cnt].l_customer_show = sr_s.l_customer_show
       LET sr[l_cnt].l_xmem008_xmem011 = sr_s.l_xmem008_xmem011
       LET sr[l_cnt].l_xmel014_show = sr_s.l_xmel014_show
       LET sr[l_cnt].l_xmdadocno = sr_s.l_xmdadocno
       LET sr[l_cnt].l_xmdadocno_show = sr_s.l_xmdadocno_show
       LET sr[l_cnt].l_xmelsite_desc = sr_s.l_xmelsite_desc
       LET sr[l_cnt].l_xmda033 = sr_s.l_xmda033
       LET sr[l_cnt].l_xmel007_desc = sr_s.l_xmel007_desc
       LET sr[l_cnt].l_dims = sr_s.l_dims
 
 
       #add-point:ins_data段after_arr name="ins_data.after.save"
       {<point name="ins_data.after.save"/>}
       #end add-point
       LET l_cnt = l_cnt + 1
    END FOREACH
    CALL sr.deleteElement(l_cnt)
 
    #add-point:ins_data段after name="ins_data.after"
    {<point name="ins_data.after"/>}
    #end add-point
END FUNCTION

{</section>}

{<section id="axmr610_g01.rep_data" readonly="Y" >}
PRIVATE FUNCTION axmr610_g01_rep_data()
   DEFINE HANDLER         om.SaxDocumentHandler
   DEFINE l_i             INTEGER
 
    #判斷是否有報表資料，若回彈出訊息視窗
    IF sr.getLength() = 0 THEN
       INITIALIZE g_errparam TO NULL
       LET g_errparam.code = "adz-00285"
       LET g_errparam.extend = NULL
       LET g_errparam.popup  = FALSE
       LET g_errparam.replace[1] = ''
       CALL cl_err()  
       RETURN 
    END IF
    WHILE TRUE   
       #add-point:rep_data段印前 name="rep_data.before"
       {<point name="rep_data.before"/>}
       #end add-point     
       LET handler = cl_gr_handler()
       IF handler IS NOT NULL THEN
          START REPORT axmr610_g01_rep TO XML HANDLER handler
          FOR l_i = 1 TO sr.getLength()
             OUTPUT TO REPORT axmr610_g01_rep(sr[l_i].*)
             #報表中斷列印時，顯示錯誤訊息
             IF fgl_report_getErrorStatus() THEN
                DISPLAY "FGL: STOPPING REPORT msg=\"",fgl_report_getErrorString(),"\""
                EXIT FOR
             END IF                  
          END FOR
          FINISH REPORT axmr610_g01_rep
       END IF
       #add-point:rep_data段印完 name="rep_data.after"
       {<point name="rep_data.after"/>}
       #end add-point       
       IF g_rep_flag = TRUE THEN
          LET g_rep_flag = FALSE
          EXIT WHILE
       END IF
    END WHILE
    #add-point:rep_data段離開while印完前 name="rep_data.end.before"
    {<point name="rep_data.end.before"/>}
    #end add-point
    CALL cl_gr_close_report()
    #add-point:rep_data段離開while印完後 name="rep_data.end.after"
    {<point name="rep_data.end.after"/>}
    #end add-point    
END FUNCTION

{</section>}

{<section id="axmr610_g01.rep" readonly="Y" >}
PRIVATE REPORT axmr610_g01_rep(sr1)
DEFINE sr1 sr1_r
DEFINE sr2 sr2_r
DEFINE l_subrep01_show  LIKE type_t.chr1,
       l_subrep02_show  LIKE type_t.chr1,
       l_subrep03_show  LIKE type_t.chr1,
       l_subrep04_show  LIKE type_t.chr1
DEFINE l_cnt           LIKE type_t.num10
DEFINE l_sub_sql       STRING
#add-point:rep段define  (客製用) name="rep.define_customerization"
{<point name="rep.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:rep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="rep.define"
{<point name="rep.define"/>}
#end add-point
 
    #add-point:rep段ORDER_before name="rep.order.before"
    {<point name="rep.order.before" mark="Y"/>}
    #end add-point
    ORDER  BY sr1.xmeldocno,sr1.xmem010
    #add-point:rep段ORDER_after name="rep.order.after"
    {<point name="rep.order.after"/>}
    #end add-point
    
    FORMAT
       FIRST PAGE HEADER          
          PRINTX g_user,g_pdate,g_rep_code,g_company,g_ptime,g_user_name,g_date_fmt
          PRINTX tm.*
          PRINTX g_grNumFmt.*
          PRINTX g_rep_wcchp
 
          #讀取beforeGrup子樣板+子報表樣板
        #報表 d01 樣板自動產生(Version:2)
        BEFORE GROUP OF sr1.xmeldocno
            #報表 d05 樣板自動產生(Version:6)
            CALL cl_gr_title_clear()  #清除title變數值 
            #add-point:rep.header  #公司資訊(不在公用變數內) name="rep.header"
            {<point name="rep.header"  mark="Y"/>}
            #end add-point:rep.header 
            LET g_rep_docno = sr1.xmeldocno
            CALL cl_gr_init_pageheader() #表頭資訊
            PRINTX g_grPageHeader.*
            PRINTX g_grPageFooter.*
            #add-point:rep.apr.signstr.before name="rep.apr.signstr.before"
            {<point name="rep.apr.signstr.before"  mark="Y"/>}              
            #end add-point:rep.apr.signstr.before   
            LET g_doc_key = 'xmelent=' ,sr1.xmelent,'{+}xmeldocno=' ,sr1.xmeldocno         
            CALL cl_gr_init_apr(sr1.xmeldocno)
            #add-point:rep.apr.signstr name="rep.apr.signstr"
            {<point name="rep.apr.signstr"/>}              
            #end add-point:rep.apr.signstr
            PRINTX g_grSign.*
 
 
 
           #add-point:rep.b_group.xmeldocno.before name="rep.b_group.xmeldocno.before"
           {<point name="rep.b_group.xmeldocno.before"/>}
           #end add-point:
 
           #報表 d03 樣板自動產生(Version:3)
           #add-point:rep.sub01.before name="rep.sub01.before"
           {<point name="rep.sub01.before"/>}
           #end add-point:rep.sub01.before
 
           #add-point:rep.sub01.sql name="rep.sub01.sql"
           {<point name="rep.sub01.sql" mark="Y"/>}
           #end add-point:rep.sub01.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='6' AND ooff012='2' AND ooff004=0 AND ooffent = '", 
                sr1.xmelent CLIPPED ,"'", " AND  ooff003 = '", sr1.xmeldocno CLIPPED ,"'"
 
           #add-point:rep.sub01.afsql name="rep.sub01.afsql"
           {<point name="rep.sub01.afsql"/>}
           #end add-point:rep.sub01.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep01_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE axmr610_g01_repcur01_cnt_pre FROM l_sub_sql
           EXECUTE axmr610_g01_repcur01_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep01_show ="Y"
           END IF
           PRINTX l_subrep01_show
           START REPORT axmr610_g01_subrep01
           DECLARE axmr610_g01_repcur01 CURSOR FROM g_sql
           FOREACH axmr610_g01_repcur01 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "axmr610_g01_repcur01:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub01.foreach name="rep.sub01.foreach"
              {<point name="rep.sub01.foreach"/>}
              #end add-point:rep.sub01.foreach
              OUTPUT TO REPORT axmr610_g01_subrep01(sr2.*)
           END FOREACH
           FINISH REPORT axmr610_g01_subrep01
           #add-point:rep.sub01.after name="rep.sub01.after"
           {<point name="rep.sub01.after"/>}
           #end add-point:rep.sub01.after
 
 
 
           #add-point:rep.b_group.xmeldocno.after name="rep.b_group.xmeldocno.after"
           {<point name="rep.b_group.xmeldocno.after"/>}
           #end add-point:
 
 
        #報表 d01 樣板自動產生(Version:2)
        BEFORE GROUP OF sr1.xmem010
 
           #add-point:rep.b_group.xmem010.before name="rep.b_group.xmem010.before"
           {<point name="rep.b_group.xmem010.before"/>}
           #end add-point:
 
 
           #add-point:rep.b_group.xmem010.after name="rep.b_group.xmem010.after"
           {<point name="rep.b_group.xmem010.after"/>}
           #end add-point:
 
 
 
 
       ON EVERY ROW
          #add-point:rep.everyrow.before name="rep.everyrow.before"
          {<point name="rep.everyrow.before"/>}
          #end add-point:rep.everyrow.before
 
          #單身前備註
             #報表 d03 樣板自動產生(Version:3)
           #add-point:rep.sub02.before name="rep.sub02.before"
           {<point name="rep.sub02.before"/>}
           #end add-point:rep.sub02.before
 
           #add-point:rep.sub02.sql name="rep.sub02.sql"
           {<point name="rep.sub02.sql" mark="Y"/>}
           #end add-point:rep.sub02.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='7' AND ooff012='2' AND ooffent = '", 
                sr1.xmelent CLIPPED ,"'", " AND  ooff003 = '", sr1.xmeldocno CLIPPED ,"'", " AND  ooff004 = ", 
                sr1.xmem010 CLIPPED ,""
 
           #add-point:rep.sub02.afsql name="rep.sub02.afsql"
           {<point name="rep.sub02.afsql"/>}
           #end add-point:rep.sub02.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep02_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE axmr610_g01_repcur02_cnt_pre FROM l_sub_sql
           EXECUTE axmr610_g01_repcur02_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep02_show ="Y"
           END IF
           PRINTX l_subrep02_show
           START REPORT axmr610_g01_subrep02
           DECLARE axmr610_g01_repcur02 CURSOR FROM g_sql
           FOREACH axmr610_g01_repcur02 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "axmr610_g01_repcur02:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub02.foreach name="rep.sub02.foreach"
              {<point name="rep.sub02.foreach"/>}
              #end add-point:rep.sub02.foreach
              OUTPUT TO REPORT axmr610_g01_subrep02(sr2.*)
           END FOREACH
           FINISH REPORT axmr610_g01_subrep02
           #add-point:rep.sub02.after name="rep.sub02.after"
           {<point name="rep.sub02.after"/>}
           #end add-point:rep.sub02.after
 
 
 
          #add-point:rep.everyrow.beforerow name="rep.everyrow.beforerow"
          {<point name="rep.everyrow.beforerow"/>}
          #end add-point:rep.everyrow.beforerow
            
          PRINTX sr1.*
 
          #add-point:rep.everyrow.afterrow name="rep.everyrow.afterrow"
          {<point name="rep.everyrow.afterrow"/>}
          #end add-point:rep.everyrow.afterrow
 
          #單身後備註
             #報表 d03 樣板自動產生(Version:3)
           #add-point:rep.sub03.before name="rep.sub03.before"
           {<point name="rep.sub03.before"/>}
           #end add-point:rep.sub03.before
 
           #add-point:rep.sub03.sql name="rep.sub03.sql"
           {<point name="rep.sub03.sql" mark="Y"/>}
           #end add-point:rep.sub03.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='7' AND ooff012='1' AND ooffent = '", 
                sr1.xmelent CLIPPED ,"'", " AND  ooff003 = '", sr1.xmeldocno CLIPPED ,"'", " AND  ooff004 = ", 
                sr1.xmem010 CLIPPED ,""
 
           #add-point:rep.sub03.afsql name="rep.sub03.afsql"
           {<point name="rep.sub03.afsql"/>}
           #end add-point:rep.sub03.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep03_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE axmr610_g01_repcur03_cnt_pre FROM l_sub_sql
           EXECUTE axmr610_g01_repcur03_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep03_show ="Y"
           END IF
           PRINTX l_subrep03_show
           START REPORT axmr610_g01_subrep03
           DECLARE axmr610_g01_repcur03 CURSOR FROM g_sql
           FOREACH axmr610_g01_repcur03 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "axmr610_g01_repcur03:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub03.foreach name="rep.sub03.foreach"
              {<point name="rep.sub03.foreach"/>}
              #end add-point:rep.sub03.foreach
              OUTPUT TO REPORT axmr610_g01_subrep03(sr2.*)
           END FOREACH
           FINISH REPORT axmr610_g01_subrep03
           #add-point:rep.sub03.after name="rep.sub03.after"
           {<point name="rep.sub03.after"/>}
           #end add-point:rep.sub03.after
 
 
 
          #add-point:rep.everyrow.after name="rep.everyrow.after"
          {<point name="rep.everyrow.after"/>}
          #end add-point:rep.everyrow.after        
 
          #讀取afterGrup子樣板+子報表樣板
        #報表 d01 樣板自動產生(Version:2)
        AFTER GROUP OF sr1.xmeldocno
 
           #add-point:rep.a_group.xmeldocno.before name="rep.a_group.xmeldocno.before"
           {<point name="rep.a_group.xmeldocno.before"/>}
           #end add-point:
 
           #報表 d03 樣板自動產生(Version:3)
           #add-point:rep.sub04.before name="rep.sub04.before"
           {<point name="rep.sub04.before"/>}
           #end add-point:rep.sub04.before
 
           #add-point:rep.sub04.sql name="rep.sub04.sql"
           {<point name="rep.sub04.sql" mark="Y"/>}
           #end add-point:rep.sub04.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='6' AND ooff012='1' AND ooff004=0 AND ooffent = '", 
                sr1.xmelent CLIPPED ,"'", " AND  ooff003 = '", sr1.xmeldocno CLIPPED ,"'"
 
           #add-point:rep.sub04.afsql name="rep.sub04.afsql"
           {<point name="rep.sub04.afsql"/>}
           #end add-point:rep.sub04.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep04_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE axmr610_g01_repcur04_cnt_pre FROM l_sub_sql
           EXECUTE axmr610_g01_repcur04_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep04_show ="Y"
           END IF
           PRINTX l_subrep04_show
           START REPORT axmr610_g01_subrep04
           DECLARE axmr610_g01_repcur04 CURSOR FROM g_sql
           FOREACH axmr610_g01_repcur04 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "axmr610_g01_repcur04:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub04.foreach name="rep.sub04.foreach"
              {<point name="rep.sub04.foreach"/>}
              #end add-point:rep.sub04.foreach
              OUTPUT TO REPORT axmr610_g01_subrep04(sr2.*)
           END FOREACH
           FINISH REPORT axmr610_g01_subrep04
           #add-point:rep.sub04.after name="rep.sub04.after"
           {<point name="rep.sub04.after"/>}
           #end add-point:rep.sub04.after
 
 
 
           #add-point:rep.a_group.xmeldocno.after name="rep.a_group.xmeldocno.after"
           {<point name="rep.a_group.xmeldocno.after"/>}
           #end add-point:
 
 
        #報表 d01 樣板自動產生(Version:2)
        AFTER GROUP OF sr1.xmem010
 
           #add-point:rep.a_group.xmem010.before name="rep.a_group.xmem010.before"
           {<point name="rep.a_group.xmem010.before"/>}
           #end add-point:
 
 
           #add-point:rep.a_group.xmem010.after name="rep.a_group.xmem010.after"
           {<point name="rep.a_group.xmem010.after"/>}
           #end add-point:
 
 
 
       ON LAST ROW
            #add-point:rep.lastrow.before name="rep.lastrow.before"  
            {<point name="rep.lastrow.before"/>}        
            #end add-point :rep.lastrow.before
 
            #add-point:rep.lastrow.after name="rep.lastrow.after"
            {<point name="rep.lastrow.after"/>}
            #end add-point :rep.lastrow.after
END REPORT

{</section>}

{<section id="axmr610_g01.subrep_str" readonly="Y" >}
#讀取子報表樣板
#報表 d02 樣板自動產生(Version:3)
PRIVATE REPORT axmr610_g01_subrep01(sr2)
DEFINE  sr2  sr2_r
#add-point:query段define(客製用) name="sub01.define_customerization" 
{<point name="sub01.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:sub01.define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sub01.define" 
{<point name="sub01.define"/>}
#end add-point:sub01.define
 
    #add-point:sub01.order.before name="sub01.order.before" 
    {<point name="sub01.order.before"/>}
    #end add-point:sub01.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub01.everyrow.before name="sub01.everyrow.before" 
            {<point name="sub01.everyrow.before"/>}              
            #end add-point:sub01.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub01.everyrow.after name="sub01.everyrow.after" 
            {<point name="sub01.everyrow.after"/>}
            #end add-point:sub01.everyrow.after
 
 
END REPORT
 
 
#報表 d02 樣板自動產生(Version:3)
PRIVATE REPORT axmr610_g01_subrep02(sr2)
DEFINE  sr2  sr2_r
#add-point:query段define(客製用) name="sub02.define_customerization" 
{<point name="sub02.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:sub02.define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sub02.define" 
{<point name="sub02.define"/>}
#end add-point:sub02.define
 
    #add-point:sub02.order.before name="sub02.order.before" 
    {<point name="sub02.order.before"/>}
    #end add-point:sub02.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub02.everyrow.before name="sub02.everyrow.before" 
            {<point name="sub02.everyrow.before"/>}              
            #end add-point:sub02.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub02.everyrow.after name="sub02.everyrow.after" 
            {<point name="sub02.everyrow.after"/>}
            #end add-point:sub02.everyrow.after
 
 
END REPORT
 
 
#報表 d02 樣板自動產生(Version:3)
PRIVATE REPORT axmr610_g01_subrep03(sr2)
DEFINE  sr2  sr2_r
#add-point:query段define(客製用) name="sub03.define_customerization" 
{<point name="sub03.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:sub03.define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sub03.define" 
{<point name="sub03.define"/>}
#end add-point:sub03.define
 
    #add-point:sub03.order.before name="sub03.order.before" 
    {<point name="sub03.order.before"/>}
    #end add-point:sub03.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub03.everyrow.before name="sub03.everyrow.before" 
            {<point name="sub03.everyrow.before"/>}              
            #end add-point:sub03.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub03.everyrow.after name="sub03.everyrow.after" 
            {<point name="sub03.everyrow.after"/>}
            #end add-point:sub03.everyrow.after
 
 
END REPORT
 
 
#報表 d02 樣板自動產生(Version:3)
PRIVATE REPORT axmr610_g01_subrep04(sr2)
DEFINE  sr2  sr2_r
#add-point:query段define(客製用) name="sub04.define_customerization" 
{<point name="sub04.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:sub04.define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sub04.define" 
{<point name="sub04.define"/>}
#end add-point:sub04.define
 
    #add-point:sub04.order.before name="sub04.order.before" 
    {<point name="sub04.order.before"/>}
    #end add-point:sub04.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub04.everyrow.before name="sub04.everyrow.before" 
            {<point name="sub04.everyrow.before"/>}              
            #end add-point:sub04.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub04.everyrow.after name="sub04.everyrow.after" 
            {<point name="sub04.everyrow.after"/>}
            #end add-point:sub04.everyrow.after
 
 
END REPORT
 
 
 

{</section>}

{<section id="axmr610_g01.other_function" readonly="Y" >}
{<point name="other.function"/>}

{</section>}

{<section id="axmr610_g01.other_report" readonly="Y" >}
{<point name="other.report"/>}

{</section>}

