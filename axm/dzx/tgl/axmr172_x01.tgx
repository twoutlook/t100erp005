{<section id="axmr172_x01.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:2(2016-06-01 11:25:19), PR版次:
#+ Customerized Version.: SD版次:(), PR版次:
#+ Build......: 000030
#+ Filename...: axmr172_x01
#+ Description: ...
#+ Creator....: 05384(2016-04-22 14:32:34)
#+ Modifier...: 05384 -SD/PR-
{</section>}



{<section id="axmr172_x01.global" readonly="Y" >}
#報表 x01 樣板自動產生(Version:8)
#add-point:填寫註解說明 name="global.memo"
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明 name="global.memo_customerization"
{<point name="global.memo_customerization" edit="c"/>}
#end add-point
 
IMPORT os
#add-point:增加匯入項目 name="global.import"
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
DEFINE tm RECORD
       wc STRING,                  #where condition 
       wc2 STRING,                  #where condition2 
       wc3 STRING,                  #where condition3 
       a1 LIKE type_t.dat,         #基準日期 
       a2 LIKE type_t.chr1,         #未輸入預測 
       a3 LIKE type_t.chr1,         #逾期未維護 
       a4 LIKE type_t.chr1          #逾期未確認
       END RECORD
 
DEFINE g_str           STRING,                      #列印條件回傳值              
       g_sql           STRING  
 
#add-point:自定義環境變數(Global Variable)(客製用) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:自定義環境變數(Global Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>}
#end add-point
{</section>}
 
{<section id="axmr172_x01.main" readonly="Y" >}
PUBLIC FUNCTION axmr172_x01(p_arg1,p_arg2,p_arg3,p_arg4,p_arg5,p_arg6,p_arg7)
DEFINE  p_arg1 STRING                  #tm.wc  where condition 
DEFINE  p_arg2 STRING                  #tm.wc2  where condition2 
DEFINE  p_arg3 STRING                  #tm.wc3  where condition3 
DEFINE  p_arg4 LIKE type_t.dat         #tm.a1  基準日期 
DEFINE  p_arg5 LIKE type_t.chr1         #tm.a2  未輸入預測 
DEFINE  p_arg6 LIKE type_t.chr1         #tm.a3  逾期未維護 
DEFINE  p_arg7 LIKE type_t.chr1         #tm.a4  逾期未確認
#add-point:init段define(客製用) name="component.define_customerization"
{<point name="component.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="component.define"
{<point name="component.define"/>}
#end add-point
 
   LET tm.wc = p_arg1
   LET tm.wc2 = p_arg2
   LET tm.wc3 = p_arg3
   LET tm.a1 = p_arg4
   LET tm.a2 = p_arg5
   LET tm.a3 = p_arg6
   LET tm.a4 = p_arg7

   #add-point:報表元件參數準備 name="component.arg.prep"
   {<point name="component.arg.prep" />}
   #end add-point
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'
   
   #報表元件代號      
   LET g_rep_code = "axmr172_x01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #create 暫存檔
   CALL axmr172_x01_create_tmptable()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #報表select欄位準備
   CALL axmr172_x01_sel_prep()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #報表insert的prepare
   CALL axmr172_x01_ins_prep()  
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #將資料存入tmptable
   CALL axmr172_x01_ins_data() 
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #將tmptable資料印出
   CALL axmr172_x01_rep_data()
 
END FUNCTION
{</section>}
 
{<section id="axmr172_x01.create_tmptable" readonly="Y" >}
PRIVATE FUNCTION axmr172_x01_create_tmptable()
 
   #清除temptable 陣列
   CALL g_rep_tmpname.clear()
   
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.before name="create_tmp.before"
   {<point name="create_tmp.before"/>}
   #end add-point:create_tmp.before
 
   #主報表TEMP TABLE的欄位SQL   
   LET g_sql = "xmic001.xmic_t.xmic001,xmial_t_xmial003.xmial_t.xmial003,xmic002.xmic_t.xmic002,xmic003.xmic_t.xmic003,xmic004.xmic_t.xmic004,t1_ooefl003.ooefl_t.ooefl003,xmic005.xmic_t.xmic005,ooefl_t_ooefl003.ooefl_t.ooefl003,xmic006.xmic_t.xmic006,ooag_t_ooag011.ooag_t.ooag011,xmid007.xmid_t.xmid007,l_imaal003.imaal_t.imaal003,l_imaal004.imaal_t.imaal004,l_chk.type_t.chr1000" 
   
   #建立TEMP TABLE,主報表序號1 
   IF NOT cl_xg_create_tmptable(g_sql,1) THEN
      LET g_rep_success = 'N'            
   END IF
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.after name="create_tmp.after"
   {<point name="create_tmp.after"/>}
   #end add-point:create_tmp.after
END FUNCTION
{</section>}
 
{<section id="axmr172_x01.ins_prep" readonly="Y" >}
PRIVATE FUNCTION axmr172_x01_ins_prep()
DEFINE i              INTEGER
DEFINE l_prep_str     STRING
#add-point:ins_prep.define (客製用) name="ins_prep.define_customerization"
{<point name="ins_prep.define_customerization" edit="c" mark="Y"/>}
#end add-point:ins_prep.define
#add-point:ins_prep.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_prep.define"
{<point name="ins_prep.define"/>}
#end add-point:ins_prep.define
 
   FOR i = 1 TO g_rep_tmpname.getLength()
      CALL cl_xg_del_data(g_rep_tmpname[i])
      #LET g_sql = g_rep_ins_prep[i]              #透過此lib取得prepare字串 lib精簡
      CASE i
         WHEN 1
         #INSERT INTO PREP
         LET g_sql = " INSERT INTO ",g_rep_db CLIPPED,g_rep_tmpname[1] CLIPPED," VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?)"
         PREPARE insert_prep FROM g_sql
         IF STATUS THEN
            LET l_prep_str ="insert_prep",i
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = l_prep_str
            LET g_errparam.code   = status
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            CALL cl_xg_drop_tmptable()
            LET g_rep_success = 'N'           
         END IF 
         #add-point:insert_prep段 name="insert_prep"
         {<point name="insert_prep"/>}
         #end add-point                  


      END CASE
   END FOR
END FUNCTION
{</section>}
 
{<section id="axmr172_x01.sel_prep" readonly="Y" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION axmr172_x01_sel_prep()
DEFINE g_select      STRING
DEFINE g_from        STRING
DEFINE g_where       STRING
#add-point:sel_prep段define(客製用) name="sel_prep.define_customerization"
{<point name="sel_prep.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:sel_prep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sel_prep.define"
{<point name="sel_prep.define"/>}
#end add-point
 
   #add-point:sel_prep before name="sel_prep.before"
   {<point name="sel_prep.before" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep g_select name="sel_prep.g_select"
   {<point name="sel_prep.g_select" mark="Y"/>}
   #end add-point
   LET g_select = " SELECT xmic001,( SELECT xmial003 FROM xmial_t WHERE xmial_t.xmial001 = xmic_t.xmic001 AND xmial_t.xmialent = xmic_t.xmicent AND xmial_t.xmial002 = '" ,g_dlang,"'" ,"),xmic002,xmic003,xmic004,( SELECT ooefl003 FROM ooefl_t t1 WHERE t1.ooefl001 = xmic_t.xmic004 AND t1.ooeflent = xmic_t.xmicent AND t1.ooefl002 = '" ,g_dlang,"'" ,"),xmic005,( SELECT ooefl003 FROM ooefl_t WHERE ooefl_t.ooefl001 = xmic_t.xmic005 AND ooefl_t.ooeflent = xmic_t.xmicent AND ooefl_t.ooefl002 = '" ,g_dlang,"'" ,"),xmic006,( SELECT ooag011 FROM ooag_t WHERE ooag_t.ooag001 = xmic_t.xmic006 AND ooag_t.ooagent = xmic_t.xmicent),xmid007,NULL,NULL,NULL"
 
   #add-point:sel_prep g_from name="sel_prep.g_from"
   {<point name="sel_prep.g_from" mark="Y"/>}
   #end add-point
    LET g_from = " FROM xmic_t LEFT OUTER JOIN ( SELECT xmid_t.* FROM xmid_t  ) x  ON xmic_t.xmicent = x.xmident AND xmic_t.xmic001 = x.xmid001 AND xmic_t.xmic002 = x.xmid002 AND xmic_t.xmic003 = x.xmid003 AND xmic_t.xmic004 = x.xmid004 AND xmic_t.xmic005 = x.xmid005 AND xmic_t.xmic006 = x.xmid006"
 
   #add-point:sel_prep g_where name="sel_prep.g_where"
   {<point name="sel_prep.g_where" mark="Y"/>}
   #end add-point
    LET g_where = " WHERE " ,tm.wc CLIPPED
 
   #add-point:sel_prep g_order name="sel_prep.g_order"
   {<point name="sel_prep.g_order" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep.sql.before name="sel_prep.sql.before"
   {<point name="sel_prep.sql.before" mark="Y"/>}
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("xmic_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段
 
   #add-point:sel_prep.sql.after name="sel_prep.sql.after"
   {<point name="sel_prep.sql.after" mark="Y"/>}
   #end add-point
   PREPARE axmr172_x01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET g_rep_success = 'N' 
   END IF
   DECLARE axmr172_x01_curs CURSOR FOR axmr172_x01_prepare
 
END FUNCTION
{</section>}
 
{<section id="axmr172_x01.ins_data" readonly="Y" >}
PRIVATE FUNCTION axmr172_x01_ins_data()
DEFINE sr RECORD 
   xmic001 LIKE xmic_t.xmic001, 
   xmial_t_xmial003 LIKE xmial_t.xmial003, 
   xmic002 LIKE xmic_t.xmic002, 
   xmic003 LIKE xmic_t.xmic003, 
   xmic004 LIKE xmic_t.xmic004, 
   t1_ooefl003 LIKE ooefl_t.ooefl003, 
   xmic005 LIKE xmic_t.xmic005, 
   ooefl_t_ooefl003 LIKE ooefl_t.ooefl003, 
   xmic006 LIKE xmic_t.xmic006, 
   ooag_t_ooag011 LIKE ooag_t.ooag011, 
   xmid007 LIKE xmid_t.xmid007, 
   l_imaal003 LIKE imaal_t.imaal003, 
   l_imaal004 LIKE imaal_t.imaal004, 
   l_chk LIKE type_t.chr1000
 END RECORD
#add-point:ins_data段define (客製用) name="ins_data.define_customerization"
{<point name="ins_data.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:ins_data段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_data.define"
{<point name="ins_data.define"/>}
#end add-point
 
    #add-point:ins_data段before name="ins_data.before"
    {<point name="ins_data.before"/>}
    #end add-point
 
    LET g_rep_success = 'Y'
 
    FOREACH axmr172_x01_curs INTO sr.*                               
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach name="ins_data.foreach"
       {<point name="ins_data.foreach"/>}
       #end add-point
 
       #add-point:ins_data段before.save name="ins_data.before.save"
       {<point name="ins_data.before.save"/>}
       #end add-point
 
       #EXECUTE
       EXECUTE insert_prep USING sr.xmic001,sr.xmial_t_xmial003,sr.xmic002,sr.xmic003,sr.xmic004,sr.t1_ooefl003,sr.xmic005,sr.ooefl_t_ooefl003,sr.xmic006,sr.ooag_t_ooag011,sr.xmid007,sr.l_imaal003,sr.l_imaal004,sr.l_chk
 
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = "axmr172_x01_execute"
          LET g_errparam.code   = SQLCA.sqlcode
          LET g_errparam.popup  = FALSE
          CALL cl_err()       
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段after_save name="ins_data.after.save"
       {<point name="ins_data.after.save"/>}
       #end add-point
       
    END FOREACH
    
    #add-point:ins_data段after name="ins_data.after"
    {<point name="ins_data.after"/>}
    #end add-point
 
END FUNCTION
{</section>}
 
{<section id="axmr172_x01.rep_data" readonly="Y" >}
PRIVATE FUNCTION axmr172_x01_rep_data()
#add-point:rep_data.define (客製用) name="rep_data.define_customerization"
{<point name="rep_data.define_customerization" edit="c" mark="Y"/>}
#end add-point:rep_data.define
#add-point:rep_data.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="rep_data.define"
{<point name="rep_data.define"/>}
#end add-point:rep_data.define
 
    #add-point:rep_data.before name="rep_data.before"
    {<point name="rep_data.before"/>}
    #end add-point:rep_data.before
    
    CALL cl_xg_view()
    #add-point:rep_data.after name="rep_data.after"
    {<point name="rep_data.after"/>}
    #end add-point:rep_data.after
END FUNCTION
{</section>}
 
{<section id="axmr172_x01.other_function" readonly="Y" >} 
{<point name="other.function"/>}
{</section>}
