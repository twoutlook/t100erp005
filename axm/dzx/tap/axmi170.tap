<add_points prog="axmi170" std_prog="axmi170" erpver="1.0" module="AXM" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="function.axmi170_xmia004_desc" cite_std="N" status="" order="1" ver="1" cite_ver="" new="Y" src="s" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION axmi170_xmia004_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmia_m.xmia004
   CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmia_m.xmia004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmia_m.xmia004_desc
END FUNCTION]]>
</point>
  <point name="function.axmi170_xmia005_desc" cite_std="N" status="" order="2" ver="1" cite_ver="" new="Y" src="s" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION axmi170_xmia005_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmia_m.xmia005
   CALL ap_ref_array2(g_ref_fields,"SELECT ooall004 FROM ooall_t WHERE ooallent='"||g_enterprise||"' AND ooall001='1' AND ooall002=? AND ooall003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmia_m.xmia005_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmia_m.xmia005_desc
END FUNCTION]]>
</point>
  <point name="function.axmi170_xmia008_desc" cite_std="N" status="" order="3" ver="1" cite_ver="" new="Y" src="s" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION axmi170_xmia008_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmia_m.xmia008
   CALL ap_ref_array2(g_ref_fields,"SELECT xmahl003 FROM xmahl_t WHERE xmahlent='"||g_enterprise||"' AND xmahl001=? AND xmahl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmia_m.xmia008_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmia_m.xmia008_desc
END FUNCTION]]>
</point>
  <point name="function.axmi170_set_xmib003_combox" cite_std="N" status="" order="4" ver="1" cite_ver="" new="Y" src="s" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION axmi170_set_xmib003_combox()
   CALL cl_set_combo_scc('xmib003','3011')
   IF g_xmia_m.xmia003 != 1 AND g_xmia_m.xmia003 != 8 AND g_xmia_m.xmia003 != 11 AND g_xmia_m.xmia003 != 16 AND g_xmia_m.xmia003 != 21 AND g_xmia_m.xmia003 != 24 THEN
      CALL cl_set_combo_scc_part('xmib003','3011','3')
   END IF
END FUNCTION]]>
</point>
  <point name="function.axmi170_detail_insert_delete" cite_std="N" status="" order="5" ver="1" cite_ver="" new="Y" src="s" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION axmi170_detail_insert_delete()
DEFINE l_n  LIKE type_t.num5
DEFINE l_i    LIKE type_t.num5
DEFINE l_max_xmib002 LIKE xmib_t.xmib002
   LET l_n = 0
   SELECT COUNT(*) INTO l_n FROM xmib_t
    WHERE xmibent = g_enterprise AND xmib001 = g_xmia_m.xmia001
   IF l_n = 0 THEN                          #如果單身沒資料代表新增單身
      FOR l_i= 1 TO g_xmia_m.xmia002
         INSERT INTO xmib_t (xmibent,xmib001,xmib002,xmib003)
                     VALUES (g_enterprise,g_xmia_m.xmia001,l_i,'3')
         IF SQLCA.SQLCODE THEN
            RETURN FALSE
         END IF
      END FOR
   END IF
   
   IF l_n > 0 THEN                          #單身有資料
      SELECT MAX(xmib002) INTO l_max_xmib002 FROM xmib_t
       WHERE xmibent = g_enterprise AND xmib001 = g_xmia_m.xmia001   
      IF l_max_xmib002 < g_xmia_m.xmia002 THEN           # 單頭預測期數 大於 單身最大的期別 則新增
         FOR l_i = l_max_xmib002+1 TO g_xmia_m.xmia002 
            INSERT INTO xmib_t (xmibent,xmib001,xmib002,xmib003)
                     VALUES (g_enterprise,g_xmia_m.xmia001,l_i,'3')
            IF SQLCA.SQLCODE THEN
               RETURN FALSE
            END IF
         END FOR
      END IF
      
      IF l_max_xmib002 > g_xmia_m.xmia002 THEN           # 單頭預測騎術 小於 單身最大的期別 則刪除 最後的期別
         FOR l_i = l_max_xmib002 TO g_xmia_m.xmia002 STEP -1
            IF l_i > g_xmia_m.xmia002 THEN
               DELETE FROM xmib_t WHERE xmibent = g_enterprise
                                    AND xmib001 = g_xmia_m.xmia001
                                    AND xmib002 = l_i
               IF SQLCA.SQLCODE THEN
                  RETURN FALSE
               END IF
            END IF
         END FOR
      END IF
   END IF
   RETURN TRUE
END FUNCTION]]>
</point>
  <point name="function.axmi170_xmib003_chk" cite_std="N" status="" order="6" ver="1" cite_ver="" new="Y" src="s" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION axmi170_xmib003_chk()
DEFINE l_i    LIKE type_t.num5   
   IF (g_xmia_m.xmia003 = 11 OR g_xmia_m.xmia003 = 21) AND l_ac = 1 AND g_xmib_d[l_ac].xmib003 = '1' THEN  
      CALL cl_err('','axm-00122',1)
      RETURN FALSE
   END IF
   
   IF (g_xmia_m.xmia003 = 8 OR g_xmia_m.xmia003 = 16 OR g_xmia_m.xmia003 = 24) AND l_ac = 1 AND g_xmib_d[l_ac].xmib003 = '2' THEN
      CALL cl_err('','axm-00121',1)
      RETURN FALSE
   END IF
   
   IF l_ac > 1 THEN                 #判斷下一期別的期間資料是否正確
      CASE g_xmib_d[l_ac-1].xmib003 
         WHEN '1'
            IF g_xmib_d[l_ac].xmib003 != '1' AND g_xmib_d[l_ac].xmib003 != '3' THEN
               CALL cl_err('','axm-00123',1)
               RETURN FALSE
            END IF
         WHEN  '2'
            IF g_xmib_d[l_ac].xmib003 != '2' AND g_xmib_d[l_ac].xmib003 != '3' THEN
               CALL cl_err('','axm-00124',1)
               RETURN FALSE
            END IF
         WHEN '3'
            IF g_xmib_d[l_ac].xmib003 != '3' THEN
               CALL cl_err('','axm-00125',1)
               RETURN FALSE
            END IF 
      END CASE
   END IF
   IF l_ac < g_xmib_d.getLength() THEN            #若修改中間期別的期間,要反向管控後面期別的期間資料是否符合
      FOR l_i = l_ac+1 TO g_xmib_d.getLength()
          IF g_xmib_d[l_ac].xmib003 = '3' THEN
             IF g_xmib_d[l_i].xmib003 = '2' OR g_xmib_d[l_i].xmib003 = '1' THEN
                CALL cl_err('','axm-00126',1)
               RETURN FALSE
             END IF
          END IF
          IF g_xmib_d[l_ac].xmib003 = '2' THEN
             IF g_xmib_d[l_i].xmib003 = '1' THEN
                CALL cl_err('','axm-00127',1)
               RETURN FALSE
             END IF
          END IF
      END FOR
   END IF
   RETURN TRUE
END FUNCTION]]>
</point>
  <point name="b_fill.body.fill_sql" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="b_fill.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="b_fill.fill" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="b_fill.sql" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="b_fill2.after_fill" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="b_fill2.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="browser_fill.after" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="browser_fill.before_count" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="browser_fill.before_foreach" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="browser_fill.before_prepare" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="browser_fill.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="browser_fill.open" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="browser_fill.other_fill" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="browser_fill.reference" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="browser_search.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page1.xmib002" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page1.xmib003" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.a.xmia001" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.a.xmia002" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.a.xmia003" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.a.xmia004" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.a.xmia005" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.a.xmia006" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.a.xmia007" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.a.xmia008" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.a.xmia009" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.a.xmia010" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.a.xmia011" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.a.xmia012" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.a.xmia013" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.a.xmia014" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.a.xmia015" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.a.xmiacrtdp" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.a.xmiacrtid" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.a.xmial003" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.a.xmiamodid" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.a.xmiaowndp" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.a.xmiaownid" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.a.xmiastus" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.b.page1.xmib002" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page1.xmib003" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.b.xmia001" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.b.xmia002" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.b.xmia003" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.b.xmia004" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.b.xmia005" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.b.xmia006" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.b.xmia007" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.b.xmia008" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.b.xmia009" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.b.xmia010" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.b.xmia011" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.b.xmia012" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.b.xmia013" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.b.xmia014" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.b.xmia015" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.b.xmiacrtdp" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.b.xmiacrtdt" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.b.xmiacrtid" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.b.xmial003" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.b.xmiamoddt" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.b.xmiamodid" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.b.xmiaowndp" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.b.xmiaownid" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.b.xmiastus" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.c.page1.xmib002" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page1.xmib003" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.c.xmia001" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_xmia001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmia001  #顯示到畫面上

            NEXT FIELD xmia001                     #返回原欄位

]]>
</point>
  <point name="construct.c.xmia002" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.c.xmia003" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.c.xmia004" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooai001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmia004  #顯示到畫面上

            NEXT FIELD xmia004                     #返回原欄位

]]>
</point>
  <point name="construct.c.xmia005" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = "1"
            CALL q_ooal002_0()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmia005  #顯示到畫面上

            NEXT FIELD xmia005                     #返回原欄位

]]>
</point>
  <point name="construct.c.xmia006" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.c.xmia007" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.c.xmia008" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_xmah001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmia008  #顯示到畫面上

            NEXT FIELD xmia008                     #返回原欄位

]]>
</point>
  <point name="construct.c.xmia009" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.c.xmia010" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.c.xmia011" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.c.xmia012" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.c.xmia013" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.c.xmia014" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.c.xmia015" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.c.xmiacrtdp" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmiacrtdp  #顯示到畫面上

            NEXT FIELD xmiacrtdp                     #返回原欄位

]]>
</point>
  <point name="construct.c.xmiacrtid" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmiacrtid  #顯示到畫面上

            NEXT FIELD xmiacrtid                     #返回原欄位

]]>
</point>
  <point name="construct.c.xmial003" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="construct.c.xmiamodid" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmiamodid  #顯示到畫面上

            NEXT FIELD xmiamodid                     #返回原欄位

]]>
</point>
  <point name="construct.c.xmiaowndp" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmiaowndp  #顯示到畫面上

            NEXT FIELD xmiaowndp                     #返回原欄位

]]>
</point>
  <point name="construct.c.xmiaownid" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmiaownid  #顯示到畫面上

            NEXT FIELD xmiaownid                     #返回原欄位

]]>
</point>
  <point name="construct.c.xmiastus" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="cs.add_cs" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="cs.after_construct" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="cs.b_dialog" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="cs.before_construct" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="cs.body.before_construct" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="cs.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="cs.head.before_construct" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="default_search.after" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="default_search.before" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="default_search.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="delete.body.a_delete" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="delete.body.b_delete" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="delete.body.m_delete" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="delete.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="delete.head.a_delete" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="delete.head.b_delete" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="delete.head.m_delete" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="delete_b.a_delete" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="delete_b.b_delete" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="delete_b.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="delete_b.m_delete" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="delete_b.other" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="detail_reproduce.body.table1.a_insert" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[   IF NOT axmi170_detail_insert_delete() THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)  
      RETURN 
   END IF         ]]>
</point>
  <point name="detail_reproduce.body.table1.b_insert" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="detail_reproduce.body.table1.m_insert" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="detail_reproduce.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="detail_show.after" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="detail_show.before" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="detail_show.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="fetch.action_control" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[   CALL cl_set_act_visible("delete",TRUE)
   IF g_xmia_m.xmiastus != 'Y' THEN
      CALL cl_set_act_visible("delete",FALSE)
   END IF]]>
</point>
  <point name="fetch.after" cite_std="N" status="u" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[   CALL axmi170_set_xmib003_combox()         ]]>
</point>
  <point name="fetch.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="fill_chk.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="fill_chk.other_chk" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="filter.add_cs" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="filter.b_dialog" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="filter.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="filter_parser.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="global.variable" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[DEFINE g_copy_flag           LIKE type_t.chr1]]>
</point>
  <point name="idx_chk.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="idx_chk.other" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="init.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="init.init" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.page1.xmib002" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                        #此段落由子樣板a05產生
            IF  g_xmia_m.xmia001 IS NOT NULL AND g_xmib_d[g_detail_idx].xmib002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmia_m.xmia001 != g_xmia001_t OR g_xmib_d[g_detail_idx].xmib002 != g_xmib_d_t.xmib002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmib_t WHERE "||"xmibent = '" ||g_enterprise|| "' AND "||"xmib001 = '"||g_xmia_m.xmia001 ||"' AND "|| "xmib002 = '"||g_xmib_d[g_detail_idx].xmib002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page1.xmib003" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.a.xmia001" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xmia_m.xmia001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xmia_m.xmia001 != g_xmia001_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmia_t WHERE "||"xmiaent = '" ||g_enterprise|| "' AND "||"xmia001 = '"||g_xmia_m.xmia001 ||"'",'std-00004',0) THEN 
                     LET g_xmia_m.xmia001 = g_xmia_m_t.xmia001
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
</point>
  <point name="input.a.xmia002" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                
            IF NOT cl_null(g_xmia_m.xmia002) THEN 
            END IF 
]]>
</point>
  <point name="input.a.xmia003" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                
            IF NOT cl_null(g_xmia_m.xmia003) THEN 
            END IF 
]]>
</point>
  <point name="input.a.xmia004" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                CALL axmi170_xmia004_desc()
            IF NOT cl_null(g_xmia_m.xmia004) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmia_m.xmia004

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooai001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_xmia_m.xmia004 = g_xmia_m_t.xmia004
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            
]]>
</point>
  <point name="input.a.xmia005" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                CALL axmi170_xmia005_desc()
            IF NOT cl_null(g_xmia_m.xmia005) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmia_m.xmia005

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooal002_1") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_xmia_m.xmia005 = g_xmia_m_t.xmia005
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            
]]>
</point>
  <point name="input.a.xmia006" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.a.xmia007" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.a.xmia008" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                CALL axmi170_xmia008_desc()
            IF NOT cl_null(g_xmia_m.xmia008) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmia_m.xmia008

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_xmah001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_xmia_m.xmia008 = g_xmia_m_t.xmia008
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            
]]>
</point>
  <point name="input.a.xmia009" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.a.xmia010" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.a.xmia011" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.a.xmia012" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.a.xmia013" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.a.xmia014" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.a.xmia015" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.a.xmial003" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.a.xmiastus" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.after_define_sql" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.after_input" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.after_set_entry" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page1.xmib002" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page1.xmib003" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.b.xmia001" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.b.xmia002" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.b.xmia003" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.b.xmia004" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                CALL axmi170_xmia004_desc()]]>
</point>
  <point name="input.b.xmia005" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                CALL axmi170_xmia005_desc()]]>
</point>
  <point name="input.b.xmia006" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.b.xmia007" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.b.xmia008" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                CALL axmi170_xmia008_desc()]]>
</point>
  <point name="input.b.xmia009" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.b.xmia010" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.b.xmia011" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.b.xmia012" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.b.xmia013" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.b.xmia014" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.b.xmia015" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.b.xmial003" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.b.xmiastus" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.before_dialog" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.before_input" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            LET g_errshow = 1]]>
</point>
  <point name="input.body.a_delete" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                                        ]]>
</point>
  <point name="input.body.a_insert" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="input.body.a_insert2" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="input.body.a_update" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="input.body.after_delete" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.body.after_input" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.body.after_row" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.body.after_set_entry_b" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="input.body.b_a_insert" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.body.b_delete" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="input.body.b_insert" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="input.body.b_update" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="input.body.before_insert" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                    LET g_xmib_d[l_ac].xmib002 = g_xmia_m.xmia002    
            IF l_ac > 1 THEN
               SELECT MAX(xmib002)+1 INTO g_xmib_d[l_ac].xmib002 FROM xmib_t
                WHERE xmibent = g_enterprise AND xmib001 = g_xmia_m.xmia001
               LET g_xmib_d[l_ac].xmib003 = g_xmib_d[l_ac-1].xmib003
            END IF
            LET g_xmib_d_t.* = g_xmib_d[l_ac].*            ]]>
</point>
  <point name="input.body.before_row" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                             ]]>
</point>
  <point name="input.body.insert.after_set_entry_b" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.body.m_delete" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="input.body.m_update" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="input.c.page1.xmib002" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page1.xmib003" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.c.xmia001" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.c.xmia002" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.c.xmia003" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.c.xmia004" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmia_m.xmia004             #給予default值

            #給予arg

            CALL q_ooai001_1()                                #呼叫開窗

            LET g_xmia_m.xmia004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmia_m.xmia004 TO xmia004              #顯示到畫面上

            NEXT FIELD xmia004                          #返回原欄位

]]>
</point>
  <point name="input.c.xmia005" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmia_m.xmia005             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "1" #

            CALL q_ooal002_0()                                #呼叫開窗

            LET g_xmia_m.xmia005 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmia_m.xmia005 TO xmia005              #顯示到畫面上

            NEXT FIELD xmia005                          #返回原欄位

]]>
</point>
  <point name="input.c.xmia006" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.c.xmia007" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.c.xmia008" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmia_m.xmia008             #給予default值

            #給予arg

            CALL q_xmah001()                                #呼叫開窗

            LET g_xmia_m.xmia008 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmia_m.xmia008 TO xmia008              #顯示到畫面上

            NEXT FIELD xmia008                          #返回原欄位

]]>
</point>
  <point name="input.c.xmia009" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.c.xmia010" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.c.xmia011" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.c.xmia012" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.c.xmia013" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.c.xmia014" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.c.xmia015" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.c.xmial003" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.c.xmiastus" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.d.before_input" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.define_sql" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page1.xmib002" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page1.xmib003" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                    IF NOT axmi170_xmib003_chk() THEN
               LET g_xmib_d[l_ac].xmib003 = g_xmib_d_t.xmib003
               NEXT FIELD CURRENT
            END IF]]>
</point>
  <point name="input.g.xmia001" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.g.xmia002" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.g.xmia003" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.g.xmia004" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.g.xmia005" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.g.xmia006" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.g.xmia007" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.g.xmia008" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.g.xmia009" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                CALL axmi170_set_entry('')
            CALL axmi170_set_no_entry('')]]>
</point>
  <point name="input.g.xmia010" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.g.xmia011" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.g.xmia012" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.g.xmia013" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.g.xmia014" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.g.xmia015" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.g.xmial003" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.g.xmiastus" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="input.head.a_insert" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[               CALL axmi170_set_xmib003_combox()                                                ]]>
</point>
  <point name="input.head.a_update" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[               CALL axmi170_set_xmib003_combox()                                                ]]>
</point>
  <point name="input.head.b_insert" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="input.head.b_update" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="input.head.m_insert" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[               IF l_cmd_t !='r' THEN 
                  IF NOT axmi170_detail_insert_delete() THEN
                     CALL cl_err("g_xmia_m",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     CONTINUE DIALOG
                  END IF
               END IF]]>
</point>
  <point name="input.head.m_update" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[               IF l_cmd_t !='r' THEN 
                  IF NOT axmi170_detail_insert_delete() THEN
                     CALL cl_err("xmia_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     CONTINUE DIALOG
                  END IF
               END IF                                             ]]>
</point>
  <point name="input.m.before_input" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                        CALL axmi170_set_entry(p_cmd)   
            CALL axmi170_set_no_entry(p_cmd)             ]]>
</point>
  <point name="input.master_input.update_item" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               IF NOT cl_null(g_xmia_m.xmia001) THEN
                  CALL n_xmial(g_xmia_m.xmia001)
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_xmia_m.xmia001
                  CALL ap_ref_array2(g_ref_fields," SELECT xmial003 FROM xmial_t WHERE xmialent = '"
                      ||g_enterprise||"' AND xmial001 = ?  AND xmial002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
                  LET g_xmia_m.xmial003 = g_rtn_fields[1]
                  DISPLAY BY NAME g_xmia_m.xmial003
               END IF
            END IF]]>
</point>
  <point name="input.more_input" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.other_sql" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="insert.after_insert" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="insert.default" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                        LET g_xmia_m_t.* = g_xmia_m.*]]>
</point>
  <point name="insert.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="insert_b.after_insert" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="insert_b.before_insert" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="insert_b.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="insert_b.m_insert" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="insert_b.other" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="lock_b.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="lock_b.other" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="main.after_define_sql" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="main.before_close" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="main.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="main.define_sql" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="main.exit" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="main.init" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="menu.default.insert" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="menu.delete" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="menu.insert" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="menu.modify" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="menu.modify_detail" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="menu.output" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="menu.query" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="menu.reproduce" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="modify.after_input" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="modify.before_input" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                        LET g_xmia_m_t.* = g_xmia_m.*]]>
</point>
  <point name="modify.body.a_fk_update" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="modify.body.b_fk_update" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="modify.body.m_fk_update" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="modify.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="query.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="query.other" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="reproduce.after_reproduce" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[   LET g_copy_flag  = 'N'         ]]>
</point>
  <point name="reproduce.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="reproduce.head.b_input" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            LET g_xmia_m.xmiastus = 'Y'
   LET g_copy_flag  = 'Y']]>
</point>
  <point name="set_entry.after_control" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            CALL cl_set_comp_entry("xmia003,xmia010,xmia011",TRUE)
         ]]>
</point>
  <point name="set_entry.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="set_entry.field_control" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="set_entry_b.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="set_entry_b.set_entry_b" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="set_no_entry.after_control" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            IF g_xmia_m.xmia009 = 'N' THEN
      LET g_xmia_m.xmia010 = 'Y'
      DISPLAY BY NAME g_xmia_m.xmia010
      CALL cl_set_comp_entry("xmia010",FALSE)
   ELSE
      LET g_xmia_m.xmia011 = 'Y'
      DISPLAY BY NAME g_xmia_m.xmia011
      CALL cl_set_comp_entry("xmia011",FALSE)
   END IF
   
   LET l_n = 0
   IF g_copy_flag = 'N' THEN
      SELECT COUNT(*) INTO l_n FROM xmib_t
       WHERE xmibent = g_enterprise AND xmib001 = g_xmia_m.xmia001
   ELSE
      SELECT COUNT(*) INTO l_n FROM xmib_t
       WHERE xmibent = g_enterprise AND xmib001 = g_xmia001_t
   END IF
   IF l_n > 0 THEN
      CALL cl_set_comp_entry("xmia003",FALSE)
   END IF]]>
</point>
  <point name="set_no_entry.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[      DEFINE l_n     LIKE type_t.num5      ]]>
</point>
  <point name="set_no_entry.field_control" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="set_no_entry_b.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="set_no_entry_b.set_no_entry_b" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="show.after" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="show.before" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="show.body.reference" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="show.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="show.head.reference" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmia_m.xmia001
   CALL ap_ref_array2(g_ref_fields," SELECT xmial003 FROM xmial_t WHERE xmialent = '"||g_enterprise||"' AND xmial001 = ? AND xmial002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_xmia_m.xmial003 = g_rtn_fields[1] 
   DISPLAY g_xmia_m.xmial003 TO xmial003
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xmia_m.xmia004
            CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xmia_m.xmia004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xmia_m.xmia004_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xmia_m.xmia005
            CALL ap_ref_array2(g_ref_fields,"SELECT ooall004 FROM ooall_t WHERE ooallent='"||g_enterprise||"' AND ooall001='1' AND ooall002=? AND ooall003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xmia_m.xmia005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xmia_m.xmia005_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xmia_m.xmia008
            CALL ap_ref_array2(g_ref_fields,"SELECT xmahl003 FROM xmahl_t WHERE xmahlent='"||g_enterprise||"' AND xmahl001=? AND xmahl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xmia_m.xmia008_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xmia_m.xmia008_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xmia_m.xmiaownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_xmia_m.xmiaownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xmia_m.xmiaownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xmia_m.xmiaowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xmia_m.xmiaowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xmia_m.xmiaowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xmia_m.xmiacrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_xmia_m.xmiacrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xmia_m.xmiacrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xmia_m.xmiacrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xmia_m.xmiacrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xmia_m.xmiacrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xmia_m.xmiamodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_xmia_m.xmiamodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xmia_m.xmiamodid_desc
]]>
</point>
  <point name="show.other" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="statechange.a_update" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[   CALL cl_set_act_visible("delete",TRUE)
   IF g_xmia_m.xmiastus != 'Y' THEN
      CALL cl_set_act_visible("delete",FALSE)
   END IF]]>
</point>
  <point name="statechange.active" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="statechange.after" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="statechange.b_update" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="statechange.before" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="statechange.before_menu" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="statechange.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="statechange.inactive" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="statechange.more_control" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="ui_browser_refresh.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="ui_detailshow.after" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="ui_detailshow.before" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="ui_detailshow.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="ui_dialog.action_default" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="ui_dialog.before_dialog2" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="ui_dialog.page1.action" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                ]]>
</point>
  <point name="ui_dialog.page1.before_display" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="ui_dialog.page1.before_row" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="ui_headershow.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="unlock_b.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="unlock_b.other" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="update_b.after_update" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="update_b.before_update" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="update_b.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="update_b.m_update" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="update_b.other" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="global.memo" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="filter.cs_ctrl" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="modify.before_show" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="delete.before_ask" cite_std="N" status="">
<![CDATA[]]>
</point>
  <section id="axmi170.b_fill" ver="1" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION axmi170_b_fill()
   {<Local define>}
   DEFINE p_wc2      STRING
   {</Local define>}
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_xmib_d.clear()    #g_xmib_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF axmi170_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE xmib002,xmib003 FROM xmib_t",   
                  " INNER JOIN xmia_t ON xmia001 = xmib001 ",
 
                  #"",
                  
                  "",
                  " WHERE xmibent=? AND xmib001=?"
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY xmib_t.xmib002"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      PREPARE axmi170_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR axmi170_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_xmia_m.xmia001
 
                                               
      FOREACH b_fill_cs INTO g_xmib_d[l_ac].xmib002,g_xmib_d[l_ac].xmib003
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec AND g_error_show = 1 THEN
            CALL cl_err( '', 9035, 1)
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_xmib_d.deleteElement(g_xmib_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE axmi170_pb
 
   
END FUNCTION
]]>
</section>
  <section id="axmi170.b_fill2" ver="1" status="" src="s">
<![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION axmi170_b_fill2(pi_idx)
   {<Local define>}
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   {</Local define>}
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL axmi170_detail_show()
   
END FUNCTION
]]>
</section>
  <section id="axmi170.browser_fill" ver="1" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION axmi170_browser_fill(ps_page_action)
   {<Local define>}
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   {</Local define>}
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_xmia_m.* TO NULL
   CALL g_xmib_d.clear()        
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "xmia001"
 
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      RETURN
   END IF
   
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE xmia001 ",
 
                        " FROM xmia_t ",
                              " ",
                              " LEFT JOIN xmib_t ON xmibent = xmiaent AND xmia001 = xmib001 ",
 
 
                              " LEFT JOIN xmial_t ON xmia001 = xmial001 AND xmial002 = '",g_lang,"' ", 
                              " ", 
                       " WHERE xmiaent = '" ||g_enterprise|| "' AND xmibent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2
 
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE xmia001 ",
 
                        " FROM xmia_t ", 
                              " ",
                              " LEFT JOIN xmial_t ON xmia001 = xmial001 AND xmial002 = '",g_lang,"' ",
                        "WHERE xmiaent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED
 
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
   
   #LET g_page_action = ps_page_action          # Keep Action
   
   IF ps_page_action = "F" OR
      ps_page_action = "P" OR
      ps_page_action = "N" OR
      ps_page_action = "L" THEN
      LET g_page_action = ps_page_action
   END IF
   
   CASE ps_page_action
      WHEN "F" 
         LET g_pagestart = 1
          
      WHEN "P"  
         LET g_pagestart = g_pagestart - g_max_browse
         IF g_pagestart < 1 THEN
            LET g_pagestart = 1
         END IF
          
      WHEN "N"  
         LET g_pagestart = g_pagestart + g_max_browse
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
            WHILE g_pagestart > g_browser_cnt 
               LET g_pagestart = g_pagestart - g_max_browse
            END WHILE
         END IF
      
      WHEN "L"  
         LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
         WHILE g_pagestart > g_browser_cnt 
            LET g_pagestart = g_pagestart - g_max_browse
         END WHILE
         
      WHEN '/'
         LET g_pagestart = g_jump
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = 1
         END IF
         
   END CASE
  
   #單身有輸入查詢條件且非null
   IF g_wc2 <> " 1=1" AND NOT cl_null(g_wc2) THEN 
      #依照xmia001,'' Browser欄位定義(取代原本bs_sql功能)
      LET l_sql_rank = "SELECT DISTINCT xmiastus,xmia001,'',DENSE_RANK() OVER(ORDER BY xmia001 ",g_order, 
          ") AS RANK ",
                        " FROM xmia_t ",
                              " ",
                              " LEFT JOIN xmib_t ON xmibent = xmiaent AND xmia001 = xmib001 ",
 
 
                              " LEFT JOIN xmial_t ON xmia001 = xmial001 AND xmial002 = '",g_lang,"' ",
                              " ",
                       " ",
                       " WHERE xmiaent = '" ||g_enterprise|| "' AND ",g_wc," AND ",g_wc2
   ELSE
      #單身無輸入資料
      LET l_sql_rank = "SELECT DISTINCT xmiastus,xmia001,'',DENSE_RANK() OVER(ORDER BY xmia001 ",g_order, 
          ") AS RANK ",
                       " FROM xmia_t ",
                            "  ",
                            "  LEFT JOIN xmial_t ON xmia001 = xmial001 AND xmial002 = '",g_lang,"' ",
                       " WHERE xmiaent = '" ||g_enterprise|| "' AND ", g_wc
   END IF
   
   #定義翻頁CURSOR
   LET g_sql= "SELECT xmiastus,xmia001,'' FROM (",l_sql_rank,") WHERE ",
              " RANK >= ",1," AND RANK<",1+g_max_browse,
              " ORDER BY ",l_searchcol," ",g_order
               
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
               
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_xmia001,g_browser[g_cnt].b_xmia001_desc 

      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_browser[g_cnt].b_xmia001
      CALL ap_ref_array2(g_ref_fields,"SELECT xmial003 FROM xmial_t WHERE xmialent='"||g_enterprise||"' AND xmial001=? AND xmial002='"||g_lang||"'", 
          "") RETURNING g_rtn_fields
      LET g_browser[g_cnt].b_xmia001_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_browser[g_cnt].b_xmia001_desc
 
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/inactive.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/active.png"
 
 
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
</section>
  <section id="axmi170.browser_search" ver="1" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION axmi170_browser_search(p_type)
   {<Local define>}
   DEFINE p_type LIKE type_t.chr10
   {</Local define>}
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY xmia001"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL axmi170_browser_fill("F")
   CALL ui.Interface.refresh()
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="axmi170.construct" ver="1" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION axmi170_construct()
 
   {<Local define>}
   DEFINE lc_qbe_sn   LIKE type_t.num10
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   {</Local define>}
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_xmia_m.* TO NULL
   CALL g_xmib_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON xmia001,xmial003,xmia002,xmia003,xmia004,xmia005,xmia006,xmia007,xmia008, 
          xmia009,xmiastus,xmia010,xmia011,xmia013,xmia014,xmia012,xmia015,xmiaownid,xmiaowndp,xmiacrtid, 
          xmiacrtdp,xmiacrtdt,xmiamodid,xmiamoddt
 
         BEFORE CONSTRUCT
#saki            CALL cl_qbe_init()
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<xmiaownid>>----
         #ON ACTION controlp INFIELD xmiaownid
         #   CALL q_common('xmia_t','xmiaownid',TRUE,FALSE,g_xmia_m.xmiaownid) RETURNING ls_return
         #   DISPLAY ls_return TO xmiaownid
         #   NEXT FIELD xmiaownid  
         #
         ##----<<xmiaowndp>>----
         #ON ACTION controlp INFIELD xmiaowndp
         #   CALL q_common('xmia_t','xmiaowndp',TRUE,FALSE,g_xmia_m.xmiaowndp) RETURNING ls_return
         #   DISPLAY ls_return TO xmiaowndp
         #   NEXT FIELD xmiaowndp
         #
         ##----<<xmiacrtid>>----
         #ON ACTION controlp INFIELD xmiacrtid
         #   CALL q_common('xmia_t','xmiacrtid',TRUE,FALSE,g_xmia_m.xmiacrtid) RETURNING ls_return
         #   DISPLAY ls_return TO xmiacrtid
         #   NEXT FIELD xmiacrtid
         #
         ##----<<xmiacrtdp>>----
         #ON ACTION controlp INFIELD xmiacrtdp
         #   CALL q_common('xmia_t','xmiacrtdp',TRUE,FALSE,g_xmia_m.xmiacrtdp) RETURNING ls_return
         #   DISPLAY ls_return TO xmiacrtdp
         #   NEXT FIELD xmiacrtdp
         #
         ##----<<xmiamodid>>----
         #ON ACTION controlp INFIELD xmiamodid
         #   CALL q_common('xmia_t','xmiamodid',TRUE,FALSE,g_xmia_m.xmiamodid) RETURNING ls_return
         #   DISPLAY ls_return TO xmiamodid
         #   NEXT FIELD xmiamodid
         #
         ##----<<xmiacnfid>>----
         ##ON ACTION controlp INFIELD xmiacnfid
         ##   CALL q_common('xmia_t','xmiacnfid',TRUE,FALSE,g_xmia_m.xmiacnfid) RETURNING ls_return
         ##   DISPLAY ls_return TO xmiacnfid
         ##   NEXT FIELD xmiacnfid
         #
         ##----<<xmiapstid>>----
         ##ON ACTION controlp INFIELD xmiapstid
         ##   CALL q_common('xmia_t','xmiapstid',TRUE,FALSE,g_xmia_m.xmiapstid) RETURNING ls_return
         ##   DISPLAY ls_return TO xmiapstid
         ##   NEXT FIELD xmiapstid
         
         ##----<<xmiacrtdt>>----
         AFTER FIELD xmiacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmiamoddt>>----
         AFTER FIELD xmiamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmiacnfdt>>----
         #AFTER FIELD xmiacnfdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmiapstdt>>----
         #AFTER FIELD xmiapstdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
            
         #一般欄位開窗相關處理    
         #---------------------------<  Master  >---------------------------
         #----<<xmia001>>----
         #Ctrlp:construct.c.xmia001
         ON ACTION controlp INFIELD xmia001
            #add-point:ON ACTION controlp INFIELD xmia001
            {<point name="construct.c.xmia001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmia001
            #add-point:BEFORE FIELD xmia001
            {<point name="construct.b.xmia001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmia001
            
            #add-point:AFTER FIELD xmia001
            {<point name="construct.a.xmia001" />}
            #END add-point
            
 
         #----<<xmial003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmial003
            #add-point:BEFORE FIELD xmial003
            {<point name="construct.b.xmial003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmial003
            
            #add-point:AFTER FIELD xmial003
            {<point name="construct.a.xmial003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmial003
         ON ACTION controlp INFIELD xmial003
            #add-point:ON ACTION controlp INFIELD xmial003
            {<point name="construct.c.xmial003" />}
            #END add-point
 
         #----<<xmia002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmia002
            #add-point:BEFORE FIELD xmia002
            {<point name="construct.b.xmia002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmia002
            
            #add-point:AFTER FIELD xmia002
            {<point name="construct.a.xmia002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmia002
         ON ACTION controlp INFIELD xmia002
            #add-point:ON ACTION controlp INFIELD xmia002
            {<point name="construct.c.xmia002" />}
            #END add-point
 
         #----<<xmia003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmia003
            #add-point:BEFORE FIELD xmia003
            {<point name="construct.b.xmia003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmia003
            
            #add-point:AFTER FIELD xmia003
            {<point name="construct.a.xmia003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmia003
         ON ACTION controlp INFIELD xmia003
            #add-point:ON ACTION controlp INFIELD xmia003
            {<point name="construct.c.xmia003" />}
            #END add-point
 
         #----<<xmia004>>----
         #Ctrlp:construct.c.xmia004
         ON ACTION controlp INFIELD xmia004
            #add-point:ON ACTION controlp INFIELD xmia004
            {<point name="construct.c.xmia004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmia004
            #add-point:BEFORE FIELD xmia004
            {<point name="construct.b.xmia004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmia004
            
            #add-point:AFTER FIELD xmia004
            {<point name="construct.a.xmia004" />}
            #END add-point
            
 
         #----<<xmia005>>----
         #Ctrlp:construct.c.xmia005
         ON ACTION controlp INFIELD xmia005
            #add-point:ON ACTION controlp INFIELD xmia005
            {<point name="construct.c.xmia005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmia005
            #add-point:BEFORE FIELD xmia005
            {<point name="construct.b.xmia005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmia005
            
            #add-point:AFTER FIELD xmia005
            {<point name="construct.a.xmia005" />}
            #END add-point
            
 
         #----<<xmia006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmia006
            #add-point:BEFORE FIELD xmia006
            {<point name="construct.b.xmia006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmia006
            
            #add-point:AFTER FIELD xmia006
            {<point name="construct.a.xmia006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmia006
         ON ACTION controlp INFIELD xmia006
            #add-point:ON ACTION controlp INFIELD xmia006
            {<point name="construct.c.xmia006" />}
            #END add-point
 
         #----<<xmia007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmia007
            #add-point:BEFORE FIELD xmia007
            {<point name="construct.b.xmia007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmia007
            
            #add-point:AFTER FIELD xmia007
            {<point name="construct.a.xmia007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmia007
         ON ACTION controlp INFIELD xmia007
            #add-point:ON ACTION controlp INFIELD xmia007
            {<point name="construct.c.xmia007" />}
            #END add-point
 
         #----<<xmia008>>----
         #Ctrlp:construct.c.xmia008
         ON ACTION controlp INFIELD xmia008
            #add-point:ON ACTION controlp INFIELD xmia008
            {<point name="construct.c.xmia008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmia008
            #add-point:BEFORE FIELD xmia008
            {<point name="construct.b.xmia008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmia008
            
            #add-point:AFTER FIELD xmia008
            {<point name="construct.a.xmia008" />}
            #END add-point
            
 
         #----<<xmia009>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmia009
            #add-point:BEFORE FIELD xmia009
            {<point name="construct.b.xmia009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmia009
            
            #add-point:AFTER FIELD xmia009
            {<point name="construct.a.xmia009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmia009
         ON ACTION controlp INFIELD xmia009
            #add-point:ON ACTION controlp INFIELD xmia009
            {<point name="construct.c.xmia009" />}
            #END add-point
 
         #----<<xmiastus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmiastus
            #add-point:BEFORE FIELD xmiastus
            {<point name="construct.b.xmiastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmiastus
            
            #add-point:AFTER FIELD xmiastus
            {<point name="construct.a.xmiastus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmiastus
         ON ACTION controlp INFIELD xmiastus
            #add-point:ON ACTION controlp INFIELD xmiastus
            {<point name="construct.c.xmiastus" />}
            #END add-point
 
         #----<<xmia010>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmia010
            #add-point:BEFORE FIELD xmia010
            {<point name="construct.b.xmia010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmia010
            
            #add-point:AFTER FIELD xmia010
            {<point name="construct.a.xmia010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmia010
         ON ACTION controlp INFIELD xmia010
            #add-point:ON ACTION controlp INFIELD xmia010
            {<point name="construct.c.xmia010" />}
            #END add-point
 
         #----<<xmia011>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmia011
            #add-point:BEFORE FIELD xmia011
            {<point name="construct.b.xmia011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmia011
            
            #add-point:AFTER FIELD xmia011
            {<point name="construct.a.xmia011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmia011
         ON ACTION controlp INFIELD xmia011
            #add-point:ON ACTION controlp INFIELD xmia011
            {<point name="construct.c.xmia011" />}
            #END add-point
 
         #----<<xmia013>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmia013
            #add-point:BEFORE FIELD xmia013
            {<point name="construct.b.xmia013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmia013
            
            #add-point:AFTER FIELD xmia013
            {<point name="construct.a.xmia013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmia013
         ON ACTION controlp INFIELD xmia013
            #add-point:ON ACTION controlp INFIELD xmia013
            {<point name="construct.c.xmia013" />}
            #END add-point
 
         #----<<xmia014>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmia014
            #add-point:BEFORE FIELD xmia014
            {<point name="construct.b.xmia014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmia014
            
            #add-point:AFTER FIELD xmia014
            {<point name="construct.a.xmia014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmia014
         ON ACTION controlp INFIELD xmia014
            #add-point:ON ACTION controlp INFIELD xmia014
            {<point name="construct.c.xmia014" />}
            #END add-point
 
         #----<<xmia012>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmia012
            #add-point:BEFORE FIELD xmia012
            {<point name="construct.b.xmia012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmia012
            
            #add-point:AFTER FIELD xmia012
            {<point name="construct.a.xmia012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmia012
         ON ACTION controlp INFIELD xmia012
            #add-point:ON ACTION controlp INFIELD xmia012
            {<point name="construct.c.xmia012" />}
            #END add-point
 
         #----<<xmia015>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmia015
            #add-point:BEFORE FIELD xmia015
            {<point name="construct.b.xmia015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmia015
            
            #add-point:AFTER FIELD xmia015
            {<point name="construct.a.xmia015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmia015
         ON ACTION controlp INFIELD xmia015
            #add-point:ON ACTION controlp INFIELD xmia015
            {<point name="construct.c.xmia015" />}
            #END add-point
 
         #----<<xmiaownid>>----
         #Ctrlp:construct.c.xmiaownid
         ON ACTION controlp INFIELD xmiaownid
            #add-point:ON ACTION controlp INFIELD xmiaownid
            {<point name="construct.c.xmiaownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmiaownid
            #add-point:BEFORE FIELD xmiaownid
            {<point name="construct.b.xmiaownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmiaownid
            
            #add-point:AFTER FIELD xmiaownid
            {<point name="construct.a.xmiaownid" />}
            #END add-point
            
 
         #----<<xmiaowndp>>----
         #Ctrlp:construct.c.xmiaowndp
         ON ACTION controlp INFIELD xmiaowndp
            #add-point:ON ACTION controlp INFIELD xmiaowndp
            {<point name="construct.c.xmiaowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmiaowndp
            #add-point:BEFORE FIELD xmiaowndp
            {<point name="construct.b.xmiaowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmiaowndp
            
            #add-point:AFTER FIELD xmiaowndp
            {<point name="construct.a.xmiaowndp" />}
            #END add-point
            
 
         #----<<xmiacrtid>>----
         #Ctrlp:construct.c.xmiacrtid
         ON ACTION controlp INFIELD xmiacrtid
            #add-point:ON ACTION controlp INFIELD xmiacrtid
            {<point name="construct.c.xmiacrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmiacrtid
            #add-point:BEFORE FIELD xmiacrtid
            {<point name="construct.b.xmiacrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmiacrtid
            
            #add-point:AFTER FIELD xmiacrtid
            {<point name="construct.a.xmiacrtid" />}
            #END add-point
            
 
         #----<<xmiacrtdp>>----
         #Ctrlp:construct.c.xmiacrtdp
         ON ACTION controlp INFIELD xmiacrtdp
            #add-point:ON ACTION controlp INFIELD xmiacrtdp
            {<point name="construct.c.xmiacrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmiacrtdp
            #add-point:BEFORE FIELD xmiacrtdp
            {<point name="construct.b.xmiacrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmiacrtdp
            
            #add-point:AFTER FIELD xmiacrtdp
            {<point name="construct.a.xmiacrtdp" />}
            #END add-point
            
 
         #----<<xmiacrtdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmiacrtdt
            #add-point:BEFORE FIELD xmiacrtdt
            {<point name="construct.b.xmiacrtdt" />}
            #END add-point
 
         #----<<xmiamodid>>----
         #Ctrlp:construct.c.xmiamodid
         ON ACTION controlp INFIELD xmiamodid
            #add-point:ON ACTION controlp INFIELD xmiamodid
            {<point name="construct.c.xmiamodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmiamodid
            #add-point:BEFORE FIELD xmiamodid
            {<point name="construct.b.xmiamodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmiamodid
            
            #add-point:AFTER FIELD xmiamodid
            {<point name="construct.a.xmiamodid" />}
            #END add-point
            
 
         #----<<xmiamoddt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmiamoddt
            #add-point:BEFORE FIELD xmiamoddt
            {<point name="construct.b.xmiamoddt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON xmib002,xmib003
           FROM s_detail1[1].xmib002,s_detail1[1].xmib003
                      
         BEFORE CONSTRUCT
#saki            CALL cl_qbe_display_condition(lc_qbe_sn)
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
       #---------------------<  Detail: page1  >---------------------
         #----<<xmib002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmib002
            #add-point:BEFORE FIELD xmib002
            {<point name="construct.b.page1.xmib002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmib002
            
            #add-point:AFTER FIELD xmib002
            {<point name="construct.a.page1.xmib002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmib002
         ON ACTION controlp INFIELD xmib002
            #add-point:ON ACTION controlp INFIELD xmib002
            {<point name="construct.c.page1.xmib002" />}
            #END add-point
 
         #----<<xmib003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmib003
            #add-point:BEFORE FIELD xmib003
            {<point name="construct.b.page1.xmib003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmib003
            
            #add-point:AFTER FIELD xmib003
            {<point name="construct.a.page1.xmib003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmib003
         ON ACTION controlp INFIELD xmib003
            #add-point:ON ACTION controlp INFIELD xmib003
            {<point name="construct.c.page1.xmib003" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      ON ACTION qbe_select     #條件查詢
#saki         CALL cl_qbe_list() RETURNING lc_qbe_sn
#saki         CALL cl_qbe_display_condition(lc_qbe_sn)
 
      ON ACTION qbe_save       #條件儲存
#saki         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
</section>
  <section id="axmi170.default_search" ver="1" status="" src="s">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION axmi170_default_search()
   {<Local define>}
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   {</Local define>}
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " xmia001 = '", g_argv[1], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
   ELSE
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="axmi170.delete" ver="1" status="" src="s">
<![CDATA[#+ 資料刪除
PRIVATE FUNCTION axmi170_delete()
   {<Local define>}
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_xmia_m.xmia001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
    SELECT UNIQUE xmia001,xmia002,xmia003,xmia004,xmia005,xmia006,xmia007,xmia008,xmia009,xmiastus,xmia010, 
        xmia011,xmia013,xmia014,xmia012,xmia015,xmiaownid,xmiaowndp,xmiacrtid,xmiacrtdp,xmiacrtdt,xmiamodid, 
        xmiamoddt
 INTO g_xmia_m.xmia001,g_xmia_m.xmia002,g_xmia_m.xmia003,g_xmia_m.xmia004,g_xmia_m.xmia005,g_xmia_m.xmia006, 
     g_xmia_m.xmia007,g_xmia_m.xmia008,g_xmia_m.xmia009,g_xmia_m.xmiastus,g_xmia_m.xmia010,g_xmia_m.xmia011, 
     g_xmia_m.xmia013,g_xmia_m.xmia014,g_xmia_m.xmia012,g_xmia_m.xmia015,g_xmia_m.xmiaownid,g_xmia_m.xmiaowndp, 
     g_xmia_m.xmiacrtid,g_xmia_m.xmiacrtdp,g_xmia_m.xmiacrtdt,g_xmia_m.xmiamodid,g_xmia_m.xmiamoddt
 FROM xmia_t
 WHERE xmiaent = g_enterprise AND xmia001 = g_xmia_m.xmia001
   
   LET g_master_multi_table_t.xmial001 = g_xmia_m.xmia001
LET g_master_multi_table_t.xmial003 = g_xmia_m.xmial003
 
 
   CALL axmi170_show()
   
   CALL s_transaction_begin()
 
   OPEN axmi170_cl USING g_enterprise,g_xmia_m.xmia001
 
   IF STATUS THEN
      CALL cl_err("OPEN axmi170_cl:", STATUS, 1)
      CLOSE axmi170_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   FETCH axmi170_cl INTO g_xmia_m.xmia001,g_xmia_m.xmial003,g_xmia_m.xmia002,g_xmia_m.xmia003,g_xmia_m.xmia004, 
       g_xmia_m.xmia004_desc,g_xmia_m.xmia005,g_xmia_m.xmia005_desc,g_xmia_m.xmia006,g_xmia_m.xmia007, 
       g_xmia_m.xmia008,g_xmia_m.xmia008_desc,g_xmia_m.xmia009,g_xmia_m.xmiastus,g_xmia_m.xmia010,g_xmia_m.xmia011, 
       g_xmia_m.xmia013,g_xmia_m.xmia014,g_xmia_m.xmia012,g_xmia_m.xmia015,g_xmia_m.xmiaownid,g_xmia_m.xmiaownid_desc, 
       g_xmia_m.xmiaowndp,g_xmia_m.xmiaowndp_desc,g_xmia_m.xmiacrtid,g_xmia_m.xmiacrtid_desc,g_xmia_m.xmiacrtdp, 
       g_xmia_m.xmiacrtdp_desc,g_xmia_m.xmiacrtdt,g_xmia_m.xmiamodid,g_xmia_m.xmiamodid_desc,g_xmia_m.xmiamoddt  
                    #鎖住將被更改或取消的資料
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_xmia_m.xmia001,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #IF NOT cl_ask_delete() THEN             #確認一下
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      INITIALIZE g_doc.* TO NULL         
      LET g_doc.column1 = "xmia001"       
      LET g_doc.value1 = g_xmia_m.xmia001     
      CALL cl_del_doc()   
  
      #資料備份
      LET g_xmia001_t = g_xmia_m.xmia001
 
 
      DELETE FROM xmia_t
       WHERE xmiaent = g_enterprise AND xmia001 = g_xmia_m.xmia001
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_xmia_m.xmia001,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM xmib_t
       WHERE xmibent = g_enterprise AND xmib001 = g_xmia_m.xmia001
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("xmib_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
                                                               
      CLEAR FORM
      CALL g_xmib_d.clear() 
 
     
      CALL axmi170_ui_browser_refresh()  
      CALL axmi170_ui_headershow()  
      CALL axmi170_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL axmi170_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL axmi170_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_master_multi_table_t.xmial001
   LET l_field_keys[01] = 'xmial001'
   LET l_var_keys_bak[02] = g_dlang
   LET l_field_keys[02] = 'xmial002'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'xmial_t')
 
      
      #單身多語言刪除
      
 
 
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE axmi170_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_xmia_m.xmia001,'D')
    
END FUNCTION
]]>
</section>
  <section id="axmi170.delete_b" ver="1" status="" src="s">
<![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION axmi170_delete_b(ps_table,ps_keys_bak,ps_page)
   {<Local define>}
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM xmib_t
       WHERE xmibent = g_enterprise AND
         xmib001 = ps_keys_bak[1] AND xmib002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="axmi170.description" ver="1" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(版次:1) Build-000000
#+ 
#+ Filename...: axmi170
#+ Description: 銷售預測編號設定作業
#+ Creator....: 01996(2014/03/05)
#+ Modifier...: 01996(2014/03/05)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="axmi170.detail_reproduce" ver="1" status="" src="s">
<![CDATA[#+ 單身自動複製
PRIVATE FUNCTION axmi170_detail_reproduce()
   {<Local define>}
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE xmib_t.*
 
 
   {</Local define>}
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE axmi170_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE axmi170_detail AS ",
                "SELECT * FROM xmib_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO axmi170_detail SELECT * FROM xmib_t 
                                         WHERE xmibent = g_enterprise AND xmib001 = g_xmia001_t
 
   
   #將key修正為調整後   
   UPDATE axmi170_detail 
      #更新key欄位
      SET xmib001 = g_xmia_m.xmia001
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO xmib_t SELECT * FROM axmi170_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmi170_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_xmia001_t = g_xmia_m.xmia001
 
   
   DROP TABLE axmi170_detail
   
END FUNCTION
]]>
</section>
  <section id="axmi170.detail_show" ver="1" status="" src="s">
<![CDATA[#+ 單身reference detail_show
PRIVATE FUNCTION axmi170_detail_show()
   {<Local define>}
   DEFINE l_ac_t    LIKE type_t.num5
   {</Local define>}
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   LET l_ac_t = l_ac
 
   LET l_ac = l_ac_t
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="axmi170.fetch" ver="1" status="" src="s">
<![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION axmi170_fetch(p_flag)
   {<Local define>}
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   {</Local define>}
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_xmia_m.xmia001 = g_browser[g_current_idx].b_xmia001
 
   
   #重讀DB,因TEMP有不被更新特性
    SELECT UNIQUE xmia001,xmia002,xmia003,xmia004,xmia005,xmia006,xmia007,xmia008,xmia009,xmiastus,xmia010, 
        xmia011,xmia013,xmia014,xmia012,xmia015,xmiaownid,xmiaowndp,xmiacrtid,xmiacrtdp,xmiacrtdt,xmiamodid, 
        xmiamoddt
 INTO g_xmia_m.xmia001,g_xmia_m.xmia002,g_xmia_m.xmia003,g_xmia_m.xmia004,g_xmia_m.xmia005,g_xmia_m.xmia006, 
     g_xmia_m.xmia007,g_xmia_m.xmia008,g_xmia_m.xmia009,g_xmia_m.xmiastus,g_xmia_m.xmia010,g_xmia_m.xmia011, 
     g_xmia_m.xmia013,g_xmia_m.xmia014,g_xmia_m.xmia012,g_xmia_m.xmia015,g_xmia_m.xmiaownid,g_xmia_m.xmiaowndp, 
     g_xmia_m.xmiacrtid,g_xmia_m.xmiacrtdp,g_xmia_m.xmiacrtdt,g_xmia_m.xmiamodid,g_xmia_m.xmiamoddt
 FROM xmia_t
 WHERE xmiaent = g_enterprise AND xmia001 = g_xmia_m.xmia001
   IF SQLCA.sqlcode THEN
      CALL cl_err("xmia_t",SQLCA.sqlcode,1)
      INITIALIZE g_xmia_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL axmi170_show()
 
END FUNCTION
]]>
</section>
  <section id="axmi170.fill_chk" ver="1" status="" src="s">
<![CDATA[#+ 單身填充確認
PRIVATE FUNCTION axmi170_fill_chk(ps_idx)
   {<Local define>}
   DEFINE ps_idx        LIKE type_t.chr10
   {</Local define>}
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段define
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   RETURN FALSE
 
END FUNCTION
]]>
</section>
  <section id="axmi170.filter" ver="1" status="" src="s">
<![CDATA[#+ filter過濾功能
PRIVATE FUNCTION axmi170_filter()
   {<Local define>}
   {</Local define>}
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON xmia001
                          FROM s_browse[1].b_xmia001
 
         BEFORE CONSTRUCT
#saki            CALL cl_qbe_init()
               DISPLAY axmi170_filter_parser('xmia001') TO s_browse[1].b_xmia001
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL axmi170_filter_show('xmia001')
 
END FUNCTION
]]>
</section>
  <section id="axmi170.filter_parser" ver="1" status="" src="s">
<![CDATA[#+ filter過濾功能
PRIVATE FUNCTION axmi170_filter_parser(ps_field)
   {<Local define>}
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   {</Local define>}
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
</section>
  <section id="axmi170.filter_show" ver="1" status="" src="s">
<![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION axmi170_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
     
   LET ls_name = "formonly.b_", ps_field
   
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
   
   #顯示資料組合
   LET ls_condition = axmi170_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
   
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
   
END FUNCTION
]]>
</section>
  <section id="axmi170.global" ver="1" status="" src="s">
<![CDATA[{<point name="global.memo" />}
    
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
{<Module define>}
 
#單頭 type 宣告
PRIVATE type type_g_xmia_m        RECORD
       xmia001 LIKE xmia_t.xmia001, 
   xmial003 LIKE xmial_t.xmial003, 
   xmia002 LIKE xmia_t.xmia002, 
   xmia003 LIKE xmia_t.xmia003, 
   xmia004 LIKE xmia_t.xmia004, 
   xmia004_desc LIKE type_t.chr80, 
   xmia005 LIKE xmia_t.xmia005, 
   xmia005_desc LIKE type_t.chr80, 
   xmia006 LIKE xmia_t.xmia006, 
   xmia007 LIKE xmia_t.xmia007, 
   xmia008 LIKE xmia_t.xmia008, 
   xmia008_desc LIKE type_t.chr80, 
   xmia009 LIKE xmia_t.xmia009, 
   xmiastus LIKE xmia_t.xmiastus, 
   xmia010 LIKE xmia_t.xmia010, 
   xmia011 LIKE xmia_t.xmia011, 
   xmia013 LIKE xmia_t.xmia013, 
   xmia014 LIKE xmia_t.xmia014, 
   xmia012 LIKE xmia_t.xmia012, 
   xmia015 LIKE xmia_t.xmia015, 
   xmiaownid LIKE xmia_t.xmiaownid, 
   xmiaownid_desc LIKE type_t.chr80, 
   xmiaowndp LIKE xmia_t.xmiaowndp, 
   xmiaowndp_desc LIKE type_t.chr80, 
   xmiacrtid LIKE xmia_t.xmiacrtid, 
   xmiacrtid_desc LIKE type_t.chr80, 
   xmiacrtdp LIKE xmia_t.xmiacrtdp, 
   xmiacrtdp_desc LIKE type_t.chr80, 
   xmiacrtdt DATETIME YEAR TO SECOND, 
   xmiamodid LIKE xmia_t.xmiamodid, 
   xmiamodid_desc LIKE type_t.chr80, 
   xmiamoddt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_xmib_d        RECORD
       xmib002 LIKE xmib_t.xmib002, 
   xmib003 LIKE xmib_t.xmib003
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_xmia_m          type_g_xmia_m
DEFINE g_xmia_m_t        type_g_xmia_m
 
   DEFINE g_xmia001_t LIKE xmia_t.xmia001
 
 
DEFINE g_xmib_d          DYNAMIC ARRAY OF type_g_xmib_d
DEFINE g_xmib_d_t        type_g_xmib_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_xmia001 LIKE xmia_t.xmia001,
   b_xmia001_desc LIKE type_t.chr80
         #,rank           LIKE type_t.num10
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_xmia001 LIKE xmia_t.xmia001,
   b_xmia001_desc LIKE type_t.chr80
         #,rank           LIKE type_t.num10
      END RECORD 
      
DEFINE g_master_multi_table_t    RECORD
      xmial001 LIKE xmial_t.xmial001,
      xmial003 LIKE xmial_t.xmial003
      END RECORD
#無單身append欄位定義
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
  
{</Module define>}
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="axmi170.idx_chk" ver="1" status="" src="s">
<![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION axmi170_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_xmib_d.getLength() THEN
         LET g_detail_idx = g_xmib_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmib_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmib_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="axmi170.init" ver="1" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION axmi170_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
      CALL cl_set_combo_scc_part('xmiastus','17','N,Y')
 
      CALL cl_set_combo_scc('xmia006','40') 
   CALL cl_set_combo_scc('xmia007','3012') 
   CALL cl_set_combo_scc('xmib003','3011') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL axmi170_default_search()
    
END FUNCTION
]]>
</section>
  <section id="axmi170.input" ver="1" status="" src="s">
<![CDATA[#+ 資料輸入
PRIVATE FUNCTION axmi170_input(p_cmd)
   {<Local define>}
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   {</Local define>}
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT xmib002,xmib003 FROM xmib_t WHERE xmibent=? AND xmib001=? AND xmib002=?  
       FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE axmi170_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL axmi170_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL axmi170_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_xmia_m.xmia001,g_xmia_m.xmial003,g_xmia_m.xmia002,g_xmia_m.xmia003,g_xmia_m.xmia004, 
       g_xmia_m.xmia005,g_xmia_m.xmia006,g_xmia_m.xmia007,g_xmia_m.xmia008,g_xmia_m.xmia009,g_xmia_m.xmiastus, 
       g_xmia_m.xmia010,g_xmia_m.xmia011,g_xmia_m.xmia013,g_xmia_m.xmia014,g_xmia_m.xmia012,g_xmia_m.xmia015 

   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
</section>
  <section id="axmi170.input.body" ver="1" status="" src="s">
<![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_xmib_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xmib_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axmi170_b_fill()
            LET g_rec_b = g_xmib_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN axmi170_cl USING g_enterprise,g_xmia_m.xmia001
 
            IF STATUS THEN
               CALL cl_err("OPEN axmi170_cl:", STATUS, 1)
               CLOSE axmi170_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_xmib_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xmib_d[l_ac].xmib002 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xmib_d_t.* = g_xmib_d[l_ac].*  #BACKUP
               CALL axmi170_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL axmi170_set_no_entry_b(l_cmd)
               IF NOT axmi170_lock_b("xmib_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axmi170_bcl INTO g_xmib_d[l_ac].xmib002,g_xmib_d[l_ac].xmib003
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_xmib_d_t.xmib002,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL axmi170_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmib_d[l_ac].* TO NULL 
            
            LET g_xmib_d_t.* = g_xmib_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axmi170_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL axmi170_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmib_d[li_reproduce_target].* = g_xmib_d[li_reproduce].*
 
               LET g_xmib_d[li_reproduce_target].xmib002 = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM xmib_t 
             WHERE xmibent = g_enterprise AND xmib001 = g_xmia_m.xmia001
 
               AND xmib002 = g_xmib_d[l_ac].xmib002
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmia_m.xmia001
               LET gs_keys[2] = g_xmib_d[g_detail_idx].xmib002
               CALL axmi170_insert_b('xmib_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_xmib_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("xmib_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axmi170_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_xmib_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_xmib_d.deleteElement(l_ac)
               NEXT FIELD xmib002
            END IF
         
            IF g_xmib_d[l_ac].xmib002 IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM xmib_t
                WHERE xmibent = g_enterprise AND xmib001 = g_xmia_m.xmia001 AND
 
                      xmib002 = g_xmib_d_t.xmib002
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("xmib_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE axmi170_bcl
               LET l_count = g_xmib_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmia_m.xmia001
               LET gs_keys[2] = g_xmib_d[g_detail_idx].xmib002
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL axmi170_delete_b('xmib_t',gs_keys,"'1'")
 
         #---------------------<  Detail: page1  >---------------------
         #----<<xmib002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmib002
            #add-point:BEFORE FIELD xmib002
            {<point name="input.b.page1.xmib002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmib002
            
            #add-point:AFTER FIELD xmib002
            {<point name="input.a.page1.xmib002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmib002
            #add-point:ON CHANGE xmib002
            {<point name="input.g.page1.xmib002" />}
            #END add-point
 
         #----<<xmib003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmib003
            #add-point:BEFORE FIELD xmib003
            {<point name="input.b.page1.xmib003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmib003
            
            #add-point:AFTER FIELD xmib003
            {<point name="input.a.page1.xmib003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmib003
            #add-point:ON CHANGE xmib003
            {<point name="input.g.page1.xmib003" />}
            #END add-point
 
 
         #---------------------<  Detail: page1  >---------------------
         #----<<xmib002>>----
         #Ctrlp:input.c.page1.xmib002
         ON ACTION controlp INFIELD xmib002
            #add-point:ON ACTION controlp INFIELD xmib002
            {<point name="input.c.page1.xmib002" />}
            #END add-point
 
         #----<<xmib003>>----
         #Ctrlp:input.c.page1.xmib003
         ON ACTION controlp INFIELD xmib003
            #add-point:ON ACTION controlp INFIELD xmib003
            {<point name="input.c.page1.xmib003" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_xmib_d[l_ac].* = g_xmib_d_t.*
               CLOSE axmi170_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_xmib_d[l_ac].xmib002,-263,1)
               LET g_xmib_d[l_ac].* = g_xmib_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE xmib_t SET (xmib001,xmib002,xmib003) = (g_xmia_m.xmia001,g_xmib_d[l_ac].xmib002, 
                   g_xmib_d[l_ac].xmib003)
                WHERE xmibent = g_enterprise AND xmib001 = g_xmia_m.xmia001 
 
                  AND xmib002 = g_xmib_d_t.xmib002 #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("xmib_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_xmib_d[l_ac].* = g_xmib_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("xmib_t",SQLCA.sqlcode,1)
                     LET g_xmib_d[l_ac].* = g_xmib_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmia_m.xmia001
               LET gs_keys_bak[1] = g_xmia001_t
               LET gs_keys[2] = g_xmib_d[g_detail_idx].xmib002
               LET gs_keys_bak[2] = g_xmib_d_t.xmib002
               CALL axmi170_update_b('xmib_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL axmi170_unlock_b("xmib_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_xmib_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_xmib_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      
 
      
 
      
]]>
</section>
  <section id="axmi170.input.head" ver="1" status="" src="s">
<![CDATA[      #單頭段
      INPUT BY NAME g_xmia_m.xmia001,g_xmia_m.xmial003,g_xmia_m.xmia002,g_xmia_m.xmia003,g_xmia_m.xmia004, 
          g_xmia_m.xmia005,g_xmia_m.xmia006,g_xmia_m.xmia007,g_xmia_m.xmia008,g_xmia_m.xmia009,g_xmia_m.xmiastus, 
          g_xmia_m.xmia010,g_xmia_m.xmia011,g_xmia_m.xmia013,g_xmia_m.xmia014,g_xmia_m.xmia012,g_xmia_m.xmia015  

         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
 
         ON ACTION update_item
            #add-point:ON ACTION update_item
            {<point name="input.master_input.update_item" />}
            #END add-point
 
     
         BEFORE INPUT
            LET g_master_multi_table_t.xmial001 = g_xmia_m.xmia001
LET g_master_multi_table_t.xmial003 = g_xmia_m.xmial003
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.xmial001 = ''
LET g_master_multi_table_t.xmial003 = ''
 
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
         #---------------------------<  Master  >---------------------------
         #----<<xmia001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmia001
            #add-point:BEFORE FIELD xmia001
            {<point name="input.b.xmia001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmia001
            
            #add-point:AFTER FIELD xmia001
            {<point name="input.a.xmia001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmia001
            #add-point:ON CHANGE xmia001
            {<point name="input.g.xmia001" />}
            #END add-point
 
         #----<<xmial003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmial003
            #add-point:BEFORE FIELD xmial003
            {<point name="input.b.xmial003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmial003
            
            #add-point:AFTER FIELD xmial003
            {<point name="input.a.xmial003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmial003
            #add-point:ON CHANGE xmial003
            {<point name="input.g.xmial003" />}
            #END add-point
 
         #----<<xmia002>>----
         #此段落由子樣板a02產生
         AFTER FIELD xmia002
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_xmia_m.xmia002,"0.000","1","24.000","1","azz-00087",1) THEN
               NEXT FIELD xmia002
            END IF
 
 
            #add-point:AFTER FIELD xmia002
            {<point name="input.a.xmia002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmia002
            #add-point:BEFORE FIELD xmia002
            {<point name="input.b.xmia002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmia002
            #add-point:ON CHANGE xmia002
            {<point name="input.g.xmia002" />}
            #END add-point
 
         #----<<xmia003>>----
         #此段落由子樣板a02產生
         AFTER FIELD xmia003
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_xmia_m.xmia003,"1.000","1","31.000","1","azz-00087",1) THEN
               NEXT FIELD xmia003
            END IF
 
 
            #add-point:AFTER FIELD xmia003
            {<point name="input.a.xmia003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmia003
            #add-point:BEFORE FIELD xmia003
            {<point name="input.b.xmia003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmia003
            #add-point:ON CHANGE xmia003
            {<point name="input.g.xmia003" />}
            #END add-point
 
         #----<<xmia004>>----
         #此段落由子樣板a02產生
         AFTER FIELD xmia004
            
            #add-point:AFTER FIELD xmia004
            {<point name="input.a.xmia004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmia004
            #add-point:BEFORE FIELD xmia004
            {<point name="input.b.xmia004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmia004
            #add-point:ON CHANGE xmia004
            {<point name="input.g.xmia004" />}
            #END add-point
 
         #----<<xmia005>>----
         #此段落由子樣板a02產生
         AFTER FIELD xmia005
            
            #add-point:AFTER FIELD xmia005
            {<point name="input.a.xmia005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmia005
            #add-point:BEFORE FIELD xmia005
            {<point name="input.b.xmia005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmia005
            #add-point:ON CHANGE xmia005
            {<point name="input.g.xmia005" />}
            #END add-point
 
         #----<<xmia006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmia006
            #add-point:BEFORE FIELD xmia006
            {<point name="input.b.xmia006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmia006
            
            #add-point:AFTER FIELD xmia006
            {<point name="input.a.xmia006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmia006
            #add-point:ON CHANGE xmia006
            {<point name="input.g.xmia006" />}
            #END add-point
 
         #----<<xmia007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmia007
            #add-point:BEFORE FIELD xmia007
            {<point name="input.b.xmia007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmia007
            
            #add-point:AFTER FIELD xmia007
            {<point name="input.a.xmia007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmia007
            #add-point:ON CHANGE xmia007
            {<point name="input.g.xmia007" />}
            #END add-point
 
         #----<<xmia008>>----
         #此段落由子樣板a02產生
         AFTER FIELD xmia008
            
            #add-point:AFTER FIELD xmia008
            {<point name="input.a.xmia008" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmia008
            #add-point:BEFORE FIELD xmia008
            {<point name="input.b.xmia008" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmia008
            #add-point:ON CHANGE xmia008
            {<point name="input.g.xmia008" />}
            #END add-point
 
         #----<<xmia009>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmia009
            #add-point:BEFORE FIELD xmia009
            {<point name="input.b.xmia009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmia009
            
            #add-point:AFTER FIELD xmia009
            {<point name="input.a.xmia009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmia009
            #add-point:ON CHANGE xmia009
            {<point name="input.g.xmia009" />}
            #END add-point
 
         #----<<xmiastus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmiastus
            #add-point:BEFORE FIELD xmiastus
            {<point name="input.b.xmiastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmiastus
            
            #add-point:AFTER FIELD xmiastus
            {<point name="input.a.xmiastus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmiastus
            #add-point:ON CHANGE xmiastus
            {<point name="input.g.xmiastus" />}
            #END add-point
 
         #----<<xmia010>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmia010
            #add-point:BEFORE FIELD xmia010
            {<point name="input.b.xmia010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmia010
            
            #add-point:AFTER FIELD xmia010
            {<point name="input.a.xmia010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmia010
            #add-point:ON CHANGE xmia010
            {<point name="input.g.xmia010" />}
            #END add-point
 
         #----<<xmia011>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmia011
            #add-point:BEFORE FIELD xmia011
            {<point name="input.b.xmia011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmia011
            
            #add-point:AFTER FIELD xmia011
            {<point name="input.a.xmia011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmia011
            #add-point:ON CHANGE xmia011
            {<point name="input.g.xmia011" />}
            #END add-point
 
         #----<<xmia013>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmia013
            #add-point:BEFORE FIELD xmia013
            {<point name="input.b.xmia013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmia013
            
            #add-point:AFTER FIELD xmia013
            {<point name="input.a.xmia013" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmia013
            #add-point:ON CHANGE xmia013
            {<point name="input.g.xmia013" />}
            #END add-point
 
         #----<<xmia014>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmia014
            #add-point:BEFORE FIELD xmia014
            {<point name="input.b.xmia014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmia014
            
            #add-point:AFTER FIELD xmia014
            {<point name="input.a.xmia014" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmia014
            #add-point:ON CHANGE xmia014
            {<point name="input.g.xmia014" />}
            #END add-point
 
         #----<<xmia012>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmia012
            #add-point:BEFORE FIELD xmia012
            {<point name="input.b.xmia012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmia012
            
            #add-point:AFTER FIELD xmia012
            {<point name="input.a.xmia012" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmia012
            #add-point:ON CHANGE xmia012
            {<point name="input.g.xmia012" />}
            #END add-point
 
         #----<<xmia015>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmia015
            #add-point:BEFORE FIELD xmia015
            {<point name="input.b.xmia015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmia015
            
            #add-point:AFTER FIELD xmia015
            {<point name="input.a.xmia015" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmia015
            #add-point:ON CHANGE xmia015
            {<point name="input.g.xmia015" />}
            #END add-point
 
         #----<<xmiaownid>>----
         #----<<xmiaowndp>>----
         #----<<xmiacrtid>>----
         #----<<xmiacrtdp>>----
         #----<<xmiacrtdt>>----
         #----<<xmiamodid>>----
         #----<<xmiamoddt>>----
 #欄位檢查
         #---------------------------<  Master  >---------------------------
         #----<<xmia001>>----
         #Ctrlp:input.c.xmia001
         ON ACTION controlp INFIELD xmia001
            #add-point:ON ACTION controlp INFIELD xmia001
            {<point name="input.c.xmia001" />}
            #END add-point
 
         #----<<xmial003>>----
         #Ctrlp:input.c.xmial003
         ON ACTION controlp INFIELD xmial003
            #add-point:ON ACTION controlp INFIELD xmial003
            {<point name="input.c.xmial003" />}
            #END add-point
 
         #----<<xmia002>>----
         #Ctrlp:input.c.xmia002
         ON ACTION controlp INFIELD xmia002
            #add-point:ON ACTION controlp INFIELD xmia002
            {<point name="input.c.xmia002" />}
            #END add-point
 
         #----<<xmia003>>----
         #Ctrlp:input.c.xmia003
         ON ACTION controlp INFIELD xmia003
            #add-point:ON ACTION controlp INFIELD xmia003
            {<point name="input.c.xmia003" />}
            #END add-point
 
         #----<<xmia004>>----
         #Ctrlp:input.c.xmia004
         ON ACTION controlp INFIELD xmia004
            #add-point:ON ACTION controlp INFIELD xmia004
            {<point name="input.c.xmia004" />}
            #END add-point
 
         #----<<xmia005>>----
         #Ctrlp:input.c.xmia005
         ON ACTION controlp INFIELD xmia005
            #add-point:ON ACTION controlp INFIELD xmia005
            {<point name="input.c.xmia005" />}
            #END add-point
 
         #----<<xmia006>>----
         #Ctrlp:input.c.xmia006
         ON ACTION controlp INFIELD xmia006
            #add-point:ON ACTION controlp INFIELD xmia006
            {<point name="input.c.xmia006" />}
            #END add-point
 
         #----<<xmia007>>----
         #Ctrlp:input.c.xmia007
         ON ACTION controlp INFIELD xmia007
            #add-point:ON ACTION controlp INFIELD xmia007
            {<point name="input.c.xmia007" />}
            #END add-point
 
         #----<<xmia008>>----
         #Ctrlp:input.c.xmia008
         ON ACTION controlp INFIELD xmia008
            #add-point:ON ACTION controlp INFIELD xmia008
            {<point name="input.c.xmia008" />}
            #END add-point
 
         #----<<xmia009>>----
         #Ctrlp:input.c.xmia009
         ON ACTION controlp INFIELD xmia009
            #add-point:ON ACTION controlp INFIELD xmia009
            {<point name="input.c.xmia009" />}
            #END add-point
 
         #----<<xmiastus>>----
         #Ctrlp:input.c.xmiastus
         ON ACTION controlp INFIELD xmiastus
            #add-point:ON ACTION controlp INFIELD xmiastus
            {<point name="input.c.xmiastus" />}
            #END add-point
 
         #----<<xmia010>>----
         #Ctrlp:input.c.xmia010
         ON ACTION controlp INFIELD xmia010
            #add-point:ON ACTION controlp INFIELD xmia010
            {<point name="input.c.xmia010" />}
            #END add-point
 
         #----<<xmia011>>----
         #Ctrlp:input.c.xmia011
         ON ACTION controlp INFIELD xmia011
            #add-point:ON ACTION controlp INFIELD xmia011
            {<point name="input.c.xmia011" />}
            #END add-point
 
         #----<<xmia013>>----
         #Ctrlp:input.c.xmia013
         ON ACTION controlp INFIELD xmia013
            #add-point:ON ACTION controlp INFIELD xmia013
            {<point name="input.c.xmia013" />}
            #END add-point
 
         #----<<xmia014>>----
         #Ctrlp:input.c.xmia014
         ON ACTION controlp INFIELD xmia014
            #add-point:ON ACTION controlp INFIELD xmia014
            {<point name="input.c.xmia014" />}
            #END add-point
 
         #----<<xmia012>>----
         #Ctrlp:input.c.xmia012
         ON ACTION controlp INFIELD xmia012
            #add-point:ON ACTION controlp INFIELD xmia012
            {<point name="input.c.xmia012" />}
            #END add-point
 
         #----<<xmia015>>----
         #Ctrlp:input.c.xmia015
         ON ACTION controlp INFIELD xmia015
            #add-point:ON ACTION controlp INFIELD xmia015
            {<point name="input.c.xmia015" />}
            #END add-point
 
         #----<<xmiaownid>>----
         #----<<xmiaowndp>>----
         #----<<xmiacrtid>>----
         #----<<xmiacrtdp>>----
         #----<<xmiacrtdt>>----
         #----<<xmiamodid>>----
         #----<<xmiamoddt>>----
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_xmia_m.xmia001             
 
                            
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO xmia_t (xmiaent,xmia001,xmia002,xmia003,xmia004,xmia005,xmia006,xmia007,xmia008, 
                   xmia009,xmiastus,xmia010,xmia011,xmia013,xmia014,xmia012,xmia015,xmiaownid,xmiaowndp, 
                   xmiacrtid,xmiacrtdp,xmiacrtdt,xmiamodid,xmiamoddt)
               VALUES (g_enterprise,g_xmia_m.xmia001,g_xmia_m.xmia002,g_xmia_m.xmia003,g_xmia_m.xmia004, 
                   g_xmia_m.xmia005,g_xmia_m.xmia006,g_xmia_m.xmia007,g_xmia_m.xmia008,g_xmia_m.xmia009, 
                   g_xmia_m.xmiastus,g_xmia_m.xmia010,g_xmia_m.xmia011,g_xmia_m.xmia013,g_xmia_m.xmia014, 
                   g_xmia_m.xmia012,g_xmia_m.xmia015,g_xmia_m.xmiaownid,g_xmia_m.xmiaowndp,g_xmia_m.xmiacrtid, 
                   g_xmia_m.xmiacrtdp,g_xmia_m.xmiacrtdt,g_xmia_m.xmiamodid,g_xmia_m.xmiamoddt) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_xmia_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_xmia_m.xmia001 = g_master_multi_table_t.xmial001 AND
         g_xmia_m.xmial003 = g_master_multi_table_t.xmial003  THEN
         ELSE 
            LET l_var_keys[01] = g_xmia_m.xmia001
            LET l_field_keys[01] = 'xmial001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.xmial001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'xmial002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_xmia_m.xmial003
            LET l_fields[01] = 'xmial003'
            LET l_vars[02] = g_enterprise 
            LET l_fields[02] = 'xmialent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'xmial_t')
         END IF 
 
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
              
               CALL s_transaction_end('Y','0')
 
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL axmi170_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
 
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE xmia_t SET (xmia001,xmia002,xmia003,xmia004,xmia005,xmia006,xmia007,xmia008,xmia009, 
                   xmiastus,xmia010,xmia011,xmia013,xmia014,xmia012,xmia015,xmiaownid,xmiaowndp,xmiacrtid, 
                   xmiacrtdp,xmiacrtdt,xmiamodid,xmiamoddt) = (g_xmia_m.xmia001,g_xmia_m.xmia002,g_xmia_m.xmia003, 
                   g_xmia_m.xmia004,g_xmia_m.xmia005,g_xmia_m.xmia006,g_xmia_m.xmia007,g_xmia_m.xmia008, 
                   g_xmia_m.xmia009,g_xmia_m.xmiastus,g_xmia_m.xmia010,g_xmia_m.xmia011,g_xmia_m.xmia013, 
                   g_xmia_m.xmia014,g_xmia_m.xmia012,g_xmia_m.xmia015,g_xmia_m.xmiaownid,g_xmia_m.xmiaowndp, 
                   g_xmia_m.xmiacrtid,g_xmia_m.xmiacrtdp,g_xmia_m.xmiacrtdt,g_xmia_m.xmiamodid,g_xmia_m.xmiamoddt) 

                WHERE xmiaent = g_enterprise AND xmia001 = g_xmia001_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("xmia_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_xmia_m.xmia001 = g_master_multi_table_t.xmial001 AND
         g_xmia_m.xmial003 = g_master_multi_table_t.xmial003  THEN
         ELSE 
            LET l_var_keys[01] = g_xmia_m.xmia001
            LET l_field_keys[01] = 'xmial001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.xmial001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'xmial002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_xmia_m.xmial003
            LET l_fields[01] = 'xmial003'
            LET l_vars[02] = g_enterprise 
            LET l_fields[02] = 'xmialent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'xmial_t')
         END IF 
 
               CALL s_transaction_end('Y','0')
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_xmia001_t = g_xmia_m.xmia001
 
            #controlp
            
      END INPUT
   
]]>
</section>
  <section id="axmi170.input.other" ver="1" status="" src="s">
<![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD xmia001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xmib002
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         CALL cl_set_head_visible("","AUTO")
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
</section>
  <section id="axmi170.insert" ver="1" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION axmi170_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_xmib_d.clear()   
 
 
   INITIALIZE g_xmia_m.* LIKE xmia_t.*             #DEFAULT 設定
   
   LET g_xmia001_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_xmia_m.xmiaownid = g_user
      LET g_xmia_m.xmiaowndp = g_dept
      LET g_xmia_m.xmiacrtid = g_user
      LET g_xmia_m.xmiacrtdp = g_dept 
      LET g_xmia_m.xmiacrtdt = cl_get_current()
      LET g_xmia_m.xmiamodid = ""
      LET g_xmia_m.xmiamoddt = ""
      #LET g_xmia_m.xmiastus = ""
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_xmia_m.xmia009 = "N"
      LET g_xmia_m.xmiastus = "Y"
      LET g_xmia_m.xmia010 = "Y"
      LET g_xmia_m.xmia011 = "Y"
      LET g_xmia_m.xmia013 = "N"
      LET g_xmia_m.xmia014 = "N"
      LET g_xmia_m.xmia012 = "N"
      LET g_xmia_m.xmia015 = "N"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL axmi170_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_xmia_m.* = g_xmia_m_t.*
         CALL axmi170_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_xmib_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   
   LET g_xmia001_t = g_xmia_m.xmia001
 
   
   LET g_wc = g_wc,  
              " OR ( xmiaent = '" ||g_enterprise|| "' AND",
              " xmia001 = '", g_xmia_m.xmia001 CLIPPED, "' "
 
              , ") "
   
   CLOSE axmi170_cl
   
END FUNCTION
]]>
</section>
  <section id="axmi170.insert_b" ver="1" status="" src="s">
<![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION axmi170_insert_b(ps_table,ps_keys,ps_page)
   {<Local define>}
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   {</Local define>}
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO xmib_t
                  (xmibent,
                   xmib001,
                   xmib002
                   ,xmib003) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_xmib_d[g_detail_idx].xmib003)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("xmib_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
</section>
  <section id="axmi170.lock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION axmi170_lock_b(ps_table,ps_page)
   {<Local define>}
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL axmi170_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "xmib_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN axmi170_bcl USING g_enterprise,
                                       g_xmia_m.xmia001,g_xmib_d[g_detail_idx].xmib002
                                       
      IF SQLCA.sqlcode THEN
         CALL cl_err("axmi170_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="axmi170.main" ver="1" status="" src="s">
<![CDATA[#test
#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axm","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = "SELECT xmia001,'',xmia002,xmia003,xmia004,'',xmia005,'',xmia006,xmia007,xmia008, 
       '',xmia009,xmiastus,xmia010,xmia011,xmia013,xmia014,xmia012,xmia015,xmiaownid,'',xmiaowndp,'', 
       xmiacrtid,'',xmiacrtdp,'',xmiacrtdt,xmiamodid,'',xmiamoddt FROM xmia_t WHERE xmiaent= ? AND xmia001=?  
       FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   DECLARE axmi170_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
 
   ELSE
      
      #畫面開啟 (identifier)
      OPEN WINDOW w_axmi170 WITH FORM cl_ap_formpath("axm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axmi170_init()   
 
      #進入選單 Menu (="N")
      CALL axmi170_ui_dialog() 
	  
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axmi170
      
   END IF 
   
   CLOSE axmi170_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="axmi170.modify" ver="1" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION axmi170_modify()
   {<Local define>}
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_xmia_m.xmia001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
    SELECT UNIQUE xmia001,xmia002,xmia003,xmia004,xmia005,xmia006,xmia007,xmia008,xmia009,xmiastus,xmia010, 
        xmia011,xmia013,xmia014,xmia012,xmia015,xmiaownid,xmiaowndp,xmiacrtid,xmiacrtdp,xmiacrtdt,xmiamodid, 
        xmiamoddt
 INTO g_xmia_m.xmia001,g_xmia_m.xmia002,g_xmia_m.xmia003,g_xmia_m.xmia004,g_xmia_m.xmia005,g_xmia_m.xmia006, 
     g_xmia_m.xmia007,g_xmia_m.xmia008,g_xmia_m.xmia009,g_xmia_m.xmiastus,g_xmia_m.xmia010,g_xmia_m.xmia011, 
     g_xmia_m.xmia013,g_xmia_m.xmia014,g_xmia_m.xmia012,g_xmia_m.xmia015,g_xmia_m.xmiaownid,g_xmia_m.xmiaowndp, 
     g_xmia_m.xmiacrtid,g_xmia_m.xmiacrtdp,g_xmia_m.xmiacrtdt,g_xmia_m.xmiamodid,g_xmia_m.xmiamoddt
 FROM xmia_t
 WHERE xmiaent = g_enterprise AND xmia001 = g_xmia_m.xmia001
 
   ERROR ""
  
   LET g_xmia001_t = g_xmia_m.xmia001
 
   CALL s_transaction_begin()
   
   OPEN axmi170_cl USING g_enterprise,g_xmia_m.xmia001
 
   IF STATUS THEN
      CALL cl_err("OPEN axmi170_cl:", STATUS, 1)
      CLOSE axmi170_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH axmi170_cl INTO g_xmia_m.xmia001,g_xmia_m.xmial003,g_xmia_m.xmia002,g_xmia_m.xmia003,g_xmia_m.xmia004, 
       g_xmia_m.xmia004_desc,g_xmia_m.xmia005,g_xmia_m.xmia005_desc,g_xmia_m.xmia006,g_xmia_m.xmia007, 
       g_xmia_m.xmia008,g_xmia_m.xmia008_desc,g_xmia_m.xmia009,g_xmia_m.xmiastus,g_xmia_m.xmia010,g_xmia_m.xmia011, 
       g_xmia_m.xmia013,g_xmia_m.xmia014,g_xmia_m.xmia012,g_xmia_m.xmia015,g_xmia_m.xmiaownid,g_xmia_m.xmiaownid_desc, 
       g_xmia_m.xmiaowndp,g_xmia_m.xmiaowndp_desc,g_xmia_m.xmiacrtid,g_xmia_m.xmiacrtid_desc,g_xmia_m.xmiacrtdp, 
       g_xmia_m.xmiacrtdp_desc,g_xmia_m.xmiacrtdt,g_xmia_m.xmiamodid,g_xmia_m.xmiamodid_desc,g_xmia_m.xmiamoddt 

 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_xmia_m.xmia001,SQLCA.sqlcode,0)
      CLOSE axmi170_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
 
   CALL axmi170_show()
   WHILE TRUE
      LET g_xmia001_t = g_xmia_m.xmia001
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_xmia_m.xmiamodid = g_user 
LET g_xmia_m.xmiamoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      CALL axmi170_input("u")     #欄位更改
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_xmia_m.* = g_xmia_m_t.*
         CALL axmi170_show()
         CALL cl_err('',9001,0)
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更
      IF g_xmia_m.xmia001 != g_xmia001_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE xmib_t SET xmib001 = g_xmia_m.xmia001
 
          WHERE xmibent = g_enterprise AND xmib001 = g_xmia001_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("xmib_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("xmib_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   IF NOT cl_log_modified_record(g_xmia_m.xmia001,g_site) THEN 
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE axmi170_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_xmia_m.xmia001,'U')
 
END FUNCTION   
]]>
</section>
  <section id="axmi170.other_dialog" ver="1" status="" src="s">
<![CDATA[ 
]]>
</section>
  <section id="axmi170.other_function" ver="1" status="" src="s">
<![CDATA[   
{<point name="other.function"/>}
]]>
</section>
  <section id="axmi170.query" ver="1" status="" src="s">
<![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION axmi170_query()
   {<Local define>}
   DEFINE ls_wc STRING
   {</Local define>}
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_xmib_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL axmi170_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL axmi170_browser_fill("")
      CALL axmi170_fetch("")
      RETURN
   END IF
   
   #搜尋後資料初始化
   LET g_detail_cnt = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   LET l_ac = 1
   LET g_wc_filter = ""
   CALL FGL_SET_ARR_CURR(1)
      CALL axmi170_filter_show('xmia001')
   LET g_error_show = 1
   CALL axmi170_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL axmi170_fetch("F") 
   END IF
 
END FUNCTION
]]>
</section>
  <section id="axmi170.reproduce" ver="1" status="" src="s">
<![CDATA[#+ 資料複製
PRIVATE FUNCTION axmi170_reproduce()
   {<Local define>}
   DEFINE l_newno     LIKE xmia_t.xmia001 
   DEFINE l_oldno     LIKE xmia_t.xmia001 
 
   DEFINE l_master    RECORD LIKE xmia_t.*
   DEFINE l_detail    RECORD LIKE xmib_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num5
   {</Local define>}
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_xmia_m.xmia001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_xmia001_t = g_xmia_m.xmia001
 
    
   LET g_xmia_m.xmia001 = ""
 
    
   CALL axmi170_set_entry('a')
   CALL axmi170_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_xmia_m.xmiaownid = g_user
      LET g_xmia_m.xmiaowndp = g_dept
      LET g_xmia_m.xmiacrtid = g_user
      LET g_xmia_m.xmiacrtdp = g_dept 
      LET g_xmia_m.xmiacrtdt = cl_get_current()
      LET g_xmia_m.xmiamodid = ""
      LET g_xmia_m.xmiamoddt = ""
      #LET g_xmia_m.xmiastus = ""
 
 
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL axmi170_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   
   LET g_wc = g_wc,  
              " OR (",
              " xmia001 = '", g_xmia_m.xmia001 CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="axmi170.set_entry" ver="1" status="" src="s">
<![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION axmi170_set_entry(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1  
   {</Local define>}
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("xmia001",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="axmi170.set_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION axmi170_set_entry_b(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1   
   {</Local define>}
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
</section>
  <section id="axmi170.set_no_entry" ver="1" status="" src="s">
<![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION axmi170_set_no_entry(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1   
   {</Local define>}
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("xmia001",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="axmi170.set_no_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION axmi170_set_no_entry_b(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1   
   {</Local define>}
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
</section>
  <section id="axmi170.show" ver="1" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION axmi170_show()
   {<Local define>}
   DEFINE l_ac_t    LIKE type_t.num5
   {</Local define>}
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_xmia_m_t.* = g_xmia_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL axmi170_b_fill() #單身填充
      CALL axmi170_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_xmia_m.xmiaownid_desc = cl_get_username(g_xmia_m.xmiaownid)
      #LET g_xmia_m.xmiaowndp_desc = cl_get_deptname(g_xmia_m.xmiaowndp)
      #LET g_xmia_m.xmiacrtid_desc = cl_get_username(g_xmia_m.xmiacrtid)
      #LET g_xmia_m.xmiacrtdp_desc = cl_get_deptname(g_xmia_m.xmiacrtdp)
      #LET g_xmia_m.xmiamodid_desc = cl_get_username(g_xmia_m.xmiamodid)
      ##LET g_xmia_m.xmiacnfid_desc = cl_get_deptname(g_xmia_m.xmiacnfid)
      ##LET g_xmia_m.xmiapstid_desc = cl_get_deptname(g_xmia_m.xmiapstid)
      
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xmia_m.xmia001,g_xmia_m.xmial003,g_xmia_m.xmia002,g_xmia_m.xmia003,g_xmia_m.xmia004, 
       g_xmia_m.xmia004_desc,g_xmia_m.xmia005,g_xmia_m.xmia005_desc,g_xmia_m.xmia006,g_xmia_m.xmia007, 
       g_xmia_m.xmia008,g_xmia_m.xmia008_desc,g_xmia_m.xmia009,g_xmia_m.xmiastus,g_xmia_m.xmia010,g_xmia_m.xmia011, 
       g_xmia_m.xmia013,g_xmia_m.xmia014,g_xmia_m.xmia012,g_xmia_m.xmia015,g_xmia_m.xmiaownid,g_xmia_m.xmiaownid_desc, 
       g_xmia_m.xmiaowndp,g_xmia_m.xmiaowndp_desc,g_xmia_m.xmiacrtid,g_xmia_m.xmiacrtid_desc,g_xmia_m.xmiacrtdp, 
       g_xmia_m.xmiacrtdp_desc,g_xmia_m.xmiacrtdt,g_xmia_m.xmiamodid,g_xmia_m.xmiamodid_desc,g_xmia_m.xmiamoddt 

   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_xmia_m.xmiastus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
 
 
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_xmib_d.getLength()
      #帶出公用欄位reference值
      
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL axmi170_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="axmi170.signature" ver="1" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="axmi170.state_change" ver="1" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION axmi170_statechange()
   {<Local define>}
   DEFINE lc_state LIKE type_t.chr5
   {</Local define>}
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_xmia_m.xmia001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         CASE g_xmia_m.xmiastus
            WHEN "N"
               HIDE OPTION "inactive"
            WHEN "Y"
               HIDE OPTION "active"
 
 
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION inactive
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.inactive"/>}
         #end add-point
         EXIT MENU
      ON ACTION active
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.active"/>}
         #end add-point
         EXIT MENU
 
 
      
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
 
 
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE xmia_t SET xmiastus = lc_state 
    WHERE xmiaent = g_enterprise AND xmia001 = g_xmia_m.xmia001
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
 
 
         
      END CASE
      LET g_xmia_m.xmiastus = lc_state
      DISPLAY BY NAME g_xmia_m.xmiastus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
</section>
  <section id="axmi170.ui_browser_refresh" ver="1" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION axmi170_ui_browser_refresh()
   {<Local define>}
   DEFINE l_i  LIKE type_t.num10
   {</Local define>}
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_xmia001 = g_xmia_m.xmia001 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
</section>
  <section id="axmi170.ui_detailshow" ver="1" status="" src="s">
<![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION axmi170_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
</section>
  <section id="axmi170.ui_dialog" ver="1" status="" src="s">
<![CDATA[#+ 功能選單
PRIVATE FUNCTION axmi170_ui_dialog()
   {<Local define>}
   DEFINE li_idx  LIKE type_t.num5
   DEFINE lb_first BOOLEAN
   {</Local define>}
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_wc.trim() <> "1=1" THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL axmi170_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
 
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL axmi170_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_xmia001 = g_xmia001_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
         #INPUT g_searchstr,g_searchcol FROM formonly.searchstr,formonly.cbo_searchcol
         #
         #   BEFORE INPUT
         #   
         #END INPUT
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL axmi170_fetch('') # reload data
               LET l_ac = 1
               CALL axmi170_ui_detailshow() #Setting the current row 
      
               CALL axmi170_idx_chk()
               #NEXT FIELD xmib002
         
         END DISPLAY
        
         DISPLAY ARRAY g_xmib_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL axmi170_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL axmi170_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL axmi170_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL axmi170_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL axmi170_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
           
            IF lb_first THEN
               LET lb_first = FALSE 
               NEXT FIELD xmib002
            END IF
 
         ON ACTION statechange
            CALL axmi170_statechange()
            LET g_action_choice = "statechange"
            EXIT DIALOG
      
         
          
         #ACTION表單列
         ON ACTION filter
            CALL axmi170_filter()
            EXIT DIALOG
         
         ON ACTION first
            CALL axmi170_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmi170_idx_chk()
            
         ON ACTION previous
            CALL axmi170_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmi170_idx_chk()
            
         ON ACTION jump
            CALL axmi170_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmi170_idx_chk()
            
         ON ACTION next
            CALL axmi170_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmi170_idx_chk()
            
         ON ACTION last
            CALL axmi170_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmi170_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("worksheet_detail",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("worksheet_detail",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
 
         ON ACTION delete
 
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN 
               CALL axmi170_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
            END IF
 
 
         ON ACTION insert
 
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN 
               CALL axmi170_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION modify
 
            LET g_aw = ''
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN 
               CALL axmi170_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION modify_detail
 
            LET g_aw = g_curr_diag.getCurrentItem()
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN 
               CALL axmi170_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION output
 
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN 
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION query
 
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN 
               CALL axmi170_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
            END IF
 
 
         ON ACTION reproduce
 
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN 
               CALL axmi170_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
</section>
  <section id="axmi170.ui_headershow" ver="1" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION axmi170_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_xmia_m.xmia001 = g_browser[g_current_idx].b_xmia001   
 
    SELECT UNIQUE xmia001,xmia002,xmia003,xmia004,xmia005,xmia006,xmia007,xmia008,xmia009,xmiastus,xmia010, 
        xmia011,xmia013,xmia014,xmia012,xmia015,xmiaownid,xmiaowndp,xmiacrtid,xmiacrtdp,xmiacrtdt,xmiamodid, 
        xmiamoddt
 INTO g_xmia_m.xmia001,g_xmia_m.xmia002,g_xmia_m.xmia003,g_xmia_m.xmia004,g_xmia_m.xmia005,g_xmia_m.xmia006, 
     g_xmia_m.xmia007,g_xmia_m.xmia008,g_xmia_m.xmia009,g_xmia_m.xmiastus,g_xmia_m.xmia010,g_xmia_m.xmia011, 
     g_xmia_m.xmia013,g_xmia_m.xmia014,g_xmia_m.xmia012,g_xmia_m.xmia015,g_xmia_m.xmiaownid,g_xmia_m.xmiaowndp, 
     g_xmia_m.xmiacrtid,g_xmia_m.xmiacrtdp,g_xmia_m.xmiacrtdt,g_xmia_m.xmiamodid,g_xmia_m.xmiamoddt
 FROM xmia_t
 WHERE xmiaent = g_enterprise AND xmia001 = g_xmia_m.xmia001
   CALL axmi170_show()
   
END FUNCTION
]]>
</section>
  <section id="axmi170.unlock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION axmi170_unlock_b(ps_table,ps_page)
   {<Local define>}
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmi170_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="axmi170.update_b" ver="1" status="" src="s">
<![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION axmi170_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   {<Local define>}
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmib_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE xmib_t 
         SET (xmib001,
              xmib002
              ,xmib003) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_xmib_d[g_detail_idx].xmib003) 
         WHERE xmibent = g_enterprise AND xmib001 = ps_keys_bak[1] AND xmib002 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("xmib_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("xmib_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
</add_points>