<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="axmr620_g01" std_prog="axmr620_g01" erpver="1.0" module="AXM" ver="5" env="s" zone="t10prd" booking="N" type="G" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="G" status=""/>
    <free_style value="N" status=""/>
    <start_arg value="" status=""/>
  </other>
  <point name="report.axmr620_g01_subrep05" order="1" ver="5" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE REPORT axmr620_g01_subrep05(sr3)
   #嘜頭子報表輸出
   DEFINE sr3 sr3_r
   ORDER EXTERNAL BY sr3.xmap003
   FORMAT        
      ON EVERY ROW
         PRINTX g_grNumFmt.*
         PRINTX sr3.*
END REPORT]]>
  </point>
  <point name="component.arg.prep" order="" ver="5" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_axmi210_cre_tmp_table() RETURNING l_success #add--2015/06/30 By shiun]]>
  </point>
  <point name="component.get_var" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[p_arg1]]>
  </point>
  <point name="component_name.define" order="" ver="5" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE  l_success LIKE type_t.num5]]>
  </point>
  <point name="global.variable" order="" ver="5" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE g_ref_fields       DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields       DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
TYPE sr3_r RECORD 
   xmap003        LIKE xmap_t.xmap003,          #類別
   xmap004        LIKE xmap_t.xmap004,          #行序
   xmap005        LIKE xmap_t.xmap005,          #資料類型
   xmap006        LIKE type_t.chr1000,          #資料內容
   l_xmap003_desc LIKE type_t.chr500,           #類別說明
   l_xmap005_desc LIKE type_t.chr500            #資料內容說明
END RECORD]]>
  </point>
  <point name="ins_data.before.save" order="" ver="5" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[       #ming 20141210 add ------------------------(S)  
       #Original Order No: invoice來源為出貨/出通單時，回串至訂單抓取客戶訂購單號(xmda033)
       IF sr_s.xmdo004 = '1' OR sr_s.xmdo004 = '2' THEN
          IF NOT cl_null(sr_s.xmdo005) THEN
             LET l_sql = "SELECT DISTINCT xmda033 ",
                         "  FROM xmdg_t,xmdh_t,xmda_t ",
                         " WHERE xmdgent   = xmdhent ",
                         "   AND xmdgsite  = xmdhsite ",
                         "   AND xmdgdocno = xmdhdocno ",
                         "   AND xmdgdocno = '",sr_s.xmdo005,"' ",
                         "   AND xmdhent   = xmdaent ",
                         "   AND xmdhsite  = xmdasite ",
                         "   AND xmdh001   = xmdadocno ",
                         " ORDER BY xmda033 "
             PREPARE axmr620_g01_xmda_prep FROM l_sql
             DECLARE axmr620_g01_xmda_curs CURSOR FOR axmr620_g01_xmda_prep

             LET l_xmda033 = ''
             LET l_xmdo005 = ''
             FOREACH axmr620_g01_xmda_curs INTO l_xmda033
                IF cl_null(l_xmdo005) THEN
                   LET l_xmdo005 = l_xmda033
                ELSE
                   LET l_xmdo005 = l_xmdo005,",",l_xmda033
                END IF

                LET l_xmda033 = ''
             END FOREACH 
             
             IF NOT cl_null(l_xmdo005) THEN
                LET sr_s.xmdo005 = l_xmdo005
             END IF
          END IF
       END IF
       #ming 20141210 add ------------------------(E)  
       ]]>
  </point>
  <point name="ins_data.define" order="" ver="5" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE l_pmaa027          LIKE pmaa_t.pmaa027 
DEFINE l_success          LIKE type_t.num5
DEFINE l_oocq019          LIKE oocq_t.oocq019
DEFINE l_xmdp025          LIKE xmdp_t.xmdp025
   #ming 20141210 add -------------------------(S) 
   DEFINE l_xmda033       LIKE xmda_t.xmda033
   DEFINE l_xmdo005       LIKE xmdo_t.xmdo005
   DEFINE l_sql           STRING
   #ming 20141210 add -------------------------(E) 
   DEFINE l_pmaa027_1     LIKE pmaa_t.pmaa027   #add--2015/06/29 By shiun]]>
  </point>
  <point name="ins_data.foreach" order="" ver="5" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[       #modify--2015/06/29 By shiun--(S)
       SELECT ooefl006 INTO sr_s.l_xmdosite_desc
         FROM ooefl_t
        WHERE ooeflent = sr_s.xmdoent
          AND ooefl001 = sr_s.xmdosite
          AND ooefl002 = g_dlang
       #地址
       INITIALIZE l_pmaa027,l_pmaa027_1 TO NULL
       #帳款客戶
       SELECT pmaa027 INTO l_pmaa027
         FROM pmaa_t
        WHERE pmaaent = g_enterprise
          AND pmaa001 = sr_s.xmdo008         
       #送貨客戶
       SELECT pmaa027 INTO l_pmaa027_1
         FROM pmaa_t
        WHERE pmaaent = g_enterprise
          AND pmaa001 = sr_s.xmdo009

       IF NOT cl_null(sr_s.xmdo020) THEN
          CALL s_aooi350_get_address(l_pmaa027,sr_s.xmdo020,g_lang)RETURNING l_success,sr_s.l_xmdo008_address
          CALL s_aooi350_get_address(l_pmaa027_1,sr_s.xmdo020,g_lang)RETURNING l_success,sr_s.l_xmdo009_address
       END IF
       LET sr_s.l_xmdo008_address = sr_s.t4_pmaal003 CLIPPED,ASCII 13, ASCII 10,sr_s.l_xmdo008_address CLIPPED
       LET sr_s.l_xmdo009_address = sr_s.t5_pmaal003 CLIPPED,ASCII 13, ASCII 10,sr_s.l_xmdo009_address CLIPPED
       
       #付款條件說明   
        SELECT ooibl004 INTO sr_s.l_xmdo010_desc
         FROM ooibl_t
        WHERE ooiblent = sr_s.xmdoent
          AND ooibl002 = sr_s.xmdo010
          AND ooibl003 = g_dlang
       #modify--2015/06/29 By shiun--(E)
       #交運起點
       LET l_oocq019 = ''
       IF NOT cl_null(sr_s.xmdo021) THEN
          SELECT oocq019 INTO l_oocq019
            FROM oocq_t WHERE oocq001='263' AND oocq002= sr_s.xmdo021
       END IF
      
       IF NOT cl_null(l_oocq019) THEN
          CASE
             WHEN l_oocq019 ='1' OR l_oocq019 ='4'
                INITIALIZE g_ref_fields TO NULL
                LET g_ref_fields[1] = sr_s.xmdo022
                CALL ap_ref_array2(g_ref_fields,"SELECT oockl005 FROM oockl_t WHERE oocklent='"||sr_s.xmdoent||"' AND oockl003=? AND oockl004='"||g_dlang||"'","") RETURNING g_rtn_fields
                LET sr_s.l_xmdo022_desc = '', g_rtn_fields[1] , ''
            
             WHEN l_oocq019 ='2' 
                INITIALIZE g_ref_fields TO NULL
                LET g_ref_fields[1] = sr_s.xmdo022
                CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||sr_s.xmdoent||"' AND oocql002=? AND oocql001 = '262' AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
                LET sr_s.l_xmdo022_desc = '', g_rtn_fields[1] , ''

             WHEN  l_oocq019 ='3'
                INITIALIZE g_ref_fields TO NULL
                LET g_ref_fields[1] = sr_s.xmdo022
                CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||sr_s.xmdoent||"' AND oocql002=? AND oocql001 = '276' AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
                LET sr_s.l_xmdo022_desc = '', g_rtn_fields[1] , ''
          END CASE
        ELSE
           INITIALIZE g_ref_fields TO NULL
           LET g_ref_fields[1] = sr_s.xmdo022
           CALL ap_ref_array2(g_ref_fields,"SELECT oockl005 FROM oockl_t WHERE oocklent='"||sr_s.xmdoent||"' AND oockl003=? AND oockl004='"||g_dlang||"'","") RETURNING g_rtn_fields
           LET sr_s.l_xmdo022_desc = '', g_rtn_fields[1] , ''         
        END IF
      
       #交運終點
       LET l_oocq019 = ''
       IF NOT cl_null(sr_s.xmdo021) THEN
          SELECT oocq019 INTO l_oocq019
            FROM oocq_t WHERE oocq001='263' AND oocq002= sr_s.xmdo021
       END IF
      
       IF NOT cl_null(l_oocq019) THEN
          CASE
             WHEN l_oocq019 ='1' OR l_oocq019 ='4'
                INITIALIZE g_ref_fields TO NULL
                LET g_ref_fields[1] = sr_s.xmdo023
                CALL ap_ref_array2(g_ref_fields,"SELECT oockl005 FROM oockl_t WHERE oocklent='"||sr_s.xmdoent||"' AND oockl003=? AND oockl004='"||g_dlang||"'","") RETURNING g_rtn_fields
                LET sr_s.l_xmdo023_desc = '', g_rtn_fields[1] , ''
            
             WHEN l_oocq019 ='2' OR l_oocq019 ='3'
                INITIALIZE g_ref_fields TO NULL
                LET g_ref_fields[1] = sr_s.xmdo023
                CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||sr_s.xmdoent||"' AND oocql002=? AND oocql001 = '262' AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
                LET sr_s.l_xmdo023_desc = '', g_rtn_fields[1] , ''
              
             WHEN l_oocq019 ='2' OR l_oocq019 ='3'
                INITIALIZE g_ref_fields TO NULL
                LET g_ref_fields[1] = sr_s.xmdo023
                CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||sr_s.xmdoent||"' AND oocql002=? AND oocql001 = '276' AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
                LET sr_s.l_xmdo023_desc = '', g_rtn_fields[1] , '' 
              
          END CASE
       ELSE
          INITIALIZE g_ref_fields TO NULL
          LET g_ref_fields[1] = sr_s.xmdo023
          CALL ap_ref_array2(g_ref_fields,"SELECT oockl005 FROM oockl_t WHERE oocklent='"||sr_s.xmdoent||"' AND oockl003=? AND oockl004='"||g_dlang||"'","") RETURNING g_rtn_fields
          LET sr_s.l_xmdo023_desc = '', g_rtn_fields[1] , ''         
       END IF
       
       #是否含稅
       IF sr_s.xmdo014 = 'N' THEN
          LET sr_s.l_xmdp025_026 = sr_s.xmdp024 #未稅
       ELSE 
          LET sr_s.l_xmdp025_026 = sr_s.xmdp025 #含稅
       END IF
       
       #add--2015/06/30 By shiun--(S)
       SELECT xmda033 INTO l_xmda033
         FROM xmda_t
        WHERE xmdaent = g_enterprise
          AND xmdadocno = sr_s.xmdp003
       CALL s_axmi210_ins_tmp_table(sr_s.xmdp008,sr_s.x_t8_imaal003,sr_s.t3_pmaal004,l_xmda033,sr_s.xmdp003,sr_s.l_xmdo022_desc,sr_s.l_xmdo023_desc,'','','','','',sr_s.xmdodocno) RETURNING l_success
       #add--2015/06/30 By shiun--(E)]]>
  </point>
  <point name="rep.a_group.xmdodocno.after" order="" ver="5" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[           #嘜頭子報表
           START REPORT axmr620_g01_subrep05
              CASE
                 WHEN sr1.xmdo004 = '1'  #出貨通知單axmt520    
                    SELECT xmdg005,xmdg023 INTO l_xmao001,l_xmao002
                      FROM xmdg_t
                     WHERE xmdgdocno = sr1.xmdo005 
                       AND xmdgent = sr1.xmdoent
                 WHEN sr1.xmdo004 = '2'
                    SELECT xmdk007,xmdk027 INTO l_xmao001,l_xmao002
                      FROM xmdk_t  
                     WHERE xmdkdocno = sr1.xmdo005 
                       AND xmdkent = sr1.xmdoent
              END CASE
              IF NOT cl_null(l_xmao001) AND NOT cl_null(l_xmao002) THEN
                 LET g_sql = " SELECT xmao003,xmao004,xmap003,xmap004,xmap005,xmap006 ",
                             "   FROM xmao_t,xmap_t ",
                             "  WHERE xmaoent = xmapent",
                             "    AND xmao001 = xmap001",
                             "    AND xmao002 = xmap002",
                             "    AND xmaoent = '",sr1.xmdoent,"' ",
                             "    AND xmao001 = '",l_xmao001,"'",
                             "    AND xmao002 = '",l_xmao002,"'",
                             "  ORDER BY xmap003,xmap004 "
                 DECLARE axmr620_g01_repcur05 CURSOR FROM g_sql                 
                 
                 FOREACH axmr620_g01_repcur05 INTO l_xmao003,l_xmao004,sr3.*
                    CALL s_desc_gzcbl004_desc('2102',sr3.xmap003) RETURNING sr3.l_xmap003_desc
                    CALL s_desc_gzcbl004_desc('2100',sr3.xmap005) RETURNING sr3.l_xmap005_desc
                    LET l_n = 1
                    LET l_load =''
                    WHILE TRUE
                     LET l_xmap006 = sr3.xmap006
                     LET l_length = LENGTH(l_xmap006)
                     LET l_n1 = l_xmap006.getIndexOf('&',l_n)
                     LET l_n2 = l_xmap006.getIndexOf('&',l_n1+1)
                     IF l_n1 != 0 AND l_n2 != 0 THEN
                        LET l_str = l_xmap006.subString(l_n1+1,l_n2-1)
                        IF cl_null(l_load) THEN
                           LET l_load = l_xmap006.subString(l_n,l_n1-1)
                        ELSE
                           LET l_load = l_load || l_xmap006.subString(l_n,l_n1-1)
                        END IF                        
                        CALL s_axmi210_assemble(sr1.xmdodocno,l_str,l_xmao003,l_xmao004) RETURNING l_out
                        IF cl_null(l_load) THEN
                           LET l_load = l_out
                        ELSE
                           LET l_load = l_load || l_out
                        END IF    
                        LET l_n = l_n2 + 1
                     ELSE
                        IF NOT cl_null(l_load) THEN
                           LET sr3.xmap006 = l_load
                        END IF
                        EXIT WHILE
                     END IF
                    END WHILE
                    OUTPUT TO REPORT axmr620_g01_subrep05(sr3.*)                 
                 END FOREACH
              END IF
           FINISH REPORT axmr620_g01_subrep05 ]]>
  </point>
  <point name="rep.a_group.xmdodocno.before" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[           
           #總金額含稅否
           LET l_xmdp_sum  = ''
           LET l_xmdp_sum_eng = ''
           IF NOT cl_null(sr1.xmdp024) OR NOT cl_null(sr1.xmdp025) THEN
              IF sr1.xmdo014 = 'N' THEN            
                 LET l_xmdp_sum = GROUP SUM(sr1.xmdp024)  #未稅         
                 CALL s_num_to_english (l_xmdp_sum) RETURNING l_xmdp_sum_eng
                 LET l_xmdp_sum_eng = "PAY TOTAL"," ",sr1.xmdo016," ",l_xmdp_sum_eng                       
              ELSE
                 LET l_xmdp_sum = GROUP SUM(sr1.xmdp025)  #含稅        
                 CALL s_num_to_english (l_xmdp_sum) RETURNING l_xmdp_sum_eng
                 LET l_xmdp_sum_eng = "PAY TOTAL"," ",sr1.xmdo016," ",l_xmdp_sum_eng                        
              END IF  
           END IF
           PRINTX l_xmdp_sum
           PRINTX l_xmdp_sum_eng  
           
           IF cl_null(l_xmdp_sum) THEN
              LET l_xmdp_sum_show  = 'N'
           ELSE
              LET l_xmdp_sum_show  = 'Y'
           END IF
           PRINTX l_xmdp_sum_show]]>
  </point>
  <point name="rep.b_group.xmdodocno.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[ 
           #xmdo053 備註單頭隱藏
           INITIALIZE l_xmdo053_show TO NULL
           IF cl_null(sr1.xmdo053) THEN
              LET l_xmdo053_show = "N"
           ELSE
              LET l_xmdo053_show = "Y"
           END IF
           
           PRINTX l_xmdo053_show
           
           #來源單號
           INITIALIZE l_xmdo005_show TO NULL
           IF cl_null(sr1.xmdo005) THEN
              LET l_xmdo005_show = "N"
           ELSE
              LET l_xmdo005_show = "Y"
           END IF
           
           PRINTX l_xmdo005_show]]>
  </point>
  <point name="rep.define" order="" ver="5" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE l_xmdo053_show       LIKE type_t.chr1     #單頭備註
DEFINE l_xmdp040_show       LIKE type_t.chr1     #單身備註
DEFINE l_xmdo005_show       LIKE type_t.chr1     #來源單號
DEFINE l_xmdp019_show       LIKE type_t.chr1     #產品特徵
DEFINE l_xmdp_sum           LIKE type_t.num20_6  #金額總計
DEFINE l_xmdp_sum_eng       LIKE type_t.chr100   #金額英文
DEFINE l_xmdp_sum_show   LIKE type_t.chr1
#add--2015/05/29 By shiun--(S)
DEFINE l_xmao001   LIKE xmao_t.xmao001         #客戶編號
DEFINE l_xmao002   LIKE xmao_t.xmao002         #嘜頭編號
DEFINE l_xmao003   LIKE xmao_t.xmao003         #變數內容多筆時顯示方式
DEFINE l_xmao004   LIKE xmao_t.xmao004         #顯示符號
DEFINE sr3 sr3_r
DEFINE l_xmap006   STRING #資料內容
DEFINE l_out       STRING #輸出內容
DEFINE l_load      STRING #xmap006暫存內容
DEFINE l_str       STRING #擷取參數
DEFINE l_length    LIKE type_t.num5   #總長度
DEFINE l_n         LIKE type_t.num5   #起始位置(判斷用)
DEFINE l_n1        LIKE type_t.num5   #第一個&位置
DEFINE l_n2        LIKE type_t.num5   #第二個&位置
#add--2015/05/29 By shiun--(E)]]>
  </point>
  <point name="rep.everyrow.beforerow" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            # 備註單身隱藏
            INITIALIZE l_xmdp040_show TO NULL
            IF cl_null(sr1.xmdp040) THEN
               LET l_xmdp040_show = "N"
            ELSE
               LET l_xmdp040_show = "Y"
            END IF
                                 
            PRINTX l_xmdp040_show
            
            # 產品特徵隱藏
            INITIALIZE l_xmdp019_show TO NULL
            IF cl_null(sr1.xmdp019) THEN
               LET l_xmdp019_show = "N"
            ELSE
               LET l_xmdp019_show = "Y"
            END IF
                                 
            PRINTX l_xmdp019_show
            
            
            ]]>
  </point>
  <point name="rep.lastrow.after" order="" ver="5" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL s_axmi210_drop_tmp_table()]]>
  </point>
  <section id="axmr620_g01.description" ver="28" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:5,PR版次:5) Build-000110
#+ 
#+ Filename...: axmr620_g01
#+ Description: Invoice
#+ Creator....: 05016(2014-05-13 17:11:21)
#+ Modifier...: 05384(2015-06-30 17:27:58) -SD/PR-
]]>
  </section>
  <section id="axmr620_g01.global" ver="18" status="" src="s" readonly="">
    <![CDATA[#報表 g01 樣板自動產生(Version:1)
 
IMPORT os
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
PRIVATE TYPE sr1_r RECORD
   xmdo001 LIKE xmdo_t.xmdo001, 
   xmdo002 LIKE xmdo_t.xmdo002, 
   xmdo003 LIKE xmdo_t.xmdo003, 
   xmdo004 LIKE xmdo_t.xmdo004, 
   xmdo005 LIKE xmdo_t.xmdo005, 
   xmdo007 LIKE xmdo_t.xmdo007, 
   xmdo008 LIKE xmdo_t.xmdo008, 
   xmdo009 LIKE xmdo_t.xmdo009, 
   xmdo010 LIKE xmdo_t.xmdo010, 
   xmdo011 LIKE xmdo_t.xmdo011, 
   xmdo012 LIKE xmdo_t.xmdo012, 
   xmdo013 LIKE xmdo_t.xmdo013, 
   xmdo014 LIKE xmdo_t.xmdo014, 
   xmdo015 LIKE xmdo_t.xmdo015, 
   xmdo016 LIKE xmdo_t.xmdo016, 
   xmdo017 LIKE xmdo_t.xmdo017, 
   xmdo019 LIKE xmdo_t.xmdo019, 
   xmdo020 LIKE xmdo_t.xmdo020, 
   xmdo021 LIKE xmdo_t.xmdo021, 
   xmdo022 LIKE xmdo_t.xmdo022, 
   xmdo023 LIKE xmdo_t.xmdo023, 
   xmdo024 LIKE xmdo_t.xmdo024, 
   xmdo025 LIKE xmdo_t.xmdo025, 
   xmdo026 LIKE xmdo_t.xmdo026, 
   xmdo029 LIKE xmdo_t.xmdo029, 
   xmdo053 LIKE xmdo_t.xmdo053, 
   xmdodocdt LIKE xmdo_t.xmdodocdt, 
   xmdodocno LIKE xmdo_t.xmdodocno, 
   xmdoent LIKE xmdo_t.xmdoent, 
   xmdosite LIKE xmdo_t.xmdosite, 
   xmdostus LIKE xmdo_t.xmdostus, 
   xmdp001 LIKE xmdp_t.xmdp001, 
   xmdp002 LIKE xmdp_t.xmdp002, 
   xmdp003 LIKE xmdp_t.xmdp003, 
   xmdp004 LIKE xmdp_t.xmdp004, 
   xmdp005 LIKE xmdp_t.xmdp005, 
   xmdp006 LIKE xmdp_t.xmdp006, 
   xmdp007 LIKE xmdp_t.xmdp007, 
   xmdp008 LIKE xmdp_t.xmdp008, 
   xmdp009 LIKE xmdp_t.xmdp009, 
   xmdp010 LIKE xmdp_t.xmdp010, 
   xmdp012 LIKE xmdp_t.xmdp012, 
   xmdp013 LIKE xmdp_t.xmdp013, 
   xmdp014 LIKE xmdp_t.xmdp014, 
   xmdp015 LIKE xmdp_t.xmdp015, 
   xmdp016 LIKE xmdp_t.xmdp016, 
   xmdp017 LIKE xmdp_t.xmdp017, 
   xmdp018 LIKE xmdp_t.xmdp018, 
   xmdp019 LIKE xmdp_t.xmdp019, 
   xmdp020 LIKE xmdp_t.xmdp020, 
   xmdp021 LIKE xmdp_t.xmdp021, 
   xmdp022 LIKE xmdp_t.xmdp022, 
   xmdp023 LIKE xmdp_t.xmdp023, 
   xmdp024 LIKE xmdp_t.xmdp024, 
   xmdp025 LIKE xmdp_t.xmdp025, 
   xmdp026 LIKE xmdp_t.xmdp026, 
   xmdp040 LIKE xmdp_t.xmdp040, 
   xmdpseq LIKE xmdp_t.xmdpseq, 
   xmdpsite LIKE xmdp_t.xmdpsite, 
   ooag_t_ooag011 LIKE ooag_t.ooag011, 
   ooefl_t_ooefl003 LIKE ooefl_t.ooefl003, 
   ooibl_t_ooibl004 LIKE ooibl_t.ooibl004, 
   ooail_t_ooail003 LIKE ooail_t.ooail003, 
   oofb_t_oofb011 LIKE oofb_t.oofb011, 
   x_imaal_t_imaal003 LIKE imaal_t.imaal003, 
   x_t8_imaal003 LIKE imaal_t.imaal003, 
   l_xmdo002_ooag011 LIKE type_t.chr300, 
   l_xmdo003_ooefl003 LIKE type_t.chr1000, 
   x_t8_imaal004 LIKE imaal_t.imaal004, 
   l_xmdo010_desc LIKE type_t.chr100, 
   l_xmdo022_desc LIKE type_t.chr100, 
   l_xmdo023_desc LIKE type_t.chr100, 
   l_xmdo008_address LIKE type_t.chr300, 
   l_xmdo009_address LIKE type_t.chr300, 
   l_xmdosite_desc LIKE ooefl_t.ooefl006, 
   l_xmdp025_026 LIKE type_t.num20_6, 
   pmaal_t_pmaal003 LIKE pmaal_t.pmaal003, 
   l_xmdo009_pmaal003 LIKE type_t.chr1000, 
   l_xmdo008_pmaal003 LIKE type_t.chr1000, 
   l_xmdo007_pmaal003 LIKE type_t.chr1000, 
   l_xmdo019_pmaal003 LIKE type_t.chr1000, 
   t3_pmaal003 LIKE pmaal_t.pmaal003, 
   t4_pmaal003 LIKE pmaal_t.pmaal003, 
   t5_pmaal003 LIKE pmaal_t.pmaal003, 
   t3_pmaal004 LIKE pmaal_t.pmaal004
END RECORD
 
PRIVATE TYPE sr2_r RECORD
   ooff013 LIKE ooff_t.ooff013
END RECORD
 
 
DEFINE tm RECORD
       wc STRING                   #where condition
       END RECORD
DEFINE sr DYNAMIC ARRAY OF sr1_r                   #宣告sr為sr1_t資料結構的動態陣列
DEFINE g_select        STRING
DEFINE g_from          STRING
DEFINE g_where         STRING
DEFINE g_order         STRING
DEFINE g_sql           STRING                         #report_select_prep,REPORT段使用
 
#add-point:自定義環境變數(Global Variable)
{<point name="global.variable"/>}
#end add-point
]]>
  </section>
  <section id="axmr620_g01.ins_data" ver="19" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION axmr620_g01_ins_data()
#主報表record(用於select子句)
   DEFINE sr_s RECORD 
   xmdo001 LIKE xmdo_t.xmdo001, 
   xmdo002 LIKE xmdo_t.xmdo002, 
   xmdo003 LIKE xmdo_t.xmdo003, 
   xmdo004 LIKE xmdo_t.xmdo004, 
   xmdo005 LIKE xmdo_t.xmdo005, 
   xmdo007 LIKE xmdo_t.xmdo007, 
   xmdo008 LIKE xmdo_t.xmdo008, 
   xmdo009 LIKE xmdo_t.xmdo009, 
   xmdo010 LIKE xmdo_t.xmdo010, 
   xmdo011 LIKE xmdo_t.xmdo011, 
   xmdo012 LIKE xmdo_t.xmdo012, 
   xmdo013 LIKE xmdo_t.xmdo013, 
   xmdo014 LIKE xmdo_t.xmdo014, 
   xmdo015 LIKE xmdo_t.xmdo015, 
   xmdo016 LIKE xmdo_t.xmdo016, 
   xmdo017 LIKE xmdo_t.xmdo017, 
   xmdo019 LIKE xmdo_t.xmdo019, 
   xmdo020 LIKE xmdo_t.xmdo020, 
   xmdo021 LIKE xmdo_t.xmdo021, 
   xmdo022 LIKE xmdo_t.xmdo022, 
   xmdo023 LIKE xmdo_t.xmdo023, 
   xmdo024 LIKE xmdo_t.xmdo024, 
   xmdo025 LIKE xmdo_t.xmdo025, 
   xmdo026 LIKE xmdo_t.xmdo026, 
   xmdo029 LIKE xmdo_t.xmdo029, 
   xmdo053 LIKE xmdo_t.xmdo053, 
   xmdodocdt LIKE xmdo_t.xmdodocdt, 
   xmdodocno LIKE xmdo_t.xmdodocno, 
   xmdoent LIKE xmdo_t.xmdoent, 
   xmdosite LIKE xmdo_t.xmdosite, 
   xmdostus LIKE xmdo_t.xmdostus, 
   xmdp001 LIKE xmdp_t.xmdp001, 
   xmdp002 LIKE xmdp_t.xmdp002, 
   xmdp003 LIKE xmdp_t.xmdp003, 
   xmdp004 LIKE xmdp_t.xmdp004, 
   xmdp005 LIKE xmdp_t.xmdp005, 
   xmdp006 LIKE xmdp_t.xmdp006, 
   xmdp007 LIKE xmdp_t.xmdp007, 
   xmdp008 LIKE xmdp_t.xmdp008, 
   xmdp009 LIKE xmdp_t.xmdp009, 
   xmdp010 LIKE xmdp_t.xmdp010, 
   xmdp012 LIKE xmdp_t.xmdp012, 
   xmdp013 LIKE xmdp_t.xmdp013, 
   xmdp014 LIKE xmdp_t.xmdp014, 
   xmdp015 LIKE xmdp_t.xmdp015, 
   xmdp016 LIKE xmdp_t.xmdp016, 
   xmdp017 LIKE xmdp_t.xmdp017, 
   xmdp018 LIKE xmdp_t.xmdp018, 
   xmdp019 LIKE xmdp_t.xmdp019, 
   xmdp020 LIKE xmdp_t.xmdp020, 
   xmdp021 LIKE xmdp_t.xmdp021, 
   xmdp022 LIKE xmdp_t.xmdp022, 
   xmdp023 LIKE xmdp_t.xmdp023, 
   xmdp024 LIKE xmdp_t.xmdp024, 
   xmdp025 LIKE xmdp_t.xmdp025, 
   xmdp026 LIKE xmdp_t.xmdp026, 
   xmdp040 LIKE xmdp_t.xmdp040, 
   xmdpseq LIKE xmdp_t.xmdpseq, 
   xmdpsite LIKE xmdp_t.xmdpsite, 
   ooag_t_ooag011 LIKE ooag_t.ooag011, 
   ooefl_t_ooefl003 LIKE ooefl_t.ooefl003, 
   ooibl_t_ooibl004 LIKE ooibl_t.ooibl004, 
   ooail_t_ooail003 LIKE ooail_t.ooail003, 
   oofb_t_oofb011 LIKE oofb_t.oofb011, 
   x_imaal_t_imaal003 LIKE imaal_t.imaal003, 
   x_t8_imaal003 LIKE imaal_t.imaal003, 
   l_xmdo002_ooag011 LIKE type_t.chr300, 
   l_xmdo003_ooefl003 LIKE type_t.chr1000, 
   x_t8_imaal004 LIKE imaal_t.imaal004, 
   l_xmdo010_desc LIKE type_t.chr100, 
   l_xmdo022_desc LIKE type_t.chr100, 
   l_xmdo023_desc LIKE type_t.chr100, 
   l_xmdo008_address LIKE type_t.chr300, 
   l_xmdo009_address LIKE type_t.chr300, 
   l_xmdosite_desc LIKE ooefl_t.ooefl006, 
   l_xmdp025_026 LIKE type_t.num20_6, 
   pmaal_t_pmaal003 LIKE pmaal_t.pmaal003, 
   l_xmdo009_pmaal003 LIKE type_t.chr1000, 
   l_xmdo008_pmaal003 LIKE type_t.chr1000, 
   l_xmdo007_pmaal003 LIKE type_t.chr1000, 
   l_xmdo019_pmaal003 LIKE type_t.chr1000, 
   t3_pmaal003 LIKE pmaal_t.pmaal003, 
   t4_pmaal003 LIKE pmaal_t.pmaal003, 
   t5_pmaal003 LIKE pmaal_t.pmaal003, 
   t3_pmaal004 LIKE pmaal_t.pmaal004
 END RECORD
   DEFINE l_cnt           INTEGER
#add-point:ins_data段define
{<point name="ins_data.define"/>}
#end add-point
 
    #add-point:ins_data段before
    {<point name="ins_data.before"/>}
    #end add-point
 
    CALL sr.clear()                                  #rep sr
    LET l_cnt = 1
    FOREACH axmr620_g01_curs INTO sr_s.*
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()       
          LET g_rep_success = 'N'    
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach
       {<point name="ins_data.foreach"/>}
       #end add-point
 
       #add-point:ins_data段before_arr
       {<point name="ins_data.before.save"/>}
       #end add-point
 
       #set rep array value
       LET sr[l_cnt].xmdo001 = sr_s.xmdo001
       LET sr[l_cnt].xmdo002 = sr_s.xmdo002
       LET sr[l_cnt].xmdo003 = sr_s.xmdo003
       LET sr[l_cnt].xmdo004 = sr_s.xmdo004
       LET sr[l_cnt].xmdo005 = sr_s.xmdo005
       LET sr[l_cnt].xmdo007 = sr_s.xmdo007
       LET sr[l_cnt].xmdo008 = sr_s.xmdo008
       LET sr[l_cnt].xmdo009 = sr_s.xmdo009
       LET sr[l_cnt].xmdo010 = sr_s.xmdo010
       LET sr[l_cnt].xmdo011 = sr_s.xmdo011
       LET sr[l_cnt].xmdo012 = sr_s.xmdo012
       LET sr[l_cnt].xmdo013 = sr_s.xmdo013
       LET sr[l_cnt].xmdo014 = sr_s.xmdo014
       LET sr[l_cnt].xmdo015 = sr_s.xmdo015
       LET sr[l_cnt].xmdo016 = sr_s.xmdo016
       LET sr[l_cnt].xmdo017 = sr_s.xmdo017
       LET sr[l_cnt].xmdo019 = sr_s.xmdo019
       LET sr[l_cnt].xmdo020 = sr_s.xmdo020
       LET sr[l_cnt].xmdo021 = sr_s.xmdo021
       LET sr[l_cnt].xmdo022 = sr_s.xmdo022
       LET sr[l_cnt].xmdo023 = sr_s.xmdo023
       LET sr[l_cnt].xmdo024 = sr_s.xmdo024
       LET sr[l_cnt].xmdo025 = sr_s.xmdo025
       LET sr[l_cnt].xmdo026 = sr_s.xmdo026
       LET sr[l_cnt].xmdo029 = sr_s.xmdo029
       LET sr[l_cnt].xmdo053 = sr_s.xmdo053
       LET sr[l_cnt].xmdodocdt = sr_s.xmdodocdt
       LET sr[l_cnt].xmdodocno = sr_s.xmdodocno
       LET sr[l_cnt].xmdoent = sr_s.xmdoent
       LET sr[l_cnt].xmdosite = sr_s.xmdosite
       LET sr[l_cnt].xmdostus = sr_s.xmdostus
       LET sr[l_cnt].xmdp001 = sr_s.xmdp001
       LET sr[l_cnt].xmdp002 = sr_s.xmdp002
       LET sr[l_cnt].xmdp003 = sr_s.xmdp003
       LET sr[l_cnt].xmdp004 = sr_s.xmdp004
       LET sr[l_cnt].xmdp005 = sr_s.xmdp005
       LET sr[l_cnt].xmdp006 = sr_s.xmdp006
       LET sr[l_cnt].xmdp007 = sr_s.xmdp007
       LET sr[l_cnt].xmdp008 = sr_s.xmdp008
       LET sr[l_cnt].xmdp009 = sr_s.xmdp009
       LET sr[l_cnt].xmdp010 = sr_s.xmdp010
       LET sr[l_cnt].xmdp012 = sr_s.xmdp012
       LET sr[l_cnt].xmdp013 = sr_s.xmdp013
       LET sr[l_cnt].xmdp014 = sr_s.xmdp014
       LET sr[l_cnt].xmdp015 = sr_s.xmdp015
       LET sr[l_cnt].xmdp016 = sr_s.xmdp016
       LET sr[l_cnt].xmdp017 = sr_s.xmdp017
       LET sr[l_cnt].xmdp018 = sr_s.xmdp018
       LET sr[l_cnt].xmdp019 = sr_s.xmdp019
       LET sr[l_cnt].xmdp020 = sr_s.xmdp020
       LET sr[l_cnt].xmdp021 = sr_s.xmdp021
       LET sr[l_cnt].xmdp022 = sr_s.xmdp022
       LET sr[l_cnt].xmdp023 = sr_s.xmdp023
       LET sr[l_cnt].xmdp024 = sr_s.xmdp024
       LET sr[l_cnt].xmdp025 = sr_s.xmdp025
       LET sr[l_cnt].xmdp026 = sr_s.xmdp026
       LET sr[l_cnt].xmdp040 = sr_s.xmdp040
       LET sr[l_cnt].xmdpseq = sr_s.xmdpseq
       LET sr[l_cnt].xmdpsite = sr_s.xmdpsite
       LET sr[l_cnt].ooag_t_ooag011 = sr_s.ooag_t_ooag011
       LET sr[l_cnt].ooefl_t_ooefl003 = sr_s.ooefl_t_ooefl003
       LET sr[l_cnt].ooibl_t_ooibl004 = sr_s.ooibl_t_ooibl004
       LET sr[l_cnt].ooail_t_ooail003 = sr_s.ooail_t_ooail003
       LET sr[l_cnt].oofb_t_oofb011 = sr_s.oofb_t_oofb011
       LET sr[l_cnt].x_imaal_t_imaal003 = sr_s.x_imaal_t_imaal003
       LET sr[l_cnt].x_t8_imaal003 = sr_s.x_t8_imaal003
       LET sr[l_cnt].l_xmdo002_ooag011 = sr_s.l_xmdo002_ooag011
       LET sr[l_cnt].l_xmdo003_ooefl003 = sr_s.l_xmdo003_ooefl003
       LET sr[l_cnt].x_t8_imaal004 = sr_s.x_t8_imaal004
       LET sr[l_cnt].l_xmdo010_desc = sr_s.l_xmdo010_desc
       LET sr[l_cnt].l_xmdo022_desc = sr_s.l_xmdo022_desc
       LET sr[l_cnt].l_xmdo023_desc = sr_s.l_xmdo023_desc
       LET sr[l_cnt].l_xmdo008_address = sr_s.l_xmdo008_address
       LET sr[l_cnt].l_xmdo009_address = sr_s.l_xmdo009_address
       LET sr[l_cnt].l_xmdosite_desc = sr_s.l_xmdosite_desc
       LET sr[l_cnt].l_xmdp025_026 = sr_s.l_xmdp025_026
       LET sr[l_cnt].pmaal_t_pmaal003 = sr_s.pmaal_t_pmaal003
       LET sr[l_cnt].l_xmdo009_pmaal003 = sr_s.l_xmdo009_pmaal003
       LET sr[l_cnt].l_xmdo008_pmaal003 = sr_s.l_xmdo008_pmaal003
       LET sr[l_cnt].l_xmdo007_pmaal003 = sr_s.l_xmdo007_pmaal003
       LET sr[l_cnt].l_xmdo019_pmaal003 = sr_s.l_xmdo019_pmaal003
       LET sr[l_cnt].t3_pmaal003 = sr_s.t3_pmaal003
       LET sr[l_cnt].t4_pmaal003 = sr_s.t4_pmaal003
       LET sr[l_cnt].t5_pmaal003 = sr_s.t5_pmaal003
       LET sr[l_cnt].t3_pmaal004 = sr_s.t3_pmaal004
 
 
       #add-point:ins_data段after_arr
       {<point name="ins_data.after.save"/>}
       #end add-point
       LET l_cnt = l_cnt + 1
    END FOREACH
    CALL sr.deleteElement(l_cnt)
 
    #add-point:ins_data段after
    {<point name="ins_data.after"/>}
    #end add-point
END FUNCTION
]]>
  </section>
  <section id="axmr620_g01.main" ver="3" status="" src="s" readonly="">
    <![CDATA[PUBLIC FUNCTION axmr620_g01(p_arg1)
DEFINE  p_arg1 STRING                  #tm.wc  where condition
#add-point:init段define
{<point name="component_name.define"/>}
#end add-point
 
   LET tm.wc = p_arg1
 
   #add-point:報表元件參數準備
   {<point name="component.arg.prep" />}
   #end add-point
   #報表元件代號
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'   
   
   LET g_rep_code = "axmr620_g01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #主報表select子句準備
   CALL axmr620_g01_sel_prep()
   
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
 
   #將資料存入array
   CALL axmr620_g01_ins_data()
   
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
 
   #將資料印出
   CALL axmr620_g01_rep_data()
 
END FUNCTION
]]>
  </section>
  <section id="axmr620_g01.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="axmr620_g01.other_report" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.report"/>}
]]>
  </section>
  <section id="axmr620_g01.rep" ver="13" status="" src="s" readonly="">
    <![CDATA[PRIVATE REPORT axmr620_g01_rep(sr1)
DEFINE sr1 sr1_r
DEFINE sr2 sr2_r
DEFINE l_subrep01_show  LIKE type_t.chr1,
       l_subrep02_show  LIKE type_t.chr1,
       l_subrep03_show  LIKE type_t.chr1,
       l_subrep04_show  LIKE type_t.chr1
DEFINE l_cnt           LIKE type_t.num5
DEFINE l_sub_sql       STRING
#add-point:rep段define
{<point name="rep.define"/>}
#end add-point
 
    #add-point:rep段ORDER_before
    {<point name="rep.order.before" mark="Y"/>}
    #end add-point
    ORDER EXTERNAL BY sr1.xmdodocno,sr1.xmdpseq
    #add-point:rep段ORDER_after
    {<point name="rep.order.after"/>}
    #end add-point
    
    FORMAT
       FIRST PAGE HEADER          
          PRINTX g_user,g_pdate,g_rep_code,g_company,g_ptime,g_user_name,g_date_fmt
          PRINTX tm.*
          PRINTX g_grNumFmt.*
 
          #讀取beforeGrup子樣板+子報表樣板
        #報表 d01 樣板自動產生(Version:1)
        BEFORE GROUP OF sr1.xmdodocno
            #報表 d05 樣板自動產生(Version:5)
            CALL cl_gr_title_clear()  #清除title變數值 
            #add-point:rep.header  #公司資訊(不在公用變數內)
            {<point name="rep.header"  mark="Y"/>}
            #end add-point:rep.header 
            LET g_rep_docno = sr1.xmdodocno
            CALL cl_gr_init_pageheader() #表頭資訊
            PRINTX g_grPageHeader.*
            PRINTX g_grPageFooter.*
            #add-point:rep.apr.signstr.before
            {<point name="rep.apr.signstr.before"  mark="Y"/>}              
            #end add-point:rep.apr.signstr.before   
            LET g_doc_key = 'xmdoent=' ,sr1.xmdoent,'{+}xmdodocno=' ,sr1.xmdodocno         
            CALL cl_gr_init_apr(sr1.xmdodocno)
            #add-point:rep.apr.signstr
            {<point name="rep.apr.signstr"/>}              
            #end add-point:rep.apr.signstr
            PRINTX g_grSign.*
 
 
 
           #add-point:rep.b_group.xmdodocno.before
           {<point name="rep.b_group.xmdodocno.before"/>}
           #end add-point:
 
           #報表 d03 樣板自動產生(Version:2)
           #add-point:rep.sub01.before
           {<point name="rep.sub01.before"/>}
           #end add-point:rep.sub01.before
 
           #add-point:rep.sub01.sql
           {<point name="rep.sub01.sql" mark="Y"/>}
           #end add-point:rep.sub01.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='6' AND ooff012='2' AND ooffent = '", 
                sr1.xmdoent CLIPPED ,"'", " AND  ooff002 = '", sr1.xmdodocno CLIPPED ,"'"
 
           #add-point:rep.sub01.afsql
           {<point name="rep.sub01.afsql"/>}
           #end add-point:rep.sub01.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep01_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE axmr620_g01_repcur01_cnt_pre FROM l_sub_sql
           EXECUTE axmr620_g01_repcur01_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep01_show ="Y"
           END IF
           PRINTX l_subrep01_show
           START REPORT axmr620_g01_subrep01
           DECLARE axmr620_g01_repcur01 CURSOR FROM g_sql
           FOREACH axmr620_g01_repcur01 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "axmr620_g01_repcur01:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub01.foreach
              {<point name="rep.sub01.foreach"/>}
              #end add-point:rep.sub01.foreach
              OUTPUT TO REPORT axmr620_g01_subrep01(sr2.*)
           END FOREACH
           FINISH REPORT axmr620_g01_subrep01
           #add-point:rep.sub01.after
           {<point name="rep.sub01.after"/>}
           #end add-point:rep.sub01.after
 
 
 
           #add-point:rep.b_group.xmdodocno.after
           {<point name="rep.b_group.xmdodocno.after"/>}
           #end add-point:
 
 
        #報表 d01 樣板自動產生(Version:1)
        BEFORE GROUP OF sr1.xmdpseq
 
           #add-point:rep.b_group.xmdpseq.before
           {<point name="rep.b_group.xmdpseq.before"/>}
           #end add-point:
 
 
           #add-point:rep.b_group.xmdpseq.after
           {<point name="rep.b_group.xmdpseq.after"/>}
           #end add-point:
 
 
 
 
       ON EVERY ROW
          #add-point:rep.everyrow.before
          {<point name="rep.everyrow.before"/>}
          #end add-point:rep.everyrow.before
 
          #單身前備註
             #報表 d03 樣板自動產生(Version:2)
           #add-point:rep.sub02.before
           {<point name="rep.sub02.before"/>}
           #end add-point:rep.sub02.before
 
           #add-point:rep.sub02.sql
           {<point name="rep.sub02.sql" mark="Y"/>}
           #end add-point:rep.sub02.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='7' AND ooff012='2' AND ooffent = '", 
                sr1.xmdoent CLIPPED ,"'", " AND  ooff002 = '", sr1.xmdodocno CLIPPED ,"'", " AND  ooff003 = '", 
                sr1.xmdpseq CLIPPED ,"'"
 
           #add-point:rep.sub02.afsql
           {<point name="rep.sub02.afsql"/>}
           #end add-point:rep.sub02.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep02_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE axmr620_g01_repcur02_cnt_pre FROM l_sub_sql
           EXECUTE axmr620_g01_repcur02_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep02_show ="Y"
           END IF
           PRINTX l_subrep02_show
           START REPORT axmr620_g01_subrep02
           DECLARE axmr620_g01_repcur02 CURSOR FROM g_sql
           FOREACH axmr620_g01_repcur02 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "axmr620_g01_repcur02:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub02.foreach
              {<point name="rep.sub02.foreach"/>}
              #end add-point:rep.sub02.foreach
              OUTPUT TO REPORT axmr620_g01_subrep02(sr2.*)
           END FOREACH
           FINISH REPORT axmr620_g01_subrep02
           #add-point:rep.sub02.after
           {<point name="rep.sub02.after"/>}
           #end add-point:rep.sub02.after
 
 
 
          #add-point:rep.everyrow.beforerow
          {<point name="rep.everyrow.beforerow"/>}
          #end add-point:rep.everyrow.beforerow
            
          PRINTX sr1.*
 
          #add-point:rep.everyrow.afterrow
          {<point name="rep.everyrow.afterrow"/>}
          #end add-point:rep.everyrow.afterrow
 
          #單身後備註
             #報表 d03 樣板自動產生(Version:2)
           #add-point:rep.sub03.before
           {<point name="rep.sub03.before"/>}
           #end add-point:rep.sub03.before
 
           #add-point:rep.sub03.sql
           {<point name="rep.sub03.sql" mark="Y"/>}
           #end add-point:rep.sub03.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='7' AND ooff012='1' AND ooffent = '", 
                sr1.xmdoent CLIPPED ,"'", " AND  ooff002 = '", sr1.xmdodocno CLIPPED ,"'", " AND  ooff003 = '", 
                sr1.xmdpseq CLIPPED ,"'"
 
           #add-point:rep.sub03.afsql
           {<point name="rep.sub03.afsql"/>}
           #end add-point:rep.sub03.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep03_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE axmr620_g01_repcur03_cnt_pre FROM l_sub_sql
           EXECUTE axmr620_g01_repcur03_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep03_show ="Y"
           END IF
           PRINTX l_subrep03_show
           START REPORT axmr620_g01_subrep03
           DECLARE axmr620_g01_repcur03 CURSOR FROM g_sql
           FOREACH axmr620_g01_repcur03 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "axmr620_g01_repcur03:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub03.foreach
              {<point name="rep.sub03.foreach"/>}
              #end add-point:rep.sub03.foreach
              OUTPUT TO REPORT axmr620_g01_subrep03(sr2.*)
           END FOREACH
           FINISH REPORT axmr620_g01_subrep03
           #add-point:rep.sub03.after
           {<point name="rep.sub03.after"/>}
           #end add-point:rep.sub03.after
 
 
 
          #add-point:rep.everyrow.after
          {<point name="rep.everyrow.after"/>}
          #end add-point:rep.everyrow.after        
 
          #讀取afterGrup子樣板+子報表樣板
        #報表 d01 樣板自動產生(Version:1)
        AFTER GROUP OF sr1.xmdodocno
 
           #add-point:rep.a_group.xmdodocno.before
           {<point name="rep.a_group.xmdodocno.before"/>}
           #end add-point:
 
           #報表 d03 樣板自動產生(Version:2)
           #add-point:rep.sub04.before
           {<point name="rep.sub04.before"/>}
           #end add-point:rep.sub04.before
 
           #add-point:rep.sub04.sql
           {<point name="rep.sub04.sql" mark="Y"/>}
           #end add-point:rep.sub04.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='6' AND ooff012='1' AND ooffent = '", 
                sr1.xmdoent CLIPPED ,"'", " AND  ooff002 = '", sr1.xmdodocno CLIPPED ,"'"
 
           #add-point:rep.sub04.afsql
           {<point name="rep.sub04.afsql"/>}
           #end add-point:rep.sub04.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep04_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE axmr620_g01_repcur04_cnt_pre FROM l_sub_sql
           EXECUTE axmr620_g01_repcur04_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep04_show ="Y"
           END IF
           PRINTX l_subrep04_show
           START REPORT axmr620_g01_subrep04
           DECLARE axmr620_g01_repcur04 CURSOR FROM g_sql
           FOREACH axmr620_g01_repcur04 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "axmr620_g01_repcur04:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub04.foreach
              {<point name="rep.sub04.foreach"/>}
              #end add-point:rep.sub04.foreach
              OUTPUT TO REPORT axmr620_g01_subrep04(sr2.*)
           END FOREACH
           FINISH REPORT axmr620_g01_subrep04
           #add-point:rep.sub04.after
           {<point name="rep.sub04.after"/>}
           #end add-point:rep.sub04.after
 
 
 
           #add-point:rep.a_group.xmdodocno.after
           {<point name="rep.a_group.xmdodocno.after"/>}
           #end add-point:
 
 
        #報表 d01 樣板自動產生(Version:1)
        AFTER GROUP OF sr1.xmdpseq
 
           #add-point:rep.a_group.xmdpseq.before
           {<point name="rep.a_group.xmdpseq.before"/>}
           #end add-point:
 
 
           #add-point:rep.a_group.xmdpseq.after
           {<point name="rep.a_group.xmdpseq.after"/>}
           #end add-point:
 
 
 
       ON LAST ROW
            #add-point:rep.lastrow.before  
            {<point name="rep.lastrow.before"/>}        
            #edn add point :rep.lastrow.before
 
            #add-point:rep.lastrow.after
            {<point name="rep.lastrow.after"/>}
            #edn add point :rep.lastrow.after
END REPORT
]]>
  </section>
  <section id="axmr620_g01.rep_data" ver="5" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION axmr620_g01_rep_data()
   DEFINE HANDLER         om.SaxDocumentHandler
   DEFINE l_i             INTEGER
 
    #判斷是否有報表資料，若回彈出訊息視窗
    IF sr.getLength() = 0 THEN
       INITIALIZE g_errparam TO NULL
       LET g_errparam.code = "adz-00285"
       LET g_errparam.extend = NULL
       LET g_errparam.popup  = FALSE
       LET g_errparam.replace[1] = ''
       CALL cl_err()  
       RETURN 
    END IF
    WHILE TRUE               
       LET handler = cl_gr_handler()
       IF handler IS NOT NULL THEN
          START REPORT axmr620_g01_rep TO XML HANDLER handler
          FOR l_i = 1 TO sr.getLength()
             OUTPUT TO REPORT axmr620_g01_rep(sr[l_i].*)
          END FOR
          FINISH REPORT axmr620_g01_rep
       END IF
       IF INT_FLAG = TRUE THEN
          LET INT_FLAG = FALSE
          EXIT WHILE
       END IF
    END WHILE
    CALL cl_gr_close_report()
END FUNCTION
]]>
  </section>
  <section id="axmr620_g01.sel_prep" ver="20" status="" src="s" readonly="">
    <![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION axmr620_g01_sel_prep()
   #add-point:sel_prep段define
   {<point name="sel_prep.define"/>}
   #end add-point
 
   #add-point:sel_prep before
   {<point name="sel_prep.before" mark="Y"/>}
   #end add-point
   
   #add-point:sel_prep g_select
   {<point name="sel_prep.g_select" mark="Y"/>}
   #end add-point
   LET g_select = " SELECT xmdo001,xmdo002,xmdo003,xmdo004,xmdo005,xmdo007,xmdo008,xmdo009,xmdo010,xmdo011, 
       xmdo012,xmdo013,xmdo014,xmdo015,xmdo016,xmdo017,xmdo019,xmdo020,xmdo021,xmdo022,xmdo023,xmdo024, 
       xmdo025,xmdo026,xmdo029,xmdo053,xmdodocdt,xmdodocno,xmdoent,xmdosite,xmdostus,xmdp001,xmdp002, 
       xmdp003,xmdp004,xmdp005,xmdp006,xmdp007,xmdp008,xmdp009,xmdp010,xmdp012,xmdp013,xmdp014,xmdp015, 
       xmdp016,xmdp017,xmdp018,xmdp019,xmdp020,xmdp021,xmdp022,xmdp023,xmdp024,xmdp025,xmdp026,xmdp040, 
       xmdpseq,xmdpsite,ooag_t.ooag011,ooefl_t.ooefl003,ooibl_t.ooibl004,ooail_t.ooail003,oofb_t.oofb011, 
       x.imaal_t_imaal003,x.t8_imaal003,trim(xmdo002)||'.'||trim(ooag_t.ooag011),trim(xmdo003)||'.'||trim(ooefl_t.ooefl003), 
       x.t8_imaal004,'','','','','','',NULL,pmaal_t.pmaal003,trim(xmdo009)||'.'||trim(t5.pmaal003),trim(xmdo008)||'.'||trim(t4.pmaal003), 
       trim(xmdo007)||'.'||trim(t3.pmaal003),trim(xmdo019)||'.'||trim(pmaal_t.pmaal003),t3.pmaal003, 
       t4.pmaal003,t5.pmaal003,t3.pmaal004"
 
   #add-point:sel_prep g_from
   {<point name="sel_prep.g_from" mark="Y"/>}
   #end add-point
    LET g_from = " FROM xmdo_t LEFT OUTER JOIN ooag_t ON ooag_t.ooag001 = xmdo_t.xmdo002 AND ooag_t.ooagent = xmdo_t.xmdoent             LEFT OUTER JOIN oofb_t ON oofb_t.oofb001 = xmdo_t.xmdo020 AND oofb_t.oofbent = xmdo_t.xmdoent             LEFT OUTER JOIN pmaal_t ON pmaal_t.pmaal001 = xmdo_t.xmdo019 AND pmaal_t.pmaalent = xmdo_t.xmdoent AND pmaal_t.pmaal002 = '" , 
        g_dlang,"'" ,"             LEFT OUTER JOIN ooail_t ON ooail_t.ooail001 = xmdo_t.xmdo016 AND ooail_t.ooailent = xmdo_t.xmdoent AND ooail_t.ooail002 = '" , 
        g_dlang,"'" ,"             LEFT OUTER JOIN ooefl_t ON ooefl_t.ooefl001 = xmdo_t.xmdo003 AND ooefl_t.ooeflent = xmdo_t.xmdoent AND ooefl_t.ooefl002 = '" , 
        g_dlang,"'" ,"             LEFT OUTER JOIN pmaal_t t3 ON t3.pmaal001 = xmdo_t.xmdo007 AND t3.pmaalent = xmdo_t.xmdoent AND t3.pmaal002 = '" , 
        g_dlang,"'" ,"             LEFT OUTER JOIN pmaal_t t4 ON t4.pmaal001 = xmdo_t.xmdo008 AND t4.pmaalent = xmdo_t.xmdoent AND t4.pmaal002 = '" , 
        g_dlang,"'" ,"             LEFT OUTER JOIN pmaal_t t5 ON t5.pmaal001 = xmdo_t.xmdo009 AND t5.pmaalent = xmdo_t.xmdoent AND t5.pmaal002 = '" , 
        g_dlang,"'" ,"             LEFT OUTER JOIN ooibl_t ON ooibl_t.ooibl002 = xmdo_t.xmdo010 AND ooibl_t.ooiblent = xmdo_t.xmdoent AND ooibl_t.ooibl003 = '" , 
        g_dlang,"'" ," LEFT OUTER JOIN ( SELECT xmdp_t.*,imaal_t.imaal003 imaal_t_imaal003,t8.imaal003 t8_imaal003, 
        t8.imaal004 t8_imaal004 FROM xmdp_t LEFT OUTER JOIN imaal_t ON imaal_t.imaal001 = xmdp_t.xmdp012 AND imaal_t.imaalent = xmdp_t.xmdpent AND imaal_t.imaal002 = '" , 
        g_dlang,"'" ,"             LEFT OUTER JOIN imaal_t t8 ON t8.imaal001 = xmdp_t.xmdp008 AND t8.imaalent = xmdp_t.xmdpent AND t8.imaal002 = '" , 
        g_dlang,"'" ," ) x  ON xmdo_t.xmdodocno = x.xmdpdocno AND xmdo_t.xmdoent = x.xmdpent"
 
   #add-point:sel_prep g_where
   {<point name="sel_prep.g_where" mark="Y"/>}
   #end add-point
    LET g_where = " WHERE " ,tm.wc CLIPPED 
 
   #add-point:sel_prep g_order
   {<point name="sel_prep.g_order" mark="Y"/>}
   #end add-point
    LET g_order = " ORDER BY xmdodocno,xmdpseq"
 
   #add-point:sel_prep.sql.before
   {<point name="sel_prep.sql.before" mark="Y"/>}
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("xmdo_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED ," ",g_order CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段 
 
   #add-point:sel_prep.sql.after
   {<point name="sel_prep.sql.after" mark="Y"/>}
   #end add-point
   PREPARE axmr620_g01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()   
      LET g_rep_success = 'N'    
   END IF
   DECLARE axmr620_g01_curs CURSOR FOR axmr620_g01_prepare
 
END FUNCTION
]]>
  </section>
  <section id="axmr620_g01.subrep_str" ver="2" status="" src="s" readonly="">
    <![CDATA[#讀取子報表樣板
#報表 d02 樣板自動產生(Version:1)
PRIVATE REPORT axmr620_g01_subrep01(sr2)
DEFINE  sr2  sr2_r
#add-point:sub01.define
{<point name="sub01.define"/>}
#end add-point:sub01.define
 
    #add-point:sub01.order.before
    {<point name="sub01.order.before"/>}
    #end add-point:sub01.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub01.everyrow.before
            {<point name="sub01.everyrow.before"/>}              
            #end add-point:sub01.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub01.everyrow.after
            {<point name="sub01.everyrow.after"/>}
            #end add-point:sub01.everyrow.after
 
 
END REPORT
 
 
#報表 d02 樣板自動產生(Version:1)
PRIVATE REPORT axmr620_g01_subrep02(sr2)
DEFINE  sr2  sr2_r
#add-point:sub02.define
{<point name="sub02.define"/>}
#end add-point:sub02.define
 
    #add-point:sub02.order.before
    {<point name="sub02.order.before"/>}
    #end add-point:sub02.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub02.everyrow.before
            {<point name="sub02.everyrow.before"/>}              
            #end add-point:sub02.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub02.everyrow.after
            {<point name="sub02.everyrow.after"/>}
            #end add-point:sub02.everyrow.after
 
 
END REPORT
 
 
#報表 d02 樣板自動產生(Version:1)
PRIVATE REPORT axmr620_g01_subrep03(sr2)
DEFINE  sr2  sr2_r
#add-point:sub03.define
{<point name="sub03.define"/>}
#end add-point:sub03.define
 
    #add-point:sub03.order.before
    {<point name="sub03.order.before"/>}
    #end add-point:sub03.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub03.everyrow.before
            {<point name="sub03.everyrow.before"/>}              
            #end add-point:sub03.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub03.everyrow.after
            {<point name="sub03.everyrow.after"/>}
            #end add-point:sub03.everyrow.after
 
 
END REPORT
 
 
#報表 d02 樣板自動產生(Version:1)
PRIVATE REPORT axmr620_g01_subrep04(sr2)
DEFINE  sr2  sr2_r
#add-point:sub04.define
{<point name="sub04.define"/>}
#end add-point:sub04.define
 
    #add-point:sub04.order.before
    {<point name="sub04.order.before"/>}
    #end add-point:sub04.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub04.everyrow.before
            {<point name="sub04.everyrow.before"/>}              
            #end add-point:sub04.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub04.everyrow.after
            {<point name="sub04.everyrow.after"/>}
            #end add-point:sub04.everyrow.after
 
 
END REPORT
 
 
 
]]>
  </section>
</add_points>
