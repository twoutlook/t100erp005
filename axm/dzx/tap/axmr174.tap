<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="axmr174" std_prog="axmr174" erpver="1.0" module="AXM" ver="2" env="s" zone="t10prd" booking="Y" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="R" status="u"/>
    <free_style value="N" status="u"/>
    <start_arg value="1" status="u"/>
  </other>
  <point name="construct.c.imaa009" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_rtax001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imaa009  #顯示到畫面上
            NEXT FIELD imaa009                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.xmig001" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xmia001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmig001  #顯示到畫面上
            NEXT FIELD xmig001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.xmig004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xmig004()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmig004  #顯示到畫面上
            NEXT FIELD xmig004                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.xmig005" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmig005  #顯示到畫面上
            NEXT FIELD xmig005                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.xmig006" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmig006  #顯示到畫面上
            NEXT FIELD xmig006                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.xmigsite" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooef001_14()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmigsite  #顯示到畫面上
            NEXT FIELD xmigsite                     #返回原欄位
    

]]>
  </point>
  <point name="global.parameter" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[        act1             LIKE type_t.chr1,]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_combo_scc('xmig017','3014') 
   LET g_master.act1 = 1]]>
  </point>
  <point name="main.background" order="" ver="2" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[#   LET g_argv[1] = cl_replace_str(g_argv[1], '\"', '') 
#   LET g_argv[2] = cl_replace_str(g_argv[2], '\"', '') 
#   LET lc_param.wc = g_argv[1]
#   LET lc_param.act1 = g_argv[2]
#   LET ls_js = util.JSON.stringify(lc_param)
#   IF NOT cl_null(lc_param.wc) THEN
#      LET g_bgjob = "Y"
#   ELSE
#      LET g_bgjob = "N"
#   END IF]]>
  </point>
  <point name="process.exit_dialog" order="" ver="2" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[#      LET lc_param.wc = g_master.wc
#      LET lc_param.act1 = g_master.act1]]>
  </point>
  <point name="process.pre_process" order="" ver="2" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF cl_null(g_master.wc) THEN
      ##新增一個變數陣列傳值
      CALL l_arg.clear()
      LET l_token = base.StringTokenizer.create(ls_js,",")
      LET l_cnt = 1
      WHILE l_token.hasMoreTokens()
            LET ls_next = l_token.nextToken()
            LET l_arg[l_cnt] = ls_next
            LET l_cnt = l_cnt + 1
      END WHILE
      CALL l_arg.deleteElement(l_cnt)
      LET g_master.wc = l_arg[1]
      LET g_master.act1 = g_argv[01]
   ELSE
      LET g_master.wc = g_master.wc CLIPPED," AND xmigent = ",g_enterprise
   END IF   
   IF g_master.act1 = 1 THEN
      CALL axmr174_x01(g_master.wc)
   ELSE
      CALL axmr174_x02(g_master.wc)
   END IF
#   CASE lc_param.act1
#      WHEN '1'
#         CALL axmr174_x01(lc_param.wc)
#      WHEN '2'
#         CALL axmr174_x02(lc_param.wc)
#   END CASE]]>
  </point>
  <point name="transfer.argv.define" order="" ver="2" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[#   LET la_cmdrun.param[1] = la_param.wc
#   LET la_cmdrun.param[2] = la_param.act1]]>
  </point>
  <section id="axmr174.description" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000037
#+ 
#+ Filename...: axmr174
#+ Description: 銷售預測生管調整表
#+ Creator....: 02748(2014-09-02 09:32:59)
#+ Modifier...: 02748(2014-09-04 10:02:11) -SD/PR-
]]>
  </section>
  <section id="axmr174.get_buffer" ver="2" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION axmr174_get_buffer(p_dialog)
   DEFINE p_dialog   ui.DIALOG
   
   LET g_master.act1 = p_dialog.getFieldBuffer('act1')
 
   CALL cl_schedule_get_buffer(p_dialog)
 
   #add-point:get_buffer段其他欄位處理
   {<point name="get_buffer.others"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="axmr174.global" ver="6" status="" src="s" readonly="">
    <![CDATA[#應用 r01 樣板自動產生(Version:12)
{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_schedule
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_schedule.inc"
GLOBALS
   DEFINE gwin_curr2  ui.Window
   DEFINE gfrm_curr2  ui.Form
   DEFINE gi_hiden_asign       LIKE type_t.num5
   DEFINE gi_hiden_exec        LIKE type_t.num5
   DEFINE gi_hiden_spec        LIKE type_t.num5
   DEFINE gi_hiden_exec_end    LIKE type_t.num5
   DEFINE gi_hiden_rep_temp    LIKE type_t.num5             
   DEFINE g_chk_jobid          LIKE type_t.num5               
END GLOBALS
 
PRIVATE TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
   {<point name="global.parameter"/>}
   #end add-point
        wc               STRING
                     END RECORD
 
DEFINE g_sql             STRING        #組 sql 用
DEFINE g_forupd_sql      STRING        #SELECT ... FOR UPDATE  SQL
DEFINE g_error_show      LIKE type_t.num5
DEFINE g_jobid           STRING
DEFINE g_wc              STRING
 
PRIVATE TYPE type_master RECORD
       xmigsite LIKE xmig_t.xmigsite, 
   xmig001 LIKE xmig_t.xmig001, 
   xmig002 LIKE xmig_t.xmig002, 
   xmig003 LIKE xmig_t.xmig003, 
   xmig005 LIKE xmig_t.xmig005, 
   xmig006 LIKE xmig_t.xmig006, 
   imaa009 LIKE imaa_t.imaa009, 
   xmig004 LIKE xmig_t.xmig004, 
   xmig017 LIKE xmig_t.xmig017, 
   act1 LIKE type_t.chr500,
       wc               STRING
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_master type_master
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="axmr174.init" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 初始化作業
PRIVATE FUNCTION axmr174_init()
   #add-point:init段define 
   {<point name="init.define" edit="s"/>}
   #end add-point
   #add-point:init段define (客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point
   
   LET g_error_show = 1
   LET gwin_curr2 = ui.Window.getCurrent()
   LET gfrm_curr2 = gwin_curr2.getForm()
   CALL cl_schedule_import_4fd()
   CALL cl_set_combo_scc("gzpa003","75")
   IF cl_get_para(g_enterprise,"","E-SYS-0005") = "N" THEN
       CALL cl_set_comp_visible("scheduling_page,history_page",FALSE)
   END IF 
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="axmr174.main" ver="5" status="" src="s" readonly="">
    <![CDATA[MAIN
   DEFINE ls_js    STRING
   DEFINE lc_param type_parameter  
   #add-point:main段define 
   {<point name="main.define" edit="s"/>}
   #end add-point 
   #add-point:main段define (客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point 
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axm","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   {<point name="main.background"/>}
   #end add-point   
 
   #背景(Y) 或半背景(T) 時不做主畫面開窗
   IF g_bgjob = "Y" OR g_bgjob = "T" THEN
      #排程參數由02開始，若不是1開始，表示有保留參數
      LET ls_js = g_argv[02]
      CALL util.JSON.parse(ls_js,g_master)      #r類背景參數解析入口
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
      CALL axmr174_process(ls_js)
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axmr174 WITH FORM cl_ap_formpath("axm",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL axmr174_init()
 
      #進入選單 Menu (="N")
      CALL axmr174_ui_dialog()
 
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_axmr174
   END IF
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
]]>
  </section>
  <section id="axmr174.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[#add-point:自定義元件(Function)
{<point name="other.function"/>}
#end add-point
]]>
  </section>
  <section id="axmr174.process" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 資料處理   (r類使用g_master為主處理/p類使用l_param為主)
PRIVATE FUNCTION axmr174_process(ls_js)
   DEFINE ls_js         STRING
   DEFINE lc_param      type_parameter
   DEFINE li_stus       LIKE type_t.num5
   DEFINE li_count      LIKE type_t.num10  #progressbar計量
   DEFINE ls_sql        STRING             #主SQL
   DEFINE li_r01_status LIKE type_t.num5
   DEFINE l_token       base.StringTokenizer      #cmdrun使用
   DEFINE ls_next       STRING                    #cmdrun使用
   DEFINE l_cnt         LIKE type_t.num5          #cmdrun使用   
   DEFINE l_arg         DYNAMIC ARRAY OF STRING   ##cmdrun使用的陣列 
   #add-point:process段define 
   {<point name="process.define" edit="s"/>}
   #end add-point
   #add-point:process段define (客製用)
   {<point name="process.define_customerization" edit="c"/>}
   #end add-point
 
   INITIALIZE lc_param TO NULL
   CALL util.JSON.parse(ls_js,lc_param)  #r類作業被t類呼叫時使用, p類主要解開參數處
 
  #IF lc_param.wc IS NOT NULL THEN
  #   LET g_bgjob = "T"       #特殊情況,此為t類作業鬆耦合串入報表主程式使用
  #END IF
 
   #add-point:process段前處理
   {<point name="process.pre_process"/>}
   #end add-point
 
   #預先計算progressbar迴圈次數   #r類不用計算進度條
   IF g_bgjob <> "Y" THEN
      #add-point:process段count_progress
      {<point name="process.count_progress"/>}
      #end add-point
   END IF
 
   #主SQL及相關FOREACH前置處理
#  DECLARE axmr174_process_cs CURSOR FROM ls_sql
#  FOREACH axmr174_process_cs INTO
   #add-point:process段process
   {<point name="process.process"/>}
   #end add-point
#  END FOREACH
 
   IF g_bgjob = "N" OR g_bgjob = "T" THEN
      #前景作業完成處理
      #add-point:process段foreground完成處理
      {<point name="process.foreground_finish"/>}
      #end add-point
   ELSE
      #背景作業完成處理
      #add-point:process段background完成處理
      {<point name="process.background_finish"/>}
      #end add-point
      CALL cl_schedule_exec_call(li_r01_status)
   END IF
END FUNCTION
]]>
  </section>
  <section id="axmr174.transfer_argv" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 轉換本地參數至cmdrun參數內,準備進入背景執行
PRIVATE FUNCTION axmr174_transfer_argv(ls_js)
   DEFINE ls_js       STRING
   DEFINE la_cmdrun   RECORD
             prog       STRING,
             actionid   STRING,
             background LIKE type_t.chr1,
             param      DYNAMIC ARRAY OF STRING
                  END RECORD
   DEFINE la_param    type_parameter
   #add-point:transfer_agrv段define 
   {<point name="transfer_agrv.define" edit="s"/>}
   #end add-point
   #add-point:transfer_agrv段define (客製用)
   {<point name="transfer_agrv.define_customerization" edit="c"/>}
   #end add-point
 
   LET la_cmdrun.prog = g_prog
   LET la_cmdrun.background = "Y"
   LET la_cmdrun.param[1] = ls_js
 
   #add-point:transfer.argv段程式內容
   {<point name="transfer.argv.define"/>}
   #end add-point
 
   RETURN util.JSON.stringify( la_cmdrun )
END FUNCTION
]]>
  </section>
  <section id="axmr174.ui_dialog" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION axmr174_ui_dialog()
   DEFINE li_exit  LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx   LIKE type_t.num10
   DEFINE ls_js    STRING
   DEFINE ls_wc    STRING
   DEFINE l_dialog ui.DIALOG
   DEFINE lc_param type_parameter
   #add-point:ui_dialog段define 
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define (客製用)
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:ui_dialog段before dialog
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   WHILE TRUE
      #add-point:ui_dialog段before dialog2
      {<point name="ui_dialog.before_dialog2"/>}
      #end add-point
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #應用 a57 樣板自動產生(Version:2)
         INPUT BY NAME g_master.act1 
            ATTRIBUTE(WITHOUT DEFAULTS)
            
            #自訂ACTION(master_input)
            
         
            BEFORE INPUT
               #add-point:資料輸入前
               {<point name="input.m.before_input"/>}
               #end add-point
         
                     #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD act1
            #add-point:BEFORE FIELD act1
            {<point name="input.b.act1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD act1
            
            #add-point:AFTER FIELD act1
            {<point name="input.a.act1" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE act1
            #add-point:ON CHANGE act1
            {<point name="input.g.act1" />}
            #END add-point 
 
 
                     #Ctrlp:input.c.act1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD act1
            #add-point:ON ACTION controlp INFIELD act1
            {<point name="input.c.act1" />}
            #END add-point
 
 
               
            AFTER INPUT
               #add-point:資料輸入後
               {<point name="input.m.after_input"/>}
               #end add-point
               
            #add-point:其他管控(on row change, etc...)
            {<point name="input.other"/>}
            #end add-point
         END INPUT
 
 
         
         #應用 a58 樣板自動產生(Version:2)
         CONSTRUCT BY NAME g_master.wc ON xmigsite,xmig001,xmig002,xmig003,xmig005,xmig006,imaa009,xmig004, 
             xmig017
            BEFORE CONSTRUCT
               #add-point:cs段before_construct
               {<point name="cs.head.before_construct"/>}
               #end add-point 
         
            #公用欄位開窗相關處理
            
               
            #一般欄位開窗相關處理    
                     #Ctrlp:construct.c.xmigsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmigsite
            #add-point:ON ACTION controlp INFIELD xmigsite
            {<point name="construct.c.xmigsite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmigsite
            #add-point:BEFORE FIELD xmigsite
            {<point name="construct.b.xmigsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmigsite
            
            #add-point:AFTER FIELD xmigsite
            {<point name="construct.a.xmigsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmig001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmig001
            #add-point:ON ACTION controlp INFIELD xmig001
            {<point name="construct.c.xmig001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmig001
            #add-point:BEFORE FIELD xmig001
            {<point name="construct.b.xmig001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmig001
            
            #add-point:AFTER FIELD xmig001
            {<point name="construct.a.xmig001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmig002
            #add-point:BEFORE FIELD xmig002
            {<point name="construct.b.xmig002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmig002
            
            #add-point:AFTER FIELD xmig002
            {<point name="construct.a.xmig002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmig002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmig002
            #add-point:ON ACTION controlp INFIELD xmig002
            {<point name="construct.c.xmig002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmig003
            #add-point:BEFORE FIELD xmig003
            {<point name="construct.b.xmig003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmig003
            
            #add-point:AFTER FIELD xmig003
            {<point name="construct.a.xmig003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmig003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmig003
            #add-point:ON ACTION controlp INFIELD xmig003
            {<point name="construct.c.xmig003" />}
            #END add-point
 
         #Ctrlp:construct.c.xmig005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmig005
            #add-point:ON ACTION controlp INFIELD xmig005
            {<point name="construct.c.xmig005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmig005
            #add-point:BEFORE FIELD xmig005
            {<point name="construct.b.xmig005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmig005
            
            #add-point:AFTER FIELD xmig005
            {<point name="construct.a.xmig005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmig006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmig006
            #add-point:ON ACTION controlp INFIELD xmig006
            {<point name="construct.c.xmig006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmig006
            #add-point:BEFORE FIELD xmig006
            {<point name="construct.b.xmig006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmig006
            
            #add-point:AFTER FIELD xmig006
            {<point name="construct.a.xmig006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imaa009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD imaa009
            #add-point:ON ACTION controlp INFIELD imaa009
            {<point name="construct.c.imaa009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD imaa009
            #add-point:BEFORE FIELD imaa009
            {<point name="construct.b.imaa009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD imaa009
            
            #add-point:AFTER FIELD imaa009
            {<point name="construct.a.imaa009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmig004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmig004
            #add-point:ON ACTION controlp INFIELD xmig004
            {<point name="construct.c.xmig004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmig004
            #add-point:BEFORE FIELD xmig004
            {<point name="construct.b.xmig004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmig004
            
            #add-point:AFTER FIELD xmig004
            {<point name="construct.a.xmig004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmig017
            #add-point:BEFORE FIELD xmig017
            {<point name="construct.b.xmig017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmig017
            
            #add-point:AFTER FIELD xmig017
            {<point name="construct.a.xmig017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmig017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmig017
            #add-point:ON ACTION controlp INFIELD xmig017
            {<point name="construct.c.xmig017" />}
            #END add-point
 
 
            
            #add-point:其他管控
            {<point name="cs.other"/>}
            #end add-point
            
         END CONSTRUCT
 
 
      
         #add-point:ui_dialog段construct
         {<point name="ui_dialog.more_construct"/>}
         #end add-point
         #add-point:ui_dialog段input
         {<point name="ui_dialog.more_input"/>}
         #end add-point
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
 
         SUBDIALOG lib_cl_schedule.cl_schedule_setting
         SUBDIALOG lib_cl_schedule.cl_schedule_setting_exec_call
         SUBDIALOG lib_cl_schedule.cl_schedule_select_show_history
         SUBDIALOG lib_cl_schedule.cl_schedule_show_history
 
         BEFORE DIALOG
            LET l_dialog = ui.DIALOG.getCurrent()
            CALL cl_qbe_display_condition(FGL_GETENV("QUERYPLANID"), g_user)
            CALL axmr174_get_buffer(l_dialog)
 
         ON ACTION qbe_select
            LET ls_wc = ""
            #需要用ITM類程式查詢方案在CONSTRUCT的功能，將值set到畫面上
            CALL cl_qbe_list("c") RETURNING ls_wc
            CALL axmr174_get_buffer(l_dialog)
            IF NOT cl_null(ls_wc) THEN
               LET g_master.wc = ls_wc
               #取得條件後需要執行項目,應新增於下方adp
               #add-point:ui_dialog段qbe_select後
               {<point name="ui_dialog.qbe_select"/>}
               #end add-point
            END IF
 
         ON ACTION qbe_save
            CALL cl_qbe_save()
 
         ON ACTION output
            LET g_action_choice = "output"
            ACCEPT DIALOG
 
         ON ACTION quickprint
            LET g_action_choice = "quickprint"
            ACCEPT DIALOG
 
         ON ACTION qbeclear         
            CLEAR FORM
            INITIALIZE g_master.* TO NULL   #畫面變數清空
            INITIALIZE lc_param.* TO NULL   #傳遞參數變數清空
            #add-point:ui_dialog段qbeclear
            {<point name="ui_dialog.qbeclear"/>}
            #end add-point
 
         ON ACTION history_fill
            CALL cl_schedule_history_fill()
 
         ON ACTION close
            LET INT_FLAG = TRUE
            EXIT DIALOG
         
         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT DIALOG
 
         ON ACTION rpt_replang
            CALL cl_gr_set_dlang()
 
         #add-point:ui_dialog段action
         {<point name="ui_dialog.more_action"/>}
         #end add-point
 
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM   
         INITIALIZE g_master.* TO NULL
         LET g_wc  = ' 1=2'
         LET g_action_choice = ""
         CALL axmr174_init()
         CONTINUE WHILE
      END IF
 
      #檢查批次設定是否有錯(或未設定完成)
      IF NOT cl_schedule_exec_check() THEN
         CONTINUE WHILE
      END IF
 
     #LET lc_param.wc = g_master.wc    #r類主程式不在意lc_param,不使用轉換
      #add-point:ui_dialog段exit dialog 
      {<point name="process.exit_dialog"/>}
      #end add-point
 
      LET ls_js = util.JSON.stringify(g_master)  #r類使用g_master/p類使用lc_param
 
      IF INT_FLAG THEN
         LET INT_FLAG = FALSE
         EXIT WHILE
      ELSE
         IF g_chk_jobid THEN 
            LET g_jobid = g_schedule.gzpa001
         ELSE 
            LET g_jobid = cl_schedule_get_jobid(g_prog)
         END IF 
 
         #依照指定模式執行報表列印
         CASE 
            WHEN g_schedule.gzpa003 = "0"
                 CALL axmr174_process(ls_js)
 
            WHEN g_schedule.gzpa003 = "1"
                 LET ls_js = axmr174_transfer_argv(ls_js)
                 CALL cl_cmdrun(ls_js)
 
            WHEN g_schedule.gzpa003 = "2"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
 
            WHEN g_schedule.gzpa003 = "3"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
         END CASE  
 
         IF g_schedule.gzpa003 = "2" OR g_schedule.gzpa003 = "3" THEN 
            CALL cl_ask_confirm3("std-00014","") #設定完成
         END IF           
         LET g_schedule.gzpa003 = "0" #預設一開始 立即於前景執行
 
         #add-point:ui_dialog段after schedule
         {<point name="process.after_schedule"/>}
         #end add-point
 
         #欄位初始資訊 
         CALL cl_schedule_init_info("all",g_schedule.gzpa003) 
         LET gi_hiden_asign = FALSE 
         LET gi_hiden_exec = FALSE 
         LET gi_hiden_spec = FALSE 
         LET gi_hiden_exec_end = FALSE 
         LET gi_hiden_rep_temp = FALSE   #報表樣板設定
         CALL cl_schedule_hidden()
      END IF
   END WHILE
 
END FUNCTION
]]>
  </section>
</add_points>
