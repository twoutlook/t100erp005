<add_points prog="axmi140" std_prog="axmi140" erpver="1.0" module="AXM" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="function.axmi140_xmaa001_ref" cite_std="N" status="" ver="1" src="s" new="Y" cite_ver="" order="1" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 找出信用評等的說明
# Memo...........:
# Usage..........: CALL axmi140_xmaa001_ref()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/03/24 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION axmi140_xmaa001_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmaa_m.xmaa001
   CALL ap_ref_array2(g_ref_fields," SELECT oocql004,oocql005 FROM oocql_t WHERE oocqlent = '"||g_enterprise||"' AND oocql001 = '296' AND oocql002 = ? AND oocql003 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_xmaa_m.oocql004 = g_rtn_fields[1] 
   LET g_xmaa_m.oocql005 = g_rtn_fields[2] 
   DISPLAY g_xmaa_m.oocql004,g_xmaa_m.oocql005 TO oocql004,oocql005
END FUNCTION]]>
</point>
  <point name="function.apsi002_insert_oocq" cite_std="N" status="" ver="1" src="s" new="Y" cite_ver="" order="2" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 將信用評等編號回寫oocq
# Memo...........:
# Usage..........: CALL apsi002_insert_oocq()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/03/25 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION apsi002_insert_oocq()
    DEFINE l_cnt        LIKE type_t.num5 
    DEFINE l_oocqcrtdt  DATETIME YEAR TO SECOND 

   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt
     FROM oocq_t
    WHERE oocqent = g_enterprise
      AND oocq001 = '296'
      AND oocq002 = g_xmaa_m.xmaa001

   IF cl_null(l_cnt) THEN
      LET l_cnt = 0
   END IF

   IF l_cnt = 0 THEN
      LET l_oocqcrtdt = cl_get_current()
      INSERT INTO oocq_t(oocqent,oocqstus,oocq001,oocq002,oocq003,
                         oocqownid,oocqowndp,oocqcrtid,oocqcrtdp,oocqcrtdt)
           VALUES(g_enterprise,'Y','296',g_xmaa_m.xmaa001,'296',
                  g_user,g_dept,g_user,g_dept,l_oocqcrtdt)

   END IF
END FUNCTION]]>
</point>
  <point name="b_fill.define" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[   DEFINE l_sql      STRING ]]>
</point>
  <point name="b_fill.fill" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[         LET g_xmaa2_d[l_ac].xmaa0031 = g_xmaa_d[l_ac].xmaa003]]>
</point>
  <point name="b_fill.fill_before" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[      LET g_sql = l_sql, " ORDER BY xmaa_t.xmaa003 " ]]>
</point>
  <point name="b_fill.sql_after" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[   LET l_sql = g_sql ]]>
</point>
  <point name="browser_fill.before_sql_rank" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[   IF g_wc2 <> " 1=1" AND NOT cl_null(g_wc2) THEN

      LET l_sub_sql  = "SELECT DISTINCT xmaa001,'','' ",
                       " FROM xmaa_t ",
                       " LEFT JOIN oocql_t ON oocql001 = '296' ",
                       "                  AND oocql002 = xmaa001 ",
                       "                  AND oocql003 = '",g_lang,"'",
                       " WHERE xmaaent = '" ||g_enterprise|| "' AND ", g_wc," AND ",g_wc2
   ELSE
      #單身無輸入資料
      LET l_sub_sql  = "SELECT DISTINCT xmaa001,'','' ",
                       " FROM xmaa_t ",
                       " LEFT JOIN oocql_t ON oocql001 = '296' ",
                       "                  AND oocql002 = xmaa001 ",
                       "                  AND oocql003 = '",g_lang,"'",
                       " WHERE xmaaent = '" ||g_enterprise|| "' AND ", g_wc
                 
   END IF]]>
</point>
  <point name="construct.c.page2.xmaacrtdp" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmaacrtdp  #顯示到畫面上
            NEXT FIELD xmaacrtdp                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page2.xmaacrtid" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmaacrtid  #顯示到畫面上
            NEXT FIELD xmaacrtid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page2.xmaamodid" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmaamodid  #顯示到畫面上
            NEXT FIELD xmaamodid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page2.xmaaowndp" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmaaowndp  #顯示到畫面上
            NEXT FIELD xmaaowndp                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page2.xmaaownid" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmaaownid  #顯示到畫面上
            NEXT FIELD xmaaownid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.xmaa001" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '296'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmaa001  #顯示到畫面上

            NEXT FIELD xmaa001                     #返回原欄位

]]>
</point>
  <point name="delete.body.b_delete" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[      #如果信用評核等級已經被使用了 就不可被刪除 
      LET l_count = 0 
      SELECT COUNT(*) INTO l_count 
        FROM pmaa_t 
       WHERE pmaaent = g_enterprise 
         AND pmaa053 = g_xmaa_m.xmaa001 
      IF cl_null(l_count) THEN 
         LET l_count = 0 
      END IF 
      IF l_count > 0 THEN 
         CALL cl_err(g_xmaa_m.xmaa001,'axm-00193',1)    #此信用評核等級已被使用，不可刪除！
         CALL s_transaction_end('N','0') 
         RETURN 
      END IF  
      
      LET l_count = 0 
      SELECT COUNT(*) INTO l_count 
        FROM pmab_t 
       WHERE pmabent = g_enterprise 
         AND pmab053 = g_xmaa_m.xmaa001 
      IF cl_null(l_count) THEN 
         LET l_count = 0 
      END IF 
      IF l_count > 0 THEN 
         CALL cl_err(g_xmaa_m.xmaa001,'axm-00193',1)   #此信用評核等級已被使用，不可刪除！ 
         CALL s_transaction_end('N','0') 
         RETURN 
      END IF 

      DELETE FROM oocq_t WHERE oocqent = g_enterprise
                           AND oocq001 = '296'
                           AND oocq002 = g_xmaa_m.xmaa001
      IF SQLCA.sqlcode THEN
         CALL cl_err('oocq_t',SQLCA.sqlcode,1)
         CALL s_transaction_end('N','0')
         RETURN
      END IF]]>
</point>
  <point name="delete.define" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[   DEFINE l_count          LIKE type_t.num5 ]]>
</point>
  <point name="detail_reproduce.body.table1.a_insert" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[   CALL apsi002_insert_oocq()]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[   CALL cl_set_combo_scc("xmaa002_2","2044") 
   #CALL cl_set_combo_scc("xmaa004","2045") ]]>
</point>
  <point name="input.a.page1.xmaa002" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_xmaa_m.xmaa001 IS NOT NULL AND g_xmaa_d[g_detail_idx].xmaa002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmaa_m.xmaa001 != g_xmaa001_t OR g_xmaa_d[g_detail_idx].xmaa002 != g_xmaa_d_t.xmaa002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmaa_t WHERE "||"xmaaent = '" ||g_enterprise|| "' AND "||"xmaa001 = '"||g_xmaa_m.xmaa001 ||"' AND "|| "xmaa002 = '"||g_xmaa_d[g_detail_idx].xmaa002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
                  
                  IF cl_null(g_xmaa_d[g_detail_idx].xmaa004) THEN
                     CASE g_xmaa_d[g_detail_idx].xmaa002
                        WHEN "S1"
                           LET g_xmaa_d[g_detail_idx].xmaa004 = 2
                        WHEN "S2"
                           LET g_xmaa_d[g_detail_idx].xmaa004 = 2
                        WHEN "S3"
                           LET g_xmaa_d[g_detail_idx].xmaa004 = 2
                        WHEN "S4"
                           LET g_xmaa_d[g_detail_idx].xmaa004 = 2
                        WHEN "S5"
                           LET g_xmaa_d[g_detail_idx].xmaa004 = 2
                        WHEN "S10"
                           LET g_xmaa_d[g_detail_idx].xmaa004 = 2
                        WHEN "S11"
                           LET g_xmaa_d[g_detail_idx].xmaa004 = 2
                        WHEN "S6"
                           LET g_xmaa_d[g_detail_idx].xmaa004 = 1
                        WHEN "S7"
                           LET g_xmaa_d[g_detail_idx].xmaa004 = 1
                        WHEN "S8"
                           LET g_xmaa_d[g_detail_idx].xmaa004 = 1
                        WHEN "S9"
                           LET g_xmaa_d[g_detail_idx].xmaa004 = 1
                        WHEN "P1"
                           LET g_xmaa_d[g_detail_idx].xmaa004 = 1
                        WHEN "P2"
                           LET g_xmaa_d[g_detail_idx].xmaa004 = 1
                        WHEN "P3"
                           LET g_xmaa_d[g_detail_idx].xmaa004 = 1 
                     END CASE
                  END IF
               END IF
               CALL axmi140_set_entry_b(l_cmd)
               CALL axmi140_set_no_entry_b(l_cmd)
            END IF

]]>
</point>
  <point name="input.a.page1.xmaa003" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_xmaa_d[l_ac].xmaa003) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_xmaa_d[g_detail_idx].xmaa003 != g_xmaa_d_t.xmaa003 OR 
                                                   g_xmaa_d_t.xmaa003 IS NULL)) THEN 
                  IF g_xmaa_d[l_ac].xmaa003 < 1 THEN
                     CALL cl_err('','aps-00063',1)     #順序不可小於1  
                     LET g_xmaa_d[g_detail_idx].xmaa003 = g_xmaa_d_t.xmaa003
                     NEXT FIELD CURRENT
                  END IF
                  
                  LET l_count = 0
                  SELECT COUNT(*) INTO l_count
                    FROM xmaa_t
                   WHERE xmaaent = g_enterprise
                     AND xmaa001 = g_xmaa_m.xmaa001
                     AND xmaa003 = g_xmaa_d[g_detail_idx].xmaa003
                  IF cl_null(l_count) THEN
                     LET l_count = 0
                  END IF

                  IF l_count > 0 THEN
                     CALL cl_err('','aps-00062',1)
                     LET g_xmaa_d[g_detail_idx].xmaa003 = g_xmaa_d_t.xmaa003
                     NEXT FIELD CURRENT
                  END IF 
               END IF  
            END IF ]]>
</point>
  <point name="input.a.page1.xmaa005" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_xmaa_d[l_ac].xmaa005) THEN 
            END IF 
]]>
</point>
  <point name="input.a.page2.xmaa002_2" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_xmaa_m.xmaa001 IS NOT NULL AND g_xmaa2_d[g_detail_idx].xmaa002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmaa_m.xmaa001 != g_xmaa001_t OR g_xmaa2_d[g_detail_idx].xmaa002 != g_xmaa2_d_t.xmaa002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmaa_t WHERE "||"xmaaent = '" ||g_enterprise|| "' AND "||"xmaa001 = '"||g_xmaa_m.xmaa001 ||"' AND "|| "xmaa002 = '"||g_xmaa2_d[g_detail_idx].xmaa002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.xmaa001" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            LET g_xmaa_m.oocql004 = ' '
            LET g_xmaa_m.oocql005 = ' '
            DISPLAY BY NAME g_xmaa_m.oocql004,g_xmaa_m.oocql005
            IF NOT cl_null(g_xmaa_m.xmaa001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xmaa_m.xmaa001 != g_xmaa001_t )) THEN 
                  
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmaa_t WHERE "||"xmaaent = '" ||g_enterprise|| "' AND "||"xmaa001 = '"||g_xmaa_m.xmaa001 ||"'",'std-00004',0) THEN 
                     LET g_xmaa_m.xmaa001 = g_xmaa001_t 
                     CALL axmi140_xmaa001_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL axmi140_xmaa001_ref()

]]>
</point>
  <point name="input.b.page1.xmaa003" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            IF cl_null(g_xmaa_d[l_ac].xmaa003) OR g_xmaa_d[l_ac].xmaa003 = 0 THEN
               SELECT MAX(xmaa003)+1 INTO g_xmaa_d[l_ac].xmaa003
                 FROM xmaa_t
                WHERE xmaaent = g_enterprise
                  AND xmaa001 = g_xmaa_m.xmaa001
               IF cl_null(g_xmaa_d[l_ac].xmaa003) THEN
                  LET g_xmaa_d[l_ac].xmaa003 = 1
               END IF
            END IF]]>
</point>
  <point name="input.b.page1.xmaa005" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            IF g_xmaa_d[l_ac].xmaa002 = 'S10' OR
               g_xmaa_d[l_ac].xmaa002 = 'S11' THEN
               NEXT FIELD xmaa003
            END IF]]>
</point>
  <point name="input.body.b_insert" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[               CALL apsi002_insert_oocq()]]>
</point>
  <point name="input.body.before_insert" cite_std="N" status="u" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #LET g_xmaa2_d[l_ac].xmaastus = 'Y'  
            NEXT FIELD xmaa003 ]]>
</point>
  <point name="input.body.before_row" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            LET g_xmaa2_d[l_ac].xmaa0031 = g_xmaa_d[l_ac].xmaa003 
            LET g_xmaa2_d[l_ac].xmaa002 = g_xmaa_d[l_ac].xmaa002 ]]>
</point>
  <point name="input.c.xmaa001" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            
            #INITIALIZE g_qryparam.* TO NULL
            #LET g_qryparam.state = 'i'
            #LET g_qryparam.reqry = FALSE
            #
            #LET g_qryparam.default1 = g_xmaa_m.xmaa001             #給予default值
            #
            ##給予arg
            #LET g_qryparam.arg1 = "296" #
            #
            #CALL q_oocq002()                                #呼叫開窗
            #IF NOT cl_null(g_qryparam.return1) THEN 
            #   LET g_xmaa_m.xmaa001 = g_qryparam.return1    #將開窗取得的值回傳到變數
            #   DISPLAY g_xmaa_m.xmaa001 TO xmaa001          #顯示到畫面上
            #END IF 
            #NEXT FIELD xmaa001                              #返回原欄位

]]>
</point>
  <point name="input.define" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[   DEFINE l_oocqcrtdt            DATETIME YEAR TO SECOND ]]>
</point>
  <point name="input.head.b_update" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[               LET l_oocqcrtdt = cl_get_current()
               UPDATE oocq_t SET oocq002 = g_xmaa_m.xmaa001,
                                 oocqmodid = g_user,
                                 oocqmoddt = l_oocqcrtdt
                WHERE oocqent = g_enterprise
                  AND oocq001 = '296'
                  AND oocq002 = g_xmaa001_t

               CASE
                  WHEN SQLCA.sqlerrd[3] = 0
                     CALL cl_err("oocq_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     NEXT FIELD xmaa001
                  WHEN SQLCA.sqlcode
                     CALL cl_err("oocq_t",SQLCA.sqlcode,1)
                     CALL s_transaction_end('N','0')
                     NEXT FIELD xmaa001
               END CASE ]]>
</point>
  <point name="input.master_input.update_item" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_xmaa_m.xmaa001) THEN 
               CALL n_oocql('296',g_xmaa_m.xmaa001)
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_xmaa_m.xmaa001
               CALL ap_ref_array2(g_ref_fields," SELECT oocql004,oocql005 FROM xmaal_t WHERE oocqlent = '"||g_enterprise||"' AND oocql001 = '296' AND oocql002 = ? AND xmaal003 = '"||g_dlang||"'","") RETURNING g_rtn_fields
               LET g_xmaa_m.oocql004 = g_rtn_fields[1]
               LET g_xmaa_m.oocql005 = g_rtn_fields[2]
               DISPLAY BY NAME g_xmaa_m.oocql004
               DISPLAY BY NAME g_xmaa_m.oocql005
            END IF ]]>
</point>
  <point name="ref_show.body2.reference" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xmaa2_d[l_ac].xmaaownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_xmaa2_d[l_ac].xmaaownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xmaa2_d[l_ac].xmaaownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xmaa2_d[l_ac].xmaaowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xmaa2_d[l_ac].xmaaowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xmaa2_d[l_ac].xmaaowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xmaa2_d[l_ac].xmaacrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_xmaa2_d[l_ac].xmaacrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xmaa2_d[l_ac].xmaacrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xmaa2_d[l_ac].xmaacrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xmaa2_d[l_ac].xmaacrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xmaa2_d[l_ac].xmaacrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xmaa2_d[l_ac].xmaamodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_xmaa2_d[l_ac].xmaamodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xmaa2_d[l_ac].xmaamodid_desc
]]>
</point>
  <point name="ref_show.head.reference" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[   CALL axmi140_xmaa001_ref()
   ]]>
</point>
  <point name="reproduce.head.b_input" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[   LET g_xmaa_m.oocql004 = '' 
   LET g_xmaa_m.oocql005 = '' ]]>
</point>
  <point name="set_entry_b.set_entry_b" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[   CALL cl_set_comp_entry("xmaa005",TRUE)]]>
</point>
  <point name="set_no_entry.after_control" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="set_no_entry_b.set_no_entry_b段" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[   IF g_xmaa_d[g_detail_idx].xmaa002 = "S10" OR
      g_xmaa_d[g_detail_idx].xmaa002 = "S11" THEN
      LET g_xmaa_d[g_detail_idx].xmaa005 = '9999'
      CALL cl_set_comp_entry("xmaa005",FALSE)
   ELSE
      LET g_xmaa_d[g_detail_idx].xmaa005 = '100'
   END IF]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="main.init" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="main.define_sql" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="main.after_define_sql" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body.before_row" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.action" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body2.before_row" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body2.action" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog2" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="menu.insert" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="menu.query" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="menu.reproduce" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="menu.delete" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="menu.modify" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="menu.modify_detail" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="menu.output" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.related_document" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.agendum" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.followup" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="browser_search.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="browser_fill.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_browser_fill" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_count" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_pre" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="browser_fill.reference" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_headershow.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.before" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.more" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.after" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_browser_refresh.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="cs.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="cs.head.before" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="cs.head.before_construct" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.b.xmaa001" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.a.xmaa001" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.b.oocql004" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.a.oocql004" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.c.oocql004" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.b.oocql005" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.a.oocql005" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.c.oocql005" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="cs.body.before_construct" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.xmaa003" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.xmaa003" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.xmaa003" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.xmaa002" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.xmaa002" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.xmaa002" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.xmaa004" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.xmaa004" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.xmaa004" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.xmaa005" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.xmaa005" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.xmaa005" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.xmaaownid" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.a.page2.xmaaownid" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.xmaaowndp" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.a.page2.xmaaowndp" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.xmaacrtid" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.a.page2.xmaacrtid" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.xmaacrtdp" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.a.page2.xmaacrtdp" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.xmaacrtdt" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.xmaamodid" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.a.page2.xmaamodid" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.xmaamoddt" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="cs.more_construct" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="cs.before_dialog" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="cs.after_construct" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="filter.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="filter.cs_ctrl" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="filter.add_cs" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="filter.b_dialog" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="filter_parser.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="query.befroe_query" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="fetch.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="fetch.before_fetch" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="insert.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="insert.before" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="insert.default" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="insert.after_insert" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="insert.after_insert2" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="modify.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="modify.before_input" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="modify.after_input" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="modify.b_key_update" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="modify.m_key_update" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="modify.a_key_update" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.define_sql" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.after_define_sql" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.after_set_entry" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.after_set_no_entry" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.before_input" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.head.b_input" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.xmaa001" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.xmaa001" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.oocql004" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.a.oocql004" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.oocql004" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.oocql005" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.a.oocql005" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.oocql005" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.oocql004" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.oocql005" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.head.m_update" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.head.a_update" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.head.a_insert" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body.before_input" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body.m_insert" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body.after_insert" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body.b_delete" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body.a_delete" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body.after_delete" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xmaa003" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.xmaa002" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xmaa002" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.xmaa004" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.a.page1.xmaa004" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xmaa004" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xmaa005" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.xmaa003" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.xmaa002" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.xmaa004" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.xmaa005" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body.b_update" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body.m_update" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body.a_update" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body.after_input" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body2.action" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.more_inputarray" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.before_dialog" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.after_input" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="show.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="show.before" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="show.follow_pic" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="show.after" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ref_show.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ref_show.body.reference" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="reproduce.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="reproduce.after_reproduce" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.b_insert" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.m_insert" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="delete.befroe.related_document_remove" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="delete.body.m_delete" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="bfill.foreach" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="b_fill.more" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="b_fill2.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="b_fill2.after_fill" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="before_delete.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="delete.body.b_single_delete" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="delete.body.m_single_delete" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="delete.body.a_single_delete" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="delete_b.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="insert_b.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="update_b.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="lock_b.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="unlock_b.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="set_entry.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="set_entry.field_control" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="set_entry.after_control" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="set_no_entry.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="set_no_entry.field_control" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="set_entry_b.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="default_search.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="default_search.before" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="default_search.after" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="fill_chk.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="fill_chk.other" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.before" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.page_control" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.after" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <section id="axmi140.b_fill" ver="1" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION axmi140_b_fill(p_wc2)
   {<Local define>}
   DEFINE p_wc2      STRING
   {</Local define>}
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   #先清空單身變數內容
   CALL g_xmaa_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
      LET g_sql = "SELECT  UNIQUE xmaa003,xmaa002,xmaa004,xmaa005,xmaastus,xmaaownid,'',xmaaowndp,'', 
          xmaacrtid,'',xmaacrtdp,'',xmaacrtdt,xmaamodid,'',xmaamoddt FROM xmaa_t",   
                  "",
                  
                  " WHERE xmaaent= ? AND xmaa001=?"  
                  
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table1 CLIPPED
   END IF
   
   #add-point:b_fill段sql_after
   {<point name="b_fill.sql_after"/>}
   #end add-point
   
   #子單身的WC
   
   
   #判斷是否填充
   IF axmi140_fill_chk(1) THEN
      LET g_sql = g_sql, " ORDER BY xmaa_t.xmaa002"
      
      PREPARE axmi140_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR axmi140_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_xmaa_m.xmaa001
 
                                               
      FOREACH b_fill_cs INTO g_xmaa_d[l_ac].xmaa003,g_xmaa_d[l_ac].xmaa002,g_xmaa_d[l_ac].xmaa004,g_xmaa_d[l_ac].xmaa005, 
          g_xmaa_d[l_ac].xmaastus,g_xmaa_d[l_ac].xmaaownid,g_xmaa_d[l_ac].xmaaownid_desc,g_xmaa_d[l_ac].xmaaowndp, 
          g_xmaa_d[l_ac].xmaaowndp_desc,g_xmaa_d[l_ac].xmaacrtid,g_xmaa_d[l_ac].xmaacrtid_desc,g_xmaa_d[l_ac].xmaacrtdp, 
          g_xmaa_d[l_ac].xmaacrtdp_desc,g_xmaa_d[l_ac].xmaacrtdt,g_xmaa_d[l_ac].xmaamodid,g_xmaa_d[l_ac].xmaamodid_desc, 
          g_xmaa_d[l_ac].xmaamoddt
 
                             
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
                           
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         #帶出公用欄位reference值
         #此段落由子樣板a12產生
      #LET g_xmaa_d[l_ac].xmaaownid_desc = cl_get_username(g_xmaa_d[l_ac].xmaaownid)
      #LET g_xmaa_d[l_ac].xmaaowndp_desc = cl_get_deptname(g_xmaa_d[l_ac].xmaaowndp)
      #LET g_xmaa_d[l_ac].xmaacrtid_desc = cl_get_username(g_xmaa_d[l_ac].xmaacrtid)
      #LET g_xmaa_d[l_ac].xmaacrtdp_desc = cl_get_deptname(g_xmaa_d[l_ac].xmaacrtdp)
      #LET g_xmaa_d[l_ac].xmaamodid_desc = cl_get_username(g_xmaa_d[l_ac].xmaamodid)
      ##LET g_xmaa_d[l_ac].xmaacnfid_desc = cl_get_deptname(g_xmaa_d[l_ac].xmaacnfid)
      ##LET g_xmaa_d[l_ac].xmaapstid_desc = cl_get_deptname(g_xmaa_d[l_ac].xmaapstid)
      
 
 
         
 
        
         #add-point:單身資料抓取
         {<point name="bfill.foreach"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      
            CALL g_xmaa_d.deleteElement(g_xmaa_d.getLength())
 
   END IF
   
   #add-point:b_fill段more
   {<point name="b_fill.more"/>}
   #end add-point
   
   LET g_rec_b=l_ac-1
   DISPLAY g_rec_b TO FORMONLY.cnt  
   LET l_ac = g_cnt
   LET g_cnt = 0 
 
   FREE axmi140_pb   
   
END FUNCTION
]]>
</section>
  <section id="axmi140.b_fill2" ver="1" status="" src="s">
<![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION axmi140_b_fill2(pi_idx)
   {<Local define>}
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   {</Local define>}
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
END FUNCTION
]]>
</section>
  <section id="axmi140.before_delete" ver="1" status="" src="s">
<![CDATA[#+ 單身db資料刪除
PRIVATE FUNCTION axmi140_before_delete()
   #add-point:before_delete段define
   {<point name="before_delete.define"/>}
   #end add-point 
   
   #add-point:單筆刪除前
   {<point name="delete.body.b_single_delete" mark="Y"/>}
   #end add-point
   
   DELETE FROM xmaa_t
    WHERE xmaaent = g_enterprise AND xmaa001 = g_xmaa_m.xmaa001 AND
 
          xmaa002 = g_xmaa_d_t.xmaa002
 
      
   #add-point:單筆刪除中
   {<point name="delete.body.m_single_delete"/>}
   #end add-point
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("xmaa_t",SQLCA.sqlcode,1)
      RETURN FALSE 
   END IF
   
   #add-point:單筆刪除後
   {<point name="delete.body.a_single_delete"/>}
   #end add-point
 
   LET g_rec_b = g_rec_b-1
   DISPLAY g_rec_b TO FORMONLY.cnt
 
   RETURN TRUE
    
END FUNCTION
]]>
</section>
  <section id="axmi140.browser_fill" ver="1" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION axmi140_browser_fill(ps_page_action)
   {<Local define>}
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   {</Local define>}
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point    
   
   CALL g_browser.clear()
 
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "xmaa001"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      RETURN
   END IF
   
   IF g_wc2 <> " 1=1" OR NOT cl_null(g_wc2) THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE xmaa001 ",
 
                      " FROM xmaa_t ",
                      " LEFT JOIN xmaal_t ON xmaa001 = xmaal001 AND xmaal002 = '",g_lang,"' ",
                      " ",
 
                      " WHERE xmaaent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2 
 
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE xmaa001 ",
 
                      " FROM xmaa_t ",
                      " LEFT JOIN xmaal_t ON xmaa001 = xmaal001 AND xmaal002 = '",g_lang,"' ",
                      " ",
                      " WHERE xmaaent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED
 
   END IF 
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
 
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
   
   #若超過最大顯示筆數
   LET g_error_show = 0
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #LET g_page_action = ps_page_action          # Keep Action
   IF ps_page_action = "first" OR              
      ps_page_action = "prev"  OR
      ps_page_action = "next"  OR
      ps_page_action = "last"  THEN
      LET g_page_action = ps_page_action        #g_page_action 這個會影響 browser 下面四個button 的判斷 
   END IF
   
   CASE ps_page_action
      WHEN "F" 
         LET g_pagestart = 1
          
      WHEN "P"  
         LET g_pagestart = g_pagestart - g_max_browse
         IF g_pagestart < 1 THEN
             LET g_pagestart = 1
         END IF
          
      WHEN "N"  
         LET g_pagestart = g_pagestart + g_max_browse
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
            WHILE g_pagestart > g_browser_cnt 
               LET g_pagestart = g_pagestart - g_max_browse
            END WHILE
         END IF
      
      WHEN "L"  
         LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
         WHILE g_pagestart > g_browser_cnt 
            LET g_pagestart = g_pagestart - g_max_browse
         END WHILE
 
      OTHERWISE
         LET g_pagestart = 1
         
   END CASE
   
   #單身有輸入查詢條件且非null
   IF g_wc2 <> " 1=1" AND NOT cl_null(g_wc2) THEN 
 
      #依照xmaa001 Browser欄位定義(取代原本bs_sql功能)
      LET l_sub_sql  = "SELECT DISTINCT xmaa001 ",
                       " FROM xmaa_t ",
 
                       " ",
                       " WHERE xmaaent = '" ||g_enterprise|| "' AND ", g_wc," AND ",g_wc2
 
   ELSE
      #單身無輸入資料
      LET l_sub_sql  = "SELECT DISTINCT xmaa001 ",
                       " FROM xmaa_t ",
                       " WHERE xmaaent = '" ||g_enterprise|| "' AND ", g_wc
                 
   END IF
  
   #add-point:browser_fill,sql_rank前
   {<point name="browser_fill.before_sql_rank"/>}
   #end add-point
 
   LET l_sql_rank = "SELECT xmaa001,DENSE_RANK() OVER(ORDER BY xmaa001 ",g_order,") AS RANK ",
                    " FROM (",l_sub_sql,") "
                       
   #定義翻頁CURSOR
   LET g_sql= " SELECT xmaa001 FROM (",l_sql_rank,") WHERE RANK>=",g_pagestart,
              " AND RANK<",g_pagestart+g_max_browse,
              " ORDER BY ",l_searchcol," ",g_order
                
   #add-point:browser_fill,pre前
   {<point name="browser_fill.before_pre"/>}
   #end add-point
 
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_xmaa001    
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      
      
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point    
      
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         EXIT FOREACH
      END IF
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   IF g_browser.getLength() = 0 AND g_wc THEN
      INITIALIZE g_xmaa_m.* TO NULL
      CALL g_xmaa_d.clear()
 
      CLEAR FORM
   END IF
   
   LET g_header_cnt = g_browser.getLength()
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
</section>
  <section id="axmi140.browser_search" ver="1" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION axmi140_browser_search(p_type)
   {<Local define>}
   DEFINE p_type LIKE type_t.chr10
   {</Local define>}
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1"
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY xmaa001"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL axmi140_browser_fill("F")
   CALL ui.Interface.refresh()
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="axmi140.construct" ver="1" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION axmi140_construct()
   {<Local define>}
   DEFINE lc_qbe_sn   LIKE type_t.num10
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   {</Local define>}
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面上相關資料
   CLEAR FORM                 
   INITIALIZE g_xmaa_m.* TO NULL
   CALL g_xmaa_d.clear()
 
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   LET g_action_choice = ""
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段construct外
   {<point name="cs.head.before"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON xmaa001,xmaal003,xmaal004
 
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
        #---------------------------<  Master  >---------------------------
         #----<<xmaa001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmaa001
            #add-point:BEFORE FIELD xmaa001
            {<point name="construct.b.xmaa001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmaa001
            
            #add-point:AFTER FIELD xmaa001
            {<point name="construct.a.xmaa001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmaa001
         ON ACTION controlp INFIELD xmaa001
            #add-point:ON ACTION controlp INFIELD xmaa001
            {<point name="construct.c.xmaa001" />}
            #END add-point
 
         #----<<xmaal003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmaal003
            #add-point:BEFORE FIELD xmaal003
            {<point name="construct.b.xmaal003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmaal003
            
            #add-point:AFTER FIELD xmaal003
            {<point name="construct.a.xmaal003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmaal003
         ON ACTION controlp INFIELD xmaal003
            #add-point:ON ACTION controlp INFIELD xmaal003
            {<point name="construct.c.xmaal003" />}
            #END add-point
 
         #----<<xmaal004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmaal004
            #add-point:BEFORE FIELD xmaal004
            {<point name="construct.b.xmaal004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmaal004
            
            #add-point:AFTER FIELD xmaal004
            {<point name="construct.a.xmaal004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmaal004
         ON ACTION controlp INFIELD xmaal004
            #add-point:ON ACTION controlp INFIELD xmaal004
            {<point name="construct.c.xmaal004" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table1 ON xmaa003,xmaa002,xmaa004,xmaa005,xmaastus,xmaaownid,xmaaowndp,xmaacrtid, 
          xmaacrtdp,xmaacrtdt,xmaamodid,xmaamoddt
           FROM s_detail1[1].xmaa003,s_detail1[1].xmaa002,s_detail1[1].xmaa004,s_detail1[1].xmaa005, 
               s_detail1[1].xmaastus,s_detail1[1].xmaaownid,s_detail1[1].xmaaowndp,s_detail1[1].xmaacrtid, 
               s_detail1[1].xmaacrtdp,s_detail1[1].xmaacrtdt,s_detail1[1].xmaamodid,s_detail1[1].xmaamoddt 

                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
         #單身公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<xmaaownid>>----
         #ON ACTION controlp INFIELD xmaaownid
         #   CALL q_common('xmaa_t','xmaaownid',TRUE,FALSE,g_xmaa_d[1].xmaaownid) RETURNING ls_return
         #   DISPLAY ls_return TO xmaaownid
         #   NEXT FIELD xmaaownid  
         #
         ##----<<xmaaowndp>>----
         #ON ACTION controlp INFIELD xmaaowndp
         #   CALL q_common('xmaa_t','xmaaowndp',TRUE,FALSE,g_xmaa_d[1].xmaaowndp) RETURNING ls_return
         #   DISPLAY ls_return TO xmaaowndp
         #   NEXT FIELD xmaaowndp
         #
         ##----<<xmaacrtid>>----
         #ON ACTION controlp INFIELD xmaacrtid
         #   CALL q_common('xmaa_t','xmaacrtid',TRUE,FALSE,g_xmaa_d[1].xmaacrtid) RETURNING ls_return
         #   DISPLAY ls_return TO xmaacrtid
         #   NEXT FIELD xmaacrtid
         #
         ##----<<xmaacrtdp>>----
         #ON ACTION controlp INFIELD xmaacrtdp
         #   CALL q_common('xmaa_t','xmaacrtdp',TRUE,FALSE,g_xmaa_d[1].xmaacrtdp) RETURNING ls_return
         #   DISPLAY ls_return TO xmaacrtdp
         #   NEXT FIELD xmaacrtdp
         #
         ##----<<xmaamodid>>----
         #ON ACTION controlp INFIELD xmaamodid
         #   CALL q_common('xmaa_t','xmaamodid',TRUE,FALSE,g_xmaa_d[1].xmaamodid) RETURNING ls_return
         #   DISPLAY ls_return TO xmaamodid
         #   NEXT FIELD xmaamodid
         #
         ##----<<xmaacnfid>>----
         ##ON ACTION controlp INFIELD xmaacnfid
         ##   CALL q_common('xmaa_t','xmaacnfid',TRUE,FALSE,g_xmaa_d[1].xmaacnfid) RETURNING ls_return
         ##   DISPLAY ls_return TO xmaacnfid
         ##   NEXT FIELD xmaacnfid
         #
         ##----<<xmaapstid>>----
         ##ON ACTION controlp INFIELD xmaapstid
         ##   CALL q_common('xmaa_t','xmaapstid',TRUE,FALSE,g_xmaa_d[1].xmaapstid) RETURNING ls_return
         ##   DISPLAY ls_return TO xmaapstid
         ##   NEXT FIELD xmaapstid
         
         ##----<<xmaacrtdt>>----
         AFTER FIELD xmaacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmaamoddt>>----
         AFTER FIELD xmaamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmaacnfdt>>----
         #AFTER FIELD xmaacnfdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmaapstdt>>----
         #AFTER FIELD xmaapstdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
           
         #單身一般欄位開窗相關處理
         #---------------------<  Detail: page1  >---------------------
         #----<<xmaa003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmaa003
            #add-point:BEFORE FIELD xmaa003
            {<point name="construct.b.page1.xmaa003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmaa003
            
            #add-point:AFTER FIELD xmaa003
            {<point name="construct.a.page1.xmaa003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmaa003
         ON ACTION controlp INFIELD xmaa003
            #add-point:ON ACTION controlp INFIELD xmaa003
            {<point name="construct.c.page1.xmaa003" />}
            #END add-point
 
         #----<<xmaa002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmaa002
            #add-point:BEFORE FIELD xmaa002
            {<point name="construct.b.page1.xmaa002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmaa002
            
            #add-point:AFTER FIELD xmaa002
            {<point name="construct.a.page1.xmaa002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmaa002
         ON ACTION controlp INFIELD xmaa002
            #add-point:ON ACTION controlp INFIELD xmaa002
            {<point name="construct.c.page1.xmaa002" />}
            #END add-point
 
         #----<<xmaa004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmaa004
            #add-point:BEFORE FIELD xmaa004
            {<point name="construct.b.page1.xmaa004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmaa004
            
            #add-point:AFTER FIELD xmaa004
            {<point name="construct.a.page1.xmaa004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmaa004
         ON ACTION controlp INFIELD xmaa004
            #add-point:ON ACTION controlp INFIELD xmaa004
            {<point name="construct.c.page1.xmaa004" />}
            #END add-point
 
         #----<<xmaa005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmaa005
            #add-point:BEFORE FIELD xmaa005
            {<point name="construct.b.page1.xmaa005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmaa005
            
            #add-point:AFTER FIELD xmaa005
            {<point name="construct.a.page1.xmaa005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmaa005
         ON ACTION controlp INFIELD xmaa005
            #add-point:ON ACTION controlp INFIELD xmaa005
            {<point name="construct.c.page1.xmaa005" />}
            #END add-point
 
         #----<<xmaastus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmaastus
            #add-point:BEFORE FIELD xmaastus
            {<point name="construct.b.page1.xmaastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmaastus
            
            #add-point:AFTER FIELD xmaastus
            {<point name="construct.a.page1.xmaastus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmaastus
         ON ACTION controlp INFIELD xmaastus
            #add-point:ON ACTION controlp INFIELD xmaastus
            {<point name="construct.c.page1.xmaastus" />}
            #END add-point
 
   
       
      END CONSTRUCT
  
 
  
      #add-point:cs段more_construct
      {<point name="cs.more_construct"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:ui_dialog段b_dialog
         {<point name="cs.before_dialog"/>}
         #end add-point
      
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
   
   #add-point:cs段after_construct
   {<point name="cs.after_construct"/>}
   #end add-point
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   LET g_current_row = 1
 
   IF INT_FLAG THEN
      RETURN
   END IF
   
   LET g_wc_filter = ""
 
END FUNCTION
]]>
</section>
  <section id="axmi140.default_search" ver="1" status="" src="s">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION axmi140_default_search()
   {<Local define>}
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   {</Local define>}
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " xmaa001 = '", g_argv[1], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="axmi140.delete" ver="1" status="" src="s">
<![CDATA[#+ 資料刪除
PRIVATE FUNCTION axmi140_delete()
   {<Local define>}
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_xmaa_m.xmaa001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
    SELECT UNIQUE xmaa001
 INTO g_xmaa_m.xmaa001
 FROM xmaa_t
 WHERE xmaaent = g_enterprise AND xmaa001 = g_xmaa_m.xmaa001
   
   CALL axmi140_show()
   
   CALL s_transaction_begin()
   
   LET g_master_multi_table_t.xmaal001 = g_xmaa_m.xmaa001
LET g_master_multi_table_t.xmaal003 = g_xmaa_m.xmaal003
LET g_master_multi_table_t.xmaal004 = g_xmaa_m.xmaal004
 
 
   OPEN axmi140_cl USING g_enterprise,g_xmaa_m.xmaa001
 
   IF STATUS THEN
      CALL cl_err("OPEN axmi140_cl:", STATUS, 1)
      CLOSE axmi140_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH axmi140_cl INTO g_xmaa_m.xmaa001,g_xmaa_m.xmaal003,g_xmaa_m.xmaal004
   
   #若資料已被他人LOCK
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_xmaa_m.xmaa001,SQLCA.sqlcode,0)
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #IF NOT cl_ask_delete() THEN             #確認一下
   IF cl_ask_del_master() THEN              #確認一下
      INITIALIZE g_doc.* TO NULL         
      LET g_doc.column1 = "xmaa001"       
      LET g_doc.value1 = g_xmaa_m.xmaa001     
      CALL cl_doc_remove()    
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM xmaa_t WHERE xmaaent = g_enterprise AND xmaa001 = g_xmaa_m.xmaa001
 
                                                               
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
      
      IF SQLCA.sqlcode THEN
         CALL cl_err("xmaa_t",SQLCA.sqlcode,0)
         CALL s_transaction_end('N','0')
      END IF
 
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_master_multi_table_t.xmaal001
   LET l_field_keys[01] = 'xmaal001'
   LET l_var_keys_bak[02] = g_dlang
   LET l_field_keys[02] = 'xmaal002'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'xmaal_t')
 
  
      #add-point:單身刪除後 
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
 
      
      CLEAR FORM
      CALL g_xmaa_d.clear() 
 
     
      CALL axmi140_ui_browser_refresh()  
      CALL axmi140_ui_headershow()  
      CALL axmi140_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL axmi140_fetch('P')
      ELSE
         LET g_wc = " 1=1"
         LET g_wc2 = " 1=1"
         CALL axmi140_browser_fill("F")
      END IF
       
   END IF
 
   CLOSE axmi140_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_xmaa_m.xmaa001,'D')
    
END FUNCTION
]]>
</section>
  <section id="axmi140.delete_b" ver="1" status="" src="s">
<![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION axmi140_delete_b(ps_table,ps_keys_bak,ps_page)
   {<Local define>}
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
 
   
END FUNCTION
]]>
</section>
  <section id="axmi140.description" ver="1" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(版次:1) Build-000000
#+ 
#+ Filename...: axmi140
#+ Description: 信用評等條件維護作業
#+ Creator....: 03079(2014/03/23)
#+ Modifier...: 03079(2014/03/23)
#+ Buildtype..: 應用 i07 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="axmi140.detail_reproduce" ver="1" status="" src="s">
<![CDATA[#+ 單身自動複製
PRIVATE FUNCTION axmi140_detail_reproduce()
   {<Local define>}
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE xmaa_t.*
 
 
   {</Local define>}
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE axmi140_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE axmi140_detail AS ",
                "SELECT * FROM xmaa_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO axmi140_detail SELECT * FROM xmaa_t 
                                         WHERE xmaaent = g_enterprise AND xmaa001 = g_xmaa001_t
 
   
   #將key修正為調整後   
   UPDATE axmi140_detail 
      #更新key欄位
      SET xmaa001 = g_xmaa_m.xmaa001
 
      #更新共用欄位
      #此段落由子樣板a13產生
       , xmaaownid = g_user
       , xmaaowndp = g_dept
       , xmaacrtid = g_user
       , xmaacrtdp = g_dept 
       , xmaacrtdt = ld_date
       , xmaamodid = "" 
       , xmaamoddt = "" 
      #, xmaastus = "Y"
 
 
                                       
  
   #將資料塞回原table   
   INSERT INTO xmaa_t SELECT * FROM axmi140_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmi140_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_xmaa001_t = g_xmaa_m.xmaa001
 
   
   DROP TABLE axmi140_detail
   
END FUNCTION
]]>
</section>
  <section id="axmi140.fetch" ver="1" status="" src="s">
<![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION axmi140_fetch(p_flag)
   {<Local define>}
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   {</Local define>}
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   #add-point:fetch段動作開始前
   {<point name="fetch.before_fetch"/>}
   #end add-point    
 
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,': ' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF
            
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
            LET g_current_idx = g_jump
         END IF
 
         LET g_no_ask = FALSE  
   END CASE    
   
   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   CALL axmi140_browser_fill(p_flag)
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身筆數顯示
   DISPLAY g_detail_cnt TO FORMONLY.cnt                      #設定page 總筆數 
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數
   
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_xmaa_m.xmaa001 = g_browser[g_current_idx].b_xmaa001
 
   
   #重讀DB,因TEMP有不被更新特性
    SELECT UNIQUE xmaa001
 INTO g_xmaa_m.xmaa001
 FROM xmaa_t
 WHERE xmaaent = g_enterprise AND xmaa001 = g_xmaa_m.xmaa001
   IF SQLCA.sqlcode THEN
      CALL cl_err("xmaa_t",SQLCA.sqlcode,1)
      INITIALIZE g_xmaa_m.* TO NULL
      RETURN
   END IF
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL axmi140_show()
 
END FUNCTION
]]>
</section>
  <section id="axmi140.fill_chk" ver="1" status="" src="s">
<![CDATA[#+ 單身填充確認
PRIVATE FUNCTION axmi140_fill_chk(ps_idx)
   {<Local define>}
   DEFINE ps_idx        LIKE type_t.chr10
   DEFINE lst_token     base.StringTokenizer
   DEFINE ls_token      STRING
   {</Local define>}
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   
   #add-point:fill_chk段other
   {<point name="fill_chk.other"/>}
   #end add-point
   
   RETURN FALSE
 
END FUNCTION
]]>
</section>
  <section id="axmi140.filter" ver="1" status="" src="s">
<![CDATA[#+ filter過濾功能
PRIVATE FUNCTION axmi140_filter()
 
 
 
 
 
 
 
 
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
 
 
 
   
 
 
END FUNCTION
]]>
</section>
  <section id="axmi140.filter_parser" ver="1" status="" src="s">
<![CDATA[#+ filter過濾功能
PRIVATE FUNCTION axmi140_filter_parser(ps_field)
   {<Local define>}
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   {</Local define>}
 
 
 
 
END FUNCTION
]]>
</section>
  <section id="axmi140.global" ver="1" status="" src="s">
<![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_xmaa_m        RECORD
       xmaa001 LIKE xmaa_t.xmaa001, 
   xmaal003 LIKE xmaal_t.xmaal003, 
   xmaal004 LIKE xmaal_t.xmaal004
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_xmaa_d        RECORD
       xmaa003 LIKE xmaa_t.xmaa003, 
   xmaa002 LIKE xmaa_t.xmaa002, 
   xmaa004 LIKE xmaa_t.xmaa004, 
   xmaa005 LIKE xmaa_t.xmaa005, 
   xmaastus LIKE xmaa_t.xmaastus, 
   xmaaownid LIKE xmaa_t.xmaaownid, 
   xmaaownid_desc LIKE type_t.chr500, 
   xmaaowndp LIKE xmaa_t.xmaaowndp, 
   xmaaowndp_desc LIKE type_t.chr500, 
   xmaacrtid LIKE xmaa_t.xmaacrtid, 
   xmaacrtid_desc LIKE type_t.chr500, 
   xmaacrtdp LIKE xmaa_t.xmaacrtdp, 
   xmaacrtdp_desc LIKE type_t.chr500, 
   xmaacrtdt DATETIME YEAR TO SECOND, 
   xmaamodid LIKE xmaa_t.xmaamodid, 
   xmaamodid_desc LIKE type_t.chr500, 
   xmaamoddt DATETIME YEAR TO SECOND
       END RECORD
 
 
DEFINE g_master_multi_table_t    RECORD
      xmaal001 LIKE xmaal_t.xmaal001,
      xmaal003 LIKE xmaal_t.xmaal003,
      xmaal004 LIKE xmaal_t.xmaal004
      END RECORD
#無單身append欄位定義
 
#模組變數(Module Variables)
DEFINE g_xmaa_m          type_g_xmaa_m
DEFINE g_xmaa_m_t        type_g_xmaa_m
 
   DEFINE g_xmaa001_t LIKE xmaa_t.xmaa001
 
 
DEFINE g_xmaa_d          DYNAMIC ARRAY OF type_g_xmaa_d
DEFINE g_xmaa_d_t        type_g_xmaa_d
 
 
DEFINE g_browser      DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位  
       b_statepic     LIKE type_t.chr50,
          b_xmaa001 LIKE xmaa_t.xmaa001
       #,rank           LIKE type_t.num10
      END RECORD 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
 
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
DEFINE g_state               STRING                        
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page                    
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="axmi140.init" ver="1" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION axmi140_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
  
   LET g_bfill = "Y"
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   
   LET g_error_show = 1
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL axmi140_default_search()
    
END FUNCTION
]]>
</section>
  <section id="axmi140.input" ver="1" status="" src="s">
<![CDATA[#+ 資料輸入
PRIVATE FUNCTION axmi140_input(p_cmd)
   {<Local define>}
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   {</Local define>}
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point    
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF  
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT xmaa003,xmaa002,xmaa004,xmaa005,xmaastus,xmaaownid,'',xmaaowndp,'',xmaacrtid, 
       '',xmaacrtdp,'',xmaacrtdt,xmaamodid,'',xmaamoddt FROM xmaa_t WHERE xmaaent=? AND xmaa001=? AND  
       xmaa002=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE axmi140_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
 
 
   
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL axmi140_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL axmi140_set_no_entry(p_cmd)
   #add-point:set_no_entry後
   {<point name="input.after_set_no_entry"/>}
   #end add-point
 
   DISPLAY BY NAME g_xmaa_m.xmaa001,g_xmaa_m.xmaal003,g_xmaa_m.xmaal004
   
   LET lb_reproduce = FALSE
   
   #add-point:進入修改段前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
</section>
  <section id="axmi140.input.body" ver="1" status="" src="s">
<![CDATA[      #Page1 預設值產生於此處
      INPUT ARRAY g_xmaa_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂單身ACTION
         
 
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xmaa_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axmi140_b_fill(g_wc2) 
            IF g_rec_b != 0 THEN
               CALL fgl_set_arr_curr(l_ac)
            END IF
            #add-point:資料輸入前
            {<point name="input.body.before_input"/>}
            #end add-point
         
         BEFORE ROW
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN axmi140_cl USING g_enterprise,
                                               g_xmaa_m.xmaa001
 
                                               
               IF STATUS THEN
                  CALL cl_err("OPEN axmi140_cl:", STATUS, 1)
                  CLOSE axmi140_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            
            IF g_rec_b >= l_ac 
               AND g_xmaa_d[l_ac].xmaa002 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xmaa_d_t.* = g_xmaa_d[l_ac].*  #BACKUP
               CALL axmi140_set_entry_b(l_cmd)
               CALL axmi140_set_no_entry_b(l_cmd)
               OPEN axmi140_bcl USING g_enterprise,g_xmaa_m.xmaa001,
 
                                                g_xmaa_d_t.xmaa002
 
               IF STATUS THEN
                  CALL cl_err("OPEN axmi140_bcl:", STATUS, 1)
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axmi140_bcl INTO g_xmaa_d[l_ac].xmaa003,g_xmaa_d[l_ac].xmaa002,g_xmaa_d[l_ac].xmaa004, 
                      g_xmaa_d[l_ac].xmaa005,g_xmaa_d[l_ac].xmaastus,g_xmaa_d[l_ac].xmaaownid,g_xmaa_d[l_ac].xmaaownid_desc, 
                      g_xmaa_d[l_ac].xmaaowndp,g_xmaa_d[l_ac].xmaaowndp_desc,g_xmaa_d[l_ac].xmaacrtid, 
                      g_xmaa_d[l_ac].xmaacrtid_desc,g_xmaa_d[l_ac].xmaacrtdp,g_xmaa_d[l_ac].xmaacrtdp_desc, 
                      g_xmaa_d[l_ac].xmaacrtdt,g_xmaa_d[l_ac].xmaamodid,g_xmaa_d[l_ac].xmaamodid_desc, 
                      g_xmaa_d[l_ac].xmaamoddt
                  IF SQLCA.sqlcode THEN
                      CALL cl_err(g_xmaa_d_t.xmaa002,SQLCA.sqlcode,1)
                      LET l_lock_sw = "Y"
                  END IF
                  
                  CALL axmi140_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            
        
         BEFORE INSERT
            
            INITIALIZE g_xmaa_d_t.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmaa_d[l_ac].* TO NULL
            
            #公用欄位預設值
            #此段落由子樣板a14產生    
      LET g_xmaa_d[l_ac].xmaaownid = g_user
      LET g_xmaa_d[l_ac].xmaaowndp = g_dept
      LET g_xmaa_d[l_ac].xmaacrtid = g_user
      LET g_xmaa_d[l_ac].xmaacrtdp = g_dept 
      LET g_xmaa_d[l_ac].xmaacrtdt = cl_get_current()
      LET g_xmaa_d[l_ac].xmaamodid = ""
      LET g_xmaa_d[l_ac].xmaamoddt = ""
      #LET g_xmaa_d[l_ac].xmaastus = ""
 
  
            
            #一般欄位預設值
                  LET g_xmaa_d[l_ac].xmaa005 = "100"
 
 
            
            
            LET g_xmaa_d_t.* = g_xmaa_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axmi140_set_entry_b(l_cmd)
            CALL axmi140_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmaa_d[li_reproduce_target].* = g_xmaa_d[li_reproduce].*
 
               LET g_xmaa_d[g_xmaa_d.getLength()].xmaa002 = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
 
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM xmaa_t 
             WHERE xmaaent = g_enterprise AND xmaa001 = g_xmaa_m.xmaa001
 
               AND xmaa002 = g_xmaa_d[l_ac].xmaa002
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               CALL s_transaction_begin()
               #add-point:單身新增前
               {<point name="input.body.b_insert" mark="Y"/>}
               #end add-point
               INSERT INTO xmaa_t
                           (xmaaent,
                            xmaa001,
                            xmaa002
                            ,xmaa003,xmaa004,xmaa005,xmaastus,xmaaownid,xmaaowndp,xmaacrtid,xmaacrtdp,xmaacrtdt,xmaamodid,xmaamoddt) 
                     VALUES(g_enterprise,
                            g_xmaa_m.xmaa001,
                            g_xmaa_d[l_ac].xmaa002
                            ,g_xmaa_d[l_ac].xmaa003,g_xmaa_d[l_ac].xmaa004,g_xmaa_d[l_ac].xmaa005,g_xmaa_d[l_ac].xmaastus, 
                                g_xmaa_d[l_ac].xmaaownid,g_xmaa_d[l_ac].xmaaowndp,g_xmaa_d[l_ac].xmaacrtid, 
                                g_xmaa_d[l_ac].xmaacrtdp,g_xmaa_d[l_ac].xmaacrtdt,g_xmaa_d[l_ac].xmaamodid, 
                                g_xmaa_d[l_ac].xmaamoddt)
               #add-point:單身新增中
               {<point name="input.body.m_insert"/>}
               #end add-point
               LET p_cmd = 'u'
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_xmaa_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("xmaa_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR "INSERT O.K"
               LET g_rec_b=g_rec_b+1
               DISPLAY g_rec_b TO FORMONLY.cnt
            END IF
            
            #add-point:單身新增後
            {<point name="input.body.after_insert"/>}
            #end add-point
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_xmaa_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_xmaa_d.deleteElement(l_ac)
               NEXT FIELD xmaa002
            END IF
            IF g_xmaa_d_t.xmaa002 IS NOT NULL
 
               THEN
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete"/>}
               #end add-point
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               IF axmi140_before_delete() THEN 
                  CALL s_transaction_end('Y','0')
               ELSE 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF 
               CLOSE axmi140_bcl
               LET l_count = g_xmaa_d.getLength()
            END IF 
            
            #add-point:單身刪除後
            {<point name="input.body.a_delete"/>}
            #end add-point
              
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body.after_delete"/>}
            #end add-point
 
         #---------------------<  Detail: page1  >---------------------
         #----<<xmaa003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmaa003
            #add-point:BEFORE FIELD xmaa003
            {<point name="input.b.page1.xmaa003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmaa003
            
            #add-point:AFTER FIELD xmaa003
            {<point name="input.a.page1.xmaa003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmaa003
            #add-point:ON CHANGE xmaa003
            {<point name="input.g.page1.xmaa003" />}
            #END add-point
 
         #----<<xmaa002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmaa002
            #add-point:BEFORE FIELD xmaa002
            {<point name="input.b.page1.xmaa002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmaa002
            
            #add-point:AFTER FIELD xmaa002
            {<point name="input.a.page1.xmaa002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmaa002
            #add-point:ON CHANGE xmaa002
            {<point name="input.g.page1.xmaa002" />}
            #END add-point
 
         #----<<xmaa004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmaa004
            #add-point:BEFORE FIELD xmaa004
            {<point name="input.b.page1.xmaa004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmaa004
            
            #add-point:AFTER FIELD xmaa004
            {<point name="input.a.page1.xmaa004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmaa004
            #add-point:ON CHANGE xmaa004
            {<point name="input.g.page1.xmaa004" />}
            #END add-point
 
         #----<<xmaa005>>----
         #此段落由子樣板a02產生
         AFTER FIELD xmaa005
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_xmaa_d[l_ac].xmaa005,"0","0","100","0","azz-00087",1) THEN
               NEXT FIELD xmaa005
            END IF
 
 
            #add-point:AFTER FIELD xmaa005
            {<point name="input.a.page1.xmaa005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmaa005
            #add-point:BEFORE FIELD xmaa005
            {<point name="input.b.page1.xmaa005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmaa005
            #add-point:ON CHANGE xmaa005
            {<point name="input.g.page1.xmaa005" />}
            #END add-point
 
         #----<<xmaastus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmaastus
            #add-point:BEFORE FIELD xmaastus
            {<point name="input.b.page1.xmaastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmaastus
            
            #add-point:AFTER FIELD xmaastus
            {<point name="input.a.page1.xmaastus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmaastus
            #add-point:ON CHANGE xmaastus
            {<point name="input.g.page1.xmaastus" />}
            #END add-point
 
 
         #---------------------<  Detail: page1  >---------------------
         #----<<xmaa003>>----
         #Ctrlp:input.c.page1.xmaa003
         ON ACTION controlp INFIELD xmaa003
            #add-point:ON ACTION controlp INFIELD xmaa003
            {<point name="input.c.page1.xmaa003" />}
            #END add-point
 
         #----<<xmaa002>>----
         #Ctrlp:input.c.page1.xmaa002
         ON ACTION controlp INFIELD xmaa002
            #add-point:ON ACTION controlp INFIELD xmaa002
            {<point name="input.c.page1.xmaa002" />}
            #END add-point
 
         #----<<xmaa004>>----
         #Ctrlp:input.c.page1.xmaa004
         ON ACTION controlp INFIELD xmaa004
            #add-point:ON ACTION controlp INFIELD xmaa004
            {<point name="input.c.page1.xmaa004" />}
            #END add-point
 
         #----<<xmaa005>>----
         #Ctrlp:input.c.page1.xmaa005
         ON ACTION controlp INFIELD xmaa005
            #add-point:ON ACTION controlp INFIELD xmaa005
            {<point name="input.c.page1.xmaa005" />}
            #END add-point
 
         #----<<xmaastus>>----
         #Ctrlp:input.c.page1.xmaastus
         ON ACTION controlp INFIELD xmaastus
            #add-point:ON ACTION controlp INFIELD xmaastus
            {<point name="input.c.page1.xmaastus" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_xmaa_d[l_ac].* = g_xmaa_d_t.*
               CLOSE axmi140_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_xmaa_d[l_ac].xmaa002,-263,1)
               LET g_xmaa_d[l_ac].* = g_xmaa_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               LET g_xmaa_d[l_ac].xmaamodid = g_user 
LET g_xmaa_d[l_ac].xmaamoddt = cl_get_current()
 
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
         
               UPDATE xmaa_t SET (xmaa001,xmaa003,xmaa002,xmaa004,xmaa005,xmaastus,xmaaownid,xmaaowndp, 
                   xmaacrtid,xmaacrtdp,xmaacrtdt,xmaamodid,xmaamoddt) = (g_xmaa_m.xmaa001,g_xmaa_d[l_ac].xmaa003, 
                   g_xmaa_d[l_ac].xmaa002,g_xmaa_d[l_ac].xmaa004,g_xmaa_d[l_ac].xmaa005,g_xmaa_d[l_ac].xmaastus, 
                   g_xmaa_d[l_ac].xmaaownid,g_xmaa_d[l_ac].xmaaowndp,g_xmaa_d[l_ac].xmaacrtid,g_xmaa_d[l_ac].xmaacrtdp, 
                   g_xmaa_d[l_ac].xmaacrtdt,g_xmaa_d[l_ac].xmaamodid,g_xmaa_d[l_ac].xmaamoddt)
                WHERE xmaaent = g_enterprise AND xmaa001 = g_xmaa_m.xmaa001 
 
                 AND xmaa002 = g_xmaa_d_t.xmaa002 #項次   
 
                 
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("xmaa_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   CALL cl_err("xmaa_t",SQLCA.sqlcode,1)  
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmaa_m.xmaa001
               LET gs_keys_bak[1] = g_xmaa001_t
               LET gs_keys[2] = g_xmaa_d[g_detail_idx].xmaa002
               LET gs_keys_bak[2] = g_xmaa_d_t.xmaa002
               CALL axmi140_update_b('xmaa_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
            END IF
 
         AFTER INPUT
            #若單身還沒有輸入資料, 強制切換至單身
            IF cl_null(g_xmaa_d[1].xmaa002) THEN
               CALL g_xmaa_d.deleteElement(1)
               NEXT FIELD xmaa002
            END IF
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point    
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_xmaa_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_xmaa_d.getLength()+1
            
      END INPUT
 
 
      
 
      
 
      
      #add-point:input段more_input
      {<point name="input.more_inputarray"/>}
      #end add-point    
      
      BEFORE DIALOG
         #add-point:input段before_dialog
         {<point name="input.before_dialog"/>}
         #end add-point 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD xmaa001
        ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xmaa003
 
            END CASE
         END IF
   
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         CALL cl_set_head_visible("","AUTO")
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
   
   #add-point:input段after_input
   {<point name="input.after_input"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="axmi140.input.head" ver="1" status="" src="s">
<![CDATA[   
      #單頭段
      INPUT BY NAME g_xmaa_m.xmaa001,g_xmaa_m.xmaal003,g_xmaa_m.xmaal004 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂單頭ACTION
         
 
         ON ACTION update_item
            #add-point:ON ACTION update_item
            {<point name="input.master_input.update_item" />}
            #END add-point
 
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET g_master_multi_table_t.xmaal001 = g_xmaa_m.xmaa001
LET g_master_multi_table_t.xmaal003 = g_xmaa_m.xmaal003
LET g_master_multi_table_t.xmaal004 = g_xmaa_m.xmaal004
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.xmaal001 = ''
LET g_master_multi_table_t.xmaal003 = ''
LET g_master_multi_table_t.xmaal004 = ''
 
            END IF
            #add-point:單頭input前
            {<point name="input.head.b_input"/>}
            #end add-point
          
         #---------------------------<  Master  >---------------------------
         #----<<xmaa001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmaa001
            #add-point:BEFORE FIELD xmaa001
            {<point name="input.b.xmaa001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmaa001
            
            #add-point:AFTER FIELD xmaa001
            {<point name="input.a.xmaa001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmaa001
            #add-point:ON CHANGE xmaa001
            {<point name="input.g.xmaa001" />}
            #END add-point
 
         #----<<xmaal003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmaal003
            #add-point:BEFORE FIELD xmaal003
            {<point name="input.b.xmaal003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmaal003
            
            #add-point:AFTER FIELD xmaal003
            {<point name="input.a.xmaal003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmaal003
            #add-point:ON CHANGE xmaal003
            {<point name="input.g.xmaal003" />}
            #END add-point
 
         #----<<xmaal004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xmaal004
            #add-point:BEFORE FIELD xmaal004
            {<point name="input.b.xmaal004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmaal004
            
            #add-point:AFTER FIELD xmaal004
            {<point name="input.a.xmaal004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmaal004
            #add-point:ON CHANGE xmaal004
            {<point name="input.g.xmaal004" />}
            #END add-point
 
 #欄位檢查
         #---------------------------<  Master  >---------------------------
         #----<<xmaa001>>----
         #Ctrlp:input.c.xmaa001
         ON ACTION controlp INFIELD xmaa001
            #add-point:ON ACTION controlp INFIELD xmaa001
            {<point name="input.c.xmaa001" />}
            #END add-point
 
         #----<<xmaal003>>----
         #Ctrlp:input.c.xmaal003
         ON ACTION controlp INFIELD xmaal003
            #add-point:ON ACTION controlp INFIELD xmaal003
            {<point name="input.c.xmaal003" />}
            #END add-point
 
         #----<<xmaal004>>----
         #Ctrlp:input.c.xmaal004
         ON ACTION controlp INFIELD xmaal004
            #add-point:ON ACTION controlp INFIELD xmaal004
            {<point name="input.c.xmaal004" />}
            #END add-point
 
 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            
            IF s_transaction_chk("N",0) THEN
                CALL s_transaction_begin()
            END IF
 
            #多語言處理
                     INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_xmaa_m.xmaa001 = g_master_multi_table_t.xmaal001 AND
         g_xmaa_m.xmaal003 = g_master_multi_table_t.xmaal003 AND 
         g_xmaa_m.xmaal004 = g_master_multi_table_t.xmaal004  THEN
         ELSE 
            LET l_var_keys[01] = g_xmaa_m.xmaa001
            LET l_field_keys[01] = 'xmaal001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.xmaal001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'xmaal002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_xmaa_m.xmaal003
            LET l_fields[01] = 'xmaal003'
            LET l_vars[02] = g_xmaa_m.xmaal004
            LET l_fields[02] = 'xmaal004'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'xmaalent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'xmaal_t')
         END IF 
 
                
            CALL cl_showmsg()
            DISPLAY BY NAME g_xmaa_m.xmaa001             
 
 
            IF p_cmd = 'u' THEN
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
            
               UPDATE xmaa_t SET (xmaa001) = (g_xmaa_m.xmaa001)
                WHERE xmaaent = g_enterprise AND xmaa001 = g_xmaa001_t
 
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("xmaa_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("xmaa_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                     #資料多語言用-增/改
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmaa_m.xmaa001
               LET gs_keys_bak[1] = g_xmaa001_t
               LET gs_keys[2] = g_xmaa_d[g_detail_idx].xmaa002
               LET gs_keys_bak[2] = g_xmaa_d_t.xmaa002
               CALL axmi140_update_b('xmaa_t',gs_keys,gs_keys_bak,"'1'")
                              INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_xmaa_m.xmaa001 = g_master_multi_table_t.xmaal001 AND
         g_xmaa_m.xmaal003 = g_master_multi_table_t.xmaal003 AND 
         g_xmaa_m.xmaal004 = g_master_multi_table_t.xmaal004  THEN
         ELSE 
            LET l_var_keys[01] = g_xmaa_m.xmaa001
            LET l_field_keys[01] = 'xmaal001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.xmaal001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'xmaal002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_xmaa_m.xmaal003
            LET l_fields[01] = 'xmaal003'
            LET l_vars[02] = g_xmaa_m.xmaal004
            LET l_fields[02] = 'xmaal004'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'xmaalent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'xmaal_t')
         END IF 
 
                     LET g_xmaa001_t = g_xmaa_m.xmaa001
 
                     #add-point:單頭修改後
                     {<point name="input.head.a_update"/>}
                     #end add-point
                     CALL s_transaction_end('Y','0')
               END CASE
            
            ELSE    
               #add-point:單頭新增
               {<point name="input.head.a_insert"/>}
               #end add-point
                                 
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL axmi140_detail_reproduce()
               END IF
            END IF
           #controlp
                     
           LET g_xmaa001_t = g_xmaa_m.xmaa001
 
           
           #若單身還沒有輸入資料, 強制切換至單身
           IF cl_null(g_xmaa_d[1].xmaa002) THEN
              CALL g_xmaa_d.deleteElement(1)
              NEXT FIELD xmaa002
           END IF
 
      END INPUT
]]>
</section>
  <section id="axmi140.insert" ver="1" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION axmi140_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   #清除相關資料
   CLEAR FORM                    
   CALL g_xmaa_d.clear()
 
 
   INITIALIZE g_xmaa_m.* LIKE xmaa_t.*             #DEFAULT 設定
   LET g_xmaa001_t = NULL
 
   CALL s_transaction_begin()
   WHILE TRUE
     
      #單頭預設值
      
     
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
 
      CALL axmi140_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_xmaa_m.* = g_xmaa_m_t.*
         CALL axmi140_show()
         CALL cl_err('',9001,0)
         EXIT WHILE
      END IF
      
      CALL g_xmaa_d.clear()
 
      
      #add-point:單頭輸入後2
      {<point name="insert.after_insert2"/>}
      #end add-point
 
      LET g_rec_b = 0
      EXIT WHILE
      
   END WHILE
   
   LET g_state = "Y"
   
   LET g_xmaa001_t = g_xmaa_m.xmaa001
 
   
   LET g_wc = g_wc,  
              " OR ( xmaaent = '" ||g_enterprise|| "' AND ",
              " xmaa001 = '", g_xmaa_m.xmaa001 CLIPPED, "' "
 
              , ") "
   
END FUNCTION
]]>
</section>
  <section id="axmi140.insert_b" ver="1" status="" src="s">
<![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION axmi140_insert_b(ps_table,ps_keys,ps_page)
   {<Local define>}
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   {</Local define>}
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
 
   
END FUNCTION
]]>
</section>
  <section id="axmi140.lock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION axmi140_lock_b(ps_table,ps_page)
   {<Local define>}
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL axmi140_b_fill()
   
 
   
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="axmi140.main" ver="1" status="" src="s">
<![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axm","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = "SELECT xmaa001,'','' FROM xmaa_t WHERE xmaaent= ? AND xmaa001=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   DECLARE axmi140_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
 
   ELSE
      
      #畫面開啟 (identifier)
      OPEN WINDOW w_axmi140 WITH FORM cl_ap_formpath("axm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axmi140_init()   
 
      #進入選單 Menu (="N")
      CALL axmi140_ui_dialog() 
	  
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axmi140
      
   END IF 
   
   CLOSE axmi140_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="axmi140.modify" ver="1" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION axmi140_modify()
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_xmaa_m.xmaa001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
    SELECT UNIQUE xmaa001
 INTO g_xmaa_m.xmaa001
 FROM xmaa_t
 WHERE xmaaent = g_enterprise AND xmaa001 = g_xmaa_m.xmaa001
 
   ERROR ""
  
   LET g_xmaa001_t = g_xmaa_m.xmaa001
 
   CALL s_transaction_begin()
   
   OPEN axmi140_cl USING g_enterprise,g_xmaa_m.xmaa001
 
   IF STATUS THEN
      CALL cl_err("OPEN axmi140_cl:", STATUS, 1)
      CLOSE axmi140_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH axmi140_cl INTO g_xmaa_m.xmaa001,g_xmaa_m.xmaal003,g_xmaa_m.xmaal004
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_xmaa_m.xmaa001,SQLCA.sqlcode,0)
      CLOSE axmi140_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   CALL s_transaction_end('Y','0')
 
   CALL axmi140_show()
   WHILE TRUE
      LET g_xmaa001_t = g_xmaa_m.xmaa001
 
 
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      CALL axmi140_input("u")     #欄位更改
      
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_xmaa_m.* = g_xmaa_m_t.*
         CALL axmi140_show()
         CALL cl_err('',9001,0)
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更
      IF g_xmaa_m.xmaa001 != g_xmaa001_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單頭(偽)修改前
         {<point name="modify.b_key_update" mark="Y"/>}
         #end add-point
         
         #更新單頭key值
         UPDATE xmaa_t SET xmaa001 = g_xmaa_m.xmaa001
 
          WHERE xmaaent = g_enterprise AND xmaa001 = g_xmaa001_t
 
         #add-point:單頭(偽)修改中
         {<point name="modify.m_key_update"/>}
         #end add-point
         
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("xmaa_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("xmaa_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
 
 
         
         #add-point:單頭(偽)修改後
         {<point name="modify.a_key_update"/>}
         #end add-point
         
      END IF
      
      EXIT WHILE
      
   END WHILE
 
   #修改歷程記錄
   IF NOT cl_log_modified_record(g_xmaa_m.xmaa001,g_site) THEN 
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE axmi140_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_xmaa_m.xmaa001,'U')
 
   CALL axmi140_b_fill("1=1")
   
END FUNCTION   
]]>
</section>
  <section id="axmi140.modify_detail_chk" ver="1" status="" src="s">
<![CDATA[#+ 單身輸入判定
PRIVATE FUNCTION axmi140_modify_detail_chk(ps_record)
   {<Local define>}
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   {</Local define>}
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define"/>}
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "xmaa003"
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
]]>
</section>
  <section id="axmi140.other_function" ver="1" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="axmi140.query" ver="1" status="" src="s">
<![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION axmi140_query()
   {<Local define>}
   DEFINE ls_wc STRING
   {</Local define>}
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #add-point:query開始前
   {<point name="query.befroe_query"/>}
   #end add-point 
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
   
   LET ls_wc = g_wc
 
   LET INT_FLAG = 0    
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_xmaa_d.clear()
 
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL axmi140_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL axmi140_browser_fill(g_wc)
      CALL axmi140_fetch("")
      RETURN
   END IF
   
   LET l_ac = 1
   LET g_detail_cnt = 0
   LET g_current_idx = 0
   LET g_current_row = 0
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   LET g_error_show = 1
   CALL axmi140_browser_fill("F")
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||")")
   
   #備份搜尋條件
   LET ls_wc = g_wc
   
   #第一層模糊搜尋
   IF g_browser_cnt = 0 THEN
      LET g_wc = cl_wc_parser(ls_wc)
      LET g_error_show = 1
      CALL axmi140_browser_fill("F")
   END IF
   
   #第二層助記碼搜尋
   IF g_browser_cnt = 0 THEN
 
      LET g_wc = cl_mcode_parser(ls_wc,'xmaal_t','xmaal004','xmaa_t','xmaa001','1','')
      
      IF NOT cl_null(g_wc) THEN
         LET g_error_show = 1
         CALL axmi140_browser_fill("F")
      END IF
      
   END IF
   
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
      CLEAR FORM
   ELSE
      CALL axmi140_fetch("F") 
   END IF
   
END FUNCTION
]]>
</section>
  <section id="axmi140.ref_show" ver="1" status="" src="s">
<![CDATA[#+ 帶出reference資料
PRIVATE FUNCTION axmi140_ref_show()
   {<Local define>}
   DEFINE l_ac_t LIKE type_t.num10 #l_ac暫存用
   {</Local define>}
   #add-point:ref_show段define
   {<point name="ref_show.define"/>}
   #end add-point
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:ref_show段m_reference
   {<point name="ref_show.head.reference"/>}
   #end add-point
 
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_xmaa_d.getLength()
      #add-point:ref_show段d_reference
      {<point name="ref_show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
   LET l_ac = l_ac_t
 
END FUNCTION
]]>
</section>
  <section id="axmi140.reproduce" ver="1" status="" src="s">
<![CDATA[#+ 資料複製
PRIVATE FUNCTION axmi140_reproduce()
   {<Local define>}
   DEFINE l_newno     LIKE xmaa_t.xmaa001 
   DEFINE l_oldno     LIKE xmaa_t.xmaa001 
 
   DEFINE l_master    RECORD LIKE xmaa_t.*
   DEFINE l_detail    RECORD LIKE xmaa_t.*
 
   DEFINE l_cnt       LIKE type_t.num5
   {</Local define>}
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
 
   IF g_xmaa_m.xmaa001 IS NULL
 
      THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   LET g_xmaa001_t = g_xmaa_m.xmaa001
 
   
   LET g_xmaa_m.xmaa001 = ""
 
    
   CALL axmi140_set_entry('a')
   CALL axmi140_set_no_entry('a')
   
   CALL cl_set_head_visible("","YES")
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL axmi140_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
   
   LET g_state = "Y"
   
   LET g_wc = g_wc,  
              " OR (",
              " xmaa001 = '", l_newno CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="axmi140.set_entry" ver="1" status="" src="s">
<![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION axmi140_set_entry(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1  
   {</Local define>}
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("xmaa001",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="axmi140.set_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION axmi140_set_entry_b(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1   
   {</Local define>}
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="axmi140.set_no_entry" ver="1" status="" src="s">
<![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION axmi140_set_no_entry(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1   
   {</Local define>}
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("xmaa001",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="axmi140.set_no_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION axmi140_set_no_entry_b(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1   
   {</Local define>}
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b段"/>}
   #end add-point 
   
END FUNCTION
]]>
</section>
  <section id="axmi140.show" ver="1" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION axmi140_show()
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   IF g_bfill = "Y" THEN
      CALL axmi140_b_fill(g_wc2) #單身填充
      CALL axmi140_b_fill2('0') #單身填充
   END IF
   
   
 
   LET g_xmaa_m_t.* = g_xmaa_m.*      #保存單頭舊值
   
   DISPLAY BY NAME g_xmaa_m.xmaa001,g_xmaa_m.xmaal003,g_xmaa_m.xmaal004
   CALL axmi140_b_fill(g_wc2_table1)                 #單身
   CALL axmi140_b_fill2('0') #單身填充
 
   CALL axmi140_ref_show()
 
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()  
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point   
   
END FUNCTION
]]>
</section>
  <section id="axmi140.state_change" ver="1" status="" src="s">
<![CDATA[    
]]>
</section>
  <section id="axmi140.ui_browser_refresh" ver="1" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION axmi140_ui_browser_refresh()
   {<Local define>}
   DEFINE l_i  LIKE type_t.num10
   {</Local define>}
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_xmaa001 = g_xmaa_m.xmaa001 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數的顯示
   
END FUNCTION
]]>
</section>
  <section id="axmi140.ui_detailshow" ver="1" status="" src="s">
<![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION axmi140_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point  
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
      #add-point:ui_detailshow段more
      {<point name="ui_detailshow.more"/>}
      #end add-point 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point 
   
END FUNCTION
]]>
</section>
  <section id="axmi140.ui_dialog" ver="1" status="" src="s">
<![CDATA[#+ 功能選單
PRIVATE FUNCTION axmi140_ui_dialog()
   {<Local define>}
   DEFINE li_idx   LIKE type_t.num5
   DEFINE ls_wc    STRING
   {</Local define>}
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point  
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
   
      CALL axmi140_browser_fill("")
 
      
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_xmaa001 = g_xmaa001_t
 
               THEN
               LET g_current_row = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
      
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
        
         DISPLAY ARRAY g_xmaa_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL axmi140_ui_detailshow()
               
               #add-point:page1自定義行為
               {<point name="ui_dialog.body.before_row"/>}
               #end add-point
            
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               
               #控制stus哪個按鈕可以按
               
               
            
 
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
         #add-point:ui_dialog段define
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL g_curr_diag.setSelectionMode("s_detail1",1)         
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LET g_current_idx = g_browser.getLength()
            END IF 
            
            IF g_current_idx = 0 AND g_browser.getLength() > 0 THEN
               LET g_current_idx = 1 
            END IF
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL axmi140_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL axmi140_ui_detailshow() #Setting the current row 
            
            #add-point:ui_dialog段before dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #ACTION表單列
         
         ON ACTION first
            CALL axmi140_fetch('F')
            LET g_current_row = g_current_idx         
          
         ON ACTION previous
            CALL axmi140_fetch('P')
            LET g_current_row = g_current_idx
          
         ON ACTION jump
            CALL axmi140_fetch('/')
            LET g_current_row = g_current_idx
        
         ON ACTION next
            CALL axmi140_fetch('N')
            LET g_current_row = g_current_idx
         
         ON ACTION last
            CALL axmi140_fetch('L')
            LET g_current_row = g_current_idx
          
         ON ACTION close
            LET INT_FLAG=FALSE        
            LET g_action_choice = "exit"
            EXIT DIALOG     
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
          
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
                CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("worksheet_detail",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("worksheet_detail",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
			
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL axmi140_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL axmi140_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL axmi140_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
			   
         
 
         ON ACTION delete
 
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN 
               CALL axmi140_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
            END IF
 
 
         ON ACTION insert
 
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN 
               CALL axmi140_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION modify
 
            LET g_aw = ''
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN 
               CALL axmi140_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION modify_detail
 
            LET g_aw = g_curr_diag.getCurrentItem()
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN 
               CALL axmi140_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION output
 
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN 
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION query
 
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN 
               CALL axmi140_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
            END IF
 
 
         ON ACTION reproduce
 
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN 
               CALL axmi140_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
         
         
         
         ON ACTION related_document
            CALL cl_doc()
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
   
   CALL cl_set_act_visible("accept,cancel", TRUE)
   
END FUNCTION
]]>
</section>
  <section id="axmi140.ui_headershow" ver="1" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION axmi140_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_xmaa_m.xmaa001 = g_browser[g_current_idx].b_xmaa001   
 
    SELECT UNIQUE xmaa001
 INTO g_xmaa_m.xmaa001
 FROM xmaa_t
 WHERE xmaaent = g_enterprise AND xmaa001 = g_xmaa_m.xmaa001
   CALL axmi140_show()
   
END FUNCTION
]]>
</section>
  <section id="axmi140.unlock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION axmi140_unlock_b(ps_table,ps_page)
   {<Local define>}
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
 
 
END FUNCTION
]]>
</section>
  <section id="axmi140.update_b" ver="1" status="" src="s">
<![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION axmi140_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   {<Local define>}
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
 
   
 
   
END FUNCTION
]]>
</section>
</add_points>