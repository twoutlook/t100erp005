<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="axmr140_x01" std_prog="axmr140_x01" erpver="1.0" module="AXM" ver="1" env="s" zone="t10prd" booking="N" type="X" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="X" status=""/>
    <free_style value="N" status=""/>
    <start_arg value="" status=""/>
  </other>
  <point name="ins_data.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE l_success  LIKE type_t.num5
DEFINE l_desc     LIKE type_t.chr80
]]>
  </point>
  <point name="ins_data.foreach" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[       #Over Due
       CALL s_credit_over_due_chk(sr.xmacsite,sr.l_pmab001)
            RETURNING l_success
       IF l_success THEN
          LET sr.l_over_due = 'N'
       ELSE
          LET sr.l_over_due = 'Y'
       END IF
       #逾期未兌現票據
       CALL s_credit_unrealized_bills_chk(sr.xmacsite,sr.l_pmab001)
            RETURNING l_success
       IF l_success THEN
          LET sr.l_unrealized = 'N'
       ELSE
          LET sr.l_unrealized = 'Y'
       END IF
       #僅顯示超限資料
       IF tm.chk = 'Y' THEN
          IF sr.xmac004 > 0 AND sr.l_over_due = 'N' AND sr.l_unrealized = 'N' THEN
             CONTINUE FOREACH
          END IF
       END IF
       #客戶編號
       CALL s_desc_get_trading_partner_abbr_desc(sr.l_pmab001)
            RETURNING l_desc
       IF NOT cl_null(l_desc) THEN
          LET sr.l_pmab001 = sr.l_pmab001,".",l_desc
       END IF
       #額度對象
       CALL s_desc_get_trading_partner_abbr_desc(sr.l_xmac001)
            RETURNING l_desc
       IF NOT cl_null(l_desc) THEN
          LET sr.l_xmac001 = sr.l_xmac001,".",l_desc
       END IF
       #計算項目
       CALL s_desc_gzcbl004_desc('2044',sr.l_xmaa002)
            RETURNING l_desc
       IF NOT cl_null(l_desc) THEN
          LET sr.l_xmaa002 = sr.l_xmaa002,".",l_desc
       END IF
       #交易客戶
       CALL s_desc_get_trading_partner_abbr_desc(sr.l_xmab006)
            RETURNING l_desc
       IF NOT cl_null(l_desc) THEN
          LET sr.l_xmab006 = sr.l_xmab006,".",l_desc
       END IF
       #額度計算加減項
       CALL s_desc_gzcbl004_desc('2045',sr.l_xmaa004)
            RETURNING l_desc
       IF NOT cl_null(l_desc) THEN
          LET sr.l_xmaa004 = sr.l_xmaa004,".",l_desc
       END IF
]]>
  </point>
  <point name="sel_prep.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="sel_prep.g_from" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="Y">
    <![CDATA[    LET g_from = " FROM pmaa_t,pmab_t,xmaa_t,xmac_t,xmab_t"
]]>
  </point>
  <point name="sel_prep.g_order" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="sel_prep.g_select" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="Y">
    <![CDATA[   LET g_select = " SELECT pmab001,xmac001,xmac002,xmac003,(xmac003-xmac004),xmac004,'','', ",
                  "        xmaa002,xmab003,xmab005,xmab006,xmab007,xmab013,(xmab009-xmab010*xmab013), ",
                  "        xmaa004,xmaa005,((xmab009-xmab010*xmab013)*xmaa005),pmabsite "
]]>
  </point>
  <point name="sel_prep.g_where" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="Y">
    <![CDATA[    LET g_where = " WHERE pmabent = pmaaent AND pmab001 = pmaa001 ",
                  "   AND xmaaent = pmabent AND xmaa001 = pmab004 ",
                  "   AND xmabent = xmaaent AND xmab001 = xmaa002 ",
                  "   AND xmacent = xmabent AND xmac001 = pmab003 AND xmacsite = pmabsite ",
                  "   AND ",tm.wc CLIPPED
]]>
  </point>
  <point name="sel_prep.sql.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="sel_prep.sql.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="Y">
    <![CDATA[   LET g_sql = " SELECT pmab001,xmac001,xmac002,xmac003,(xmac003-xmac004),xmac004,'','', ",
               "        xmaa002,xmab003,xmab005,xmab006,xmab007,xmab013,(xmab009-xmab010*xmab013), ",
               "        xmaa004,xmaa005,((xmab009-xmab010*xmab013)*xmaa005),pmabsite ",
               "   FROM pmaa_t,pmab_t,xmaa_t,xmac_t,xmab_t ",
               "  WHERE pmabent = pmaaent AND pmab001 = pmaa001 AND pmabsite = 'ALL' ",
               "    AND (SELECT COUNT(*) FROM pmab_t WHERE pmabent = ",g_enterprise," AND pmabsite = '",g_site,"') = 0 ",
               "    AND xmaaent = pmabent AND xmaa001 = pmab004 ",
               "    AND xmabent = xmaaent AND xmab001 = xmaa002 ",
               "    AND xmacent = xmabent AND xmac001 = pmab003 AND xmacsite = pmabsite ",
               "    AND ",tm.wc CLIPPED,
               "  UNION ",
               " SELECT pmab001,xmac001,xmac002,xmac003,(xmac003-xmac004),xmac004,'','', ",
               "        xmaa002,xmab003,xmab005,xmab006,xmab007,xmab013,(xmab009-xmab010*xmab013), ",
               "        xmaa004,xmaa005,((xmab009-xmab010*xmab013)*xmaa005),pmabsite ",
               "   FROM pmaa_t,pmab_t,xmaa_t,xmac_t,xmab_t ",
               "  WHERE pmabent = pmaaent AND pmab001 = pmaa001 AND pmabsite = '",g_site,"' ",
               "    AND xmaaent = pmabent AND xmaa001 = pmab004 ",
               "    AND xmabent = xmaaent AND xmab001 = xmaa002 ",
               "    AND xmacent = xmabent AND xmac001 = pmab003 AND xmacsite = pmabsite ",
               "    AND ",tm.wc CLIPPED,
               "  ORDER BY pmab001,xmac001,xmac002 "
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段
]]>
  </point>
  <section id="axmr140_x01.create_tmptable" ver="7" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION axmr140_x01_create_tmptable()
 
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.before
   {<point name="create_tmp.before"/>}
   #end add-point:create_tmp.before
 
   #主報表TEMP TABLE的欄位SQL   
   LET g_sql = "l_pmab001.type_t.chr100,l_xmac001.type_t.chr100,xmac002.xmac_t.xmac002,xmac003.xmac_t.xmac003,l_money.type_t.num20_6,xmac004.xmac_t.xmac004,l_over_due.type_t.chr1,l_unrealized.type_t.chr1,l_xmaa002.type_t.chr100,xmab003.xmab_t.xmab003,xmab005.xmab_t.xmab005,l_xmab006.type_t.chr100,xmab007.xmab_t.xmab007,xmab013.xmab_t.xmab013,l_money1.type_t.num20_6,l_xmaa004.type_t.chr10,l_xmaa005.type_t.num20_6,l_money2.type_t.num20_6" 
   
   #建立TEMP TABLE,主報表序號1 
   IF NOT cl_xg_create_tmptable(g_sql,1) THEN
      LET g_rep_success = 'N'            
   END IF
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.after
   {<point name="create_tmp.after"/>}
   #end add-point:create_tmp.after
END FUNCTION
]]>
  </section>
  <section id="axmr140_x01.description" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000010
#+ 
#+ Filename...: axmr140_x01
#+ Description: 信用額度明細表
#+ Creator....: 04441(2015-03-19 14:22:32)
#+ Modifier...: 04441(2015-03-20 11:35:47) -SD/PR-
]]>
  </section>
  <section id="axmr140_x01.global" ver="1" status="" src="s" readonly="">
    <![CDATA[#報表 x01 樣板自動產生(Version:1)
 
IMPORT os
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
DEFINE tm RECORD
       wc STRING,                  #where condition 
       chk LIKE type_t.chr1          #僅顯示超限資
       END RECORD
 
DEFINE g_str           STRING,                      #列印條件回傳值              
       g_sql           STRING  
 
 
#add-point:自定義環境變數(Global Variable)
{<point name="global.variable"/>}
#end add-point
]]>
  </section>
  <section id="axmr140_x01.ins_data" ver="8" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION axmr140_x01_ins_data()
DEFINE sr RECORD 
   l_pmab001 LIKE type_t.chr100, 
   l_xmac001 LIKE type_t.chr100, 
   xmac002 LIKE xmac_t.xmac002, 
   xmac003 LIKE xmac_t.xmac003, 
   l_money LIKE type_t.num20_6, 
   xmac004 LIKE xmac_t.xmac004, 
   l_over_due LIKE type_t.chr1, 
   l_unrealized LIKE type_t.chr1, 
   l_xmaa002 LIKE type_t.chr100, 
   xmab003 LIKE xmab_t.xmab003, 
   xmab005 LIKE xmab_t.xmab005, 
   l_xmab006 LIKE type_t.chr100, 
   xmab007 LIKE xmab_t.xmab007, 
   xmab013 LIKE xmab_t.xmab013, 
   l_money1 LIKE type_t.num20_6, 
   l_xmaa004 LIKE type_t.chr10, 
   l_xmaa005 LIKE type_t.num20_6, 
   l_money2 LIKE type_t.num20_6, 
   xmacsite LIKE xmac_t.xmacsite
 END RECORD
#add-point:ins_data段define
{<point name="ins_data.define"/>}
#end add-point
 
    #add-point:ins_data段before
    {<point name="ins_data.before"/>}
    #end add-point
 
    LET g_rep_success = 'Y'
 
    FOREACH axmr140_x01_curs INTO sr.*                               
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach
       {<point name="ins_data.foreach"/>}
       #end add-point
 
       #add-point:ins_data段before.save
       {<point name="ins_data.before.save"/>}
       #end add-point
 
       #EXECUTE
       EXECUTE insert_prep USING sr.l_pmab001,sr.l_xmac001,sr.xmac002,sr.xmac003,sr.l_money,sr.xmac004,sr.l_over_due,sr.l_unrealized,sr.l_xmaa002,sr.xmab003,sr.xmab005,sr.l_xmab006,sr.xmab007,sr.xmab013,sr.l_money1,sr.l_xmaa004,sr.l_xmaa005,sr.l_money2
 
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = "axmr140_x01_execute"
          LET g_errparam.code   = SQLCA.sqlcode
          LET g_errparam.popup  = FALSE
          CALL cl_err()       
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段after_save
       {<point name="ins_data.after.save"/>}
       #end add-point
       
    END FOREACH
    
    #add-point:ins_data段after
    {<point name="ins_data.after"/>}
    #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="axmr140_x01.ins_prep" ver="6" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION axmr140_x01_ins_prep()
DEFINE i              INTEGER
DEFINE l_prep_str     STRING
#add-point:ins_prep.define
{<point name="ins_prep.define"/>}
#end add-point:ins_prep.define
 
   FOR i = 1 TO g_rep_tmpname.getLength()
      CALL cl_xg_del_data(g_rep_tmpname[i])
      #LET g_sql = g_rep_ins_prep[i]              #透過此lib取得prepare字串 lib精簡
      CASE i
         WHEN 1
         #INSERT INTO PREP
         LET g_sql = " INSERT INTO ",g_rep_db CLIPPED,g_rep_tmpname[1] CLIPPED," VALUES(?,?,?,?,?,?, 
             ?,?,?,?,?,?,?,?,?,?,?,?)"
         PREPARE insert_prep FROM g_sql
         IF STATUS THEN
            LET l_prep_str ="insert_prep",i
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = l_prep_str
            LET g_errparam.code   = status
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            CALL cl_xg_drop_tmptable()
            LET g_rep_success = 'N'           
         END IF 
         #add-point:insert_prep段
         {<point name="insert_prep"/>}
         #end add-point                  
 
 
      END CASE
   END FOR
END FUNCTION
]]>
  </section>
  <section id="axmr140_x01.main" ver="1" status="" src="s" readonly="">
    <![CDATA[PUBLIC FUNCTION axmr140_x01(p_arg1,p_arg2)
DEFINE  p_arg1 STRING                  #tm.wc  where condition 
DEFINE  p_arg2 LIKE type_t.chr1         #tm.chk  僅顯示超限資
#add-point:init段define
{<point name="component.define"/>}
#end add-point
 
   LET tm.wc = p_arg1
   LET tm.chk = p_arg2
 
   #add-point:報表元件參數準備
   {<point name="component.arg.prep" />}
   #end add-point
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'
   
   #報表元件代號      
   LET g_rep_code = "axmr140_x01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #create 暫存檔
   CALL axmr140_x01_create_tmptable()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #報表select欄位準備
   CALL axmr140_x01_sel_prep()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #報表insert的prepare
   CALL axmr140_x01_ins_prep()  
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #將資料存入tmptable
   CALL axmr140_x01_ins_data() 
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #將tmptable資料印出
   CALL axmr140_x01_rep_data()
 
END FUNCTION
]]>
  </section>
  <section id="axmr140_x01.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="axmr140_x01.rep_data" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION axmr140_x01_rep_data()
#add-point:rep_data.define
{<point name="rep_data.define"/>}
#end add-point:rep_data.define
 
    #add-point:rep_data.before
    {<point name="rep_data.before"/>}
    #end add-point:rep_data.before
    
    CALL cl_xg_view()
    #add-point:rep_data.after
    {<point name="rep_data.after"/>}
    #end add-point:rep_data.after
END FUNCTION
]]>
  </section>
  <section id="axmr140_x01.sel_prep" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION axmr140_x01_sel_prep()
DEFINE g_select      STRING
DEFINE g_from        STRING
DEFINE g_where       STRING
#add-point:sel_prep段define
{<point name="sel_prep.define"/>}
#end add-point
 
   #add-point:sel_prep before
   {<point name="sel_prep.before" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep g_select
   {<point name="sel_prep.g_select" mark="Y"/>}
   #end add-point
   LET g_select = " SELECT '','',xmac002,xmac003,NULL,xmac004,'','','',xmab003,xmab005,'',xmab007,xmab013, 
       NULL,'',NULL,NULL,xmacsite"
 
   #add-point:sel_prep g_from
   {<point name="sel_prep.g_from" mark="Y"/>}
   #end add-point
    LET g_from = " FROM xmac_t,xmab_t"
 
   #add-point:sel_prep g_where
   {<point name="sel_prep.g_where" mark="Y"/>}
   #end add-point
    LET g_where = " WHERE " ,tm.wc CLIPPED
 
   #add-point:sel_prep g_order
   {<point name="sel_prep.g_order" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep.sql.before
   {<point name="sel_prep.sql.before" mark="Y"/>}
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("xmac_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段
 
   #add-point:sel_prep.sql.after
   {<point name="sel_prep.sql.after" mark="Y"/>}
   #end add-point
   PREPARE axmr140_x01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET g_rep_success = 'N' 
   END IF
   DECLARE axmr140_x01_curs CURSOR FOR axmr140_x01_prepare
 
END FUNCTION
]]>
  </section>
</add_points>
