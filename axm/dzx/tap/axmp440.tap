<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="axmp440" std_prog="axmp440" erpver="1.0" module="AXM" ver="1" env="s" zone="t10prd" booking="Y" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="P" status=""/>
    <free_style value="N" status=""/>
    <start_arg value="" status=""/>
  </other>
  <point name="function.axmp440_set_required" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 設定INPUT欄位必輸
# Memo...........:
# Usage..........: CALL axmp440_set_required()
# Input parameter: no
# Return code....: no
# Date & Author..: 150303 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION axmp440_set_required()

   IF g_master.chk = 'Y' THEN
      CALL cl_set_comp_required("docno,reason",TRUE)
   END IF

   IF g_master.type = '1' THEN
      CALL cl_set_comp_required("item",TRUE)
   END IF

END FUNCTION]]>
  </point>
  <point name="function.axmp440_set_no_required" order="2" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 設定INPUT欄位非必輸
# Memo...........:
# Usage..........: CALL axmp440_set_no_required()
# Input parameter: no
# Return code....: no
# Date & Author..: 150303 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION axmp440_set_no_required()

   CALL cl_set_comp_required("docno,reason,item",FALSE)

END FUNCTION]]>
  </point>
  <point name="function.axmp440_reason_ref" order="3" ver="1" cite_std="N" new="Y" status="d" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 取得銷退單理由碼說明
# Memo...........:
# Usage..........: CALL axmp440_reason_ref()
# Input parameter: no
# Return code....: no
# Date & Author..: 150303 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION axmp440_reason_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_gzcb004
   LET g_ref_fields[2] = g_master.reason
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001=? AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_master.reason_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_master.reason_desc
END FUNCTION]]>
  </point>
  <point name="function.axmp440_get_price" order="3" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 有累積量定價
# Memo...........:
# Usage..........: CALL axmp440_get_price(p_xmdzdocno,p_xmdzseq,p_xmdzseq1,p_xmdx005,p_xmdx007,p_xmdx008,p_curr,p_export,p_tax)
#                  RETURNING r_price
# Input parameter: p_xmdzdocno   合約單號
#                : p_xmdzseq     項次
#                : p_xmdzseq1    項序
#                : p_xmdx005     幣別
#                : p_xmdx007     稅率
#                : p_xmdx008     單價含稅否
#                : p_curr        幣別
#                : p_export      內外銷
#                : p_tax         稅別
# Return code....: r_price       單價
# Date & Author..: 150304 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION axmp440_get_price(p_xmdzdocno,p_xmdzseq,p_xmdzseq1,p_xmdx005,p_xmdx007,p_xmdx008,p_curr,p_export,p_tax)
DEFINE p_xmdzdocno  LIKE xmdz_t.xmdzdocno
DEFINE p_xmdzseq    LIKE xmdz_t.xmdzseq
DEFINE p_xmdzseq1   LIKE xmdz_t.xmdzseq1
DEFINE p_xmdx005    LIKE xmdx_t.xmdx005
DEFINE p_xmdx007    LIKE xmdx_t.xmdx007
DEFINE p_xmdx008    LIKE xmdx_t.xmdx008
DEFINE p_curr       LIKE xmdx_t.xmdx005
DEFINE p_export     LIKE xmda_t.xmda048
DEFINE p_tax        LIKE xmdx_t.xmdx006
DEFINE r_price      LIKE xmdy_t.xmdy010
DEFINE l_xmdz002    LIKE xmdz_t.xmdz002
DEFINE l_xmdz003    LIKE xmdz_t.xmdz003
DEFINE l_oodb005    LIKE oodb_t.oodb005
DEFINE l_oodb006    LIKE oodb_t.oodb006
DEFINE l_scc40      LIKE type_t.chr2
DEFINE l_rate       LIKE ooan_t.ooan005

   LET r_price = ''
   
   LET l_xmdz002 = ''
   LET l_xmdz003 = ''
   SELECT xmdz002,xmdz003
    INTO l_xmdz002,l_xmdz003
     FROM xmdz_t
    WHERE xmdzent = g_enterprise
      AND xmdzsite = g_site
      AND xmdzdocno = p_xmdzdocno
      AND xmdzseq = p_xmdzseq
      AND xmdzseq1 = p_xmdzseq1
   IF NOT cl_null(l_xmdz002) THEN
      IF cl_null(l_xmdz003) THEN LET l_xmdz003 = 0 END IF
      LET r_price = l_xmdz002 * (1 - l_xmdz003/100)
   END IF
   
   IF cl_null(r_price) THEN
      RETURN r_price
   END IF
   
   LET l_oodb005 = ''
   LET l_oodb006 = ''
   SELECT oodb005,oodb006 INTO l_oodb005,l_oodb006
     FROM oodb_t,ooef_t
    WHERE oodb002 = p_tax
      AND oodb001 = ooef019
      AND oodbent = g_enterprise
      AND ooef001 = g_site
      AND ooefent = g_enterprise
   #若取到的合約稅別的單價含稅否與稅率與傳入的稅別不一樣時，需對單價進行轉換
   IF p_xmdx007 <> l_oodb006 OR p_xmdx008 <> l_oodb005 THEN
      IF p_xmdx008 = 'Y' THEN  #單價含稅否
         LET r_price = r_price / (1 + p_xmdx007/100)
      END IF
      IF l_oodb005 = 'Y' THEN
         LET r_price = r_price * (1 + l_oodb006/100)
      END IF
   END IF
   
   #若取到的合約單幣別與傳入幣別不一樣時，需對取到的單價進行匯率轉換
   IF p_xmdx005 <> p_curr THEN
      CASE p_export
         WHEN '1'  #內銷外幣採用匯率類型
            CALL cl_get_para(g_enterprise,g_site,'S-BAS-0010') RETURNING l_scc40
         WHEN '2'  #外銷外幣採用匯率類型
            CALL cl_get_para(g_enterprise,g_site,'S-BAS-0011') RETURNING l_scc40
         OTHERWISE EXIT CASE
      END CASE
      LET l_rate = ''
      CALL s_aooi160_get_exrate('1',g_site,g_today,p_xmdx005,p_curr,0,l_scc40) RETURNING l_rate
      IF NOT cl_null(l_rate) THEN
         LET r_price = r_price * l_rate
      END IF
   END IF
   CALL s_curr_round(g_site,p_curr,r_price,'1') RETURNING r_price

   RETURN r_price

END FUNCTION]]>
  </point>
  <point name="function.axmp440_count" order="4" ver="1" cite_std="N" new="Y" status="d" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="function.axmp440_get_money" order="5" ver="1" cite_std="N" new="Y" status="d" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 金額計算
# Memo...........:
# Usage..........: CALL axmp440_get_money(p_xmdydocno,p_xmdyseq,p_xmdzseq1,p_xmdx005,p_xmdx007,p_xmdx008,p_xmdk016,p_xmdk017,p_xmdk042,p_xmdlsite,p_xmdl025,p_amount)
#                  RETURNING r_xrcd103,r_xrcd104,r_xrcd105,r_price
# Input parameter: 
# Return code....: 
# Date & Author..: 150305 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION axmp440_get_money(p_xmdydocno,p_xmdyseq,p_xmdzseq1,p_xmdx005,p_xmdx007,p_xmdx008,p_xmdk016,p_xmdk017,p_xmdk042,p_xmdlsite,p_xmdl025,p_amount)
DEFINE p_xmdydocno  LIKE xmdy_t.xmdydocno
DEFINE p_xmdyseq    LIKE xmdy_t.xmdyseq  
DEFINE p_xmdzseq1   LIKE xmdz_t.xmdzseq1 
DEFINE p_xmdx005    LIKE xmdx_t.xmdx005  
DEFINE p_xmdx007    LIKE xmdx_t.xmdx007  
DEFINE p_xmdx008    LIKE xmdx_t.xmdx008  
DEFINE p_xmdk016    LIKE xmdk_t.xmdk016  
DEFINE p_xmdk017    LIKE xmdk_t.xmdk017  
DEFINE p_xmdk042    LIKE xmdk_t.xmdk042  
DEFINE p_xmdlsite   LIKE xmdl_t.xmdlsite 
DEFINE p_xmdl025    LIKE xmdl_t.xmdl025  
DEFINE p_amount     LIKE xmdl_t.xmdl022   
DEFINE r_xrcd103    LIKE xrcd_t.xrcd103
DEFINE r_xrcd104    LIKE xrcd_t.xrcd104
DEFINE r_xrcd105    LIKE xrcd_t.xrcd105
DEFINE r_price      LIKE xmdy_t.xmdy010
DEFINE l_xrcd113    LIKE xrcd_t.xrcd113
DEFINE l_xrcd114    LIKE xrcd_t.xrcd114
DEFINE l_xrcd115    LIKE xrcd_t.xrcd115
DEFINE l_amount     LIKE xmdl_t.xmdl022

   CALL axmp440_get_price(p_xmdydocno,p_xmdyseq,p_xmdzseq1,p_xmdx005,p_xmdx007,p_xmdx008,p_xmdk016,p_xmdk042,p_xmdl025)
        RETURNING r_price
   LET l_amount = p_amount * r_price
   CALL s_tax_count(p_xmdlsite,p_xmdl025,l_amount,p_amount,p_xmdk016,p_xmdk017)
        RETURNING r_xrcd103,r_xrcd104,r_xrcd105,l_xrcd113,l_xrcd114,l_xrcd115
        
   RETURN r_xrcd103,r_xrcd104,r_xrcd105,r_price
END FUNCTION]]>
  </point>
  <point name="construct.c.imaa009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_rtax001()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO imaa009  #顯示到畫面上
            NEXT FIELD imaa009                     #返回原欄位]]>
  </point>
  <point name="construct.c.imaf111" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
#            LET l_xmdy002 = GET_FLDBUF(xmdy002)
#            LET g_qryparam.where = " imaf001 = '",l_xmdy002,"' "
            CALL q_imaf111()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO imaf111  #顯示到畫面上
            NEXT FIELD imaf111                     #返回原欄位]]>
  </point>
  <point name="construct.c.xmdx002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdx002  #顯示到畫面上
            NEXT FIELD xmdx002                     #返回原欄位]]>
  </point>
  <point name="construct.c.xmdx003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdx003  #顯示到畫面上
            NEXT FIELD xmdx003                     #返回原欄位]]>
  </point>
  <point name="construct.c.xmdx004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            CALL q_pmaa001_6()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdx004  #顯示到畫面上
            NEXT FIELD xmdx004                     #返回原欄位]]>
  </point>
  <point name="construct.c.xmdxdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " xmdxstus = 'Y' "
            CALL q_xmdxdocno()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdxdocno  #顯示到畫面上
            NEXT FIELD xmdxdocno                     #返回原欄位]]>
  </point>
  <point name="construct.c.xmdy002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_imaf001()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdy002  #顯示到畫面上
            NEXT FIELD xmdy002                     #返回原欄位]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE g_ref_fields      DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars        DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields      DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列

DEFINE g_master_o        type_master
DEFINE g_ooef004         LIKE ooef_t.ooef004
DEFINE g_gzcb004         LIKE gzcb_t.gzcb004
]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_ooef004 = ''
   SELECT ooef004 INTO g_ooef004
     FROM ooef_t
    WHERE ooefent = g_enterprise 
      AND ooef001 = g_site 
      AND ooefstus = 'Y'
   
   LET g_gzcb004 = ''
   SELECT gzcb004 INTO g_gzcb004
     FROM gzcb_t
    WHERE gzcb001 = '24'
      AND gzcb002 = 'axmt600'
   
   LET g_master.chk = 'N'
   
   CALL s_axmp441_create_tmp_table()]]>
  </point>
  <point name="input.a.chk" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL axmp440_set_no_required()
            CALL axmp440_set_required()]]>
  </point>
  <point name="input.a.docno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_master.docno_desc = ''
            IF NOT cl_null(g_master.docno) THEN
               IF g_master.docno <> g_master_o.docno OR cl_null(g_master_o.docno) THEN
                  #檢查單別
                  IF NOT s_aooi200_chk_slip(g_site,'',g_master.docno,'axmt600') THEN
                     LET g_master.docno = g_master_o.docno
                     CALL s_aooi200_get_slip_desc(g_master.docno) RETURNING g_master.docno_desc
                     DISPLAY BY NAME g_master.docno,g_master.docno_desc
                     NEXT FIELD CURRENT
                  END IF            
                  #檢核輸入的單據別是否可以被key人員對應的控制組使用,'2' 為銷售控制組類型
                  CALL s_control_chk_doc('1',g_master.docno,'2',g_user,g_dept,'','') RETURNING l_success,l_flag
                  IF NOT l_success OR NOT l_flag THEN
                     LET g_master.docno = g_master_o.docno
                     CALL s_aooi200_get_slip_desc(g_master.docno) RETURNING g_master.docno_desc
                     DISPLAY BY NAME g_master.docno,g_master.docno_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_aooi200_get_slip_desc(g_master.docno) RETURNING g_master.docno_desc
            DISPLAY BY NAME g_master.docno_desc
            LET g_master_o.docno = g_master.docno]]>
  </point>
  <point name="input.a.item" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_master.item) THEN 
               IF g_master.item <> g_master_o.item OR cl_null(g_master_o.item) THEN 
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_master.item
                  IF NOT cl_chk_exist("v_imaf001_16") THEN
                     LET g_master.item = g_master_o.item 
                     DISPLAY BY NAME g_master.item
                     NEXT FIELD CURRENT
                  END IF
               END IF 
            END IF 
            LET g_master_o.item = g_master.item]]>
  </point>
  <point name="input.a.reason" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_master.reason_desc = ''
            IF NOT cl_null(g_master.reason) THEN
               IF g_master.reason <> g_master_o.reason OR cl_null(g_master_o.reason) THEN
                  IF NOT s_azzi650_chk_exist(g_gzcb004,g_master.reason) THEN
                     LET g_master.reason = g_master_o.reason
                     CALL s_axmp441_reason_ref(g_master.reason)
                          RETURNING g_master.reason_desc
                     DISPLAY BY NAME g_master.reason_desc
                     NEXT FIELD CURRENT
                  END IF
                  #檢核輸入的理由碼是否在單據別限制範圍內
                  CALL s_control_chk_doc('8',g_master.docno,g_master.reason,'','','','') RETURNING l_success,l_flag
                  IF NOT l_success OR NOT l_flag THEN
                     LET g_master.reason = g_master_o.reason
                     CALL s_axmp441_reason_ref(g_master.reason)
                          RETURNING g_master.reason_desc
                     DISPLAY BY NAME g_master.reason_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_axmp441_reason_ref(g_master.reason)
                 RETURNING g_master.reason_desc
            DISPLAY BY NAME g_master.reason_desc
            LET g_master_o.reason = g_master.reason]]>
  </point>
  <point name="input.a.type" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL axmp440_set_no_required()
            CALL axmp440_set_required()]]>
  </point>
  <point name="input.c.docno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_master.docno  #給予default值
            #給予arg
            LET g_qryparam.arg1 = g_ooef004
            LET g_qryparam.arg2 = 'axmt600'
            CALL q_ooba002_1()                        #呼叫開窗
            LET g_master.docno = g_qryparam.return1              
            DISPLAY g_master.docno TO docno           #
            CALL s_aooi200_get_slip_desc(g_master.docno) RETURNING g_master.docno_desc
            DISPLAY BY NAME g_master.docno_desc
            NEXT FIELD docno                          #返回原欄位]]>
  </point>
  <point name="input.c.item" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_master.item  #給予default值
            CALL q_imaf001_17()                      #呼叫開窗
            LET g_master.item = g_qryparam.return1
            DISPLAY g_master.item TO item            #
            NEXT FIELD item                          #返回原欄位]]>
  </point>
  <point name="input.c.reason" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_master.reason  #給予default值
            CALL s_control_get_doc_sql('oocq002',g_master.docno,'8') RETURNING l_success,l_where
            IF l_success THEN
               LET g_qryparam.where = l_where
            END IF
            #給予arg
            LET g_qryparam.arg1 = g_gzcb004
            CALL q_oocq002()                           #呼叫開窗
            LET g_master.reason = g_qryparam.return1
            DISPLAY g_master.reason TO reason          #
            CALL s_axmp441_reason_ref(g_master.reason)
                 RETURNING g_master.reason_desc
            DISPLAY BY NAME g_master.reason_desc
            NEXT FIELD reason                          #返回原欄位]]>
  </point>
  <point name="input.g.chk" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.m.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.m.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               LET g_master_o.* = g_master.*
               CALL axmp440_set_no_required()
               CALL axmp440_set_required()
               ]]>
  </point>
  <point name="main.exit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_axmp441_drop_tmp_table()]]>
  </point>
  <point name="process.count_progress" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      LET ls_sql = " SELECT COUNT(DISTINCT xmdyseq) ",
                   "   FROM xmdx_t,xmdy_t ",
                   "        LEFT OUTER JOIN imaa_t ON imaaent = xmdyent AND imaa001 = xmdy002 ",
                   "        LEFT OUTER JOIN imaf_t ON imafent = xmdyent AND imafsite = xmdysite AND imaf001 = xmdy002 ",
                   "  WHERE xmdyent = xmdxent ",
                   "    AND xmdydocno = xmdxdocno ",
                   "    AND xmdxent = '",g_enterprise,"' ",
                   "    AND xmdxsite = '",g_site,"' ",
                   "    AND xmdxstus = 'Y' ",
                   "    AND ",g_master.wc
      PREPARE axmp440_process_count FROM ls_sql
      LET li_count = 0
      EXECUTE axmp440_process_count INTO li_count
      CALL cl_progress_bar_no_window(li_count*2)
]]>
  </point>
  <point name="process.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE ls_value       STRING
DEFINE l_sql          STRING
DEFINE l_cnt          LIKE type_t.num5
DEFINE l_success      LIKE type_t.num5
DEFINE l_tot_success  LIKE type_t.num5
DEFINE l_price        LIKE xmdy_t.xmdy010
DEFINE l_price_1      LIKE xmdy_t.xmdy010
DEFINE l_price_2      LIKE xmdy_t.xmdy010
DEFINE l_amount       LIKE xmdl_t.xmdl022
DEFINE l_amount_1     LIKE xmdl_t.xmdl022
DEFINE l_amount_2     LIKE xmdl_t.xmdl022
DEFINE l_xmdz001      LIKE xmdz_t.xmdz001
DEFINE l_xmdz001_1    LIKE xmdz_t.xmdz001
DEFINE l_xmdz001_2    LIKE xmdz_t.xmdz001
DEFINE l_xmdz001_max  LIKE xmdz_t.xmdz001
DEFINE l_xmdzseq1     LIKE xmdz_t.xmdzseq1
DEFINE l_xmdzseq1_1   LIKE xmdz_t.xmdzseq1
DEFINE l_xmdzseq1_2   LIKE xmdz_t.xmdzseq1
DEFINE l_xmdzseq1_max LIKE xmdz_t.xmdzseq1
DEFINE l_xrcd103_1    LIKE xrcd_t.xrcd103
DEFINE l_xrcd104_1    LIKE xrcd_t.xrcd104
DEFINE l_xrcd105_1    LIKE xrcd_t.xrcd105
DEFINE l_xrcd103_2    LIKE xrcd_t.xrcd103
DEFINE l_xrcd104_2    LIKE xrcd_t.xrcd104
DEFINE l_xrcd105_2    LIKE xrcd_t.xrcd105
DEFINE l_xrcd103      LIKE xrcd_t.xrcd103
DEFINE l_xrcd104      LIKE xrcd_t.xrcd104
DEFINE l_xrcd105      LIKE xrcd_t.xrcd105
DEFINE l_xrcd113      LIKE xrcd_t.xrcd113
DEFINE l_xrcd114      LIKE xrcd_t.xrcd114
DEFINE l_xrcd115      LIKE xrcd_t.xrcd115
DEFINE l_xmdy  RECORD                  #銷售合約單明細檔
    xmdx005    LIKE xmdx_t.xmdx005,    #幣別
    xmdx007    LIKE xmdx_t.xmdx007,    #稅率
    xmdx008    LIKE xmdx_t.xmdx008,    #單價含稅否
    xmdydocno  LIKE xmdy_t.xmdydocno,  #合約單號
    xmdyseq    LIKE xmdy_t.xmdyseq,    #項次
    xmdy010    LIKE xmdy_t.xmdy010,    #單價
    xmdy024    LIKE xmdy_t.xmdy024     #累計量定價否
           END RECORD
DEFINE l_xmdl  RECORD                  #出貨/簽收/銷退單單身明細檔
    xmdk000    LIKE xmdk_t.xmdk000,    #單據性質
    xmdk016    LIKE xmdk_t.xmdk016,    #幣別
    xmdk017    LIKE xmdk_t.xmdk017,    #匯率
    xmdk042    LIKE xmdk_t.xmdk042,    #內外銷
    xmdlsite   LIKE xmdl_t.xmdlsite,   #營運據點
    xmdldocno  LIKE xmdl_t.xmdldocno,  #單據編號
    xmdlseq    LIKE xmdl_t.xmdlseq,    #項次
    xmdl003    LIKE xmdl_t.xmdl003,    #訂單單號
    xmdl004    LIKE xmdl_t.xmdl004,    #訂單項次
    xmdl008    LIKE xmdl_t.xmdl008,    #料件編號
    xmdl009    LIKE xmdl_t.xmdl009,    #產品特徵
    xmdl021    LIKE xmdl_t.xmdl021,    #計價單位
    xmdl022    LIKE xmdl_t.xmdl022,    #計價數量
    xmdl024    LIKE xmdl_t.xmdl024,    #單價
    xmdl025    LIKE xmdl_t.xmdl025,    #稅別
    xmdl027    LIKE xmdl_t.xmdl027,    #未稅金額
    xmdl028    LIKE xmdl_t.xmdl028,    #含稅金額
    xmdl029    LIKE xmdl_t.xmdl029     #金額
           END RECORD
DEFINE l_xmde  RECORD                  #銷售合約/核價結算來源單據明細檔
    xmdeent    LIKE xmde_t.xmdeent,    #企業編號
    xmdesite   LIKE xmde_t.xmdesite,   #營運據點
    xmde000    LIKE xmde_t.xmde000,    #資料類型
    xmde001    LIKE xmde_t.xmde001,    #合約/核價單號	
    xmde002    LIKE xmde_t.xmde002,    #項次
    xmde003    LIKE xmde_t.xmde003,    #關聯單號
    xmde004    LIKE xmde_t.xmde004,    #關聯項次
    xmde005    LIKE xmde_t.xmde005,    #結算日期
    xmde006    LIKE xmde_t.xmde006,    #料件編號
    xmde007    LIKE xmde_t.xmde007,    #產品特徵
    xmde008    LIKE xmde_t.xmde008,    #交易數量
    xmde009    LIKE xmde_t.xmde009,    #交易單位
    xmde010    LIKE xmde_t.xmde010,    #原始單價
    xmde011    LIKE xmde_t.xmde011,    #原始未稅金額
    xmde012    LIKE xmde_t.xmde012,    #原始含稅金額
    xmde013    LIKE xmde_t.xmde013,    #原始稅額
    xmde014    LIKE xmde_t.xmde014,    #建議調整後未稅金額
    xmde015    LIKE xmde_t.xmde015,    #建議調整後含稅金額
    xmde016    LIKE xmde_t.xmde016,    #建議調整後稅額
    xmde017    LIKE xmde_t.xmde017,    #差異未稅金額
    xmde018    LIKE xmde_t.xmde018,    #差異含稅金額
    xmde019    LIKE xmde_t.xmde019,    #差異稅額
    xmde020    LIKE xmde_t.xmde020,    #差異數量
    xmde021    LIKE xmde_t.xmde021,    #差異數量的單價
    xmde022    LIKE xmde_t.xmde022,    #來源單號
    xmde023    LIKE xmde_t.xmde023,    #來源項次
    xmde024    LIKE xmde_t.xmde024,    #來源據點
    xmde025    LIKE xmde_t.xmde025     #差異處理否
           END RECORD
DEFINE l_xmdw  RECORD                  #銷售合約結算歷程檔
    xmdwent    LIKE xmdw_t.xmdwent,    #企業編號
    xmdwsite   LIKE xmdw_t.xmdwsite,   #營運據點
    xmdw001    LIKE xmdw_t.xmdw001,    #合約單號
    xmdw002    LIKE xmdw_t.xmdw002,    #項次
    xmdw003    LIKE xmdw_t.xmdw003,    #結算日期
    xmdw004    LIKE xmdw_t.xmdw004,    #本期新增數量
    xmdw005    LIKE xmdw_t.xmdw005,    #本期新增未稅金額
    xmdw006    LIKE xmdw_t.xmdw006,    #本期新增含稅金額
    xmdw007    LIKE xmdw_t.xmdw007,    #本期新增稅額
    xmdw008    LIKE xmdw_t.xmdw008,    #本期累積數量
    xmdw009    LIKE xmdw_t.xmdw009,    #本期累積未稅金額
    xmdw010    LIKE xmdw_t.xmdw010,    #本期累積含稅金額
    xmdw011    LIKE xmdw_t.xmdw011,    #本期累積稅額
    xmdw012    LIKE xmdw_t.xmdw012,    #結算人員
    xmdw013    LIKE xmdw_t.xmdw013     #結算部門
           END RECORD
]]>
  </point>
  <point name="process.process" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_transaction_begin()
   CALL cl_err_collect_init()
   LET l_success = TRUE
   LET l_tot_success = TRUE
   
   #依據UI畫面QBE條件查詢出符合條件的已經確認的銷售合約單
   LET l_sql = " SELECT DISTINCT xmdx005,xmdx007,xmdx008,xmdydocno,xmdyseq,xmdy010,xmdy024 ",
               "   FROM xmdx_t,xmdy_t ",
               "        LEFT OUTER JOIN imaa_t ON imaaent = xmdyent AND imaa001 = xmdy002 ",
               "        LEFT OUTER JOIN imaf_t ON imafent = xmdyent AND imafsite = xmdysite AND imaf001 = xmdy002 ",
               "  WHERE xmdyent = xmdxent ",
               "    AND xmdydocno = xmdxdocno ",
               "    AND xmdxent = '",g_enterprise,"' ",
               "    AND xmdxsite = '",g_site,"' ",
               "    AND xmdxstus = 'Y' ",
               "    AND ",g_master.wc
   PREPARE axmp440_process_xmdy_bp FROM l_sql
   DECLARE axmp440_process_xmdy_cs CURSOR FOR axmp440_process_xmdy_bp
   
   #依查詢出的合約單找出對應的一般出貨單、簽收單、銷退單資料
   #已經過帳且未結算過
   #過帳日期由小到大排序逐筆計算
   LET l_sql = " SELECT xmdk000,xmdk016,xmdk017,xmdk042,xmdlsite, ",
               "        xmdldocno,xmdlseq,xmdl003,xmdl004,xmdl008, ",
               "        xmdl009,xmdl021,xmdl022,xmdl024,xmdl025, ",
               "        xmdl027,xmdl028,xmdl029 ",
               "   FROM xmdk_t,xmdl_t ",
               "  WHERE xmdlent = xmdkent ",
               "    AND xmdldocno = xmdkdocno ",
               "    AND xmdldocno||xmdlseq NOT IN (SELECT xmde003||xmde004 ",
               "                                     FROM xmde_t ",
               "                                    WHERE xmde000 = '1' ",
               "                                      AND xmdeent = xmdlent ",
               "                                      AND xmdesite = xmdlsite)",
               "    AND xmdl042 = '4' ",
               "    AND xmdl043 = ? ",
               "    AND xmdl044 = ? ",
               "    AND ((xmdk000 IN ('1','2','3') AND xmdk002 = '1' AND xmdkstus = 'S') ",
               "     OR (xmdk000 = '4' AND xmdkstus = 'Y') ",
               "     OR (xmdk000 = '6' AND xmdkstus = 'S')) ",
               "    AND xmdkent = '",g_enterprise,"' ",
               "    AND xmdksite = '",g_site,"' ",
               "    ORDER BY xmdk001 "
   PREPARE axmp440_process_xmdl_bp FROM l_sql
   DECLARE axmp440_process_xmdl_cs CURSOR FOR axmp440_process_xmdl_bp
   
   #合約上一期的累積量/金額
   LET l_sql = " SELECT COUNT(*) ",
               "   FROM xmdw_t ",
               "  WHERE xmdw001 = ? ",
               "    AND xmdw002 = ? ",
               "    AND xmdwent = '",g_enterprise,"' ",
               "    AND xmdwsite = '",g_site,"' "
   PREPARE axmp440_process_xmdw_count_pre FROM l_sql
   
   LET l_sql = " SELECT xmdw003,xmdw008,xmdw009,xmdw010,xmdw011 ",
               "   FROM xmdw_t ",
               "  WHERE xmdw001 = ? ",
               "    AND xmdw002 = ? ",
               "    AND xmdw003 = (SELECT MAX(xmdw003) FROM xmdw_t WHERE xmdw001 = ? AND xmdw002 = ? AND xmdwent = '",g_enterprise,"') ",
               "    AND xmdwent = '",g_enterprise,"' ",
               "    AND xmdwsite = '",g_site,"' "
   PREPARE axmp440_process_sel_xmdw_pre FROM l_sql
   
   #銷售合約累計定價明細檔
   LET l_sql = " SELECT xmdz001,xmdzseq1 ",
               "   FROM xmdz_t ",
               "  WHERE xmdzdocno = ? ",
               "    AND xmdzseq = ? ",
               "    AND xmdz001 <= ? ",
               "    AND xmdz001 = (SELECT MAX(xmdz001) FROM xmdz_t WHERE xmdzdocno = ? AND xmdzseq = ? AND xmdz001 <= ? AND xmdzent = '",g_enterprise,"' ) ",
               "    AND xmdzent = '",g_enterprise,"' ",
               "    AND xmdzsite = '",g_site,"' "
   PREPARE axmp440_process_sel_xmdz_pre_1 FROM l_sql
   
   LET l_sql = " SELECT xmdz001,xmdzseq1 ",
               "   FROM xmdz_t ",
               "  WHERE xmdzdocno = ? ",
               "    AND xmdzseq = ? ",
               "    AND xmdz001 = (SELECT MAX(xmdz001) FROM xmdz_t WHERE xmdzdocno = ? AND xmdzseq = ? AND xmdzent = '",g_enterprise,"' ) ",
               "    AND xmdzent = '",g_enterprise,"' ",
               "    AND xmdzsite = '",g_site,"' "
   PREPARE axmp440_process_sel_xmdz_pre_3 FROM l_sql
   
   LET l_sql = " SELECT xmdzseq1,xmdz001 ",
               "   FROM xmdz_t ",
               "  WHERE xmdzdocno = ? ",
               "    AND xmdzseq = ? ",
               "    AND xmdz001 > ? ",
               "    AND xmdz001 < ? ",
               "    AND xmdzent = '",g_enterprise,"' ",
               "    AND xmdzsite = '",g_site,"' ",
               "  ORDER BY xmdz001 DESC "
   PREPARE axmp440_process_sel_xmdz_pre_2 FROM l_sql
   DECLARE axmp440_process_sel_xmdz_cs CURSOR FOR axmp440_process_sel_xmdz_pre_2
   
   #將每一筆結算單據(一般出貨單、簽收單、銷退單)資料產生到xmde_t(合約結算明細檔)中
   LET l_sql = " INSERT INTO xmde_t ",
               " (xmdeent,xmdesite,xmde000, ",
               "  xmde001,xmde002,xmde003,xmde004,xmde005, ",
               "  xmde006,xmde007,xmde008,xmde009,xmde010, ",
               "  xmde011,xmde012,xmde013,xmde014,xmde015, ",
               "  xmde016,xmde017,xmde018,xmde019,xmde020, ",
               "  xmde021,xmde022,xmde023,xmde024,xmde025) ",
               " values(?,?,?,?,?, ?,?,?,?,?, ?,?,?,?,?, ",
               "        ?,?,?,?,?, ?,?,?,?,?, ?,?,?) "
   PREPARE axmp440_process_insert_xmde_pre FROM l_sql
   
   #將該筆合約單所結算的數量與金額資料產生一筆xmdw_t(合約結算歷程檔)中
   LET l_sql = " INSERT INTO xmdw_t ",
               " (xmdwent,xmdwsite,xmdw001,xmdw002,xmdw003, ",
               "  xmdw004,xmdw005,xmdw006,xmdw007,xmdw008, ",
               "  xmdw009,xmdw010,xmdw011,xmdw012,xmdw013) ",
               " values(?,?,?,?,?, ?,?,?,?,?, ?,?,?,?,?) "
   PREPARE axmp440_process_insert_xmdw_pre FROM l_sql
   
   INITIALIZE l_xmdy.* TO NULL
   FOREACH axmp440_process_xmdy_cs INTO l_xmdy.xmdx005,l_xmdy.xmdx007,l_xmdy.xmdx008,
                                        l_xmdy.xmdydocno,l_xmdy.xmdyseq,l_xmdy.xmdy010,l_xmdy.xmdy024
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         LET l_success = FALSE
         EXIT FOREACH
      END IF
      
      IF NOT l_success THEN
         LET l_tot_success = FALSE
         LET l_success = TRUE
      END IF
      
      IF g_bgjob <> "Y" THEN
         #讀取合約單號：%1／項次：%2對應的一般出貨單、簽收單、銷退單資料進行結算。
         LET ls_value = cl_getmsg_parm('axm-00617',g_lang,l_xmdy.xmdydocno ||'|'|| l_xmdy.xmdyseq)
         CALL cl_progress_no_window_ing(ls_value)
      END IF
      
      INITIALIZE l_xmdw.* TO NULL
      LET l_xmdw.xmdwent  = g_enterprise
      LET l_xmdw.xmdwsite = g_site
      LET l_xmdw.xmdw001  = l_xmdy.xmdydocno
      LET l_xmdw.xmdw002  = l_xmdy.xmdyseq
      LET l_xmdw.xmdw003  = cl_get_current()
      LET l_xmdw.xmdw004  = 0
      LET l_xmdw.xmdw005  = 0
      LET l_xmdw.xmdw006  = 0
      LET l_xmdw.xmdw007  = 0
      LET l_xmdw.xmdw008  = 0
      LET l_xmdw.xmdw009  = 0
      LET l_xmdw.xmdw010  = 0
      LET l_xmdw.xmdw011  = 0
      LET l_xmdw.xmdw012  = g_user
      LET l_xmdw.xmdw013  = g_dept
      
      LET l_cnt = 0
      EXECUTE axmp440_process_xmdw_count_pre USING l_xmdy.xmdydocno,l_xmdy.xmdyseq
         INTO l_cnt
      IF l_cnt > 0 THEN
         EXECUTE axmp440_process_sel_xmdw_pre USING l_xmdy.xmdydocno,l_xmdy.xmdyseq,l_xmdy.xmdydocno,l_xmdy.xmdyseq
            INTO l_xmdw.xmdw003,l_xmdw.xmdw008,l_xmdw.xmdw009,l_xmdw.xmdw010,l_xmdw.xmdw011
         LET l_xmdw.xmdw003  = cl_get_current()
      END IF
      
      INITIALIZE l_xmdl.* TO NULL
      FOREACH axmp440_process_xmdl_cs USING l_xmdy.xmdydocno,l_xmdy.xmdyseq
         INTO l_xmdl.xmdk000,l_xmdl.xmdk016,l_xmdl.xmdk017,l_xmdl.xmdk042,l_xmdl.xmdlsite,
              l_xmdl.xmdldocno,l_xmdl.xmdlseq,l_xmdl.xmdl003,l_xmdl.xmdl004,l_xmdl.xmdl008,
              l_xmdl.xmdl009,l_xmdl.xmdl021,l_xmdl.xmdl022,l_xmdl.xmdl024,l_xmdl.xmdl025,
              l_xmdl.xmdl027,l_xmdl.xmdl028,l_xmdl.xmdl029
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            LET l_success = FALSE
            EXIT FOREACH
         END IF
         
         #逐筆計算當期的新增量、新增金額、累積量、累積金額等值
         IF l_xmdl.xmdk000 = '6' THEN  #銷退是屬於減項
            LET l_xmdw.xmdw004  = l_xmdw.xmdw004 - l_xmdl.xmdl022
            LET l_xmdw.xmdw005  = l_xmdw.xmdw005 - l_xmdl.xmdl027
            LET l_xmdw.xmdw006  = l_xmdw.xmdw006 - l_xmdl.xmdl028
            LET l_xmdw.xmdw007  = l_xmdw.xmdw007 - l_xmdl.xmdl029
            LET l_xmdw.xmdw008  = l_xmdw.xmdw008 - l_xmdl.xmdl022
            LET l_xmdw.xmdw009  = l_xmdw.xmdw009 - l_xmdl.xmdl027
            LET l_xmdw.xmdw010  = l_xmdw.xmdw010 - l_xmdl.xmdl028
            LET l_xmdw.xmdw011  = l_xmdw.xmdw011 - l_xmdl.xmdl029
         ELSE
            LET l_xmdw.xmdw004  = l_xmdw.xmdw004 + l_xmdl.xmdl022
            LET l_xmdw.xmdw005  = l_xmdw.xmdw005 + l_xmdl.xmdl027
            LET l_xmdw.xmdw006  = l_xmdw.xmdw006 + l_xmdl.xmdl028
            LET l_xmdw.xmdw007  = l_xmdw.xmdw007 + l_xmdl.xmdl029
            LET l_xmdw.xmdw008  = l_xmdw.xmdw008 + l_xmdl.xmdl022
            LET l_xmdw.xmdw009  = l_xmdw.xmdw009 + l_xmdl.xmdl027
            LET l_xmdw.xmdw010  = l_xmdw.xmdw010 + l_xmdl.xmdl028
            LET l_xmdw.xmdw011  = l_xmdw.xmdw011 + l_xmdl.xmdl029
         END IF
         
         INITIALIZE l_xmde.* TO NULL
         LET l_xmde.xmdeent  = g_enterprise
         LET l_xmde.xmdesite = g_site
         LET l_xmde.xmde000  = '1'  #合約的關聯資料
         LET l_xmde.xmde001  = l_xmdy.xmdydocno
         LET l_xmde.xmde002  = l_xmdy.xmdyseq
         LET l_xmde.xmde003  = l_xmdl.xmdldocno
         LET l_xmde.xmde004  = l_xmdl.xmdlseq
         LET l_xmde.xmde005  = l_xmdw.xmdw003
         LET l_xmde.xmde006  = l_xmdl.xmdl008
         LET l_xmde.xmde007  = l_xmdl.xmdl009
         LET l_xmde.xmde008  = l_xmdl.xmdl022
         LET l_xmde.xmde009  = l_xmdl.xmdl021
         LET l_xmde.xmde010  = l_xmdl.xmdl024
         LET l_xmde.xmde011  = l_xmdl.xmdl027
         LET l_xmde.xmde012  = l_xmdl.xmdl028
         LET l_xmde.xmde013  = l_xmdl.xmdl029
         #新單價與來源單據一樣時，將原始單價與金額直接記錄在調整後新單價/金額等欄位中
         #而差異數量、金額則紀錄為0
         LET l_xmde.xmde014  = l_xmdl.xmdl027
         LET l_xmde.xmde015  = l_xmdl.xmdl028
         LET l_xmde.xmde016  = l_xmdl.xmdl029
         LET l_xmde.xmde017  = 0
         LET l_xmde.xmde018  = 0
         LET l_xmde.xmde019  = 0
         LET l_xmde.xmde020  = 0
         LET l_xmde.xmde021  = l_xmdl.xmdl024
         LET l_xmde.xmde022  = l_xmdl.xmdl003
         LET l_xmde.xmde023  = l_xmdl.xmdl004
         LET l_xmde.xmde024  = l_xmdl.xmdlsite
         LET l_xmde.xmde025  = '0'  #不需要差異處理
         
         #若該合約有累積量定價時則需判斷目前計算出的累積量所對應的價格與原始來源單據是否一樣
         IF l_xmdy.xmdy024 = 'Y' THEN
            IF l_xmdl.xmdk000 = '6' THEN  #銷退是屬於減項
               LET l_amount_1 = l_xmdw.xmdw008
               LET l_amount_2 = l_xmdw.xmdw008 + l_xmdl.xmdl022
            ELSE
               LET l_amount_1 = l_xmdw.xmdw008 - l_xmdl.xmdl022
               LET l_amount_2 = l_xmdw.xmdw008
            END IF
            LET l_xmdz001_1 = ''
            LET l_xmdz001_2 = ''
            LET l_xmdzseq1_1 = ''
            LET l_xmdzseq1_2 = ''
            EXECUTE axmp440_process_sel_xmdz_pre_1 USING l_xmdy.xmdydocno,l_xmdy.xmdyseq,l_amount_1,l_xmdy.xmdydocno,l_xmdy.xmdyseq,l_amount_1
               INTO l_xmdz001_1,l_xmdzseq1_1
            EXECUTE axmp440_process_sel_xmdz_pre_1 USING l_xmdy.xmdydocno,l_xmdy.xmdyseq,l_amount_2,l_xmdy.xmdydocno,l_xmdy.xmdyseq,l_amount_2
               INTO l_xmdz001_2,l_xmdzseq1_2
            IF cl_null(l_xmdz001_1) THEN LET l_xmdz001_1 = 0 END IF
            IF cl_null(l_xmdz001_2) THEN LET l_xmdz001_2 = 0 END IF
            EXECUTE axmp440_process_sel_xmdz_pre_3 USING l_xmdy.xmdydocno,l_xmdy.xmdyseq,l_xmdy.xmdydocno,l_xmdy.xmdyseq
               INTO l_xmdz001_max,l_xmdzseq1_max
            
            IF l_xmdz001_1 <> l_xmdz001_2 THEN
               CALL axmp440_get_price(l_xmdy.xmdydocno,l_xmdy.xmdyseq,l_xmdzseq1_2,l_xmdy.xmdx005,l_xmdy.xmdx007,l_xmdy.xmdx008,l_xmdl.xmdk016,l_xmdl.xmdk042,l_xmdl.xmdl025)
                    RETURNING l_price_2
               LET l_amount = (l_amount_2 - l_xmdz001_2) * l_price_2
               CALL s_tax_count(l_xmdl.xmdlsite,l_xmdl.xmdl025,l_amount,(l_amount_2 - l_xmdz001_2),l_xmdl.xmdk016,l_xmdl.xmdk017)
                    RETURNING l_xrcd103_2,l_xrcd104_2,l_xrcd105_2,l_xrcd113,l_xrcd114,l_xrcd115
               #跨階
               LET l_xmdzseq1 = ''
               LET l_xmdz001 = ''
               FOREACH axmp440_process_sel_xmdz_cs USING l_xmdy.xmdydocno,l_xmdy.xmdyseq,l_xmdz001_1,l_xmdz001_2
                  INTO l_xmdzseq1,l_xmdz001
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "FOREACH:" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     EXIT FOREACH
                  END IF
                  CALL axmp440_get_price(l_xmdy.xmdydocno,l_xmdy.xmdyseq,l_xmdzseq1,l_xmdy.xmdx005,l_xmdy.xmdx007,l_xmdy.xmdx008,l_xmdl.xmdk016,l_xmdl.xmdk042,l_xmdl.xmdl025)
                       RETURNING l_price
                  CALL s_tax_count(l_xmdl.xmdlsite,l_xmdl.xmdl025,((l_xmdz001_2-l_xmdz001)*l_price),(l_xmdz001_2-l_xmdz001),l_xmdl.xmdk016,l_xmdl.xmdk017)
                       RETURNING l_xrcd103,l_xrcd104,l_xrcd105,l_xrcd113,l_xrcd114,l_xrcd115
                  LET l_xmde.xmde014 = l_xmde.xmde014 + l_xrcd103
                  LET l_xmde.xmde016 = l_xmde.xmde016 + l_xrcd104
                  LET l_xmde.xmde015 = l_xmde.xmde015 + l_xrcd105
                  LET l_xmdz001_2 = l_xmdz001
               END FOREACH
               
               IF l_xmdz001_1 = 0 THEN
                  LET l_price_1 = l_xmdy.xmdy010
               ELSE
                  CALL axmp440_get_price(l_xmdy.xmdydocno,l_xmdy.xmdyseq,l_xmdzseq1_1,l_xmdy.xmdx005,l_xmdy.xmdx007,l_xmdy.xmdx008,l_xmdl.xmdk016,l_xmdl.xmdk042,l_xmdl.xmdl025)
                       RETURNING l_price_1
               END IF
               CALL s_tax_count(l_xmdl.xmdlsite,l_xmdl.xmdl025,((l_xmdz001_2-l_amount_1)*l_price_1),(l_xmdz001_2-l_amount_1),l_xmdl.xmdk016,l_xmdl.xmdk017)
                    RETURNING l_xrcd103_1,l_xrcd104_1,l_xrcd105_1,l_xrcd113,l_xrcd114,l_xrcd115
               LET l_xmde.xmde014 = l_xrcd103_1 + l_xrcd103_2
               LET l_xmde.xmde016 = l_xrcd104_1 + l_xrcd104_2
               LET l_xmde.xmde015 = l_xrcd105_1 + l_xrcd105_2
            END IF
               
            IF l_xmdz001_1 = l_xmdz001_max THEN
               LET l_xmdz001_2 = l_xmdz001_max
               CALL axmp440_get_price(l_xmdy.xmdydocno,l_xmdy.xmdyseq,l_xmdzseq1_max,l_xmdy.xmdx005,l_xmdy.xmdx007,l_xmdy.xmdx008,l_xmdl.xmdk016,l_xmdl.xmdk042,l_xmdl.xmdl025)
                    RETURNING l_price_2
               LET l_amount = l_xmdl.xmdl022 * l_price_2
               CALL s_tax_count(l_xmdl.xmdlsite,l_xmdl.xmdl025,l_amount,l_xmdl.xmdl022,l_xmdl.xmdk016,l_xmdl.xmdk017)
                    RETURNING l_xmde.xmde014,l_xmde.xmde016,l_xmde.xmde015,l_xrcd113,l_xrcd114,l_xrcd115
            END IF
            
            #若不一樣則須在xmde_t中的建議調整單價、金額等欄位紀錄新的單價與金額，並計算新金額與來源單據的原始金額的差異
            IF l_xmde.xmde014 <> l_xmde.xmde011 THEN
               LET l_xmde.xmde025  = '1'  #未處理
               LET l_xmde.xmde020  = (l_amount_2 - l_xmdz001_2)
               LET l_xmde.xmde021  = l_price_2
               LET l_xmde.xmde017 = l_xmde.xmde011 - l_xmde.xmde014
               LET l_xmde.xmde019 = l_xmde.xmde013 - l_xmde.xmde016
               LET l_xmde.xmde018 = l_xmde.xmde012 - l_xmde.xmde015
            END IF
         END IF
         
         EXECUTE axmp440_process_insert_xmde_pre USING
                 l_xmde.xmdeent,l_xmde.xmdesite,l_xmde.xmde000,
                 l_xmde.xmde001,l_xmde.xmde002,l_xmde.xmde003,l_xmde.xmde004,l_xmde.xmde005,
                 l_xmde.xmde006,l_xmde.xmde007,l_xmde.xmde008,l_xmde.xmde009,l_xmde.xmde010,
                 l_xmde.xmde011,l_xmde.xmde012,l_xmde.xmde013,l_xmde.xmde014,l_xmde.xmde015,
                 l_xmde.xmde016,l_xmde.xmde017,l_xmde.xmde018,l_xmde.xmde019,l_xmde.xmde020,
                 l_xmde.xmde021,l_xmde.xmde022,l_xmde.xmde023,l_xmde.xmde024,l_xmde.xmde025
         IF SQLCA.SQLCODE THEN
            LET g_sub_success = FALSE
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.SQLCODE
            LET g_errparam.extend = 'ins xmde'
            LET g_errparam.popup = TRUE
            LET l_success = FALSE
            CALL cl_err()
            EXIT FOREACH
         ELSE
            IF g_master.chk = 'Y' THEN
               CALL s_axmp441_upd_tmp('Y',l_xmde.xmde001,l_xmde.xmde002,l_xmde.xmde003,
                                          l_xmde.xmde004,l_xmde.xmde017,l_xmde.xmde018,
                                          g_master.type,g_master.item,g_master.reason)
            END IF
         END IF
         
         INITIALIZE l_xmdl.* TO NULL
      END FOREACH
      
      IF g_bgjob <> "Y" THEN
         #更新本期合約單號：%1／項次：%2的銷售合約結算歷程檔。
         LET ls_value = cl_getmsg_parm('axm-00618',g_lang,l_xmdy.xmdydocno ||'|'|| l_xmdy.xmdyseq)
         CALL cl_progress_no_window_ing(ls_value)
      END IF
      
      EXECUTE axmp440_process_insert_xmdw_pre USING
              l_xmdw.xmdwent,l_xmdw.xmdwsite,l_xmdw.xmdw001,l_xmdw.xmdw002,l_xmdw.xmdw003,
              l_xmdw.xmdw004,l_xmdw.xmdw005,l_xmdw.xmdw006,l_xmdw.xmdw007,l_xmdw.xmdw008,
              l_xmdw.xmdw009,l_xmdw.xmdw010,l_xmdw.xmdw011,l_xmdw.xmdw012,l_xmdw.xmdw013
      IF SQLCA.SQLCODE THEN
         LET g_sub_success = FALSE
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.SQLCODE
         LET g_errparam.extend = 'ins xmdw'
         LET g_errparam.popup = TRUE
         LET l_success = FALSE
         CALL cl_err()
      END IF
      
      INITIALIZE l_xmdy.* TO NULL
   END FOREACH

   FREE axmp440_process_xmdy_bp
   FREE axmp440_process_xmdl_bp
   FREE axmp440_process_xmdw_count_pre
   FREE axmp440_process_sel_xmdw_pre
   FREE axmp440_process_sel_xmdz_pre_1
   FREE axmp440_process_sel_xmdz_pre_2
   FREE axmp440_process_sel_xmdz_pre_3
   FREE axmp440_process_insert_xmde_pre
   FREE axmp440_process_insert_xmdw_pre

   IF NOT l_success OR NOT l_tot_success THEN
      CALL s_transaction_end('N','0')
   ELSE
      IF g_master.chk = 'Y' THEN
         CALL s_axmp441(g_master.docno)
      END IF
      CALL s_transaction_end('Y','0')
   END IF

   CALL cl_err_collect_show()
]]>
  </point>
  <point name="ui_dialog.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="ui_dialog.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success LIKE type_t.num5
   DEFINE l_flag    LIKE type_t.num5
   DEFINE l_where   STRING
   DEFINE l_xmdy002 LIKE xmdy_t.xmdy002
   ]]>
  </point>
  <section id="axmp440.description" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000030
#+ 
#+ Filename...: axmp440
#+ Description: 銷售合約累積量計算作業
#+ Creator....: 04441(2015-03-03 10:41:31)
#+ Modifier...: 04441(2015-03-05 16:00:48) -SD/PR-
]]>
  </section>
  <section id="axmp440.get_buffer" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION axmp440_get_buffer(p_dialog)
   DEFINE p_dialog   ui.DIALOG
   
   LET g_master.chk = p_dialog.getFieldBuffer('chk')
   LET g_master.type = p_dialog.getFieldBuffer('type')
   LET g_master.docno = p_dialog.getFieldBuffer('docno')
   LET g_master.reason = p_dialog.getFieldBuffer('reason')
   LET g_master.item = p_dialog.getFieldBuffer('item')
 
   CALL cl_schedule_get_buffer(p_dialog)
 
   #add-point:get_buffer段其他欄位處理
   {<point name="get_buffer.others"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="axmp440.global" ver="5" status="" src="s" readonly="">
    <![CDATA[#應用 p01 樣板自動產生(Version:10)
{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_schedule
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_schedule.inc"
GLOBALS
   DEFINE gwin_curr2  ui.Window
   DEFINE gfrm_curr2  ui.Form
   DEFINE gi_hiden_asign       LIKE type_t.num5
   DEFINE gi_hiden_exec        LIKE type_t.num5
   DEFINE gi_hiden_spec        LIKE type_t.num5
   DEFINE gi_hiden_exec_end    LIKE type_t.num5
   DEFINE g_chk_jobid          LIKE type_t.num5
END GLOBALS
 
PRIVATE TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
   {<point name="global.parameter"/>}
   #end add-point
        wc               STRING
                     END RECORD
 
DEFINE g_sql             STRING        #組 sql 用
DEFINE g_forupd_sql      STRING        #SELECT ... FOR UPDATE  SQL
DEFINE g_error_show      LIKE type_t.num5
DEFINE g_jobid           STRING
DEFINE g_wc              STRING
 
PRIVATE TYPE type_master RECORD
       xmdxdocno LIKE xmdx_t.xmdxdocno, 
   xmdx004 LIKE xmdx_t.xmdx004, 
   xmdy002 LIKE xmdy_t.xmdy002, 
   imaa009 LIKE imaa_t.imaa009, 
   imaf111 LIKE imaf_t.imaf111, 
   xmdx002 LIKE xmdx_t.xmdx002, 
   xmdx003 LIKE xmdx_t.xmdx003, 
   xmdx014 LIKE xmdx_t.xmdx014, 
   xmdx015 LIKE xmdx_t.xmdx015, 
   chk LIKE type_t.chr80, 
   type LIKE type_t.chr500, 
   docno LIKE type_t.chr500, 
   docno_desc LIKE type_t.chr80, 
   reason LIKE type_t.chr10, 
   reason_desc LIKE type_t.chr80, 
   item LIKE type_t.chr500, 
   stagenow LIKE type_t.chr80,
       wc               STRING
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_master type_master
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="axmp440.init" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 初始化作業
PRIVATE FUNCTION axmp440_init()
   #add-point:init段define 
   {<point name="init.define" edit="s"/>}
   #end add-point
   #add-point:init段define (客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point
 
   LET g_error_show = 1
   LET gwin_curr2 = ui.Window.getCurrent()
   LET gfrm_curr2 = gwin_curr2.getForm()
   CALL cl_schedule_import_4fd()
   CALL cl_set_combo_scc("gzpa003","75")
   IF cl_get_para(g_enterprise,"","E-SYS-0005") = "N" THEN
       CALL cl_set_comp_visible("scheduling_page,history_page",FALSE)
   END IF 
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="axmp440.main" ver="4" status="" src="s" readonly="">
    <![CDATA[MAIN
   DEFINE ls_js    STRING
   DEFINE lc_param type_parameter  
   #add-point:main段define 
   {<point name="main.define" edit="s"/>}
   #end add-point 
   #add-point:main段define (客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point 
  
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axm","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   {<point name="main.background"/>}
   #end add-point
 
   #背景(Y) 或半背景(T) 時不做主畫面開窗
   IF g_bgjob = "Y" OR g_bgjob = "T" THEN
      #排程參數由01開始，若不是1開始，表示有保留參數
      LET ls_js = g_argv[01]
     #CALL util.JSON.parse(ls_js,g_master)   #p類主要使用l_param,此處不解析
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
      CALL axmp440_process(ls_js)
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axmp440 WITH FORM cl_ap_formpath("axm",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL axmp440_init()
 
      #進入選單 Menu (="N")
      CALL axmp440_ui_dialog()
 
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_axmp440
   END IF
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
]]>
  </section>
  <section id="axmp440.msgcentre_notify" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION axmp440_msgcentre_notify()
 
   DEFINE lc_state LIKE type_t.chr5
 
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = "process"
 
   #add-point:msgcentre其他通知
   {<point name="msg_centre.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
]]>
  </section>
  <section id="axmp440.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[#add-point:自定義元件(Function)
{<point name="other.function"/>}
#end add-point
]]>
  </section>
  <section id="axmp440.process" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 資料處理   (r類使用g_master為主處理/p類使用l_param為主)
PRIVATE FUNCTION axmp440_process(ls_js)
   DEFINE ls_js         STRING
   DEFINE lc_param      type_parameter
   DEFINE li_stus       LIKE type_t.num5
   DEFINE li_count      LIKE type_t.num10  #progressbar計量
   DEFINE ls_sql        STRING             #主SQL
   DEFINE li_p01_status LIKE type_t.num5
   #add-point:process段define 
   {<point name="process.define" edit="s"/>}
   #end add-point
   #add-point:process段define (客製用)
   {<point name="process.define_customerization" edit="c"/>}
   #end add-point
 
  #INITIALIZE lc_param TO NULL           #p類不可以清空
   CALL util.JSON.parse(ls_js,lc_param)  #r類作業被t類呼叫時使用, p類主要解開參數處
 
  #IF lc_param.wc IS NOT NULL THEN
  #   LET g_bgjob = "T"       #特殊情況,此為t類作業鬆耦合串入報表主程式使用
  #END IF
 
   #add-point:process段前處理
   {<point name="process.pre_process"/>}
   #end add-point
 
   #預先計算progressbar迴圈次數
   IF g_bgjob <> "Y" THEN
      #add-point:process段count_progress
      {<point name="process.count_progress"/>}
      #end add-point
   END IF
 
   #主SQL及相關FOREACH前置處理
#  DECLARE axmp440_process_cs CURSOR FROM ls_sql
#  FOREACH axmp440_process_cs INTO
   #add-point:process段process
   {<point name="process.process"/>}
   #end add-point
#  END FOREACH
 
   IF g_bgjob = "N" THEN
      #前景作業完成處理
      #add-point:process段foreground完成處理
      {<point name="process.foreground_finish"/>}
      #end add-point
      CALL cl_ask_confirm3("std-00012","")
   ELSE
      #背景作業完成處理
      #add-point:process段background完成處理
      {<point name="process.background_finish"/>}
      #end add-point
      CALL cl_schedule_exec_call(li_p01_status)
   END IF
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL axmp440_msgcentre_notify()
 
END FUNCTION
]]>
  </section>
  <section id="axmp440.transfer_argv" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 轉換本地參數至cmdrun參數內,準備進入背景執行
PRIVATE FUNCTION axmp440_transfer_argv(ls_js)
   DEFINE ls_js       STRING
   DEFINE la_cmdrun   RECORD
             prog       STRING,
             actionid   STRING,
             background LIKE type_t.chr1,
             param      DYNAMIC ARRAY OF STRING
                  END RECORD
   DEFINE la_param    type_parameter
   #add-point:transfer_agrv段define 
   {<point name="transfer_agrv.define" edit="s"/>}
   #end add-point
   #add-point:transfer_agrv段define (客製用)
   {<point name="transfer_agrv.define_customerization" edit="c"/>}
   #end add-point
 
   LET la_cmdrun.prog = g_prog
   LET la_cmdrun.background = "Y"
   LET la_cmdrun.param[1] = ls_js
 
   #add-point:transfer.argv段程式內容
   {<point name="transfer.argv.define"/>}
   #end add-point
 
   RETURN util.JSON.stringify( la_cmdrun )
END FUNCTION
]]>
  </section>
  <section id="axmp440.ui_dialog" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION axmp440_ui_dialog()
   DEFINE li_exit  LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx   LIKE type_t.num10
   DEFINE ls_js    STRING
   DEFINE ls_wc    STRING
   DEFINE l_dialog ui.DIALOG
   DEFINE lc_param type_parameter
   #add-point:ui_dialog段define 
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define (客製用)
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:ui_dialog段before dialog
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   WHILE TRUE
      #add-point:ui_dialog段before dialog2
      {<point name="ui_dialog.before_dialog2"/>}
      #end add-point
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #應用 a57 樣板自動產生(Version:2)
         INPUT BY NAME g_master.chk,g_master.type,g_master.docno,g_master.reason,g_master.item 
            ATTRIBUTE(WITHOUT DEFAULTS)
            
            #自訂ACTION(master_input)
            
         
            BEFORE INPUT
               #add-point:資料輸入前
               {<point name="input.m.before_input"/>}
               #end add-point
         
                     #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD chk
            #add-point:BEFORE FIELD chk
            {<point name="input.b.chk" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD chk
            
            #add-point:AFTER FIELD chk
            {<point name="input.a.chk" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE chk
            #add-point:ON CHANGE chk
            {<point name="input.g.chk" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD type
            #add-point:BEFORE FIELD type
            {<point name="input.b.type" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD type
            
            #add-point:AFTER FIELD type
            {<point name="input.a.type" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE type
            #add-point:ON CHANGE type
            {<point name="input.g.type" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD docno
            
            #add-point:AFTER FIELD docno
            {<point name="input.a.docno" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD docno
            #add-point:BEFORE FIELD docno
            {<point name="input.b.docno" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE docno
            #add-point:ON CHANGE docno
            {<point name="input.g.docno" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD reason
            
            #add-point:AFTER FIELD reason
            {<point name="input.a.reason" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD reason
            #add-point:BEFORE FIELD reason
            {<point name="input.b.reason" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE reason
            #add-point:ON CHANGE reason
            {<point name="input.g.reason" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD item
            
            #add-point:AFTER FIELD item
            {<point name="input.a.item" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD item
            #add-point:BEFORE FIELD item
            {<point name="input.b.item" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE item
            #add-point:ON CHANGE item
            {<point name="input.g.item" />}
            #END add-point 
 
 
                     #Ctrlp:input.c.chk
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD chk
            #add-point:ON ACTION controlp INFIELD chk
            {<point name="input.c.chk" />}
            #END add-point
 
         #Ctrlp:input.c.type
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD type
            #add-point:ON ACTION controlp INFIELD type
            {<point name="input.c.type" />}
            #END add-point
 
         #Ctrlp:input.c.docno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD docno
            #add-point:ON ACTION controlp INFIELD docno
            {<point name="input.c.docno" />}
            #END add-point
 
         #Ctrlp:input.c.reason
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD reason
            #add-point:ON ACTION controlp INFIELD reason
            {<point name="input.c.reason" />}
            #END add-point
 
         #Ctrlp:input.c.item
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD item
            #add-point:ON ACTION controlp INFIELD item
            {<point name="input.c.item" />}
            #END add-point
 
 
               
            AFTER INPUT
               #add-point:資料輸入後
               {<point name="input.m.after_input"/>}
               #end add-point
               
            #add-point:其他管控(on row change, etc...)
            {<point name="input.other"/>}
            #end add-point
         END INPUT
 
 
         
         #應用 a58 樣板自動產生(Version:2)
         CONSTRUCT BY NAME g_master.wc ON xmdxdocno,xmdx004,xmdy002,imaa009,imaf111,xmdx002,xmdx003, 
             xmdx014,xmdx015
            BEFORE CONSTRUCT
               #add-point:cs段before_construct
               {<point name="cs.head.before_construct"/>}
               #end add-point 
         
            #公用欄位開窗相關處理
            
               
            #一般欄位開窗相關處理    
                     #Ctrlp:construct.c.xmdxdocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdxdocno
            #add-point:ON ACTION controlp INFIELD xmdxdocno
            {<point name="construct.c.xmdxdocno" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdxdocno
            #add-point:BEFORE FIELD xmdxdocno
            {<point name="construct.b.xmdxdocno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdxdocno
            
            #add-point:AFTER FIELD xmdxdocno
            {<point name="construct.a.xmdxdocno" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdx004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdx004
            #add-point:ON ACTION controlp INFIELD xmdx004
            {<point name="construct.c.xmdx004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdx004
            #add-point:BEFORE FIELD xmdx004
            {<point name="construct.b.xmdx004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdx004
            
            #add-point:AFTER FIELD xmdx004
            {<point name="construct.a.xmdx004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdy002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdy002
            #add-point:ON ACTION controlp INFIELD xmdy002
            {<point name="construct.c.xmdy002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdy002
            #add-point:BEFORE FIELD xmdy002
            {<point name="construct.b.xmdy002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdy002
            
            #add-point:AFTER FIELD xmdy002
            {<point name="construct.a.xmdy002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imaa009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD imaa009
            #add-point:ON ACTION controlp INFIELD imaa009
            {<point name="construct.c.imaa009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD imaa009
            #add-point:BEFORE FIELD imaa009
            {<point name="construct.b.imaa009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD imaa009
            
            #add-point:AFTER FIELD imaa009
            {<point name="construct.a.imaa009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imaf111
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD imaf111
            #add-point:ON ACTION controlp INFIELD imaf111
            {<point name="construct.c.imaf111" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD imaf111
            #add-point:BEFORE FIELD imaf111
            {<point name="construct.b.imaf111" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD imaf111
            
            #add-point:AFTER FIELD imaf111
            {<point name="construct.a.imaf111" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdx002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdx002
            #add-point:ON ACTION controlp INFIELD xmdx002
            {<point name="construct.c.xmdx002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdx002
            #add-point:BEFORE FIELD xmdx002
            {<point name="construct.b.xmdx002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdx002
            
            #add-point:AFTER FIELD xmdx002
            {<point name="construct.a.xmdx002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdx003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdx003
            #add-point:ON ACTION controlp INFIELD xmdx003
            {<point name="construct.c.xmdx003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdx003
            #add-point:BEFORE FIELD xmdx003
            {<point name="construct.b.xmdx003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdx003
            
            #add-point:AFTER FIELD xmdx003
            {<point name="construct.a.xmdx003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdx014
            #add-point:BEFORE FIELD xmdx014
            {<point name="construct.b.xmdx014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdx014
            
            #add-point:AFTER FIELD xmdx014
            {<point name="construct.a.xmdx014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdx014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdx014
            #add-point:ON ACTION controlp INFIELD xmdx014
            {<point name="construct.c.xmdx014" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdx015
            #add-point:BEFORE FIELD xmdx015
            {<point name="construct.b.xmdx015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdx015
            
            #add-point:AFTER FIELD xmdx015
            {<point name="construct.a.xmdx015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdx015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdx015
            #add-point:ON ACTION controlp INFIELD xmdx015
            {<point name="construct.c.xmdx015" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD docno
            #add-point:BEFORE FIELD docno
            {<point name="construct.b.docno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD docno
            
            #add-point:AFTER FIELD docno
            {<point name="construct.a.docno" />}
            #END add-point
            
 
         #Ctrlp:construct.c.docno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD docno
            #add-point:ON ACTION controlp INFIELD docno
            {<point name="construct.c.docno" />}
            #END add-point
 
 
            
            #add-point:其他管控
            {<point name="cs.other"/>}
            #end add-point
            
         END CONSTRUCT
 
 
      
         #add-point:ui_dialog段construct
         {<point name="ui_dialog.more_construct"/>}
         #end add-point
         #add-point:ui_dialog段input
         {<point name="ui_dialog.more_input"/>}
         #end add-point
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
 
         SUBDIALOG lib_cl_schedule.cl_schedule_setting
         SUBDIALOG lib_cl_schedule.cl_schedule_setting_exec_call
         SUBDIALOG lib_cl_schedule.cl_schedule_select_show_history
         SUBDIALOG lib_cl_schedule.cl_schedule_show_history
 
         BEFORE DIALOG
            LET l_dialog = ui.DIALOG.getCurrent()
            CALL axmp440_get_buffer(l_dialog)
            #add-point:ui_dialog段before dialog
            {<point name="ui_dialog.before_dialog3"/>}
            #end add-point
 
         ON ACTION batch_execute
            LET g_action_choice = "batch_execute"
            ACCEPT DIALOG
 
         #add-point:ui_dialog段before_qbeclear
         {<point name="ui_dialog.before_qbeclear" mark="Y"/>}
         #end add-point
 
         ON ACTION qbeclear         
            CLEAR FORM
            INITIALIZE g_master.* TO NULL   #畫面變數清空
            INITIALIZE lc_param.* TO NULL   #傳遞參數變數清空
            #add-point:ui_dialog段qbeclear
            {<point name="ui_dialog.qbeclear"/>}
            #end add-point
 
         ON ACTION history_fill
            CALL cl_schedule_history_fill()
 
         ON ACTION close
            LET INT_FLAG = TRUE
            EXIT DIALOG
         
         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT DIALOG
 
         #add-point:ui_dialog段action
         {<point name="ui_dialog.more_action"/>}
         #end add-point
 
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM   
         INITIALIZE g_master.* TO NULL
         LET g_wc  = ' 1=2'
         LET g_action_choice = ""
         CALL axmp440_init()
         CONTINUE WHILE
      END IF
 
      #檢查批次設定是否有錯(或未設定完成)
      IF NOT cl_schedule_exec_check() THEN
         CONTINUE WHILE
      END IF
      
      LET lc_param.wc = g_master.wc    #把畫面上的wc傳遞到參數變數
      #請在下方的add-point內進行把畫面的輸入資料(g_master)轉換到傳遞參數變數(lc_param)的動作
      #add-point:ui_dialog段exit dialog
      {<point name="process.exit_dialog"/>}
      #end add-point
 
      LET ls_js = util.JSON.stringify(lc_param)  #r類使用g_master/p類使用lc_param
 
      IF INT_FLAG THEN
         LET INT_FLAG = FALSE
         EXIT WHILE
      ELSE
         IF g_chk_jobid THEN 
            LET g_jobid = g_schedule.gzpa001
         ELSE 
            LET g_jobid = cl_schedule_get_jobid(g_prog)
         END IF 
 
         #依照指定模式執行報表列印
         CASE 
            WHEN g_schedule.gzpa003 = "0"
                 CALL axmp440_process(ls_js)
 
            WHEN g_schedule.gzpa003 = "1"
                 LET ls_js = axmp440_transfer_argv(ls_js)
                 CALL cl_cmdrun(ls_js)
 
            WHEN g_schedule.gzpa003 = "2"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
 
            WHEN g_schedule.gzpa003 = "3"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
         END CASE  
 
         IF g_schedule.gzpa003 = "2" OR g_schedule.gzpa003 = "3" THEN 
            CALL cl_ask_confirm3("std-00014","") #設定完成
         END IF    
         LET g_schedule.gzpa003 = "0" #預設一開始 立即於前景執行
 
         #add-point:ui_dialog段after schedule
         {<point name="process.after_schedule"/>}
         #end add-point
 
         #欄位初始資訊 
         CALL cl_schedule_init_info("all",g_schedule.gzpa003) 
         LET gi_hiden_asign = FALSE 
         LET gi_hiden_exec = FALSE 
         LET gi_hiden_spec = FALSE 
         LET gi_hiden_exec_end = FALSE 
         CALL cl_schedule_hidden()
      END IF
   END WHILE
 
END FUNCTION
]]>
  </section>
</add_points>
