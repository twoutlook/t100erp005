<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="axmt640" std_prog="axmt640" erpver="1.0" module="AXM" ver="5" env="s" zone="t10prd" booking="N" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="F" status="u"/>
    <free_style value="N" status="u"/>
    <start_arg value="" status="u"/>
  </other>
  <point name="function.axmt640_get_col_default" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 單別預設欄位
# Date & Author..: 2014/05/28 By chenjing
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt640_get_col_default()
   LET g_xmep_m.xmepdocdt = s_aooi200_get_doc_default(g_site,'1',g_xmep_m.xmepdocno,'xmepdocdt',g_xmep_m.xmepdocdt)
   LET g_xmep_m.xmep001 = s_aooi200_get_doc_default(g_site,'1',g_xmep_m.xmepdocno,'xmep001',g_xmep_m.xmep001)
   LET g_xmep_m.xmep002 = s_aooi200_get_doc_default(g_site,'1',g_xmep_m.xmepdocno,'xmep002',g_xmep_m.xmep002)
   LET g_xmep_m.xmep003 = s_aooi200_get_doc_default(g_site,'1',g_xmep_m.xmepdocno,'xmep003',g_xmep_m.xmep003)
   LET g_xmep_m.xmep004 = s_aooi200_get_doc_default(g_site,'1',g_xmep_m.xmepdocno,'xmep004',g_xmep_m.xmep004)
   LET g_xmep_m.xmep005 = s_aooi200_get_doc_default(g_site,'1',g_xmep_m.xmepdocno,'xmep005',g_xmep_m.xmep005)
   LET g_xmep_m.xmep006 = s_aooi200_get_doc_default(g_site,'1',g_xmep_m.xmepdocno,'xmep006',g_xmep_m.xmep006)
   LET g_xmep_m.xmep007 = s_aooi200_get_doc_default(g_site,'1',g_xmep_m.xmepdocno,'xmep007',g_xmep_m.xmep007)
   LET g_xmep_m.xmep008 = s_aooi200_get_doc_default(g_site,'1',g_xmep_m.xmepdocno,'xmep008',g_xmep_m.xmep008)
   LET g_xmep_m.xmep009 = s_aooi200_get_doc_default(g_site,'1',g_xmep_m.xmepdocno,'xmep009',g_xmep_m.xmep009)
   LET g_xmep_m.xmep010 = s_aooi200_get_doc_default(g_site,'1',g_xmep_m.xmepdocno,'xmep010',g_xmep_m.xmep010)
   LET g_xmep_m.xmep011 = s_aooi200_get_doc_default(g_site,'1',g_xmep_m.xmepdocno,'xmep011',g_xmep_m.xmep011)
   LET g_xmep_m.xmep012 = s_aooi200_get_doc_default(g_site,'1',g_xmep_m.xmepdocno,'xmep012',g_xmep_m.xmep012)
   LET g_xmep_m.xmep013 = s_aooi200_get_doc_default(g_site,'1',g_xmep_m.xmepdocno,'xmep013',g_xmep_m.xmep013)
   CALL axmt640_xmep_desc()
   DISPLAY BY NAME g_xmep_m.xmep002,g_xmep_m.xmep005,g_xmep_m.xmep005_desc, 
       g_xmep_m.xmepdocdt,g_xmep_m.xmep003,g_xmep_m.xmep001,g_xmep_m.xmep001_desc,g_xmep_m.xmep004,g_xmep_m.xmep004_desc, 
       g_xmep_m.xmep006,g_xmep_m.xmep007,g_xmep_m.xmep008,g_xmep_m.xmep009,g_xmep_m.xmep010, 
       g_xmep_m.xmep011,g_xmep_m.xmep012,g_xmep_m.xmep013  
END FUNCTION]]>
  </point>
  <point name="function.axmt640_xmep_desc" order="2" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 單頭參考欄位说明
# Date & Author..: 2014/05/28 By chenjing
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt640_xmep_desc()
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xmep_m.xmep001
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='"||g_acc||"' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xmep_m.xmep001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xmep_m.xmep001_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xmep_m.xmep004
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2'  AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_xmep_m.xmep004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xmep_m.xmep004_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xmep_m.xmep005
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal003 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xmep_m.xmep005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xmep_m.xmep005_desc
END FUNCTION]]>
  </point>
  <point name="function.axmt640_xmep009_chk" order="3" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 時間欄位檢查
# Date & Author..: 2014/05/28 By chenjing
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt640_xmep009_chk(p_xmep009)
DEFINE l_xmep009         STRING
DEFINE l_xmep009_1       LIKE type_t.num5
DEFINE l_xmep009_2       LIKE type_t.num5
DEFINE l_xmep009_3       LIKE type_t.chr10
DEFINE l_xmep009_4       LIKE type_t.chr10
DEFINE l_xmep009_5       LIKE type_t.num5
DEFINE l_xmep009_6       LIKE type_t.chr10
DEFINE p_xmep009         LIKE xmep_t.xmep009
DEFINE r_success         LIKE type_t.num5
DEFINE r_xmep009         LIKE xmep_t.xmep009

   LET r_success = FALSE
   LET r_xmep009 = p_xmep009
   IF NOT cl_null(p_xmep009) THEN
      LET l_xmep009 = p_xmep009
      LET l_xmep009_1 = l_xmep009.subString(1,2)
      LET l_xmep009_2 = l_xmep009.subString(4,5)
      LET l_xmep009_5 = l_xmep009.subString(7,l_xmep009.getLength())
      IF l_xmep009_1 >24 OR l_xmep009_2 >60 OR l_xmep009_5 >60 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'aoo-00283'
         LET g_errparam.extend = p_xmep009
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN r_success,r_xmep009
      END IF
      IF l_xmep009_1 < 10 THEN
         LET l_xmep009_3 = l_xmep009_1
         LET l_xmep009_3 = '0', l_xmep009_3
      ELSE
         LET l_xmep009_3 = l_xmep009_1
      END IF
      IF l_xmep009_2 < 10 THEN
         LET l_xmep009_4 = l_xmep009_2
         LET l_xmep009_4 = '0', l_xmep009_4
      ELSE
         LET l_xmep009_4 = l_xmep009_2
      END IF
      IF l_xmep009_5 < 10 THEN
         LET l_xmep009_6 = l_xmep009_5  
         LET l_xmep009_6 = '0', l_xmep009_6
      ELSE
         LET l_xmep009_6 = l_xmep009_5
      END IF
      IF cl_null(l_xmep009_1) THEN
         LET l_xmep009_3 = '00'
      END IF
      IF cl_null(l_xmep009_2) THEN
         LET l_xmep009_4 = '00'
      END IF
      IF cl_null(l_xmep009_5) THEN
         LET l_xmep009_6 = '00'
      END IF
      LET r_xmep009 = l_xmep009_3,':',l_xmep009_4,':',l_xmep009_6
   END IF
   
   LET r_success = TRUE
   RETURN r_success,r_xmep009

END FUNCTION]]>
  </point>
  <point name="function.axmt640_xmep008_chk" order="4" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
#进厂日期时间栏位检查
PRIVATE FUNCTION axmt640_xmep008_chk()
DEFINE r_success         LIKE type_t.num5
DEFINE l_xmeq003_min     LIKE xmeq_t.xmeq003
DEFINE l_xmeq004_min     LIKE xmeq_t.xmeq004
   
   LET r_success = FALSE
   IF NOT cl_null(g_xmep_m.xmep008) AND NOT cl_null(g_xmep_m.xmep012) AND NOT cl_null(g_xmep_m.xmep009) AND NOT cl_null(g_xmep_m.xmep013) THEN
      IF g_xmep_m.xmep008 = g_xmep_m.xmep012 THEN
         IF g_xmep_m.xmep009 > g_xmep_m.xmep013 THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'axm-00344'
            LET g_errparam.extend = g_xmep_m.xmep008
            LET g_errparam.popup = TRUE
            CALL cl_err()

            RETURN r_success
         END IF
      END IF
   END IF
   #进厂日期时间不可大于厂中复测最小日期时间
   SELECT MIN(xmeq003),MIN(xmeq004) INTO l_xmeq003_min,l_xmeq004_min FROM xmeq_t 
    WHERE xmeqent = g_enterprise AND xmeqsite = g_site AND xmeqdocno = g_xmep_m.xmepdocno
      AND xmeq003 = (SELECT MIN(xmeq003) FROM xmeq_t 
                      WHERE xmeqent = g_enterprise AND xmeqsite = g_site AND xmeqdocno = g_xmep_m.xmepdocno)
   IF NOT cl_null(l_xmeq003_min) THEN
      IF g_xmep_m.xmep008 > l_xmeq003_min THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'axm-00345'
         LET g_errparam.extend = g_xmep_m.xmep008
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN r_success
      END IF
      IF g_xmep_m.xmep008 = l_xmeq003_min THEN
         IF NOT cl_null(g_xmep_m.xmep009) AND NOT cl_null(l_xmeq004_min) AND g_xmep_m.xmep009 > l_xmeq004_min THEN
            INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'axm-00345'
         LET g_errparam.extend = g_xmep_m.xmep008
         LET g_errparam.popup = TRUE
         CALL cl_err()

            RETURN r_success
         END IF
      END IF
   END IF
   
   LET r_success = TRUE
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.axmt640_xmep012_chk" order="5" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
#出厂日期时间栏位检查
PRIVATE FUNCTION axmt640_xmep012_chk()
DEFINE r_success         LIKE type_t.num5
DEFINE l_xmeq003_max     LIKE xmeq_t.xmeq003
DEFINE l_xmeq004_max     LIKE xmeq_t.xmeq004
   
   LET r_success = FALSE
   IF NOT cl_null(g_xmep_m.xmep008) AND NOT cl_null(g_xmep_m.xmep012) AND NOT cl_null(g_xmep_m.xmep009) AND NOT cl_null(g_xmep_m.xmep013) THEN
      IF g_xmep_m.xmep008 = g_xmep_m.xmep012 THEN
         IF g_xmep_m.xmep009 > g_xmep_m.xmep013 THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'axm-00344'
            LET g_errparam.extend = g_xmep_m.xmep012
            LET g_errparam.popup = TRUE
            CALL cl_err()

            RETURN r_success
         END IF
      END IF
   END IF
   #出厂日期时间不可小于厂中复测最小日期时间
   SELECT MAX(xmeq003),MAX(xmeq004) INTO l_xmeq003_max,l_xmeq004_max FROM xmeq_t 
    WHERE xmeqent = g_enterprise AND xmeqsite = g_site AND xmeqdocno = g_xmep_m.xmepdocno
      AND xmeq003 = (SELECT MAX(xmeq003) FROM xmeq_t 
                      WHERE xmeqent = g_enterprise AND xmeqsite = g_site AND xmeqdocno = g_xmep_m.xmepdocno)
   IF NOT cl_null(l_xmeq003_max) THEN
      IF g_xmep_m.xmep012 < l_xmeq003_max THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'axm-00346'
         LET g_errparam.extend = g_xmep_m.xmep012
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN r_success
      END IF
      IF g_xmep_m.xmep012 = l_xmeq003_max THEN
         IF NOT cl_null(g_xmep_m.xmep013) AND NOT cl_null(l_xmeq004_max) AND g_xmep_m.xmep013 < l_xmeq004_max THEN
            INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'axm-00346'
         LET g_errparam.extend = g_xmep_m.xmep012
         LET g_errparam.popup = TRUE
         CALL cl_err()

            RETURN r_success
         END IF
      END IF
   END IF
   
   LET r_success = TRUE
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.axmt640_xmeq003_chk" order="6" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
#厂中复测日期时间栏位检查
PRIVATE FUNCTION axmt640_xmeq003_chk()
DEFINE r_success         LIKE type_t.num5
   
   LET r_success = FALSE
   IF NOT cl_null(g_xmep_m.xmep008) AND g_xmeq_d[l_ac].xmeq003 < g_xmep_m.xmep008 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'axm-00347'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN r_success
   END IF
   IF NOT cl_null(g_xmep_m.xmep012) AND g_xmeq_d[l_ac].xmeq003 > g_xmep_m.xmep012 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'axm-00347'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN r_success
   END IF
   IF NOT cl_null(g_xmep_m.xmep008) AND NOT cl_null(g_xmep_m.xmep009) AND NOT cl_null(g_xmeq_d[l_ac].xmeq003) AND NOT cl_null(g_xmeq_d[l_ac].xmeq004) THEN
      IF g_xmep_m.xmep008 = g_xmeq_d[l_ac].xmeq003 THEN
         IF g_xmep_m.xmep009 > g_xmeq_d[l_ac].xmeq004 THEN
            INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'axm-00347'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

            RETURN r_success
         END IF
      END IF
   END IF
   IF NOT cl_null(g_xmep_m.xmep012) AND NOT cl_null(g_xmep_m.xmep013) AND NOT cl_null(g_xmeq_d[l_ac].xmeq003) AND NOT cl_null(g_xmeq_d[l_ac].xmeq004) THEN
      IF g_xmep_m.xmep012 = g_xmeq_d[l_ac].xmeq003 THEN
         IF g_xmep_m.xmep013 < g_xmeq_d[l_ac].xmeq004 THEN
            INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'axm-00347'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

            RETURN r_success
         END IF
      END IF
   END IF
   
   LET r_success = TRUE
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.axmt640_qrystr" order="7" ver="5" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 串查單號
# Memo...........:
# Usage..........: CALL axmt640_qrystr(p_docno)
# Input parameter: p_docno   查詢單號
# Date & Author..: 2015/05/04 By Shiun
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt640_qrystr(p_docno)
   DEFINE p_docno    LIKE xmdk_t.xmdkdocno
   DEFINE l_slip     LIKE oobal_t.oobal002
   DEFINE l_prog     LIKE oobx_t.oobx004
   DEFINE l_success  LIKE type_t.num5
   DEFINE ls_js      STRING
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   #抓取單據別
   LET l_slip = ''
   LET l_prog = ''
   IF NOT cl_null(p_docno) THEN
      CALL s_aooi200_get_slip(p_docno) RETURNING l_success,l_slip
      IF NOT cl_null(l_slip) THEN
         #抓取程式名稱
         SELECT oobx004 INTO l_prog
           FROM oobx_t
          WHERE oobxent = g_enterprise
            AND oobx001 = l_slip
      END IF
      IF NOT cl_null(l_prog) THEN
         INITIALIZE la_param.* TO NULL
         LET la_param.prog     = l_prog
         LET la_param.param[1] = p_docno
         LET ls_js = util.JSON.stringify(la_param)
         CALL cl_cmdrun_wait(ls_js)
      END IF
   END IF
END FUNCTION]]>
  </point>
  <point name="browser_fill.before_foreach" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_wc = g_wc, " AND xmepsite = '",g_site,"' "
      LET l_wc  = g_wc.trim()]]>
  </point>
  <point name="construct.c.page1.xmeq002" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmeq002  #顯示到畫面上
            NEXT FIELD xmeq002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.xmep001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_acc
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmep001  #顯示到畫面上
            NEXT FIELD xmep001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.xmep002" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xmendocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmep002  #顯示到畫面上
            NEXT FIELD xmep002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.xmep004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            IF g_xmep_m.xmep005 IS NULL THEN 
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_ooag001()                           #呼叫開窗
               DISPLAY g_qryparam.return1 TO xmep004  #顯示到畫面上
               NEXT FIELD xmep004                     #返回原欄位
            ELSE
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.arg1 = g_xmep_m.xmep005
               CALL q_pmaj002()                           #呼叫開窗
               DISPLAY g_qryparam.return1 TO xmep004  #顯示到畫面上
               NEXT FIELD xmep004             
            END IF

]]>
  </point>
  <point name="construct.c.xmep005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmep005  #顯示到畫面上
            NEXT FIELD xmep005                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.xmep007" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmep007  #顯示到畫面上
            NEXT FIELD xmep007                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.xmep011" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmep011  #顯示到畫面上
            NEXT FIELD xmep011                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.xmepcnfid" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmepcnfid  #顯示到畫面上
            NEXT FIELD xmepcnfid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.xmepcrtdp" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmepcrtdp  #顯示到畫面上
            NEXT FIELD xmepcrtdp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.xmepcrtid" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmepcrtid  #顯示到畫面上
            NEXT FIELD xmepcrtid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.xmepdocno" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xmepdocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmepdocno  #顯示到畫面上
            NEXT FIELD xmepdocno                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.xmepmodid" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmepmodid  #顯示到畫面上
            NEXT FIELD xmepmodid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.xmepowndp" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmepowndp  #顯示到畫面上
            NEXT FIELD xmepowndp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.xmepownid" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmepownid  #顯示到畫面上
            NEXT FIELD xmepownid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.xmeppstid" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmeppstid  #顯示到畫面上
            NEXT FIELD xmeppstid                     #返回原欄位
    

]]>
  </point>
  <point name="delete.head.a_delete" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      IF NOT s_aooi200_del_docno(g_xmep_m.xmepdocno,g_xmep_m.xmepdocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
      
      IF NOT s_aooi360_del('6','axmt640',g_xmep_m.xmepdocno,'','','','','','','','','4') THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF]]>
  </point>
  <point name="fetch.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_xmep_m.xmepstus != 'N' THEN
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   ELSE
      CALL cl_set_act_visible("modify,delete,modify_detail",TRUE)
   END IF]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE g_acc          LIKE gzcb_t.gzcb007]]>
  </point>
  <point name="input.a.page1.xmeq001" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmeq_d[l_ac].xmeq001) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page1.xmeq002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmeq_d[l_ac].xmeq002) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooca001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

]]>
  </point>
  <point name="input.a.page1.xmeq003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmeq_d[l_ac].xmeq003) AND (cl_null(g_xmeq_d_t.xmeq003) OR g_xmeq_d[l_ac].xmeq003 != g_xmeq_d_t.xmeq003) THEN
               IF NOT cl_null(g_xmep_m.xmepdocdt) AND g_xmep_m.xmepdocdt > g_xmeq_d[l_ac].xmeq003 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'axm-00343'
                  LET g_errparam.extend = g_xmeq_d[l_ac].xmeq003
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_xmeq_d[l_ac].xmeq003 = g_xmeq_d_t.xmeq003
                  NEXT FIELD CURRENT
               END IF
            END IF
            IF NOT axmt640_xmeq003_chk() THEN
               LET g_xmeq_d[l_ac].xmeq003 = g_xmeq_d_t.xmeq003
               NEXT FIELD CURRENT
            END IF]]>
  </point>
  <point name="input.a.page1.xmeq004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmeq_d[l_ac].xmeq004) AND (cl_null(g_xmeq_d_t.xmeq004) OR g_xmeq_d[l_ac].xmeq004 != g_xmeq_d_t.xmeq004) THEN
               CALL axmt640_xmep009_chk(g_xmeq_d[l_ac].xmeq004) RETURNING l_success,g_xmeq_d[l_ac].xmeq004
               IF NOT l_success THEN
                  LET g_xmeq_d[l_ac].xmeq004 = g_xmeq_d_t.xmeq004
                  NEXT FIELD xmeq004
               ELSE
                  IF NOT axmt640_xmeq003_chk() THEN
                     LET g_xmeq_d[l_ac].xmeq004 = g_xmeq_d_t.xmeq004
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF    ]]>
  </point>
  <point name="input.a.page1.xmeqseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xmep_m.xmepdocno IS NOT NULL AND g_xmeq_d[g_detail_idx].xmeqseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmep_m.xmepdocno != g_xmepdocno_t OR g_xmeq_d[g_detail_idx].xmeqseq != g_xmeq_d_t.xmeqseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmeq_t WHERE "||"xmeqent = '" ||g_enterprise|| "' AND "||"xmeqdocno = '"||g_xmep_m.xmepdocno ||"' AND "|| "xmeqseq = '"||g_xmeq_d[g_detail_idx].xmeqseq ||"'",'std-00004',0) THEN 
                     LET g_xmeq_d[g_detail_idx].xmeqseq = g_xmeq_d_t.xmeqseq
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.xmep001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL axmt640_xmep_desc()
            IF NOT cl_null(g_xmep_m.xmep001) AND (cl_null(g_xmep_m_t.xmep001) OR g_xmep_m.xmep001 != g_xmep_m_t.xmep001) THEN
               CALL s_azzi650_chk_exist(g_acc,g_xmep_m.xmep001) RETURNING l_success
               IF NOT l_success THEN
                  LET g_xmep_m.xmep001 = g_xmep_m_t.xmep001
                  CALL axmt640_xmep_desc()
                  NEXT FIELD xmep001
               END IF

               #檢核輸入的理由碼是否在單據別限制範圍內，若不在限制內則不允許使用此理由碼
               CALL s_control_chk_doc('8',g_xmep_m.xmepdocno,g_xmep_m.xmep001,'','','','') RETURNING l_success,l_flag
               IF NOT l_success THEN
                  LET g_xmep_m.xmep001 = g_xmep_m_t.xmep001
                  CALL axmt640_xmep_desc()
                  NEXT FIELD xmep001
               ELSE
                  IF NOT l_flag THEN
                     LET g_xmep_m.xmep001 = g_xmep_m_t.xmep001
                     CALL axmt640_xmep_desc()
                     NEXT FIELD xmep001
                  END IF
               END IF
               CALL axmt640_xmep_desc()
            END IF]]>
  </point>
  <point name="input.a.xmep002" order="" ver="4" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmep_m.xmep002) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmep_m.xmep002
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_xmendocno") THEN
                  SELECT xmen004,xmen005,xmen007 INTO g_xmep_m.xmep005,g_xmep_m.xmep003,g_xmep_m.xmep004
                    FROM xmen_t
                   WHERE xmenent = g_enterprise AND xmensite = g_site AND xmendocno = g_xmep_m.xmep002
                   DISPLAY BY NAME g_xmep_m.xmep005,g_xmep_m.xmep003,g_xmep_m.xmep004
                   CALL axmt640_xmep_desc()
               ELSE
                  #檢查失敗時後續處理
                  LET g_xmep_m.xmep002 = g_xmep_m_t.xmep002
                  NEXT FIELD CURRENT
               END IF          
            END IF 
            CALL axmt640_set_entry(p_cmd)
            CALL axmt640_set_no_entry(p_cmd)
]]>
  </point>
  <point name="input.a.xmep004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL axmt640_xmep_desc()
            IF g_xmep_m.xmep005 IS NULL THEN 
               IF NOT cl_null(g_xmep_m.xmep004) THEN 
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmep_m.xmep004
                  IF NOT cl_chk_exist("v_ooag001") THEN
                     LET g_xmep_m.xmep004 = g_xmep_m_t.xmep004
                     CALL axmt640_xmep_desc()
                  END IF
               END IF 
            ELSE
               IF NOT cl_null(g_xmep_m.xmep004) THEN 
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmep_m.xmep005
                  LET g_chkparam.arg2 = g_xmep_m.xmep004                                   
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_pmaj002") THEN
                     #檢查成功時後續處理
                  ELSE
                     LET g_xmep_m.xmep004 = g_xmep_m_t.xmep004
                     CALL axmt640_xmep_desc()
                  END IF
               END IF                  
            END IF]]>
  </point>
  <point name="input.a.xmep005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL axmt640_xmep_desc()
            IF NOT cl_null(g_xmep_m.xmep005) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmep_m.xmep005
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_pmaa001_1") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_xmep_m.xmep005 = g_xmep_m_t.xmep005
                  CALL axmt640_xmep_desc() 
                  NEXT FIELD CURRENT
               END IF            
            END IF             
]]>
  </point>
  <point name="input.a.xmep006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmep_m.xmep006) AND NOT cl_null(g_xmep_m.xmep010) THEN 
               LET g_xmep_m.xmep014 = g_xmep_m.xmep006 - g_xmep_m.xmep010
               DISPLAY BY NAME g_xmep_m.xmep014
            END IF 

]]>
  </point>
  <point name="input.a.xmep007" order="" ver="4" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmep_m.xmep007) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數

                LET g_chkparam.arg1 = g_xmep_m.xmep007 
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooca001") THEN
                 #判斷單位是否和KG有轉換率
                  CALL s_aimi190_get_convert('',g_xmep_m.xmep007,'KG') RETURNING l_success,l_rate                 
                  IF l_success = FALSE THEN
                     LET g_xmep_m.xmep007 = g_xmep_m_t.xmep007
                     NEXT FIELD CURRENT
                  ELSE
                     LET g_xmep_m.xmep011 = g_xmep_m.xmep007
                     DISPLAY BY NAME g_xmep_m.xmep011      
                     UPDATE xmeq_t SET xmeq002 =  g_xmep_m.xmep007
                                 WHERE xmeqent = g_enterprise
                                   AND xmeqdocno = g_xmep_m.xmepdocno
                     CALL axmt640_b_fill()  
                     DISPLAY ARRAY g_xmeq_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) 
                        BEFORE DISPLAY 
                           EXIT DISPLAY
                     END DISPLAY
                  END IF                  
               ELSE
                  #檢查失敗時後續處理
                  LET g_xmep_m.xmep007 = g_xmep_m_t.xmep007
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

]]>
  </point>
  <point name="input.a.xmep008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmep_m.xmep008) AND (cl_null(g_xmep_m_t.xmep008) OR g_xmep_m.xmep008 != g_xmep_m_t.xmep008) THEN
               IF NOT cl_null(g_xmep_m.xmepdocdt) AND g_xmep_m.xmepdocdt > g_xmep_m.xmep008 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'axm-00343'
                  LET g_errparam.extend = g_xmep_m.xmep008
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_xmep_m.xmep008 = g_xmep_m_t.xmep008
                  NEXT FIELD CURRENT
               END IF
               IF NOT cl_null(g_xmep_m.xmep012) AND g_xmep_m.xmep012 < g_xmep_m.xmep008 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'axm-00344'
                  LET g_errparam.extend = g_xmep_m.xmep008
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_xmep_m.xmep008 = g_xmep_m_t.xmep008
                  NEXT FIELD CURRENT
               END IF
            END IF
            
            IF NOT axmt640_xmep008_chk() THEN
               LET g_xmep_m.xmep008 = g_xmep_m_t.xmep008
               NEXT FIELD CURRENT
            END IF
            ]]>
  </point>
  <point name="input.a.xmep009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmep_m.xmep009) AND (cl_null(g_xmep_m_t.xmep009) OR g_xmep_m.xmep009 != g_xmep_m_t.xmep009) THEN
               CALL axmt640_xmep009_chk(g_xmep_m.xmep009) RETURNING l_success,g_xmep_m.xmep009
               IF NOT l_success THEN
                  LET g_xmep_m.xmep009 = g_xmep_m_t.xmep009
                  NEXT FIELD xmep009
               ELSE
                  IF NOT axmt640_xmep008_chk() THEN
                     LET g_xmep_m.xmep009 = g_xmep_m_t.xmep009
                     NEXT FIELD CURRENT
                  END IF
                  DISPLAY BY NAME g_xmep_m.xmep009
               END IF
            END IF               ]]>
  </point>
  <point name="input.a.xmep010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmep_m.xmep006) AND NOT cl_null(g_xmep_m.xmep010) THEN 
               LET g_xmep_m.xmep014 = g_xmep_m.xmep006 - g_xmep_m.xmep010
               DISPLAY BY NAME g_xmep_m.xmep014
            END IF 
]]>
  </point>
  <point name="input.a.xmep011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmep_m.xmep011) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooca001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

]]>
  </point>
  <point name="input.a.xmep012" order="" ver="4" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmep_m.xmep012) THEN
               IF NOT cl_null(g_xmep_m.xmepdocdt) AND g_xmep_m.xmepdocdt > g_xmep_m.xmep012 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'axm-00343'
                  LET g_errparam.extend = g_xmep_m.xmep012
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_xmep_m.xmep012 = g_xmep_m_t.xmep012
                  NEXT FIELD CURRENT
               END IF
               IF NOT cl_null(g_xmep_m.xmep008) AND g_xmep_m.xmep012 < g_xmep_m.xmep008 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'axm-00344'
                  LET g_errparam.extend = g_xmep_m.xmep012
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_xmep_m.xmep012 = g_xmep_m_t.xmep012
                  NEXT FIELD CURRENT
               END IF
               IF NOT axmt640_xmep012_chk() THEN
                  LET g_xmep_m.xmep012 = g_xmep_m_t.xmep012
                  NEXT FIELD CURRENT
               END IF
            END IF
            
            ]]>
  </point>
  <point name="input.a.xmep013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmep_m.xmep013) AND (cl_null(g_xmep_m_t.xmep013) OR g_xmep_m.xmep013 != g_xmep_m_t.xmep013) THEN
               CALL axmt640_xmep009_chk(g_xmep_m.xmep013) RETURNING l_success,g_xmep_m.xmep013
               IF NOT l_success THEN
                  LET g_xmep_m.xmep013 = g_xmep_m_t.xmep013
                  NEXT FIELD xmep013
               ELSE
                  IF NOT axmt640_xmep012_chk() THEN
                     LET g_xmep_m.xmep013 = g_xmep_m_t.xmep013
                     NEXT FIELD CURRENT
                  END IF
                  DISPLAY BY NAME g_xmep_m.xmep013
               END IF
            END IF ]]>
  </point>
  <point name="input.a.xmepdocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmep_m.xmepdocdt) AND (cl_null(g_xmep_m_t.xmepdocdt) OR g_xmep_m.xmepdocdt != g_xmep_m_t.xmepdocdt) THEN
               IF NOT cl_null(g_xmep_m.xmep008) AND g_xmep_m.xmepdocdt >g_xmep_m.xmep008 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'axm-00343'
                  LET g_errparam.extend = g_xmep_m.xmepdocdt
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_xmep_m.xmepdocdt = g_xmep_m_t.xmepdocdt
                  NEXT FIELD CURRENT
               END IF
            END IF]]>
  </point>
  <point name="input.a.xmepdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            CALL s_aooi200_get_slip_desc(g_xmep_m.xmepdocno) RETURNING g_xmep_m.oobxl003
            DISPLAY BY NAME g_xmep_m.oobxl003
            IF  NOT cl_null(g_xmep_m.xmepdocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xmep_m.xmepdocno != g_xmepdocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmep_t WHERE "||"xmepent = '" ||g_enterprise|| "' AND "||"xmepdocno = '"||g_xmep_m.xmepdocno ||"'",'std-00004',0) THEN 
                     LET g_xmep_m.xmepdocno = g_xmepdocno_t
                     CALL s_aooi200_get_slip_desc(g_xmep_m.xmepdocno) RETURNING g_xmep_m.oobxl003
                     DISPLAY BY NAME g_xmep_m.oobxl003
                     NEXT FIELD CURRENT
                  END IF
               END IF
               IF NOT s_aooi200_chk_slip(g_site,'',g_xmep_m.xmepdocno,g_prog) THEN
                  LET g_xmep_m.xmepdocno = g_xmepdocno_t
                  CALL s_aooi200_get_slip_desc(g_xmep_m.xmepdocno) RETURNING g_xmep_m.oobxl003
                  DISPLAY BY NAME g_xmep_m.oobxl003
                  NEXT FIELD CURRENT
               END IF   
               CALL s_control_chk_doc('1',g_xmep_m.xmepdocno,'3',g_user,g_dept,'','') RETURNING l_success,l_flag
               IF NOT l_success THEN 
                  LET g_xmep_m.xmepdocno = g_xmepdocno_t
                  CALL s_aooi200_get_slip_desc(g_xmep_m.xmepdocno) RETURNING g_xmep_m.oobxl003
                  DISPLAY BY NAME g_xmep_m.oobxl003
                  NEXT FIELD CURRENT
               ELSE
                  IF NOT l_flag THEN
                     LET g_xmep_m.xmepdocno = g_xmepdocno_t
                     CALL s_aooi200_get_slip_desc(g_xmep_m.xmepdocno) RETURNING g_xmep_m.oobxl003
                     DISPLAY BY NAME g_xmep_m.oobxl003
                     NEXT FIELD CURRENT
                  END IF
               END IF 
               CALL axmt640_get_col_default()                
            END IF


]]>
  </point>
  <point name="input.b.xmep003" order="" ver="4" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.b.xmep004" order="" ver="4" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.b.xmep005" order="" ver="4" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.b.xmep009" order="" ver="4" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#            IF cl_null(g_xmep_m.xmep008) THEN
#               NEXT FIELD xmep008
#            END IF]]>
  </point>
  <point name="input.b.xmep013" order="" ver="4" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#            IF cl_null(g_xmep_m.xmep012) THEN
#               NEXT FIELD xmep012
#            END IF]]>
  </point>
  <point name="input.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_errshow = 1]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmeq_d[l_ac].xmeqsite = g_site
            SELECT MAX(xmeqseq)+1 INTO g_xmeq_d[l_ac].xmeqseq FROM xmeq_t
               WHERE xmeqent = g_enterprise AND xmeqdocno = g_xmep_m.xmepdocno
            IF cl_null(g_xmeq_d[l_ac].xmeqseq) OR g_xmeq_d[l_ac].xmeqseq = 0 THEN
               LET g_xmeq_d[l_ac].xmeqseq = 1
            END IF
            LET g_xmeq_d[l_ac].xmeq002 = g_xmep_m.xmep007]]>
  </point>
  <point name="input.c.page1.xmeq002" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmeq_d[l_ac].xmeq002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooca001_1()                                #呼叫開窗

            LET g_xmeq_d[l_ac].xmeq002 = g_qryparam.return1              

            DISPLAY g_xmeq_d[l_ac].xmeq002 TO xmeq002              #

            NEXT FIELD xmeq002                          #返回原欄位

]]>
  </point>
  <point name="input.c.xmep001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmep_m.xmep001             #給予default值
            LET g_qryparam.default2 = "" #g_xmep_m.oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = g_acc

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_xmep_m.xmep001 = g_qryparam.return1              
            #LET g_xmep_m.oocq002 = g_qryparam.return2 
            DISPLAY g_xmep_m.xmep001 TO xmep001              #
            #DISPLAY g_xmep_m.oocq002 TO oocq002 #應用分類碼
            NEXT FIELD xmep001                          #返回原欄位

]]>
  </point>
  <point name="input.c.xmep002" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmep_m.xmep002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_xmendocno()                                #呼叫開窗

            LET g_xmep_m.xmep002 = g_qryparam.return1              

            DISPLAY g_xmep_m.xmep002 TO xmep002              #

            NEXT FIELD xmep002                          #返回原欄位

]]>
  </point>
  <point name="input.c.xmep004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            IF g_xmep_m.xmep005 IS NULL THEN 
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               
               LET g_qryparam.default1 = g_xmep_m.xmep004             #給予default值
               
               #給予arg
               LET g_qryparam.arg1 = "" #
               
               
               CALL q_ooag001()                                #呼叫開窗
               
               LET g_xmep_m.xmep004 = g_qryparam.return1              
               
               DISPLAY g_xmep_m.xmep004 TO xmep004              #
               
               NEXT FIELD xmep004                          #返回原欄位
            ELSE
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               
               LET g_qryparam.default1 = g_xmep_m.xmep004             #給予default值
               
               #給予arg
               LET g_qryparam.arg1 = g_xmep_m.xmep005
               
               
               CALL q_pmaj002()                                #呼叫開窗
               
               LET g_xmep_m.xmep004 = g_qryparam.return1              
               
               DISPLAY g_xmep_m.xmep004 TO xmep004              #
               
               NEXT FIELD xmep004                          #返回原欄位            
            END IF
 ]]>
  </point>
  <point name="input.c.xmep005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmep_m.xmep005             #給予default值
            
            CALL q_pmaa001_3()                                #呼叫開窗

            LET g_xmep_m.xmep005 = g_qryparam.return1              

            DISPLAY g_xmep_m.xmep005 TO xmep005              #

            NEXT FIELD xmep005                          #返回原欄位

]]>
  </point>
  <point name="input.c.xmep007" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmep_m.xmep007             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooca001_1()                                #呼叫開窗

            LET g_xmep_m.xmep007 = g_qryparam.return1              

            DISPLAY g_xmep_m.xmep007 TO xmep007              #

            NEXT FIELD xmep007                          #返回原欄位

]]>
  </point>
  <point name="input.c.xmep011" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmep_m.xmep011             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooca001_1()                                #呼叫開窗

            LET g_xmep_m.xmep011 = g_qryparam.return1              

            DISPLAY g_xmep_m.xmep011 TO xmep011              #

            NEXT FIELD xmep011                          #返回原欄位

]]>
  </point>
  <point name="input.c.xmepdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmep_m.xmepdocno             #給予default值

            SELECT ooef004 INTO l_ooef004 FROM ooef_t
             WHERE ooef001 = g_site
               AND ooefent  = g_enterprise
            LET g_qryparam.arg1 = l_ooef004 
            LET g_qryparam.arg2 = g_prog 
            
            CALL q_ooba002_1()                                #呼叫開窗

            LET g_xmep_m.xmepdocno = g_qryparam.return1              

            DISPLAY g_xmep_m.xmepdocno TO xmepdocno              #

            NEXT FIELD xmepdocno                          #返回原欄位

]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE  l_success             LIKE type_t.num5
   DEFINE  l_flag                LIKE type_t.chr1
   DEFINE  l_ooef004             LIKE ooef_t.ooef004
   DEFINE  l_rate                LIKE inaj_t.inaj014]]>
  </point>
  <point name="input.head.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL s_aooi200_gen_docno(g_site,g_xmep_m.xmepdocno,g_xmep_m.xmepdocdt,g_prog) RETURNING l_success,g_xmep_m.xmepdocno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apm-00003'
                  LET g_errparam.extend = g_xmep_m.xmepdocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_xmep_m.xmepdocno = g_xmepdocno_t
                  NEXT FIELD xmepdocno
               END IF
               IF cl_null(g_xmep_m.xmep005) THEN 
                  LET g_xmep_m.xmep005 = ' '
               END IF 
               IF cl_null(g_xmep_m.xmep003) THEN 
                  LET g_xmep_m.xmep003 = ' '
               END IF ]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      LET g_xmep_m.xmepsite = g_site
      LET g_xmep_m.xmepdocdt = g_today
      LET g_xmep_m.xmep004 = g_user
      CALL axmt640_xmep_desc()
      LET g_xmep_m_t.* = g_xmep_m.*]]>
  </point>
  <point name="main.init" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_acc = ''
   #抓取[T:系統分類值檔].[C:系統分類碼]=24且[T:系統分類值檔].[C:系統分類碼]=g_prog 的[T:系統分類值檔].[C:參考欄位>
   SELECT gzcb004 INTO g_acc FROM gzcb_t WHERE gzcb001 = '24' AND gzcb002 = g_prog]]>
  </point>
  <point name="menu.memo" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL aooi360_02('6','axmt640',g_xmep_m.xmepdocno,'','','','','','','','','')]]>
  </point>
  <point name="menu.prog_xmep002" order="" ver="5" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[               #應用 a41 樣板自動產生(Version:2)
               #使用JSON格式組合參數與作業編號(串查)
               CALL axmt640_qrystr(g_xmep_m.xmep002)]]>
  </point>
  <point name="menu.xmep_memo" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL aooi360_02('6','axmt640',g_xmep_m.xmepdocno,'','','','','','','','','')]]>
  </point>
  <point name="reproduce.head.b_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_xmep_m.oobxl003 = ''
   DISPLAY BY NAME g_xmep_m.oobxl003
   LET g_xmep_m.xmepdocdt = g_today
   LET g_xmep_m.xmep004 = g_user
   CALL axmt640_xmep_desc()
   LET g_xmep_m.xmepcnfid = ""
   LET g_xmep_m.xmepcnfdt = ""]]>
  </point>
  <point name="set_act_no_visible.set_act_no_visible" order="" ver="4" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #應用 a63 樣板自動產生(Version:1)
   IF g_xmep_m.xmepstus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF

]]>
  </point>
  <point name="set_entry.after_control" order="" ver="4" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("xmep005,xmep003,xmep004",TRUE)     ]]>
  </point>
  <point name="set_entry_b.set_entry_b" order="" ver="4" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="set_no_entry.after_control" order="" ver="4" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
   IF NOT cl_null(g_xmep_m.xmep002) THEN
      CALL cl_set_comp_entry("xmep005,xmep003,xmep004",FALSE)  
   END IF]]>
  </point>
  <point name="show.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_oobal002     LIKE oobal_t.oobal002
   DEFINE l_flag          LIKE type_t.num5]]>
  </point>
  <point name="show.head.reference" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL s_aooi200_get_slip(g_xmep_m.xmepdocno) RETURNING l_flag,l_oobal002
            CALL s_aooi200_get_slip_desc(l_oobal002) RETURNING g_xmep_m.oobxl003
            DISPLAY BY NAME g_xmep_m.oobxl003
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xmep_m.xmep001
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='"||g_acc||"' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xmep_m.xmep001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xmep_m.xmep001_desc
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_xmep_m.xmepownid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_xmep_m.xmepownid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_xmep_m.xmepownid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_xmep_m.xmepowndp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_xmep_m.xmepowndp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_xmep_m.xmepowndp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_xmep_m.xmepcrtid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_xmep_m.xmepcrtid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_xmep_m.xmepcrtid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_xmep_m.xmepcrtdp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_xmep_m.xmepcrtdp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_xmep_m.xmepcrtdp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_xmep_m.xmepmodid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_xmep_m.xmepmodid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_xmep_m.xmepmodid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_xmep_m.xmepcnfid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_xmep_m.xmepcnfid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_xmep_m.xmepcnfid_desc

           # INITIALIZE g_ref_fields TO NULL
           # LET g_ref_fields[1] = g_xmep_m.xmeppstid
           # CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
           # LET g_xmep_m.xmeppstid_desc = '', g_rtn_fields[1] , ''
           # DISPLAY BY NAME g_xmep_m.xmeppstid_desc
]]>
  </point>
  <point name="statechange.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[  # IF g_xmep_m.xmepstus = "C" THEN
  #    RETURN
  # END IF]]>
  </point>
  <point name="statechange.before_menu" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL cl_set_act_visible("open,confirmed,unconfirmed,invalid,reconciliate,unreconciliate",TRUE)

      CASE g_xmep_m.xmepstus
         WHEN "N"
            CALL cl_set_act_visible("unconfirmed,reconciliate,unreconciliate",FALSE)
         WHEN "Y"
            CALL cl_set_act_visible("confirmed,invalid,unreconciliate",FALSE)
         WHEN "J"
            CALL cl_set_act_visible("unconfirmed,reconciliate,confirmed,invalid",FALSE)
         WHEN "K"
            CALL cl_set_act_visible("confirmed,invalid,unreconciliate",FALSE)  
         WHEN "X"
            CALL cl_set_act_visible("reconciliate,unreconciliate,confirmed,unconfirmed,invalid",FALSE)
            RETURN            
      END CASE
      CALL s_transaction_begin()]]>
  </point>
  <point name="statechange.closed" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         IF NOT cl_ask_confirm('axm-00201') THEN
            RETURN
         ELSE
            CALL s_axmt640_close_upd(g_xmep_m.xmepdocno) RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
               RETURN
            ELSE
               CALL s_transaction_end('Y','0')
            END IF                       
         END IF]]>
  </point>
  <point name="statechange.confirmed" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         IF NOT cl_ask_confirm('aim-00108') THEN
            RETURN
         ELSE
            CALL s_axmt640_conf_update(g_xmep_m.xmepdocno) RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
               RETURN
            ELSE
               CALL s_transaction_end('Y','0')
            END IF                       
         END IF]]>
  </point>
  <point name="statechange.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success   LIKE type_t.num5]]>
  </point>
  <point name="statechange.invalid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         IF NOT cl_ask_confirm('aim-00109') THEN
            RETURN
         ELSE
            CALL s_axmt640_invalid_upd(g_xmep_m.xmepdocno) RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
               RETURN
            ELSE
               CALL s_transaction_end('Y','0')
            END IF                       
         END IF]]>
  </point>
  <point name="statechange.reconciliate" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         IF NOT cl_ask_confirm('axm-00350') THEN
            RETURN
         ELSE
            CALL s_axmt640_close_upd(g_xmep_m.xmepdocno) RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
               RETURN
            ELSE
               CALL s_transaction_end('Y','0')
            END IF                       
         END IF]]>
  </point>
  <point name="statechange.unconfirmed" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         IF NOT cl_ask_confirm('aim-00110') THEN
            RETURN
         ELSE
            CALL s_axmt640_unconf_upd(g_xmep_m.xmepdocno) RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
               RETURN
            ELSE
               CALL s_transaction_end('Y','0')
            END IF         
         END IF]]>
  </point>
  <point name="statechange.unposted" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         IF NOT cl_ask_confirm('acr-00007') THEN
            RETURN
         ELSE
            CALL s_axmt640_unclose_upd(g_xmep_m.xmepdocno) RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')       
            ELSE
               CALL s_transaction_end('Y','0')
            END IF 
           RETURN            
         END IF]]>
  </point>
  <point name="statechange.unreconciliate" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         LET lc_state = "Y"
         IF NOT cl_ask_confirm('axm-00351') THEN
            RETURN
         ELSE
            CALL s_axmt640_unclose_upd(g_xmep_m.xmepdocno) RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
               RETURN
            ELSE
               CALL s_transaction_end('Y','0')
            END IF                       
         END IF]]>
  </point>
  <section id="axmt640.action_chk" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION axmt640_action_chk()
   #add-point:action_chk段define
   {<point name="action_chk.define" edit="s"/>}
   #end add-point
   #add-point:action_chk段define(客製用)
   {<point name="action_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:action_chk段action_chk
   {<point name="action_chk.action_chk"/>}
   #end add-point
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="axmt640.b_fill" ver="9" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION axmt640_b_fill()
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define
   {<point name="b_fill.define" edit="s"/>}
   #end add-point     
   #add-point:b_fill段define(客製用)
   {<point name="b_fill.define_customerization" edit="c"/>}
   #end add-point     
 
   CALL g_xmeq_d.clear()    #g_xmeq_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF axmt640_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE xmeqseq,xmeq001,xmeq002,xmeq003,xmeq004,xmeqsite  FROM xmeq_t", 
                
                     " INNER JOIN xmep_t ON xmepdocno = xmeqdocno ",
 
                     #"",
                     
                     "",
                     
                     " WHERE xmeqent=? AND xmeqdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xmeq_t.xmeqseq"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axmt640_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR axmt640_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_xmep_m.xmepdocno
                                               
      FOREACH b_fill_cs INTO g_xmeq_d[l_ac].xmeqseq,g_xmeq_d[l_ac].xmeq001,g_xmeq_d[l_ac].xmeq002,g_xmeq_d[l_ac].xmeq003, 
          g_xmeq_d[l_ac].xmeq004,g_xmeq_d[l_ac].xmeqsite
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_xmeq_d.deleteElement(g_xmeq_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE axmt640_pb
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_xmeq_d.getLength()
      LET g_xmeq_d_mask_o[l_ac].* =  g_xmeq_d[l_ac].*
      CALL axmt640_xmeq_t_mask()
      LET g_xmeq_d_mask_n[l_ac].* =  g_xmeq_d[l_ac].*
   END FOR
   
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
]]>
  </section>
  <section id="axmt640.b_fill2" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION axmt640_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define" edit="s"/>}
   #end add-point
   #add-point:b_fill2段define(客製用)
   {<point name="b_fill2.define_customerization" edit="c"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL axmt640_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="axmt640.browser_fill" ver="24" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION axmt640_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define" edit="s"/>}
   #end add-point   
   #add-point:browser_fill段define(客製用)
   {<point name="browser_fill.define_customerization" edit="c"/>}
   #end add-point   
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE xmepdocno ",
                      " FROM xmep_t ",
                      " ",
                      " LEFT JOIN xmeq_t ON xmeqent = xmepent AND xmepdocno = xmeqdocno ", "  ",
                      #add-point:browser_fill段sql(xmeq_t1)
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
 
 
                      " ", 
                      " ", 
                      " WHERE xmepent = '" ||g_enterprise|| "' AND xmeqent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("xmep_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE xmepdocno ",
                      " FROM xmep_t ", 
                      "  ",
                      "  ",
                      " WHERE xmepent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("xmep_t")
   END IF
   
   #add-point:browser_fill,cnt wc
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_xmep_m.* TO NULL
      CALL g_xmeq_d.clear()        
 
      #add-point:browser_fill g_add_browse段額外處理
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.xmepdocno,t0.xmep001,t0.xmep002,t0.xmep003,t0.xmep004,t0.xmep005,t0.xmepsite Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   LET g_sql = " SELECT DISTINCT t0.xmepstus,t0.xmepdocno,t0.xmep001,t0.xmep002,t0.xmep003,t0.xmep004, 
       t0.xmep005,t0.xmepsite,t1.ooag011 ,t2.pmaal004 ",
               " FROM xmep_t t0",
               "  ",
               "  LEFT JOIN xmeq_t ON xmeqent = xmepent AND xmepdocno = xmeqdocno ", "  ", 
               #add-point:browser_fill段sql(xmeq_t1)
               {<point name="browser_fill.join.xmeq_t1"/>}
               #end add-point
 
 
               "  ",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent='"||g_enterprise||"' AND t1.ooag001=t0.xmep004  ",
               " LEFT JOIN pmaal_t t2 ON t2.pmaalent='"||g_enterprise||"' AND t2.pmaal001=t0.xmep005 AND t2.pmaal002='"||g_lang||"' ",
 
               " WHERE t0.xmepent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("xmep_t")
   #add-point:browser_fill,sql wc
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY xmepdocno ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"xmep_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill段open cursor
   {<point name="browser_fill.open"/>}
   #end add-point
   
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_xmepdocno,g_browser[g_cnt].b_xmep001, 
       g_browser[g_cnt].b_xmep002,g_browser[g_cnt].b_xmep003,g_browser[g_cnt].b_xmep004,g_browser[g_cnt].b_xmep005, 
       g_browser[g_cnt].b_xmepsite,g_browser[g_cnt].b_xmep004_desc,g_browser[g_cnt].b_xmep005_desc
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
      #遮罩相關處理
      CALL axmt640_browser_mask()
  
            #應用 a24 樣板自動產生(Version:2)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_browse THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_xmepdocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION
]]>
  </section>
  <section id="axmt640.construct" ver="13" status="" src="s" readonly="">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION axmt640_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define" edit="s"/>}
   #end add-point    
   #add-point:cs段define(客製用)
   {<point name="cs.define_customerization" edit="c"/>}
   #end add-point    
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_xmep_m.* TO NULL
   CALL g_xmeq_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON xmepdocno,xmep002,oobxl003,xmep005,xmepdocdt,xmep003,xmep001,xmep001_desc, 
          xmep004,xmepstus,xmep006,xmep007,xmep008,xmep009,xmep010,xmep011,xmep012,xmep013,xmepsite, 
          xmep014,xmepownid,xmepowndp,xmepcrtid,xmepcrtdp,xmepcrtdt,xmepmodid,xmepmoddt,xmepcnfid,xmepcnfdt 

 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<xmepcrtdt>>----
         AFTER FIELD xmepcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<xmepmoddt>>----
         AFTER FIELD xmepmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmepcnfdt>>----
         AFTER FIELD xmepcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmeppstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.xmepdocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmepdocno
            #add-point:ON ACTION controlp INFIELD xmepdocno
            {<point name="construct.c.xmepdocno" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmepdocno
            #add-point:BEFORE FIELD xmepdocno
            {<point name="construct.b.xmepdocno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmepdocno
            
            #add-point:AFTER FIELD xmepdocno
            {<point name="construct.a.xmepdocno" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmep002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmep002
            #add-point:ON ACTION controlp INFIELD xmep002
            {<point name="construct.c.xmep002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmep002
            #add-point:BEFORE FIELD xmep002
            {<point name="construct.b.xmep002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmep002
            
            #add-point:AFTER FIELD xmep002
            {<point name="construct.a.xmep002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD oobxl003
            #add-point:BEFORE FIELD oobxl003
            {<point name="construct.b.oobxl003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD oobxl003
            
            #add-point:AFTER FIELD oobxl003
            {<point name="construct.a.oobxl003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.oobxl003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD oobxl003
            #add-point:ON ACTION controlp INFIELD oobxl003
            {<point name="construct.c.oobxl003" />}
            #END add-point
 
         #Ctrlp:construct.c.xmep005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmep005
            #add-point:ON ACTION controlp INFIELD xmep005
            {<point name="construct.c.xmep005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmep005
            #add-point:BEFORE FIELD xmep005
            {<point name="construct.b.xmep005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmep005
            
            #add-point:AFTER FIELD xmep005
            {<point name="construct.a.xmep005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmepdocdt
            #add-point:BEFORE FIELD xmepdocdt
            {<point name="construct.b.xmepdocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmepdocdt
            
            #add-point:AFTER FIELD xmepdocdt
            {<point name="construct.a.xmepdocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmepdocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmepdocdt
            #add-point:ON ACTION controlp INFIELD xmepdocdt
            {<point name="construct.c.xmepdocdt" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmep003
            #add-point:BEFORE FIELD xmep003
            {<point name="construct.b.xmep003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmep003
            
            #add-point:AFTER FIELD xmep003
            {<point name="construct.a.xmep003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmep003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmep003
            #add-point:ON ACTION controlp INFIELD xmep003
            {<point name="construct.c.xmep003" />}
            #END add-point
 
         #Ctrlp:construct.c.xmep001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmep001
            #add-point:ON ACTION controlp INFIELD xmep001
            {<point name="construct.c.xmep001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmep001
            #add-point:BEFORE FIELD xmep001
            {<point name="construct.b.xmep001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmep001
            
            #add-point:AFTER FIELD xmep001
            {<point name="construct.a.xmep001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmep001_desc
            #add-point:BEFORE FIELD xmep001_desc
            {<point name="construct.b.xmep001_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmep001_desc
            
            #add-point:AFTER FIELD xmep001_desc
            {<point name="construct.a.xmep001_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmep001_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmep001_desc
            #add-point:ON ACTION controlp INFIELD xmep001_desc
            {<point name="construct.c.xmep001_desc" />}
            #END add-point
 
         #Ctrlp:construct.c.xmep004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmep004
            #add-point:ON ACTION controlp INFIELD xmep004
            {<point name="construct.c.xmep004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmep004
            #add-point:BEFORE FIELD xmep004
            {<point name="construct.b.xmep004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmep004
            
            #add-point:AFTER FIELD xmep004
            {<point name="construct.a.xmep004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmepstus
            #add-point:BEFORE FIELD xmepstus
            {<point name="construct.b.xmepstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmepstus
            
            #add-point:AFTER FIELD xmepstus
            {<point name="construct.a.xmepstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmepstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmepstus
            #add-point:ON ACTION controlp INFIELD xmepstus
            {<point name="construct.c.xmepstus" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmep006
            #add-point:BEFORE FIELD xmep006
            {<point name="construct.b.xmep006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmep006
            
            #add-point:AFTER FIELD xmep006
            {<point name="construct.a.xmep006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmep006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmep006
            #add-point:ON ACTION controlp INFIELD xmep006
            {<point name="construct.c.xmep006" />}
            #END add-point
 
         #Ctrlp:construct.c.xmep007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmep007
            #add-point:ON ACTION controlp INFIELD xmep007
            {<point name="construct.c.xmep007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmep007
            #add-point:BEFORE FIELD xmep007
            {<point name="construct.b.xmep007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmep007
            
            #add-point:AFTER FIELD xmep007
            {<point name="construct.a.xmep007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmep008
            #add-point:BEFORE FIELD xmep008
            {<point name="construct.b.xmep008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmep008
            
            #add-point:AFTER FIELD xmep008
            {<point name="construct.a.xmep008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmep008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmep008
            #add-point:ON ACTION controlp INFIELD xmep008
            {<point name="construct.c.xmep008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmep009
            #add-point:BEFORE FIELD xmep009
            {<point name="construct.b.xmep009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmep009
            
            #add-point:AFTER FIELD xmep009
            {<point name="construct.a.xmep009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmep009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmep009
            #add-point:ON ACTION controlp INFIELD xmep009
            {<point name="construct.c.xmep009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmep010
            #add-point:BEFORE FIELD xmep010
            {<point name="construct.b.xmep010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmep010
            
            #add-point:AFTER FIELD xmep010
            {<point name="construct.a.xmep010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmep010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmep010
            #add-point:ON ACTION controlp INFIELD xmep010
            {<point name="construct.c.xmep010" />}
            #END add-point
 
         #Ctrlp:construct.c.xmep011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmep011
            #add-point:ON ACTION controlp INFIELD xmep011
            {<point name="construct.c.xmep011" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmep011
            #add-point:BEFORE FIELD xmep011
            {<point name="construct.b.xmep011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmep011
            
            #add-point:AFTER FIELD xmep011
            {<point name="construct.a.xmep011" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmep012
            #add-point:BEFORE FIELD xmep012
            {<point name="construct.b.xmep012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmep012
            
            #add-point:AFTER FIELD xmep012
            {<point name="construct.a.xmep012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmep012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmep012
            #add-point:ON ACTION controlp INFIELD xmep012
            {<point name="construct.c.xmep012" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmep013
            #add-point:BEFORE FIELD xmep013
            {<point name="construct.b.xmep013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmep013
            
            #add-point:AFTER FIELD xmep013
            {<point name="construct.a.xmep013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmep013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmep013
            #add-point:ON ACTION controlp INFIELD xmep013
            {<point name="construct.c.xmep013" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmepsite
            #add-point:BEFORE FIELD xmepsite
            {<point name="construct.b.xmepsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmepsite
            
            #add-point:AFTER FIELD xmepsite
            {<point name="construct.a.xmepsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmepsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmepsite
            #add-point:ON ACTION controlp INFIELD xmepsite
            {<point name="construct.c.xmepsite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmep014
            #add-point:BEFORE FIELD xmep014
            {<point name="construct.b.xmep014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmep014
            
            #add-point:AFTER FIELD xmep014
            {<point name="construct.a.xmep014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmep014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmep014
            #add-point:ON ACTION controlp INFIELD xmep014
            {<point name="construct.c.xmep014" />}
            #END add-point
 
         #Ctrlp:construct.c.xmepownid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmepownid
            #add-point:ON ACTION controlp INFIELD xmepownid
            {<point name="construct.c.xmepownid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmepownid
            #add-point:BEFORE FIELD xmepownid
            {<point name="construct.b.xmepownid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmepownid
            
            #add-point:AFTER FIELD xmepownid
            {<point name="construct.a.xmepownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmepowndp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmepowndp
            #add-point:ON ACTION controlp INFIELD xmepowndp
            {<point name="construct.c.xmepowndp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmepowndp
            #add-point:BEFORE FIELD xmepowndp
            {<point name="construct.b.xmepowndp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmepowndp
            
            #add-point:AFTER FIELD xmepowndp
            {<point name="construct.a.xmepowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmepcrtid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmepcrtid
            #add-point:ON ACTION controlp INFIELD xmepcrtid
            {<point name="construct.c.xmepcrtid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmepcrtid
            #add-point:BEFORE FIELD xmepcrtid
            {<point name="construct.b.xmepcrtid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmepcrtid
            
            #add-point:AFTER FIELD xmepcrtid
            {<point name="construct.a.xmepcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmepcrtdp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmepcrtdp
            #add-point:ON ACTION controlp INFIELD xmepcrtdp
            {<point name="construct.c.xmepcrtdp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmepcrtdp
            #add-point:BEFORE FIELD xmepcrtdp
            {<point name="construct.b.xmepcrtdp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmepcrtdp
            
            #add-point:AFTER FIELD xmepcrtdp
            {<point name="construct.a.xmepcrtdp" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmepcrtdt
            #add-point:BEFORE FIELD xmepcrtdt
            {<point name="construct.b.xmepcrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.xmepmodid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmepmodid
            #add-point:ON ACTION controlp INFIELD xmepmodid
            {<point name="construct.c.xmepmodid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmepmodid
            #add-point:BEFORE FIELD xmepmodid
            {<point name="construct.b.xmepmodid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmepmodid
            
            #add-point:AFTER FIELD xmepmodid
            {<point name="construct.a.xmepmodid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmepmoddt
            #add-point:BEFORE FIELD xmepmoddt
            {<point name="construct.b.xmepmoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.xmepcnfid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmepcnfid
            #add-point:ON ACTION controlp INFIELD xmepcnfid
            {<point name="construct.c.xmepcnfid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmepcnfid
            #add-point:BEFORE FIELD xmepcnfid
            {<point name="construct.b.xmepcnfid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmepcnfid
            
            #add-point:AFTER FIELD xmepcnfid
            {<point name="construct.a.xmepcnfid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmepcnfdt
            #add-point:BEFORE FIELD xmepcnfdt
            {<point name="construct.b.xmepcnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON xmeqseq,xmeq001,xmeq002,xmeq003,xmeq004,xmeqsite
           FROM s_detail1[1].xmeqseq,s_detail1[1].xmeq001,s_detail1[1].xmeq002,s_detail1[1].xmeq003, 
               s_detail1[1].xmeq004,s_detail1[1].xmeqsite
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmeqseq
            #add-point:BEFORE FIELD xmeqseq
            {<point name="construct.b.page1.xmeqseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmeqseq
            
            #add-point:AFTER FIELD xmeqseq
            {<point name="construct.a.page1.xmeqseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmeqseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmeqseq
            #add-point:ON ACTION controlp INFIELD xmeqseq
            {<point name="construct.c.page1.xmeqseq" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmeq001
            #add-point:BEFORE FIELD xmeq001
            {<point name="construct.b.page1.xmeq001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmeq001
            
            #add-point:AFTER FIELD xmeq001
            {<point name="construct.a.page1.xmeq001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmeq001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmeq001
            #add-point:ON ACTION controlp INFIELD xmeq001
            {<point name="construct.c.page1.xmeq001" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xmeq002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmeq002
            #add-point:ON ACTION controlp INFIELD xmeq002
            {<point name="construct.c.page1.xmeq002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmeq002
            #add-point:BEFORE FIELD xmeq002
            {<point name="construct.b.page1.xmeq002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmeq002
            
            #add-point:AFTER FIELD xmeq002
            {<point name="construct.a.page1.xmeq002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmeq003
            #add-point:BEFORE FIELD xmeq003
            {<point name="construct.b.page1.xmeq003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmeq003
            
            #add-point:AFTER FIELD xmeq003
            {<point name="construct.a.page1.xmeq003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmeq003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmeq003
            #add-point:ON ACTION controlp INFIELD xmeq003
            {<point name="construct.c.page1.xmeq003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmeq004
            #add-point:BEFORE FIELD xmeq004
            {<point name="construct.b.page1.xmeq004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmeq004
            
            #add-point:AFTER FIELD xmeq004
            {<point name="construct.a.page1.xmeq004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmeq004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmeq004
            #add-point:ON ACTION controlp INFIELD xmeq004
            {<point name="construct.c.page1.xmeq004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmeqsite
            #add-point:BEFORE FIELD xmeqsite
            {<point name="construct.b.page1.xmeqsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmeqsite
            
            #add-point:AFTER FIELD xmeqsite
            {<point name="construct.a.page1.xmeqsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmeqsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmeqsite
            #add-point:ON ACTION controlp INFIELD xmeqsite
            {<point name="construct.c.page1.xmeqsite" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="axmt640.default_search" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION axmt640_default_search()
   DEFINE li_idx  LIKE type_t.num10
   DEFINE li_cnt  LIKE type_t.num10
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define" edit="s"/>}
   #end add-point  
   #add-point:default_search段define(客製用)
   {<point name="default_search.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " xmepdocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
]]>
  </section>
  <section id="axmt640.delete" ver="23" status="" src="s" readonly="">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION axmt640_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define" edit="s"/>}
   #end add-point     
   #add-point:delete段define(客製用)
   {<point name="delete.define_customerization" edit="c"/>}
   #end add-point     
   
   IF g_xmep_m.xmepdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN axmt640_cl USING g_enterprise,g_xmep_m.xmepdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axmt640_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE axmt640_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axmt640_master_referesh USING g_xmep_m.xmepdocno INTO g_xmep_m.xmepdocno,g_xmep_m.xmep002, 
       g_xmep_m.xmep005,g_xmep_m.xmepdocdt,g_xmep_m.xmep003,g_xmep_m.xmep001,g_xmep_m.xmep004,g_xmep_m.xmepstus, 
       g_xmep_m.xmep006,g_xmep_m.xmep007,g_xmep_m.xmep008,g_xmep_m.xmep009,g_xmep_m.xmep010,g_xmep_m.xmep011, 
       g_xmep_m.xmep012,g_xmep_m.xmep013,g_xmep_m.xmepsite,g_xmep_m.xmep014,g_xmep_m.xmepownid,g_xmep_m.xmepowndp, 
       g_xmep_m.xmepcrtid,g_xmep_m.xmepcrtdp,g_xmep_m.xmepcrtdt,g_xmep_m.xmepmodid,g_xmep_m.xmepmoddt, 
       g_xmep_m.xmepcnfid,g_xmep_m.xmepcnfdt,g_xmep_m.xmep005_desc,g_xmep_m.xmep004_desc,g_xmep_m.xmepownid_desc, 
       g_xmep_m.xmepowndp_desc,g_xmep_m.xmepcrtid_desc,g_xmep_m.xmepcrtdp_desc,g_xmep_m.xmepmodid_desc, 
       g_xmep_m.xmepcnfid_desc
   
   #檢查是否允許此動作
   IF NOT axmt640_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_xmep_m_mask_o.* =  g_xmep_m.*
   CALL axmt640_xmep_t_mask()
   LET g_xmep_m_mask_n.* =  g_xmep_m.*
   
   CALL axmt640_show()
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL axmt640_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
  
  
      #資料備份
      LET g_xmepdocno_t = g_xmep_m.xmepdocno
 
 
      DELETE FROM xmep_t
       WHERE xmepent = g_enterprise AND xmepdocno = g_xmep_m.xmepdocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_xmep_m.xmepdocno 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM xmeq_t
       WHERE xmeqent = g_enterprise AND xmeqdocno = g_xmep_m.xmepdocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmeq_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE axmt640_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_xmeq_d.clear() 
 
     
      CALL axmt640_ui_browser_refresh()  
      #CALL axmt640_ui_headershow()  
      #CALL axmt640_ui_detailshow()
      
      IF g_browser_cnt > 0 THEN 
         #CALL axmt640_browser_fill("")
         CALL axmt640_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
 
      #add-point:多語言刪除
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   CLOSE axmt640_cl
 
   #功能已完成,通報訊息中心
   CALL axmt640_msgcentre_notify('')
    
END FUNCTION
]]>
  </section>
  <section id="axmt640.delete_b" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION axmt640_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define
   {<point name="delete_b.define" edit="s"/>}
   #end add-point     
   #add-point:delete_b段define(客製用)
   {<point name="delete_b.define_customerization" edit="c"/>}
   #end add-point     
 
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM xmeq_t
       WHERE xmeqent = g_enterprise AND
         xmeqdocno = ps_keys_bak[1] AND xmeqseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_xmeq_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="axmt640.description" ver="22" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:5,PR版次:5) Build-000122
#+ 
#+ Filename...: axmt640
#+ Description: 地磅單維護作業
#+ Creator....: 02587(2014-04-30 14:18:54)
#+ Modifier...: 05384(2015-05-04 11:06:22) -SD/PR-
]]>
  </section>
  <section id="axmt640.detail_reproduce" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION axmt640_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE xmeq_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define" edit="s"/>}
   #end add-point    
   #add-point:delete段define(客製用)
   {<point name="detail_reproduce.define_customerization" edit="c"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE axmt640_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE axmt640_detail AS ",
                "SELECT * FROM xmeq_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO axmt640_detail SELECT * FROM xmeq_t 
                                         WHERE xmeqent = g_enterprise AND xmeqdocno = g_xmepdocno_t
 
   
   #將key修正為調整後   
   UPDATE axmt640_detail 
      #更新key欄位
      SET xmeqdocno = g_xmep_m.xmepdocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO xmeq_t SELECT * FROM axmt640_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmt640_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_xmepdocno_t = g_xmep_m.xmepdocno
 
   
END FUNCTION
]]>
  </section>
  <section id="axmt640.detail_show" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION axmt640_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define" edit="s"/>}
   #end add-point  
   #add-point:detail_show段define(客製用)
   {<point name="detail_show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="axmt640.fetch" ver="21" status="" src="s" readonly="">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION axmt640_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define" edit="s"/>}
   #end add-point    
   #add-point:fetch段define(客製用)
   {<point name="fetch.define_customerization" edit="c"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_xmep_m.xmepdocno = g_browser[g_current_idx].b_xmepdocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE axmt640_master_referesh USING g_xmep_m.xmepdocno INTO g_xmep_m.xmepdocno,g_xmep_m.xmep002, 
       g_xmep_m.xmep005,g_xmep_m.xmepdocdt,g_xmep_m.xmep003,g_xmep_m.xmep001,g_xmep_m.xmep004,g_xmep_m.xmepstus, 
       g_xmep_m.xmep006,g_xmep_m.xmep007,g_xmep_m.xmep008,g_xmep_m.xmep009,g_xmep_m.xmep010,g_xmep_m.xmep011, 
       g_xmep_m.xmep012,g_xmep_m.xmep013,g_xmep_m.xmepsite,g_xmep_m.xmep014,g_xmep_m.xmepownid,g_xmep_m.xmepowndp, 
       g_xmep_m.xmepcrtid,g_xmep_m.xmepcrtdp,g_xmep_m.xmepcrtdt,g_xmep_m.xmepmodid,g_xmep_m.xmepmoddt, 
       g_xmep_m.xmepcnfid,g_xmep_m.xmepcnfdt,g_xmep_m.xmep005_desc,g_xmep_m.xmep004_desc,g_xmep_m.xmepownid_desc, 
       g_xmep_m.xmepowndp_desc,g_xmep_m.xmepcrtid_desc,g_xmep_m.xmepcrtdp_desc,g_xmep_m.xmepmodid_desc, 
       g_xmep_m.xmepcnfid_desc
   
   #遮罩相關處理
   LET g_xmep_m_mask_o.* =  g_xmep_m.*
   CALL axmt640_xmep_t_mask()
   LET g_xmep_m_mask_n.* =  g_xmep_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt640_set_act_visible()   
   CALL axmt640_set_act_no_visible()
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_xmep_m_t.* = g_xmep_m.*
   LET g_xmep_m_o.* = g_xmep_m.*
   
   LET g_data_owner = g_xmep_m.xmepownid      
   LET g_data_dept  = g_xmep_m.xmepowndp
   
   #重新顯示   
   CALL axmt640_show()
 
   #應用 a56 樣板自動產生(Version:2)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
END FUNCTION
]]>
  </section>
  <section id="axmt640.fill_chk" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION axmt640_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define" edit="s"/>}
   #end add-point
   #add-point:fill_chk段define(客製用)
   {<point name="fill_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="axmt640.filter" ver="4" status="" src="s" readonly="">
    <![CDATA[#應用 a50 樣板自動產生(Version:5)
#+ filter過濾功能
PRIVATE FUNCTION axmt640_filter()
   #add-point:filter段define
   {<point name="filter.define" edit="s"/>}
   #end add-point   
   #add-point:filter段define
   {<point name="filter.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON xmepdocno,xmep001,xmep002,xmep003,xmep004,xmep005,xmepsite
                          FROM s_browse[1].b_xmepdocno,s_browse[1].b_xmep001,s_browse[1].b_xmep002,s_browse[1].b_xmep003, 
                              s_browse[1].b_xmep004,s_browse[1].b_xmep005,s_browse[1].b_xmepsite
 
         BEFORE CONSTRUCT
               DISPLAY axmt640_filter_parser('xmepdocno') TO s_browse[1].b_xmepdocno
            DISPLAY axmt640_filter_parser('xmep001') TO s_browse[1].b_xmep001
            DISPLAY axmt640_filter_parser('xmep002') TO s_browse[1].b_xmep002
            DISPLAY axmt640_filter_parser('xmep003') TO s_browse[1].b_xmep003
            DISPLAY axmt640_filter_parser('xmep004') TO s_browse[1].b_xmep004
            DISPLAY axmt640_filter_parser('xmep005') TO s_browse[1].b_xmep005
            DISPLAY axmt640_filter_parser('xmepsite') TO s_browse[1].b_xmepsite
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL axmt640_filter_show('xmepdocno')
   CALL axmt640_filter_show('xmep001')
   CALL axmt640_filter_show('xmep002')
   CALL axmt640_filter_show('xmep003')
   CALL axmt640_filter_show('xmep004')
   CALL axmt640_filter_show('xmep005')
   CALL axmt640_filter_show('xmepsite')
 
END FUNCTION
]]>
  </section>
  <section id="axmt640.filter_parser" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION axmt640_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define" edit="s"/>}
   #end add-point    
   #add-point:filter段define
   {<point name="filter_parser.define_customerization" edit="s"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="axmt640.filter_show" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION axmt640_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = axmt640_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="axmt640.global" ver="22" status="" src="s" readonly="">
    <![CDATA[#應用 t01 樣板自動產生(Version:35)
{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_xmep_m        RECORD
       xmepdocno LIKE xmep_t.xmepdocno, 
   xmep002 LIKE xmep_t.xmep002, 
   oobxl003 LIKE type_t.chr80, 
   xmep005 LIKE xmep_t.xmep005, 
   xmep005_desc LIKE type_t.chr80, 
   xmepdocdt LIKE xmep_t.xmepdocdt, 
   xmep003 LIKE xmep_t.xmep003, 
   xmep001 LIKE xmep_t.xmep001, 
   xmep001_desc LIKE type_t.chr80, 
   xmep004 LIKE xmep_t.xmep004, 
   xmep004_desc LIKE type_t.chr80, 
   xmepstus LIKE xmep_t.xmepstus, 
   xmep006 LIKE xmep_t.xmep006, 
   xmep007 LIKE xmep_t.xmep007, 
   xmep008 LIKE xmep_t.xmep008, 
   xmep009 LIKE xmep_t.xmep009, 
   xmep010 LIKE xmep_t.xmep010, 
   xmep011 LIKE xmep_t.xmep011, 
   xmep012 LIKE xmep_t.xmep012, 
   xmep013 LIKE xmep_t.xmep013, 
   xmepsite LIKE xmep_t.xmepsite, 
   xmep014 LIKE xmep_t.xmep014, 
   xmepownid LIKE xmep_t.xmepownid, 
   xmepownid_desc LIKE type_t.chr80, 
   xmepowndp LIKE xmep_t.xmepowndp, 
   xmepowndp_desc LIKE type_t.chr80, 
   xmepcrtid LIKE xmep_t.xmepcrtid, 
   xmepcrtid_desc LIKE type_t.chr80, 
   xmepcrtdp LIKE xmep_t.xmepcrtdp, 
   xmepcrtdp_desc LIKE type_t.chr80, 
   xmepcrtdt LIKE xmep_t.xmepcrtdt, 
   xmepmodid LIKE xmep_t.xmepmodid, 
   xmepmodid_desc LIKE type_t.chr80, 
   xmepmoddt LIKE xmep_t.xmepmoddt, 
   xmepcnfid LIKE xmep_t.xmepcnfid, 
   xmepcnfid_desc LIKE type_t.chr80, 
   xmepcnfdt LIKE xmep_t.xmepcnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_xmeq_d        RECORD
       xmeqseq LIKE xmeq_t.xmeqseq, 
   xmeq001 LIKE xmeq_t.xmeq001, 
   xmeq002 LIKE xmeq_t.xmeq002, 
   xmeq003 LIKE xmeq_t.xmeq003, 
   xmeq004 LIKE xmeq_t.xmeq004, 
   xmeqsite LIKE xmeq_t.xmeqsite
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_xmepdocno LIKE xmep_t.xmepdocno,
      b_xmep001 LIKE xmep_t.xmep001,
      b_xmep002 LIKE xmep_t.xmep002,
      b_xmep003 LIKE xmep_t.xmep003,
      b_xmep004 LIKE xmep_t.xmep004,
   b_xmep004_desc LIKE type_t.chr80,
      b_xmep005 LIKE xmep_t.xmep005,
   b_xmep005_desc LIKE type_t.chr80,
      b_xmepsite LIKE xmep_t.xmepsite
       END RECORD
       
#模組變數(Module Variables)
DEFINE g_xmep_m          type_g_xmep_m
DEFINE g_xmep_m_t        type_g_xmep_m
DEFINE g_xmep_m_o        type_g_xmep_m
DEFINE g_xmep_m_mask_o   type_g_xmep_m #轉換遮罩前資料
DEFINE g_xmep_m_mask_n   type_g_xmep_m #轉換遮罩後資料
 
   DEFINE g_xmepdocno_t LIKE xmep_t.xmepdocno
 
 
DEFINE g_xmeq_d          DYNAMIC ARRAY OF type_g_xmeq_d
DEFINE g_xmeq_d_t        type_g_xmeq_d
DEFINE g_xmeq_d_o        type_g_xmeq_d
DEFINE g_xmeq_d_mask_o   DYNAMIC ARRAY OF type_g_xmeq_d #轉換遮罩前資料
DEFINE g_xmeq_d_mask_n   DYNAMIC ARRAY OF type_g_xmeq_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10              #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="axmt640.idx_chk" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION axmt640_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define" edit="s"/>}
   #end add-point  
   #add-point:idx_chk段define(客製用)
   {<point name="idx_chk.define_customerization" edit="c"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_xmeq_d.getLength() THEN
         LET g_detail_idx = g_xmeq_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmeq_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmeq_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="axmt640.init" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION axmt640_init()
   #add-point:init段define
   {<point name="init.define" edit="s"/>}
   #end add-point    
   #add-point:init段define(客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point    
 
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('xmepstus','13','N,Y,A,D,R,W,X')
 
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL axmt640_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="axmt640.input" ver="11" status="" src="s" readonly="">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION axmt640_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define
   {<point name="input.define" edit="s"/>}
   #end add-point  
   #add-point:input段define(客製用)
   {<point name="input.define_customerization" edit="c"/>}
   #end add-point  
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xmep_m.xmepdocno,g_xmep_m.xmep002,g_xmep_m.oobxl003,g_xmep_m.xmep005,g_xmep_m.xmep005_desc, 
       g_xmep_m.xmepdocdt,g_xmep_m.xmep003,g_xmep_m.xmep001,g_xmep_m.xmep001_desc,g_xmep_m.xmep004,g_xmep_m.xmep004_desc, 
       g_xmep_m.xmepstus,g_xmep_m.xmep006,g_xmep_m.xmep007,g_xmep_m.xmep008,g_xmep_m.xmep009,g_xmep_m.xmep010, 
       g_xmep_m.xmep011,g_xmep_m.xmep012,g_xmep_m.xmep013,g_xmep_m.xmepsite,g_xmep_m.xmep014,g_xmep_m.xmepownid, 
       g_xmep_m.xmepownid_desc,g_xmep_m.xmepowndp,g_xmep_m.xmepowndp_desc,g_xmep_m.xmepcrtid,g_xmep_m.xmepcrtid_desc, 
       g_xmep_m.xmepcrtdp,g_xmep_m.xmepcrtdp_desc,g_xmep_m.xmepcrtdt,g_xmep_m.xmepmodid,g_xmep_m.xmepmodid_desc, 
       g_xmep_m.xmepmoddt,g_xmep_m.xmepcnfid,g_xmep_m.xmepcnfid_desc,g_xmep_m.xmepcnfdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT xmeqseq,xmeq001,xmeq002,xmeq003,xmeq004,xmeqsite FROM xmeq_t WHERE xmeqent=?  
       AND xmeqdocno=? AND xmeqseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt640_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL axmt640_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL axmt640_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_xmep_m.xmepdocno,g_xmep_m.xmep002,g_xmep_m.xmep005,g_xmep_m.xmepdocdt,g_xmep_m.xmep003, 
       g_xmep_m.xmep001,g_xmep_m.xmep004,g_xmep_m.xmepstus,g_xmep_m.xmep006,g_xmep_m.xmep007,g_xmep_m.xmep008, 
       g_xmep_m.xmep009,g_xmep_m.xmep010,g_xmep_m.xmep011,g_xmep_m.xmep012,g_xmep_m.xmep013,g_xmep_m.xmepsite, 
       g_xmep_m.xmep014
   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
  </section>
  <section id="axmt640.input.body" ver="16" status="" src="s" readonly="">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_xmeq_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xmeq_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axmt640_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_xmeq_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN axmt640_cl USING g_enterprise,g_xmep_m.xmepdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axmt640_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE axmt640_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_xmeq_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xmeq_d[l_ac].xmeqseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xmeq_d_t.* = g_xmeq_d[l_ac].*  #BACKUP
               LET g_xmeq_d_o.* = g_xmeq_d[l_ac].*  #BACKUP
               CALL axmt640_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL axmt640_set_no_entry_b(l_cmd)
               IF NOT axmt640_lock_b("xmeq_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axmt640_bcl INTO g_xmeq_d[l_ac].xmeqseq,g_xmeq_d[l_ac].xmeq001,g_xmeq_d[l_ac].xmeq002, 
                      g_xmeq_d[l_ac].xmeq003,g_xmeq_d[l_ac].xmeq004,g_xmeq_d[l_ac].xmeqsite
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_xmeq_d_t.xmeqseq 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_xmeq_d_mask_o[l_ac].* =  g_xmeq_d[l_ac].*
                  CALL axmt640_xmeq_t_mask()
                  LET g_xmeq_d_mask_n[l_ac].* =  g_xmeq_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL axmt640_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmeq_d[l_ac].* TO NULL 
            INITIALIZE g_xmeq_d_t.* TO NULL 
            INITIALIZE g_xmeq_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
            
            #add-point:modify段before備份
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_xmeq_d_t.* = g_xmeq_d[l_ac].*     #新輸入資料
            LET g_xmeq_d_o.* = g_xmeq_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axmt640_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL axmt640_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmeq_d[li_reproduce_target].* = g_xmeq_d[li_reproduce].*
 
               LET g_xmeq_d[li_reproduce_target].xmeqseq = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM xmeq_t 
             WHERE xmeqent = g_enterprise AND xmeqdocno = g_xmep_m.xmepdocno
 
               AND xmeqseq = g_xmeq_d[l_ac].xmeqseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmep_m.xmepdocno
               LET gs_keys[2] = g_xmeq_d[g_detail_idx].xmeqseq
               CALL axmt640_insert_b('xmeq_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_xmeq_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmeq_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axmt640_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d)
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_xmep_m.xmepdocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_xmeq_d_t.xmeqseq
 
            
               #刪除同層單身
               IF NOT axmt640_delete_b('xmeq_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt640_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT axmt640_key_delete_b(gs_keys,'xmeq_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt640_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE axmt640_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_xmeq_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_xmeq_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmeqseq
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmeq_d[l_ac].xmeqseq,"0","0","","","azz-00079",1) THEN
               NEXT FIELD xmeqseq
            END IF 
 
 
            #add-point:AFTER FIELD xmeqseq
            {<point name="input.a.page1.xmeqseq" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmeqseq
            #add-point:BEFORE FIELD xmeqseq
            {<point name="input.b.page1.xmeqseq" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmeqseq
            #add-point:ON CHANGE xmeqseq
            {<point name="input.g.page1.xmeqseq" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmeq001
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmeq_d[l_ac].xmeq001,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xmeq001
            END IF 
 
 
            #add-point:AFTER FIELD xmeq001
            {<point name="input.a.page1.xmeq001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmeq001
            #add-point:BEFORE FIELD xmeq001
            {<point name="input.b.page1.xmeq001" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmeq001
            #add-point:ON CHANGE xmeq001
            {<point name="input.g.page1.xmeq001" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmeq002
            
            #add-point:AFTER FIELD xmeq002
            {<point name="input.a.page1.xmeq002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmeq002
            #add-point:BEFORE FIELD xmeq002
            {<point name="input.b.page1.xmeq002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmeq002
            #add-point:ON CHANGE xmeq002
            {<point name="input.g.page1.xmeq002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmeq003
            #add-point:BEFORE FIELD xmeq003
            {<point name="input.b.page1.xmeq003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmeq003
            
            #add-point:AFTER FIELD xmeq003
            {<point name="input.a.page1.xmeq003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmeq003
            #add-point:ON CHANGE xmeq003
            {<point name="input.g.page1.xmeq003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmeq004
            #add-point:BEFORE FIELD xmeq004
            {<point name="input.b.page1.xmeq004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmeq004
            
            #add-point:AFTER FIELD xmeq004
            {<point name="input.a.page1.xmeq004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmeq004
            #add-point:ON CHANGE xmeq004
            {<point name="input.g.page1.xmeq004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmeqsite
            #add-point:BEFORE FIELD xmeqsite
            {<point name="input.b.page1.xmeqsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmeqsite
            
            #add-point:AFTER FIELD xmeqsite
            {<point name="input.a.page1.xmeqsite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmeqsite
            #add-point:ON CHANGE xmeqsite
            {<point name="input.g.page1.xmeqsite" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.xmeqseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmeqseq
            #add-point:ON ACTION controlp INFIELD xmeqseq
            {<point name="input.c.page1.xmeqseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmeq001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmeq001
            #add-point:ON ACTION controlp INFIELD xmeq001
            {<point name="input.c.page1.xmeq001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmeq002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmeq002
            #add-point:ON ACTION controlp INFIELD xmeq002
            {<point name="input.c.page1.xmeq002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmeq003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmeq003
            #add-point:ON ACTION controlp INFIELD xmeq003
            {<point name="input.c.page1.xmeq003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmeq004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmeq004
            #add-point:ON ACTION controlp INFIELD xmeq004
            {<point name="input.c.page1.xmeq004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmeqsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmeqsite
            #add-point:ON ACTION controlp INFIELD xmeqsite
            {<point name="input.c.page1.xmeqsite" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_xmeq_d[l_ac].* = g_xmeq_d_t.*
               CLOSE axmt640_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_xmeq_d[l_ac].xmeqseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_xmeq_d[l_ac].* = g_xmeq_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL axmt640_xmeq_t_mask_restore('restore_mask_o')
      
               UPDATE xmeq_t SET (xmeqdocno,xmeqseq,xmeq001,xmeq002,xmeq003,xmeq004,xmeqsite) = (g_xmep_m.xmepdocno, 
                   g_xmeq_d[l_ac].xmeqseq,g_xmeq_d[l_ac].xmeq001,g_xmeq_d[l_ac].xmeq002,g_xmeq_d[l_ac].xmeq003, 
                   g_xmeq_d[l_ac].xmeq004,g_xmeq_d[l_ac].xmeqsite)
                WHERE xmeqent = g_enterprise AND xmeqdocno = g_xmep_m.xmepdocno 
 
                  AND xmeqseq = g_xmeq_d_t.xmeqseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmeq_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_xmeq_d[l_ac].* = g_xmeq_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmeq_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()                   
                     CALL s_transaction_end('N','0')
                     LET g_xmeq_d[l_ac].* = g_xmeq_d_t.*  
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmep_m.xmepdocno
               LET gs_keys_bak[1] = g_xmepdocno_t
               LET gs_keys[2] = g_xmeq_d[g_detail_idx].xmeqseq
               LET gs_keys_bak[2] = g_xmeq_d_t.xmeqseq
               CALL axmt640_update_b('xmeq_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL axmt640_xmeq_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_xmeq_d[g_detail_idx].xmeqseq = g_xmeq_d_t.xmeqseq 
 
                  ) THEN
                  LET gs_keys[01] = g_xmep_m.xmepdocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_xmeq_d_t.xmeqseq
 
                  CALL axmt640_key_update_b(gs_keys,'xmeq_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_xmep_m),util.JSON.stringify(g_xmeq_d_t)
               LET g_log2 = util.JSON.stringify(g_xmep_m),util.JSON.stringify(g_xmeq_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL axmt640_unlock_b("xmeq_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_xmeq_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_xmeq_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
 
 
]]>
  </section>
  <section id="axmt640.input.head" ver="21" status="" src="s" readonly="">
    <![CDATA[      #單頭段
      INPUT BY NAME g_xmep_m.xmepdocno,g_xmep_m.xmep002,g_xmep_m.xmep005,g_xmep_m.xmepdocdt,g_xmep_m.xmep003, 
          g_xmep_m.xmep001,g_xmep_m.xmep004,g_xmep_m.xmepstus,g_xmep_m.xmep006,g_xmep_m.xmep007,g_xmep_m.xmep008, 
          g_xmep_m.xmep009,g_xmep_m.xmep010,g_xmep_m.xmep011,g_xmep_m.xmep012,g_xmep_m.xmep013,g_xmep_m.xmepsite, 
          g_xmep_m.xmep014 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN axmt640_cl USING g_enterprise,g_xmep_m.xmepdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axmt640_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE axmt640_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL axmt640_set_entry(p_cmd)
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL axmt640_set_no_entry(p_cmd)
    
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmepdocno
            #add-point:BEFORE FIELD xmepdocno
            {<point name="input.b.xmepdocno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmepdocno
            
            #add-point:AFTER FIELD xmepdocno
            {<point name="input.a.xmepdocno" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmepdocno
            #add-point:ON CHANGE xmepdocno
            {<point name="input.g.xmepdocno" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmep002
            
            #add-point:AFTER FIELD xmep002
            {<point name="input.a.xmep002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmep002
            #add-point:BEFORE FIELD xmep002
            {<point name="input.b.xmep002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmep002
            #add-point:ON CHANGE xmep002
            {<point name="input.g.xmep002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmep005
            
            #add-point:AFTER FIELD xmep005
            {<point name="input.a.xmep005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmep005
            #add-point:BEFORE FIELD xmep005
            {<point name="input.b.xmep005" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmep005
            #add-point:ON CHANGE xmep005
            {<point name="input.g.xmep005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmepdocdt
            #add-point:BEFORE FIELD xmepdocdt
            {<point name="input.b.xmepdocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmepdocdt
            
            #add-point:AFTER FIELD xmepdocdt
            {<point name="input.a.xmepdocdt" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmepdocdt
            #add-point:ON CHANGE xmepdocdt
            {<point name="input.g.xmepdocdt" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmep003
            #add-point:BEFORE FIELD xmep003
            {<point name="input.b.xmep003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmep003
            
            #add-point:AFTER FIELD xmep003
            {<point name="input.a.xmep003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmep003
            #add-point:ON CHANGE xmep003
            {<point name="input.g.xmep003" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmep001
            
            #add-point:AFTER FIELD xmep001
            {<point name="input.a.xmep001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmep001
            #add-point:BEFORE FIELD xmep001
            {<point name="input.b.xmep001" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmep001
            #add-point:ON CHANGE xmep001
            {<point name="input.g.xmep001" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmep004
            
            #add-point:AFTER FIELD xmep004
            {<point name="input.a.xmep004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmep004
            #add-point:BEFORE FIELD xmep004
            {<point name="input.b.xmep004" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmep004
            #add-point:ON CHANGE xmep004
            {<point name="input.g.xmep004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmepstus
            #add-point:BEFORE FIELD xmepstus
            {<point name="input.b.xmepstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmepstus
            
            #add-point:AFTER FIELD xmepstus
            {<point name="input.a.xmepstus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmepstus
            #add-point:ON CHANGE xmepstus
            {<point name="input.g.xmepstus" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmep006
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmep_m.xmep006,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xmep006
            END IF 
 
 
            #add-point:AFTER FIELD xmep006
            {<point name="input.a.xmep006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmep006
            #add-point:BEFORE FIELD xmep006
            {<point name="input.b.xmep006" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmep006
            #add-point:ON CHANGE xmep006
            {<point name="input.g.xmep006" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmep007
            
            #add-point:AFTER FIELD xmep007
            {<point name="input.a.xmep007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmep007
            #add-point:BEFORE FIELD xmep007
            {<point name="input.b.xmep007" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmep007
            #add-point:ON CHANGE xmep007
            {<point name="input.g.xmep007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmep008
            #add-point:BEFORE FIELD xmep008
            {<point name="input.b.xmep008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmep008
            
            #add-point:AFTER FIELD xmep008
            {<point name="input.a.xmep008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmep008
            #add-point:ON CHANGE xmep008
            {<point name="input.g.xmep008" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmep009
            #add-point:BEFORE FIELD xmep009
            {<point name="input.b.xmep009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmep009
            
            #add-point:AFTER FIELD xmep009
            {<point name="input.a.xmep009" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmep009
            #add-point:ON CHANGE xmep009
            {<point name="input.g.xmep009" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmep010
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmep_m.xmep010,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xmep010
            END IF 
 
 
            #add-point:AFTER FIELD xmep010
            {<point name="input.a.xmep010" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmep010
            #add-point:BEFORE FIELD xmep010
            {<point name="input.b.xmep010" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmep010
            #add-point:ON CHANGE xmep010
            {<point name="input.g.xmep010" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmep011
            
            #add-point:AFTER FIELD xmep011
            {<point name="input.a.xmep011" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmep011
            #add-point:BEFORE FIELD xmep011
            {<point name="input.b.xmep011" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmep011
            #add-point:ON CHANGE xmep011
            {<point name="input.g.xmep011" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmep012
            #add-point:BEFORE FIELD xmep012
            {<point name="input.b.xmep012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmep012
            
            #add-point:AFTER FIELD xmep012
            {<point name="input.a.xmep012" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmep012
            #add-point:ON CHANGE xmep012
            {<point name="input.g.xmep012" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmep013
            #add-point:BEFORE FIELD xmep013
            {<point name="input.b.xmep013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmep013
            
            #add-point:AFTER FIELD xmep013
            {<point name="input.a.xmep013" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmep013
            #add-point:ON CHANGE xmep013
            {<point name="input.g.xmep013" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmepsite
            #add-point:BEFORE FIELD xmepsite
            {<point name="input.b.xmepsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmepsite
            
            #add-point:AFTER FIELD xmepsite
            {<point name="input.a.xmepsite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmepsite
            #add-point:ON CHANGE xmepsite
            {<point name="input.g.xmepsite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmep014
            #add-point:BEFORE FIELD xmep014
            {<point name="input.b.xmep014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmep014
            
            #add-point:AFTER FIELD xmep014
            {<point name="input.a.xmep014" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmep014
            #add-point:ON CHANGE xmep014
            {<point name="input.g.xmep014" />}
            #END add-point 
 
 #欄位檢查
                  #Ctrlp:input.c.xmepdocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmepdocno
            #add-point:ON ACTION controlp INFIELD xmepdocno
            {<point name="input.c.xmepdocno" />}
            #END add-point
 
         #Ctrlp:input.c.xmep002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmep002
            #add-point:ON ACTION controlp INFIELD xmep002
            {<point name="input.c.xmep002" />}
            #END add-point
 
         #Ctrlp:input.c.xmep005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmep005
            #add-point:ON ACTION controlp INFIELD xmep005
            {<point name="input.c.xmep005" />}
            #END add-point
 
         #Ctrlp:input.c.xmepdocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmepdocdt
            #add-point:ON ACTION controlp INFIELD xmepdocdt
            {<point name="input.c.xmepdocdt" />}
            #END add-point
 
         #Ctrlp:input.c.xmep003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmep003
            #add-point:ON ACTION controlp INFIELD xmep003
            {<point name="input.c.xmep003" />}
            #END add-point
 
         #Ctrlp:input.c.xmep001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmep001
            #add-point:ON ACTION controlp INFIELD xmep001
            {<point name="input.c.xmep001" />}
            #END add-point
 
         #Ctrlp:input.c.xmep004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmep004
            #add-point:ON ACTION controlp INFIELD xmep004
            {<point name="input.c.xmep004" />}
            #END add-point
 
         #Ctrlp:input.c.xmepstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmepstus
            #add-point:ON ACTION controlp INFIELD xmepstus
            {<point name="input.c.xmepstus" />}
            #END add-point
 
         #Ctrlp:input.c.xmep006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmep006
            #add-point:ON ACTION controlp INFIELD xmep006
            {<point name="input.c.xmep006" />}
            #END add-point
 
         #Ctrlp:input.c.xmep007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmep007
            #add-point:ON ACTION controlp INFIELD xmep007
            {<point name="input.c.xmep007" />}
            #END add-point
 
         #Ctrlp:input.c.xmep008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmep008
            #add-point:ON ACTION controlp INFIELD xmep008
            {<point name="input.c.xmep008" />}
            #END add-point
 
         #Ctrlp:input.c.xmep009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmep009
            #add-point:ON ACTION controlp INFIELD xmep009
            {<point name="input.c.xmep009" />}
            #END add-point
 
         #Ctrlp:input.c.xmep010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmep010
            #add-point:ON ACTION controlp INFIELD xmep010
            {<point name="input.c.xmep010" />}
            #END add-point
 
         #Ctrlp:input.c.xmep011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmep011
            #add-point:ON ACTION controlp INFIELD xmep011
            {<point name="input.c.xmep011" />}
            #END add-point
 
         #Ctrlp:input.c.xmep012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmep012
            #add-point:ON ACTION controlp INFIELD xmep012
            {<point name="input.c.xmep012" />}
            #END add-point
 
         #Ctrlp:input.c.xmep013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmep013
            #add-point:ON ACTION controlp INFIELD xmep013
            {<point name="input.c.xmep013" />}
            #END add-point
 
         #Ctrlp:input.c.xmepsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmepsite
            #add-point:ON ACTION controlp INFIELD xmepsite
            {<point name="input.c.xmepsite" />}
            #END add-point
 
         #Ctrlp:input.c.xmep014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmep014
            #add-point:ON ACTION controlp INFIELD xmep014
            {<point name="input.c.xmep014" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_xmep_m.xmepdocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO xmep_t (xmepent,xmepdocno,xmep002,xmep005,xmepdocdt,xmep003,xmep001,xmep004, 
                   xmepstus,xmep006,xmep007,xmep008,xmep009,xmep010,xmep011,xmep012,xmep013,xmepsite, 
                   xmep014,xmepownid,xmepowndp,xmepcrtid,xmepcrtdp,xmepcrtdt,xmepmodid,xmepmoddt,xmepcnfid, 
                   xmepcnfdt)
               VALUES (g_enterprise,g_xmep_m.xmepdocno,g_xmep_m.xmep002,g_xmep_m.xmep005,g_xmep_m.xmepdocdt, 
                   g_xmep_m.xmep003,g_xmep_m.xmep001,g_xmep_m.xmep004,g_xmep_m.xmepstus,g_xmep_m.xmep006, 
                   g_xmep_m.xmep007,g_xmep_m.xmep008,g_xmep_m.xmep009,g_xmep_m.xmep010,g_xmep_m.xmep011, 
                   g_xmep_m.xmep012,g_xmep_m.xmep013,g_xmep_m.xmepsite,g_xmep_m.xmep014,g_xmep_m.xmepownid, 
                   g_xmep_m.xmepowndp,g_xmep_m.xmepcrtid,g_xmep_m.xmepcrtdp,g_xmep_m.xmepcrtdt,g_xmep_m.xmepmodid, 
                   g_xmep_m.xmepmoddt,g_xmep_m.xmepcnfid,g_xmep_m.xmepcnfdt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_xmep_m" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL axmt640_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL axmt640_b_fill()
               END IF
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL axmt640_xmep_t_mask_restore('restore_mask_o')
               
               UPDATE xmep_t SET (xmepdocno,xmep002,xmep005,xmepdocdt,xmep003,xmep001,xmep004,xmepstus, 
                   xmep006,xmep007,xmep008,xmep009,xmep010,xmep011,xmep012,xmep013,xmepsite,xmep014, 
                   xmepownid,xmepowndp,xmepcrtid,xmepcrtdp,xmepcrtdt,xmepmodid,xmepmoddt,xmepcnfid,xmepcnfdt) = (g_xmep_m.xmepdocno, 
                   g_xmep_m.xmep002,g_xmep_m.xmep005,g_xmep_m.xmepdocdt,g_xmep_m.xmep003,g_xmep_m.xmep001, 
                   g_xmep_m.xmep004,g_xmep_m.xmepstus,g_xmep_m.xmep006,g_xmep_m.xmep007,g_xmep_m.xmep008, 
                   g_xmep_m.xmep009,g_xmep_m.xmep010,g_xmep_m.xmep011,g_xmep_m.xmep012,g_xmep_m.xmep013, 
                   g_xmep_m.xmepsite,g_xmep_m.xmep014,g_xmep_m.xmepownid,g_xmep_m.xmepowndp,g_xmep_m.xmepcrtid, 
                   g_xmep_m.xmepcrtdp,g_xmep_m.xmepcrtdt,g_xmep_m.xmepmodid,g_xmep_m.xmepmoddt,g_xmep_m.xmepcnfid, 
                   g_xmep_m.xmepcnfdt)
                WHERE xmepent = g_enterprise AND xmepdocno = g_xmepdocno_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "xmep_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL axmt640_xmep_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_xmep_m_t)
               LET g_log2 = util.JSON.stringify(g_xmep_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_xmepdocno_t = g_xmep_m.xmepdocno
 
            
      END INPUT
   
]]>
  </section>
  <section id="axmt640.input.other" ver="6" status="" src="s" readonly="">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD xmepdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xmeqseq
 
               #add-point:input段modify_detail 
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="axmt640.insert" ver="16" status="" src="s" readonly="">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION axmt640_insert()
   #add-point:insert段define
   {<point name="insert.define" edit="s"/>}
   #end add-point    
   #add-point:insert段define(客製用)
   {<point name="insert.define_customerization" edit="c"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_xmeq_d.clear()   
 
 
   INITIALIZE g_xmep_m.* LIKE xmep_t.*             #DEFAULT 設定
   
   LET g_xmepdocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_xmep_m.xmepownid = g_user
      LET g_xmep_m.xmepowndp = g_dept
      LET g_xmep_m.xmepcrtid = g_user
      LET g_xmep_m.xmepcrtdp = g_dept 
      LET g_xmep_m.xmepcrtdt = cl_get_current()
      LET g_xmep_m.xmepmodid = g_user
      LET g_xmep_m.xmepmoddt = cl_get_current()
      LET g_xmep_m.xmepstus = 'N'
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
      
 
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
 
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_xmep_m_t.* = g_xmep_m.*
      LET g_xmep_m_o.* = g_xmep_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_xmep_m.xmepstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
    
      CALL axmt640_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG AND NOT g_master_insert THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_xmep_m.* TO NULL
         INITIALIZE g_xmeq_d TO NULL
 
         #add-point:取消新增後
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL axmt640_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_xmeq_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt640_set_act_visible()   
   CALL axmt640_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_xmepdocno_t = g_xmep_m.xmepdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " xmepent = '" ||g_enterprise|| "' AND",
                      " xmepdocno = '", g_xmep_m.xmepdocno, "' "
 
                      
   #add-point:組合新增資料的條件後
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axmt640_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE axmt640_cl
   
   CALL axmt640_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE axmt640_master_referesh USING g_xmep_m.xmepdocno INTO g_xmep_m.xmepdocno,g_xmep_m.xmep002, 
       g_xmep_m.xmep005,g_xmep_m.xmepdocdt,g_xmep_m.xmep003,g_xmep_m.xmep001,g_xmep_m.xmep004,g_xmep_m.xmepstus, 
       g_xmep_m.xmep006,g_xmep_m.xmep007,g_xmep_m.xmep008,g_xmep_m.xmep009,g_xmep_m.xmep010,g_xmep_m.xmep011, 
       g_xmep_m.xmep012,g_xmep_m.xmep013,g_xmep_m.xmepsite,g_xmep_m.xmep014,g_xmep_m.xmepownid,g_xmep_m.xmepowndp, 
       g_xmep_m.xmepcrtid,g_xmep_m.xmepcrtdp,g_xmep_m.xmepcrtdt,g_xmep_m.xmepmodid,g_xmep_m.xmepmoddt, 
       g_xmep_m.xmepcnfid,g_xmep_m.xmepcnfdt,g_xmep_m.xmep005_desc,g_xmep_m.xmep004_desc,g_xmep_m.xmepownid_desc, 
       g_xmep_m.xmepowndp_desc,g_xmep_m.xmepcrtid_desc,g_xmep_m.xmepcrtdp_desc,g_xmep_m.xmepmodid_desc, 
       g_xmep_m.xmepcnfid_desc
   
   #遮罩相關處理
   LET g_xmep_m_mask_o.* =  g_xmep_m.*
   CALL axmt640_xmep_t_mask()
   LET g_xmep_m_mask_n.* =  g_xmep_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_xmep_m.xmepdocno,g_xmep_m.xmep002,g_xmep_m.oobxl003,g_xmep_m.xmep005,g_xmep_m.xmep005_desc, 
       g_xmep_m.xmepdocdt,g_xmep_m.xmep003,g_xmep_m.xmep001,g_xmep_m.xmep001_desc,g_xmep_m.xmep004,g_xmep_m.xmep004_desc, 
       g_xmep_m.xmepstus,g_xmep_m.xmep006,g_xmep_m.xmep007,g_xmep_m.xmep008,g_xmep_m.xmep009,g_xmep_m.xmep010, 
       g_xmep_m.xmep011,g_xmep_m.xmep012,g_xmep_m.xmep013,g_xmep_m.xmepsite,g_xmep_m.xmep014,g_xmep_m.xmepownid, 
       g_xmep_m.xmepownid_desc,g_xmep_m.xmepowndp,g_xmep_m.xmepowndp_desc,g_xmep_m.xmepcrtid,g_xmep_m.xmepcrtid_desc, 
       g_xmep_m.xmepcrtdp,g_xmep_m.xmepcrtdp_desc,g_xmep_m.xmepcrtdt,g_xmep_m.xmepmodid,g_xmep_m.xmepmodid_desc, 
       g_xmep_m.xmepmoddt,g_xmep_m.xmepcnfid,g_xmep_m.xmepcnfid_desc,g_xmep_m.xmepcnfdt
   
   #add-point:新增結束後
   {<point name="insert.after"/>}
   #end add-point 
   
   #功能已完成,通報訊息中心
   CALL axmt640_msgcentre_notify('')
   
END FUNCTION
]]>
  </section>
  <section id="axmt640.insert_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION axmt640_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define
   {<point name="insert_b.define" edit="s"/>}
   #end add-point     
   #add-point:insert_b段define(客製用)
   {<point name="insert_b.define_customerization" edit="c"/>}
   #end add-point     
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO xmeq_t
                  (xmeqent,
                   xmeqdocno,
                   xmeqseq
                   ,xmeq001,xmeq002,xmeq003,xmeq004,xmeqsite) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_xmeq_d[g_detail_idx].xmeq001,g_xmeq_d[g_detail_idx].xmeq002,g_xmeq_d[g_detail_idx].xmeq003, 
                       g_xmeq_d[g_detail_idx].xmeq004,g_xmeq_d[g_detail_idx].xmeqsite)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmeq_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_xmeq_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="axmt640.key_delete_b" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION axmt640_key_delete_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define
   {<point name="key_delete_b.define" edit="s"/>}
   #end add-point
   #add-point:delete_b段define(客製用)
   {<point name="key_delete_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="axmt640.key_update_b" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION axmt640_key_update_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:update_b段define
   {<point name="key_update_b.define" edit="s"/>}
   #end add-point
   #add-point:update_b段define(客製用)
   {<point name="key_update_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
END FUNCTION
]]>
  </section>
  <section id="axmt640.lock_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION axmt640_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define" edit="s"/>}
   #end add-point   
   #add-point:lock_b段define(客製用)
   {<point name="lock_b.define_customerization" edit="c"/>}
   #end add-point   
    
   #先刷新資料
   #CALL axmt640_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "xmeq_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN axmt640_bcl USING g_enterprise,
                                       g_xmep_m.xmepdocno,g_xmeq_d[g_detail_idx].xmeqseq     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "axmt640_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="axmt640.main" ver="16" status="" src="s" readonly="">
    <![CDATA[#應用 a26 樣板自動產生(Version:4)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define(客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axm","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT xmepdocno,xmep002,'',xmep005,'',xmepdocdt,xmep003,xmep001,'',xmep004, 
       '',xmepstus,xmep006,xmep007,xmep008,xmep009,xmep010,xmep011,xmep012,xmep013,xmepsite,xmep014, 
       xmepownid,'',xmepowndp,'',xmepcrtid,'',xmepcrtdp,'',xmepcrtdt,xmepmodid,'',xmepmoddt,xmepcnfid, 
       '',xmepcnfdt", 
                      " FROM xmep_t",
                      " WHERE xmepent= ? AND xmepdocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt640_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.xmepdocno,t0.xmep002,t0.xmep005,t0.xmepdocdt,t0.xmep003,t0.xmep001, 
       t0.xmep004,t0.xmepstus,t0.xmep006,t0.xmep007,t0.xmep008,t0.xmep009,t0.xmep010,t0.xmep011,t0.xmep012, 
       t0.xmep013,t0.xmepsite,t0.xmep014,t0.xmepownid,t0.xmepowndp,t0.xmepcrtid,t0.xmepcrtdp,t0.xmepcrtdt, 
       t0.xmepmodid,t0.xmepmoddt,t0.xmepcnfid,t0.xmepcnfdt,t1.pmaal004 ,t2.ooag011 ,t3.ooag011 ,t4.ooefl003 , 
       t5.ooag011 ,t6.ooefl003 ,t7.ooag011 ,t8.ooag011",
               " FROM xmep_t t0",
                              " LEFT JOIN pmaal_t t1 ON t1.pmaalent='"||g_enterprise||"' AND t1.pmaal001=t0.xmep005 AND t1.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent='"||g_enterprise||"' AND t2.ooag001=t0.xmep004  ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent='"||g_enterprise||"' AND t3.ooag001=t0.xmepownid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=t0.xmepowndp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent='"||g_enterprise||"' AND t5.ooag001=t0.xmepcrtid  ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent='"||g_enterprise||"' AND t6.ooefl001=t0.xmepcrtdp AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent='"||g_enterprise||"' AND t7.ooag001=t0.xmepmodid  ",
               " LEFT JOIN ooag_t t8 ON t8.ooagent='"||g_enterprise||"' AND t8.ooag001=t0.xmepcnfid  ",
 
               " WHERE t0.xmepent = '" ||g_enterprise|| "' AND t0.xmepdocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE axmt640_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axmt640 WITH FORM cl_ap_formpath("axm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axmt640_init()   
 
      #進入選單 Menu (="N")
      CALL axmt640_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axmt640
      
   END IF 
   
   CLOSE axmt640_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
]]>
  </section>
  <section id="axmt640.mask_functions" ver="1" status="" src="s" readonly="">
    <![CDATA[&include "erp/axm/axmt640_mask.4gl"
]]>
  </section>
  <section id="axmt640.modify" ver="21" status="" src="s" readonly="">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION axmt640_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
 
   #add-point:modify段define
   {<point name="modify.define" edit="s"/>}
   #end add-point    
   #add-point:modify段define(客製用)
   {<point name="modify.define_customerization" edit="c"/>}
   #end add-point    
   
   #保存單頭舊值
   LET g_xmep_m_t.* = g_xmep_m.*
   LET g_xmep_m_o.* = g_xmep_m.*
   
   IF g_xmep_m.xmepdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_xmepdocno_t = g_xmep_m.xmepdocno
 
   CALL s_transaction_begin()
   
   OPEN axmt640_cl USING g_enterprise,g_xmep_m.xmepdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axmt640_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE axmt640_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axmt640_master_referesh USING g_xmep_m.xmepdocno INTO g_xmep_m.xmepdocno,g_xmep_m.xmep002, 
       g_xmep_m.xmep005,g_xmep_m.xmepdocdt,g_xmep_m.xmep003,g_xmep_m.xmep001,g_xmep_m.xmep004,g_xmep_m.xmepstus, 
       g_xmep_m.xmep006,g_xmep_m.xmep007,g_xmep_m.xmep008,g_xmep_m.xmep009,g_xmep_m.xmep010,g_xmep_m.xmep011, 
       g_xmep_m.xmep012,g_xmep_m.xmep013,g_xmep_m.xmepsite,g_xmep_m.xmep014,g_xmep_m.xmepownid,g_xmep_m.xmepowndp, 
       g_xmep_m.xmepcrtid,g_xmep_m.xmepcrtdp,g_xmep_m.xmepcrtdt,g_xmep_m.xmepmodid,g_xmep_m.xmepmoddt, 
       g_xmep_m.xmepcnfid,g_xmep_m.xmepcnfdt,g_xmep_m.xmep005_desc,g_xmep_m.xmep004_desc,g_xmep_m.xmepownid_desc, 
       g_xmep_m.xmepowndp_desc,g_xmep_m.xmepcrtid_desc,g_xmep_m.xmepcrtdp_desc,g_xmep_m.xmepmodid_desc, 
       g_xmep_m.xmepcnfid_desc
   
   #檢查是否允許此動作
   IF NOT axmt640_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_xmep_m_mask_o.* =  g_xmep_m.*
   CALL axmt640_xmep_t_mask()
   LET g_xmep_m_mask_n.* =  g_xmep_m.*
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
 
   
   CALL axmt640_show()
   #add-point:modify段show之後
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
 
    
   WHILE TRUE
      LET g_xmepdocno_t = g_xmep_m.xmepdocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_xmep_m.xmepmodid = g_user 
LET g_xmep_m.xmepmoddt = cl_get_current()
LET g_xmep_m.xmepmodid_desc = cl_get_username(g_xmep_m.xmepmodid)
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      CALL axmt640_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE xmep_t SET (xmepmodid,xmepmoddt) = (g_xmep_m.xmepmodid,g_xmep_m.xmepmoddt)
          WHERE xmepent = g_enterprise AND xmepdocno = g_xmepdocno_t
 
      END IF
    
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_xmep_m.* = g_xmep_m_t.*
         CALL axmt640_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_xmep_m.xmepdocno != g_xmepdocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE xmeq_t SET xmeqdocno = g_xmep_m.xmepdocno
 
          WHERE xmeqent = g_enterprise AND xmeqdocno = g_xmepdocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmeq_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmeq_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt640_set_act_visible()   
   CALL axmt640_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " xmepent = '" ||g_enterprise|| "' AND",
                      " xmepdocno = '", g_xmep_m.xmepdocno, "' "
 
   #填到對應位置
   CALL axmt640_browser_fill("")
 
   CLOSE axmt640_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL axmt640_msgcentre_notify('')
 
END FUNCTION   
]]>
  </section>
  <section id="axmt640.msgcentre_notify" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a66 樣板自動產生(Version:2)
PRIVATE FUNCTION axmt640_msgcentre_notify(lc_state)
   DEFINE lc_state LIKE type_t.chr5
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define" edit="s"/>}
   #end add-point
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define_customerization" edit="c"/>}
   #end add-point   
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   IF g_action_choice = "statechange" THEN
      LET g_msgparam.state = g_action_choice,":",lc_state
   ELSE
      LET g_msgparam.state = g_action_choice
   END IF
 
   #PK資料填寫
   CALL axmt640_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_xmep_m)
 
   #add-point:msgcentre其他通知
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
]]>
  </section>
  <section id="axmt640.other_dialog" ver="2" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="axmt640.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="axmt640.query" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION axmt640_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define" edit="s"/>}
   #end add-point   
   #add-point:query段define(客製用)
   {<point name="query.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_xmeq_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL axmt640_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL axmt640_browser_fill("")
      CALL axmt640_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL axmt640_filter_show('xmepdocno')
   CALL axmt640_filter_show('xmep001')
   CALL axmt640_filter_show('xmep002')
   CALL axmt640_filter_show('xmep003')
   CALL axmt640_filter_show('xmep004')
   CALL axmt640_filter_show('xmep005')
   CALL axmt640_filter_show('xmepsite')
   CALL axmt640_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL axmt640_fetch("F") 
      #顯示單身筆數
      CALL axmt640_idx_chk()
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="axmt640.reproduce" ver="18" status="" src="s" readonly="">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION axmt640_reproduce()
   DEFINE l_newno     LIKE xmep_t.xmepdocno 
   DEFINE l_oldno     LIKE xmep_t.xmepdocno 
 
   DEFINE l_master    RECORD LIKE xmep_t.*
   DEFINE l_detail    RECORD LIKE xmeq_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define
   {<point name="reproduce.define" edit="s"/>}
   #end add-point   
   #add-point:reproduce段define(客製用)
   {<point name="reproduce.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_xmep_m.xmepdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_xmepdocno_t = g_xmep_m.xmepdocno
 
    
   LET g_xmep_m.xmepdocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_xmep_m.xmepownid = g_user
      LET g_xmep_m.xmepowndp = g_dept
      LET g_xmep_m.xmepcrtid = g_user
      LET g_xmep_m.xmepcrtdp = g_dept 
      LET g_xmep_m.xmepcrtdt = cl_get_current()
      LET g_xmep_m.xmepmodid = g_user
      LET g_xmep_m.xmepmoddt = cl_get_current()
      LET g_xmep_m.xmepstus = 'N'
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_xmep_m.xmepstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #清空key欄位的desc
   
   
   CALL axmt640_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_xmep_m.* TO NULL
      INITIALIZE g_xmeq_d TO NULL
 
      #add-point:複製取消後
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL axmt640_show()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt640_set_act_visible()   
   CALL axmt640_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_xmepdocno_t = g_xmep_m.xmepdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " xmepent = '" ||g_enterprise|| "' AND",
                      " xmepdocno = '", g_xmep_m.xmepdocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axmt640_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL axmt640_idx_chk()
   
   #功能已完成,通報訊息中心
   CALL axmt640_msgcentre_notify('')
 
END FUNCTION
]]>
  </section>
  <section id="axmt640.set_act_no_visible" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限關閉
PRIVATE FUNCTION axmt640_set_act_no_visible()
   #add-point:set_act_no_visible段define
   {<point name="set_act_no_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible段define(客製用)
   {<point name="set_act_no_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible段
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="axmt640.set_act_no_visible_b" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限關閉
PRIVATE FUNCTION axmt640_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define
   {<point name="set_act_no_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define(客製用)
   {<point name="set_act_no_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="axmt640.set_act_visible" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限開啟
PRIVATE FUNCTION axmt640_set_act_visible()
   #add-point:set_act_visible段define
   {<point name="set_act_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible段define(客製用)
   {<point name="set_act_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible段
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="axmt640.set_act_visible_b" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限開啟
PRIVATE FUNCTION axmt640_set_act_visible_b()
   #add-point:set_act_visible_b段define
   {<point name="set_act_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible_b段define(客製用)
   {<point name="set_act_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible_b段
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="axmt640.set_entry" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION axmt640_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define" edit="s"/>}
   #end add-point       
   #add-point:set_entry段define(客製用)
   {<point name="set_entry.define_customerization" edit="c"/>}
   #end add-point       
   
   CALL cl_set_comp_entry("xmepdocno,xmepdocdt",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("xmepdocno",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="axmt640.set_entry_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION axmt640_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define" edit="s"/>}
   #end add-point     
   #add-point:set_entry_b段define(客製用)
   {<point name="set_entry_b.define_customerization" edit="c"/>}
   #end add-point     
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="axmt640.set_no_entry" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION axmt640_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define" edit="s"/>}
   #end add-point     
   #add-point:set_no_entry段define(客製用)
   {<point name="set_no_entry.define_customerization" edit="c"/>}
   #end add-point     
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("xmepdocno",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("xmepdocno,xmepdocdt",FALSE)
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="axmt640.set_no_entry_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION axmt640_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define" edit="s"/>}
   #end add-point    
   #add-point:set_no_entry_b段define(客製用)
   {<point name="set_no_entry_b.define_customerization" edit="c"/>}
   #end add-point    
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="axmt640.set_pk_array" ver="4" status="" src="s" readonly="">
    <![CDATA[   #應用 a51 樣板自動產生(Version:5)
#+ 給予pk_array內容
PRIVATE FUNCTION axmt640_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define" edit="s"/>}
   #end add-point
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_xmep_m.xmepdocno
   LET g_pk_array[1].column = 'xmepdocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="axmt640.show" ver="18" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION axmt640_show()
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define
   {<point name="show.define" edit="s"/>}
   #end add-point  
   #add-point:show段define(客製用)
   {<point name="show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL axmt640_b_fill() #單身填充
      CALL axmt640_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:3)
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:2)
   CALL axmt640_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_xmep_m_mask_o.* =  g_xmep_m.*
   CALL axmt640_xmep_t_mask()
   LET g_xmep_m_mask_n.* =  g_xmep_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xmep_m.xmepdocno,g_xmep_m.xmep002,g_xmep_m.oobxl003,g_xmep_m.xmep005,g_xmep_m.xmep005_desc, 
       g_xmep_m.xmepdocdt,g_xmep_m.xmep003,g_xmep_m.xmep001,g_xmep_m.xmep001_desc,g_xmep_m.xmep004,g_xmep_m.xmep004_desc, 
       g_xmep_m.xmepstus,g_xmep_m.xmep006,g_xmep_m.xmep007,g_xmep_m.xmep008,g_xmep_m.xmep009,g_xmep_m.xmep010, 
       g_xmep_m.xmep011,g_xmep_m.xmep012,g_xmep_m.xmep013,g_xmep_m.xmepsite,g_xmep_m.xmep014,g_xmep_m.xmepownid, 
       g_xmep_m.xmepownid_desc,g_xmep_m.xmepowndp,g_xmep_m.xmepowndp_desc,g_xmep_m.xmepcrtid,g_xmep_m.xmepcrtid_desc, 
       g_xmep_m.xmepcrtdp,g_xmep_m.xmepcrtdp_desc,g_xmep_m.xmepcrtdt,g_xmep_m.xmepmodid,g_xmep_m.xmepmodid_desc, 
       g_xmep_m.xmepmoddt,g_xmep_m.xmepcnfid,g_xmep_m.xmepcnfid_desc,g_xmep_m.xmepcnfdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_xmep_m.xmepstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_xmeq_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL axmt640_detail_show()
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="axmt640.signature" ver="3" status="" src="s" readonly="">
    <![CDATA[   #應用 a39 樣板自動產生(Version:7)
#+ BPM提交
PRIVATE FUNCTION axmt640_send()
   #add-point:send段define
   {<point name="send.define" edit="s"/>}
   #end add-point 
   #add-point:send段define(客製用)
   {<point name="send.define_customerization" edit="c"/>}
   #end add-point 
 
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
 
 
   CALL axmt640_show()
   CALL axmt640_set_pk_array()
   
   #add-point: 初始化的ADP
   {<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_xmep_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_xmeq_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP
   {<point name="send.before_cli" />}
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP
   {<point name="send.after_send" />}
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL axmt640_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL axmt640_ui_headershow()
   CALL axmt640_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
#應用 a40 樣板自動產生(Version:4)
#+ BPM抽單
PRIVATE FUNCTION axmt640_draw_out()
   #add-point:draw段define
   {<point name="draw.define" edit="s"/>}
   #end add-point
   #add-point:draw段define
   {<point name="draw.define_customerization" edit="c"/>}
   #end add-point
 
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_row].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL axmt640_ui_headershow()  
   CALL axmt640_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
]]>
  </section>
  <section id="axmt640.state_change" ver="11" status="" src="s" readonly="">
    <![CDATA[   #應用 a09 樣板自動產生(Version:11)
#+ 確認碼變更 
PRIVATE FUNCTION axmt640_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define" edit="s"/>}
   #end add-point  
   #add-point:statechange段define(客製用)
   {<point name="statechange.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_xmep_m.xmepdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN axmt640_cl USING g_enterprise,g_xmep_m.xmepdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axmt640_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE axmt640_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE axmt640_master_referesh USING g_xmep_m.xmepdocno INTO g_xmep_m.xmepdocno,g_xmep_m.xmep002, 
       g_xmep_m.xmep005,g_xmep_m.xmepdocdt,g_xmep_m.xmep003,g_xmep_m.xmep001,g_xmep_m.xmep004,g_xmep_m.xmepstus, 
       g_xmep_m.xmep006,g_xmep_m.xmep007,g_xmep_m.xmep008,g_xmep_m.xmep009,g_xmep_m.xmep010,g_xmep_m.xmep011, 
       g_xmep_m.xmep012,g_xmep_m.xmep013,g_xmep_m.xmepsite,g_xmep_m.xmep014,g_xmep_m.xmepownid,g_xmep_m.xmepowndp, 
       g_xmep_m.xmepcrtid,g_xmep_m.xmepcrtdp,g_xmep_m.xmepcrtdt,g_xmep_m.xmepmodid,g_xmep_m.xmepmoddt, 
       g_xmep_m.xmepcnfid,g_xmep_m.xmepcnfdt,g_xmep_m.xmep005_desc,g_xmep_m.xmep004_desc,g_xmep_m.xmepownid_desc, 
       g_xmep_m.xmepowndp_desc,g_xmep_m.xmepcrtid_desc,g_xmep_m.xmepcrtdp_desc,g_xmep_m.xmepmodid_desc, 
       g_xmep_m.xmepcnfid_desc
 
   #檢查是否允許此動作
   IF NOT axmt640_action_chk() THEN
      CLOSE axmt640_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_xmep_m.xmepdocno,g_xmep_m.xmep002,g_xmep_m.oobxl003,g_xmep_m.xmep005,g_xmep_m.xmep005_desc, 
       g_xmep_m.xmepdocdt,g_xmep_m.xmep003,g_xmep_m.xmep001,g_xmep_m.xmep001_desc,g_xmep_m.xmep004,g_xmep_m.xmep004_desc, 
       g_xmep_m.xmepstus,g_xmep_m.xmep006,g_xmep_m.xmep007,g_xmep_m.xmep008,g_xmep_m.xmep009,g_xmep_m.xmep010, 
       g_xmep_m.xmep011,g_xmep_m.xmep012,g_xmep_m.xmep013,g_xmep_m.xmepsite,g_xmep_m.xmep014,g_xmep_m.xmepownid, 
       g_xmep_m.xmepownid_desc,g_xmep_m.xmepowndp,g_xmep_m.xmepowndp_desc,g_xmep_m.xmepcrtid,g_xmep_m.xmepcrtid_desc, 
       g_xmep_m.xmepcrtdp,g_xmep_m.xmepcrtdp_desc,g_xmep_m.xmepcrtdt,g_xmep_m.xmepmodid,g_xmep_m.xmepmodid_desc, 
       g_xmep_m.xmepmoddt,g_xmep_m.xmepcnfid,g_xmep_m.xmepcnfid_desc,g_xmep_m.xmepcnfdt
 
   CASE g_xmep_m.xmepstus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_xmep_m.xmepstus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      #應用 a36 樣板自動產生(Version:4)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT axmt640_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE axmt640_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT axmt640_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE axmt640_cl
            RETURN
         END IF
 
 
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制
            {<point name="statechange.unconfirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制
            {<point name="statechange.confirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制
            {<point name="statechange.approved"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制
      #      {<point name="statechange.withdraw"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制
            {<point name="statechange.rejection"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制
      #      {<point name="statechange.signing"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制
            {<point name="statechange.invalid"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "X"
      ) OR 
      g_xmep_m.xmepstus = lc_state OR cl_null(lc_state) THEN
      CLOSE axmt640_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_xmep_m.xmepmodid = g_user
   LET g_xmep_m.xmepmoddt = cl_get_current()
   LET g_xmep_m.xmepstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE xmep_t 
      SET (xmepstus,xmepmodid,xmepmoddt) 
        = (g_xmep_m.xmepstus,g_xmep_m.xmepmodid,g_xmep_m.xmepmoddt)     
    WHERE xmepent = g_enterprise AND xmepdocno = g_xmep_m.xmepdocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE axmt640_master_referesh USING g_xmep_m.xmepdocno INTO g_xmep_m.xmepdocno,g_xmep_m.xmep002, 
          g_xmep_m.xmep005,g_xmep_m.xmepdocdt,g_xmep_m.xmep003,g_xmep_m.xmep001,g_xmep_m.xmep004,g_xmep_m.xmepstus, 
          g_xmep_m.xmep006,g_xmep_m.xmep007,g_xmep_m.xmep008,g_xmep_m.xmep009,g_xmep_m.xmep010,g_xmep_m.xmep011, 
          g_xmep_m.xmep012,g_xmep_m.xmep013,g_xmep_m.xmepsite,g_xmep_m.xmep014,g_xmep_m.xmepownid,g_xmep_m.xmepowndp, 
          g_xmep_m.xmepcrtid,g_xmep_m.xmepcrtdp,g_xmep_m.xmepcrtdt,g_xmep_m.xmepmodid,g_xmep_m.xmepmoddt, 
          g_xmep_m.xmepcnfid,g_xmep_m.xmepcnfdt,g_xmep_m.xmep005_desc,g_xmep_m.xmep004_desc,g_xmep_m.xmepownid_desc, 
          g_xmep_m.xmepowndp_desc,g_xmep_m.xmepcrtid_desc,g_xmep_m.xmepcrtdp_desc,g_xmep_m.xmepmodid_desc, 
          g_xmep_m.xmepcnfid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_xmep_m.xmepdocno,g_xmep_m.xmep002,g_xmep_m.oobxl003,g_xmep_m.xmep005,g_xmep_m.xmep005_desc, 
          g_xmep_m.xmepdocdt,g_xmep_m.xmep003,g_xmep_m.xmep001,g_xmep_m.xmep001_desc,g_xmep_m.xmep004, 
          g_xmep_m.xmep004_desc,g_xmep_m.xmepstus,g_xmep_m.xmep006,g_xmep_m.xmep007,g_xmep_m.xmep008, 
          g_xmep_m.xmep009,g_xmep_m.xmep010,g_xmep_m.xmep011,g_xmep_m.xmep012,g_xmep_m.xmep013,g_xmep_m.xmepsite, 
          g_xmep_m.xmep014,g_xmep_m.xmepownid,g_xmep_m.xmepownid_desc,g_xmep_m.xmepowndp,g_xmep_m.xmepowndp_desc, 
          g_xmep_m.xmepcrtid,g_xmep_m.xmepcrtid_desc,g_xmep_m.xmepcrtdp,g_xmep_m.xmepcrtdp_desc,g_xmep_m.xmepcrtdt, 
          g_xmep_m.xmepmodid,g_xmep_m.xmepmodid_desc,g_xmep_m.xmepmoddt,g_xmep_m.xmepcnfid,g_xmep_m.xmepcnfid_desc, 
          g_xmep_m.xmepcnfdt
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE axmt640_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL axmt640_msgcentre_notify(lc_state)
   
END FUNCTION
 
 
]]>
  </section>
  <section id="axmt640.status_show" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION axmt640_status_show()
   #add-point:status_show段define
   {<point name="status_show.define" edit="s"/>}
   #end add-point
   #add-point:status_show段define(客製用)
   {<point name="status_show.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:status_show段status_show
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="axmt640.ui_browser_refresh" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION axmt640_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define" edit="s"/>}
   #end add-point    
   #add-point:ui_browser_refresh段define(客製用)
   {<point name="ui_browser_refresh.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_xmepdocno = g_xmep_m.xmepdocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="axmt640.ui_detailshow" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION axmt640_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_detailshow段define(客製用)
   {<point name="ui_detailshow.define_customerization" edit="c"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="axmt640.ui_dialog" ver="21" status="" src="s" readonly="">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION axmt640_ui_dialog()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define(客製用)
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:2)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL axmt640_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_xmep_m.* TO NULL
         CALL g_xmeq_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL axmt640_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL axmt640_fetch('') # reload data
               LET l_ac = 1
               CALL axmt640_ui_detailshow() #Setting the current row 
         
               CALL axmt640_idx_chk()
               #NEXT FIELD xmeqseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_xmeq_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axmt640_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL axmt640_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL axmt640_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL axmt640_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL axmt640_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL axmt640_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL axmt640_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL axmt640_set_act_visible()   
            CALL axmt640_set_act_no_visible()
            IF NOT (g_xmep_m.xmepdocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " xmepent = '" ||g_enterprise|| "' AND",
                                  " xmepdocno = '", g_xmep_m.xmepdocno, "' "
 
               #填到對應位置
               CALL axmt640_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:2)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status
            {<point name="menu.bpm_status" />}
            #END add-point
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL axmt640_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL axmt640_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = "-100" 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CLEAR FORM
               ELSE
                  CALL axmt640_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:2)
            #過濾瀏覽頁資料
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL axmt640_filter()
               EXIT DIALOG
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL axmt640_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt640_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL axmt640_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt640_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL axmt640_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt640_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL axmt640_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt640_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL axmt640_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt640_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_xmeq_d)
                  LET g_export_id[1]   = "s_detail1"
 
                  #add-point:ON ACTION exporttoexcel
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD xmeqseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL axmt640_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL axmt640_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL axmt640_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL axmt640_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               &include "erp/axm/axmt640_rep.4gl"
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL axmt640_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL axmt640_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               #應用 a59 樣板自動產生(Version:2)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
 
 
 
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION xmep_memo
            LET g_action_choice="xmep_memo"
            IF cl_auth_chk_act("xmep_memo") THEN
               
               #add-point:ON ACTION xmep_memo
               {<point name="menu.xmep_memo" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION prog_xmep002
            LET g_action_choice="prog_xmep002"
            IF cl_auth_chk_act("prog_xmep002") THEN
               
               #add-point:ON ACTION prog_xmep002
               {<point name="menu.prog_xmep002" />}
               #END add-point
               
            END IF
 
 
 
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL axmt640_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL axmt640_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL axmt640_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_xmep_m.xmepdocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="axmt640.ui_headershow" ver="10" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION axmt640_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_headershow段define(客製用)
   {<point name="ui_headershow.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_xmep_m.xmepdocno = g_browser[g_current_idx].b_xmepdocno   
 
   EXECUTE axmt640_master_referesh USING g_xmep_m.xmepdocno INTO g_xmep_m.xmepdocno,g_xmep_m.xmep002, 
       g_xmep_m.xmep005,g_xmep_m.xmepdocdt,g_xmep_m.xmep003,g_xmep_m.xmep001,g_xmep_m.xmep004,g_xmep_m.xmepstus, 
       g_xmep_m.xmep006,g_xmep_m.xmep007,g_xmep_m.xmep008,g_xmep_m.xmep009,g_xmep_m.xmep010,g_xmep_m.xmep011, 
       g_xmep_m.xmep012,g_xmep_m.xmep013,g_xmep_m.xmepsite,g_xmep_m.xmep014,g_xmep_m.xmepownid,g_xmep_m.xmepowndp, 
       g_xmep_m.xmepcrtid,g_xmep_m.xmepcrtdp,g_xmep_m.xmepcrtdt,g_xmep_m.xmepmodid,g_xmep_m.xmepmoddt, 
       g_xmep_m.xmepcnfid,g_xmep_m.xmepcnfdt,g_xmep_m.xmep005_desc,g_xmep_m.xmep004_desc,g_xmep_m.xmepownid_desc, 
       g_xmep_m.xmepowndp_desc,g_xmep_m.xmepcrtid_desc,g_xmep_m.xmepcrtdp_desc,g_xmep_m.xmepmodid_desc, 
       g_xmep_m.xmepcnfid_desc
   CALL axmt640_xmep_t_mask()
   CALL axmt640_show()
      
END FUNCTION
]]>
  </section>
  <section id="axmt640.unlock_b" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION axmt640_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define" edit="s"/>}
   #end add-point  
   #add-point:unlock_b段define(客製用)
   {<point name="unlock_b.define_customerization" edit="c"/>}
   #end add-point  
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmt640_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="axmt640.update_b" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION axmt640_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define" edit="s"/>}
   #end add-point   
   #add-point:update_b段define(客製用)
   {<point name="update_b.define_customerization" edit="c"/>}
   #end add-point   
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmeq_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL axmt640_xmeq_t_mask_restore('restore_mask_o')
               
      UPDATE xmeq_t 
         SET (xmeqdocno,
              xmeqseq
              ,xmeq001,xmeq002,xmeq003,xmeq004,xmeqsite) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_xmeq_d[g_detail_idx].xmeq001,g_xmeq_d[g_detail_idx].xmeq002,g_xmeq_d[g_detail_idx].xmeq003, 
                  g_xmeq_d[g_detail_idx].xmeq004,g_xmeq_d[g_detail_idx].xmeqsite) 
         WHERE xmeqent = g_enterprise AND xmeqdocno = ps_keys_bak[1] AND xmeqseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmeq_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmeq_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL axmt640_xmeq_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
