<add_points prog="axmt410" std_prog="axmt410" erpver="1.0" module="AXM" ver="2" env="s" zone="t10dev" booking="Y" type="M" identity="s">
  <other>
    <code_template value="F" status="" />
    <free_style value="N" status="" />
  </other>
  <point name="function.axmt410_xmfddocno_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 單號檢核
# Memo...........:
# Usage..........: CALL axmt410_xmfddocno_chk()
#                  RETURNING TRUE/FALSE
# Date & Author..: 2014/06/26 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt410_xmfddocno_chk()
   DEFINE l_success     LIKE type_t.num5
   DEFINE l_flag        LIKE type_t.num5 
   
   #key值檢查  
   IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmfd_t WHERE "||"xmfdent = '" ||g_enterprise|| "' AND "||"xmfddocno = '"||g_xmfd_m.xmfddocno ||"'",'std-00004',0) THEN 
      RETURN FALSE
   END IF 
   
   #檢查單別  
   IF NOT s_aooi200_chk_slip(g_site,'',g_xmfd_m.xmfddocno,g_prog) THEN
      RETURN FALSE 
   END IF 
   
   #檢核輸入的單據別是否可以被key人員對應的控制組使用,'2' 為銷售控制組類型 
   CALL s_control_chk_doc('1',g_xmfd_m.xmfddocno,'2',g_user,g_dept,'','')  
        RETURNING l_success,l_flag  
   IF l_success THEN 
      IF NOT l_flag THEN
         CALL cl_err(g_xmfd_m.xmfddocno,'axm-00015',1)
         RETURN FALSE 
      END IF 
   ELSE 
      RETURN FALSE
   END IF 

   RETURN TRUE
END FUNCTION]]>
</point>
  <point name="function.axmt410_xmfd009_ref" cite_std="N" status="u" ver="1" src="s" new="Y" order="2" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION axmt410_xmfd009_ref(p_xmfaldocno)
   DEFINE p_xmfaldocno   LIKE xmfal_t.xmfaldocno
   DEFINE r_xmfal003     LIKE xmfal_t.xmfal003
   DEFINE l_sql          STRING

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_xmfaldocno
   LET l_sql = "SELECT xmfal003 ",
               "  FROM xmfal_t ",
               " WHERE xmfalent='"||g_enterprise||"' ",
               "   AND xmfaldocno=? ",
               "   AND xmfal002='"||g_dlang||"'"
   CALL ap_ref_array2(g_ref_fields,l_sql,"") RETURNING g_rtn_fields
   LET r_xmfal003 = '', g_rtn_fields[1] , ''

   RETURN r_xmfal003
END FUNCTION]]>
</point>
  <point name="function.axmt410_xmfd015_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="3" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION axmt410_xmfd015_ref(p_oocql002)
   DEFINE p_oocql002     LIKE oocql_t.oocql002
   DEFINE r_oocql004     LIKE oocql_t.oocql004
   DEFINE l_sql          STRING

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_oocql002
   LET l_sql = "SELECT oocql004 ",
               "  FROM oocql_t ",
               " WHERE oocqlent='"||g_enterprise||"' ",
               "   AND oocql001='238' ",
               "   AND oocql002=? ",
               "   AND oocql003='"||g_dlang||"'"
   CALL ap_ref_array2(g_ref_fields,l_sql,"") RETURNING g_rtn_fields
   LET r_oocql004 = '', g_rtn_fields[1] , ''

   RETURN r_oocql004
END FUNCTION]]>
</point>
  <point name="function.axmt410_xmfd016_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="4" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION axmt410_xmfd016_ref(p_ooibl002)
   DEFINE p_ooibl002     LIKE ooibl_t.ooibl002
   DEFINE r_ooibl004     LIKE ooibl_t.ooibl004
   DEFINE l_sql          STRING

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_ooibl002
   LET l_sql =  "SELECT ooibl004 ",
                "  FROM ooibl_t ",
                " WHERE ooiblent='"||g_enterprise||"' ",
                "   AND ooibl002=? ",
                "   AND ooibl003='"||g_dlang||"'"
   CALL ap_ref_array2(g_ref_fields,l_sql,"") RETURNING g_rtn_fields
   LET r_ooibl004 = '', g_rtn_fields[1] , ''
   RETURN r_ooibl004
END FUNCTION]]>
</point>
  <point name="function.axmt410_xmfd017_ref" cite_std="N" status="" ver="2" src="s" new="Y" order="5" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION axmt410_xmfd017_ref(p_xmahl001)
   DEFINE p_xmahl001     LIKE xmahl_t.xmahl001
   DEFINE r_xmahl003     LIKE xmahl_t.xmahl003
   DEFINE l_sql          STRING

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_xmahl001
   LET l_sql =  "SELECT xmahl003 ",
                "  FROM xmahl_t ",
                " WHERE xmahlent='"||g_enterprise||"' ",
                "   AND xmahl001=? ",
                "   AND xmahl002='"||g_dlang||"'"
   CALL ap_ref_array2(g_ref_fields,l_sql,"") RETURNING g_rtn_fields
   LET r_xmahl003 = '', g_rtn_fields[1] , ''

   RETURN r_xmahl003
END FUNCTION]]>
</point>
  <point name="function.axmt410_xmfd018_ref" cite_std="N" status="" ver="2" src="s" new="Y" order="6" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION axmt410_xmfd018_ref(p_oocql002)
   DEFINE p_oocql002     LIKE oocql_t.oocql002
   DEFINE r_oocql004     LIKE oocql_t.oocql004
   DEFINE l_sql          STRING

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_oocql002
   LET l_sql = "SELECT oocql004 ",
               "  FROM oocql_t ",
               " WHERE oocqlent='"||g_enterprise||"' ",
               "   AND oocql001='275' ",
               "   AND oocql002=? ",
               "   AND oocql003='"||g_dlang||"'"
   CALL ap_ref_array2(g_ref_fields,l_sql,"") RETURNING g_rtn_fields
   LET r_oocql004 = '', g_rtn_fields[1] , ''

   RETURN r_oocql004
END FUNCTION]]>
</point>
  <point name="function.axmt410_xmfd018_chk" cite_std="N" status="" ver="2" src="s" new="Y" order="7" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION axmt410_xmfd018_chk(p_xmfd018)
   DEFINE p_xmfd018     LIKE xmfd_t.xmfd018
   DEFINE r_success     LIKE type_t.num5

   LET r_success = TRUE

   IF NOT cl_null(p_xmfd018) THEN
      IF NOT s_azzi650_chk_exist('275',p_xmfd018) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF

   RETURN r_success
END FUNCTION]]>
</point>
  <point name="function.axmt410_xmfd019_ref" cite_std="N" status="" ver="2" src="s" new="Y" order="8" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION axmt410_xmfd019_ref(p_oocql002)
   DEFINE p_oocql002     LIKE oocql_t.oocql002
   DEFINE r_oocql004     LIKE oocql_t.oocql004
   DEFINE l_sql          STRING

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_oocql002
   LET l_sql = "SELECT oocql004 ",
               "  FROM oocql_t ",
               " WHERE oocqlent='"||g_enterprise||"' ",
               "   AND oocql001='263' ",
               "   AND oocql002=? ",
               "   AND oocql003='"||g_dlang||"'"
   CALL ap_ref_array2(g_ref_fields,l_sql,"") RETURNING g_rtn_fields
   LET r_oocql004 = '', g_rtn_fields[1] , ''

   RETURN r_oocql004
END FUNCTION]]>
</point>
  <point name="function.axmt410_xmfd022_ref" cite_std="N" status="" ver="2" src="s" new="Y" order="9" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION axmt410_xmfd022_ref(p_xmfd003,p_xmfd022)
   DEFINE p_xmfd003      LIKE xmfd_t.xmfd003
   DEFINE p_xmfd022      LIKE xmfd_t.xmfd022
   DEFINE l_success      LIKE type_t.num5
   DEFINE l_address      STRING
   DEFINE l_pmaa027      LIKE pmaa_t.pmaa027
   DEFINE r_xmfd022_desc LIKE oofb_t.oofb011
   DEFINE r_oofb017      LIKE oofb_t.oofb017

   LET r_xmfd022_desc = ''
   LET r_oofb017 = '' 
   
   IF cl_null(p_xmfd022) THEN
      RETURN '',''
   END IF 
   
   IF NOT cl_null(p_xmfd003) THEN
      CALL s_axmt500_get_pmaa027(p_xmfd003) RETURNING l_pmaa027
      IF NOT cl_null(l_pmaa027) THEN
         SELECT oofb011 INTO r_xmfd022_desc
           FROM oofb_t
          WHERE oofbent  = g_enterprise
            AND oofb002  = l_pmaa027
            AND oofbstus = 'Y'
            AND oofb019  = p_xmfd022

         #呼叫地址組合應用元件，將組合好的聯絡地址顯示在下方
         CALL s_aooi350_get_address(l_pmaa027,p_xmfd022,g_dlang)RETURNING l_success,l_address
         IF l_success THEN
            LET r_oofb017 = l_address
         END IF
      END IF
   END IF

   RETURN r_xmfd022_desc,r_oofb017
END FUNCTION]]>
</point>
  <point name="function.axmt410_from_axmt400_get_default" cite_std="N" status="" ver="2" src="s" new="Y" order="10" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 從axmt400取得預設值
# Memo...........:
# Usage..........: CALL axmt410_from_axmt400_get_default()
# Date & Author..: 2014/07/07 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt410_from_axmt400_get_default()
   DEFINE l_ooef016     LIKE ooef_t.ooef016
   DEFINE l_success     LIKE type_t.num5
   DEFINE l_oodb011     LIKE oodb_t.oodb011 
   
   LET l_ooef016 = ''
   SELECT ooef016 INTO l_ooef016
     FROM ooef_t
    WHERE ooefent = g_enterprise
      AND ooef001 = g_site 
      
   SELECT xmev006,xmev008
     INTO g_xmfd_m.xmfd010,g_xmfd_m.xmfd012
     FROM xmev_t
    WHERE xmevent = g_enterprise
      AND xmevdocno = g_xmfd_m.xmfd005
      AND xmevstus = 'Y' 

   #取匯率  
   CALL s_aooi160_get_exrate('1',g_site,g_today,g_xmfd_m.xmfd010,l_ooef016,0,'11') #ming 最後1個11的，要看參數決定  
        RETURNING g_xmfd_m.xmfd011 
        
   #利用稅別檢查 取得稅率與單價含稅否 
   CALL s_tax_chk(g_site,g_xmfd_m.xmfd012)
        RETURNING l_success,g_xmfd_m.xmfd012_desc,g_xmfd_m.xmfd014,
                  g_xmfd_m.xmfd013,l_oodb011

   DISPLAY BY NAME g_xmfd_m.xmfd010,g_xmfd_m.xmfd011,g_xmfd_m.xmfd012,
                   g_xmfd_m.xmfd013,g_xmfd_m.xmfd014
END FUNCTION]]>
</point>
  <point name="function.axmt410_from_axmt410_get_default" cite_std="N" status="" ver="2" src="s" new="Y" order="11" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 從axmt410取得預設值
# Memo...........:
# Usage..........: CALL axmt410_from_axmt410_get_default()
# Date & Author..: 2014/07/07 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt410_from_axmt410_get_default()
   DEFINE l_ooef016     LIKE ooef_t.ooef016
   DEFINE l_success     LIKE type_t.num5
   DEFINE l_oodb011     LIKE oodb_t.oodb011

   LET l_ooef016 = ''
   SELECT ooef016 INTO l_ooef016
     FROM ooef_t
    WHERE ooefent = g_enterprise
      AND ooef001 = g_site

   SELECT xmfd006,xmfd007,xmfd008,xmfd009,xmfd010,xmfd012,xmfd015,xmfd016,
          xmfd017,xmfd018,xmfd019,xmfd020,xmfd021,xmfd022,xmfd023,xmfd029
     INTO g_xmfd_m.xmfd006,g_xmfd_m.xmfd007,g_xmfd_m.xmfd008,g_xmfd_m.xmfd009,
          g_xmfd_m.xmfd010,g_xmfd_m.xmfd012,g_xmfd_m.xmfd015,g_xmfd_m.xmfd016,
          g_xmfd_m.xmfd017,g_xmfd_m.xmfd018,g_xmfd_m.xmfd019,g_xmfd_m.xmfd020,
          g_xmfd_m.xmfd021,g_xmfd_m.xmfd022,g_xmfd_m.xmfd023,g_xmfd_m.xmfd029
     FROM xmfd_t
    WHERE xmfdent = g_enterprise
      AND xmfddocno = g_xmfd_m.xmfd005
      AND xmfdstus = 'Y' 
      
   #取匯率  
   CALL s_aooi160_get_exrate('1',g_site,g_today,g_xmfd_m.xmfd010,l_ooef016,0,'11') #ming 最後1個11的，要看參數決定  
        RETURNING g_xmfd_m.xmfd011

   #利用稅別檢查 取得稅率與單價含稅否 
   CALL s_tax_chk(g_site,g_xmfd_m.xmfd012)
        RETURNING l_success,g_xmfd_m.xmfd012_desc,g_xmfd_m.xmfd014,
                  g_xmfd_m.xmfd013,l_oodb011

   DISPLAY BY NAME g_xmfd_m.xmfd006,g_xmfd_m.xmfd007,g_xmfd_m.xmfd008,
                   g_xmfd_m.xmfd009,g_xmfd_m.xmfd010,g_xmfd_m.xmfd011,
                   g_xmfd_m.xmfd012,g_xmfd_m.xmfd013,g_xmfd_m.xmfd014,
                   g_xmfd_m.xmfd015,g_xmfd_m.xmfd016,g_xmfd_m.xmfd017,
                   g_xmfd_m.xmfd018,g_xmfd_m.xmfd019,g_xmfd_m.xmfd020,
                   g_xmfd_m.xmfd021,g_xmfd_m.xmfd022,g_xmfd_m.xmfd023,
                   g_xmfd_m.xmfd029
END FUNCTION]]>
</point>
  <point name="function.axmt410_chk_xmfa" cite_std="N" status="" ver="2" src="s" new="Y" order="12" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 範本編號+版本檢查
# Memo...........:
# Usage..........: CALL axmt410_chk_xmfa(p_xmfadocno)
# Input parameter: p_xmfadocno：範本編號
# Date & Author..: 2014/07/07 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt410_chk_xmfa(p_xmfadocno)
   DEFINE p_xmfadocno     LIKE xmfa_t.xmfadocno
   DEFINE l_cnt           LIKE type_t.num5

   LET g_errno = ''
   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt
     FROM xmfa_t
    WHERE xmfaent   = g_enterprise
      AND xmfadocno = p_xmfadocno

   IF cl_null(l_cnt) OR l_cnt = 0 THEN
      LET g_errno = 'axm-00341'      #此範本編號不存在！  
      RETURN
   END IF

   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt
     FROM xmfa_t
    WHERE xmfaent   = g_enterprise
      AND xmfadocno = p_xmfadocno
      AND xmfastus  = 'Y'

   IF cl_null(l_cnt) OR l_cnt = 0 THEN
      LET g_errno = 'abg-00008'      #輸入的資料無效!  
      RETURN
   END IF
END FUNCTION]]>
</point>
  <point name="function.axmt410_get_oocq019" cite_std="N" status="" ver="2" src="s" new="Y" order="13" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 取得運輸類型
# Memo...........:
# Usage..........: CALL axmt410_get_oocq019(p_oocq002)
#                  RETURNING r_oocq029
# Input parameter: p_oocq002
# Return code....: r_oocq019
# Date & Author..: 2014/07/07 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt410_get_oocq019(p_oocq002)
   DEFINE p_oocq002     LIKE oocq_t.oocq002
   DEFINE r_oocq019     LIKE oocq_t.oocq019

   LET r_oocq019 = ''
   SELECT oocq019 INTO r_oocq019
     FROM oocq_t
    WHERE oocq001 = '263'
      AND oocq002 = p_oocq002

   RETURN r_oocq019
END FUNCTION]]>
</point>
  <point name="function.axmt410_imaa005_exists" cite_std="N" status="" ver="2" src="s" new="Y" order="14" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 產品特徵類別
# Memo...........:
# Usage..........: CALL axmt410_imaa005_exists()
#                  RETURNING TRUE/FALSE
# Return code....: TRUE/FALSE
# Date & Author..: 2014/07/07 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt410_imaa005_exists()
   DEFINE l_imaa005     LIKE imaa_t.imaa005

   IF cl_null(g_xmff_d[l_ac].xmff001) THEN
      RETURN FALSE
   END IF

   LET l_imaa005 = ''
   SELECT imaa005 INTO l_imaa005
     FROM imaa_t
    WHERE imaaent = g_enterprise
      AND imaa001 = g_xmff_d[l_ac].xmff001
   IF cl_null(l_imaa005) THEN
      RETURN FALSE
   END IF

   RETURN TRUE
END FUNCTION]]>
</point>
  <point name="function.axmt410_from_axmt400_get_body" cite_std="N" status="" ver="2" src="s" new="Y" order="15" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 從估價單中取得相關的單身資料
# Memo...........:
# Usage..........: CALL axmt410_from_axmt400_get_body()
# Date & Author..: 2014/07/07 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt410_from_axmt400_get_body()
   DEFINE l_sql     STRING
   DEFINE l_xmewseq LIKE xmew_t.xmewseq
   DEFINE l_xmew003 LIKE xmew_t.xmew003
   DEFINE l_xmew004 LIKE xmew_t.xmew004
   DEFINE l_xmew006 LIKE xmew_t.xmew006
   DEFINE l_xmew014 LIKE xmew_t.xmew014
   DEFINE l_cnt     LIKE type_t.num5
   DEFINE l_xmff    RECORD LIKE xmff_t.*
   DEFINE l_xmeyseq LIKE xmey_t.xmeyseq
   DEFINE l_xmey001 LIKE xmey_t.xmey001
   DEFINE l_xmey002 LIKE xmey_t.xmey002
   DEFINE l_xmfe    RECORD LIKE xmfe_t.* 
   
   LET l_sql = "SELECT xmewseq,xmew003,xmew004,xmew006,xmew014 ",
               "  FROM xmev_t,xmew_t ",
               " WHERE xmevent = xmewent ",
               "   AND xmevdocno = xmewdocno ",
               "   AND xmevstus = 'Y' ",
               "   AND xmevdocno = '",g_xmfd_m.xmfd005,"' ",
               " ORDER BY xmewseq "
   PREPARE axmt410_from_t400_get_xmew_prep FROM l_sql
   DECLARE axmt410_from_t400_get_xmew_curs CURSOR FOR axmt410_from_t400_get_xmew_prep

   LET l_cnt = 1 
   FOREACH axmt410_from_t400_get_xmew_curs INTO l_xmewseq,l_xmew003,l_xmew004,
                                                l_xmew006,l_xmew014
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF

      INITIALIZE l_xmff.* TO NULL
      LET l_xmff.xmffent = g_enterprise
      LET l_xmff.xmffsite = g_site
      LET l_xmff.xmffdocno = g_xmfd_m.xmfddocno
      LET l_xmff.xmffseq = l_cnt        #項次  
      LET l_xmff.xmff001 = l_xmew003    #料件編號  
      LET l_xmff.xmff002 = l_xmew004    #產品特徵  
      LET l_xmff.xmff004 = l_xmew006    #銷售單位  
      LET l_xmff.xmff005 = 'N'          #分量計價  
      #LET l_xmff.xmff006 =     #數量   #ming 是組成用量還是主件底數???  
      LET l_xmff.xmff007 = l_xmew014    #報價單價  
      #LET l_xmff.xmff008 =     #未稅金額  #這三個應該是要用算出來的  
      #LET l_xmff.xmff009 =     #含稅金額  
      #LET l_xmff.xmff010 =     #稅額   

      INSERT INTO xmff_t VALUES(l_xmff.*)
      IF SQLCA.sqlcode THEN
         CALL cl_err('ins xmff_t',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF

      LET l_cnt = l_cnt + 1
   END FOREACH 
   
   LET l_sql = "SELECT xmeyseq,xmey001,xmey002 ",
               "  FROM xmev_t,xmey_t ",
               " WHERE xmevent = xmeyent ",
               "   AND xmevdocno = xmeydocno ",
               "   AND xmevstus = 'Y' ",
               "   AND xmevdocno = '",g_xmfd_m.xmfd005,"' ",
               " ORDER BY xmeyseq "
   PREPARE axmt410_from_t400_get_xmey_prep FROM l_sql
   DECLARE axmt410_from_t400_get_xmey_curs CURSOR FOR axmt410_from_t400_get_xmey_prep
   
   FOREACH axmt410_from_t400_get_xmey_curs INTO l_xmeyseq,l_xmey001,l_xmey002
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF

      INITIALIZE l_xmfe.* TO NULL
      LET l_xmfe.xmfeent = g_enterprise
      LET l_xmfe.xmfesite = g_site
      LET l_xmfe.xmfedocno = g_xmfd_m.xmfddocno
      LET l_xmfe.xmfeseq = l_xmeyseq    #項次 
      LET l_xmfe.xmfe001 = l_xmey001    #內含外加 
      LET l_xmfe.xmfe002 = l_xmey002    #費用類型 
      LET l_xmfe.xmfe003 = '1'          #計算基礎  
      LET l_xmfe.xmfe004 = 0            #加乘基數 
      LET l_xmfe.xmfe005 = 0            #預估金額 

      INSERT INTO xmfe_t VALUES(l_xmfe.*)

      IF SQLCA.sqlcode THEN
         CALL cl_err('ins xmfe_t',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF

   END FOREACH 
   
END FUNCTION]]>
</point>
  <point name="function.axmt410_from_axmt410_get_body" cite_std="N" status="" ver="2" src="s" new="Y" order="16" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 從報價單中取得相關的單身資料
# Memo...........:
# Usage..........: CALL axmt410_from_axmt410_get_body()
# Date & Author..: 2014/07/07 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt410_from_axmt410_get_body()
   DEFINE l_sql     STRING
   DEFINE l_xmffseq LIKE xmff_t.xmffseq
   DEFINE l_xmff001 LIKE xmff_t.xmff001
   DEFINE l_xmff002 LIKE xmff_t.xmff002
   DEFINE l_xmff003 LIKE xmff_t.xmff003
   DEFINE l_xmff004 LIKE xmff_t.xmff004
   DEFINE l_xmff005 LIKE xmff_t.xmff005
   DEFINE l_xmff006 LIKE xmff_t.xmff006
   DEFINE l_xmff007 LIKE xmff_t.xmff007
   DEFINE l_xmff008 LIKE xmff_t.xmff008
   DEFINE l_xmff009 LIKE xmff_t.xmff009
   DEFINE l_xmff010 LIKE xmff_t.xmff010
   DEFINE l_xmff011 LIKE xmff_t.xmff011
   DEFINE l_xmff012 LIKE xmff_t.xmff012
   DEFINE l_xmff013 LIKE xmff_t.xmff013
   DEFINE l_xmff014 LIKE xmff_t.xmff014
   DEFINE l_xmff    RECORD LIKE xmff_t.*
   DEFINE l_xmfeseq LIKE xmfe_t.xmfeseq
   DEFINE l_xmfe001 LIKE xmfe_t.xmfe001
   DEFINE l_xmfe002 LIKE xmfe_t.xmfe002
   DEFINE l_xmfe003 LIKE xmfe_t.xmfe003
   DEFINE l_xmfe004 LIKE xmfe_t.xmfe004
   DEFINE l_xmfe005 LIKE xmfe_t.xmfe005
   DEFINE l_xmfe    RECORD LIKE xmfe_t.*
   DEFINE l_xmfgseq LIKE xmfg_t.xmfgseq
   DEFINE l_xmfg001 LIKE xmfg_t.xmfg001
   DEFINE l_xmfg002 LIKE xmfg_t.xmfg002
   DEFINE l_xmfg003 LIKE xmfg_t.xmfg003
   DEFINE l_xmfg004 LIKE xmfg_t.xmfg004
   DEFINE l_xmfg    RECORD LIKE xmfg_t.* 
   
   LET l_sql = "SELECT xmffseq,xmff001,xmff002,xmff003,xmff004,xmff005, ",
               "       xmff006,xmff007,xmff008,xmff009,xmff010,xmff011, ",
               "       xmff012,xmff013,xmff014 ",
               "  FROM xmfd_t,xmff_t ",
               " WHERE xmfdent = xmffent ",
               "   AND xmfddocno = xmffdocno ",
               "   AND xmfdstus = 'Y' ",
               "   AND xmfddocno = '",g_xmfd_m.xmfd005,"' ",
               " ORDER BY "
   PREPARE axmt410_from_t410_get_xmff_prep FROM l_sql
   DECLARE axmt410_from_t410_get_xmff_curs CURSOR FOR axmt410_from_t410_get_xmff_prep 
   
   FOREACH axmt410_from_t410_get_xmff_curs INTO l_xmffseq,l_xmff001,l_xmff002,
                                                l_xmff003,l_xmff004,l_xmff005,
                                                l_xmff006,l_xmff007,l_xmff008,
                                                l_xmff009,l_xmff010,l_xmff011,
                                                l_xmff012,l_xmff013,l_xmff014
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF

      INITIALIZE l_xmff.* TO NULL
      LET l_xmff.xmffent = g_enterprise
      LET l_xmff.xmffsite = g_site
      LET l_xmff.xmffdocno = g_xmfd_m.xmfddocno
      LET l_xmff.xmffseq = l_xmffseq       #項次   
      LET l_xmff.xmff001 = l_xmff001       #料件編號 
      LET l_xmff.xmff002 = l_xmff002       #產品特徵  
      LET l_xmff.xmff003 = l_xmff003       #客戶料號  
      LET l_xmff.xmff004 = l_xmff004       #銷售單位  
      LET l_xmff.xmff005 = l_xmff005       #分量計價  
      LET l_xmff.xmff006 = l_xmff006       #數量  
      LET l_xmff.xmff007 = l_xmff007       #報價單價  
      LET l_xmff.xmff008 = l_xmff008       #未稅金額  
      LET l_xmff.xmff009 = l_xmff009       #含稅金額  
      LET l_xmff.xmff010 = l_xmff010       #稅額  
      LET l_xmff.xmff011 = l_xmff011       #標準成本單價  
      LET l_xmff.xmff012 = l_xmff012       #預估毛利率   
      LET l_xmff.xmff013 = l_xmff013       #預估毛利金額   
      LET l_xmff.xmff014 = l_xmff014       #備註  

      INSERT INTO xmff_t VALUES(l_xmff.*)
      IF SQLCA.sqlcode THEN
         CALL cl_err('ins xmff_t',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF

   END FOREACH

   LET l_sql = "SELECT xmfeseq,xmfe001,xmfe002,xmfe003,xmfe004,xmfe005",
               "  FROM xmfd_t,xmfe_t ",
               " WHERE xmfdent = xmfeent ",
               "   AND xmfddocno = xmfedocno ",
               "   AND xmfdstus = 'Y' ",
               "   AND xmfddocno = '",g_xmfd_m.xmfd005,"' ",
               " ORDER BY "
   PREPARE axmt410_from_t410_get_xmfe_prep FROM l_sql
   DECLARE axmt410_from_t410_get_xmfe_curs CURSOR FOR axmt410_from_t410_get_xmfe_prep 
   
   FOREACH axmt410_from_t410_get_xmfe_curs INTO l_xmfeseq,l_xmfe001,l_xmfe002,
                                                l_xmfe003,l_xmfe004,l_xmfe005
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF

      INITIALIZE l_xmfe.* TO NULL
      LET l_xmfe.xmfeent = g_enterprise
      LET l_xmfe.xmfesite = g_site
      LET l_xmfe.xmfedocno = g_xmfd_m.xmfddocno
      LET l_xmfe.xmfeseq = l_xmfeseq
      LET l_xmfe.xmfe001 = l_xmfe001            #內含外加  
      LET l_xmfe.xmfe002 = l_xmfe002            #費用類型  
      LET l_xmfe.xmfe003 = l_xmfe003            #計算基礎  
      LET l_xmfe.xmfe004 = l_xmfe004            #加乘基數  
      LET l_xmfe.xmfe005 = l_xmfe005            #預估金額  

      INSERT INTO xmfe_t VALUES(l_xmfe.*)
      IF SQLCA.sqlcode THEN
         CALL cl_err('ins xmfe_t',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF

   END FOREACH 
   
   LET l_sql = "SELECT xmfgseq,xmfg001,xmfg002,xmfg003,xmfg004 ",
               "  FROM xmfd_t,xmfg_t ",
               " WHERE xmfdent = xmfgent ",
               "   AND xmfddocno = xmfgdocno ",
               "   AND xmfdstus = 'Y' ",
               "   AND xmfddocno = '",g_xmfd_m.xmfd005,"' ",
               " ORDER BY xmfgseq "
   PREPARE axmt410_from_t410_get_xmfg_prep FROM l_sql
   DECLARE axmt410_from_t410_get_xmfg_curs CURSOR FOR axmt410_from_t410_get_xmfg_prep
   
   FOREACH axmt410_from_t410_get_xmfg_curs INTO l_xmfgseq,l_xmfg001,l_xmfg002,
                                                l_xmfg003,l_xmfg004
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF

      INITIALIZE l_xmfg.* TO NULL
      LET l_xmfg.xmfgent = g_enterprise
      LET l_xmfg.xmfgsite = g_site
      LET l_xmfg.xmfgdocno = g_xmfd_m.xmfddocno
      LET l_xmfg.xmfgseq = l_xmfgseq
      LET l_xmfg.xmfg001 = l_xmfg001
      LET l_xmfg.xmfg002 = l_xmfg002
      LET l_xmfg.xmfg003 = l_xmfg003
      LET l_xmfg.xmfg004 = l_xmfg004

      INSERT INTO xmfg_t VALUES(l_xmfg.*)
      IF SQLCA.sqlcode THEN
         CALL cl_err('ins xmfg_t',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
   END FOREACH
   
END FUNCTION]]>
</point>
  <point name="function.axmt410_chk_xmfd005" cite_std="N" status="" ver="2" src="s" new="Y" order="17" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 來源單號檢查
# Memo...........:
# Usage..........: CALL axmt410_chk_xmfd005(p_xmfd004,p_xmfd005)
# Input parameter: p_xmfd004
#                : p_xmfd005
# Date & Author..: 2014/07/07 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt410_chk_xmfd005(p_xmfd004,p_xmfd005)
   DEFINE p_xmfd004     LIKE xmfd_t.xmfd004
   DEFINE p_xmfd005     LIKE xmfd_t.xmfd005
   DEFINE l_xmevstus    LIKE xmev_t.xmevstus
   DEFINE l_xmfdstus    LIKE xmfd_t.xmfdstus

   LET g_errno = '' 
   
   IF p_xmfd004 = '1' THEN
      LET l_xmevstus = ''
      SELECT xmevstus INTO l_xmevstus
        FROM xmev_t
       WHERE xmevent = g_enterprise
         AND xmevdocno = p_xmfd005

      CASE
         WHEN SQLCA.sqlcode = 100   LET g_errno = 'axm-00365'     #來源單號不存在估價單！  
         WHEN l_xmevstus <> 'Y'     LET g_errno = 'axm-00367'     #此估價單未確認！  
         OTHERWISE
            EXIT CASE
      END CASE
   END IF

   IF p_xmfd004 = '2' THEN
      LET l_xmfdstus = ''
      SELECT xmfdstus INTO l_xmfdstus
        FROM xmfd_t
       WHERE xmfdent = g_enterprise
         AND xmfddocno = p_xmfd005

      CASE
         WHEN SQLCA.sqlcode = 100   LET g_errno = 'axm-00366'     #來源單號不存在報價單！  
         WHEN l_xmfdstus <> 'Y'     LET g_errno = 'axm-00368'     #此報價單未確認！  
         OTHERWISE
            EXIT CASE
      END CASE
   END IF
END FUNCTION]]>
</point>
  <point name="function.axmt410_del_xmfg" cite_std="N" status="" ver="2" src="s" new="Y" order="18" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 如果此資料有分量計價的資料 也要一起被清除
# Memo...........:
# Usage..........: CALL axmt410_del_xmfg()
# Date & Author..: 2014/07/08 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt410_del_xmfg()
   DEFINE l_xmff005     LIKE xmff_t.xmff005

   LET g_errno = ''

   LET l_xmff005 = ''
   SELECT xmff005 INTO l_xmff005
     FROM xmff_t
    WHERE xmffent = g_enterprise
      AND xmffdocno = g_xmfd_m.xmfddocno
      AND xmffseq = g_xmff_d_t.xmffseq

   IF l_xmff005 = 'Y' THEN
      DELETE FROM xmfg_t WHERE xmfgent = g_enterprise
                           AND xmfgdocno = g_xmfd_m.xmfddocno
                           AND xmfgseq = g_xmff_d_t.xmffseq
      IF SQLCA.sqlcode THEN
         LET g_errno = SQLCA.sqlcode
      END IF
   END IF
END FUNCTION]]>
</point>
  <point name="construct.c.page1.xmff001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaf001_15()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmff001  #顯示到畫面上
            NEXT FIELD xmff001                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.xmff004" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()
            DISPLAY g_qryparam.return1 TO xmff004  #顯示到畫面上
            NEXT FIELD xmff004                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page3.xmfe002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfe002  #顯示到畫面上
            NEXT FIELD xmfe002                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.xmfd001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfd001  #顯示到畫面上
            NEXT FIELD xmfd001                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.xmfd002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfd002  #顯示到畫面上
            NEXT FIELD xmfd002                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.xmfd003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfd003  #顯示到畫面上
            NEXT FIELD xmfd003                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.xmfd009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xmfadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfd009  #顯示到畫面上
            NEXT FIELD xmfd009                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.xmfd010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooaj002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfd010  #顯示到畫面上
            NEXT FIELD xmfd010                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.xmfd012" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_oodb002_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfd012  #顯示到畫面上
            NEXT FIELD xmfd012                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.xmfd015" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfd015  #顯示到畫面上
            NEXT FIELD xmfd015                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.xmfd016" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmad002_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfd016  #顯示到畫面上
            NEXT FIELD xmfd016                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.xmfd017" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xmah001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfd017  #顯示到畫面上
            NEXT FIELD xmfd017                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.xmfd018" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfd018  #顯示到畫面上
            NEXT FIELD xmfd018                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.xmfd019" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfd019  #顯示到畫面上
            NEXT FIELD xmfd019                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.xmfd022" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_oofb019_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfd022  #顯示到畫面上
            NEXT FIELD xmfd022                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.xmfdcnfid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfdcnfid  #顯示到畫面上
            NEXT FIELD xmfdcnfid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.xmfdcrtdp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfdcrtdp  #顯示到畫面上
            NEXT FIELD xmfdcrtdp                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.xmfdcrtid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfdcrtid  #顯示到畫面上
            NEXT FIELD xmfdcrtid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.xmfddocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xmfddocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfddocno  #顯示到畫面上
            NEXT FIELD xmfddocno                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.xmfdmodid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfdmodid  #顯示到畫面上
            NEXT FIELD xmfdmodid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.xmfdowndp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfdowndp  #顯示到畫面上
            NEXT FIELD xmfdowndp                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.xmfdownid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfdownid  #顯示到畫面上
            NEXT FIELD xmfdownid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.xmfdpstid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfdpstid  #顯示到畫面上
            NEXT FIELD xmfdpstid                     #返回原欄位
    

]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[DEFINE g_inam                DYNAMIC ARRAY OF RECORD       #記錄產品特徵   
                                inam001    LIKE inam_t.inam001,
                                inam002    LIKE inam_t.inam002,
                                inam004    LIKE inam_t.inam004
                             END RECORD]]>
</point>
  <point name="input.a.page1.xmff001" cite_std="N" status="u" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            LET g_xmff_d[l_ac].xmff001_desc = ' '
            LET g_xmff_d[l_ac].xmff001_desc_desc = ' '
            CALL s_desc_get_item_desc(g_xmff_d[l_ac].xmff001)
                 RETURNING g_xmff_d[l_ac].xmff001_desc,
                           g_xmff_d[l_ac].xmff001_desc_desc
            IF NOT cl_null(g_xmff_d[l_ac].xmff001) THEN 
               ##此段落由子樣板a19產生
               ##設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               #INITIALIZE g_chkparam.* TO NULL
               ##設定g_chkparam.*的參數
               ##呼叫檢查存在並帶值的library
               #IF cl_chk_exist_and_ref_val("v_imaf001_14") THEN
               #   #檢查成功時後續處理
               #   #LET  = g_chkparam.return1
               #   #DISPLAY BY NAME 
               #ELSE
               #   #檢查失敗時後續處理
               #   NEXT FIELD CURRENT
               #END IF
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmff_d[l_ac].xmff001 != g_xmff_d_t.xmff001 OR
                                                   g_xmff_d_t.xmff001 IS NULL)) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmff_d[l_ac].xmff001
                  IF NOT cl_chk_exist("v_imaf001_14") THEN
                     LET g_xmff_d[l_ac].xmff001 = g_xmff_d_t.xmff001
                     CALL s_desc_get_item_desc(g_xmff_d[l_ac].xmff001)
                          RETURNING g_xmff_d[l_ac].xmff001_desc,
                                    g_xmff_d[l_ac].xmff001_desc_desc
                     NEXT FIELD CURRENT
                  END IF

                  IF NOT s_control_check_item(g_xmff_d[l_ac].xmff001,'2',g_site,g_user,g_dept,g_xmfd_m.xmfddocno) THEN
                     LET g_xmff_d[l_ac].xmff001 = g_xmff_d_t.xmff001
                     CALL s_desc_get_item_desc(g_xmff_d[l_ac].xmff001)
                          RETURNING g_xmff_d[l_ac].xmff001_desc,
                                    g_xmff_d[l_ac].xmff001_desc_desc
                     NEXT FIELD CURRENT
                  END IF

                  #取得銷售單位  
                  SELECT imaf112 INTO g_xmff_d[l_ac].xmff004
                    FROM imaf_t
                   WHERE imafent  = g_enterprise
                     AND imafsite = g_site
                     AND imaf001  = g_xmff_d[l_ac].xmff001
               END IF

            END IF 
            
            CALL s_desc_get_item_desc(g_xmff_d[l_ac].xmff001)
                 RETURNING g_xmff_d[l_ac].xmff001_desc,
                           g_xmff_d[l_ac].xmff001_desc_desc
            
            CALL axmt410_set_entry_b(p_cmd)
            CALL axmt410_set_no_entry_b(p_cmd)
            
            #INITIALIZE g_ref_fields TO NULL
            #LET g_ref_fields[1] = g_xmff_d[l_ac].xmff001
            #CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            #LET g_xmff_d[l_ac].xmff001_desc = '', g_rtn_fields[1] , ''
            #DISPLAY BY NAME g_xmff_d[l_ac].xmff001_desc

]]>
</point>
  <point name="input.a.page1.xmff002" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            IF cl_null(g_xmff_d[l_ac].xmff002) THEN
               LET g_xmff_d[l_ac].xmff002 = ' '
            END IF]]>
</point>
  <point name="input.a.page1.xmff003" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_xmff_d[l_ac].xmff003) THEN 
               ##此段落由子樣板a19產生
               ##設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               #INITIALIZE g_chkparam.* TO NULL
               ##設定g_chkparam.*的參數
               ##呼叫檢查存在並帶值的library
               #IF cl_chk_exist_and_ref_val("v_pmao004_1") THEN
               #   #檢查成功時後續處理
               #   #LET  = g_chkparam.return1
               #   #DISPLAY BY NAME 
               #ELSE
               #   #檢查失敗時後續處理
               #   NEXT FIELD CURRENT
               #END IF
               IF cl_null(g_xmff_d[l_ac].xmff001) THEN
                  #若料件為空時，呼叫元件帶出料件+產品特徵  
                  CALL s_apmi070_get_pmao002_pmao003(g_xmfd_m.xmfd003,g_xmff_d[l_ac].xmff003)
                       RETURNING l_success,l_pmao002,l_pmao003
                  IF NOT l_success THEN
                     LET g_xmff_d[l_ac].xmff003 = g_xmff_d_t.xmff003
                     NEXT FIELD CURRENT
                  END IF
                  LET g_xmff_d[l_ac].xmff001 = l_pmao002
                  LET g_xmff_d[l_ac].xmff002 = l_pmao003
                  DISPLAY BY NAME g_xmff_d[l_ac].xmff001,g_xmff_d[l_ac].xmff002
               END IF 
               
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmfd_m.xmfd003
               LET g_chkparam.arg2 = g_xmff_d[l_ac].xmff001
               LET g_chkparam.arg3 = g_xmff_d[l_ac].xmff002
               LET g_chkparam.arg4 = g_xmff_d[l_ac].xmff003
               #呼叫檢查存在並帶值的library 
               IF NOT cl_null(g_xmff_d[l_ac].xmff001) AND NOT cl_null(g_xmff_d[l_ac].xmff002) THEN
                  IF cl_chk_exist("v_pmao004") THEN
                     CALL s_desc_get_item_desc(g_xmff_d[l_ac].xmff001)
                          RETURNING g_xmff_d[l_ac].xmff001_desc,
                                    g_xmff_d[l_ac].xmff001_desc_desc
                     DISPLAY BY NAME g_xmff_d[l_ac].xmff001_desc,
                                     g_xmff_d[l_ac].xmff001_desc_desc
                  ELSE
                     LET g_xmff_d[l_ac].xmff003 = g_xmff_d_o.xmff003
                     DISPLAY BY NAME g_xmff_d[l_ac].xmff003
                     NEXT FIELD CURRENT
                  END IF
               ELSE 
                  IF cl_chk_exist("v_pmao004_1") THEN
                     CALL s_desc_get_item_desc(g_xmff_d[l_ac].xmff001)
                          RETURNING g_xmff_d[l_ac].xmff001_desc,
                                    g_xmff_d[l_ac].xmff001_desc_desc
                     DISPLAY BY NAME g_xmff_d[l_ac].xmff001_desc,
                                     g_xmff_d[l_ac].xmff001_desc_desc
                  ELSE
                     LET g_xmff_d[l_ac].xmff003 = g_xmff_d_o.xmff003
                     DISPLAY BY NAME g_xmff_d[l_ac].xmff003
                     NEXT FIELD CURRENT
                  END IF
               END IF

               LET g_xmff_d_o.xmff001 = g_xmff_d[l_ac].xmff001
               LET g_xmff_d_o.xmff002 = g_xmff_d[l_ac].xmff002
               LET g_xmff_d_o.xmff003 = g_xmff_d[l_ac].xmff003


            END IF
]]>
</point>
  <point name="input.a.page1.xmff004" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            LET g_xmff_d[l_ac].xmff004_desc = ' '
            CALL s_desc_get_unit_desc(g_xmff_d[l_ac].xmff004)
                 RETURNING g_xmff_d[l_ac].xmff004_desc
            IF NOT cl_null(g_xmff_d[l_ac].xmff004) THEN 
               ##此段落由子樣板a19產生
               ##設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               #INITIALIZE g_chkparam.* TO NULL
               ##設定g_chkparam.*的參數
               ##呼叫檢查存在並帶值的library
               #IF cl_chk_exist_and_ref_val("v_ooca001") THEN
               #   #檢查成功時後續處理
               #   #LET  = g_chkparam.return1
               #   #DISPLAY BY NAME 
               #ELSE
               #   #檢查失敗時後續處理
               #   NEXT FIELD CURRENT
               #END IF
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmff_d[l_ac].xmff004 != g_xmff_d_t.xmff004 OR
                                                   g_xmff_d_t.xmff004 IS NULL)) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmff_d[l_ac].xmff001
                  LET g_chkparam.arg2 = g_xmff_d[l_ac].xmff004
                  IF NOT cl_chk_exist("v_imao002") THEN
                     LET g_xmff_d[l_ac].xmff004 = g_xmff_d_t.xmff004
                     CALL s_desc_get_unit_desc(g_xmff_d[l_ac].xmff004)
                          RETURNING g_xmff_d[l_ac].xmff004_desc
                     NEXT FIELD CURRENT
                  END IF

                  IF NOT cl_null(g_xmff_d[l_ac].xmff006) THEN
                     #對數量進行單位小數取位 
                     CALL s_aooi250_take_decimals(g_xmff_d[l_ac].xmff004,g_xmff_d[l_ac].xmff006)
                          RETURNING l_success,g_xmff_d[l_ac].xmff006
                  END IF
               END IF

            END IF 

            CALL s_desc_get_unit_desc(g_xmff_d[l_ac].xmff004)
                 RETURNING g_xmff_d[l_ac].xmff004_desc
]]>
</point>
  <point name="input.a.page1.xmff005" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            IF g_xmff_d[l_ac].xmff005 = 'Y' THEN
               CALL axmt410_01(g_xmfd_m.xmfddocno,g_xmff_d[l_ac].xmffseq,
                               g_xmff_d[l_ac].xmff001,g_xmff_d[l_ac].xmff002,
                               g_xmff_d[l_ac].xmff004)

               LET g_xmff_d[l_ac].xmff007 = 0
            END IF
            
            CALL axmt410_set_entry_b(p_cmd)
            CALL axmt410_set_no_entry_b(p_cmd)]]>
</point>
  <point name="input.a.page1.xmff006" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_xmff_d[l_ac].xmff006) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmff_d[l_ac].xmff006 != g_xmff_d_t.xmff006 OR
                                                   g_xmff_d_t.xmff006 IS NULL)) THEN
                  IF NOT cl_null(g_xmff_d[l_ac].xmff004) THEN
                     CALL s_aooi250_take_decimals(g_xmff_d[l_ac].xmff004,g_xmff_d[l_ac].xmff006)
                          RETURNING l_success,g_xmff_d[l_ac].xmff006
                  END IF
               END IF
            END IF]]>
</point>
  <point name="input.a.page1.xmff007" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            LET l_xmah004 = ''              #容差率   
            LET l_xmah005 = ''              #處理方式  
            LET l_xmah006 = ''              #允許單價為0(非樣品) 
            IF NOT cl_null(g_xmff_d[l_ac].xmff007) THEN
               SELECT xmah004,xmah005,xmah006 INTO l_xmah004,l_xmah005,l_xmah006
                 FROM xmah_t
                WHERE xmahent = g_enterprise
                  AND xmah001 = g_xmfd_m.xmfd017
               IF l_xmah006 <> 'Y' AND g_xmff_d[l_ac].xmff007 = 0 THEN
                  CALL cl_err(g_xmff_d[l_ac].xmff007,'apm-00273',1)
                  LET g_xmff_d[l_ac].xmff007 = g_xmff_d_t.xmff007
                  NEXT FIELD CURRENT
               END IF

               #若輸入的單價超過單頭取價方式的基本資料設置的容差率時 
               #需判斷單價與取出單價的差異是否在容差率範圍內 
               #若在範圍外則依據取價方式的基本資料設置的處理方式進行管控 

               #若有修改單價，則重新計算未稅金額、含稅金額、稅額  
               #IF g_xmff_d[l_ac].xmff007 <> g_xmff_d_o.xmff007 THEN
               #   #按幣別對金額做取位 
               #END IF
            END IF]]>
</point>
  <point name="input.a.page1.xmffseq" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_xmfd_m.xmfddocno IS NOT NULL AND g_xmff_d[g_detail_idx].xmffseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmfd_m.xmfddocno != g_xmfddocno_t OR g_xmff_d[g_detail_idx].xmffseq != g_xmff_d_t.xmffseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmff_t WHERE "||"xmffent = '" ||g_enterprise|| "' AND "||"xmffdocno = '"||g_xmfd_m.xmfddocno ||"' AND "|| "xmffseq = '"||g_xmff_d[g_detail_idx].xmffseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page2.xmfg001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_xmfd_m.xmfddocno IS NOT NULL AND g_xmff2_d[g_detail_idx].xmfgseq IS NOT NULL AND g_xmff2_d[g_detail_idx].xmfg001 IS NOT NULL AND g_xmff2_d[g_detail_idx].xmfg002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmfd_m.xmfddocno != g_xmfddocno_t OR g_xmff2_d[g_detail_idx].xmfgseq != g_xmff2_d_t.xmfgseq OR g_xmff2_d[g_detail_idx].xmfg001 != g_xmff2_d_t.xmfg001 OR g_xmff2_d[g_detail_idx].xmfg002 != g_xmff2_d_t.xmfg002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmfg_t WHERE "||"xmfgent = '" ||g_enterprise|| "' AND "||"xmfgdocno = '"||g_xmfd_m.xmfddocno ||"' AND "|| "xmfgseq = '"||g_xmff2_d[g_detail_idx].xmfgseq ||"' AND "|| "xmfg001 = '"||g_xmff2_d[g_detail_idx].xmfg001 ||"' AND "|| "xmfg002 = '"||g_xmff2_d[g_detail_idx].xmfg002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page2.xmfg002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_xmfd_m.xmfddocno IS NOT NULL AND g_xmff2_d[g_detail_idx].xmfgseq IS NOT NULL AND g_xmff2_d[g_detail_idx].xmfg001 IS NOT NULL AND g_xmff2_d[g_detail_idx].xmfg002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmfd_m.xmfddocno != g_xmfddocno_t OR g_xmff2_d[g_detail_idx].xmfgseq != g_xmff2_d_t.xmfgseq OR g_xmff2_d[g_detail_idx].xmfg001 != g_xmff2_d_t.xmfg001 OR g_xmff2_d[g_detail_idx].xmfg002 != g_xmff2_d_t.xmfg002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmfg_t WHERE "||"xmfgent = '" ||g_enterprise|| "' AND "||"xmfgdocno = '"||g_xmfd_m.xmfddocno ||"' AND "|| "xmfgseq = '"||g_xmff2_d[g_detail_idx].xmfgseq ||"' AND "|| "xmfg001 = '"||g_xmff2_d[g_detail_idx].xmfg001 ||"' AND "|| "xmfg002 = '"||g_xmff2_d[g_detail_idx].xmfg002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page2.xmfgseq" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_xmfd_m.xmfddocno IS NOT NULL AND g_xmff2_d[g_detail_idx].xmfgseq IS NOT NULL AND g_xmff2_d[g_detail_idx].xmfg001 IS NOT NULL AND g_xmff2_d[g_detail_idx].xmfg002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmfd_m.xmfddocno != g_xmfddocno_t OR g_xmff2_d[g_detail_idx].xmfgseq != g_xmff2_d_t.xmfgseq OR g_xmff2_d[g_detail_idx].xmfg001 != g_xmff2_d_t.xmfg001 OR g_xmff2_d[g_detail_idx].xmfg002 != g_xmff2_d_t.xmfg002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmfg_t WHERE "||"xmfgent = '" ||g_enterprise|| "' AND "||"xmfgdocno = '"||g_xmfd_m.xmfddocno ||"' AND "|| "xmfgseq = '"||g_xmff2_d[g_detail_idx].xmfgseq ||"' AND "|| "xmfg001 = '"||g_xmff2_d[g_detail_idx].xmfg001 ||"' AND "|| "xmfg002 = '"||g_xmff2_d[g_detail_idx].xmfg002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page3.xmfe002" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            LET g_xmff3_d[l_ac].xmfe002_desc = ' '
            CALL s_desc_get_acc_desc('802',g_xmff3_d[l_ac].xmfe002)
                 RETURNING g_xmff3_d[l_ac].xmfe002_desc
            IF NOT cl_null(g_xmff3_d[l_ac].xmfe002) THEN 
               ##此段落由子樣板a19產生
               ##設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               #INITIALIZE g_chkparam.* TO NULL
               ##設定g_chkparam.*的參數
               ##呼叫檢查存在並帶值的library
               #IF cl_chk_exist_and_ref_val(":v_oocq002_01") THEN
               #   #檢查成功時後續處理
               #   #LET  = g_chkparam.return1
               #   #DISPLAY BY NAME 
               #ELSE
               #   #檢查失敗時後續處理
               #   NEXT FIELD CURRENT
               #END IF
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmff3_d[l_ac].xmfe002 != g_xmff3_d_t.xmfe002 OR
                                                   g_xmff3_d_t.xmfe002 IS NULL)) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = '802'
                  LET g_chkparam.arg2 = g_xmff3_d[l_ac].xmfe002
                  IF NOT cl_chk_exist("v_oocq002_01") THEN
                     LET g_xmff3_d[l_ac].xmfe002 = g_xmff3_d_t.xmfe002
                     CALL s_desc_get_acc_desc('802',g_xmff3_d[l_ac].xmfe002)
                          RETURNING g_xmff3_d[l_ac].xmfe002_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF

            END IF 

            CALL s_desc_get_acc_desc('802',g_xmff3_d[l_ac].xmfe002)
                 RETURNING g_xmff3_d[l_ac].xmfe002_desc
]]>
</point>
  <point name="input.a.page3.xmfeseq" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_xmfd_m.xmfddocno IS NOT NULL AND g_xmff3_d[g_detail_idx].xmfeseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmfd_m.xmfddocno != g_xmfddocno_t OR g_xmff3_d[g_detail_idx].xmfeseq != g_xmff3_d_t.xmfeseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmfe_t WHERE "||"xmfeent = '" ||g_enterprise|| "' AND "||"xmfedocno = '"||g_xmfd_m.xmfddocno ||"' AND "|| "xmfeseq = '"||g_xmff3_d[g_detail_idx].xmfeseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page4.xmffseq_4" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_xmfd_m.xmfddocno IS NOT NULL AND g_xmff4_d[g_detail_idx].xmffseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmfd_m.xmfddocno != g_xmfddocno_t OR g_xmff4_d[g_detail_idx].xmffseq != g_xmff4_d_t.xmffseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmff_t WHERE "||"xmffent = '" ||g_enterprise|| "' AND "||"xmffdocno = '"||g_xmfd_m.xmfddocno ||"' AND "|| "xmffseq = '"||g_xmff4_d[g_detail_idx].xmffseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.xmfd001" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            LET g_xmfd_m.xmfd001_desc = ' '
            #取人員姓名 
            CALL s_desc_get_person_desc(g_xmfd_m.xmfd001)
                 RETURNING g_xmfd_m.xmfd001_desc
            DISPLAY BY NAME g_xmfd_m.xmfd001_desc
            
            IF NOT cl_null(g_xmfd_m.xmfd001) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmfd_m.xmfd001 != g_xmfd_m_t.xmfd001 OR
                                                   g_xmfd_m_t.xmfd001 IS NULL)) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmfd_m.xmfd001
                  IF cl_chk_exist("v_ooag001") THEN
                     #歸屬部門 
                     SELECT ooag003 INTO g_xmfd_m.xmfd002
                       FROM ooag_t
                      WHERE ooagent = g_enterprise
                        AND ooag001 = g_xmfd_m.xmfd001
                     CALL s_desc_get_department_desc(g_xmfd_m.xmfd002)
                          RETURNING g_xmfd_m.xmfd002_desc
                     DISPLAY BY NAME g_xmfd_m.xmfd002_desc
                  ELSE
                     LET g_xmfd_m.xmfd001 = g_xmfd_m_t.xmfd001
                     CALL s_desc_get_person_desc(g_xmfd_m.xmfd001)
                          RETURNING g_xmfd_m.xmfd001_desc
                     DISPLAY BY NAME g_xmfd_m.xmfd001_desc 
                     NEXT FIELD CURRENT
                  END IF
               END IF           
            END IF 
            
            CALL s_desc_get_person_desc(g_xmfd_m.xmfd001)
                 RETURNING g_xmfd_m.xmfd001_desc
            DISPLAY BY NAME g_xmfd_m.xmfd001_desc
            
            #INITIALIZE g_ref_fields TO NULL
            #LET g_ref_fields[1] = g_xmfd_m.xmfd001
            #CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            #LET g_xmfd_m.xmfd001_desc = '', g_rtn_fields[1] , ''
            #DISPLAY BY NAME g_xmfd_m.xmfd001_desc

]]>
</point>
  <point name="input.a.xmfd002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            LET g_xmfd_m.xmfd002_desc = ' '
            CALL s_desc_get_department_desc(g_xmfd_m.xmfd002)
                 RETURNING g_xmfd_m.xmfd002_desc
            DISPLAY BY NAME g_xmfd_m.xmfd002_desc
            
            IF NOT cl_null(g_xmfd_m.xmfd002) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmfd_m.xmfd002 != g_xmfd_m_t.xmfd002 OR
                                                   g_xmfd_m_t.xmfd002 IS NULL)) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmfd_m.xmfd002
                  LET g_chkparam.arg2 = g_xmfd_m.xmfddocdt
                  IF NOT cl_chk_exist("v_ooeg001") THEN
                     LET g_xmfd_m.xmfd002 = g_xmfd_m_t.xmfd002
                     CALL s_desc_get_department_desc(g_xmfd_m.xmfd002)
                          RETURNING g_xmfd_m.xmfd002_desc
                     DISPLAY BY NAME g_xmfd_m.xmfd002_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF         
            END IF 
            
            CALL s_desc_get_department_desc(g_xmfd_m.xmfd002)
                 RETURNING g_xmfd_m.xmfd002_desc
            DISPLAY BY NAME g_xmfd_m.xmfd002_desc
            
            #INITIALIZE g_ref_fields TO NULL
            #LET g_ref_fields[1] = g_xmfd_m.xmfd002
            #CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            #LET g_xmfd_m.xmfd002_desc = '', g_rtn_fields[1] , ''
            #DISPLAY BY NAME g_xmfd_m.xmfd002_desc

]]>
</point>
  <point name="input.a.xmfd003" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            LET g_xmfd_m.xmfd003_desc = ' '
            CALL s_desc_get_trading_partner_full_desc(g_xmfd_m.xmfd003)
                 RETURNING g_xmfd_m.xmfd003_desc
            DISPLAY BY NAME g_xmfd_m.xmfd003_desc
            
            IF NOT cl_null(g_xmfd_m.xmfd003) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmfd_m.xmfd003 != g_xmfd_m_t.xmfd003 OR
                                                   g_xmfd_m_t.xmfd003 IS NULL)) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmfd_m.xmfd003
                  IF NOT cl_chk_exist("v_pmaa001_3") THEN
                     LET g_xmfd_m.xmfd003 = g_xmfd_m_t.xmfd003
                     CALL s_desc_get_trading_partner_full_desc(g_xmfd_m.xmfd003)
                          RETURNING g_xmfd_m.xmfd003_desc
                     DISPLAY BY NAME g_xmfd_m.xmfd003_desc
                     NEXT FIELD CURRENT
                  END IF

                  IF NOT s_control_check_customer(g_xmfd_m.xmfd003,'2',g_site,g_user,g_dept,g_xmfd_m.xmfddocno) THEN
                     LET g_xmfd_m.xmfd003 = g_xmfd_m_t.xmfd003
                     CALL s_desc_get_trading_partner_full_desc(g_xmfd_m.xmfd003)
                          RETURNING g_xmfd_m.xmfd003_desc
                     DISPLAY BY NAME g_xmfd_m.xmfd003_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
             
               #控制組編號 
               CALL s_control_get_group('2',g_xmfd_m.xmfd001,g_xmfd_m.xmfd002)
                    RETURNING l_success,l_controlno
               IF l_success THEN
                  #xmae003:幣別     xmae004:稅別   xmae006:收款條件 xmae008:銷售通路 
                  #xmad011:運送方式 xmad012:起運地 xmad013:目的地   xmae020:交易條件
                  #xmae021:取價方式 
                  SELECT xmae003, xmae004, xmad006, xmae008, xmae011,
                         xmae012, xmae013, xmae020, xmae021
                    INTO g_xmfd_m.xmfd010, g_xmfd_m.xmfd012, g_xmfd_m.xmfd016,
                         g_xmfd_m.xmfd018, g_xmfd_m.xmfd019, g_xmfd_m.xmfd020,
                         g_xmfd_m.xmfd021, g_xmfd_m.xmfd015, g_xmfd_m.xmfd017
                    FROM xmae_t
                   WHERE xmaeent  = g_enterprise
                     AND xmae001  = g_xmfd_m.xmfd003
                     AND xmae002  = l_controlno
                     AND xmaestus = 'Y'
               ELSE
                  #pmab083:幣別     pmab084:稅別   pmab087:收款條件 pmab088:銷售通路 
                  #pmab090:運送方式 pmab091:起運地 pmab092:目的地   pmab103:交易條件 
                  #pmab104:取價方式 
                  SELECT pmab083, pmab084, pmab087, pmab088, pmab090,
                         pmab091, pmab092, pmab103, pmab104
                    INTO g_xmfd_m.xmfd010, g_xmfd_m.xmfd012, g_xmfd_m.xmfd016,
                         g_xmfd_m.xmfd018, g_xmfd_m.xmfd019, g_xmfd_m.xmfd020,
                         g_xmfd_m.xmfd021, g_xmfd_m.xmfd015, g_xmfd_m.xmfd017
                    FROM pmab_t
                   WHERE pmabent  = g_enterprise
                     AND pmabsite = g_site
                     AND pmab001  = g_xmfd_m.xmfd003
               END IF            
               
               #取匯率 
               CALL s_aooi160_get_exrate('1',g_site,g_today,g_xmfd_m.xmfd010,l_ooef016,0,'11') #ming 最後1個11的，要看參數決定  
                    RETURNING g_xmfd_m.xmfd011 
                    
               #利用稅別檢查 取得稅率與單價含稅否 
               CALL s_tax_chk(g_site,g_xmfd_m.xmfd012)
                    RETURNING l_success,g_xmfd_m.xmfd012_desc,g_xmfd_m.xmfd014,
                              g_xmfd_m.xmfd013,l_oodb011

               #取得幣別的說明 
               CALL s_desc_get_currency_desc(g_xmfd_m.xmfd010)
                    RETURNING g_xmfd_m.xmfd010_desc
               DISPLAY BY NAME g_xmfd_m.xmfd010_desc

               #取得稅別的說明 
               CALL s_desc_get_tax_desc1(g_site,g_xmfd_m.xmfd012)
                    RETURNING g_xmfd_m.xmfd012_desc
               DISPLAY BY NAME g_xmfd_m.xmfd012_desc

               #取得交易條件的說明  
               CALL axmt410_xmfd015_ref(g_xmfd_m.xmfd015)
                    RETURNING g_xmfd_m.xmfd015_desc
               DISPLAY BY NAME g_xmfd_m.xmfd015_desc 
               
               #取得收款條件的說明 
               CALL axmt410_xmfd016_ref(g_xmfd_m.xmfd016)
                    RETURNING g_xmfd_m.xmfd016_desc
               DISPLAY BY NAME g_xmfd_m.xmfd016_desc

               #取得取價方式的說明 
               CALL axmt410_xmfd017_ref(g_xmfd_m.xmfd017)
                    RETURNING g_xmfd_m.xmfd017_desc
               DISPLAY BY NAME g_xmfd_m.xmfd017_desc

               #取得銷售通路的說明 
               CALL axmt410_xmfd018_ref(g_xmfd_m.xmfd018)
                    RETURNING g_xmfd_m.xmfd018_desc
               DISPLAY BY NAME g_xmfd_m.xmfd018_desc

               #取得運輸方式的說明 
               CALL axmt410_xmfd019_ref(g_xmfd_m.xmfd019)
                    RETURNING g_xmfd_m.xmfd019_desc
               DISPLAY BY NAME g_xmfd_m.xmfd019_desc

               #取得起運地的說明 
               CALL s_apmi011_location_ref(g_xmfd_m.xmfd019,g_xmfd_m.xmfd020)
                    RETURNING g_xmfd_m.xmfd020_desc
               DISPLAY BY NAME g_xmfd_m.xmfd020_desc 
               
               #取得目的地的說明 
               CALL s_apmi011_location_ref(g_xmfd_m.xmfd019,g_xmfd_m.xmfd021)
                    RETURNING g_xmfd_m.xmfd021_desc
               DISPLAY BY NAME g_xmfd_m.xmfd021_desc
               
               DISPLAY BY NAME g_xmfd_m.xmfd010, g_xmfd_m.xmfd011, g_xmfd_m.xmfd012,
                               g_xmfd_m.xmfd015, g_xmfd_m.xmfd016, g_xmfd_m.xmfd017,
                               g_xmfd_m.xmfd018, g_xmfd_m.xmfd019, g_xmfd_m.xmfd020,
                               g_xmfd_m.xmfd021
            END IF

            #INITIALIZE g_ref_fields TO NULL
            #LET g_ref_fields[1] = g_xmfd_m.xmfd003
            #CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            #LET g_xmfd_m.xmfd003_desc = '', g_rtn_fields[1] , ''
            #DISPLAY BY NAME g_xmfd_m.xmfd003_desc
            
            CALL s_desc_get_trading_partner_full_desc(g_xmfd_m.xmfd003)
                 RETURNING g_xmfd_m.xmfd003_desc
            DISPLAY BY NAME g_xmfd_m.xmfd003_desc]]>
</point>
  <point name="input.a.xmfd004" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_xmfd_m.xmfd005) AND g_xmfd_m.xmfd004 <> '0' THEN
               CALL axmt410_chk_xmfd005(g_xmfd_m.xmfd004,g_xmfd_m.xmfd005)
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_xmfd_m.xmfd005,g_errno,1)
                  NEXT FIELD xmfd005
               END IF
            END IF
            
            CALL axmt410_set_entry(p_cmd)
            CALL axmt410_set_no_entry(p_cmd)]]>
</point>
  <point name="input.a.xmfd005" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_xmfd_m.xmfd005) AND g_xmfd_m.xmfd004 <> '0' THEN 
               CALL axmt410_chk_xmfd005(g_xmfd_m.xmfd004,g_xmfd_m.xmfd005)
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_xmfd_m.xmfd005,g_errno,1)
                  LET g_xmfd_m.xmfd005 = g_xmfd_m_t.xmfd005
                  NEXT FIELD CURRENT
               END IF
            
               CASE g_xmfd_m.xmfd004
                  WHEN '1'              #估價單(axmt400) 
                     CALL axmt410_from_axmt400_get_default()
                  WHEN '2'              #報價單(axmt410) 
                     CALL axmt410_from_axmt410_get_default()
                  OTHERWISE
                     EXIT CASE
               END CASE
            END IF]]>
</point>
  <point name="input.a.xmfd008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL axmt410_set_entry(p_cmd)
            CALL axmt410_set_no_entry(p_cmd)]]>
</point>
  <point name="input.a.xmfd009" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            LET g_xmfd_m.xmfd009_desc = ' '
            CALL axmt410_xmfd009_ref(g_xmfd_m.xmfd009)
                 RETURNING g_xmfd_m.xmfd009_desc
            DISPLAY BY NAME g_xmfd_m.xmfd009_desc
            
            IF NOT cl_null(g_xmfd_m.xmfd009) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmfd_m.xmfd009 != g_xmfd_m_t.xmfd009 OR
                                                   g_xmfd_m_t.xmfd009 IS NULL)) THEN 
                  CALL axmt410_chk_xmfa(g_xmfd_m.xmfd009)
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err(g_xmfd_m.xmfd009,g_errno,1)
                     LET g_xmfd_m.xmfd009 = g_xmfd_m_t.xmfd009
                     CALL axmt410_xmfd009_ref(g_xmfd_m.xmfd009)
                          RETURNING g_xmfd_m.xmfd009_desc
                     DISPLAY BY NAME g_xmfd_m.xmfd009_desc
                     NEXT FIELD CURRENT
                  END IF
                  ##設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  #INITIALIZE g_chkparam.* TO NULL
                  ##設定g_chkparam.*的參數
                  #LET g_chkparam.arg1 = g_xmfd_m.xmfd009
                  #IF NOT cl_chk_exist("v_xmfa001_1") THEN
                  #   LET g_xmfd_m.xmfd009 = g_xmfd_m_t.xmfd009
                  #   CALL axmt410_xmfd009_ref(g_xmfd_m.xmfd009)
                  #        RETURNING g_xmfd_m.xmfd009_desc
                  #   DISPLAY BY NAME g_xmfd_m.xmfd009_desc
                  #   NEXT FIELD CURRENT
                  #END IF
               END IF     
            END IF 
            
            CALL axmt410_xmfd009_ref(g_xmfd_m.xmfd009)
                 RETURNING g_xmfd_m.xmfd009_desc 
            DISPLAY BY NAME g_xmfd_m.xmfd009_desc 
            
            #INITIALIZE g_ref_fields TO NULL
            #LET g_ref_fields[1] = g_xmfd_m.xmfd009
            #CALL ap_ref_array2(g_ref_fields,"SELECT xmfal002 FROM xmfal_t WHERE xmfalent='"||g_enterprise||"' AND xmfaldocno=? AND xmfal001='"||g_dlang||"'","") RETURNING g_rtn_fields
            #LET g_xmfd_m.xmfd009_desc = '', g_rtn_fields[1] , ''
            #DISPLAY BY NAME g_xmfd_m.xmfd009_desc

]]>
</point>
  <point name="input.a.xmfd010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            LET g_xmfd_m.xmfd010_desc = ' '
            CALL s_desc_get_currency_desc(g_xmfd_m.xmfd010)
                 RETURNING g_xmfd_m.xmfd010_desc
            DISPLAY BY NAME g_xmfd_m.xmfd010_desc
            
            IF NOT cl_null(g_xmfd_m.xmfd010) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmfd_m.xmfd010 != g_xmfd_m_t.xmfd010 OR
                                                   g_xmfd_m_t.xmfd010 IS NULL)) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_site
                  LET g_chkparam.arg2 = g_xmfd_m.xmfd010
                  IF NOT cl_chk_exist("v_ooaj002") THEN
                     LET g_xmfd_m.xmfd010 = g_xmfd_m_t.xmfd010
                     CALL s_desc_get_currency_desc(g_xmfd_m.xmfd010)
                          RETURNING g_xmfd_m.xmfd010_desc
                     DISPLAY BY NAME g_xmfd_m.xmfd010_desc
                     NEXT FIELD CURRENT
                  END IF

                  #取匯率 
                  CALL s_aooi160_get_exrate('1',g_site,g_today,g_xmfd_m.xmfd010,l_ooef016,0,'11') #ming 最後1個11的，要看參數決定  
                       RETURNING g_xmfd_m.xmfd011
                  DISPLAY BY NAME g_xmfd_m.xmfd011
               END IF            
            END IF 
            
            CALL s_desc_get_currency_desc(g_xmfd_m.xmfd010)
                 RETURNING g_xmfd_m.xmfd010_desc
            DISPLAY BY NAME g_xmfd_m.xmfd010_desc
            
            #INITIALIZE g_ref_fields TO NULL
            #LET g_ref_fields[1] = g_xmfd_m.xmfd010
            #CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"'","") RETURNING g_rtn_fields
            #LET g_xmfd_m.xmfd010_desc = '', g_rtn_fields[1] , ''
            #DISPLAY BY NAME g_xmfd_m.xmfd010_desc

]]>
</point>
  <point name="input.a.xmfd012" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            LET g_xmfd_m.xmfd012_desc = ' '
            CALL s_desc_get_tax_desc1(g_site,g_xmfd_m.xmfd012)
                 RETURNING g_xmfd_m.xmfd012_desc
            DISPLAY BY NAME g_xmfd_m.xmfd012_desc
            
            IF NOT cl_null(g_xmfd_m.xmfd012) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmfd_m.xmfd012 != g_xmfd_m_t.xmfd012 OR
                                                   g_xmfd_m_t.xmfd012 IS NULL)) THEN
                  CALL s_tax_chk(g_site,g_xmfd_m.xmfd012)
                       RETURNING l_success,g_xmfd_m.xmfd012_desc,
                                 g_xmfd_m.xmfd014,g_xmfd_m.xmfd013,l_oodb011
                  IF NOT l_success THEN
                     LET g_xmfd_m.xmfd012 = g_xmfd_m_t.xmfd012
                     LET g_xmfd_m.xmfd012 = g_xmfd_m_t.xmfd013
                     LET g_xmfd_m.xmfd014 = g_xmfd_m_t.xmfd014
                     CALL s_desc_get_tax_desc1(g_site,g_xmfd_m.xmfd012)
                          RETURNING g_xmfd_m.xmfd012_desc
                     DISPLAY BY NAME g_xmfd_m.xmfd012,g_xmfd_m.xmfd013,
                                     g_xmfd_m.xmfd014,g_xmfd_m.xmfd012_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
               ##此段落由子樣板a19產生
               ##設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               #INITIALIZE g_chkparam.* TO NULL
               ##設定g_chkparam.*的參數
               #LET g_chkparam.arg2 = '參數2'
               ##呼叫檢查存在並帶值的library
               #IF cl_chk_exist_and_ref_val("v_oodb002") THEN
               #   #檢查成功時後續處理
               #   #LET  = g_chkparam.return1
               #   #DISPLAY BY NAME 
               #ELSE
               #   #檢查失敗時後續處理
               #   NEXT FIELD CURRENT
               #END IF
            END IF 

            CALL s_desc_get_tax_desc1(g_site,g_xmfd_m.xmfd012)
                 RETURNING g_xmfd_m.xmfd012_desc
            DISPLAY BY NAME g_xmfd_m.xmfd012_desc
]]>
</point>
  <point name="input.a.xmfd015" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            LET g_xmfd_m.xmfd015_desc = ' '
            #CALL axmt410_xmfd015_ref(g_xmfd_m.xmfd015)
            #     RETURNING g_xmfd_m.xmfd015_desc 
            CALL s_desc_get_acc_desc('238',g_xmfd_m.xmfd015)
                 RETURNING g_xmfd_m.xmfd015_desc
            DISPLAY BY NAME g_xmfd_m.xmfd015_desc
            
            IF NOT cl_null(g_xmfd_m.xmfd015) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmfd_m.xmfd015 != g_xmfd_m_t.xmfd015 OR
                                                   g_xmfd_m_t.xmfd015 IS NULL)) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = '238'
                  LET g_chkparam.arg2 = g_xmfd_m.xmfd015
                  IF NOT cl_chk_exist("v_oocq002_01") THEN
                     LET g_xmfd_m.xmfd015 = g_xmfd_m_t.xmfd015
                     #CALL axmt410_xmfd015_ref(g_xmfd_m.xmfd015)
                     #     RETURNING g_xmfd_m.xmfd015_desc
                     CALL s_desc_get_acc_desc('238',g_xmfd_m.xmfd015)
                          RETURNING g_xmfd_m.xmfd015_desc
                     DISPLAY BY NAME g_xmfd_m.xmfd015_desc
                     NEXT FIELD CURRENT
                  END IF

                  #ming 以下這部分先抄 不確定是否要做  
                  ##重新修改交易條件時，需詢問是否重新取價，並重新計算含稅金額、未稅金額、稅額 
                  #LET l_cnt = 0 
                  #SELECT COUNT(*) INTO l_cnt  
                  #  FROM xmff_t 
                  # WHERE xmffent = g_enterprise 
                  #   AND xmffdocno = g_xmfd_m.xmfddocno 
                  #IF l_cnt > 0 AND (g_xmfd_m.xmfd015 != g_xmfd_m_o.xmfd015) THEN 
                  #   IF cl_ask_confirm('axm-00230') THEN 
                  #     #CALL axmt500_get_xmdc015()          
                  #      CALL axmt500_change_xmdc016()
                  #   END IF 
                  #   LET g_xmfd_m_o.xmfd015 = g_xmfd_m.xmfd015  
                  #END IF 
               END IF

            END IF 
            
            #CALL axmt410_xmfd015_ref(g_xmfd_m.xmfd015)
            #     RETURNING g_xmfd_m.xmfd015_desc 
            CALL s_desc_get_acc_desc('238',g_xmfd_m.xmfd015)
                 RETURNING g_xmfd_m.xmfd015_desc
            DISPLAY BY NAME g_xmfd_m.xmfd015_desc
            
            #INITIALIZE g_ref_fields TO NULL
            #LET g_ref_fields[1] = g_xmfd_m.xmfd015
            #CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='238' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            #LET g_xmfd_m.xmfd015_desc = '', g_rtn_fields[1] , ''
            #DISPLAY BY NAME g_xmfd_m.xmfd015_desc

]]>
</point>
  <point name="input.a.xmfd016" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            LET g_xmfd_m.xmfd016_desc = ' '
            CALL axmt410_xmfd016_ref(g_xmfd_m.xmfd016)
                 RETURNING g_xmfd_m.xmfd016_desc
            DISPLAY BY NAME g_xmfd_m.xmfd016_desc
            
            IF NOT cl_null(g_xmfd_m.xmfd016) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmfd_m.xmfd016 != g_xmfd_m_t.xmfd016 OR
                                                   g_xmfd_m_t.xmfd016 IS NULL)) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmfd_m.xmfd003
                  LET g_chkparam.arg2 = g_xmfd_m.xmfd016
                  IF NOT cl_chk_exist("v_pmad002_2") THEN
                     LET g_xmfd_m.xmfd016 = g_xmfd_m_t.xmfd016
                     CALL axmt410_xmfd016_ref(g_xmfd_m.xmfd016)
                          RETURNING g_xmfd_m.xmfd016_desc
                     DISPLAY BY NAME g_xmfd_m.xmfd016_desc
                     NEXT FIELD CURRENT
                  END IF

                  #ming 以下功能還不確定是否要加，先抄 
                  ##重新修改收款條件時，需詢問是否要重新取價，並重新計算含稅金額、未稅金額、稅額 
                  #LET l_cnt = 0 
                  #SELECT COUNT(*) INTO l_cnt 
                  #  FROM xmff_t 
                  # WHERE xmffent = g_enterprise 
                  #   AND xmffdocno = g_xmfd_m.xmfddocno 
                  #IF l_cnt > 0 AND (g_xmfd_m.xmfd016 != g_xmfd_m_o.xmfd016) THEN 
                  #   IF cl_ask_confirm('axm-00230') THEN 
                  #     #CALL axmt500_get_xmdc015()          
                  #      CALL axmt500_change_xmdc016()
                  #   END IF 
                  #   LET g_xmfd_m_o.xmfd016 = g_xmfd_m.xmfd016 
                  #END IF 
               END IF
            END IF 
            
            CALL axmt410_xmfd016_ref(g_xmfd_m.xmfd016)
                 RETURNING g_xmfd_m.xmfd016_desc
            DISPLAY BY NAME g_xmfd_m.xmfd016_desc
            
            #INITIALIZE g_ref_fields TO NULL
            #LET g_ref_fields[1] = g_xmfd_m.xmfd016
            #CALL ap_ref_array2(g_ref_fields,"SELECT ooibl004 FROM ooibl_t WHERE ooiblent='"||g_enterprise||"' AND ooibl002=? AND ooibl003='"||g_dlang||"'","") RETURNING g_rtn_fields
            #LET g_xmfd_m.xmfd016_desc = '', g_rtn_fields[1] , ''
            #DISPLAY BY NAME g_xmfd_m.xmfd016_desc
]]>
</point>
  <point name="input.a.xmfd017" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            LET g_xmfd_m.xmfd017_desc = ' '
            CALL axmt410_xmfd017_ref(g_xmfd_m.xmfd017)
                 RETURNING g_xmfd_m.xmfd017_desc
            DISPLAY BY NAME g_xmfd_m.xmfd017_desc
            
            IF NOT cl_null(g_xmfd_m.xmfd017) THEN  
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmfd_m.xmfd017 != g_xmfd_m_t.xmfd017 OR
                                                   g_xmfd_m_t.xmfd017 IS NULL)) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmfd_m.xmfd017
                  IF NOT cl_chk_exist("v_xmah001") THEN
                     LET g_xmfd_m.xmfd017 = g_xmfd_m_t.xmfd017
                     CALL axmt410_xmfd017_ref(g_xmfd_m.xmfd017)
                          RETURNING g_xmfd_m.xmfd017
                     DISPLAY BY NAME g_xmfd_m.xmfd017
                     NEXT FIELD CURRENT
                  END IF
                  #CALL axmt500_get_xmdc015() 

                  #ming 以下還不確定是否要做 ，先抄 
                  ##重新修改取價方式時，需詢問是否要重新取價，並重新計算含稅金額、未稅金額、稅額 
                  #LET l_cnt = 0 
                  #SELECT COUNT(*) INTO l_cnt 
                  #  FROM xmff_t 
                  # WHERE xmffent = g_enterprise 
                  #   AND xmffdocno = g_xmfd_m.xmfddocno 
                  #IF l_cnt > 0 AND (g_xmfd_m.xmfd017 != g_xmfd_m_o.xmfd017) THEN 
                  #   IF cl_ask_confirm('axm-00230') THEN 
                  #     #CALL axmt500_get_xmdc015()          
                  #      CALL axmt500_change_xmdc016()
                  #   END IF 
                  #   LET g_xmfd_m_o.xmfd017 = g_xmfd_m.xmfd017 
                  #END IF 

               END IF
            END IF 
            
            CALL axmt410_xmfd017_ref(g_xmfd_m.xmfd017)
                 RETURNING g_xmfd_m.xmfd017_desc
            DISPLAY BY NAME g_xmfd_m.xmfd017_desc
            
            #INITIALIZE g_ref_fields TO NULL
            #LET g_ref_fields[1] = g_xmfd_m.xmfd017
            #CALL ap_ref_array2(g_ref_fields,"SELECT pmaml003 FROM pmaml_t WHERE pmamlent='"||g_enterprise||"' AND pmaml001=? AND pmaml002='"||g_dlang||"'","") RETURNING g_rtn_fields
            #LET g_xmfd_m.xmfd017_desc = '', g_rtn_fields[1] , ''
            #DISPLAY BY NAME g_xmfd_m.xmfd017_desc
]]>
</point>
  <point name="input.a.xmfd018" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            LET g_xmfd_m.xmfd018_desc = ' '
            CALL axmt410_xmfd018_ref(g_xmfd_m.xmfd018)
                 RETURNING g_xmfd_m.xmfd018_desc
            DISPLAY BY NAME g_xmfd_m.xmfd018_desc
            
            IF NOT cl_null(g_xmfd_m.xmfd018) THEN 
               IF NOT axmt410_xmfd018_chk(g_xmfd_m.xmfd018) THEN
                  LET g_xmfd_m.xmfd018 = g_xmfd_m_t.xmfd018
                  CALL axmt410_xmfd018_ref(g_xmfd_m.xmfd018)
                       RETURNING g_xmfd_m.xmfd018_desc
                  DISPLAY BY NAME g_xmfd_m.xmfd018_desc
                  NEXT FIELD CURRENT
               END IF
               ##此段落由子樣板a19產生
               ##設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               #INITIALIZE g_chkparam.* TO NULL
               ##設定g_chkparam.*的參數
               #LET g_chkparam.arg2 = '參數2'
               ##呼叫檢查存在並帶值的library
               #IF cl_chk_exist_and_ref_val("v_oocq002_01") THEN
               #   #檢查成功時後續處理
               #   #LET  = g_chkparam.return1
               #   #DISPLAY BY NAME 
               #ELSE
               #   #檢查失敗時後續處理
               #   NEXT FIELD CURRENT
               #END IF
            
            END IF 
            
            CALL axmt410_xmfd018_ref(g_xmfd_m.xmfd018)
                 RETURNING g_xmfd_m.xmfd018_desc
            DISPLAY BY NAME g_xmfd_m.xmfd018_desc
            
            #INITIALIZE g_ref_fields TO NULL
            #LET g_ref_fields[1] = g_xmfd_m.xmfd018
            #CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='275' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            #LET g_xmfd_m.xmfd018_desc = '', g_rtn_fields[1] , ''
            #DISPLAY BY NAME g_xmfd_m.xmfd018_desc
]]>
</point>
  <point name="input.a.xmfd019" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            LET g_xmfd_m.xmfd019_desc = ' '
            #CALL axmt410_xmfd019_ref(g_xmfd_m.xmfd019)
            #     RETURNING g_xmfd_m.xmfd019_desc 
            CALL s_desc_get_acc_desc('263',g_xmfd_m.xmfd019)
                 RETURNING g_xmfd_m.xmfd019_desc
            DISPLAY BY NAME g_xmfd_m.xmfd019_desc
            
            IF NOT cl_null(g_xmfd_m.xmfd019) THEN  
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmfd_m.xmfd019 != g_xmfd_m_t.xmfd019 OR
                                                   g_xmfd_m_t.xmfd019 IS NULL )) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = '263'
                  LET g_chkparam.arg2 = g_xmfd_m.xmfd019
                  IF NOT cl_chk_exist("v_oocq002_01") THEN
                     LET g_xmfd_m.xmfd019 = g_xmfd_m_t.xmfd019
                     #CALL axmt410_xmfd019_ref(g_xmfd_m.xmfd019)
                     #     RETURNING g_xmfd_m.xmfd019_desc 
                     CALL s_desc_get_acc_desc('263',g_xmfd_m.xmfd019)
                          RETURNING g_xmfd_m.xmfd019_desc
                     DISPLAY BY NAME g_xmfd_m.xmfd019_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
               ##此段落由子樣板a19產生
               #IF cl_chk_exist_and_ref_val(":v_oocq002_01") THEN
               #END IF
            END IF 
            
            #CALL axmt410_xmfd019_ref(g_xmfd_m.xmfd019)
            #     RETURNING g_xmfd_m.xmfd019_desc 
            CALL s_desc_get_acc_desc('263',g_xmfd_m.xmfd019)
                 RETURNING g_xmfd_m.xmfd019_desc
            DISPLAY BY NAME g_xmfd_m.xmfd019_desc
            
            #INITIALIZE g_ref_fields TO NULL
            #LET g_ref_fields[1] = g_xmfd_m.xmfd019
            #CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='263' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            #LET g_xmfd_m.xmfd019_desc = '', g_rtn_fields[1] , ''
            #DISPLAY BY NAME g_xmfd_m.xmfd019_desc
]]>
</point>
  <point name="input.a.xmfd020" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            LET g_xmfd_m.xmfd020_desc = ' '
            CALL s_apmi011_location_ref(g_xmfd_m.xmfd019,g_xmfd_m.xmfd020)
                 RETURNING g_xmfd_m.xmfd020_desc
            DISPLAY BY NAME g_xmfd_m.xmfd020_desc

            IF NOT cl_null(g_xmfd_m.xmfd020) THEN
               IF cl_null(g_xmfd_m.xmfd019) THEN
                  LET g_xmfd_m.xmfd020 = g_xmfd_m_t.xmfd020
                  CALL cl_err('','axm-00085',1)     #請先輸入運輸方式  
                  NEXT FIELD xmfd019
               END IF

               CALL s_apmi011_check_location(g_xmfd_m.xmfd019,g_xmfd_m.xmfd020)
                    RETURNING l_success
               IF NOT l_success THEN
                  LET g_xmfd_m.xmfd020 = g_xmfd_m_t.xmfd020
                  CALL s_apmi011_location_ref(g_xmfd_m.xmfd019,g_xmfd_m.xmfd020)
                       RETURNING g_xmfd_m.xmfd020_desc
                  DISPLAY BY NAME g_xmfd_m.xmfd020_desc
                  NEXT FIELD CURRENT
               END IF
            END IF
            
            CALL s_apmi011_location_ref(g_xmfd_m.xmfd019,g_xmfd_m.xmfd020)
                 RETURNING g_xmfd_m.xmfd020_desc
            DISPLAY BY NAME g_xmfd_m.xmfd020_desc
            
            #INITIALIZE g_ref_fields TO NULL
            #LET g_ref_fields[1] = g_xmfd_m.xmfd020
            #CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            #LET g_xmfd_m.xmfd020_desc = '', g_rtn_fields[1] , ''
            #DISPLAY BY NAME g_xmfd_m.xmfd020_desc

]]>
</point>
  <point name="input.a.xmfd021" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            LET g_xmfd_m.xmfd021_desc = ' '
            CALL s_apmi011_location_ref(g_xmfd_m.xmfd019,g_xmfd_m.xmfd021)
                 RETURNING g_xmfd_m.xmfd021_desc
            DISPLAY BY NAME g_xmfd_m.xmfd021_desc

            IF NOT cl_null(g_xmfd_m.xmfd021) THEN
               IF cl_null(g_xmfd_m.xmfd019) THEN
                  LET g_xmfd_m.xmfd021 = g_xmfd_m_t.xmfd021
                  CALL cl_err('','axm-00085',1)     #請先輸入運輸方式  
                  NEXT FIELD xmfd019
               END IF

               CALL s_apmi011_check_location(g_xmfd_m.xmfd019,g_xmfd_m.xmfd021)
                    RETURNING l_success
               IF NOT l_success THEN
                  LET g_xmfd_m.xmfd021 = g_xmfd_m_t.xmfd021
                  CALL s_apmi011_location_ref(g_xmfd_m.xmfd019,g_xmfd_m.xmfd021)
                       RETURNING g_xmfd_m.xmfd021_desc
                  DISPLAY BY NAME g_xmfd_m.xmfd021_desc
                  NEXT FIELD CURRENT
               END IF
            END IF
            
            CALL s_apmi011_location_ref(g_xmfd_m.xmfd019,g_xmfd_m.xmfd021)
                 RETURNING g_xmfd_m.xmfd021_desc
            DISPLAY BY NAME g_xmfd_m.xmfd021_desc
            
            #INITIALIZE g_ref_fields TO NULL
            #LET g_ref_fields[1] = g_xmfd_m.xmfd021
            #CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            #LET g_xmfd_m.xmfd021_desc = '', g_rtn_fields[1] , ''
            #DISPLAY BY NAME g_xmfd_m.xmfd021_desc

]]>
</point>
  <point name="input.a.xmfd022" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            LET g_xmfd_m.xmfd022_desc = ' ' 
            LET g_xmfd_m.oofb017 = ' '
            #CALL axmt410_xmfd022_ref(l_pmaa027,g_xmfd_m.xmfd022)
            #     RETURNING g_xmfd_m.xmfd022_desc
            #DISPLAY BY NAME g_xmfd_m.xmfd022_desc 
            CALL axmt410_xmfd022_ref(g_xmfd_m.xmfd003,g_xmfd_m.xmfd022)
                 RETURNING g_xmfd_m.xmfd022_desc,g_xmfd_m.oofb017
            DISPLAY BY NAME g_xmfd_m.xmfd022_desc,g_xmfd_m.oofb017
            
            IF NOT cl_null(g_xmfd_m.xmfd022) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmfd_m.xmfd022 != g_xmfd_m_t.xmfd022 OR
                                                   g_xmfd_m_t.xmfd022 IS NULL)) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = l_pmaa027
                  LET g_chkparam.arg2 = g_xmfd_m.xmfd022
                  IF NOT cl_chk_exist("v_oofb019_4") THEN
                     LET g_xmfd_m.xmfd022 = g_xmfd_m_t.xmfd022
                     #CALL axmt410_xmfd022_ref(l_pmaa027,g_xmfd_m.xmfd022)
                     #     RETURNING g_xmfd_m.xmfd022_desc
                     #DISPLAY BY NAME g_xmfd_m.xmfd022_desc 
                     CALL axmt410_xmfd022_ref(g_xmfd_m.xmfd003,g_xmfd_m.xmfd022)
                          RETURNING g_xmfd_m.xmfd022_desc,g_xmfd_m.oofb017
                     DISPLAY BY NAME g_xmfd_m.xmfd022_desc,g_xmfd_m.oofb017
                     NEXT FIELD CURRENT
                  END IF
                  #呼叫地址組合應用元件，將組合好的聯絡地址顯示在下方 
                  CALL s_aooi350_get_address(l_pmaa027,g_xmfd_m.xmfd022,g_lang)
                       RETURNING l_success,l_address
                  IF l_success THEN
                     LET g_xmfd_m.oofb017 = l_address
                     DISPLAY BY NAME g_xmfd_m.oofb017
                  END IF
               END IF
            END IF 
            
            #CALL axmt410_xmfd022_ref(l_pmaa027,g_xmfd_m.xmfd022)
            #     RETURNING g_xmfd_m.xmfd022_desc
            #DISPLAY BY NAME g_xmfd_m.xmfd022_desc  
            CALL axmt410_xmfd022_ref(g_xmfd_m.xmfd003,g_xmfd_m.xmfd022)
                 RETURNING g_xmfd_m.xmfd022_desc,g_xmfd_m.oofb017
            DISPLAY BY NAME g_xmfd_m.xmfd022_desc,g_xmfd_m.oofb017
            
            #INITIALIZE g_ref_fields TO NULL
            #LET g_ref_fields[1] = g_xmfd_m.xmfd022
            #CALL ap_ref_array2(g_ref_fields,"SELECT oofb011 FROM oofb_t WHERE oofbent='"||g_enterprise||"' AND oofb001=? ","") RETURNING g_rtn_fields
            #LET g_xmfd_m.xmfd022_desc = '', g_rtn_fields[1] , ''
            #DISPLAY BY NAME g_xmfd_m.xmfd022_desc
]]>
</point>
  <point name="input.a.xmfddocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            LET g_xmfd_m.xmfddocno_desc = ' '
            CALL s_aooi200_get_slip_desc(g_xmfd_m.xmfddocno)
                 RETURNING g_xmfd_m.xmfddocno_desc
            DISPLAY BY NAME g_xmfd_m.xmfddocno_desc
            
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xmfd_m.xmfddocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xmfd_m.xmfddocno != g_xmfddocno_t )) THEN 
                  #IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmfd_t WHERE "||"xmfdent = '" ||g_enterprise|| "' AND "||"xmfddocno = '"||g_xmfd_m.xmfddocno ||"'",'std-00004',0) THEN 
                  #   NEXT FIELD CURRENT
                  #END IF
                  IF NOT axmt410_xmfddocno_chk() THEN
                     LET g_xmfd_m.xmfddocno = g_xmfddocno_t
                     CALL s_aooi200_get_slip_desc(g_xmfd_m.xmfddocno)
                          RETURNING g_xmfd_m.xmfddocno_desc
                     DISPLAY BY NAME g_xmfd_m.xmfddocno_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            ELSE
               CALL cl_err('','sub-00324',1)
               NEXT FIELD CURRENT
            END IF

            CALL s_aooi200_get_slip_desc(g_xmfd_m.xmfddocno)
                 RETURNING g_xmfd_m.xmfddocno_desc
            DISPLAY BY NAME g_xmfd_m.xmfddocno_desc

            CALL axmt410_set_entry(p_cmd)
            CALL axmt410_set_no_entry(p_cmd)
]]>
</point>
  <point name="input.b.page1.xmff002" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            IF axmt410_imaa005_exists() THEN
               IF l_cmd = 'a' AND cl_null(g_xmff_d[l_ac].xmff002) THEN
                  CALL g_inam.clear()
                  CALL s_feature_multi(g_xmff_d[l_ac].xmff001,'','',g_site,g_xmfd_m.xmfddocno)
                       RETURNING l_success,g_inam
                  LET g_xmff_d[l_ac].xmff002 = g_inam[1].inam002
               END IF
            END IF]]>
</point>
  <point name="input.before_input" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[   LET l_ooef004 = ''
   LET l_ooef016 = ''
   SELECT ooef004,ooef016 INTO l_ooef004,l_ooef016
     FROM ooef_t
    WHERE ooefent = g_enterprise
      AND ooef001 = g_site]]>
</point>
  <point name="input.body.after_row" cite_std="N" status="u" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            #CALL axmt410_amount() 
            #ming 應該做個詢問？  
            #ming 這部分怪怪的，先不做   
            #CALL axmt410_del_xmfg() 
            #IF NOT cl_null(g_errno) THEN 
            #   CALL cl_err("xmfg_t",g_errno,1) 
            #   CALL s_transaction_end('N','0') 
            #   NEXT FIELD CURRENT 
            #END IF 
            ]]>
</point>
  <point name="input.body.b_delete" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[               #如果此資料有分量計價的資料 也要一起被清除 
               CALL axmt410_del_xmfg()
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err("xmfg_t",g_errno,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE
               END IF]]>
</point>
  <point name="input.body.before_insert" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            SELECT MAX(xmffseq) + 1 INTO g_xmff_d[l_ac].xmffseq
              FROM xmff_t
             WHERE xmffent = g_enterprise
               AND xmffdocno = g_xmfd_m.xmfddocno
            IF cl_null(g_xmff_d[l_ac].xmffseq) OR g_xmff_d[l_ac].xmffseq = 0 THEN
               LET g_xmff_d[l_ac].xmffseq = 1
            END IF

            LET g_xmff_d[l_ac].xmff005 = 'N']]>
</point>
  <point name="input.body3.before_insert" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            SELECT MAX(xmfeseq) + 1 INTO g_xmff3_d[l_ac].xmfeseq
              FROM xmfe_t
             WHERE xmfeent = g_enterprise
               AND xmfedocno = g_xmfd_m.xmfddocno
            IF cl_null(g_xmff3_d[l_ac].xmfeseq) OR g_xmff3_d[l_ac].xmfeseq = 0 THEN
               LET g_xmff3_d[l_ac].xmfeseq = 1
            END IF]]>
</point>
  <point name="input.c.page1.xmff001" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmff_d[l_ac].xmff001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #
            LET g_qryparam.where = " 1=1 "
            CALL s_control_get_item_sql('2',g_site,g_user,g_dept,g_xmfd_m.xmfddocno)
                 RETURNING l_success,l_where
            IF l_success THEN
               LET g_qryparam.where = g_qryparam.where ," AND ",l_where
            END IF
            
            CALL q_imaf001_15()                                #呼叫開窗

            LET g_xmff_d[l_ac].xmff001 = g_qryparam.return1              

            DISPLAY g_xmff_d[l_ac].xmff001 TO xmff001              #
            CALL s_desc_get_item_desc(g_xmff_d[l_ac].xmff001)
                 RETURNING g_xmff_d[l_ac].xmff001_desc,
                           g_xmff_d[l_ac].xmff001_desc_desc
            NEXT FIELD xmff001                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.xmff002" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            IF axmt410_imaa005_exists() THEN
               IF l_cmd = 'u' OR (l_cmd = 'a' AND NOT cl_null(g_xmff_d[l_ac].xmff002)) THEN
                  CALL s_feature_single(g_xmff_d[l_ac].xmff001,g_xmff_d[l_ac].xmff002,g_site,g_xmfd_m.xmfddocno)
                       RETURNING l_success,g_xmff_d[l_ac].xmff002
               END IF
            END IF]]>
</point>
  <point name="input.c.page1.xmff003" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmff_d[l_ac].xmff003
            IF cl_null(g_xmff_d[l_ac].xmff001) OR cl_null(g_xmff_d[l_ac].xmff002) THEN
               LET g_qryparam.arg1 = g_xmfd_m.xmfd003
               CALL q_pmao004_2()
            ELSE
               LET g_qryparam.arg1 = g_xmfd_m.xmfd003
               LET g_qryparam.arg2 = g_xmff_d[l_ac].xmff001
               LET g_qryparam.arg3 = g_xmff_d[l_ac].xmff002
               CALL q_pmao004_1()
            END IF
            LET g_xmff_d[l_ac].xmff003 = g_qryparam.return1
            DISPLAY g_xmff_d[l_ac].xmff003 TO xmff003
            NEXT FIELD xmff003]]>
</point>
  <point name="input.c.page1.xmff004" cite_std="N" status="u" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmff_d[l_ac].xmff004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_xmff_d[l_ac].xmff001

            CALL q_ooca001_1()

            LET g_xmff_d[l_ac].xmff004 = g_qryparam.return1              

            DISPLAY g_xmff_d[l_ac].xmff004 TO xmff004              #
            CALL s_desc_get_unit_desc(g_xmff_d[l_ac].xmff004)
                 RETURNING g_xmff_d[l_ac].xmff004_desc
            NEXT FIELD xmff004                          #返回原欄位

]]>
</point>
  <point name="input.c.page3.xmfe002" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmff3_d[l_ac].xmfe002             #給予default值
            LET g_qryparam.default2 = "" #g_xmff3_d[l_ac].oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "802" #

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_xmff3_d[l_ac].xmfe002 = g_qryparam.return1              
            #LET g_xmff3_d[l_ac].oocq002 = g_qryparam.return2 
            DISPLAY g_xmff3_d[l_ac].xmfe002 TO xmfe002              #
            #DISPLAY g_xmff3_d[l_ac].oocq002 TO oocq002 #應用分類碼 
            CALL s_desc_get_acc_desc('802',g_xmff3_d[l_ac].xmfe002)
                 RETURNING g_xmff3_d[l_ac].xmfe002_desc
            NEXT FIELD xmfe002                          #返回原欄位

]]>
</point>
  <point name="input.c.xmfd001" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfd_m.xmfd001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooag001()                                #呼叫開窗

            LET g_xmfd_m.xmfd001 = g_qryparam.return1              

            DISPLAY g_xmfd_m.xmfd001 TO xmfd001              #
            CALL s_desc_get_person_desc(g_xmfd_m.xmfd001)
                 RETURNING g_xmfd_m.xmfd001_desc
            DISPLAY BY NAME g_xmfd_m.xmfd001_desc
            NEXT FIELD xmfd001                          #返回原欄位

]]>
</point>
  <point name="input.c.xmfd002" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfd_m.xmfd002             #給予default值
            LET g_qryparam.default2 = "" #g_xmfd_m.ooeg001 #部門編號
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooeg001()                                #呼叫開窗

            LET g_xmfd_m.xmfd002 = g_qryparam.return1              
            #LET g_xmfd_m.ooeg001 = g_qryparam.return2 
            DISPLAY g_xmfd_m.xmfd002 TO xmfd002              #
            #DISPLAY g_xmfd_m.ooeg001 TO ooeg001 #部門編號 
            CALL s_desc_get_department_desc(g_xmfd_m.xmfd002)
                 RETURNING g_xmfd_m.xmfd002_desc
            DISPLAY BY NAME g_xmfd_m.xmfd002_desc
            NEXT FIELD xmfd002                          #返回原欄位

]]>
</point>
  <point name="input.c.xmfd003" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfd_m.xmfd003             #給予default值

            #給予arg
            #LET g_qryparam.arg1 = "" #
            LET g_qryparam.where = " 1=1 "
            CALL s_control_get_customer_sql('2',g_site,g_user,g_dept,g_xmfd_m.xmfddocno)
                 RETURNING l_success,l_where
            IF l_success THEN
               LET g_qryparam.where = g_qryparam.where ," AND ",l_where
            END IF
            
            CALL q_pmaa001_6()                                #呼叫開窗

            LET g_xmfd_m.xmfd003 = g_qryparam.return1              

            DISPLAY g_xmfd_m.xmfd003 TO xmfd003              #
            CALL s_desc_get_trading_partner_full_desc(g_xmfd_m.xmfd003)
                 RETURNING g_xmfd_m.xmfd003_desc
            DISPLAY BY NAME g_xmfd_m.xmfd003_desc
            NEXT FIELD xmfd003                          #返回原欄位

]]>
</point>
  <point name="input.c.xmfd005" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            IF g_xmfd_m.xmfd004 <> '0' THEN
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_xmfd_m.xmfd005
               #LET g_qryparam.arg1 = "" 

               CASE g_xmfd_m.xmfd004
                  WHEN '1'     
                     LET g_qryparam.where = " xmevstus = 'Y' " 
                     CALL q_xmevdocno() 
                  WHEN '2'   
                     LET g_qryparam.where = " xmfdstus = 'Y' " 
                     CALL q_xmfddocno() 
                  OTHERWISE
                     EXIT CASE
               END CASE

               LET g_xmfd_m.xmfd005 = g_qryparam.return1

               DISPLAY g_xmfd_m.xmfd005 TO xmfd005
            END IF

            NEXT FIELD xmfd005]]>
</point>
  <point name="input.c.xmfd009" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfd_m.xmfd009             #給予default值

            #給予arg
            #LET g_qryparam.arg1 = "" #
            LET g_qryparam.where = "xmfastus = 'Y' "
            
            CALL q_xmfadocno()                                #呼叫開窗

            LET g_xmfd_m.xmfd009 = g_qryparam.return1              

            DISPLAY g_xmfd_m.xmfd009 TO xmfd009              #

            NEXT FIELD xmfd009                          #返回原欄位

]]>
</point>
  <point name="input.c.xmfd010" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfd_m.xmfd010             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_site
            
            CALL q_ooaj002_1()                                #呼叫開窗

            LET g_xmfd_m.xmfd010 = g_qryparam.return1              

            DISPLAY g_xmfd_m.xmfd010 TO xmfd010              #
            CALL s_desc_get_currency_desc(g_xmfd_m.xmfd010)
                 RETURNING g_xmfd_m.xmfd010_desc
            DISPLAY BY NAME g_xmfd_m.xmfd010_desc
            NEXT FIELD xmfd010                          #返回原欄位

]]>
</point>
  <point name="input.c.xmfd012" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfd_m.xmfd012             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_oodb002_2()                                #呼叫開窗

            LET g_xmfd_m.xmfd012 = g_qryparam.return1              

            DISPLAY g_xmfd_m.xmfd012 TO xmfd012              #
            CALL s_desc_get_tax_desc1(g_site,g_xmfd_m.xmfd012)
                 RETURNING g_xmfd_m.xmfd012_desc
            DISPLAY BY NAME g_xmfd_m.xmfd012_desc 
            
            CALL s_tax_chk(g_site,g_xmfd_m.xmfd012)
                 RETURNING l_success,g_xmfd_m.xmfd012_desc,
                           g_xmfd_m.xmfd014,g_xmfd_m.xmfd013,l_oodb011
            DISPLAY BY NAME g_xmfd_m.xmfd013,g_xmfd_m.xmfd014
            
            NEXT FIELD xmfd012                          #返回原欄位

]]>
</point>
  <point name="input.c.xmfd015" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfd_m.xmfd015             #給予default值
            LET g_qryparam.default2 = "" #g_xmfd_m.oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "238" #
            
            CALL q_oocq002()                                #呼叫開窗

            LET g_xmfd_m.xmfd015 = g_qryparam.return1              
            #LET g_xmfd_m.oocq002 = g_qryparam.return2 
            DISPLAY g_xmfd_m.xmfd015 TO xmfd015              #
            #DISPLAY g_xmfd_m.oocq002 TO oocq002 #應用分類碼 
            CALL s_desc_get_acc_desc('238',g_xmfd_m.xmfd015)
                 RETURNING g_xmfd_m.xmfd015_desc
            DISPLAY BY NAME g_xmfd_m.xmfd015_desc
            NEXT FIELD xmfd015                          #返回原欄位

]]>
</point>
  <point name="input.c.xmfd016" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfd_m.xmfd016             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_xmfd_m.xmfd003
            LET g_qryparam.arg2 = g_xmfd_m.xmfd016

            CALL q_pmad002_3()                                #呼叫開窗

            LET g_xmfd_m.xmfd016 = g_qryparam.return1              

            DISPLAY g_xmfd_m.xmfd016 TO xmfd016              #
            CALL axmt410_xmfd016_ref(g_xmfd_m.xmfd016)
                 RETURNING g_xmfd_m.xmfd016_desc
            DISPLAY BY NAME g_xmfd_m.xmfd016_desc
            NEXT FIELD xmfd016                          #返回原欄位

]]>
</point>
  <point name="input.c.xmfd017" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfd_m.xmfd017             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_xmah001()                                #呼叫開窗

            LET g_xmfd_m.xmfd017 = g_qryparam.return1              

            DISPLAY g_xmfd_m.xmfd017 TO xmfd017              #
            CALL axmt410_xmfd017_ref(g_xmfd_m.xmfd017)
                 RETURNING g_xmfd_m.xmfd017_desc
            DISPLAY BY NAME g_xmfd_m.xmfd017_desc
            NEXT FIELD xmfd017                          #返回原欄位

]]>
</point>
  <point name="input.c.xmfd018" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfd_m.xmfd018             #給予default值
            LET g_qryparam.default2 = "" #g_xmfd_m.oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "275" #

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_xmfd_m.xmfd018 = g_qryparam.return1              
            #LET g_xmfd_m.oocq002 = g_qryparam.return2 
            DISPLAY g_xmfd_m.xmfd018 TO xmfd018              #
            #DISPLAY g_xmfd_m.oocq002 TO oocq002 #應用分類碼 
            CALL s_desc_get_acc_desc('275',g_xmfd_m.xmfd018)
                 RETURNING g_xmfd_m.xmfd018_desc
            DISPLAY BY NAME g_xmfd_m.xmfd018_desc
            NEXT FIELD xmfd018                          #返回原欄位

]]>
</point>
  <point name="input.c.xmfd019" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfd_m.xmfd019             #給予default值
            LET g_qryparam.default2 = "" #g_xmfd_m.oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "263" #

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_xmfd_m.xmfd019 = g_qryparam.return1              
            #LET g_xmfd_m.oocq002 = g_qryparam.return2 
            DISPLAY g_xmfd_m.xmfd019 TO xmfd019              #
            #DISPLAY g_xmfd_m.oocq002 TO oocq002 #應用分類碼 
            CALL s_desc_get_acc_desc('263',g_xmfd_m.xmfd019)
                 RETURNING g_xmfd_m.xmfd019_desc
            DISPLAY BY NAME g_xmfd_m.xmfd019_desc
            NEXT FIELD xmfd019                          #返回原欄位

]]>
</point>
  <point name="input.c.xmfd020" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmfd_m.xmfd020
            CALL axmt410_get_oocq019(g_xmfd_m.xmfd019) RETURNING l_oocq019   #運輸類型  
            IF NOT cl_null(l_oocq019) THEN
               CASE
                  WHEN l_oocq019 = '1' OR l_oocq019 = '4'
                     CALL q_oock004()
                  WHEN l_oocq019 = '2'
                     CALL q_oocq002_10()
                  WHEN l_oocq019 = '3'
                     CALL q_oocq002_12()
                  OTHERWISE
                     EXIT CASE
               END CASE
            END IF
            LET g_xmfd_m.xmfd020 = g_qryparam.return1
            DISPLAY g_xmfd_m.xmfd020 TO xmfd020
            CALL s_apmi011_location_ref(g_xmfd_m.xmfd019,g_xmfd_m.xmfd020)
                 RETURNING g_xmfd_m.xmfd020_desc
            DISPLAY BY NAME g_xmfd_m.xmfd020_desc
            NEXT FIELD xmfd020]]>
</point>
  <point name="input.c.xmfd021" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmfd_m.xmfd021
            CALL axmt410_get_oocq019(g_xmfd_m.xmfd019) RETURNING l_oocq019   #運輸類型 
            IF NOT cl_null(l_oocq019) THEN
               CASE
                  WHEN l_oocq019 = '1' OR l_oocq019 = '4'
                     CALL q_oock004()
                  WHEN l_oocq019 = '2'
                     CALL q_oocq002_10()
                  WHEN l_oocq019 = '3'
                     CALL q_oocq002_12()
                  OTHERWISE
                     EXIT CASE
               END CASE
            END IF
            LET g_xmfd_m.xmfd021 = g_qryparam.return1
            DISPLAY g_xmfd_m.xmfd021 TO xmfd021
            CALL s_apmi011_location_ref(g_xmfd_m.xmfd019,g_xmfd_m.xmfd021)
                 RETURNING g_xmfd_m.xmfd021_desc
            DISPLAY BY NAME g_xmfd_m.xmfd021_desc
            NEXT FIELD xmfd021]]>
</point>
  <point name="input.c.xmfd022" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfd_m.xmfd022             #給予default值
            CALL s_axmt500_get_pmaa027(g_xmfd_m.xmfd003) RETURNING l_pmaa027
            #給予arg
            LET g_qryparam.arg1 = l_pmaa027
            LET g_qryparam.WHERE = " oofb008 = '2' "

            
            CALL q_oofb019_1()                                #呼叫開窗

            LET g_xmfd_m.xmfd022 = g_qryparam.return1              

            DISPLAY g_xmfd_m.xmfd022 TO xmfd022              #
            CALL axmt410_xmfd022_ref(g_xmfd_m.xmfd003,g_xmfd_m.xmfd022)
                 RETURNING g_xmfd_m.xmfd022_desc,g_xmfd_m.oofb017
            DISPLAY BY NAME g_xmfd_m.xmfd022_desc,g_xmfd_m.oofb017
            NEXT FIELD xmfd022                          #返回原欄位

]]>
</point>
  <point name="input.c.xmfddocno" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfd_m.xmfddocno             #給予default值

            #給予arg
            LET g_qryparam.arg1 = l_ooef004    #參照表號 
            LET g_qryparam.arg2 = g_prog       #程式代號 
            
            CALL q_ooba002_1()                                #呼叫開窗

            LET g_xmfd_m.xmfddocno = g_qryparam.return1              

            DISPLAY g_xmfd_m.xmfddocno TO xmfddocno              #
            CALL s_aooi200_get_slip_desc(g_xmfd_m.xmfddocno)
                 RETURNING g_xmfd_m.xmfddocno_desc
            DISPLAY BY NAME g_xmfd_m.xmfddocno_desc
            NEXT FIELD xmfddocno                          #返回原欄位

]]>
</point>
  <point name="input.define" cite_std="N" status="u" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE l_ooef004              LIKE ooef_t.ooef004      #單據別參照表 
   DEFINE l_success              LIKE type_t.num5
   DEFINE l_controlno            LIKE ooha_t.ooha001      #控制組編號  
   DEFINE l_ooef016              LIKE ooef_t.ooef016
   DEFINE l_oodb011              LIKE oodb_t.oodb011
   DEFINE l_pmaa027              LIKE pmaa_t.pmaa027
   DEFINE l_address              STRING 
   DEFINE l_where                STRING
   DEFINE l_xmah004              LIKE xmah_t.xmah004
   DEFINE l_xmah005              LIKE xmah_t.xmah005
   DEFINE l_xmah006              LIKE xmah_t.xmah006
   DEFINE l_oocq019              LIKE oocq_t.oocq019
   DEFINE l_pmao002              LIKE pmao_t.pmao002
   DEFINE l_pmao003              LIKE pmao_t.pmao003 
   
   DEFINE l_xmfc                 DYNAMIC ARRAY OF RECORD
                                    xmfb0031 LIKE type_t.chr10,
                                    xmfb0031_desc LIKE type_t.chr80,
                                    xmfc0021 LIKE type_t.num10,
                                    xmfc0031 LIKE type_t.num10,
                                    xmfc0041 LIKE type_t.chr500,
                                    xmfc0041_desc LIKE type_t.chr500,
                                    xmfc0041_desc_desc LIKE type_t.chr500,
                                    xmfc0051 LIKE type_t.chr500,
                                    xmfc0071 LIKE type_t.chr10,
                                    xmfc0061 LIKE type_t.num20_6,
                                    xmfc0081 LIKE type_t.chr500
                                 END RECORD 
   DEFINE l_xmff                 RECORD
                                    xmffent     LIKE xmff_t.xmffent,     #企業編號  
                                    xmffsite    LIKE xmff_t.xmffsite,    #營運據點  
                                    xmffdocno   LIKE xmff_t.xmffdocno,   #報價單號  
                                    xmffseq     LIKE xmff_t.xmffseq,     #項次  
                                    xmff001     LIKE xmff_t.xmff001,     #料件編號  
                                    xmff002     LIKE xmff_t.xmff002,     #產品特徵  
                                    xmff003     LIKE xmff_t.xmff003,     #客戶料號  
                                    xmff004     LIKE xmff_t.xmff004,     #銷售單位  
                                    xmff005     LIKE xmff_t.xmff005,     #分量計價  
                                    xmff006     LIKE xmff_t.xmff006,     #數量 
                                    xmff007     LIKE xmff_t.xmff007,     #報價單價  
                                    xmff008     LIKE xmff_t.xmff008,     #未稅金額  
                                    xmff009     LIKE xmff_t.xmff009,     #含稅金額  
                                    xmff010     LIKE xmff_t.xmff010,     #稅額  
                                    xmff011     LIKE xmff_t.xmff011,     #標準成本單價  
                                    xmff012     LIKE xmff_t.xmff012,     #預估毛利率  
                                    xmff013     LIKE xmff_t.xmff013,     #預估毛利金額  
                                    xmff014     LIKE xmff_t.xmff014      #備註  
                                 END RECORD  
   DEFINE l_xmaw001              LIKE xmaw_t.xmaw001]]>
</point>
  <point name="input.head.a_insert" cite_std="N" status="u" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.head.b_insert" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[               CALL s_aooi200_gen_docno(g_site,g_xmfd_m.xmfddocno,g_xmfd_m.xmfddocdt,g_prog)
                    RETURNING l_success,g_xmfd_m.xmfddocno
               IF NOT l_success THEN
                  CALL cl_err(g_xmfd_m.xmfddocno,'apm-00003',1)
                  CALL s_transaction_end('N','0')
                  NEXT FIELD xmfddocno
               END IF
               DISPLAY BY NAME g_xmfd_m.xmfddocno]]>
</point>
  <point name="insert.default" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[      LET g_xmfd_m.xmfddocdt = g_today                   #報價日期   
      LET g_xmfd_m.xmfd001   = g_user                    #業務人員 
      CALL s_desc_get_person_desc(g_xmfd_m.xmfd001)
           RETURNING g_xmfd_m.xmfd001_desc
      DISPLAY BY NAME g_xmfd_m.xmfd001_desc
      LET g_xmfd_m.xmfd002   = g_dept                    #業務部門   
      CALL s_desc_get_department_desc(g_xmfd_m.xmfd002)
           RETURNING g_xmfd_m.xmfd002_desc
      DISPLAY BY NAME g_xmfd_m.xmfd002_desc
      LET g_xmfd_m.xmfd007 = g_today                     #報價有效期限  
      
      INITIALIZE g_xmfd_m_t.* TO NULL
      INITIALIZE g_xmfd_m_o.* TO NULL
      LET g_xmfd_m_t.* = g_xmfd_m.*
      LET g_xmfd_m_o.* = g_xmfd_m.*]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[   CALL axmt410_02_drop_temp()]]>
</point>
  <point name="main.init" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[   CALL axmt410_02_create_temp()]]>
</point>
  <point name="menu.prog_xmfd001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               #+ 此段落由子樣板a45產生
               CALL cl_user_contact("aooi130", "ooag_t", "ooag002", "ooag001",'')

]]>
</point>
  <point name="set_entry.after_control" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[   CALL cl_set_comp_entry("xmfd008",TRUE)

   CALL cl_set_comp_entry("xmfd009",TRUE)]]>
</point>
  <point name="set_entry_b.set_entry_b" cite_std="N" status="u" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[   CALL cl_set_comp_entry("xmff002",TRUE)
   
   CALL cl_set_comp_entry("xmff007",TRUE)]]>
</point>
  <point name="set_no_entry.after_control" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[   IF g_xmfd_m.xmfd004 <> '0' THEN
      CALL cl_set_comp_entry("xmfd008",FALSE)
   END IF

   IF g_xmfd_m.xmfd008 <> '2' THEN
      CALL cl_set_comp_entry("xmfd009",FALSE)
   END IF]]>
</point>
  <point name="set_no_entry_b.set_no_entry_b" cite_std="N" status="u" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[   
   #料件主檔無特徵類別 不能維護產品特徵 
   IF NOT axmt410_imaa005_exists() THEN
      CALL cl_set_comp_entry("xmff002",FALSE)
   END IF
   
   IF g_xmff_d[l_ac].xmff005 = 'Y' THEN
      CALL cl_set_comp_entry("xmff007",FALSE)
   END IF]]>
</point>
  <point name="show.body.reference" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[      CALL s_desc_get_item_desc(g_xmff_d[l_ac].xmff001)
           RETURNING g_xmff_d[l_ac].xmff001_desc,
                     g_xmff_d[l_ac].xmff001_desc_desc 
      DISPLAY BY NAME g_xmff_d[l_ac].xmff001_desc, 
                      g_xmff_d[l_ac].xmff001_desc_desc 

      CALL s_desc_get_unit_desc(g_xmff_d[l_ac].xmff004)
           RETURNING g_xmff_d[l_ac].xmff004_desc 
      DISPLAY BY NAME g_xmff_d[l_ac].xmff004_desc 
]]>
</point>
  <point name="show.body3.reference" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[      CALL s_desc_get_acc_desc('802',g_xmff3_d[l_ac].xmfe002)
           RETURNING g_xmff3_d[l_ac].xmfe002_desc 
      DISPLAY BY NAME g_xmff3_d[l_ac].xmfe002_desc ]]>
</point>
  <point name="show.body4.reference" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_xmff4_d[l_ac].xmff0011
      CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_xmff4_d[l_ac].xmff0011_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_xmff4_d[l_ac].xmff0011_desc

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_xmff4_d[l_ac].xmff0011
      CALL ap_ref_array2(g_ref_fields,"SELECT imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_xmff4_d[l_ac].xmff0011_desc_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_xmff4_d[l_ac].xmff0011_desc_desc
]]>
</point>
  <point name="show.head.reference" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[   CALL s_aooi200_get_slip_desc(g_xmfd_m.xmfddocno)
        RETURNING g_xmfd_m.xmfddocno_desc
   DISPLAY BY NAME g_xmfd_m.xmfddocno_desc

   CALL s_desc_get_person_desc(g_xmfd_m.xmfd001)
        RETURNING g_xmfd_m.xmfd001_desc
   DISPLAY BY NAME g_xmfd_m.xmfd001_desc

   CALL s_desc_get_department_desc(g_xmfd_m.xmfd002)
        RETURNING g_xmfd_m.xmfd002_desc
   DISPLAY BY NAME g_xmfd_m.xmfd002_desc

   CALL s_desc_get_trading_partner_full_desc(g_xmfd_m.xmfd003)
        RETURNING g_xmfd_m.xmfd003_desc
   DISPLAY BY NAME g_xmfd_m.xmfd003_desc

   CALL axmt410_xmfd009_ref(g_xmfd_m.xmfd009)
        RETURNING g_xmfd_m.xmfd009_desc
   DISPLAY BY NAME g_xmfd_m.xmfd009_desc

   CALL s_desc_get_currency_desc(g_xmfd_m.xmfd010)
        RETURNING g_xmfd_m.xmfd010_desc
   DISPLAY BY NAME g_xmfd_m.xmfd010_desc 
   
   CALL s_desc_get_tax_desc1(g_site,g_xmfd_m.xmfd012)
        RETURNING g_xmfd_m.xmfd012_desc
   DISPLAY BY NAME g_xmfd_m.xmfd012_desc

   CALL s_desc_get_acc_desc('238',g_xmfd_m.xmfd015)
        RETURNING g_xmfd_m.xmfd015_desc
   DISPLAY BY NAME g_xmfd_m.xmfd015_desc

   CALL axmt410_xmfd016_ref(g_xmfd_m.xmfd016)
        RETURNING g_xmfd_m.xmfd016_desc
   DISPLAY BY NAME g_xmfd_m.xmfd016_desc

   CALL axmt410_xmfd017_ref(g_xmfd_m.xmfd017)
        RETURNING g_xmfd_m.xmfd017_desc
   DISPLAY BY NAME g_xmfd_m.xmfd017_desc

   CALL axmt410_xmfd018_ref(g_xmfd_m.xmfd018)
        RETURNING g_xmfd_m.xmfd018_desc
   DISPLAY BY NAME g_xmfd_m.xmfd018_desc 
   
   CALL s_desc_get_acc_desc('263',g_xmfd_m.xmfd019)
        RETURNING g_xmfd_m.xmfd019_desc
   DISPLAY BY NAME g_xmfd_m.xmfd019_desc

   CALL s_apmi011_location_ref(g_xmfd_m.xmfd019,g_xmfd_m.xmfd020)
        RETURNING g_xmfd_m.xmfd020_desc
   DISPLAY BY NAME g_xmfd_m.xmfd020_desc

   CALL s_apmi011_location_ref(g_xmfd_m.xmfd019,g_xmfd_m.xmfd021)
        RETURNING g_xmfd_m.xmfd021_desc
   DISPLAY BY NAME g_xmfd_m.xmfd021_desc

   CALL axmt410_xmfd022_ref(g_xmfd_m.xmfd003,g_xmfd_m.xmfd022)
        RETURNING g_xmfd_m.xmfd022_desc,g_xmfd_m.oofb017
   DISPLAY BY NAME g_xmfd_m.xmfd022_desc,g_xmfd_m.oofb017 

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmfd_m.xmfdownid
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_xmfd_m.xmfdownid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmfd_m.xmfdownid_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmfd_m.xmfdowndp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmfd_m.xmfdowndp_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmfd_m.xmfdowndp_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmfd_m.xmfdcrtid
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_xmfd_m.xmfdcrtid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmfd_m.xmfdcrtid_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmfd_m.xmfdcrtdp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmfd_m.xmfdcrtdp_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmfd_m.xmfdcrtdp_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmfd_m.xmfdmodid
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_xmfd_m.xmfdmodid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmfd_m.xmfdmodid_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmfd_m.xmfdcnfid
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_xmfd_m.xmfdcnfid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmfd_m.xmfdcnfid_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmfd_m.xmfdpstid
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_xmfd_m.xmfdpstid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmfd_m.xmfdpstid_desc
]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_refresh_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.default.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action_default" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.before_display" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body2.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body2.before_display" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body2.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body3.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body3.before_display" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body3.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body4.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body4.before_display" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body4.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.bpm_status" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action.filter" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.query" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.output" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify_detail" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.related_document" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.agendum" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.followup" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_browser_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_foreach" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_count" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_prepare" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.open" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.reference" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_headershow.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_browser_refresh.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.head.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfddocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfddocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfddocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfddocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.xmfddocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfd001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfd001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfd002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfd002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfdstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfdstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.xmfdstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfd003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfd003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfd004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfd004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.xmfd004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfd005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfd005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.xmfd005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfd006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfd006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.xmfd006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfd007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfd007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.xmfd007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfd008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfd008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.xmfd008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfd009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfd009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfd010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfd010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfd010_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfd010_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.xmfd010_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfd011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfd011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.xmfd011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfd029" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfd029" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.xmfd029" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfd012" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfd012" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfd013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfd013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.xmfd013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfd014" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfd014" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.xmfd014" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfd015" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfd015" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfd016" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfd016" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfd017" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfd017" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfd018" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfd018" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfd019" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfd019" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfd020" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfd020" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.xmfd020" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfd021" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfd021" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.xmfd021" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfd021_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfd021_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.xmfd021_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfd022" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfd022" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.oofb017" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.oofb017" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.oofb017" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfd023" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfd023" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.xmfd023" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfd024" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfd024" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.xmfd024" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfd025" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfd025" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.xmfd025" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfd026" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfd026" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.xmfd026" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfd027" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfd027" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.xmfd027" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfd028" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfd028" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.xmfd028" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfdownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfdownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfdowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfdowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfdcrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfdcrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfdcrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfdcrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfdcrtdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfdmodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfdmodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfdmoddt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfdcnfid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfdcnfid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfdcnfdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfdpstid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xmfdpstid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xmfdpstdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.body.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.xmffseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.xmffseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.xmffseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.xmff001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.xmff001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.xmff002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.xmff002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.xmff002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.xmff003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.xmff003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.xmff003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.xmff004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.xmff004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.xmff005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.xmff005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.xmff005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.xmff006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.xmff006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.xmff006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.xmff007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.xmff007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.xmff007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.xmff008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.xmff008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.xmff008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.xmff009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.xmff009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.xmff009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.xmff010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.xmff010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.xmff010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page4.xmffseq1" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page4.xmffseq1" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page4.xmffseq1" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page4.xmff0011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page4.xmff0011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page4.xmff0011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page4.xmff0021" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page4.xmff0021" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page4.xmff0021" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page4.xmff0041" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page4.xmff0041" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page4.xmff0041" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page4.xmff0061" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page4.xmff0061" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page4.xmff0061" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page4.xmff0071" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page4.xmff0071" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page4.xmff0071" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page4.xmff011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page4.xmff011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page4.xmff011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page4.xmff012" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page4.xmff012" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page4.xmff012" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page4.xmff013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page4.xmff013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page4.xmff013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.body2.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.xmfgseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page2.xmfgseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page2.xmfgseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.xmfg001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page2.xmfg001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page2.xmfg001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.xmfg002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page2.xmfg002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page2.xmfg002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.xmfg003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page2.xmfg003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page2.xmfg003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.xmfg004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page2.xmfg004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page2.xmfg004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.body3.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page3.xmfeseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page3.xmfeseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page3.xmfeseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page3.xmfe001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page3.xmfe001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page3.xmfe001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page3.xmfe002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page3.xmfe002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page3.xmfe003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page3.xmfe003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page3.xmfe003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page3.xmfe004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page3.xmfe004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page3.xmfe004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page3.xmfe005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page3.xmfe005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page3.xmfe005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.add_cs" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.after_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.cs_ctrl" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.add_cs" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter_parser.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.action_control" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[   CALL cl_set_act_visible("modify,delete,insert,modify_detail",TRUE)
   IF g_xmfd_m.xmfdstus NOT MATCHES "[NDR]" THEN
      CALL cl_set_act_visible("modify,delete,modify_detail",FALSE)
   END IF]]>
</point>
  <point name="fetch.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_show" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.b_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.m_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.a_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.b_fk_update2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.m_fk_update2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.a_fk_update2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.b_fk_update3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.m_fk_update3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.a_fk_update3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.define_sql2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_define_sql2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.define_sql3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_define_sql3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.other_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_set_entry" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.m.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xmfddocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xmfddocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xmfddocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.xmfddocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xmfddocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xmfd001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xmfd001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xmfd002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xmfd002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xmfdstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.xmfdstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xmfdstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xmfd003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xmfd003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xmfd004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xmfd004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xmfd005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xmfd005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xmfd006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.xmfd006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xmfd006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xmfd007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.xmfd007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xmfd007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xmfd008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xmfd008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xmfd009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xmfd009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xmfd010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xmfd010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xmfd011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.xmfd011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xmfd011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xmfd029" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.xmfd029" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xmfd029" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xmfd012" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xmfd012" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xmfd013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.xmfd013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xmfd013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xmfd014" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.xmfd014" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xmfd014" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xmfd015" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xmfd015" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xmfd016" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xmfd016" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xmfd017" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xmfd017" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xmfd018" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xmfd018" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xmfd019" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xmfd019" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xmfd020" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xmfd020" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xmfd021" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xmfd021" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xmfd022" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xmfd022" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xmfd023" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.xmfd023" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xmfd023" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xmfd024" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.xmfd024" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xmfd024" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xmfd025" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.xmfd025" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xmfd025" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xmfd026" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.xmfd026" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xmfd026" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xmfd027" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.xmfd027" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xmfd027" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xmfd028" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.xmfd028" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xmfd028" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.xmfddocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.xmfdstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.xmfd004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.xmfd006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.xmfd007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.xmfd008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.xmfd011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.xmfd029" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.xmfd013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.xmfd014" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.xmfd023" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.xmfd024" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.xmfd025" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.xmfd026" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.xmfd027" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.xmfd028" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_insert" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[               IF g_xmfd_m.xmfd004 <> '0' AND NOT cl_null(g_xmfd_m.xmfd005) THEN
                  CASE g_xmfd_m.xmfd004
                     WHEN '1'    #自axmt400產生相關資料  
                        CALL axmt410_from_axmt400_get_body()
                     WHEN '2'    #自axmt410產生相關資料  
                        CALL axmt410_from_axmt410_get_body()
                     OTHERWISE
                        EXIT CASE
                  END CASE
               END IF
               IF g_xmfd_m.xmfd004 = '0' AND g_xmfd_m.xmfd008 = '2' AND
                  NOT cl_null(g_xmfd_m.xmfd009) THEN    #從報價範本檔產生單身    
                 CALL axmt410_02_new(g_xmfd_m.xmfd009) RETURNING l_xmfc 
                 
                 LET l_cnt = 1
                  FOR l_i = 1 TO l_xmfc.getLength()
                     INITIALIZE l_xmff.* TO NULL
                     LET l_xmff.xmffent = g_enterprise
                     LET l_xmff.xmffsite = g_site
                     LET l_xmff.xmffdocno = g_xmfd_m.xmfddocno
                     LET l_xmff.xmffseq = l_cnt
                     LET l_xmff.xmff001 = l_xmfc[l_i].xmfc0041
                     LET l_xmff.xmff002 = l_xmfc[l_i].xmfc0051
                     LET l_xmff.xmff003 = ''
                     LET l_xmff.xmff004 = l_xmfc[l_i].xmfc0071
                     LET l_xmff.xmff005 = 'N'
                     LET l_xmff.xmff006 = l_xmfc[l_i].xmfc0061
                     LET l_xmff.xmff007 = 0
                     LET l_xmff.xmff008 = 0
                     LET l_xmff.xmff009 = 0
                     LET l_xmff.xmff010 = 0
                     LET l_xmff.xmff011 = 0       #標準成本單價 
                     #取得銷售價格參照表號  
                     LET l_xmaw001 = cl_get_para(g_enterprise,g_site,'S-BAS-0009')
                     SELECT xmaw019 INTO l_xmff.xmff011
                       FROM xmaw_t
                      WHERE xmawent = g_enterprise
                        AND xmaw001 = l_xmaw001                           #銷售價格參照表號   
                        AND xmaw002 = g_xmfd_m.xmfd010                    #幣別   
                        AND xmaw011 = l_xmff.xmff001                      #料件編號   
                        AND NVL(xmaw012,' ') = NVL(l_xmff.xmff002,' ')    #產品特徵  
                        AND NVL(xmaw013,' ') = NVL(l_xmff.xmff004,' ')    #計價單位   
                        AND xmawstus = 'Y'

                     LET l_xmff.xmff012 = 0   #預估毛利率  
                     LET l_xmff.xmff012 = (l_xmff.xmff008 - (l_xmff.xmff011 * l_xmff.xmff006)) / l_xmff.xmff008
                     LET l_xmff.xmff013 = 0   #預估毛利金額  
                     LET l_xmff.xmff013 = l_xmff.xmff008 - (l_xmff.xmff011 * l_xmff.xmff006)
                     LET l_cnt = l_cnt + 1 
                     
                     INSERT INTO xmff_t(xmffent,xmffsite,xmffdocno,xmffseq,
                                        xmff001,xmff002,xmff003,xmff004,xmff005,
                                        xmff006,xmff007,xmff008,xmff009,xmff010,
                                        xmff011,xmff012,xmff013,xmff014)
                                 VALUES(l_xmff.xmffent,l_xmff.xmffsite,l_xmff.xmffdocno,
                                        l_xmff.xmffseq,l_xmff.xmff001,l_xmff.xmff002,
                                        l_xmff.xmff003,l_xmff.xmff004,l_xmff.xmff005,
                                        l_xmff.xmff006,l_xmff.xmff007,l_xmff.xmff008,
                                        l_xmff.xmff009,l_xmff.xmff010,l_xmff.xmff011,
                                        l_xmff.xmff012,l_xmff.xmff013,l_xmff.xmff014)

                  END FOR
               END IF]]>
</point>
  <point name="input.head.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_update" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[               #如果單頭的資料有改變的話 需要重算金額 
               #axmt400_amount() 
               #axmt410_amount() ]]>
</point>
  <point name="input.head.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.d.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.insert.after_set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.xmffseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xmffseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.xmff001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xmff001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xmff002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.xmff003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xmff003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.xmff004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xmff004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.xmff005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xmff005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.xmff006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xmff006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.xmff007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xmff007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.xmff008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.xmff008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xmff008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.xmff009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.xmff009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xmff009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.xmff010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.xmff010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xmff010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.xmffseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.xmff005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.xmff006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.xmff007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.xmff008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.xmff009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.xmff010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.insert.after_set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.before_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.after_set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.after_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.b_a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page3.xmfeseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page3.xmfeseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page3.xmfe001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page3.xmfe001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page3.xmfe001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page3.xmfe002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page3.xmfe002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page3.xmfe003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page3.xmfe003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page3.xmfe003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page3.xmfe004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page3.xmfe004" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[            IF NOT cl_null(g_xmff3_d[l_ac].xmfe004) THEN
               #ming 應該要有_o的新舊值檢查  

               CASE g_xmff3_d[l_ac].xmfe004
                  WHEN '1'
                     CALL s_axmt410_xmfe003_1(g_xmfd_m.xmfddocno,g_xmff3_d[l_ac].xmfe004)
                          RETURNING g_xmff3_d[l_ac].xmfe005
                  WHEN '2'
                     CALL s_axmt410_xmfe003_2(g_xmfd_m.xmfddocno,g_xmff3_d[l_ac].xmfe004)
                          RETURNING g_xmff3_d[l_ac].xmfe005
                  WHEN '3'
                     CALL s_axmt410_xmfe003_3(g_xmfd_m.xmfddocno,g_xmff3_d[l_ac].xmfe004)
                          RETURNING g_xmff3_d[l_ac].xmfe005
                  WHEN '4'
                     CALL s_axmt410_xmfe003_4(g_xmfd_m.xmfddocno,g_xmff3_d[l_ac].xmfe004)
                          RETURNING g_xmff3_d[l_ac].xmfe005
                  WHEN '5'
                     CALL s_axmt410_xmfe003_5(g_xmfd_m.xmfddocno,g_xmff3_d[l_ac].xmfe004)
                          RETURNING g_xmff3_d[l_ac].xmfe005
                  OTHERWISE
                     EXIT CASE
               END CASE
            END IF]]>
</point>
  <point name="input.g.page3.xmfe004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page3.xmfe005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page3.xmfe005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page3.xmfe005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page3.xmfeseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page3.xmfe001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page3.xmfe003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page3.xmfe004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page3.xmfe005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.after_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.after_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body4.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body4.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.more_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.accept" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.follow_pic" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.body2.reference" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.head.b_input" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[   LET g_xmfd_m.xmfd001 = g_user
   LET g_xmfd_m.xmfd002 = g_dept
   LET g_xmfd_m.xmfddocdt = g_today
   LET g_xmfd_m.xmfdcnfid = ''
   LET g_xmfd_m.xmfdcnfdt = '']]>
</point>
  <point name="reproduce.after_reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table2.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table2.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table2.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table3.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table3.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table3.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.before_ask" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.befroe.related_document_remove" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.a_delete" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[      IF NOT s_aooi200_del_docno(g_xmfd_m.xmfddocno,g_xmfd_m.xmfddocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF]]>
</point>
  <point name="delete.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.b_delete2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.m_delete2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.b_delete3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.m_delete3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.lang.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.body.fill_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.fill" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[         LET g_xmff4_d[l_ac].xmffseq1 = g_xmff_d[l_ac].xmffseq
         LET g_xmff4_d[l_ac].xmff0011 = g_xmff_d[l_ac].xmff001
         LET g_xmff4_d[l_ac].xmff0021 = g_xmff_d[l_ac].xmff002
         LET g_xmff4_d[l_ac].xmff0041 = g_xmff_d[l_ac].xmff004
         LET g_xmff4_d[l_ac].xmff0061 = g_xmff_d[l_ac].xmff006
         LET g_xmff4_d[l_ac].xmff0071 = g_xmff_d[l_ac].xmff007

         SELECT xmff011,xmff012,xmff013
           INTO g_xmff4_d[l_ac].xmff011,g_xmff4_d[l_ac].xmff012,
                g_xmff4_d[l_ac].xmff013
           FROM xmff_t
          WHERE xmffent = g_enterprise
            AND xmffdocno = g_xmfd_m.xmfddocno]]>
</point>
  <point name="b_fill.body2.fill_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.body3.fill_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill3.fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.other_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.b_delete2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.m_delete2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.a_delete2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.b_delete3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.m_delete3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.a_delete3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.before_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.before_insert2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.m_insert2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.after_insert2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.before_insert3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.m_insert3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.after_insert3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.before_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.after_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.before_update2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.m_update2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.after_update2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.before_update3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.m_update3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.after_update3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.field_control" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[      CALL cl_set_comp_entry("xmfddocdt",TRUE)]]>
</point>
  <point name="set_no_entry.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.field_control" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[      CALL cl_set_comp_entry("xmfddocdt",FALSE)]]>
</point>
  <point name="set_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.define" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[   DEFINE l_success LIKE type_t.num5]]>
</point>
  <point name="statechange.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.before_menu" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[      CALL cl_set_act_visible("unconfirmed,invalid,confirmed",TRUE)
      CALL cl_set_act_visible("closed",FALSE)
      CALL cl_set_act_visible("signing,withdraw",FALSE)

      CASE g_xmfd_m.xmfdstus
         WHEN 'N'
            CALL cl_set_act_visible("unconfirmed",FALSE)
            #需提交至BPM時 則顯示「提交」功能 並隱藏「確認」功能 
            IF cl_bpm_chk() THEN
               CALL cl_set_act_visible("signing",TRUE)
               CALL cl_set_act_visible("confirmed",FALSE)
            END IF

         #保留修改的功能(如作廢) 隱藏其他應用功能 
         WHEN 'R'
            CALL cl_set_act_visible("confirmed,unconfirmed",FALSE)

         WHEN 'D'
            CALL cl_set_act_visible("confirmed,unconfirmed",FALSE)

         WHEN 'X'
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed",FALSE)
            RETURN

         WHEN 'Y'
            CALL cl_set_act_visible("invalid,confirmed",TRUE)

         #送簽中只能顯示抽單;其餘應用功能皆隱藏 
         WHEN 'W'
            CALL cl_set_act_visible("withdraw",TRUE)
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed",FALSE)

         #已核准只能顯示確認;其於應用功能皆隱藏 
         WHEN 'A'
            CALL cl_set_act_visible("confirmed",TRUE)
            CALL cl_set_act_visible("unconfirmed,invalid",FALSE)
      END CASE]]>
</point>
  <point name="statechange.unconfirmed" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.invalid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.confirmed" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.approved" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.withdraw" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.rejection" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.signing" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.more_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.b_update" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[   CALL s_transaction_begin()
   IF lc_state = 'Y' THEN
      CALL s_axmt410_conf_chk(g_xmfd_m.xmfddocno) RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      IF NOT cl_ask_confirm('aim-00108') THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF

      CALL s_axmt410_conf_upd(g_xmfd_m.xmfddocno) RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         RETURN
      ELSE
         CALL s_transaction_end('Y','0')
      END IF
   END IF 
   
   IF lc_state = 'N' THEN
      CALL s_axmt410_unconf_chk(g_xmfd_m.xmfddocno) RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      IF NOT cl_ask_confirm('aim-00110') THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF

      CALL s_axmt410_unconf_upd(g_xmfd_m.xmfddocno) RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         RETURN
      ELSE
         CALL s_transaction_end('Y','0')
      END IF
   END IF 
   
   IF lc_state = 'X' THEN
      CALL s_axmt410_invalid_chk(g_xmfd_m.xmfddocno) RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      IF NOT cl_ask_confirm('aim-00109') THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF

      CALL s_axmt410_invalid_upd(g_xmfd_m.xmfddocno) RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         RETURN
      ELSE
         CALL s_transaction_end('Y','0')
      END IF
   END IF 
   
   ]]>
</point>
  <point name="statechange.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="idx_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="idx_chk.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.after_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.before_chk" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.other_chk" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.after_chk" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="send.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="send.before_send" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[   IF NOT s_axmt410_conf_chk(g_xmfd_m.xmfddocno) THEN
      CLOSE axmt410_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF]]>
</point>
  <point name="send.after_send" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="draw.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <section id="axmt410.b_fill" ver="7" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION axmt410_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_xmff_d.clear()    #g_xmff_d 單頭及單身 
   CALL g_xmff2_d.clear()
   CALL g_xmff3_d.clear()
   CALL g_xmff4_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF axmt410_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE xmffseq,xmff001,xmff002,xmff003,xmff004,xmff005,xmff006,xmff007,xmff008, 
          xmff009,xmff010,xmff011,xmff012,xmff013 ,t1.imaal003 ,t2.imaal004 ,t3.oocal003 FROM xmff_t", 
             
                  " INNER JOIN xmfd_t ON xmfddocno = xmffdocno ",
 
                  #"",
                  
                  "",
                                 " LEFT JOIN imaal_t t1 ON t1.imaalent='"||g_enterprise||"' AND t1.imaal001=xmff001 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t2 ON t2.imaalent='"||g_enterprise||"' AND t2.imaal001=xmff001 AND t2.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t3 ON t3.oocalent='"||g_enterprise||"' AND t3.oocal001=xmff004 AND t3.oocal002='"||g_dlang||"' ",
 
                  " WHERE xmffent=? AND xmffdocno=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY xmff_t.xmffseq"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE axmt410_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR axmt410_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_xmfd_m.xmfddocno
                                               
      FOREACH b_fill_cs INTO g_xmff_d[l_ac].xmffseq,g_xmff_d[l_ac].xmff001,g_xmff_d[l_ac].xmff002,g_xmff_d[l_ac].xmff003, 
          g_xmff_d[l_ac].xmff004,g_xmff_d[l_ac].xmff005,g_xmff_d[l_ac].xmff006,g_xmff_d[l_ac].xmff007, 
          g_xmff_d[l_ac].xmff008,g_xmff_d[l_ac].xmff009,g_xmff_d[l_ac].xmff010,g_xmff4_d[l_ac].xmff011, 
          g_xmff4_d[l_ac].xmff012,g_xmff4_d[l_ac].xmff013,g_xmff_d[l_ac].xmff001_desc,g_xmff_d[l_ac].xmff001_desc_desc, 
          g_xmff_d[l_ac].xmff004_desc
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
   #判斷是否填充
   IF axmt410_fill_chk(2) THEN
      LET g_sql = "SELECT  UNIQUE xmfgseq,xmfg001,xmfg002,xmfg003,xmfg004  FROM xmfg_t",   
                  " INNER JOIN xmfd_t ON xmfddocno = xmfgdocno ",
 
                  "",
                  
                  
                  " WHERE xmfgent=? AND xmfgdocno=?"   
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body2.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table2) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY xmfg_t.xmfgseq,xmfg_t.xmfg001,xmfg_t.xmfg002"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql2"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE axmt410_pb2 FROM g_sql
      DECLARE b_fill_cs2 CURSOR FOR axmt410_pb2
      
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_xmfd_m.xmfddocno
                                               
      FOREACH b_fill_cs2 INTO g_xmff2_d[l_ac].xmfgseq,g_xmff2_d[l_ac].xmfg001,g_xmff2_d[l_ac].xmfg002, 
          g_xmff2_d[l_ac].xmfg003,g_xmff2_d[l_ac].xmfg004
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 0 )
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF axmt410_fill_chk(3) THEN
      LET g_sql = "SELECT  UNIQUE xmfeseq,xmfe001,xmfe002,xmfe003,xmfe004,xmfe005 ,t4.oocql004 FROM xmfe_t", 
             
                  " INNER JOIN xmfd_t ON xmfddocno = xmfedocno ",
 
                  "",
                  
                                 " LEFT JOIN oocql_t t4 ON t4.oocqlent='"||g_enterprise||"' AND t4.oocql001='802' AND t4.oocql002=xmfe002 AND t4.oocql003='"||g_dlang||"' ",
 
                  " WHERE xmfeent=? AND xmfedocno=?"   
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body3.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table3) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY xmfe_t.xmfeseq"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql3"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE axmt410_pb3 FROM g_sql
      DECLARE b_fill_cs3 CURSOR FOR axmt410_pb3
      
      LET l_ac = 1
      
      OPEN b_fill_cs3 USING g_enterprise,g_xmfd_m.xmfddocno
                                               
      FOREACH b_fill_cs3 INTO g_xmff3_d[l_ac].xmfeseq,g_xmff3_d[l_ac].xmfe001,g_xmff3_d[l_ac].xmfe002, 
          g_xmff3_d[l_ac].xmfe003,g_xmff3_d[l_ac].xmfe004,g_xmff3_d[l_ac].xmfe005,g_xmff3_d[l_ac].xmfe002_desc 

         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill3.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 0 )
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_xmff_d.deleteElement(g_xmff_d.getLength())
   CALL g_xmff2_d.deleteElement(g_xmff2_d.getLength())
   CALL g_xmff3_d.deleteElement(g_xmff3_d.getLength())
   CALL g_xmff4_d.deleteElement(g_xmff4_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE axmt410_pb
   FREE axmt410_pb2
 
   FREE axmt410_pb3
 
 
   
END FUNCTION
]]>
</section>
  <section id="axmt410.b_fill2" ver="2" status="" src="s">
<![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION axmt410_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL axmt410_detail_show()
   
END FUNCTION
]]>
</section>
  <section id="axmt410.browser_fill" ver="8" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION axmt410_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_xmfd_m.* TO NULL
   CALL g_xmff_d.clear()        
   CALL g_xmff2_d.clear() 
   CALL g_xmff3_d.clear() 
   CALL g_xmff4_d.clear() 
 
   CALL g_browser.clear()
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "xmfddocno"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE xmfddocno ",
                      " FROM xmfd_t ",
                      " ",
                      " LEFT JOIN xmff_t ON xmffent = xmfdent AND xmfddocno = xmffdocno ",
                      " LEFT JOIN xmfg_t ON xmfgent = xmfdent AND xmfddocno = xmfgdocno", 
 
                      " LEFT JOIN xmfe_t ON xmfeent = xmfdent AND xmfddocno = xmfedocno", 
 
 
 
                      " ", 
                      " ", 
                      " WHERE xmfdent = '" ||g_enterprise|| "' AND xmffent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("xmfd_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE xmfddocno ",
                      " FROM xmfd_t ", 
                      "  ",
                      "  ",
                      " WHERE xmfdent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("xmfd_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照xmfddocno,xmfddocdt,xmfd001,'',xmfd002,'' Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT xmfdstus,xmfddocno,xmfddocdt,xmfd001,'',xmfd002,'',t1.ooag011 ,t2.ooefl003 ", 

               " FROM xmfd_t ",
               "  ",
               "  LEFT JOIN xmff_t ON xmffent = xmfdent AND xmfddocno = xmffdocno ",
               "  LEFT JOIN xmfg_t ON xmfgent = xmfdent AND xmfddocno = xmfgdocno",
 
               "  LEFT JOIN xmfe_t ON xmfeent = xmfdent AND xmfddocno = xmfedocno",
 
 
 
               "  ",
               "  ",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent='"||g_enterprise||"' AND t1.ooag001=xmfd001  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=xmfd002 AND t2.ooefl002='"||g_lang||"' ",
 
               " WHERE xmfdent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("xmfd_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_xmfddocno,g_browser[g_cnt].b_xmfddocdt, 
       g_browser[g_cnt].b_xmfd001,g_browser[g_cnt].b_xmfd001_desc,g_browser[g_cnt].b_xmfd002,g_browser[g_cnt].b_xmfd002_desc, 
       g_browser[g_cnt].b_xmfd001_desc,g_browser[g_cnt].b_xmfd002_desc
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
</section>
  <section id="axmt410.browser_search" ver="1" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION axmt410_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY xmfddocno"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL axmt410_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="axmt410.construct" ver="7" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION axmt410_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_xmfd_m.* TO NULL
   CALL g_xmff_d.clear()        
   CALL g_xmff2_d.clear() 
   CALL g_xmff3_d.clear() 
   CALL g_xmff4_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
   INITIALIZE g_wc2_table3 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON xmfddocno,xmfddocdt,xmfd001,xmfd002,xmfdstus,xmfd003,xmfd004,xmfd005, 
          xmfd006,xmfd007,xmfd008,xmfd009,xmfd010,xmfd010_desc,xmfd011,xmfd029,xmfd012,xmfd013,xmfd014, 
          xmfd015,xmfd016,xmfd017,xmfd018,xmfd019,xmfd020,xmfd021,xmfd021_desc,xmfd022,oofb017,xmfd023, 
          xmfd024,xmfd025,xmfd026,xmfd027,xmfd028,xmfdownid,xmfdowndp,xmfdcrtid,xmfdcrtdp,xmfdcrtdt, 
          xmfdmodid,xmfdmoddt,xmfdcnfid,xmfdcnfdt,xmfdpstid,xmfdpstdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<xmfdcrtdt>>----
         AFTER FIELD xmfdcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmfdmoddt>>----
         AFTER FIELD xmfdmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmfdcnfdt>>----
         AFTER FIELD xmfdcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmfdpstdt>>----
         AFTER FIELD xmfdpstdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.xmfddocno
         ON ACTION controlp INFIELD xmfddocno
            #add-point:ON ACTION controlp INFIELD xmfddocno
            {<point name="construct.c.xmfddocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfddocno
            #add-point:BEFORE FIELD xmfddocno
            {<point name="construct.b.xmfddocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfddocno
            
            #add-point:AFTER FIELD xmfddocno
            {<point name="construct.a.xmfddocno" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfddocdt
            #add-point:BEFORE FIELD xmfddocdt
            {<point name="construct.b.xmfddocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfddocdt
            
            #add-point:AFTER FIELD xmfddocdt
            {<point name="construct.a.xmfddocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmfddocdt
         ON ACTION controlp INFIELD xmfddocdt
            #add-point:ON ACTION controlp INFIELD xmfddocdt
            {<point name="construct.c.xmfddocdt" />}
            #END add-point
 
         #Ctrlp:construct.c.xmfd001
         ON ACTION controlp INFIELD xmfd001
            #add-point:ON ACTION controlp INFIELD xmfd001
            {<point name="construct.c.xmfd001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd001
            #add-point:BEFORE FIELD xmfd001
            {<point name="construct.b.xmfd001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd001
            
            #add-point:AFTER FIELD xmfd001
            {<point name="construct.a.xmfd001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmfd002
         ON ACTION controlp INFIELD xmfd002
            #add-point:ON ACTION controlp INFIELD xmfd002
            {<point name="construct.c.xmfd002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd002
            #add-point:BEFORE FIELD xmfd002
            {<point name="construct.b.xmfd002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd002
            
            #add-point:AFTER FIELD xmfd002
            {<point name="construct.a.xmfd002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfdstus
            #add-point:BEFORE FIELD xmfdstus
            {<point name="construct.b.xmfdstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfdstus
            
            #add-point:AFTER FIELD xmfdstus
            {<point name="construct.a.xmfdstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmfdstus
         ON ACTION controlp INFIELD xmfdstus
            #add-point:ON ACTION controlp INFIELD xmfdstus
            {<point name="construct.c.xmfdstus" />}
            #END add-point
 
         #Ctrlp:construct.c.xmfd003
         ON ACTION controlp INFIELD xmfd003
            #add-point:ON ACTION controlp INFIELD xmfd003
            {<point name="construct.c.xmfd003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd003
            #add-point:BEFORE FIELD xmfd003
            {<point name="construct.b.xmfd003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd003
            
            #add-point:AFTER FIELD xmfd003
            {<point name="construct.a.xmfd003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd004
            #add-point:BEFORE FIELD xmfd004
            {<point name="construct.b.xmfd004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd004
            
            #add-point:AFTER FIELD xmfd004
            {<point name="construct.a.xmfd004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmfd004
         ON ACTION controlp INFIELD xmfd004
            #add-point:ON ACTION controlp INFIELD xmfd004
            {<point name="construct.c.xmfd004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd005
            #add-point:BEFORE FIELD xmfd005
            {<point name="construct.b.xmfd005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd005
            
            #add-point:AFTER FIELD xmfd005
            {<point name="construct.a.xmfd005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmfd005
         ON ACTION controlp INFIELD xmfd005
            #add-point:ON ACTION controlp INFIELD xmfd005
            {<point name="construct.c.xmfd005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd006
            #add-point:BEFORE FIELD xmfd006
            {<point name="construct.b.xmfd006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd006
            
            #add-point:AFTER FIELD xmfd006
            {<point name="construct.a.xmfd006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmfd006
         ON ACTION controlp INFIELD xmfd006
            #add-point:ON ACTION controlp INFIELD xmfd006
            {<point name="construct.c.xmfd006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd007
            #add-point:BEFORE FIELD xmfd007
            {<point name="construct.b.xmfd007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd007
            
            #add-point:AFTER FIELD xmfd007
            {<point name="construct.a.xmfd007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmfd007
         ON ACTION controlp INFIELD xmfd007
            #add-point:ON ACTION controlp INFIELD xmfd007
            {<point name="construct.c.xmfd007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd008
            #add-point:BEFORE FIELD xmfd008
            {<point name="construct.b.xmfd008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd008
            
            #add-point:AFTER FIELD xmfd008
            {<point name="construct.a.xmfd008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmfd008
         ON ACTION controlp INFIELD xmfd008
            #add-point:ON ACTION controlp INFIELD xmfd008
            {<point name="construct.c.xmfd008" />}
            #END add-point
 
         #Ctrlp:construct.c.xmfd009
         ON ACTION controlp INFIELD xmfd009
            #add-point:ON ACTION controlp INFIELD xmfd009
            {<point name="construct.c.xmfd009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd009
            #add-point:BEFORE FIELD xmfd009
            {<point name="construct.b.xmfd009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd009
            
            #add-point:AFTER FIELD xmfd009
            {<point name="construct.a.xmfd009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmfd010
         ON ACTION controlp INFIELD xmfd010
            #add-point:ON ACTION controlp INFIELD xmfd010
            {<point name="construct.c.xmfd010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd010
            #add-point:BEFORE FIELD xmfd010
            {<point name="construct.b.xmfd010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd010
            
            #add-point:AFTER FIELD xmfd010
            {<point name="construct.a.xmfd010" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd010_desc
            #add-point:BEFORE FIELD xmfd010_desc
            {<point name="construct.b.xmfd010_desc" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd010_desc
            
            #add-point:AFTER FIELD xmfd010_desc
            {<point name="construct.a.xmfd010_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmfd010_desc
         ON ACTION controlp INFIELD xmfd010_desc
            #add-point:ON ACTION controlp INFIELD xmfd010_desc
            {<point name="construct.c.xmfd010_desc" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd011
            #add-point:BEFORE FIELD xmfd011
            {<point name="construct.b.xmfd011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd011
            
            #add-point:AFTER FIELD xmfd011
            {<point name="construct.a.xmfd011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmfd011
         ON ACTION controlp INFIELD xmfd011
            #add-point:ON ACTION controlp INFIELD xmfd011
            {<point name="construct.c.xmfd011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd029
            #add-point:BEFORE FIELD xmfd029
            {<point name="construct.b.xmfd029" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd029
            
            #add-point:AFTER FIELD xmfd029
            {<point name="construct.a.xmfd029" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmfd029
         ON ACTION controlp INFIELD xmfd029
            #add-point:ON ACTION controlp INFIELD xmfd029
            {<point name="construct.c.xmfd029" />}
            #END add-point
 
         #Ctrlp:construct.c.xmfd012
         ON ACTION controlp INFIELD xmfd012
            #add-point:ON ACTION controlp INFIELD xmfd012
            {<point name="construct.c.xmfd012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd012
            #add-point:BEFORE FIELD xmfd012
            {<point name="construct.b.xmfd012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd012
            
            #add-point:AFTER FIELD xmfd012
            {<point name="construct.a.xmfd012" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd013
            #add-point:BEFORE FIELD xmfd013
            {<point name="construct.b.xmfd013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd013
            
            #add-point:AFTER FIELD xmfd013
            {<point name="construct.a.xmfd013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmfd013
         ON ACTION controlp INFIELD xmfd013
            #add-point:ON ACTION controlp INFIELD xmfd013
            {<point name="construct.c.xmfd013" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd014
            #add-point:BEFORE FIELD xmfd014
            {<point name="construct.b.xmfd014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd014
            
            #add-point:AFTER FIELD xmfd014
            {<point name="construct.a.xmfd014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmfd014
         ON ACTION controlp INFIELD xmfd014
            #add-point:ON ACTION controlp INFIELD xmfd014
            {<point name="construct.c.xmfd014" />}
            #END add-point
 
         #Ctrlp:construct.c.xmfd015
         ON ACTION controlp INFIELD xmfd015
            #add-point:ON ACTION controlp INFIELD xmfd015
            {<point name="construct.c.xmfd015" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd015
            #add-point:BEFORE FIELD xmfd015
            {<point name="construct.b.xmfd015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd015
            
            #add-point:AFTER FIELD xmfd015
            {<point name="construct.a.xmfd015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmfd016
         ON ACTION controlp INFIELD xmfd016
            #add-point:ON ACTION controlp INFIELD xmfd016
            {<point name="construct.c.xmfd016" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd016
            #add-point:BEFORE FIELD xmfd016
            {<point name="construct.b.xmfd016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd016
            
            #add-point:AFTER FIELD xmfd016
            {<point name="construct.a.xmfd016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmfd017
         ON ACTION controlp INFIELD xmfd017
            #add-point:ON ACTION controlp INFIELD xmfd017
            {<point name="construct.c.xmfd017" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd017
            #add-point:BEFORE FIELD xmfd017
            {<point name="construct.b.xmfd017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd017
            
            #add-point:AFTER FIELD xmfd017
            {<point name="construct.a.xmfd017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmfd018
         ON ACTION controlp INFIELD xmfd018
            #add-point:ON ACTION controlp INFIELD xmfd018
            {<point name="construct.c.xmfd018" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd018
            #add-point:BEFORE FIELD xmfd018
            {<point name="construct.b.xmfd018" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd018
            
            #add-point:AFTER FIELD xmfd018
            {<point name="construct.a.xmfd018" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmfd019
         ON ACTION controlp INFIELD xmfd019
            #add-point:ON ACTION controlp INFIELD xmfd019
            {<point name="construct.c.xmfd019" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd019
            #add-point:BEFORE FIELD xmfd019
            {<point name="construct.b.xmfd019" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd019
            
            #add-point:AFTER FIELD xmfd019
            {<point name="construct.a.xmfd019" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd020
            #add-point:BEFORE FIELD xmfd020
            {<point name="construct.b.xmfd020" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd020
            
            #add-point:AFTER FIELD xmfd020
            {<point name="construct.a.xmfd020" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmfd020
         ON ACTION controlp INFIELD xmfd020
            #add-point:ON ACTION controlp INFIELD xmfd020
            {<point name="construct.c.xmfd020" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd021
            #add-point:BEFORE FIELD xmfd021
            {<point name="construct.b.xmfd021" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd021
            
            #add-point:AFTER FIELD xmfd021
            {<point name="construct.a.xmfd021" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmfd021
         ON ACTION controlp INFIELD xmfd021
            #add-point:ON ACTION controlp INFIELD xmfd021
            {<point name="construct.c.xmfd021" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd021_desc
            #add-point:BEFORE FIELD xmfd021_desc
            {<point name="construct.b.xmfd021_desc" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd021_desc
            
            #add-point:AFTER FIELD xmfd021_desc
            {<point name="construct.a.xmfd021_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmfd021_desc
         ON ACTION controlp INFIELD xmfd021_desc
            #add-point:ON ACTION controlp INFIELD xmfd021_desc
            {<point name="construct.c.xmfd021_desc" />}
            #END add-point
 
         #Ctrlp:construct.c.xmfd022
         ON ACTION controlp INFIELD xmfd022
            #add-point:ON ACTION controlp INFIELD xmfd022
            {<point name="construct.c.xmfd022" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd022
            #add-point:BEFORE FIELD xmfd022
            {<point name="construct.b.xmfd022" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd022
            
            #add-point:AFTER FIELD xmfd022
            {<point name="construct.a.xmfd022" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD oofb017
            #add-point:BEFORE FIELD oofb017
            {<point name="construct.b.oofb017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oofb017
            
            #add-point:AFTER FIELD oofb017
            {<point name="construct.a.oofb017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.oofb017
         ON ACTION controlp INFIELD oofb017
            #add-point:ON ACTION controlp INFIELD oofb017
            {<point name="construct.c.oofb017" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd023
            #add-point:BEFORE FIELD xmfd023
            {<point name="construct.b.xmfd023" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd023
            
            #add-point:AFTER FIELD xmfd023
            {<point name="construct.a.xmfd023" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmfd023
         ON ACTION controlp INFIELD xmfd023
            #add-point:ON ACTION controlp INFIELD xmfd023
            {<point name="construct.c.xmfd023" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd024
            #add-point:BEFORE FIELD xmfd024
            {<point name="construct.b.xmfd024" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd024
            
            #add-point:AFTER FIELD xmfd024
            {<point name="construct.a.xmfd024" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmfd024
         ON ACTION controlp INFIELD xmfd024
            #add-point:ON ACTION controlp INFIELD xmfd024
            {<point name="construct.c.xmfd024" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd025
            #add-point:BEFORE FIELD xmfd025
            {<point name="construct.b.xmfd025" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd025
            
            #add-point:AFTER FIELD xmfd025
            {<point name="construct.a.xmfd025" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmfd025
         ON ACTION controlp INFIELD xmfd025
            #add-point:ON ACTION controlp INFIELD xmfd025
            {<point name="construct.c.xmfd025" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd026
            #add-point:BEFORE FIELD xmfd026
            {<point name="construct.b.xmfd026" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd026
            
            #add-point:AFTER FIELD xmfd026
            {<point name="construct.a.xmfd026" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmfd026
         ON ACTION controlp INFIELD xmfd026
            #add-point:ON ACTION controlp INFIELD xmfd026
            {<point name="construct.c.xmfd026" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd027
            #add-point:BEFORE FIELD xmfd027
            {<point name="construct.b.xmfd027" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd027
            
            #add-point:AFTER FIELD xmfd027
            {<point name="construct.a.xmfd027" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmfd027
         ON ACTION controlp INFIELD xmfd027
            #add-point:ON ACTION controlp INFIELD xmfd027
            {<point name="construct.c.xmfd027" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd028
            #add-point:BEFORE FIELD xmfd028
            {<point name="construct.b.xmfd028" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd028
            
            #add-point:AFTER FIELD xmfd028
            {<point name="construct.a.xmfd028" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmfd028
         ON ACTION controlp INFIELD xmfd028
            #add-point:ON ACTION controlp INFIELD xmfd028
            {<point name="construct.c.xmfd028" />}
            #END add-point
 
         #Ctrlp:construct.c.xmfdownid
         ON ACTION controlp INFIELD xmfdownid
            #add-point:ON ACTION controlp INFIELD xmfdownid
            {<point name="construct.c.xmfdownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfdownid
            #add-point:BEFORE FIELD xmfdownid
            {<point name="construct.b.xmfdownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfdownid
            
            #add-point:AFTER FIELD xmfdownid
            {<point name="construct.a.xmfdownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmfdowndp
         ON ACTION controlp INFIELD xmfdowndp
            #add-point:ON ACTION controlp INFIELD xmfdowndp
            {<point name="construct.c.xmfdowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfdowndp
            #add-point:BEFORE FIELD xmfdowndp
            {<point name="construct.b.xmfdowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfdowndp
            
            #add-point:AFTER FIELD xmfdowndp
            {<point name="construct.a.xmfdowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmfdcrtid
         ON ACTION controlp INFIELD xmfdcrtid
            #add-point:ON ACTION controlp INFIELD xmfdcrtid
            {<point name="construct.c.xmfdcrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfdcrtid
            #add-point:BEFORE FIELD xmfdcrtid
            {<point name="construct.b.xmfdcrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfdcrtid
            
            #add-point:AFTER FIELD xmfdcrtid
            {<point name="construct.a.xmfdcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmfdcrtdp
         ON ACTION controlp INFIELD xmfdcrtdp
            #add-point:ON ACTION controlp INFIELD xmfdcrtdp
            {<point name="construct.c.xmfdcrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfdcrtdp
            #add-point:BEFORE FIELD xmfdcrtdp
            {<point name="construct.b.xmfdcrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfdcrtdp
            
            #add-point:AFTER FIELD xmfdcrtdp
            {<point name="construct.a.xmfdcrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfdcrtdt
            #add-point:BEFORE FIELD xmfdcrtdt
            {<point name="construct.b.xmfdcrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.xmfdmodid
         ON ACTION controlp INFIELD xmfdmodid
            #add-point:ON ACTION controlp INFIELD xmfdmodid
            {<point name="construct.c.xmfdmodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfdmodid
            #add-point:BEFORE FIELD xmfdmodid
            {<point name="construct.b.xmfdmodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfdmodid
            
            #add-point:AFTER FIELD xmfdmodid
            {<point name="construct.a.xmfdmodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfdmoddt
            #add-point:BEFORE FIELD xmfdmoddt
            {<point name="construct.b.xmfdmoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.xmfdcnfid
         ON ACTION controlp INFIELD xmfdcnfid
            #add-point:ON ACTION controlp INFIELD xmfdcnfid
            {<point name="construct.c.xmfdcnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfdcnfid
            #add-point:BEFORE FIELD xmfdcnfid
            {<point name="construct.b.xmfdcnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfdcnfid
            
            #add-point:AFTER FIELD xmfdcnfid
            {<point name="construct.a.xmfdcnfid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfdcnfdt
            #add-point:BEFORE FIELD xmfdcnfdt
            {<point name="construct.b.xmfdcnfdt" />}
            #END add-point
 
         #Ctrlp:construct.c.xmfdpstid
         ON ACTION controlp INFIELD xmfdpstid
            #add-point:ON ACTION controlp INFIELD xmfdpstid
            {<point name="construct.c.xmfdpstid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfdpstid
            #add-point:BEFORE FIELD xmfdpstid
            {<point name="construct.b.xmfdpstid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfdpstid
            
            #add-point:AFTER FIELD xmfdpstid
            {<point name="construct.a.xmfdpstid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfdpstdt
            #add-point:BEFORE FIELD xmfdpstdt
            {<point name="construct.b.xmfdpstdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON xmffseq,xmff001,xmff002,xmff003,xmff004,xmff005,xmff006,xmff007,xmff008, 
          xmff009,xmff010,xmffseq1,xmff0011,xmff0021,xmff0041,xmff0061,xmff0071,xmff011,xmff012,xmff013 

           FROM s_detail1[1].xmffseq,s_detail1[1].xmff001,s_detail1[1].xmff002,s_detail1[1].xmff003, 
               s_detail1[1].xmff004,s_detail1[1].xmff005,s_detail1[1].xmff006,s_detail1[1].xmff007,s_detail1[1].xmff008, 
               s_detail1[1].xmff009,s_detail1[1].xmff010,s_detail4[1].xmffseq1,s_detail4[1].xmff0011, 
               s_detail4[1].xmff0021,s_detail4[1].xmff0041,s_detail4[1].xmff0061,s_detail4[1].xmff0071, 
               s_detail4[1].xmff011,s_detail4[1].xmff012,s_detail4[1].xmff013
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #此段落由子樣板a01產生
         BEFORE FIELD xmffseq
            #add-point:BEFORE FIELD xmffseq
            {<point name="construct.b.page1.xmffseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmffseq
            
            #add-point:AFTER FIELD xmffseq
            {<point name="construct.a.page1.xmffseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmffseq
         ON ACTION controlp INFIELD xmffseq
            #add-point:ON ACTION controlp INFIELD xmffseq
            {<point name="construct.c.page1.xmffseq" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xmff001
         ON ACTION controlp INFIELD xmff001
            #add-point:ON ACTION controlp INFIELD xmff001
            {<point name="construct.c.page1.xmff001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmff001
            #add-point:BEFORE FIELD xmff001
            {<point name="construct.b.page1.xmff001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmff001
            
            #add-point:AFTER FIELD xmff001
            {<point name="construct.a.page1.xmff001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmff002
            #add-point:BEFORE FIELD xmff002
            {<point name="construct.b.page1.xmff002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmff002
            
            #add-point:AFTER FIELD xmff002
            {<point name="construct.a.page1.xmff002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmff002
         ON ACTION controlp INFIELD xmff002
            #add-point:ON ACTION controlp INFIELD xmff002
            {<point name="construct.c.page1.xmff002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmff003
            #add-point:BEFORE FIELD xmff003
            {<point name="construct.b.page1.xmff003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmff003
            
            #add-point:AFTER FIELD xmff003
            {<point name="construct.a.page1.xmff003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmff003
         ON ACTION controlp INFIELD xmff003
            #add-point:ON ACTION controlp INFIELD xmff003
            {<point name="construct.c.page1.xmff003" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xmff004
         ON ACTION controlp INFIELD xmff004
            #add-point:ON ACTION controlp INFIELD xmff004
            {<point name="construct.c.page1.xmff004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmff004
            #add-point:BEFORE FIELD xmff004
            {<point name="construct.b.page1.xmff004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmff004
            
            #add-point:AFTER FIELD xmff004
            {<point name="construct.a.page1.xmff004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmff005
            #add-point:BEFORE FIELD xmff005
            {<point name="construct.b.page1.xmff005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmff005
            
            #add-point:AFTER FIELD xmff005
            {<point name="construct.a.page1.xmff005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmff005
         ON ACTION controlp INFIELD xmff005
            #add-point:ON ACTION controlp INFIELD xmff005
            {<point name="construct.c.page1.xmff005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmff006
            #add-point:BEFORE FIELD xmff006
            {<point name="construct.b.page1.xmff006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmff006
            
            #add-point:AFTER FIELD xmff006
            {<point name="construct.a.page1.xmff006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmff006
         ON ACTION controlp INFIELD xmff006
            #add-point:ON ACTION controlp INFIELD xmff006
            {<point name="construct.c.page1.xmff006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmff007
            #add-point:BEFORE FIELD xmff007
            {<point name="construct.b.page1.xmff007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmff007
            
            #add-point:AFTER FIELD xmff007
            {<point name="construct.a.page1.xmff007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmff007
         ON ACTION controlp INFIELD xmff007
            #add-point:ON ACTION controlp INFIELD xmff007
            {<point name="construct.c.page1.xmff007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmff008
            #add-point:BEFORE FIELD xmff008
            {<point name="construct.b.page1.xmff008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmff008
            
            #add-point:AFTER FIELD xmff008
            {<point name="construct.a.page1.xmff008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmff008
         ON ACTION controlp INFIELD xmff008
            #add-point:ON ACTION controlp INFIELD xmff008
            {<point name="construct.c.page1.xmff008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmff009
            #add-point:BEFORE FIELD xmff009
            {<point name="construct.b.page1.xmff009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmff009
            
            #add-point:AFTER FIELD xmff009
            {<point name="construct.a.page1.xmff009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmff009
         ON ACTION controlp INFIELD xmff009
            #add-point:ON ACTION controlp INFIELD xmff009
            {<point name="construct.c.page1.xmff009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmff010
            #add-point:BEFORE FIELD xmff010
            {<point name="construct.b.page1.xmff010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmff010
            
            #add-point:AFTER FIELD xmff010
            {<point name="construct.a.page1.xmff010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmff010
         ON ACTION controlp INFIELD xmff010
            #add-point:ON ACTION controlp INFIELD xmff010
            {<point name="construct.c.page1.xmff010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmffseq1
            #add-point:BEFORE FIELD xmffseq1
            {<point name="construct.b.page4.xmffseq1" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmffseq1
            
            #add-point:AFTER FIELD xmffseq1
            {<point name="construct.a.page4.xmffseq1" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.xmffseq1
         ON ACTION controlp INFIELD xmffseq1
            #add-point:ON ACTION controlp INFIELD xmffseq1
            {<point name="construct.c.page4.xmffseq1" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmff0011
            #add-point:BEFORE FIELD xmff0011
            {<point name="construct.b.page4.xmff0011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmff0011
            
            #add-point:AFTER FIELD xmff0011
            {<point name="construct.a.page4.xmff0011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.xmff0011
         ON ACTION controlp INFIELD xmff0011
            #add-point:ON ACTION controlp INFIELD xmff0011
            {<point name="construct.c.page4.xmff0011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmff0021
            #add-point:BEFORE FIELD xmff0021
            {<point name="construct.b.page4.xmff0021" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmff0021
            
            #add-point:AFTER FIELD xmff0021
            {<point name="construct.a.page4.xmff0021" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.xmff0021
         ON ACTION controlp INFIELD xmff0021
            #add-point:ON ACTION controlp INFIELD xmff0021
            {<point name="construct.c.page4.xmff0021" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmff0041
            #add-point:BEFORE FIELD xmff0041
            {<point name="construct.b.page4.xmff0041" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmff0041
            
            #add-point:AFTER FIELD xmff0041
            {<point name="construct.a.page4.xmff0041" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.xmff0041
         ON ACTION controlp INFIELD xmff0041
            #add-point:ON ACTION controlp INFIELD xmff0041
            {<point name="construct.c.page4.xmff0041" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmff0061
            #add-point:BEFORE FIELD xmff0061
            {<point name="construct.b.page4.xmff0061" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmff0061
            
            #add-point:AFTER FIELD xmff0061
            {<point name="construct.a.page4.xmff0061" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.xmff0061
         ON ACTION controlp INFIELD xmff0061
            #add-point:ON ACTION controlp INFIELD xmff0061
            {<point name="construct.c.page4.xmff0061" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmff0071
            #add-point:BEFORE FIELD xmff0071
            {<point name="construct.b.page4.xmff0071" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmff0071
            
            #add-point:AFTER FIELD xmff0071
            {<point name="construct.a.page4.xmff0071" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.xmff0071
         ON ACTION controlp INFIELD xmff0071
            #add-point:ON ACTION controlp INFIELD xmff0071
            {<point name="construct.c.page4.xmff0071" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmff011
            #add-point:BEFORE FIELD xmff011
            {<point name="construct.b.page4.xmff011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmff011
            
            #add-point:AFTER FIELD xmff011
            {<point name="construct.a.page4.xmff011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.xmff011
         ON ACTION controlp INFIELD xmff011
            #add-point:ON ACTION controlp INFIELD xmff011
            {<point name="construct.c.page4.xmff011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmff012
            #add-point:BEFORE FIELD xmff012
            {<point name="construct.b.page4.xmff012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmff012
            
            #add-point:AFTER FIELD xmff012
            {<point name="construct.a.page4.xmff012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.xmff012
         ON ACTION controlp INFIELD xmff012
            #add-point:ON ACTION controlp INFIELD xmff012
            {<point name="construct.c.page4.xmff012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmff013
            #add-point:BEFORE FIELD xmff013
            {<point name="construct.b.page4.xmff013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmff013
            
            #add-point:AFTER FIELD xmff013
            {<point name="construct.a.page4.xmff013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.xmff013
         ON ACTION controlp INFIELD xmff013
            #add-point:ON ACTION controlp INFIELD xmff013
            {<point name="construct.c.page4.xmff013" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON xmfgseq,xmfg001,xmfg002,xmfg003,xmfg004
           FROM s_detail2[1].xmfgseq,s_detail2[1].xmfg001,s_detail2[1].xmfg002,s_detail2[1].xmfg003, 
               s_detail2[1].xmfg004
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #此段落由子樣板a01產生
         BEFORE FIELD xmfgseq
            #add-point:BEFORE FIELD xmfgseq
            {<point name="construct.b.page2.xmfgseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfgseq
            
            #add-point:AFTER FIELD xmfgseq
            {<point name="construct.a.page2.xmfgseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmfgseq
         ON ACTION controlp INFIELD xmfgseq
            #add-point:ON ACTION controlp INFIELD xmfgseq
            {<point name="construct.c.page2.xmfgseq" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfg001
            #add-point:BEFORE FIELD xmfg001
            {<point name="construct.b.page2.xmfg001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfg001
            
            #add-point:AFTER FIELD xmfg001
            {<point name="construct.a.page2.xmfg001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmfg001
         ON ACTION controlp INFIELD xmfg001
            #add-point:ON ACTION controlp INFIELD xmfg001
            {<point name="construct.c.page2.xmfg001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfg002
            #add-point:BEFORE FIELD xmfg002
            {<point name="construct.b.page2.xmfg002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfg002
            
            #add-point:AFTER FIELD xmfg002
            {<point name="construct.a.page2.xmfg002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmfg002
         ON ACTION controlp INFIELD xmfg002
            #add-point:ON ACTION controlp INFIELD xmfg002
            {<point name="construct.c.page2.xmfg002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfg003
            #add-point:BEFORE FIELD xmfg003
            {<point name="construct.b.page2.xmfg003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfg003
            
            #add-point:AFTER FIELD xmfg003
            {<point name="construct.a.page2.xmfg003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmfg003
         ON ACTION controlp INFIELD xmfg003
            #add-point:ON ACTION controlp INFIELD xmfg003
            {<point name="construct.c.page2.xmfg003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfg004
            #add-point:BEFORE FIELD xmfg004
            {<point name="construct.b.page2.xmfg004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfg004
            
            #add-point:AFTER FIELD xmfg004
            {<point name="construct.a.page2.xmfg004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmfg004
         ON ACTION controlp INFIELD xmfg004
            #add-point:ON ACTION controlp INFIELD xmfg004
            {<point name="construct.c.page2.xmfg004" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON xmfeseq,xmfe001,xmfe002,xmfe003,xmfe004,xmfe005
           FROM s_detail3[1].xmfeseq,s_detail3[1].xmfe001,s_detail3[1].xmfe002,s_detail3[1].xmfe003, 
               s_detail3[1].xmfe004,s_detail3[1].xmfe005
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body3.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       
       
       #單身一般欄位開窗相關處理       
                #此段落由子樣板a01產生
         BEFORE FIELD xmfeseq
            #add-point:BEFORE FIELD xmfeseq
            {<point name="construct.b.page3.xmfeseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfeseq
            
            #add-point:AFTER FIELD xmfeseq
            {<point name="construct.a.page3.xmfeseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmfeseq
         ON ACTION controlp INFIELD xmfeseq
            #add-point:ON ACTION controlp INFIELD xmfeseq
            {<point name="construct.c.page3.xmfeseq" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfe001
            #add-point:BEFORE FIELD xmfe001
            {<point name="construct.b.page3.xmfe001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfe001
            
            #add-point:AFTER FIELD xmfe001
            {<point name="construct.a.page3.xmfe001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmfe001
         ON ACTION controlp INFIELD xmfe001
            #add-point:ON ACTION controlp INFIELD xmfe001
            {<point name="construct.c.page3.xmfe001" />}
            #END add-point
 
         #Ctrlp:construct.c.page3.xmfe002
         ON ACTION controlp INFIELD xmfe002
            #add-point:ON ACTION controlp INFIELD xmfe002
            {<point name="construct.c.page3.xmfe002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfe002
            #add-point:BEFORE FIELD xmfe002
            {<point name="construct.b.page3.xmfe002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfe002
            
            #add-point:AFTER FIELD xmfe002
            {<point name="construct.a.page3.xmfe002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfe003
            #add-point:BEFORE FIELD xmfe003
            {<point name="construct.b.page3.xmfe003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfe003
            
            #add-point:AFTER FIELD xmfe003
            {<point name="construct.a.page3.xmfe003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmfe003
         ON ACTION controlp INFIELD xmfe003
            #add-point:ON ACTION controlp INFIELD xmfe003
            {<point name="construct.c.page3.xmfe003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfe004
            #add-point:BEFORE FIELD xmfe004
            {<point name="construct.b.page3.xmfe004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfe004
            
            #add-point:AFTER FIELD xmfe004
            {<point name="construct.a.page3.xmfe004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmfe004
         ON ACTION controlp INFIELD xmfe004
            #add-point:ON ACTION controlp INFIELD xmfe004
            {<point name="construct.c.page3.xmfe004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfe005
            #add-point:BEFORE FIELD xmfe005
            {<point name="construct.b.page3.xmfe005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfe005
            
            #add-point:AFTER FIELD xmfe005
            {<point name="construct.a.page3.xmfe005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmfe005
         ON ACTION controlp INFIELD xmfe005
            #add-point:ON ACTION controlp INFIELD xmfe005
            {<point name="construct.c.page3.xmfe005" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
</section>
  <section id="axmt410.default_search" ver="2" status="" src="s">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION axmt410_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " xmfddocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="axmt410.delete" ver="7" status="" src="s">
<![CDATA[#+ 資料刪除
PRIVATE FUNCTION axmt410_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_xmfd_m.xmfddocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   
 
   CALL axmt410_show()
   
   CALL s_transaction_begin()
 
   OPEN axmt410_cl USING g_enterprise,g_xmfd_m.xmfddocno
   IF STATUS THEN
      CALL cl_err("OPEN axmt410_cl:", STATUS, 1)
      CLOSE axmt410_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axmt410_master_referesh USING g_xmfd_m.xmfddocno INTO g_xmfd_m.xmfddocno,g_xmfd_m.xmfddocdt, 
       g_xmfd_m.xmfd001,g_xmfd_m.xmfd002,g_xmfd_m.xmfdstus,g_xmfd_m.xmfd003,g_xmfd_m.xmfd004,g_xmfd_m.xmfd005, 
       g_xmfd_m.xmfd006,g_xmfd_m.xmfd007,g_xmfd_m.xmfd008,g_xmfd_m.xmfd009,g_xmfd_m.xmfd010,g_xmfd_m.xmfd011, 
       g_xmfd_m.xmfd029,g_xmfd_m.xmfd012,g_xmfd_m.xmfd013,g_xmfd_m.xmfd014,g_xmfd_m.xmfd015,g_xmfd_m.xmfd016, 
       g_xmfd_m.xmfd017,g_xmfd_m.xmfd018,g_xmfd_m.xmfd019,g_xmfd_m.xmfd020,g_xmfd_m.xmfd021,g_xmfd_m.xmfd022, 
       g_xmfd_m.xmfd023,g_xmfd_m.xmfd024,g_xmfd_m.xmfd025,g_xmfd_m.xmfd026,g_xmfd_m.xmfd027,g_xmfd_m.xmfd028, 
       g_xmfd_m.xmfdownid,g_xmfd_m.xmfdowndp,g_xmfd_m.xmfdcrtid,g_xmfd_m.xmfdcrtdp,g_xmfd_m.xmfdcrtdt, 
       g_xmfd_m.xmfdmodid,g_xmfd_m.xmfdmoddt,g_xmfd_m.xmfdcnfid,g_xmfd_m.xmfdcnfdt,g_xmfd_m.xmfdpstid, 
       g_xmfd_m.xmfdpstdt,g_xmfd_m.xmfd001_desc,g_xmfd_m.xmfd002_desc,g_xmfd_m.xmfd003_desc,g_xmfd_m.xmfd009_desc, 
       g_xmfd_m.xmfd015_desc,g_xmfd_m.xmfd016_desc,g_xmfd_m.xmfd017_desc,g_xmfd_m.xmfd018_desc,g_xmfd_m.xmfd019_desc, 
       g_xmfd_m.xmfd022_desc,g_xmfd_m.xmfdownid_desc,g_xmfd_m.xmfdowndp_desc,g_xmfd_m.xmfdcrtid_desc, 
       g_xmfd_m.xmfdcrtdp_desc,g_xmfd_m.xmfdmodid_desc,g_xmfd_m.xmfdcnfid_desc,g_xmfd_m.xmfdpstid_desc 

 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_xmfd_m.xmfddocno,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL axmt410_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_xmfddocno_t = g_xmfd_m.xmfddocno
 
 
      DELETE FROM xmfd_t
       WHERE xmfdent = g_enterprise AND xmfddocno = g_xmfd_m.xmfddocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_xmfd_m.xmfddocno,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM xmff_t
       WHERE xmffent = g_enterprise AND xmffdocno = g_xmfd_m.xmfddocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("xmff_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM xmfg_t
       WHERE xmfgent = g_enterprise AND
             xmfgdocno = g_xmfd_m.xmfddocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("xmfg_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete3" mark="Y"/>}
      #end add-point
      DELETE FROM xmfe_t
       WHERE xmfeent = g_enterprise AND
             xmfedocno = g_xmfd_m.xmfddocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("xmfe_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete3"/>}
      #end add-point
 
 
 
 
                                                               
      CLEAR FORM
      CALL g_xmff_d.clear() 
      CALL g_xmff2_d.clear()       
      CALL g_xmff3_d.clear()       
      CALL g_xmff4_d.clear()       
 
     
      #CALL axmt410_ui_browser_refresh()  
      CALL axmt410_ui_headershow()  
      CALL axmt410_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL axmt410_browser_fill("")
         CALL axmt410_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL axmt410_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
 
      
 
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE axmt410_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_xmfd_m.xmfddocno,'D')
    
END FUNCTION
]]>
</section>
  <section id="axmt410.delete_b" ver="1" status="" src="s">
<![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION axmt410_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1','4',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM xmff_t
       WHERE xmffent = g_enterprise AND
         xmffdocno = ps_keys_bak[1] AND xmffseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM xmfg_t
       WHERE xmfgent = g_enterprise AND
         xmfgdocno = ps_keys_bak[1] AND xmfgseq = ps_keys_bak[2] AND xmfg001 = ps_keys_bak[3] AND xmfg002 = ps_keys_bak[4]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("xmfg_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete3" mark="Y"/>}
      #end add-point    
      DELETE FROM xmfe_t
       WHERE xmfeent = g_enterprise AND
         xmfedocno = ps_keys_bak[1] AND xmfeseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete3"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("xmfe_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete3"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="axmt410.description" ver="1" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000067
#+ 
#+ Filename...: axmt410
#+ Description: 銷售報價單維護作業
#+ Creator....: 03079(2014/06/24)
#+ Modifier...: 03079(2014/07/01)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="axmt410.detail_reproduce" ver="1" status="" src="s">
<![CDATA[#+ 單身自動複製
PRIVATE FUNCTION axmt410_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE xmff_t.*
   DEFINE l_detail2    RECORD LIKE xmfg_t.*
 
   DEFINE l_detail3    RECORD LIKE xmfe_t.*
 
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE axmt410_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE axmt410_detail AS ",
                "SELECT * FROM xmff_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO axmt410_detail SELECT * FROM xmff_t 
                                         WHERE xmffent = g_enterprise AND xmffdocno = g_xmfddocno_t
 
   
   #將key修正為調整後   
   UPDATE axmt410_detail 
      #更新key欄位
      SET xmffdocno = g_xmfd_m.xmfddocno
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO xmff_t SELECT * FROM axmt410_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmt410_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE axmt410_detail AS ",
      "SELECT * FROM xmfg_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO axmt410_detail SELECT * FROM xmfg_t
                                         WHERE xmfgent = g_enterprise AND xmfgdocno = g_xmfddocno_t
 
 
   #將key修正為調整後   
   UPDATE axmt410_detail SET xmfgdocno = g_xmfd_m.xmfddocno
 
  
   #將資料塞回原table   
   INSERT INTO xmfg_t SELECT * FROM axmt410_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmt410_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table3.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE axmt410_detail AS ",
      "SELECT * FROM xmfe_t "
   PREPARE repro_tbl3 FROM ls_sql
   EXECUTE repro_tbl3
   FREE repro_tbl3
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO axmt410_detail SELECT * FROM xmfe_t
                                         WHERE xmfeent = g_enterprise AND xmfedocno = g_xmfddocno_t
 
 
   #將key修正為調整後   
   UPDATE axmt410_detail SET xmfedocno = g_xmfd_m.xmfddocno
 
  
   #將資料塞回原table   
   INSERT INTO xmfe_t SELECT * FROM axmt410_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table3.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmt410_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table3.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_xmfddocno_t = g_xmfd_m.xmfddocno
 
   
   DROP TABLE axmt410_detail
   
END FUNCTION
]]>
</section>
  <section id="axmt410.detail_show" ver="2" status="" src="s">
<![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION axmt410_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="axmt410.fetch" ver="8" status="" src="s">
<![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION axmt410_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_xmfd_m.xmfddocno = g_browser[g_current_idx].b_xmfddocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE axmt410_master_referesh USING g_xmfd_m.xmfddocno INTO g_xmfd_m.xmfddocno,g_xmfd_m.xmfddocdt, 
       g_xmfd_m.xmfd001,g_xmfd_m.xmfd002,g_xmfd_m.xmfdstus,g_xmfd_m.xmfd003,g_xmfd_m.xmfd004,g_xmfd_m.xmfd005, 
       g_xmfd_m.xmfd006,g_xmfd_m.xmfd007,g_xmfd_m.xmfd008,g_xmfd_m.xmfd009,g_xmfd_m.xmfd010,g_xmfd_m.xmfd011, 
       g_xmfd_m.xmfd029,g_xmfd_m.xmfd012,g_xmfd_m.xmfd013,g_xmfd_m.xmfd014,g_xmfd_m.xmfd015,g_xmfd_m.xmfd016, 
       g_xmfd_m.xmfd017,g_xmfd_m.xmfd018,g_xmfd_m.xmfd019,g_xmfd_m.xmfd020,g_xmfd_m.xmfd021,g_xmfd_m.xmfd022, 
       g_xmfd_m.xmfd023,g_xmfd_m.xmfd024,g_xmfd_m.xmfd025,g_xmfd_m.xmfd026,g_xmfd_m.xmfd027,g_xmfd_m.xmfd028, 
       g_xmfd_m.xmfdownid,g_xmfd_m.xmfdowndp,g_xmfd_m.xmfdcrtid,g_xmfd_m.xmfdcrtdp,g_xmfd_m.xmfdcrtdt, 
       g_xmfd_m.xmfdmodid,g_xmfd_m.xmfdmoddt,g_xmfd_m.xmfdcnfid,g_xmfd_m.xmfdcnfdt,g_xmfd_m.xmfdpstid, 
       g_xmfd_m.xmfdpstdt,g_xmfd_m.xmfd001_desc,g_xmfd_m.xmfd002_desc,g_xmfd_m.xmfd003_desc,g_xmfd_m.xmfd009_desc, 
       g_xmfd_m.xmfd015_desc,g_xmfd_m.xmfd016_desc,g_xmfd_m.xmfd017_desc,g_xmfd_m.xmfd018_desc,g_xmfd_m.xmfd019_desc, 
       g_xmfd_m.xmfd022_desc,g_xmfd_m.xmfdownid_desc,g_xmfd_m.xmfdowndp_desc,g_xmfd_m.xmfdcrtid_desc, 
       g_xmfd_m.xmfdcrtdp_desc,g_xmfd_m.xmfdmodid_desc,g_xmfd_m.xmfdcnfid_desc,g_xmfd_m.xmfdpstid_desc 

   IF SQLCA.sqlcode THEN
      CALL cl_err("xmfd_t",SQLCA.sqlcode,1)
      INITIALIZE g_xmfd_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_xmfd_m_t.* = g_xmfd_m.*
   LET g_xmfd_m_o.* = g_xmfd_m.*
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL axmt410_show()
 
   #+ 此段落由子樣板a56產生
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
END FUNCTION
]]>
</section>
  <section id="axmt410.fill_chk" ver="3" status="" src="s">
<![CDATA[#+ 單身填充確認
PRIVATE FUNCTION axmt410_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
   IF ps_idx = 2 AND
      ((NOT cl_null(g_wc2_table2) AND g_wc2_table2.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
   IF ps_idx = 3 AND
      ((NOT cl_null(g_wc2_table3) AND g_wc2_table3.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
 
 
 
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
 
   RETURN FALSE
 
END FUNCTION
]]>
</section>
  <section id="axmt410.filter" ver="1" status="" src="s">
<![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION axmt410_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON xmfddocno,xmfddocdt,xmfd001,xmfd002
                          FROM s_browse[1].b_xmfddocno,s_browse[1].b_xmfddocdt,s_browse[1].b_xmfd001, 
                              s_browse[1].b_xmfd002
 
         BEFORE CONSTRUCT
               DISPLAY axmt410_filter_parser('xmfddocno') TO s_browse[1].b_xmfddocno
            DISPLAY axmt410_filter_parser('xmfddocdt') TO s_browse[1].b_xmfddocdt
            DISPLAY axmt410_filter_parser('xmfd001') TO s_browse[1].b_xmfd001
            DISPLAY axmt410_filter_parser('xmfd002') TO s_browse[1].b_xmfd002
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL axmt410_filter_show('xmfddocno')
   CALL axmt410_filter_show('xmfddocdt')
   CALL axmt410_filter_show('xmfd001')
   CALL axmt410_filter_show('xmfd002')
 
END FUNCTION
]]>
</section>
  <section id="axmt410.filter_parser" ver="1" status="" src="s">
<![CDATA[#+ filter過濾功能
PRIVATE FUNCTION axmt410_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
</section>
  <section id="axmt410.filter_show" ver="1" status="" src="s">
<![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION axmt410_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = axmt410_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
</section>
  <section id="axmt410.global" ver="5" status="" src="s">
<![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_xmfd_m        RECORD
       xmfddocno LIKE xmfd_t.xmfddocno, 
   xmfddocno_desc LIKE type_t.chr80, 
   xmfddocdt LIKE xmfd_t.xmfddocdt, 
   xmfd001 LIKE xmfd_t.xmfd001, 
   xmfd001_desc LIKE type_t.chr80, 
   xmfd002 LIKE xmfd_t.xmfd002, 
   xmfd002_desc LIKE type_t.chr80, 
   xmfdstus LIKE xmfd_t.xmfdstus, 
   xmfd003 LIKE xmfd_t.xmfd003, 
   xmfd003_desc LIKE type_t.chr80, 
   xmfd004 LIKE xmfd_t.xmfd004, 
   xmfd005 LIKE xmfd_t.xmfd005, 
   xmfd006 LIKE xmfd_t.xmfd006, 
   xmfd007 LIKE xmfd_t.xmfd007, 
   xmfd008 LIKE xmfd_t.xmfd008, 
   xmfd009 LIKE xmfd_t.xmfd009, 
   xmfd009_desc LIKE type_t.chr80, 
   xmfd010 LIKE xmfd_t.xmfd010, 
   xmfd010_desc LIKE type_t.chr80, 
   xmfd011 LIKE xmfd_t.xmfd011, 
   xmfd029 LIKE xmfd_t.xmfd029, 
   xmfd012 LIKE xmfd_t.xmfd012, 
   xmfd012_desc LIKE type_t.chr80, 
   xmfd013 LIKE xmfd_t.xmfd013, 
   xmfd014 LIKE xmfd_t.xmfd014, 
   xmfd015 LIKE xmfd_t.xmfd015, 
   xmfd015_desc LIKE type_t.chr80, 
   xmfd016 LIKE xmfd_t.xmfd016, 
   xmfd016_desc LIKE type_t.chr80, 
   xmfd017 LIKE xmfd_t.xmfd017, 
   xmfd017_desc LIKE type_t.chr80, 
   xmfd018 LIKE xmfd_t.xmfd018, 
   xmfd018_desc LIKE type_t.chr80, 
   xmfd019 LIKE xmfd_t.xmfd019, 
   xmfd019_desc LIKE type_t.chr80, 
   xmfd020 LIKE xmfd_t.xmfd020, 
   xmfd020_desc LIKE type_t.chr80, 
   xmfd021 LIKE xmfd_t.xmfd021, 
   xmfd021_desc LIKE type_t.chr80, 
   xmfd022 LIKE xmfd_t.xmfd022, 
   xmfd022_desc LIKE type_t.chr80, 
   oofb017 LIKE type_t.chr80, 
   xmfd023 LIKE xmfd_t.xmfd023, 
   xmfd024 LIKE xmfd_t.xmfd024, 
   xmfd025 LIKE xmfd_t.xmfd025, 
   xmfd026 LIKE xmfd_t.xmfd026, 
   xmfd027 LIKE xmfd_t.xmfd027, 
   xmfd028 LIKE xmfd_t.xmfd028, 
   xmfdownid LIKE xmfd_t.xmfdownid, 
   xmfdownid_desc LIKE type_t.chr80, 
   xmfdowndp LIKE xmfd_t.xmfdowndp, 
   xmfdowndp_desc LIKE type_t.chr80, 
   xmfdcrtid LIKE xmfd_t.xmfdcrtid, 
   xmfdcrtid_desc LIKE type_t.chr80, 
   xmfdcrtdp LIKE xmfd_t.xmfdcrtdp, 
   xmfdcrtdp_desc LIKE type_t.chr80, 
   xmfdcrtdt DATETIME YEAR TO SECOND, 
   xmfdmodid LIKE xmfd_t.xmfdmodid, 
   xmfdmodid_desc LIKE type_t.chr80, 
   xmfdmoddt DATETIME YEAR TO SECOND, 
   xmfdcnfid LIKE xmfd_t.xmfdcnfid, 
   xmfdcnfid_desc LIKE type_t.chr80, 
   xmfdcnfdt DATETIME YEAR TO SECOND, 
   xmfdpstid LIKE xmfd_t.xmfdpstid, 
   xmfdpstid_desc LIKE type_t.chr80, 
   xmfdpstdt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_xmff_d        RECORD
       xmffseq LIKE xmff_t.xmffseq, 
   xmff001 LIKE xmff_t.xmff001, 
   xmff001_desc LIKE type_t.chr500, 
   xmff001_desc_desc LIKE type_t.chr500, 
   xmff002 LIKE xmff_t.xmff002, 
   xmff003 LIKE xmff_t.xmff003, 
   xmff004 LIKE xmff_t.xmff004, 
   xmff004_desc LIKE type_t.chr500, 
   xmff005 LIKE xmff_t.xmff005, 
   xmff006 LIKE xmff_t.xmff006, 
   xmff007 LIKE xmff_t.xmff007, 
   xmff008 LIKE xmff_t.xmff008, 
   xmff009 LIKE xmff_t.xmff009, 
   xmff010 LIKE xmff_t.xmff010
       END RECORD
PRIVATE TYPE type_g_xmff2_d RECORD
       xmfgseq LIKE xmfg_t.xmfgseq, 
   xmfg001 LIKE xmfg_t.xmfg001, 
   xmfg002 LIKE xmfg_t.xmfg002, 
   xmfg003 LIKE xmfg_t.xmfg003, 
   xmfg004 LIKE xmfg_t.xmfg004
       END RECORD
PRIVATE TYPE type_g_xmff3_d RECORD
       xmfeseq LIKE xmfe_t.xmfeseq, 
   xmfe001 LIKE xmfe_t.xmfe001, 
   xmfe002 LIKE xmfe_t.xmfe002, 
   xmfe002_desc LIKE type_t.chr500, 
   xmfe003 LIKE xmfe_t.xmfe003, 
   xmfe004 LIKE xmfe_t.xmfe004, 
   xmfe005 LIKE xmfe_t.xmfe005
       END RECORD
PRIVATE TYPE type_g_xmff4_d RECORD
       xmffseq1 LIKE type_t.num10, 
   xmff0011 LIKE type_t.chr500, 
   xmff0011_desc LIKE type_t.chr500, 
   xmff0011_desc_desc LIKE type_t.chr500, 
   xmff0021 LIKE type_t.chr500, 
   xmff0041 LIKE type_t.chr10, 
   xmff0061 LIKE type_t.num20_6, 
   xmff0071 LIKE type_t.num20_6, 
   xmff011 LIKE xmff_t.xmff011, 
   xmff012 LIKE xmff_t.xmff012, 
   xmff013 LIKE xmff_t.xmff013
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_xmfd_m          type_g_xmfd_m
DEFINE g_xmfd_m_t        type_g_xmfd_m
DEFINE g_xmfd_m_o        type_g_xmfd_m
 
   DEFINE g_xmfddocno_t LIKE xmfd_t.xmfddocno
 
 
DEFINE g_xmff_d          DYNAMIC ARRAY OF type_g_xmff_d
DEFINE g_xmff_d_t        type_g_xmff_d
DEFINE g_xmff_d_o        type_g_xmff_d
DEFINE g_xmff2_d   DYNAMIC ARRAY OF type_g_xmff2_d
DEFINE g_xmff2_d_t type_g_xmff2_d
DEFINE g_xmff2_d_o type_g_xmff2_d
DEFINE g_xmff3_d   DYNAMIC ARRAY OF type_g_xmff3_d
DEFINE g_xmff3_d_t type_g_xmff3_d
DEFINE g_xmff3_d_o type_g_xmff3_d
DEFINE g_xmff4_d   DYNAMIC ARRAY OF type_g_xmff4_d
DEFINE g_xmff4_d_t type_g_xmff4_d
DEFINE g_xmff4_d_o type_g_xmff4_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_xmfddocno LIKE xmfd_t.xmfddocno,
      b_xmfddocdt LIKE xmfd_t.xmfddocdt,
      b_xmfd001 LIKE xmfd_t.xmfd001,
   b_xmfd001_desc LIKE type_t.chr80,
      b_xmfd002 LIKE xmfd_t.xmfd002,
   b_xmfd002_desc LIKE type_t.chr80
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_xmfddocno LIKE xmfd_t.xmfddocno,
      b_xmfddocdt LIKE xmfd_t.xmfddocdt,
      b_xmfd001 LIKE xmfd_t.xmfd001,
   b_xmfd001_desc LIKE type_t.chr80,
      b_xmfd002 LIKE xmfd_t.xmfd002,
   b_xmfd002_desc LIKE type_t.chr80
      END RECORD 
      
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="axmt410.idx_chk" ver="1" status="" src="s">
<![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION axmt410_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_xmff_d.getLength() THEN
         LET g_detail_idx = g_xmff_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmff_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmff_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_xmff2_d.getLength() THEN
         LET g_detail_idx = g_xmff2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmff2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmff2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_xmff3_d.getLength() THEN
         LET g_detail_idx = g_xmff3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmff3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmff3_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 4 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail4")
      IF g_detail_idx > g_xmff4_d.getLength() THEN
         LET g_detail_idx = g_xmff4_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmff4_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmff4_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="axmt410.init" ver="4" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION axmt410_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('xmfdstus','13','N,X,Y,A,D,R,W')
 
      CALL cl_set_combo_scc('xmfd004','2510') 
   CALL cl_set_combo_scc('xmfd008','2511') 
   CALL cl_set_combo_scc('xmfd023','2512') 
   CALL cl_set_combo_scc('xmfe001','3028') 
   CALL cl_set_combo_scc('xmfe003','2513') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL axmt410_default_search()
    
END FUNCTION
]]>
</section>
  <section id="axmt410.input" ver="2" status="" src="s">
<![CDATA[#+ 資料輸入
PRIVATE FUNCTION axmt410_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT xmffseq,xmff001,xmff002,xmff003,xmff004,xmff005,xmff006,xmff007,xmff008, 
       xmff009,xmff010,xmff011,xmff012,xmff013 FROM xmff_t WHERE xmffent=? AND xmffdocno=? AND xmffseq=?  
       FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt410_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT xmfgseq,xmfg001,xmfg002,xmfg003,xmfg004 FROM xmfg_t WHERE xmfgent=? AND  
       xmfgdocno=? AND xmfgseq=? AND xmfg001=? AND xmfg002=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt410_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql3" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT xmfeseq,xmfe001,xmfe002,xmfe003,xmfe004,xmfe005 FROM xmfe_t WHERE xmfeent=?  
       AND xmfedocno=? AND xmfeseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql3"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt410_bcl3 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL axmt410_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL axmt410_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_xmfd_m.xmfddocno,g_xmfd_m.xmfddocdt,g_xmfd_m.xmfd001,g_xmfd_m.xmfd002,g_xmfd_m.xmfdstus, 
       g_xmfd_m.xmfd003,g_xmfd_m.xmfd004,g_xmfd_m.xmfd005,g_xmfd_m.xmfd006,g_xmfd_m.xmfd007,g_xmfd_m.xmfd008, 
       g_xmfd_m.xmfd009,g_xmfd_m.xmfd010,g_xmfd_m.xmfd011,g_xmfd_m.xmfd029,g_xmfd_m.xmfd012,g_xmfd_m.xmfd013, 
       g_xmfd_m.xmfd014,g_xmfd_m.xmfd015,g_xmfd_m.xmfd016,g_xmfd_m.xmfd017,g_xmfd_m.xmfd018,g_xmfd_m.xmfd019, 
       g_xmfd_m.xmfd020,g_xmfd_m.xmfd021,g_xmfd_m.xmfd022,g_xmfd_m.xmfd023,g_xmfd_m.xmfd024,g_xmfd_m.xmfd025, 
       g_xmfd_m.xmfd026,g_xmfd_m.xmfd027,g_xmfd_m.xmfd028
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
</section>
  <section id="axmt410.input.body" ver="9" status="" src="s">
<![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_xmff_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xmff_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axmt410_b_fill()
            LET g_rec_b = g_xmff_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN axmt410_cl USING g_enterprise,g_xmfd_m.xmfddocno
            IF STATUS THEN
               CALL cl_err("OPEN axmt410_cl:", STATUS, 1)
               CLOSE axmt410_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_xmff_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xmff_d[l_ac].xmffseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xmff_d_t.* = g_xmff_d[l_ac].*  #BACKUP
               LET g_xmff_d_o.* = g_xmff_d[l_ac].*  #BACKUP
               CALL axmt410_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL axmt410_set_no_entry_b(l_cmd)
               IF NOT axmt410_lock_b("xmff_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axmt410_bcl INTO g_xmff_d[l_ac].xmffseq,g_xmff_d[l_ac].xmff001,g_xmff_d[l_ac].xmff002, 
                      g_xmff_d[l_ac].xmff003,g_xmff_d[l_ac].xmff004,g_xmff_d[l_ac].xmff005,g_xmff_d[l_ac].xmff006, 
                      g_xmff_d[l_ac].xmff007,g_xmff_d[l_ac].xmff008,g_xmff_d[l_ac].xmff009,g_xmff_d[l_ac].xmff010, 
                      g_xmff4_d[l_ac].xmff011,g_xmff4_d[l_ac].xmff012,g_xmff4_d[l_ac].xmff013
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_xmff_d_t.xmffseq,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL axmt410_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmff_d[l_ac].* TO NULL 
            INITIALIZE g_xmff_d_t.* TO NULL 
            INITIALIZE g_xmff_d_o.* TO NULL 
            
            LET g_xmff_d_t.* = g_xmff_d[l_ac].*     #新輸入資料
            LET g_xmff_d_o.* = g_xmff_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axmt410_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL axmt410_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmff_d[li_reproduce_target].* = g_xmff_d[li_reproduce].*
               LET g_xmff4_d[li_reproduce_target].* = g_xmff4_d[li_reproduce].*
 
               LET g_xmff_d[li_reproduce_target].xmffseq = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM xmff_t 
             WHERE xmffent = g_enterprise AND xmffdocno = g_xmfd_m.xmfddocno
 
               AND xmffseq = g_xmff_d[l_ac].xmffseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmfd_m.xmfddocno
               LET gs_keys[2] = g_xmff_d[g_detail_idx].xmffseq
               CALL axmt410_insert_b('xmff_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_xmff_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("xmff_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axmt410_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_xmff_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_xmff_d.deleteElement(l_ac)
               NEXT FIELD xmffseq
            END IF
         
            IF g_xmff_d[l_ac].xmffseq IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM xmff_t
                WHERE xmffent = g_enterprise AND xmffdocno = g_xmfd_m.xmfddocno AND
 
                      xmffseq = g_xmff_d_t.xmffseq
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("xmff_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE axmt410_bcl
               LET l_count = g_xmff_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmfd_m.xmfddocno
               LET gs_keys[2] = g_xmff_d[g_detail_idx].xmffseq
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL axmt410_delete_b('xmff_t',gs_keys,"'1'")
 
                  #此段落由子樣板a01產生
         BEFORE FIELD xmffseq
            #add-point:BEFORE FIELD xmffseq
            {<point name="input.b.page1.xmffseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmffseq
            
            #add-point:AFTER FIELD xmffseq
            {<point name="input.a.page1.xmffseq" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmffseq
            #add-point:ON CHANGE xmffseq
            {<point name="input.g.page1.xmffseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmff001
            
            #add-point:AFTER FIELD xmff001
            {<point name="input.a.page1.xmff001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmff001
            #add-point:BEFORE FIELD xmff001
            {<point name="input.b.page1.xmff001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmff001
            #add-point:ON CHANGE xmff001
            {<point name="input.g.page1.xmff001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmff002
            #add-point:BEFORE FIELD xmff002
            {<point name="input.b.page1.xmff002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmff002
            
            #add-point:AFTER FIELD xmff002
            {<point name="input.a.page1.xmff002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmff002
            #add-point:ON CHANGE xmff002
            {<point name="input.g.page1.xmff002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmff003
            
            #add-point:AFTER FIELD xmff003
            {<point name="input.a.page1.xmff003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmff003
            #add-point:BEFORE FIELD xmff003
            {<point name="input.b.page1.xmff003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmff003
            #add-point:ON CHANGE xmff003
            {<point name="input.g.page1.xmff003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmff004
            
            #add-point:AFTER FIELD xmff004
            {<point name="input.a.page1.xmff004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmff004
            #add-point:BEFORE FIELD xmff004
            {<point name="input.b.page1.xmff004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmff004
            #add-point:ON CHANGE xmff004
            {<point name="input.g.page1.xmff004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmff005
            #add-point:BEFORE FIELD xmff005
            {<point name="input.b.page1.xmff005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmff005
            
            #add-point:AFTER FIELD xmff005
            {<point name="input.a.page1.xmff005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmff005
            #add-point:ON CHANGE xmff005
            {<point name="input.g.page1.xmff005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmff006
            #add-point:BEFORE FIELD xmff006
            {<point name="input.b.page1.xmff006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmff006
            
            #add-point:AFTER FIELD xmff006
            {<point name="input.a.page1.xmff006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmff006
            #add-point:ON CHANGE xmff006
            {<point name="input.g.page1.xmff006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmff007
            #add-point:BEFORE FIELD xmff007
            {<point name="input.b.page1.xmff007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmff007
            
            #add-point:AFTER FIELD xmff007
            {<point name="input.a.page1.xmff007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmff007
            #add-point:ON CHANGE xmff007
            {<point name="input.g.page1.xmff007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmff008
            #add-point:BEFORE FIELD xmff008
            {<point name="input.b.page1.xmff008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmff008
            
            #add-point:AFTER FIELD xmff008
            {<point name="input.a.page1.xmff008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmff008
            #add-point:ON CHANGE xmff008
            {<point name="input.g.page1.xmff008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmff009
            #add-point:BEFORE FIELD xmff009
            {<point name="input.b.page1.xmff009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmff009
            
            #add-point:AFTER FIELD xmff009
            {<point name="input.a.page1.xmff009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmff009
            #add-point:ON CHANGE xmff009
            {<point name="input.g.page1.xmff009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmff010
            #add-point:BEFORE FIELD xmff010
            {<point name="input.b.page1.xmff010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmff010
            
            #add-point:AFTER FIELD xmff010
            {<point name="input.a.page1.xmff010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmff010
            #add-point:ON CHANGE xmff010
            {<point name="input.g.page1.xmff010" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.xmffseq
         ON ACTION controlp INFIELD xmffseq
            #add-point:ON ACTION controlp INFIELD xmffseq
            {<point name="input.c.page1.xmffseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmff001
         ON ACTION controlp INFIELD xmff001
            #add-point:ON ACTION controlp INFIELD xmff001
            {<point name="input.c.page1.xmff001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmff002
         ON ACTION controlp INFIELD xmff002
            #add-point:ON ACTION controlp INFIELD xmff002
            {<point name="input.c.page1.xmff002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmff003
         ON ACTION controlp INFIELD xmff003
            #add-point:ON ACTION controlp INFIELD xmff003
            {<point name="input.c.page1.xmff003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmff004
         ON ACTION controlp INFIELD xmff004
            #add-point:ON ACTION controlp INFIELD xmff004
            {<point name="input.c.page1.xmff004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmff005
         ON ACTION controlp INFIELD xmff005
            #add-point:ON ACTION controlp INFIELD xmff005
            {<point name="input.c.page1.xmff005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmff006
         ON ACTION controlp INFIELD xmff006
            #add-point:ON ACTION controlp INFIELD xmff006
            {<point name="input.c.page1.xmff006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmff007
         ON ACTION controlp INFIELD xmff007
            #add-point:ON ACTION controlp INFIELD xmff007
            {<point name="input.c.page1.xmff007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmff008
         ON ACTION controlp INFIELD xmff008
            #add-point:ON ACTION controlp INFIELD xmff008
            {<point name="input.c.page1.xmff008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmff009
         ON ACTION controlp INFIELD xmff009
            #add-point:ON ACTION controlp INFIELD xmff009
            {<point name="input.c.page1.xmff009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmff010
         ON ACTION controlp INFIELD xmff010
            #add-point:ON ACTION controlp INFIELD xmff010
            {<point name="input.c.page1.xmff010" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_xmff_d[l_ac].* = g_xmff_d_t.*
               CLOSE axmt410_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_xmff_d[l_ac].xmffseq,-263,1)
               LET g_xmff_d[l_ac].* = g_xmff_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE xmff_t SET (xmffdocno,xmffseq,xmff001,xmff002,xmff003,xmff004,xmff005,xmff006, 
                   xmff007,xmff008,xmff009,xmff010,xmff011,xmff012,xmff013) = (g_xmfd_m.xmfddocno,g_xmff_d[l_ac].xmffseq, 
                   g_xmff_d[l_ac].xmff001,g_xmff_d[l_ac].xmff002,g_xmff_d[l_ac].xmff003,g_xmff_d[l_ac].xmff004, 
                   g_xmff_d[l_ac].xmff005,g_xmff_d[l_ac].xmff006,g_xmff_d[l_ac].xmff007,g_xmff_d[l_ac].xmff008, 
                   g_xmff_d[l_ac].xmff009,g_xmff_d[l_ac].xmff010,g_xmff4_d[l_ac].xmff011,g_xmff4_d[l_ac].xmff012, 
                   g_xmff4_d[l_ac].xmff013)
                WHERE xmffent = g_enterprise AND xmffdocno = g_xmfd_m.xmfddocno 
 
                  AND xmffseq = g_xmff_d_t.xmffseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("xmff_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_xmff_d[l_ac].* = g_xmff_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("xmff_t",SQLCA.sqlcode,1)
                     LET g_xmff_d[l_ac].* = g_xmff_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmfd_m.xmfddocno
               LET gs_keys_bak[1] = g_xmfddocno_t
               LET gs_keys[2] = g_xmff_d[g_detail_idx].xmffseq
               LET gs_keys_bak[2] = g_xmff_d_t.xmffseq
               CALL axmt410_update_b('xmff_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
			   #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_xmfd_m),util.JSON.stringify(g_xmff_d_t)
               LET g_log2 = util.JSON.stringify(g_xmfd_m),util.JSON.stringify(g_xmff_d[l_ac])
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL axmt410_unlock_b("xmff_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_xmff_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_xmff_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_xmff3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_3)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xmff3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axmt410_b_fill()
            LET g_rec_b = g_xmff3_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body3.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmff3_d[l_ac].* TO NULL 
            INITIALIZE g_xmff3_d_t.* TO NULL 
            INITIALIZE g_xmff3_d_o.* TO NULL 
                  LET g_xmff3_d[l_ac].xmfe001 = "1"
      LET g_xmff3_d[l_ac].xmfe003 = "1"
      LET g_xmff3_d[l_ac].xmfe004 = "0"
      LET g_xmff3_d[l_ac].xmfe005 = "0"
 
            LET g_xmff3_d_t.* = g_xmff3_d[l_ac].*     #新輸入資料
            LET g_xmff3_d_o.* = g_xmff3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axmt410_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body3.insert.after_set_entry_b"/>}
            #end add-point
            CALL axmt410_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmff3_d[li_reproduce_target].* = g_xmff3_d[li_reproduce].*
 
               LET g_xmff3_d[li_reproduce_target].xmfeseq = NULL
            END IF
            #公用欄位給值(單身3)
            
            
            #add-point:modify段before insert
            {<point name="input.body3.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body3.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN axmt410_cl USING g_enterprise,g_xmfd_m.xmfddocno
            IF STATUS THEN
               CALL cl_err("OPEN axmt410_cl:", STATUS, 1)
               CLOSE axmt410_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_xmff3_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xmff3_d[l_ac].xmfeseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_xmff3_d_t.* = g_xmff3_d[l_ac].*  #BACKUP
               LET g_xmff3_d_o.* = g_xmff3_d[l_ac].*  #BACKUP
               CALL axmt410_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body3.after_set_entry_b"/>}
               #end add-point  
               CALL axmt410_set_no_entry_b(l_cmd)
               IF NOT axmt410_lock_b("xmfe_t","'3'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axmt410_bcl3 INTO g_xmff3_d[l_ac].xmfeseq,g_xmff3_d[l_ac].xmfe001,g_xmff3_d[l_ac].xmfe002, 
                      g_xmff3_d[l_ac].xmfe003,g_xmff3_d[l_ac].xmfe004,g_xmff3_d[l_ac].xmfe005
                  IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL axmt410_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body3.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_xmff3_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_xmff3_d.deleteElement(l_ac)
               NEXT FIELD xmfeseq
            END IF
         
            IF g_xmff3_d[l_ac].xmfeseq IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身3刪除前
               {<point name="input.body3.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM xmfe_t
                WHERE xmfeent = g_enterprise AND xmfedocno = g_xmfd_m.xmfddocno AND
                      xmfeseq = g_xmff3_d_t.xmfeseq
                  
               #add-point:單身3刪除中
               {<point name="input.body3.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("xmff_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身3刪除後
                  {<point name="input.body3.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE axmt410_bcl
               LET l_count = g_xmff_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmfd_m.xmfddocno
               LET gs_keys[2] = g_xmff3_d[g_detail_idx].xmfeseq
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body3.after_delete"/>}
            #end add-point
                           CALL axmt410_delete_b('xmfe_t',gs_keys,"'3'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身3新增前
            {<point name="input.body3.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM xmfe_t 
             WHERE xmfeent = g_enterprise AND xmfedocno = g_xmfd_m.xmfddocno
               AND xmfeseq = g_xmff3_d[l_ac].xmfeseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身3新增前
               {<point name="input.body3.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmfd_m.xmfddocno
               LET gs_keys[2] = g_xmff3_d[g_detail_idx].xmfeseq
               CALL axmt410_insert_b('xmfe_t',gs_keys,"'3'")
                           
               #add-point:單身新增後3
               {<point name="input.body3.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_xmff_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("xmfe_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axmt410_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body3.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_xmff3_d[l_ac].* = g_xmff3_d_t.*
               CLOSE axmt410_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_xmff3_d[l_ac].* = g_xmff3_d_t.*
            ELSE
               #add-point:單身page3修改前
               {<point name="input.body3.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身3)
               
               
               UPDATE xmfe_t SET (xmfedocno,xmfeseq,xmfe001,xmfe002,xmfe003,xmfe004,xmfe005) = (g_xmfd_m.xmfddocno, 
                   g_xmff3_d[l_ac].xmfeseq,g_xmff3_d[l_ac].xmfe001,g_xmff3_d[l_ac].xmfe002,g_xmff3_d[l_ac].xmfe003, 
                   g_xmff3_d[l_ac].xmfe004,g_xmff3_d[l_ac].xmfe005) #自訂欄位頁簽
                WHERE xmfeent = g_enterprise AND xmfedocno = g_xmfd_m.xmfddocno
                  AND xmfeseq = g_xmff3_d_t.xmfeseq #項次 
                  
               #add-point:單身page3修改中
               {<point name="input.body3.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("xmfe_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_xmff3_d[l_ac].* = g_xmff3_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("xmfe_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_xmff3_d[l_ac].* = g_xmff3_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmfd_m.xmfddocno
               LET gs_keys_bak[1] = g_xmfddocno_t
               LET gs_keys[2] = g_xmff3_d[g_detail_idx].xmfeseq
               LET gs_keys_bak[2] = g_xmff3_d_t.xmfeseq
               CALL axmt410_update_b('xmfe_t',gs_keys,gs_keys_bak,"'3'")
                     #資料多語言用-增/改
                     
               END CASE
			   
               #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_xmfd_m),util.JSON.stringify(g_xmff3_d_t)
               LET g_log2 = util.JSON.stringify(g_xmfd_m),util.JSON.stringify(g_xmff3_d[l_ac])
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page3修改後
               {<point name="input.body3.a_update"/>}
               #end add-point
            END IF
         
                  #此段落由子樣板a01產生
         BEFORE FIELD xmfeseq
            #add-point:BEFORE FIELD xmfeseq
            {<point name="input.b.page3.xmfeseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfeseq
            
            #add-point:AFTER FIELD xmfeseq
            {<point name="input.a.page3.xmfeseq" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmfeseq
            #add-point:ON CHANGE xmfeseq
            {<point name="input.g.page3.xmfeseq" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfe001
            #add-point:BEFORE FIELD xmfe001
            {<point name="input.b.page3.xmfe001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfe001
            
            #add-point:AFTER FIELD xmfe001
            {<point name="input.a.page3.xmfe001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmfe001
            #add-point:ON CHANGE xmfe001
            {<point name="input.g.page3.xmfe001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfe002
            
            #add-point:AFTER FIELD xmfe002
            {<point name="input.a.page3.xmfe002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfe002
            #add-point:BEFORE FIELD xmfe002
            {<point name="input.b.page3.xmfe002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmfe002
            #add-point:ON CHANGE xmfe002
            {<point name="input.g.page3.xmfe002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfe003
            #add-point:BEFORE FIELD xmfe003
            {<point name="input.b.page3.xmfe003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfe003
            
            #add-point:AFTER FIELD xmfe003
            {<point name="input.a.page3.xmfe003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmfe003
            #add-point:ON CHANGE xmfe003
            {<point name="input.g.page3.xmfe003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfe004
            #add-point:BEFORE FIELD xmfe004
            {<point name="input.b.page3.xmfe004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfe004
            
            #add-point:AFTER FIELD xmfe004
            {<point name="input.a.page3.xmfe004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmfe004
            #add-point:ON CHANGE xmfe004
            {<point name="input.g.page3.xmfe004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfe005
            #add-point:BEFORE FIELD xmfe005
            {<point name="input.b.page3.xmfe005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfe005
            
            #add-point:AFTER FIELD xmfe005
            {<point name="input.a.page3.xmfe005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmfe005
            #add-point:ON CHANGE xmfe005
            {<point name="input.g.page3.xmfe005" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page3.xmfeseq
         ON ACTION controlp INFIELD xmfeseq
            #add-point:ON ACTION controlp INFIELD xmfeseq
            {<point name="input.c.page3.xmfeseq" />}
            #END add-point
 
         #Ctrlp:input.c.page3.xmfe001
         ON ACTION controlp INFIELD xmfe001
            #add-point:ON ACTION controlp INFIELD xmfe001
            {<point name="input.c.page3.xmfe001" />}
            #END add-point
 
         #Ctrlp:input.c.page3.xmfe002
         ON ACTION controlp INFIELD xmfe002
            #add-point:ON ACTION controlp INFIELD xmfe002
            {<point name="input.c.page3.xmfe002" />}
            #END add-point
 
         #Ctrlp:input.c.page3.xmfe003
         ON ACTION controlp INFIELD xmfe003
            #add-point:ON ACTION controlp INFIELD xmfe003
            {<point name="input.c.page3.xmfe003" />}
            #END add-point
 
         #Ctrlp:input.c.page3.xmfe004
         ON ACTION controlp INFIELD xmfe004
            #add-point:ON ACTION controlp INFIELD xmfe004
            {<point name="input.c.page3.xmfe004" />}
            #END add-point
 
         #Ctrlp:input.c.page3.xmfe005
         ON ACTION controlp INFIELD xmfe005
            #add-point:ON ACTION controlp INFIELD xmfe005
            {<point name="input.c.page3.xmfe005" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page3 after_row
            {<point name="input.body3.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_xmff3_d[l_ac].* = g_xmff3_d_t.*
               END IF
               CLOSE axmt410_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL axmt410_unlock_b("xmfe_t","'3'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page3 after_row2
            {<point name="input.body3.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body3.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_xmff3_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_xmff3_d.getLength()+1
 
      END INPUT
 
      
 
      
      DISPLAY ARRAY g_xmff2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL axmt410_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail2")
            LET g_detail_idx = l_ac
            
            #add-point:page2, before row動作
            {<point name="input.body2.before_row"/>}
            #end add-point
            
         BEFORE DISPLAY
            CALL FGL_SET_ARR_CURR(g_detail_idx)
            LET l_ac = DIALOG.getCurrentRow("s_detail2")
            CALL axmt410_idx_chk()
            LET g_current_page = 2
      
         #add-point:page2自定義行為
         {<point name="input.body2.action"/>}
         #end add-point
      
      END DISPLAY
      DISPLAY ARRAY g_xmff4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL axmt410_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail4")
            LET g_detail_idx = l_ac
            
            #add-point:page4, before row動作
            {<point name="input.body4.before_row"/>}
            #end add-point
            
         BEFORE DISPLAY
            CALL FGL_SET_ARR_CURR(g_detail_idx)
            LET l_ac = DIALOG.getCurrentRow("s_detail4")
            CALL axmt410_idx_chk()
            LET g_current_page = 4
      
         #add-point:page4自定義行為
         {<point name="input.body4.action"/>}
         #end add-point
      
      END DISPLAY
 
      
 
      
]]>
</section>
  <section id="axmt410.input.head" ver="3" status="" src="s">
<![CDATA[      #單頭段
      INPUT BY NAME g_xmfd_m.xmfddocno,g_xmfd_m.xmfddocdt,g_xmfd_m.xmfd001,g_xmfd_m.xmfd002,g_xmfd_m.xmfdstus, 
          g_xmfd_m.xmfd003,g_xmfd_m.xmfd004,g_xmfd_m.xmfd005,g_xmfd_m.xmfd006,g_xmfd_m.xmfd007,g_xmfd_m.xmfd008, 
          g_xmfd_m.xmfd009,g_xmfd_m.xmfd010,g_xmfd_m.xmfd011,g_xmfd_m.xmfd029,g_xmfd_m.xmfd012,g_xmfd_m.xmfd013, 
          g_xmfd_m.xmfd014,g_xmfd_m.xmfd015,g_xmfd_m.xmfd016,g_xmfd_m.xmfd017,g_xmfd_m.xmfd018,g_xmfd_m.xmfd019, 
          g_xmfd_m.xmfd020,g_xmfd_m.xmfd021,g_xmfd_m.xmfd022,g_xmfd_m.xmfd023,g_xmfd_m.xmfd024,g_xmfd_m.xmfd025, 
          g_xmfd_m.xmfd026,g_xmfd_m.xmfd027,g_xmfd_m.xmfd028 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a02產生
         AFTER FIELD xmfddocno
            
            #add-point:AFTER FIELD xmfddocno
            {<point name="input.a.xmfddocno" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfddocno
            #add-point:BEFORE FIELD xmfddocno
            {<point name="input.b.xmfddocno" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmfddocno
            #add-point:ON CHANGE xmfddocno
            {<point name="input.g.xmfddocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfddocdt
            #add-point:BEFORE FIELD xmfddocdt
            {<point name="input.b.xmfddocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfddocdt
            
            #add-point:AFTER FIELD xmfddocdt
            {<point name="input.a.xmfddocdt" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmfddocdt
            #add-point:ON CHANGE xmfddocdt
            {<point name="input.g.xmfddocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd001
            
            #add-point:AFTER FIELD xmfd001
            {<point name="input.a.xmfd001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd001
            #add-point:BEFORE FIELD xmfd001
            {<point name="input.b.xmfd001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmfd001
            #add-point:ON CHANGE xmfd001
            {<point name="input.g.xmfd001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd002
            
            #add-point:AFTER FIELD xmfd002
            {<point name="input.a.xmfd002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd002
            #add-point:BEFORE FIELD xmfd002
            {<point name="input.b.xmfd002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmfd002
            #add-point:ON CHANGE xmfd002
            {<point name="input.g.xmfd002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfdstus
            #add-point:BEFORE FIELD xmfdstus
            {<point name="input.b.xmfdstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfdstus
            
            #add-point:AFTER FIELD xmfdstus
            {<point name="input.a.xmfdstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmfdstus
            #add-point:ON CHANGE xmfdstus
            {<point name="input.g.xmfdstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd003
            
            #add-point:AFTER FIELD xmfd003
            {<point name="input.a.xmfd003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd003
            #add-point:BEFORE FIELD xmfd003
            {<point name="input.b.xmfd003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmfd003
            #add-point:ON CHANGE xmfd003
            {<point name="input.g.xmfd003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd004
            #add-point:BEFORE FIELD xmfd004
            {<point name="input.b.xmfd004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd004
            
            #add-point:AFTER FIELD xmfd004
            {<point name="input.a.xmfd004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmfd004
            #add-point:ON CHANGE xmfd004
            {<point name="input.g.xmfd004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd005
            #add-point:BEFORE FIELD xmfd005
            {<point name="input.b.xmfd005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd005
            
            #add-point:AFTER FIELD xmfd005
            {<point name="input.a.xmfd005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmfd005
            #add-point:ON CHANGE xmfd005
            {<point name="input.g.xmfd005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd006
            #add-point:BEFORE FIELD xmfd006
            {<point name="input.b.xmfd006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd006
            
            #add-point:AFTER FIELD xmfd006
            {<point name="input.a.xmfd006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmfd006
            #add-point:ON CHANGE xmfd006
            {<point name="input.g.xmfd006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd007
            #add-point:BEFORE FIELD xmfd007
            {<point name="input.b.xmfd007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd007
            
            #add-point:AFTER FIELD xmfd007
            {<point name="input.a.xmfd007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmfd007
            #add-point:ON CHANGE xmfd007
            {<point name="input.g.xmfd007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd008
            #add-point:BEFORE FIELD xmfd008
            {<point name="input.b.xmfd008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd008
            
            #add-point:AFTER FIELD xmfd008
            {<point name="input.a.xmfd008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmfd008
            #add-point:ON CHANGE xmfd008
            {<point name="input.g.xmfd008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd009
            
            #add-point:AFTER FIELD xmfd009
            {<point name="input.a.xmfd009" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd009
            #add-point:BEFORE FIELD xmfd009
            {<point name="input.b.xmfd009" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmfd009
            #add-point:ON CHANGE xmfd009
            {<point name="input.g.xmfd009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd010
            
            #add-point:AFTER FIELD xmfd010
            {<point name="input.a.xmfd010" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd010
            #add-point:BEFORE FIELD xmfd010
            {<point name="input.b.xmfd010" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmfd010
            #add-point:ON CHANGE xmfd010
            {<point name="input.g.xmfd010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd011
            #add-point:BEFORE FIELD xmfd011
            {<point name="input.b.xmfd011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd011
            
            #add-point:AFTER FIELD xmfd011
            {<point name="input.a.xmfd011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmfd011
            #add-point:ON CHANGE xmfd011
            {<point name="input.g.xmfd011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd029
            #add-point:BEFORE FIELD xmfd029
            {<point name="input.b.xmfd029" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd029
            
            #add-point:AFTER FIELD xmfd029
            {<point name="input.a.xmfd029" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmfd029
            #add-point:ON CHANGE xmfd029
            {<point name="input.g.xmfd029" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd012
            
            #add-point:AFTER FIELD xmfd012
            {<point name="input.a.xmfd012" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd012
            #add-point:BEFORE FIELD xmfd012
            {<point name="input.b.xmfd012" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmfd012
            #add-point:ON CHANGE xmfd012
            {<point name="input.g.xmfd012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd013
            #add-point:BEFORE FIELD xmfd013
            {<point name="input.b.xmfd013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd013
            
            #add-point:AFTER FIELD xmfd013
            {<point name="input.a.xmfd013" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmfd013
            #add-point:ON CHANGE xmfd013
            {<point name="input.g.xmfd013" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd014
            #add-point:BEFORE FIELD xmfd014
            {<point name="input.b.xmfd014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd014
            
            #add-point:AFTER FIELD xmfd014
            {<point name="input.a.xmfd014" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmfd014
            #add-point:ON CHANGE xmfd014
            {<point name="input.g.xmfd014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd015
            
            #add-point:AFTER FIELD xmfd015
            {<point name="input.a.xmfd015" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd015
            #add-point:BEFORE FIELD xmfd015
            {<point name="input.b.xmfd015" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmfd015
            #add-point:ON CHANGE xmfd015
            {<point name="input.g.xmfd015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd016
            
            #add-point:AFTER FIELD xmfd016
            {<point name="input.a.xmfd016" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd016
            #add-point:BEFORE FIELD xmfd016
            {<point name="input.b.xmfd016" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmfd016
            #add-point:ON CHANGE xmfd016
            {<point name="input.g.xmfd016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd017
            
            #add-point:AFTER FIELD xmfd017
            {<point name="input.a.xmfd017" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd017
            #add-point:BEFORE FIELD xmfd017
            {<point name="input.b.xmfd017" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmfd017
            #add-point:ON CHANGE xmfd017
            {<point name="input.g.xmfd017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd018
            
            #add-point:AFTER FIELD xmfd018
            {<point name="input.a.xmfd018" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd018
            #add-point:BEFORE FIELD xmfd018
            {<point name="input.b.xmfd018" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmfd018
            #add-point:ON CHANGE xmfd018
            {<point name="input.g.xmfd018" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd019
            
            #add-point:AFTER FIELD xmfd019
            {<point name="input.a.xmfd019" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd019
            #add-point:BEFORE FIELD xmfd019
            {<point name="input.b.xmfd019" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmfd019
            #add-point:ON CHANGE xmfd019
            {<point name="input.g.xmfd019" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd020
            
            #add-point:AFTER FIELD xmfd020
            {<point name="input.a.xmfd020" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd020
            #add-point:BEFORE FIELD xmfd020
            {<point name="input.b.xmfd020" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmfd020
            #add-point:ON CHANGE xmfd020
            {<point name="input.g.xmfd020" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd021
            
            #add-point:AFTER FIELD xmfd021
            {<point name="input.a.xmfd021" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd021
            #add-point:BEFORE FIELD xmfd021
            {<point name="input.b.xmfd021" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmfd021
            #add-point:ON CHANGE xmfd021
            {<point name="input.g.xmfd021" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd022
            
            #add-point:AFTER FIELD xmfd022
            {<point name="input.a.xmfd022" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd022
            #add-point:BEFORE FIELD xmfd022
            {<point name="input.b.xmfd022" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmfd022
            #add-point:ON CHANGE xmfd022
            {<point name="input.g.xmfd022" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd023
            #add-point:BEFORE FIELD xmfd023
            {<point name="input.b.xmfd023" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd023
            
            #add-point:AFTER FIELD xmfd023
            {<point name="input.a.xmfd023" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmfd023
            #add-point:ON CHANGE xmfd023
            {<point name="input.g.xmfd023" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd024
            #add-point:BEFORE FIELD xmfd024
            {<point name="input.b.xmfd024" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd024
            
            #add-point:AFTER FIELD xmfd024
            {<point name="input.a.xmfd024" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmfd024
            #add-point:ON CHANGE xmfd024
            {<point name="input.g.xmfd024" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd025
            #add-point:BEFORE FIELD xmfd025
            {<point name="input.b.xmfd025" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd025
            
            #add-point:AFTER FIELD xmfd025
            {<point name="input.a.xmfd025" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmfd025
            #add-point:ON CHANGE xmfd025
            {<point name="input.g.xmfd025" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd026
            #add-point:BEFORE FIELD xmfd026
            {<point name="input.b.xmfd026" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd026
            
            #add-point:AFTER FIELD xmfd026
            {<point name="input.a.xmfd026" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmfd026
            #add-point:ON CHANGE xmfd026
            {<point name="input.g.xmfd026" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd027
            #add-point:BEFORE FIELD xmfd027
            {<point name="input.b.xmfd027" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd027
            
            #add-point:AFTER FIELD xmfd027
            {<point name="input.a.xmfd027" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmfd027
            #add-point:ON CHANGE xmfd027
            {<point name="input.g.xmfd027" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmfd028
            #add-point:BEFORE FIELD xmfd028
            {<point name="input.b.xmfd028" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmfd028
            
            #add-point:AFTER FIELD xmfd028
            {<point name="input.a.xmfd028" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmfd028
            #add-point:ON CHANGE xmfd028
            {<point name="input.g.xmfd028" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.xmfddocno
         ON ACTION controlp INFIELD xmfddocno
            #add-point:ON ACTION controlp INFIELD xmfddocno
            {<point name="input.c.xmfddocno" />}
            #END add-point
 
         #Ctrlp:input.c.xmfddocdt
         ON ACTION controlp INFIELD xmfddocdt
            #add-point:ON ACTION controlp INFIELD xmfddocdt
            {<point name="input.c.xmfddocdt" />}
            #END add-point
 
         #Ctrlp:input.c.xmfd001
         ON ACTION controlp INFIELD xmfd001
            #add-point:ON ACTION controlp INFIELD xmfd001
            {<point name="input.c.xmfd001" />}
            #END add-point
 
         #Ctrlp:input.c.xmfd002
         ON ACTION controlp INFIELD xmfd002
            #add-point:ON ACTION controlp INFIELD xmfd002
            {<point name="input.c.xmfd002" />}
            #END add-point
 
         #Ctrlp:input.c.xmfdstus
         ON ACTION controlp INFIELD xmfdstus
            #add-point:ON ACTION controlp INFIELD xmfdstus
            {<point name="input.c.xmfdstus" />}
            #END add-point
 
         #Ctrlp:input.c.xmfd003
         ON ACTION controlp INFIELD xmfd003
            #add-point:ON ACTION controlp INFIELD xmfd003
            {<point name="input.c.xmfd003" />}
            #END add-point
 
         #Ctrlp:input.c.xmfd004
         ON ACTION controlp INFIELD xmfd004
            #add-point:ON ACTION controlp INFIELD xmfd004
            {<point name="input.c.xmfd004" />}
            #END add-point
 
         #Ctrlp:input.c.xmfd005
         ON ACTION controlp INFIELD xmfd005
            #add-point:ON ACTION controlp INFIELD xmfd005
            {<point name="input.c.xmfd005" />}
            #END add-point
 
         #Ctrlp:input.c.xmfd006
         ON ACTION controlp INFIELD xmfd006
            #add-point:ON ACTION controlp INFIELD xmfd006
            {<point name="input.c.xmfd006" />}
            #END add-point
 
         #Ctrlp:input.c.xmfd007
         ON ACTION controlp INFIELD xmfd007
            #add-point:ON ACTION controlp INFIELD xmfd007
            {<point name="input.c.xmfd007" />}
            #END add-point
 
         #Ctrlp:input.c.xmfd008
         ON ACTION controlp INFIELD xmfd008
            #add-point:ON ACTION controlp INFIELD xmfd008
            {<point name="input.c.xmfd008" />}
            #END add-point
 
         #Ctrlp:input.c.xmfd009
         ON ACTION controlp INFIELD xmfd009
            #add-point:ON ACTION controlp INFIELD xmfd009
            {<point name="input.c.xmfd009" />}
            #END add-point
 
         #Ctrlp:input.c.xmfd010
         ON ACTION controlp INFIELD xmfd010
            #add-point:ON ACTION controlp INFIELD xmfd010
            {<point name="input.c.xmfd010" />}
            #END add-point
 
         #Ctrlp:input.c.xmfd011
         ON ACTION controlp INFIELD xmfd011
            #add-point:ON ACTION controlp INFIELD xmfd011
            {<point name="input.c.xmfd011" />}
            #END add-point
 
         #Ctrlp:input.c.xmfd029
         ON ACTION controlp INFIELD xmfd029
            #add-point:ON ACTION controlp INFIELD xmfd029
            {<point name="input.c.xmfd029" />}
            #END add-point
 
         #Ctrlp:input.c.xmfd012
         ON ACTION controlp INFIELD xmfd012
            #add-point:ON ACTION controlp INFIELD xmfd012
            {<point name="input.c.xmfd012" />}
            #END add-point
 
         #Ctrlp:input.c.xmfd013
         ON ACTION controlp INFIELD xmfd013
            #add-point:ON ACTION controlp INFIELD xmfd013
            {<point name="input.c.xmfd013" />}
            #END add-point
 
         #Ctrlp:input.c.xmfd014
         ON ACTION controlp INFIELD xmfd014
            #add-point:ON ACTION controlp INFIELD xmfd014
            {<point name="input.c.xmfd014" />}
            #END add-point
 
         #Ctrlp:input.c.xmfd015
         ON ACTION controlp INFIELD xmfd015
            #add-point:ON ACTION controlp INFIELD xmfd015
            {<point name="input.c.xmfd015" />}
            #END add-point
 
         #Ctrlp:input.c.xmfd016
         ON ACTION controlp INFIELD xmfd016
            #add-point:ON ACTION controlp INFIELD xmfd016
            {<point name="input.c.xmfd016" />}
            #END add-point
 
         #Ctrlp:input.c.xmfd017
         ON ACTION controlp INFIELD xmfd017
            #add-point:ON ACTION controlp INFIELD xmfd017
            {<point name="input.c.xmfd017" />}
            #END add-point
 
         #Ctrlp:input.c.xmfd018
         ON ACTION controlp INFIELD xmfd018
            #add-point:ON ACTION controlp INFIELD xmfd018
            {<point name="input.c.xmfd018" />}
            #END add-point
 
         #Ctrlp:input.c.xmfd019
         ON ACTION controlp INFIELD xmfd019
            #add-point:ON ACTION controlp INFIELD xmfd019
            {<point name="input.c.xmfd019" />}
            #END add-point
 
         #Ctrlp:input.c.xmfd020
         ON ACTION controlp INFIELD xmfd020
            #add-point:ON ACTION controlp INFIELD xmfd020
            {<point name="input.c.xmfd020" />}
            #END add-point
 
         #Ctrlp:input.c.xmfd021
         ON ACTION controlp INFIELD xmfd021
            #add-point:ON ACTION controlp INFIELD xmfd021
            {<point name="input.c.xmfd021" />}
            #END add-point
 
         #Ctrlp:input.c.xmfd022
         ON ACTION controlp INFIELD xmfd022
            #add-point:ON ACTION controlp INFIELD xmfd022
            {<point name="input.c.xmfd022" />}
            #END add-point
 
         #Ctrlp:input.c.xmfd023
         ON ACTION controlp INFIELD xmfd023
            #add-point:ON ACTION controlp INFIELD xmfd023
            {<point name="input.c.xmfd023" />}
            #END add-point
 
         #Ctrlp:input.c.xmfd024
         ON ACTION controlp INFIELD xmfd024
            #add-point:ON ACTION controlp INFIELD xmfd024
            {<point name="input.c.xmfd024" />}
            #END add-point
 
         #Ctrlp:input.c.xmfd025
         ON ACTION controlp INFIELD xmfd025
            #add-point:ON ACTION controlp INFIELD xmfd025
            {<point name="input.c.xmfd025" />}
            #END add-point
 
         #Ctrlp:input.c.xmfd026
         ON ACTION controlp INFIELD xmfd026
            #add-point:ON ACTION controlp INFIELD xmfd026
            {<point name="input.c.xmfd026" />}
            #END add-point
 
         #Ctrlp:input.c.xmfd027
         ON ACTION controlp INFIELD xmfd027
            #add-point:ON ACTION controlp INFIELD xmfd027
            {<point name="input.c.xmfd027" />}
            #END add-point
 
         #Ctrlp:input.c.xmfd028
         ON ACTION controlp INFIELD xmfd028
            #add-point:ON ACTION controlp INFIELD xmfd028
            {<point name="input.c.xmfd028" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_xmfd_m.xmfddocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO xmfd_t (xmfdent,xmfddocno,xmfddocdt,xmfd001,xmfd002,xmfdstus,xmfd003,xmfd004, 
                   xmfd005,xmfd006,xmfd007,xmfd008,xmfd009,xmfd010,xmfd011,xmfd029,xmfd012,xmfd013,xmfd014, 
                   xmfd015,xmfd016,xmfd017,xmfd018,xmfd019,xmfd020,xmfd021,xmfd022,xmfd023,xmfd024,xmfd025, 
                   xmfd026,xmfd027,xmfd028,xmfdownid,xmfdowndp,xmfdcrtid,xmfdcrtdp,xmfdcrtdt,xmfdcnfid, 
                   xmfdcnfdt,xmfdpstid,xmfdpstdt)
               VALUES (g_enterprise,g_xmfd_m.xmfddocno,g_xmfd_m.xmfddocdt,g_xmfd_m.xmfd001,g_xmfd_m.xmfd002, 
                   g_xmfd_m.xmfdstus,g_xmfd_m.xmfd003,g_xmfd_m.xmfd004,g_xmfd_m.xmfd005,g_xmfd_m.xmfd006, 
                   g_xmfd_m.xmfd007,g_xmfd_m.xmfd008,g_xmfd_m.xmfd009,g_xmfd_m.xmfd010,g_xmfd_m.xmfd011, 
                   g_xmfd_m.xmfd029,g_xmfd_m.xmfd012,g_xmfd_m.xmfd013,g_xmfd_m.xmfd014,g_xmfd_m.xmfd015, 
                   g_xmfd_m.xmfd016,g_xmfd_m.xmfd017,g_xmfd_m.xmfd018,g_xmfd_m.xmfd019,g_xmfd_m.xmfd020, 
                   g_xmfd_m.xmfd021,g_xmfd_m.xmfd022,g_xmfd_m.xmfd023,g_xmfd_m.xmfd024,g_xmfd_m.xmfd025, 
                   g_xmfd_m.xmfd026,g_xmfd_m.xmfd027,g_xmfd_m.xmfd028,g_xmfd_m.xmfdownid,g_xmfd_m.xmfdowndp, 
                   g_xmfd_m.xmfdcrtid,g_xmfd_m.xmfdcrtdp,g_xmfd_m.xmfdcrtdt,g_xmfd_m.xmfdcnfid,g_xmfd_m.xmfdcnfdt, 
                   g_xmfd_m.xmfdpstid,g_xmfd_m.xmfdpstdt) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_xmfd_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL axmt410_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE xmfd_t SET (xmfddocno,xmfddocdt,xmfd001,xmfd002,xmfdstus,xmfd003,xmfd004,xmfd005, 
                   xmfd006,xmfd007,xmfd008,xmfd009,xmfd010,xmfd011,xmfd029,xmfd012,xmfd013,xmfd014,xmfd015, 
                   xmfd016,xmfd017,xmfd018,xmfd019,xmfd020,xmfd021,xmfd022,xmfd023,xmfd024,xmfd025,xmfd026, 
                   xmfd027,xmfd028,xmfdownid,xmfdowndp,xmfdcrtid,xmfdcrtdp,xmfdcrtdt,xmfdcnfid,xmfdcnfdt, 
                   xmfdpstid,xmfdpstdt) = (g_xmfd_m.xmfddocno,g_xmfd_m.xmfddocdt,g_xmfd_m.xmfd001,g_xmfd_m.xmfd002, 
                   g_xmfd_m.xmfdstus,g_xmfd_m.xmfd003,g_xmfd_m.xmfd004,g_xmfd_m.xmfd005,g_xmfd_m.xmfd006, 
                   g_xmfd_m.xmfd007,g_xmfd_m.xmfd008,g_xmfd_m.xmfd009,g_xmfd_m.xmfd010,g_xmfd_m.xmfd011, 
                   g_xmfd_m.xmfd029,g_xmfd_m.xmfd012,g_xmfd_m.xmfd013,g_xmfd_m.xmfd014,g_xmfd_m.xmfd015, 
                   g_xmfd_m.xmfd016,g_xmfd_m.xmfd017,g_xmfd_m.xmfd018,g_xmfd_m.xmfd019,g_xmfd_m.xmfd020, 
                   g_xmfd_m.xmfd021,g_xmfd_m.xmfd022,g_xmfd_m.xmfd023,g_xmfd_m.xmfd024,g_xmfd_m.xmfd025, 
                   g_xmfd_m.xmfd026,g_xmfd_m.xmfd027,g_xmfd_m.xmfd028,g_xmfd_m.xmfdownid,g_xmfd_m.xmfdowndp, 
                   g_xmfd_m.xmfdcrtid,g_xmfd_m.xmfdcrtdp,g_xmfd_m.xmfdcrtdt,g_xmfd_m.xmfdcnfid,g_xmfd_m.xmfdcnfdt, 
                   g_xmfd_m.xmfdpstid,g_xmfd_m.xmfdpstdt)
                WHERE xmfdent = g_enterprise AND xmfddocno = g_xmfddocno_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("xmfd_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
			   #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_xmfd_m_t)
               LET g_log2 = util.JSON.stringify(g_xmfd_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_xmfddocno_t = g_xmfd_m.xmfddocno
 
            #controlp
            
      END INPUT
   
]]>
</section>
  <section id="axmt410.input.other" ver="1" status="" src="s">
<![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD xmfddocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xmffseq
               WHEN "s_detail2"
                  NEXT FIELD xmfgseq
               WHEN "s_detail3"
                  NEXT FIELD xmfeseq
               WHEN "s_detail4"
                  NEXT FIELD xmffseq1
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
</section>
  <section id="axmt410.insert" ver="6" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION axmt410_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_xmff_d.clear()   
   CALL g_xmff2_d.clear()  
   CALL g_xmff3_d.clear()  
   CALL g_xmff4_d.clear()  
 
 
   INITIALIZE g_xmfd_m.* LIKE xmfd_t.*             #DEFAULT 設定
   
   LET g_xmfddocno_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_xmfd_m.xmfdownid = g_user
      LET g_xmfd_m.xmfdowndp = g_dept
      LET g_xmfd_m.xmfdcrtid = g_user
      LET g_xmfd_m.xmfdcrtdp = g_dept 
      LET g_xmfd_m.xmfdcrtdt = cl_get_current()
      LET g_xmfd_m.xmfdmodid = ""
      LET g_xmfd_m.xmfdmoddt = ""
      LET g_xmfd_m.xmfdstus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_xmfd_m.xmfd004 = "0"
      LET g_xmfd_m.xmfd008 = "3"
      LET g_xmfd_m.xmfd023 = "1"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL axmt410_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_xmfd_m.* = g_xmfd_m_t.*
         CALL axmt410_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_xmff_d.clear()
      CALL g_xmff2_d.clear()
      CALL g_xmff3_d.clear()
      CALL g_xmff4_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #將新增的資料併入搜尋條件中
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_xmfddocno_t = g_xmfd_m.xmfddocno
 
   
   LET g_wc = "(",g_wc,  
              " OR ( xmfdent = '" ||g_enterprise|| "' AND",
              " xmfddocno = '", g_xmfd_m.xmfddocno CLIPPED, "' "
 
              , ")) "
   
   CLOSE axmt410_cl
   
END FUNCTION
]]>
</section>
  <section id="axmt410.insert_b" ver="1" status="" src="s">
<![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION axmt410_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','4',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO xmff_t
                  (xmffent,
                   xmffdocno,
                   xmffseq
                   ,xmff001,xmff002,xmff003,xmff004,xmff005,xmff006,xmff007,xmff008,xmff009,xmff010,xmff011,xmff012,xmff013) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_xmff_d[g_detail_idx].xmff001,g_xmff_d[g_detail_idx].xmff002,g_xmff_d[g_detail_idx].xmff003, 
                       g_xmff_d[g_detail_idx].xmff004,g_xmff_d[g_detail_idx].xmff005,g_xmff_d[g_detail_idx].xmff006, 
                       g_xmff_d[g_detail_idx].xmff007,g_xmff_d[g_detail_idx].xmff008,g_xmff_d[g_detail_idx].xmff009, 
                       g_xmff_d[g_detail_idx].xmff010,g_xmff4_d[g_detail_idx].xmff011,g_xmff4_d[g_detail_idx].xmff012, 
                       g_xmff4_d[g_detail_idx].xmff013)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("xmff_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO xmfg_t
                  (xmfgent,
                   xmfgdocno,
                   xmfgseq,xmfg001,xmfg002
                   ,xmfg003,xmfg004) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
                   ,g_xmff2_d[g_detail_idx].xmfg003,g_xmff2_d[g_detail_idx].xmfg004)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("xmfg_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert3" mark="Y"/>}
      #end add-point 
      INSERT INTO xmfe_t
                  (xmfeent,
                   xmfedocno,
                   xmfeseq
                   ,xmfe001,xmfe002,xmfe003,xmfe004,xmfe005) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_xmff3_d[g_detail_idx].xmfe001,g_xmff3_d[g_detail_idx].xmfe002,g_xmff3_d[g_detail_idx].xmfe003, 
                       g_xmff3_d[g_detail_idx].xmfe004,g_xmff3_d[g_detail_idx].xmfe005)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("xmfe_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert3"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
</section>
  <section id="axmt410.lock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION axmt410_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL axmt410_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1','4',"
   #僅鎖定自身table
   LET ls_group = "xmff_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN axmt410_bcl USING g_enterprise,
                                       g_xmfd_m.xmfddocno,g_xmff_d[g_detail_idx].xmffseq     
      IF SQLCA.sqlcode THEN
         CALL cl_err("axmt410_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "xmfg_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN axmt410_bcl2 USING g_enterprise,
                                             g_xmfd_m.xmfddocno,g_xmff2_d[g_detail_idx].xmfgseq,g_xmff2_d[g_detail_idx].xmfg001, 
                                                 g_xmff2_d[g_detail_idx].xmfg002
      IF SQLCA.sqlcode THEN
         CALL cl_err("axmt410_bcl2",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "xmfe_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN axmt410_bcl3 USING g_enterprise,
                                             g_xmfd_m.xmfddocno,g_xmff3_d[g_detail_idx].xmfeseq
      IF SQLCA.sqlcode THEN
         CALL cl_err("axmt410_bcl3",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="axmt410.main" ver="12" status="" src="s">
<![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axm","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT xmfddocno,'',xmfddocdt,xmfd001,'',xmfd002,'',xmfdstus,xmfd003,'',xmfd004, 
       xmfd005,xmfd006,xmfd007,xmfd008,xmfd009,'',xmfd010,'',xmfd011,xmfd029,xmfd012,'',xmfd013,xmfd014, 
       xmfd015,'',xmfd016,'',xmfd017,'',xmfd018,'',xmfd019,'',xmfd020,'',xmfd021,'',xmfd022,'','',xmfd023, 
       xmfd024,xmfd025,xmfd026,xmfd027,xmfd028,xmfdownid,'',xmfdowndp,'',xmfdcrtid,'',xmfdcrtdp,'',xmfdcrtdt, 
       xmfdmodid,'',xmfdmoddt,xmfdcnfid,'',xmfdcnfdt,xmfdpstid,'',xmfdpstdt", 
                      " FROM xmfd_t",
                      " WHERE xmfdent= ? AND xmfddocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt410_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE xmfddocno,xmfddocdt,xmfd001,xmfd002,xmfdstus,xmfd003,xmfd004,xmfd005, 
       xmfd006,xmfd007,xmfd008,xmfd009,xmfd010,xmfd011,xmfd029,xmfd012,xmfd013,xmfd014,xmfd015,xmfd016, 
       xmfd017,xmfd018,xmfd019,xmfd020,xmfd021,xmfd022,xmfd023,xmfd024,xmfd025,xmfd026,xmfd027,xmfd028, 
       xmfdownid,xmfdowndp,xmfdcrtid,xmfdcrtdp,xmfdcrtdt,xmfdmodid,xmfdmoddt,xmfdcnfid,xmfdcnfdt,xmfdpstid, 
       xmfdpstdt,t1.ooag011 ,t2.ooefl003 ,t3.pmaal003 ,t4.xmfal003 ,t5.oocql004 ,t6.ooibl004 ,t7.xmahl003 , 
       t8.oocql004 ,t9.oocql004 ,t10.oofb011 ,t11.ooag011 ,t12.ooefl003 ,t13.ooag011 ,t14.ooefl003 , 
       t15.ooag011 ,t16.ooag011 ,t17.ooag011",
               " FROM xmfd_t",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent='"||g_enterprise||"' AND t1.ooag001=xmfd001  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=xmfd002 AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t3 ON t3.pmaalent='"||g_enterprise||"' AND t3.pmaal001=xmfd003 AND t3.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN xmfal_t t4 ON t4.xmfalent='"||g_enterprise||"' AND t4.xmfaldocno=xmfd009 AND t4.xmfal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t5 ON t5.oocqlent='"||g_enterprise||"' AND t5.oocql001='238' AND t5.oocql002=xmfd015 AND t5.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooibl_t t6 ON t6.ooiblent='"||g_enterprise||"' AND t6.ooibl002=xmfd016 AND t6.ooibl003='"||g_dlang||"' ",
               " LEFT JOIN xmahl_t t7 ON t7.xmahlent='"||g_enterprise||"' AND t7.xmahl001=xmfd017 AND t7.xmahl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t8 ON t8.oocqlent='"||g_enterprise||"' AND t8.oocql001='275' AND t8.oocql002=xmfd018 AND t8.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t9 ON t9.oocqlent='"||g_enterprise||"' AND t9.oocql001='263' AND t9.oocql002=xmfd019 AND t9.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oofb_t t10 ON t10.oofbent='"||g_enterprise||"' AND t10.oofb001=xmfd022  ",
               " LEFT JOIN ooag_t t11 ON t11.ooagent='"||g_enterprise||"' AND t11.ooag001=xmfdownid  ",
               " LEFT JOIN ooefl_t t12 ON t12.ooeflent='"||g_enterprise||"' AND t12.ooefl001=xmfdowndp AND t12.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t13 ON t13.ooagent='"||g_enterprise||"' AND t13.ooag001=xmfdcrtid  ",
               " LEFT JOIN ooefl_t t14 ON t14.ooeflent='"||g_enterprise||"' AND t14.ooefl001=xmfdcrtdp AND t14.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t15 ON t15.ooagent='"||g_enterprise||"' AND t15.ooag001=xmfdmodid  ",
               " LEFT JOIN ooag_t t16 ON t16.ooagent='"||g_enterprise||"' AND t16.ooag001=xmfdcnfid  ",
               " LEFT JOIN ooag_t t17 ON t17.ooagent='"||g_enterprise||"' AND t17.ooag001=xmfdpstid  ",
 
               " WHERE xmfdent = '" ||g_enterprise|| "' AND xmfddocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE axmt410_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axmt410 WITH FORM cl_ap_formpath("axm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axmt410_init()   
 
      #進入選單 Menu (="N")
      CALL axmt410_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axmt410
      
   END IF 
   
   CLOSE axmt410_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="axmt410.modify" ver="7" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION axmt410_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_xmfd_m.xmfddocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   ERROR ""
  
   LET g_xmfddocno_t = g_xmfd_m.xmfddocno
 
   CALL s_transaction_begin()
   
   OPEN axmt410_cl USING g_enterprise,g_xmfd_m.xmfddocno
   IF STATUS THEN
      CALL cl_err("OPEN axmt410_cl:", STATUS, 1)
      CLOSE axmt410_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axmt410_master_referesh USING g_xmfd_m.xmfddocno INTO g_xmfd_m.xmfddocno,g_xmfd_m.xmfddocdt, 
       g_xmfd_m.xmfd001,g_xmfd_m.xmfd002,g_xmfd_m.xmfdstus,g_xmfd_m.xmfd003,g_xmfd_m.xmfd004,g_xmfd_m.xmfd005, 
       g_xmfd_m.xmfd006,g_xmfd_m.xmfd007,g_xmfd_m.xmfd008,g_xmfd_m.xmfd009,g_xmfd_m.xmfd010,g_xmfd_m.xmfd011, 
       g_xmfd_m.xmfd029,g_xmfd_m.xmfd012,g_xmfd_m.xmfd013,g_xmfd_m.xmfd014,g_xmfd_m.xmfd015,g_xmfd_m.xmfd016, 
       g_xmfd_m.xmfd017,g_xmfd_m.xmfd018,g_xmfd_m.xmfd019,g_xmfd_m.xmfd020,g_xmfd_m.xmfd021,g_xmfd_m.xmfd022, 
       g_xmfd_m.xmfd023,g_xmfd_m.xmfd024,g_xmfd_m.xmfd025,g_xmfd_m.xmfd026,g_xmfd_m.xmfd027,g_xmfd_m.xmfd028, 
       g_xmfd_m.xmfdownid,g_xmfd_m.xmfdowndp,g_xmfd_m.xmfdcrtid,g_xmfd_m.xmfdcrtdp,g_xmfd_m.xmfdcrtdt, 
       g_xmfd_m.xmfdmodid,g_xmfd_m.xmfdmoddt,g_xmfd_m.xmfdcnfid,g_xmfd_m.xmfdcnfdt,g_xmfd_m.xmfdpstid, 
       g_xmfd_m.xmfdpstdt,g_xmfd_m.xmfd001_desc,g_xmfd_m.xmfd002_desc,g_xmfd_m.xmfd003_desc,g_xmfd_m.xmfd009_desc, 
       g_xmfd_m.xmfd015_desc,g_xmfd_m.xmfd016_desc,g_xmfd_m.xmfd017_desc,g_xmfd_m.xmfd018_desc,g_xmfd_m.xmfd019_desc, 
       g_xmfd_m.xmfd022_desc,g_xmfd_m.xmfdownid_desc,g_xmfd_m.xmfdowndp_desc,g_xmfd_m.xmfdcrtid_desc, 
       g_xmfd_m.xmfdcrtdp_desc,g_xmfd_m.xmfdmodid_desc,g_xmfd_m.xmfdcnfid_desc,g_xmfd_m.xmfdpstid_desc 

 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_xmfd_m.xmfddocno,SQLCA.sqlcode,0)
      CLOSE axmt410_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL axmt410_show()
   WHILE TRUE
      LET g_xmfddocno_t = g_xmfd_m.xmfddocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_xmfd_m.xmfdmodid = g_user 
LET g_xmfd_m.xmfdmoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL axmt410_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_xmfd_m.* = g_xmfd_m_t.*
         CALL axmt410_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE xmfd_t SET (xmfdmodid,xmfdmoddt) = (g_xmfd_m.xmfdmodid,g_xmfd_m.xmfdmoddt)
       WHERE xmfdent = g_enterprise AND xmfddocno = g_xmfddocno_t
 
                  
      #若單頭key欄位有變更
      IF g_xmfd_m.xmfddocno != g_xmfddocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE xmff_t SET xmffdocno = g_xmfd_m.xmfddocno
 
          WHERE xmffent = g_enterprise AND xmffdocno = g_xmfddocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("xmff_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("xmff_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         UPDATE xmfg_t
            SET xmfgdocno = g_xmfd_m.xmfddocno
 
          WHERE xmfgent = g_enterprise AND
                xmfgdocno = g_xmfddocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("xmfg_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("xmfg_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update3" mark="Y"/>}
         #end add-point
         UPDATE xmfe_t
            SET xmfedocno = g_xmfd_m.xmfddocno
 
          WHERE xmfeent = g_enterprise AND
                xmfedocno = g_xmfddocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update3"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("xmfe_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("xmfe_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update3"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_xmfd_m.xmfddocno,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE axmt410_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_xmfd_m.xmfddocno,'U')
 
END FUNCTION   
]]>
</section>
  <section id="axmt410.other_dialog" ver="2" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="axmt410.other_function" ver="1" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="axmt410.query" ver="2" status="" src="s">
<![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION axmt410_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_xmff_d.clear()
   CALL g_xmff2_d.clear()
   CALL g_xmff3_d.clear()
   CALL g_xmff4_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL axmt410_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL axmt410_browser_fill("")
      CALL axmt410_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL axmt410_filter_show('xmfddocno')
   CALL axmt410_filter_show('xmfddocdt')
   CALL axmt410_filter_show('xmfd001')
   CALL axmt410_filter_show('xmfd002')
   CALL axmt410_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL axmt410_fetch("F") 
   END IF
 
END FUNCTION
]]>
</section>
  <section id="axmt410.reproduce" ver="3" status="" src="s">
<![CDATA[#+ 資料複製
PRIVATE FUNCTION axmt410_reproduce()
   DEFINE l_newno     LIKE xmfd_t.xmfddocno 
   DEFINE l_oldno     LIKE xmfd_t.xmfddocno 
 
   DEFINE l_master    RECORD LIKE xmfd_t.*
   DEFINE l_detail    RECORD LIKE xmff_t.*
   DEFINE l_detail2    RECORD LIKE xmfg_t.*
 
   DEFINE l_detail3    RECORD LIKE xmfe_t.*
 
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_xmfd_m.xmfddocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_xmfddocno_t = g_xmfd_m.xmfddocno
 
    
   LET g_xmfd_m.xmfddocno = ""
 
    
   CALL axmt410_set_entry('a')
   CALL axmt410_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_xmfd_m.xmfdownid = g_user
      LET g_xmfd_m.xmfdowndp = g_dept
      LET g_xmfd_m.xmfdcrtid = g_user
      LET g_xmfd_m.xmfdcrtdp = g_dept 
      LET g_xmfd_m.xmfdcrtdt = cl_get_current()
      LET g_xmfd_m.xmfdmodid = ""
      LET g_xmfd_m.xmfdmoddt = ""
      LET g_xmfd_m.xmfdstus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL axmt410_input("r")
   
      LET g_xmfd_m.xmfddocno_desc = ''
   DISPLAY BY NAME g_xmfd_m.xmfddocno_desc
 
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
   
   #將新增的資料併入搜尋條件中
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = "(",g_wc,  
              " OR (",
              " xmfddocno = '", g_xmfd_m.xmfddocno CLIPPED, "' "
 
              , ")) "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="axmt410.set_entry" ver="1" status="" src="s">
<![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION axmt410_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("xmfddocno",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="axmt410.set_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION axmt410_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
</section>
  <section id="axmt410.set_no_entry" ver="1" status="" src="s">
<![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION axmt410_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("xmfddocno",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="axmt410.set_no_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION axmt410_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
</section>
  <section id="axmt410.set_pk_array" ver="1" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION axmt410_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_xmfd_m.xmfddocno
   LET g_pk_array[1].column = 'xmfddocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
</section>
  <section id="axmt410.show" ver="5" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION axmt410_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL axmt410_b_fill() #單身填充
      CALL axmt410_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_xmfd_m.xmfdownid_desc = cl_get_username(g_xmfd_m.xmfdownid)
      #LET g_xmfd_m.xmfdowndp_desc = cl_get_deptname(g_xmfd_m.xmfdowndp)
      #LET g_xmfd_m.xmfdcrtid_desc = cl_get_username(g_xmfd_m.xmfdcrtid)
      #LET g_xmfd_m.xmfdcrtdp_desc = cl_get_deptname(g_xmfd_m.xmfdcrtdp)
      #LET g_xmfd_m.xmfdmodid_desc = cl_get_username(g_xmfd_m.xmfdmodid)
      #LET g_xmfd_m.xmfdcnfid_desc = cl_get_deptname(g_xmfd_m.xmfdcnfid)
      #LET g_xmfd_m.xmfdpstid_desc = cl_get_deptname(g_xmfd_m.xmfdpstid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL axmt410_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xmfd_m.xmfddocno,g_xmfd_m.xmfddocno_desc,g_xmfd_m.xmfddocdt,g_xmfd_m.xmfd001,g_xmfd_m.xmfd001_desc, 
       g_xmfd_m.xmfd002,g_xmfd_m.xmfd002_desc,g_xmfd_m.xmfdstus,g_xmfd_m.xmfd003,g_xmfd_m.xmfd003_desc, 
       g_xmfd_m.xmfd004,g_xmfd_m.xmfd005,g_xmfd_m.xmfd006,g_xmfd_m.xmfd007,g_xmfd_m.xmfd008,g_xmfd_m.xmfd009, 
       g_xmfd_m.xmfd009_desc,g_xmfd_m.xmfd010,g_xmfd_m.xmfd010_desc,g_xmfd_m.xmfd011,g_xmfd_m.xmfd029, 
       g_xmfd_m.xmfd012,g_xmfd_m.xmfd012_desc,g_xmfd_m.xmfd013,g_xmfd_m.xmfd014,g_xmfd_m.xmfd015,g_xmfd_m.xmfd015_desc, 
       g_xmfd_m.xmfd016,g_xmfd_m.xmfd016_desc,g_xmfd_m.xmfd017,g_xmfd_m.xmfd017_desc,g_xmfd_m.xmfd018, 
       g_xmfd_m.xmfd018_desc,g_xmfd_m.xmfd019,g_xmfd_m.xmfd019_desc,g_xmfd_m.xmfd020,g_xmfd_m.xmfd020_desc, 
       g_xmfd_m.xmfd021,g_xmfd_m.xmfd021_desc,g_xmfd_m.xmfd022,g_xmfd_m.xmfd022_desc,g_xmfd_m.oofb017, 
       g_xmfd_m.xmfd023,g_xmfd_m.xmfd024,g_xmfd_m.xmfd025,g_xmfd_m.xmfd026,g_xmfd_m.xmfd027,g_xmfd_m.xmfd028, 
       g_xmfd_m.xmfdownid,g_xmfd_m.xmfdownid_desc,g_xmfd_m.xmfdowndp,g_xmfd_m.xmfdowndp_desc,g_xmfd_m.xmfdcrtid, 
       g_xmfd_m.xmfdcrtid_desc,g_xmfd_m.xmfdcrtdp,g_xmfd_m.xmfdcrtdp_desc,g_xmfd_m.xmfdcrtdt,g_xmfd_m.xmfdmodid, 
       g_xmfd_m.xmfdmodid_desc,g_xmfd_m.xmfdmoddt,g_xmfd_m.xmfdcnfid,g_xmfd_m.xmfdcnfid_desc,g_xmfd_m.xmfdcnfdt, 
       g_xmfd_m.xmfdpstid,g_xmfd_m.xmfdpstid_desc,g_xmfd_m.xmfdpstdt
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_xmfd_m.xmfdstus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_xmff_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_xmff2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_xmff3_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body3.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_xmff4_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body4.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL axmt410_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="axmt410.signature" ver="7" status="" src="s">
<![CDATA[   #此段落由子樣板a39產生
#+ BPM提交
PRIVATE FUNCTION axmt410_send()
 
   #add-point:send段define
   {<point name="send.define"/>}
   #end add-point 
 
   IF g_xmfd_m.xmfddocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN FALSE
   END IF
 
   #重新取得與顯示完整單據資料(最新單據資料)
   EXECUTE axmt410_master_referesh USING g_xmfd_m.xmfddocno INTO g_xmfd_m.xmfddocno,g_xmfd_m.xmfddocdt, 
       g_xmfd_m.xmfd001,g_xmfd_m.xmfd002,g_xmfd_m.xmfdstus,g_xmfd_m.xmfd003,g_xmfd_m.xmfd004,g_xmfd_m.xmfd005, 
       g_xmfd_m.xmfd006,g_xmfd_m.xmfd007,g_xmfd_m.xmfd008,g_xmfd_m.xmfd009,g_xmfd_m.xmfd010,g_xmfd_m.xmfd011, 
       g_xmfd_m.xmfd029,g_xmfd_m.xmfd012,g_xmfd_m.xmfd013,g_xmfd_m.xmfd014,g_xmfd_m.xmfd015,g_xmfd_m.xmfd016, 
       g_xmfd_m.xmfd017,g_xmfd_m.xmfd018,g_xmfd_m.xmfd019,g_xmfd_m.xmfd020,g_xmfd_m.xmfd021,g_xmfd_m.xmfd022, 
       g_xmfd_m.xmfd023,g_xmfd_m.xmfd024,g_xmfd_m.xmfd025,g_xmfd_m.xmfd026,g_xmfd_m.xmfd027,g_xmfd_m.xmfd028, 
       g_xmfd_m.xmfdownid,g_xmfd_m.xmfdowndp,g_xmfd_m.xmfdcrtid,g_xmfd_m.xmfdcrtdp,g_xmfd_m.xmfdcrtdt, 
       g_xmfd_m.xmfdmodid,g_xmfd_m.xmfdmoddt,g_xmfd_m.xmfdcnfid,g_xmfd_m.xmfdcnfdt,g_xmfd_m.xmfdpstid, 
       g_xmfd_m.xmfdpstdt,g_xmfd_m.xmfd001_desc,g_xmfd_m.xmfd002_desc,g_xmfd_m.xmfd003_desc,g_xmfd_m.xmfd009_desc, 
       g_xmfd_m.xmfd015_desc,g_xmfd_m.xmfd016_desc,g_xmfd_m.xmfd017_desc,g_xmfd_m.xmfd018_desc,g_xmfd_m.xmfd019_desc, 
       g_xmfd_m.xmfd022_desc,g_xmfd_m.xmfdownid_desc,g_xmfd_m.xmfdowndp_desc,g_xmfd_m.xmfdcrtid_desc, 
       g_xmfd_m.xmfdcrtdp_desc,g_xmfd_m.xmfdmodid_desc,g_xmfd_m.xmfdcnfid_desc,g_xmfd_m.xmfdpstid_desc 

 
   ERROR ""
   
   CALL s_transaction_begin()
 
   OPEN axmt410_cl USING g_enterprise,g_xmfd_m.xmfddocno
   IF STATUS THEN
      CALL cl_err("OPEN axmt410_cl:", STATUS, 1)
      CLOSE axmt410_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #鎖住將被更改的資料
   FETCH axmt410_cl INTO g_xmfd_m.xmfddocno,g_xmfd_m.xmfddocno_desc,g_xmfd_m.xmfddocdt,g_xmfd_m.xmfd001, 
       g_xmfd_m.xmfd001_desc,g_xmfd_m.xmfd002,g_xmfd_m.xmfd002_desc,g_xmfd_m.xmfdstus,g_xmfd_m.xmfd003, 
       g_xmfd_m.xmfd003_desc,g_xmfd_m.xmfd004,g_xmfd_m.xmfd005,g_xmfd_m.xmfd006,g_xmfd_m.xmfd007,g_xmfd_m.xmfd008, 
       g_xmfd_m.xmfd009,g_xmfd_m.xmfd009_desc,g_xmfd_m.xmfd010,g_xmfd_m.xmfd010_desc,g_xmfd_m.xmfd011, 
       g_xmfd_m.xmfd029,g_xmfd_m.xmfd012,g_xmfd_m.xmfd012_desc,g_xmfd_m.xmfd013,g_xmfd_m.xmfd014,g_xmfd_m.xmfd015, 
       g_xmfd_m.xmfd015_desc,g_xmfd_m.xmfd016,g_xmfd_m.xmfd016_desc,g_xmfd_m.xmfd017,g_xmfd_m.xmfd017_desc, 
       g_xmfd_m.xmfd018,g_xmfd_m.xmfd018_desc,g_xmfd_m.xmfd019,g_xmfd_m.xmfd019_desc,g_xmfd_m.xmfd020, 
       g_xmfd_m.xmfd020_desc,g_xmfd_m.xmfd021,g_xmfd_m.xmfd021_desc,g_xmfd_m.xmfd022,g_xmfd_m.xmfd022_desc, 
       g_xmfd_m.oofb017,g_xmfd_m.xmfd023,g_xmfd_m.xmfd024,g_xmfd_m.xmfd025,g_xmfd_m.xmfd026,g_xmfd_m.xmfd027, 
       g_xmfd_m.xmfd028,g_xmfd_m.xmfdownid,g_xmfd_m.xmfdownid_desc,g_xmfd_m.xmfdowndp,g_xmfd_m.xmfdowndp_desc, 
       g_xmfd_m.xmfdcrtid,g_xmfd_m.xmfdcrtid_desc,g_xmfd_m.xmfdcrtdp,g_xmfd_m.xmfdcrtdp_desc,g_xmfd_m.xmfdcrtdt, 
       g_xmfd_m.xmfdmodid,g_xmfd_m.xmfdmodid_desc,g_xmfd_m.xmfdmoddt,g_xmfd_m.xmfdcnfid,g_xmfd_m.xmfdcnfid_desc, 
       g_xmfd_m.xmfdcnfdt,g_xmfd_m.xmfdpstid,g_xmfd_m.xmfdpstid_desc,g_xmfd_m.xmfdpstdt
   
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_xmfd_m.xmfddocno,SQLCA.sqlcode,0)
      CLOSE axmt410_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
   LET g_wc2_table2 = " 1=1"
   LET g_wc2_table3 = " 1=1"
 
 
   CALL axmt410_show()
   CALL axmt410_set_pk_array()
   
   #add-point: 提交前的ADP
   {<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_xmfd_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_xmff_d))
   CALL cl_bpm_set_detail_data("s_detail2", util.JSONArray.fromFGL(g_xmff2_d))   CALL cl_bpm_set_detail_data("s_detail3", util.JSONArray.fromFGL(g_xmff3_d))   CALL cl_bpm_set_detail_data("s_detail4", util.JSONArray.fromFGL(g_xmff4_d))
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      CLOSE axmt410_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP
   {<point name="send.after_send" />}
   #end add-point
   
   #完成狀態更新
   CLOSE axmt410_cl
   CALL s_transaction_end('Y','0')
             
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL axmt410_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_row].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL axmt410_ui_headershow()
   CALL axmt410_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
#此段落由子樣板a40產生
#+ BPM抽單
PRIVATE FUNCTION axmt410_draw_out()
 
   #add-point:draw段define
   {<point name="draw.define"/>}
   #end add-point
 
   #檢查資料是否存在
   IF g_xmfd_m.xmfddocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN FALSE
   END IF
 
   #LOCK主檔資料
   CALL s_transaction_begin()
 
   #進行BPM抽單功能
   OPEN axmt410_cl USING g_enterprise,g_xmfd_m.xmfddocno
   IF STATUS THEN
      CALL cl_err("OPEN axmt410_cl:", STATUS, 1)
      CLOSE axmt410_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #鎖住將被更改的資料
   FETCH axmt410_cl INTO g_xmfd_m.xmfddocno,g_xmfd_m.xmfddocno_desc,g_xmfd_m.xmfddocdt,g_xmfd_m.xmfd001, 
       g_xmfd_m.xmfd001_desc,g_xmfd_m.xmfd002,g_xmfd_m.xmfd002_desc,g_xmfd_m.xmfdstus,g_xmfd_m.xmfd003, 
       g_xmfd_m.xmfd003_desc,g_xmfd_m.xmfd004,g_xmfd_m.xmfd005,g_xmfd_m.xmfd006,g_xmfd_m.xmfd007,g_xmfd_m.xmfd008, 
       g_xmfd_m.xmfd009,g_xmfd_m.xmfd009_desc,g_xmfd_m.xmfd010,g_xmfd_m.xmfd010_desc,g_xmfd_m.xmfd011, 
       g_xmfd_m.xmfd029,g_xmfd_m.xmfd012,g_xmfd_m.xmfd012_desc,g_xmfd_m.xmfd013,g_xmfd_m.xmfd014,g_xmfd_m.xmfd015, 
       g_xmfd_m.xmfd015_desc,g_xmfd_m.xmfd016,g_xmfd_m.xmfd016_desc,g_xmfd_m.xmfd017,g_xmfd_m.xmfd017_desc, 
       g_xmfd_m.xmfd018,g_xmfd_m.xmfd018_desc,g_xmfd_m.xmfd019,g_xmfd_m.xmfd019_desc,g_xmfd_m.xmfd020, 
       g_xmfd_m.xmfd020_desc,g_xmfd_m.xmfd021,g_xmfd_m.xmfd021_desc,g_xmfd_m.xmfd022,g_xmfd_m.xmfd022_desc, 
       g_xmfd_m.oofb017,g_xmfd_m.xmfd023,g_xmfd_m.xmfd024,g_xmfd_m.xmfd025,g_xmfd_m.xmfd026,g_xmfd_m.xmfd027, 
       g_xmfd_m.xmfd028,g_xmfd_m.xmfdownid,g_xmfd_m.xmfdownid_desc,g_xmfd_m.xmfdowndp,g_xmfd_m.xmfdowndp_desc, 
       g_xmfd_m.xmfdcrtid,g_xmfd_m.xmfdcrtid_desc,g_xmfd_m.xmfdcrtdp,g_xmfd_m.xmfdcrtdp_desc,g_xmfd_m.xmfdcrtdt, 
       g_xmfd_m.xmfdmodid,g_xmfd_m.xmfdmodid_desc,g_xmfd_m.xmfdmoddt,g_xmfd_m.xmfdcnfid,g_xmfd_m.xmfdcnfid_desc, 
       g_xmfd_m.xmfdcnfdt,g_xmfd_m.xmfdpstid,g_xmfd_m.xmfdpstid_desc,g_xmfd_m.xmfdpstdt
   
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_xmfd_m.xmfddocno,SQLCA.sqlcode,0)
      CLOSE axmt410_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      CLOSE axmt410_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF    
 
   #完成狀態更新
   CLOSE axmt410_cl
   CALL s_transaction_end('Y','0')
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_row].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL axmt410_ui_headershow()  
   CALL axmt410_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
]]>
</section>
  <section id="axmt410.state_change" ver="4" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION axmt410_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_xmfd_m.xmfddocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_xmfd_m.xmfdstus
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "X"
               HIDE OPTION "invalid"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION unconfirmed
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.unconfirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION invalid
         LET lc_state = "X"
         #add-point:action控制
         {<point name="statechange.invalid"/>}
         #end add-point
         EXIT MENU
      ON ACTION confirmed
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.confirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION approved
         LET lc_state = "A"
         #add-point:action控制
         {<point name="statechange.approved"/>}
         #end add-point
         EXIT MENU
      #ON ACTION withdraw
      #   LET lc_state = "D"
      #   #add-point:action控制
      #   {<point name="statechange.withdraw"/>}
      #   #end add-point
      #   EXIT MENU
      ON ACTION rejection
         LET lc_state = "R"
         #add-point:action控制
         {<point name="statechange.rejection"/>}
         #end add-point
         EXIT MENU
      #ON ACTION signing
      #   LET lc_state = "W"
      #   #add-point:action控制
      #   {<point name="statechange.signing"/>}
      #   #end add-point
      #   EXIT MENU
      
      #此段落由子樣板a36產生
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT axmt410_send() THEN
               RETURN
            END IF
         END IF
         LET lc_state = ''   #因為_send()已有執行update動作
 
         EXIT MENU
 
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT axmt410_draw_out() THEN
               RETURN
            END IF
         END IF
         LET lc_state = ''   #因為_draw_out()已有執行update動作
         EXIT MENU
 
 
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "X"
      AND lc_state <> "Y"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE xmfd_t SET xmfdstus = lc_state 
    WHERE xmfdent = g_enterprise AND xmfddocno = g_xmfd_m.xmfddocno
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         
      END CASE
      LET g_xmfd_m.xmfdstus = lc_state
      DISPLAY BY NAME g_xmfd_m.xmfdstus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
</section>
  <section id="axmt410.ui_browser_refresh" ver="2" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION axmt410_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_xmfddocno = g_xmfd_m.xmfddocno 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
</section>
  <section id="axmt410.ui_detailshow" ver="1" status="" src="s">
<![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION axmt410_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail4",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
</section>
  <section id="axmt410.ui_dialog" ver="2" status="" src="s">
<![CDATA[#+ 功能選單
PRIVATE FUNCTION axmt410_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL axmt410_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL axmt410_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_xmfddocno = g_xmfddocno_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL axmt410_fetch('') # reload data
               LET l_ac = 1
               CALL axmt410_ui_detailshow() #Setting the current row 
      
               CALL axmt410_idx_chk()
               #NEXT FIELD xmffseq
         
         END DISPLAY
        
         DISPLAY ARRAY g_xmff_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL axmt410_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL axmt410_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         DISPLAY ARRAY g_xmff2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL axmt410_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               CALL axmt410_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
         DISPLAY ARRAY g_xmff3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL axmt410_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               
               #add-point:page3, before row動作
               {<point name="ui_dialog.body3.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
               CALL axmt410_idx_chk()
               #add-point:page3自定義行為
               {<point name="ui_dialog.body3.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為
            {<point name="ui_dialog.body3.action"/>}
            #end add-point
         
         END DISPLAY
         DISPLAY ARRAY g_xmff4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL axmt410_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_detail_idx = l_ac
               
               #add-point:page4, before row動作
               {<point name="ui_dialog.body4.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_current_page = 4
               CALL axmt410_idx_chk()
               #add-point:page4自定義行為
               {<point name="ui_dialog.body4.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_4)
            
         
            #add-point:page4自定義行為
            {<point name="ui_dialog.body4.action"/>}
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL axmt410_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL axmt410_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL axmt410_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL axmt410_statechange()
            EXIT DIALOG
      
         #此段落由子樣板a32產生
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status
            {<point name="menu.bpm_status" />}
            #END add-point
 
 
 
 
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL axmt410_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL axmt410_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL axmt410_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL axmt410_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL axmt410_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt410_idx_chk()
            
         ON ACTION previous
            CALL axmt410_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt410_idx_chk()
            
         ON ACTION jump
            CALL axmt410_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt410_idx_chk()
            
         ON ACTION next
            CALL axmt410_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt410_idx_chk()
            
         ON ACTION last
            CALL axmt410_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt410_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD xmffseq
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL axmt410_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL axmt410_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL axmt410_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL axmt410_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL axmt410_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL axmt410_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION prog_xmfd001
            LET g_action_choice="prog_xmfd001"
            IF cl_auth_chk_act("prog_xmfd001") THEN
               
               #add-point:ON ACTION prog_xmfd001
               {<point name="menu.prog_xmfd001" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL axmt410_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL axmt410_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL axmt410_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_xmfd_m.xmfddocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
</section>
  <section id="axmt410.ui_headershow" ver="7" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION axmt410_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_xmfd_m.xmfddocno = g_browser[g_current_idx].b_xmfddocno   
 
   EXECUTE axmt410_master_referesh USING g_xmfd_m.xmfddocno INTO g_xmfd_m.xmfddocno,g_xmfd_m.xmfddocdt, 
       g_xmfd_m.xmfd001,g_xmfd_m.xmfd002,g_xmfd_m.xmfdstus,g_xmfd_m.xmfd003,g_xmfd_m.xmfd004,g_xmfd_m.xmfd005, 
       g_xmfd_m.xmfd006,g_xmfd_m.xmfd007,g_xmfd_m.xmfd008,g_xmfd_m.xmfd009,g_xmfd_m.xmfd010,g_xmfd_m.xmfd011, 
       g_xmfd_m.xmfd029,g_xmfd_m.xmfd012,g_xmfd_m.xmfd013,g_xmfd_m.xmfd014,g_xmfd_m.xmfd015,g_xmfd_m.xmfd016, 
       g_xmfd_m.xmfd017,g_xmfd_m.xmfd018,g_xmfd_m.xmfd019,g_xmfd_m.xmfd020,g_xmfd_m.xmfd021,g_xmfd_m.xmfd022, 
       g_xmfd_m.xmfd023,g_xmfd_m.xmfd024,g_xmfd_m.xmfd025,g_xmfd_m.xmfd026,g_xmfd_m.xmfd027,g_xmfd_m.xmfd028, 
       g_xmfd_m.xmfdownid,g_xmfd_m.xmfdowndp,g_xmfd_m.xmfdcrtid,g_xmfd_m.xmfdcrtdp,g_xmfd_m.xmfdcrtdt, 
       g_xmfd_m.xmfdmodid,g_xmfd_m.xmfdmoddt,g_xmfd_m.xmfdcnfid,g_xmfd_m.xmfdcnfdt,g_xmfd_m.xmfdpstid, 
       g_xmfd_m.xmfdpstdt,g_xmfd_m.xmfd001_desc,g_xmfd_m.xmfd002_desc,g_xmfd_m.xmfd003_desc,g_xmfd_m.xmfd009_desc, 
       g_xmfd_m.xmfd015_desc,g_xmfd_m.xmfd016_desc,g_xmfd_m.xmfd017_desc,g_xmfd_m.xmfd018_desc,g_xmfd_m.xmfd019_desc, 
       g_xmfd_m.xmfd022_desc,g_xmfd_m.xmfdownid_desc,g_xmfd_m.xmfdowndp_desc,g_xmfd_m.xmfdcrtid_desc, 
       g_xmfd_m.xmfdcrtdp_desc,g_xmfd_m.xmfdmodid_desc,g_xmfd_m.xmfdcnfid_desc,g_xmfd_m.xmfdpstid_desc 

   CALL axmt410_show()
   
END FUNCTION
]]>
</section>
  <section id="axmt410.unlock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION axmt410_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1','4',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmt410_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmt410_bcl2
   END IF
 
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmt410_bcl3
   END IF
 
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="axmt410.update_b" ver="1" status="" src="s">
<![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION axmt410_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','4',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmff_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE xmff_t 
         SET (xmffdocno,
              xmffseq
              ,xmff001,xmff002,xmff003,xmff004,xmff005,xmff006,xmff007,xmff008,xmff009,xmff010,xmff011,xmff012,xmff013) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_xmff_d[g_detail_idx].xmff001,g_xmff_d[g_detail_idx].xmff002,g_xmff_d[g_detail_idx].xmff003, 
                  g_xmff_d[g_detail_idx].xmff004,g_xmff_d[g_detail_idx].xmff005,g_xmff_d[g_detail_idx].xmff006, 
                  g_xmff_d[g_detail_idx].xmff007,g_xmff_d[g_detail_idx].xmff008,g_xmff_d[g_detail_idx].xmff009, 
                  g_xmff_d[g_detail_idx].xmff010,g_xmff4_d[g_detail_idx].xmff011,g_xmff4_d[g_detail_idx].xmff012, 
                  g_xmff4_d[g_detail_idx].xmff013) 
         WHERE xmffent = g_enterprise AND xmffdocno = ps_keys_bak[1] AND xmffseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("xmff_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("xmff_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmfg_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point     
      UPDATE xmfg_t 
         SET (xmfgdocno,
              xmfgseq,xmfg001,xmfg002
              ,xmfg003,xmfg004) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
              ,g_xmff2_d[g_detail_idx].xmfg003,g_xmff2_d[g_detail_idx].xmfg004) 
         WHERE xmfgent = g_enterprise AND xmfgdocno = ps_keys_bak[1] AND xmfgseq = ps_keys_bak[2] AND xmfg001 = ps_keys_bak[3] AND xmfg002 = ps_keys_bak[4]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("xmfg_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("xmfg_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmfe_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update3" mark="Y"/>}
      #end add-point     
      UPDATE xmfe_t 
         SET (xmfedocno,
              xmfeseq
              ,xmfe001,xmfe002,xmfe003,xmfe004,xmfe005) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_xmff3_d[g_detail_idx].xmfe001,g_xmff3_d[g_detail_idx].xmfe002,g_xmff3_d[g_detail_idx].xmfe003, 
                  g_xmff3_d[g_detail_idx].xmfe004,g_xmff3_d[g_detail_idx].xmfe005) 
         WHERE xmfeent = g_enterprise AND xmfedocno = ps_keys_bak[1] AND xmfeseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update3"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("xmfe_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("xmfe_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update3"/>}
      #end add-point  
   END IF
 
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
</add_points>