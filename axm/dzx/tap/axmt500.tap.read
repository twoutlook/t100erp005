<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="axmt500" std_prog="axmt500" erpver="1.0" module="AXM" ver="11" env="s" zone="t10prd" booking="N" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
    <start_arg value="1" status=""/>
  </other>
  <point name="function.axmt500_xmda003_chk" order="1" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#部門檢查
PRIVATE FUNCTION axmt500_xmda003_chk(p_xmda003)
DEFINE p_xmda003      LIKE xmda_t.xmda003
DEFINE r_success   LIKE type_t.num5

       LET r_success = TRUE
       IF NOT cl_null(p_xmda003) THEN 
         #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
          INITIALIZE g_chkparam.* TO NULL
          
         #設定g_chkparam.*的參數
          LET g_chkparam.arg1 = p_xmda003
          LET g_chkparam.arg2 = g_xmda_m.xmdadocdt
  
         #呼叫檢查存在並帶值的library
          IF NOT cl_chk_exist("v_ooeg001") THEN
             LET r_success = FALSE
             RETURN r_success
          END IF 
       END IF 
       RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.axmt500_xmda027_ref" order="2" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 聯絡人的名稱是抓axmi100的全名顯示
# Memo...........:
# Usage..........: CALL axmt500_xmda027_ref()
# Input parameter: 
# Return code....: 
# Date & Author..: 150512 By whitney
# Modify.........: 151014-00008 by whitney 聯絡人預設交易對象改抓送貨對象
################################################################################
PRIVATE FUNCTION axmt500_xmda027_ref()
   LET g_xmda_m.xmda027_desc = ''
   SELECT pmaj012 INTO g_xmda_m.xmda027_desc
     FROM pmaj_t
    WHERE pmajent = g_enterprise
      AND pmaj001 = g_xmda_m.xmda022
      AND pmaj002 = g_xmda_m.xmda027
   DISPLAY BY NAME g_xmda_m.xmda027_desc
END FUNCTION]]>
  </point>
  <point name="function.axmt500_xmda035_ref" order="3" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#發票類型顯示
PRIVATE FUNCTION axmt500_xmda035_ref(p_xmda035)
DEFINE p_xmda035    LIKE xmda_t.xmda035
DEFINE r_isacl004   LIKE isacl_t.isacl004
 
        INITIALIZE g_ref_fields TO NULL
        LET g_ref_fields[1] = p_xmda035
                    CALL ap_ref_array2(g_ref_fields,"SELECT isacl004 FROM isacl_t WHERE isaclent='"||g_enterprise||"' AND isacl001='"||g_ooef019||"' AND isacl002=? AND isacl003='"||g_dlang||"'","") RETURNING g_rtn_fields
        LET r_isacl004 = '', g_rtn_fields[1] , ''
        RETURN r_isacl004
         
END FUNCTION]]>
  </point>
  <point name="function.axmt500_xmda017_ref" order="4" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#取價方式顯示
PRIVATE FUNCTION axmt500_xmda017_ref(p_xmda017)
DEFINE p_xmda017    LIKE xmda_t.xmda017
DEFINE r_pmaml003   LIKE pmaml_t.pmaml003 

       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = p_xmda017
       CALL ap_ref_array2(g_ref_fields,"SELECT xmahl003 FROM xmahl_t WHERE xmahlent='"||g_enterprise||"' AND xmahl001=? AND xmahl002='"||g_dlang||"'","") RETURNING g_rtn_fields
       LET r_pmaml003 = '', g_rtn_fields[1] , ''
       RETURN r_pmaml003
       
END FUNCTION]]>
  </point>
  <point name="function.axmt500_xmda018_ref" order="5" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#付款條件顯示
PRIVATE FUNCTION axmt500_xmda018_ref(p_xmda018)
DEFINE p_xmda018    LIKE xmda_t.xmda018
DEFINE r_ooidl003   LIKE ooidl_t.ooidl003 

       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = p_xmda018
       CALL ap_ref_array2(g_ref_fields,"SELECT ooidl003 FROM ooidl_t WHERE ooidlent='"||g_enterprise||"' AND ooidl001=? AND ooidl002='"||g_dlang||"'","") RETURNING g_rtn_fields
       LET r_ooidl003 = '', g_rtn_fields[1] , ''
       RETURN r_ooidl003
END FUNCTION]]>
  </point>
  <point name="function.axmt500_docno_xmda_default" order="6" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 取得單據別設定帶出單頭預設值
# Memo...........: 需搭配單據別aooi200的設家
# Usage..........: CALL axmt500_docno_xmda_default()
#                  RETURNING 
# Input parameter: 
# Return code....: 
# Date & Author..: 20150603 By Polly
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt500_docno_xmda_default()
DEFINE  l_success    LIKE type_t.num5   
DEFINE  l_oodbl004   LIKE oodbl_t.oodbl004  #稅別名稱
DEFINE  l_oodb005    LIKE oodb_t.oodb005    #含稅否
DEFINE  l_oodb006    LIKE oodb_t.oodb006    #稅率 
DEFINE  l_oodb011    LIKE oodb_t.oodb011    #取得稅別類型1:正常稅率2:依料件設定  

 
   LET g_xmda_m.xmda004 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda004',g_xmda_m.xmda004)
   LET g_xmda_m.xmda002 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda002',g_xmda_m.xmda002)
   LET g_xmda_m.xmda003 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda003',g_xmda_m.xmda003)
   LET g_xmda_m.xmda005 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda005',g_xmda_m.xmda005)
   LET g_xmda_m.xmda006 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda006',g_xmda_m.xmda006)
   LET g_xmda_m.xmda007 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda007',g_xmda_m.xmda007)
   LET g_xmda_m.xmda008 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda008',g_xmda_m.xmda008)
   LET g_xmda_m.xmda033 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda033',g_xmda_m.xmda033)
   LET g_xmda_m.xmda027 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda027',g_xmda_m.xmda027)
   LET g_xmda_m.xmda009 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda009',g_xmda_m.xmda009)
   LET g_xmda_m.xmda010 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda010',g_xmda_m.xmda010)
   LET g_xmda_m.xmda011 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda011',g_xmda_m.xmda011)
   LET g_xmda_m.xmda035 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda035',g_xmda_m.xmda035)
   LET g_xmda_m.xmda015 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda015',g_xmda_m.xmda015)
   LET g_xmda_m.xmda017 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda017',g_xmda_m.xmda017)
   LET g_xmda_m.xmda018 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda018',g_xmda_m.xmda018)
   LET g_xmda_m.xmda019 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda019',g_xmda_m.xmda019)
   LET g_xmda_m.xmda023 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda023',g_xmda_m.xmda023)
   LET g_xmda_m.xmda032 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda032',g_xmda_m.xmda032)   
   LET g_xmda_m.xmda071 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda071',g_xmda_m.xmda071)
   LET g_xmda_m.xmda050 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda050',g_xmda_m.xmda050)   
   LET g_xmda_m.xmda021 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda021',g_xmda_m.xmda021)
   LET g_xmda_m.xmda022 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda022',g_xmda_m.xmda022)
   LET g_xmda_m.xmda034 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda034',g_xmda_m.xmda034)
   LET g_xmda_m.xmda203 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda203',g_xmda_m.xmda203)
   LET g_xmda_m.xmda024 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda024',g_xmda_m.xmda024)   
   LET g_xmda_m.xmda048 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda048',g_xmda_m.xmda048)
   LET g_xmda_m.xmda049 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda049',g_xmda_m.xmda049)   
   LET g_xmda_m.xmda044 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda044',g_xmda_m.xmda044)
   LET g_xmda_m.xmda030 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda030',g_xmda_m.xmda030)
   LET g_xmda_m.xmda031 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda031',g_xmda_m.xmda031)   
   LET g_xmda_m.xmda045 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda045',g_xmda_m.xmda045)
   LET g_xmda_m.xmda046 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda046',g_xmda_m.xmda046)
   LET g_xmda_m.xmda047 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda047',g_xmda_m.xmda047)
   LET g_xmda_m.xmda028 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda028',g_xmda_m.xmda028)
   LET g_xmda_m.xmda041 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda041',g_xmda_m.xmda041)
   LET g_xmda_m.xmda042 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda042',g_xmda_m.xmda042)
   LET g_xmda_m.xmda043 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda043',g_xmda_m.xmda043)   
   LET g_xmda_m.xmda025 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda025',g_xmda_m.xmda025)
   LET g_xmda_m.xmda026 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda026',g_xmda_m.xmda026)
   LET g_xmda_m.xmda020 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda020',g_xmda_m.xmda020)
   LET g_xmda_m.xmda037 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda037',g_xmda_m.xmda037)
   LET g_xmda_m.xmda038 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda038',g_xmda_m.xmda038)
   LET g_xmda_m.xmda036 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda036',g_xmda_m.xmda036)
   LET g_xmda_m.xmda039 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmda039',g_xmda_m.xmda039)

   #取稅率、單價含稅否、稅別說明
   IF NOT cl_null(g_xmda_m.xmda011) THEN
      CALL s_tax_chk(g_site,g_xmda_m.xmda011)
        RETURNING l_success,g_xmda_m.xmda011_desc,g_xmda_m.xmda013,g_xmda_m.xmda012,l_oodb011                             
   END IF
   #依內外銷決定匯率
   IF NOT cl_null(g_xmda_m.xmda048) AND NOT cl_null(g_xmda_m.xmda015) THEN
      CALL s_axmt540_get_exchange(g_xmda_m.xmda048,g_xmda_m.xmda015,g_xmda_m.xmdadocdt) RETURNING g_xmda_m.xmda016   #modify--151118-00012#1 By shiun   新增傳入參數g_xmda_m.xmdadocdt
   END IF
         
   CALL axmt500_xmdadocno_ref()
   CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda004) RETURNING g_xmda_m.xmda004_desc   
   CALL s_desc_get_person_desc(g_xmda_m.xmda002) RETURNING g_xmda_m.xmda002_desc
   CALL s_desc_get_department_desc(g_xmda_m.xmda003) RETURNING g_xmda_m.xmda003_desc
   CALL axmt500_xmda027_ref()
   CALL s_desc_get_ooib002_desc(g_xmda_m.xmda009) RETURNING g_xmda_m.xmda009_desc
   CALL s_desc_get_acc_desc('238',g_xmda_m.xmda010) RETURNING g_xmda_m.xmda010_desc  
   CALL axmt500_xmda035_ref(g_xmda_m.xmda035) RETURNING g_xmda_m.xmda035_desc
   CALL s_desc_get_currency_desc(g_xmda_m.xmda015) RETURNING g_xmda_m.xmda015_desc 
   CALL axmt500_xmda017_ref(g_xmda_m.xmda017) RETURNING g_xmda_m.xmda017_desc
   CALL axmt500_xmda018_ref(g_xmda_m.xmda018) RETURNING g_xmda_m.xmda018_desc
   CALL s_desc_get_acc_desc('275',g_xmda_m.xmda023) RETURNING g_xmda_m.xmda023_desc
   CALL s_desc_get_acc_desc('297',g_xmda_m.xmda032) RETURNING g_xmda_m.xmda032_desc 
   CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda021) RETURNING g_xmda_m.xmda021_desc    
   CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda022) RETURNING g_xmda_m.xmda022_desc 
   CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda034) RETURNING g_xmda_m.xmda034_desc 
   CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda203) RETURNING g_xmda_m.xmda203_desc 
   CALL axmt500_xmda024_ref(g_xmda_m.xmda024) RETURNING g_xmda_m.xmda024_desc 
   CALL s_desc_get_acc_desc('263',g_xmda_m.xmda020) RETURNING g_xmda_m.xmda020_desc

   DISPLAY BY NAME g_xmda_m.xmda004,g_xmda_m.xmda002,g_xmda_m.xmda003,g_xmda_m.xmda005,g_xmda_m.xmda006
   DISPLAY BY NAME g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda033,g_xmda_m.xmda027,g_xmda_m.xmda009
   DISPLAY BY NAME g_xmda_m.xmda010,g_xmda_m.xmda011,g_xmda_m.xmda012,g_xmda_m.xmda013,g_xmda_m.xmda035
   DISPLAY BY NAME g_xmda_m.xmda015,g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda018,g_xmda_m.xmda019
   DISPLAY BY NAME g_xmda_m.xmda023,g_xmda_m.xmda032,g_xmda_m.xmda071,g_xmda_m.xmda050,g_xmda_m.xmda021
   DISPLAY BY NAME g_xmda_m.xmda022,g_xmda_m.xmda034,g_xmda_m.xmda024,g_xmda_m.xmda048,g_xmda_m.xmda049
   DISPLAY BY NAME g_xmda_m.xmda044,g_xmda_m.xmda030,g_xmda_m.xmda031,g_xmda_m.xmda045,g_xmda_m.xmda046
   DISPLAY BY NAME g_xmda_m.xmda047,g_xmda_m.xmda028,g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmda043
   DISPLAY BY NAME g_xmda_m.xmda025,g_xmda_m.xmda026,g_xmda_m.xmda020,g_xmda_m.xmda037,g_xmda_m.xmda038
   DISPLAY BY NAME g_xmda_m.xmda036,g_xmda_m.xmda039,g_xmda_m.xmda203
   DISPLAY BY NAME g_xmda_m.xmdadocno_desc,g_xmda_m.xmda004_desc,g_xmda_m.xmda002_desc,g_xmda_m.xmda003_desc
   DISPLAY BY NAME g_xmda_m.xmda009_desc,g_xmda_m.xmda010_desc,g_xmda_m.xmda011_desc,g_xmda_m.xmda035_desc,g_xmda_m.xmda015_desc
   DISPLAY BY NAME g_xmda_m.xmda017_desc,g_xmda_m.xmda018_desc,g_xmda_m.xmda023_desc,g_xmda_m.xmda032_desc,g_xmda_m.xmda021_desc
   DISPLAY BY NAME g_xmda_m.xmda022_desc,g_xmda_m.xmda034_desc,g_xmda_m.xmda024_desc,g_xmda_m.xmda020_desc  
   
END FUNCTION]]>
  </point>
  <point name="function.axmt500_xmda004_desc" order="7" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#根據客戶編號帶出其他欄位值
PRIVATE FUNCTION axmt500_xmda004_desc()
  DEFINE l_n           LIKE type_t.num5
  DEFINE l_success     LIKE type_t.num5
  DEFINE l_sql         STRING
  DEFINE l_controlno   LIKE ooha_t.ooha001
  DEFINE l_pmaa027     LIKE pmaa_t.pmaa027
  DEFINE l_oodbl004    LIKE oodbl_t.oodbl004  #稅別名稱
  DEFINE l_oodb005     LIKE oodb_t.oodb005    #含稅否
  DEFINE l_oodb006     LIKE oodb_t.oodb006    #稅率 
  DEFINE l_oodb011     LIKE oodb_t.oodb011    #取得稅別類型1:正常稅率2:依料件設定
  DEFINE l_pmaa096     LIKE pmaa_t.pmaa096    #2015/03/03 by stellar add
  DEFINE l_pmaa097     LIKE pmaa_t.pmaa097    #2015/03/03 by stellar add

  
   LET l_success = TRUE

   IF NOT cl_null(g_xmda_m.xmda004) THEN
      #控制組
      CALL s_control_get_group('2',g_user,g_dept) RETURNING l_success,l_controlno
   
      CALL s_apmm101_default_pmab('2',l_controlno,g_site,g_xmda_m.xmda004) RETURNING g_pmab.*
   
        
      #先判斷欄位是否在單據別設定的預設欄位中，如果存在，則不重新帶值，不存在，則根據供應商帶預設值
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',g_slip,'xmda002') THEN
         LET g_xmda_m.xmda002 = g_pmab.pmab031  #業務人員
      END IF
      
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',g_slip,'xmda003') THEN
         LET g_xmda_m.xmda003 = g_pmab.pmab059  #業務部門
      END IF
      
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',g_slip,'xmda009') THEN
         LET g_xmda_m.xmda009 = g_pmab.pmab037  #收款條件
      END IF 
 
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',g_slip,'xmda010') THEN
         LET g_xmda_m.xmda010 = g_pmab.pmab053  #交易條件
      END IF
      
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',g_slip,'xmda011') THEN
         LET g_xmda_m.xmda011 = g_pmab.pmab034  #稅別
      END IF
      
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',g_slip,'xmda035') THEN
         LET g_xmda_m.xmda035 = g_pmab.pmab056  #發票類型
      END IF
      
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',g_slip,'xmda015') THEN
         LET g_xmda_m.xmda015 = g_pmab.pmab033  #幣別
      END IF
      
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',g_slip,'xmda017') THEN
         LET g_xmda_m.xmda017 = g_pmab.pmab054  #取價方式
      END IF
       
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',g_slip,'xmda020') THEN
         LET g_xmda_m.xmda020 = g_pmab.pmab040  #運輸方式
      END IF
      
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',g_slip,'xmda037') THEN
         LET g_xmda_m.xmda037 = g_pmab.pmab041  #交運起點
      END IF
      
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',g_slip,'xmda038') THEN
         LET g_xmda_m.xmda038 = g_pmab.pmab042  #交運終點
      END IF
      
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',g_slip,'xmda023') THEN
         LET g_xmda_m.xmda023 = g_pmab.pmab038  #銷售通路
      END IF
      
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',g_slip,'xmda024') THEN
         LET g_xmda_m.xmda024 = g_pmab.pmab039  #銷售分類
      END IF   
      
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',g_slip,'xmda048') THEN
         LET g_xmda_m.xmda048 = g_pmab.pmab057  #內外銷
      END IF
      
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',g_slip,'xmda049') THEN
         LET g_xmda_m.xmda049 = g_pmab.pmab058  #取匯率方式      
      END IF      

   END IF
         
      IF cl_null(g_xmda_m.xmda002) THEN
         LET l_pmaa096 = ''
         LET l_pmaa097 = ''
         SELECT pmaa096,pmaa097 INTO l_pmaa096,l_pmaa097
           FROM pmaa_t
          WHERE pmaaent = g_enterprise
            AND pmaa001 = g_xmda_m.xmda004
         IF cl_null(g_xmda_m.xmda002) THEN
            LET g_xmda_m.xmda002 = l_pmaa096
            LET g_xmda_m.xmda003 = l_pmaa097
         END IF
      END IF
      
      IF cl_null(g_xmda_m.xmda002) THEN
         LET g_xmda_m.xmda002 = g_user
         SELECT ooag003 INTO g_xmda_m.xmda003 
           FROM ooag_t 
          WHERE ooagent = g_enterprise 
            AND ooag001 = g_xmda_m.xmda002         
      END IF
 
      #取得銷售分類
      LET g_pmab089 = g_xmda_m.xmda024
      #取稅率、單價含稅否
      IF NOT cl_null(g_xmda_m.xmda011) THEN
         LET l_oodb005 = ''
         LET l_oodb006 = ''
         LET l_oodb011 = ''
         CALL s_tax_chk(g_site,g_xmda_m.xmda011)
           RETURNING l_success,l_oodbl004,l_oodb005,l_oodb006,l_oodb011
           
         IF l_success THEN
            LET g_tax_app = l_oodb011
            LET g_xmda_m.xmda012 = l_oodb006
            LET g_xmda_m.xmda013 = l_oodb005
            LET g_xmda_m.xmda011_desc = l_oodbl004
         END IF           
      END IF
      
      #內外銷
      IF cl_null(g_xmda_m.xmda048) THEN
         LET g_xmda_m.xmda048 = '1'
      END IF 
      #依內外銷決定匯率      
      CALL s_axmt540_get_exchange(g_xmda_m.xmda048,g_xmda_m.xmda015,g_xmda_m.xmdadocdt) RETURNING g_xmda_m.xmda016   #modify--151118-00012#1 By shiun   新增傳入參數g_xmda_m.xmdadocdt
      DISPLAY BY NAME g_xmda_m.xmda016       
      #匯率計算基準
      IF cl_null(g_xmda_m.xmda049) THEN
         LET g_xmda_m.xmda049 = '1'
      END IF 
      
      CALL s_desc_get_person_desc(g_xmda_m.xmda002) RETURNING g_xmda_m.xmda002_desc
      CALL s_desc_get_department_desc(g_xmda_m.xmda003) RETURNING g_xmda_m.xmda003_desc                      
      CALL s_desc_get_ooib002_desc(g_xmda_m.xmda009) RETURNING g_xmda_m.xmda009_desc
      CALL s_desc_get_acc_desc('238',g_xmda_m.xmda010) RETURNING g_xmda_m.xmda010_desc
      CALL s_desc_get_tax_desc1(g_site,g_xmda_m.xmda011) RETURNING g_xmda_m.xmda011_desc         
      CALL s_desc_get_currency_desc(g_xmda_m.xmda015) RETURNING g_xmda_m.xmda015_desc
      CALL axmt500_xmda017_ref(g_xmda_m.xmda017) RETURNING g_xmda_m.xmda017_desc
      CALL s_desc_get_acc_desc('263',g_xmda_m.xmda020) RETURNING g_xmda_m.xmda020_desc      
      CALL s_desc_get_acc_desc('275',g_xmda_m.xmda023) RETURNING g_xmda_m.xmda023_desc
      CALL axmt500_xmda035_ref(g_xmda_m.xmda035) RETURNING g_xmda_m.xmda035_desc
      CALL axmt500_xmda024_ref(g_xmda_m.xmda024) RETURNING g_xmda_m.xmda024_desc
      CALL s_apmi011_location_ref(g_xmda_m.xmda020,g_xmda_m.xmda037) RETURNING g_xmda_m.xmda037_desc
      CALL s_apmi011_location_ref(g_xmda_m.xmda020,g_xmda_m.xmda038) RETURNING g_xmda_m.xmda038_desc
      CALL axmt500_xmda018_ref(g_xmda_m.xmda018) RETURNING g_xmda_m.xmda018_desc
      CALL axmt500_xmda035_ref(g_xmda_m.xmda035) RETURNING g_xmda_m.xmda035_desc

      DISPLAY BY NAME g_xmda_m.xmda002,g_xmda_m.xmda002_desc,g_xmda_m.xmda003,g_xmda_m.xmda003_desc,g_xmda_m.xmda009,
                      g_xmda_m.xmda009_desc,g_xmda_m.xmda010,g_xmda_m.xmda010_desc,g_xmda_m.xmda011,
                      g_xmda_m.xmda011_desc,g_xmda_m.xmda012,g_xmda_m.xmda013,g_xmda_m.xmda015,g_xmda_m.xmda015_desc,
                      g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda017_desc,g_xmda_m.xmda020,g_xmda_m.xmda020_desc,
                      g_xmda_m.xmda023,g_xmda_m.xmda023_desc,g_xmda_m.xmda024,g_xmda_m.xmda024_desc,g_xmda_m.xmda035,
                      g_xmda_m.xmda035_desc,g_xmda_m.xmda037,g_xmda_m.xmda037_desc,g_xmda_m.xmda038,g_xmda_m.xmda038_desc,
                      g_xmda_m.xmda018,g_xmda_m.xmda018_desc,g_xmda_m.xmda035,g_xmda_m.xmda035_desc

      
      #收款客戶
      LET g_xmda_m.xmda021 = ''
      LET g_xmda_m.xmda021_desc = ''
      CALL s_axmt540_client_partner(g_xmda_m.xmdadocno,g_xmda_m.xmda004,'1') RETURNING g_xmda_m.xmda021
      LET g_xmda_m_o.xmda021 = g_xmda_m.xmda021
      CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda021) RETURNING g_xmda_m.xmda021_desc
      DISPLAY BY NAME g_xmda_m.xmda021,g_xmda_m.xmda021_desc      

      #依收款客戶抓取預設帳款地址簡碼
      CALL axmt500_get_xmdc026() RETURNING g_xmda_m.xmda026
      IF NOT cl_null(g_xmda_m.xmda021) AND NOT cl_null(g_xmda_m.xmda026) THEN 
         CALL axmt500_xmda025_ref(g_xmda_m.xmda021,g_xmda_m.xmda026) RETURNING g_xmda_m.xmda026_desc,g_xmda_m.oofb0172
         DISPLAY BY NAME g_xmda_m.xmda026_desc,g_xmda_m.oofb0172
      END IF  
      
      #收貨客戶
      LET g_xmda_m.xmda022 = ''
      LET g_xmda_m.xmda022_desc = ''
      CALL s_axmt540_client_partner(g_xmda_m.xmdadocno,g_xmda_m.xmda004,'2') RETURNING g_xmda_m.xmda022
      LET g_xmda_m_o.xmda022 = g_xmda_m.xmda022
      CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda022) RETURNING g_xmda_m.xmda022_desc    
      DISPLAY BY NAME g_xmda_m.xmda022,g_xmda_m.xmda022_desc
      
      #依收貨客戶抓取預設收貨地址
      CALL axmt500_get_xmdc025() RETURNING g_xmda_m.xmda025
      IF NOT cl_null(g_xmda_m.xmda022) AND NOT cl_null(g_xmda_m.xmda025) THEN
         CALL axmt500_xmda025_ref(g_xmda_m.xmda022,g_xmda_m.xmda025) RETURNING g_xmda_m.xmda025_desc,g_xmda_m.oofb0171
         DISPLAY BY NAME g_xmda_m.xmda025_desc,g_xmda_m.oofb0171
      END IF
      
      #發票客戶
      LET g_xmda_m.xmda203 = ''
      LET g_xmda_m.xmda203_desc = ''      
      CALL s_axmt540_client_partner(g_xmda_m.xmdadocno,g_xmda_m.xmda004,'3') RETURNING g_xmda_m.xmda203
      LET g_xmda_m_o.xmda203 = g_xmda_m.xmda203
      CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda203) RETURNING g_xmda_m.xmda203_desc
      DISPLAY BY NAME g_xmda_m.xmda203,g_xmda_m.xmda203_desc      

      #客戶連絡人
      CALL axmt500_get_xmda027()  #151014-00008 by whitney add

      LET g_xmda_m_o.* = g_xmda_m.*  #150921 by whitney add

END FUNCTION]]>
  </point>
  <point name="function.axmt500_xmdc001_chk" order="8" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#料件編號檢查
PRIVATE FUNCTION axmt500_xmdc001_chk(p_xmdc001)
DEFINE p_xmdc001     LIKE xmdc_t.xmdc001
DEFINE l_flag        LIKE type_t.num5
DEFINE l_success     LIKE type_t.num5
DEFINE r_success     LIKE type_t.num5

       LET r_success = TRUE
       
       IF NOT cl_null(p_xmdc001) THEN            
          INITIALIZE g_chkparam.* TO NULL
          LET g_chkparam.arg1 = p_xmdc001
          IF NOT cl_chk_exist("v_imaf001_17") THEN
             LET r_success = FALSE
             RETURN r_success
          END IF
          IF NOT s_control_check_item(p_xmdc001,'2',g_site,g_user,g_dept,g_xmda_m.xmdadocno) THEN
             LET r_success = FALSE
             RETURN r_success
          END IF
          
          #151229 earl add s
          #多角製造批序號檢查
          IF NOT s_axmt500_inao_chk(g_xmda_m.xmdadocno,g_xmda_m.xmda050,p_xmdc001) THEN
             LET r_success = FALSE
             RETURN r_success
          END IF
          #151229 earl add e
          
       END IF
       RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.axmt500_xmdc001_desc" order="9" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#根據料件編號、供應商、銷售控制組帶出欄位預設值
PRIVATE FUNCTION axmt500_xmdc001_desc()
   DEFINE l_n          LIKE type_t.num5
   DEFINE l_success    LIKE type_t.num5
   DEFINE l_sql        STRING
   DEFINE l_controlno  LIKE ooha_t.ooha001
   DEFINE l_pmao004    LIKE pmao_t.pmao004
   DEFINE l_xmdc003    LIKE xmdc_t.xmdc003       #包裝容器
   DEFINE l_xmdc006    LIKE xmdc_t.xmdc006       #銷售單位
   DEFINE l_xmdc008    LIKE xmdc_t.xmdc008       #參考單位
   DEFINE l_xmdc010    LIKE xmdc_t.xmdc010       #計價單位
   DEFINE l_xmdc016    LIKE xmdc_t.xmdc016       #稅別
   DEFINE l_xmdc017    LIKE xmdc_t.xmdc017       #稅率
   DEFINE l_xmdc019    LIKE xmdc_t.xmdc019       #子件特性
   DEFINE l_xmdc027    LIKE xmdc_t.xmdc027       #客戶料號  
   DEFINE l_xmdcunit   LIKE xmdc_t.xmdcunit      #出貨據點
   DEFINE l_imaf112    LIKE imaf_t.imaf112       #銷售單位
   DEFINE l_imaf122    LIKE imaf_t.imaf122       #訂單子件拆解方式
   DEFINE l_imaf123    LIKE imaf_t.imaf123       #慣用包裝容器



   
      LET l_n = 0          
   
      #抓取客戶控制組
      LET l_controlno = ''
      CALL s_control_get_group('2',g_xmda_m.xmda002,g_xmda_m.xmda003) 
        RETURNING l_success,l_controlno

      LET l_xmdc003 = g_xmdc2_d[l_ac].xmdc003
      LET l_xmdc006 = g_xmdc_d[l_ac].xmdc006
      LET l_xmdc008 = g_xmdc_d[l_ac].xmdc008
      LET l_xmdc010 = g_xmdc_d[l_ac].xmdc010
      LET l_xmdc016 = g_xmdc_d[l_ac].xmdc016
      LET l_xmdc017 = g_xmdc_d[l_ac].xmdc017
      LET l_xmdc019 = g_xmdc_d[l_ac].xmdc019
      LET l_xmdc027 = g_xmdc_d[l_ac].xmdc027
      LET l_xmdcunit = g_xmdc_d[l_ac].xmdcunit

      IF NOT cl_null(l_controlno) THEN
         SELECT COUNT(*) INTO l_n FROM xmaf_t 
          WHERE xmafent = g_enterprise 
            AND xmafsite = g_site 
            AND xmaf001 = g_xmda_m.xmda004
            AND xmaf002 = l_controlno 
            AND xmaf003 = g_xmdc_d[l_ac].xmdc001 
            AND xmaf004 = g_xmdc_d[l_ac].xmdc002
         #依控制組抓取客戶料件預設(axmi121)
         IF l_n > 0 THEN  
            SELECT xmaf005,xmaf006,xmaf007,xmaf008,xmaf009                   
              INTO l_xmdc003,l_xmdc006,l_xmdc008,l_xmdc010,l_xmdcunit                   
              FROM xmaf_t 
             WHERE xmafent = g_enterprise 
               AND xmafsite = g_site 
               AND xmaf001 = g_xmda_m.xmda004
               AND xmaf002 = l_controlno 
               AND xmaf003 = g_xmdc_d[l_ac].xmdc001 
               AND xmaf004 = g_xmdc_d[l_ac].xmdc002               
         END IF
      END IF

      LET g_imaf015 = ''
      LET g_imaf055 = ''      
      LET g_imaf061 = ''
      LET l_imaf112 = ''
      LET g_imaf113 = ''  
      LET l_imaf122 = ''  
      LET l_imaf123 = ''
      
      SELECT imaf015,imaf055,imaf061,imaf112,imaf113,
             imaf122,imaf123 
        INTO g_imaf015,g_imaf055,g_imaf061,l_imaf112,g_imaf113,
             l_imaf122,l_imaf123 
        FROM imaf_t
       WHERE imafent = g_enterprise 
         AND imafsite = g_site 
         AND imaf001 = g_xmdc_d[l_ac].xmdc001 

      IF cl_null(l_controlno) OR l_n = 0 THEN        
         #沒控制組則依料件抓取料件進銷存檔抓取預設值
         LET l_xmdc003 = l_imaf123 
         LET l_xmdc006 = l_imaf112
         LET l_xmdc008 = g_imaf015
         LET l_xmdc010 = g_imaf113
      END IF
      
      #若稅別應用為2.依料件設定，呼叫應用元件帶出稅別、稅率
      IF g_tax_app = '2' AND NOT cl_null(g_pmab089) THEN
         #依料件檢核是否有依交易分類設定稅別
         CALL s_tax_chktype(g_xmda_m.xmdasite,g_xmda_m.xmda004,g_xmdc_d[l_ac].xmdc001,'1',g_pmab089)
           RETURNING l_success,l_xmdc016,l_xmdc017            
         IF NOT l_success THEN
            LET l_xmdc016 = g_xmda_m.xmda011
            LET l_xmdc017 = g_xmda_m.xmda012
         END IF           
      ELSE
         LET l_xmdc016 = g_xmda_m.xmda011
         LET l_xmdc017 = g_xmda_m.xmda012
      END IF
          

      #若[T:料件進銷存檔].[C:接單拆解方式(訂單)]的值為'1:自動CKD'或是'2:自動SKD'時，則[C:子件特性]的值預設'2:CKD'或是'3:SKD'         
      CASE l_imaf122 
        WHEN '1' 
          LET l_xmdc019 = '2'
        WHEN '2' 
          LET l_xmdc019 = '3'
        OTHERWISE 
          LET l_xmdc019 = '1'
      END CASE      

      #依交易對象、料號、產品特徵回傳客戶料號
      IF cl_null(g_xmdc_d[l_ac].xmdc027) AND g_xmdc_d[l_ac].xmdc002 IS NOT NULL THEN
         CALL s_apmi070_get_pmao004(g_xmda_m.xmda004,g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc002)
           RETURNING l_success,l_pmao004
         IF l_success THEN
            LET l_xmdc027 = l_pmao004
         END IF
      END IF                    

       #先判斷欄位是否在單據別設定的預設欄位中，如果存在，則不重新帶值，不存在，則根據料件帶預設值
       IF NOT s_aooi200_chk_doc_fields(g_site,'1',g_slip,'xmdc003') THEN
          LET g_xmdc2_d[l_ac].xmdc003 = l_xmdc003  #包裝容器
       END IF
       IF NOT s_aooi200_chk_doc_fields(g_site,'1',g_slip,'xmdc006') THEN
          LET g_xmdc_d[l_ac].xmdc006 = l_xmdc006  #銷售單位
       END IF   
       IF NOT s_aooi200_chk_doc_fields(g_site,'1',g_slip,'xmdc008') THEN
          LET g_xmdc_d[l_ac].xmdc008 = l_xmdc008  #參考單位
       END IF   
       IF NOT s_aooi200_chk_doc_fields(g_site,'1',g_slip,'xmdc010') THEN
          LET g_xmdc_d[l_ac].xmdc010 = l_xmdc010  #計價單位
       END IF             
       IF NOT s_aooi200_chk_doc_fields(g_site,'1',g_slip,'xmdc016') THEN
          LET g_xmdc_d[l_ac].xmdc016 = l_xmdc016  #稅別
       END IF      
       IF NOT s_aooi200_chk_doc_fields(g_site,'1',g_slip,'xmdc017') THEN
          LET g_xmdc_d[l_ac].xmdc017 = l_xmdc017  #稅率
       END IF      
       IF NOT s_aooi200_chk_doc_fields(g_site,'1',g_slip,'xmdc019') THEN
          LET g_xmdc_d[l_ac].xmdc019 = l_xmdc019  #子件特性
       END IF      
       IF NOT s_aooi200_chk_doc_fields(g_site,'1',g_slip,'xmdc027') THEN
          LET g_xmdc_d[l_ac].xmdc027 = l_xmdc027  #客戶料號
       END IF      
       IF NOT s_aooi200_chk_doc_fields(g_site,'1',g_slip,'xmdcunit') THEN
          #單頭多角性質為"3:統銷統收"、"4:統銷自收"時，才依客戶預設條件帶出預設值
          IF g_xmda_m.xmda006 MATCHES '[34]' AND NOT cl_null(l_xmdcunit) THEN
               LET g_xmdc_d[l_ac].xmdcunit = l_xmdcunit   #出貨據點             
          END IF          
       END IF      
       IF NOT s_aooi200_chk_doc_fields(g_site,'1',g_slip,'xmdcorga') THEN
          IF g_xmda_m.xmda006 = '4' THEN
             LET g_xmdc_d[l_ac].xmdcorga = g_xmdc_d[l_ac].xmdcunit  #收款據點
          END IF    
       END IF
       IF g_xmdc_d[l_ac].xmdc010 IS NULL THEN LET g_xmdc_d[l_ac].xmdc010 = g_xmdc_d[l_ac].xmdc006 END IF
       CALL axmt500_xmdc003_ref(g_xmdc2_d[l_ac].xmdc003) RETURNING  g_xmdc2_d[l_ac].xmdc003_desc
       CALL s_desc_get_unit_desc(g_xmdc_d[l_ac].xmdc006) RETURNING g_xmdc_d[l_ac].xmdc006_desc 
       CALL s_desc_get_unit_desc(g_xmdc_d[l_ac].xmdc008) RETURNING g_xmdc_d[l_ac].xmdc008_desc       
       CALL s_desc_get_unit_desc(g_xmdc_d[l_ac].xmdc010) RETURNING g_xmdc_d[l_ac].xmdc010_desc        
       CALL s_desc_get_tax_desc1(g_site,g_xmdc_d[l_ac].xmdc016) RETURNING g_xmdc_d[l_ac].xmdc016_desc      
       CALL s_desc_get_department_desc(g_xmdc_d[l_ac].xmdcunit) RETURNING g_xmdc_d[l_ac].xmdcunit_desc
       CALL s_desc_get_department_desc(g_xmdc_d[l_ac].xmdcorga) RETURNING g_xmdc_d[l_ac].xmdcorga_desc

END FUNCTION]]>
  </point>
  <point name="function.axmt500_xmda025_ref" order="10" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#地址簡要說明,地址組合
PRIVATE FUNCTION axmt500_xmda025_ref(p_pmaa001,p_oofb019)
DEFINE p_pmaa001   LIKE pmaa_t.pmaa001
DEFINE p_oofb019   LIKE oofb_t.oofb019
DEFINE l_pmaa027   LIKE pmaa_t.pmaa027
DEFINE l_success   LIKE type_t.num5
DEFINE l_address   STRING 
DEFINE r_oofb011   LIKE oofb_t.oofb011
DEFINE r_address   STRING 

       LET r_oofb011 = ''
       LET r_address = ''
       
       IF cl_null(p_pmaa001) OR cl_null(p_oofb019) THEN
          RETURN r_oofb011,r_address
       END IF

       LET l_pmaa027 = ''
       CALL s_axmt500_get_pmaa027(p_pmaa001) RETURNING l_pmaa027
       IF NOT cl_null(l_pmaa027) THEN
          SELECT oofb011 INTO r_oofb011 FROM oofb_t 
           WHERE oofbent = g_enterprise 
             AND oofb002 = l_pmaa027 
             AND oofbstus = 'Y' 
             AND oofb019 = p_oofb019  
             #呼叫地址組合應用元件，將組合好的聯絡地址顯示在下方
             CALL s_aooi350_get_address(l_pmaa027,p_oofb019,g_dlang)RETURNING l_success,l_address
             IF l_success THEN
                LET r_address = l_address
             END IF                        
       END IF
       RETURN r_oofb011,r_address   
       
END FUNCTION]]>
  </point>
  <point name="function.axmt500_xmdc049_ref" order="11" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#理由碼帶值
PRIVATE FUNCTION axmt500_xmdc049_ref(p_xmdc049)
DEFINE p_xmdc049  LIKE xmdc_t.xmdc049
DEFINE r_oocql004 LIKE oocql_t.oocql004

        INITIALIZE g_ref_fields TO NULL
        LET g_ref_fields[1] = p_xmdc049
        CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='"||g_acc||"' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
        LET r_oocql004 = '', g_rtn_fields[1] , ''
        RETURN r_oocql004 
END FUNCTION]]>
  </point>
  <point name="function.axmt500_xmdcunit_chk" order="12" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#檢查營運據點
PRIVATE FUNCTION axmt500_xmdcunit_chk(p_xmdcunit)
DEFINE p_xmdcunit   LIKE xmdc_t.xmdcunit
DEFINE l_success    LIKE type_t.num5
DEFINE l_flag       LIKE type_t.num5
DEFINE r_success    LIKE type_t.num5

       LET r_success = TRUE
       
       IF NOT cl_null(p_xmdcunit) THEN 
          #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
          INITIALIZE g_chkparam.* TO NULL
          
          #設定g_chkparam.*的參數
          LET g_chkparam.arg1 = p_xmdcunit
      
          #呼叫檢查存在並帶值的library
          IF NOT cl_chk_exist("v_ooef001") THEN
             LET r_success = FALSE
             RETURN r_success
          END IF
          #檢核輸入的營運據點是否在採購控制組的限制範圍內
          CALL s_control_chk_group('5','2',g_user,g_dept,p_xmdcunit ,'','','','') RETURNING l_success,l_flag
          IF NOT l_success THEN      #處理狀況
             LET r_success = FALSE
             RETURN r_success
          ELSE
             IF NOT l_flag THEN      #是否存在
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code = 'apm-00274'
                LET g_errparam.extend = p_xmdcunit
                LET g_errparam.popup = TRUE
                CALL cl_err()

                LET r_success = FALSE
                RETURN r_success
             END IF 
          END IF 
       END IF 
       RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.axmt500_xmdc049_chk" order="13" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#檢查理由碼
PRIVATE FUNCTION axmt500_xmdc049_chk(p_xmdc049)
DEFINE p_xmdc049  LIKE xmdc_t.xmdc049
DEFINE l_success  LIKE type_t.num5
DEFINE r_success  LIKE type_t.num5
DEFINE l_flag     LIKE type_t.num5

        LET r_success = TRUE
        
        IF NOT cl_null(p_xmdc049) THEN
           CALL s_azzi650_chk_exist(g_acc,p_xmdc049) RETURNING l_success
           IF NOT l_success THEN
               LET r_success = FALSE
               RETURN r_success
           END IF
           
           #檢核輸入的理由碼是否在單據別限制範圍內，若不在限制內則不允許使用此理由碼
           CALL s_control_chk_doc('8',g_xmda_m.xmdadocno,p_xmdc049,'','','','') RETURNING l_success,l_flag
           IF NOT r_success THEN
              LET r_success = FALSE
              RETURN r_success
           ELSE
              IF NOT l_flag THEN 
                 LET r_success = FALSE
                 RETURN r_success
              END IF
           END IF
        END IF           
        RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.axmt500_xmda024_ref" order="14" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#銷售分類顯示
PRIVATE FUNCTION axmt500_xmda024_ref(p_xmda024)
DEFINE p_xmda024   LIKE xmda_t.xmda024
DEFINE r_oocql004  LIKE oocql_t.oocql004

       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = p_xmda024
       CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='295' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
       LET r_oocql004 = '', g_rtn_fields[1] , ''
       RETURN r_oocql004 
END FUNCTION]]>
  </point>
  <point name="function.axmt500_xmdc012_to_xmdc020" order="15" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#根據交貨日期計算緊急度
PRIVATE FUNCTION axmt500_xmdc012_to_xmdc020()
DEFINE l_imae071    LIKE imae_t.imae071  #固定
DEFINE l_imae072    LIKE imae_t.imae072  #變動
DEFINE l_imae074    LIKE imae_t.imae074  #QC
DEFINE l_imae076    LIKE imae_t.imae076  #嚴守交期前置時間
DEFINE l_time1      LIKE imaf_t.imaf171
DEFINE l_time2      LIKE imaf_t.imaf171

        IF NOT cl_null(g_xmdc_d[l_ac].xmdc012) THEN
           LET l_imae071 = 0   
           LET l_imae072 = 0   
           LET l_imae074 = 0  
           LET l_imae076 = 0             
           LET l_time1 = 0
           LET l_time2 = 0

          SELECT imae071,imae072,imae074,imae076 
            INTO l_imae071,l_imae072,l_imae074,l_imae076
            FROM imae_t
           WHERE imaeent = g_enterprise AND imaesite = g_site 
             AND imae001 = g_xmdc_d[l_ac].xmdc001

          LET l_time1 = g_xmdc_d[l_ac].xmdc012 - g_today      #交貨日期  - g_today
          LET l_time2 = l_imae071 + l_imae072 + l_imae074     #[T:料件據點生管資料檔]設置的(固定+變動+QC)前置天數

          #若輸入的交貨日期 - g_today > [T:料件據點生管資料檔]設置的(固定+變動+QC)前置天數，則[C:緊急度] = '1'(一般)
          IF l_time1 >= l_time2 THEN
             LET g_xmdc_d[l_ac].xmdc020 = '1'
          END IF

          #若輸入的交貨日期 - g_today < [T:料件據點生管資料檔]設置的(固定+變動+QC)前置天數，
          #且約定交貨日期 - g_today >[T:料件據點生管資料檔].[C:嚴守交期前置時間]時，則[C:緊急度] = '2'(緊急)
          IF l_time1 < l_time2 AND l_time1 >= l_imae076 THEN
             LET g_xmdc_d[l_ac].xmdc020 = '2'
          END IF

          #若約定交貨日期 - g_today <[T:料件據點生管資料檔].[C:嚴守交期前置時間]時，則[C:緊急度] = '3'(特急)
          IF l_time1 < l_imae076 THEN
             LET g_xmdc_d[l_ac].xmdc020 = '3'
          END IF
       END IF 
END FUNCTION]]>
  </point>
  <point name="function.axmt500_xmda008_desc" order="16" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 依來源單號抓取相關欄位至訂單頭上
# Memo...........:
# Usage..........: CALL axmt500_xmda008_desc(p_xmda007,p_xmda008)
#                : RETURN r_success  
# Input parameter: p_xmda007      資料來源
#                : p_xmda008      來源單號
# Return code....: r_success      TRUE/FALSE
# Date & Author..: 2015/02/24 By polly
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt500_xmda008_desc(p_xmda007,p_xmda008)
DEFINE p_xmda007   LIKE xmda_t.xmda007
DEFINE p_xmda008   LIKE xmda_t.xmda008
DEFINE r_success   LIKE type_t.num5

   LET r_success = TRUE
   
   IF cl_null(p_xmda007) OR cl_null(p_xmda008) THEN 
      LET r_success = FALSE
      RETURN r_success
   END IF
   #20150224 POLLY ADD-S
   CASE p_xmda007   
     WHEN "2"   #預先訂單
       IF NOT axmt500_advance_xmda(p_xmda008) THEN    
          LET r_success = FALSE
          RETURN r_success
       END IF          
     WHEN "5"   #銷退換貨  
       #帶出銷退單單頭
       IF NOT axmt500_return_xmda(g_xmda_m.xmda005,p_xmda008) THEN    
          LET r_success = FALSE
          RETURN r_success
       END IF   
          
   END CASE   
   #20150224 POLLY ADD-E
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.axmt500_change_xmdc016" order="17" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 單頭稅別修改時，單身稅別一併修改
# Memo...........:
# Usage..........: CALL axmt500_change_xmdc016(p_cmd)
#                :  
# Input parameter: p_cmd       #輸入模式
#                : 
# Return code....: 
#                : 
# Date & Author..: 2014/03/25 By polly
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt500_change_xmdc016(p_cmd)
  DEFINE p_cmd             LIKE type_t.chr1
  DEFINE l_i               LIKE type_t.num10
  DEFINE l_success         LIKE type_t.num5
  DEFINE l_xmdcseq         LIKE xmdc_t.xmdcseq
  DEFINE l_xmdc001         LIKE xmdc_t.xmdc001
  DEFINE l_xmdc011         LIKE xmdc_t.xmdc011
  DEFINE l_xmdc015         LIKE xmdc_t.xmdc015
  DEFINE l_xmdc016         LIKE xmdc_t.xmdc016
  DEFINE l_xmdc017         LIKE xmdc_t.xmdc017
  DEFINE l_xmdc046         LIKE xmdc_t.xmdc046
  DEFINE l_xmdc047         LIKE xmdc_t.xmdc047
  DEFINE l_xmdc048         LIKE xmdc_t.xmdc048

   #單頭複製時，因單身資料還沒insert到資料庫，所以只改變畫面上的顯示
   IF p_cmd = 'a' THEN
      FOR l_i = 1 TO g_xmdc_d.getLength()
         IF g_tax_app = '2' THEN
            #依料件設定
            CALL s_tax_chktype(g_xmda_m.xmdasite,g_xmda_m.xmda004,g_xmdc_d[l_i].xmdc001,'1',g_pmab089)
              RETURNING l_success,l_xmdc016,l_xmdc017
            #稅別檢查失敗，將稅別、稅率清空
            IF NOT l_success THEN                   
               LET l_xmdc016 = ''
               LET l_xmdc017 = ''
            END IF                 
         ELSE
            #依正常稅率
            LET l_xmdc016 = g_xmda_m.xmda011
            LET l_xmdc017 = g_xmda_m.xmda012
         END IF
         #重計未稅金額、含稅金額、稅額
         CALL s_axmt500_get_amount(g_xmda_m.xmdadocno,g_xmdc_d[l_i].xmdcseq,g_xmdc_d[l_i].xmdc011,g_xmdc_d[l_i].xmdc015,l_xmdc016,g_xmda_m.xmda015,g_xmda_m.xmda016)
           RETURNING l_xmdc046,l_xmdc047,l_xmdc048 
         LET g_xmdc_d[l_i].xmdc016 = l_xmdc016
         LET g_xmdc_d[l_i].xmdc017 = l_xmdc017
         LET g_xmdc_d[l_i].xmdc046 = l_xmdc046
         LET g_xmdc_d[l_i].xmdc047 = l_xmdc047
         LET g_xmdc_d[l_i].xmdc048 = l_xmdc048            
      END FOR
   ELSE
      DECLARE sel_xmdc016_cs CURSOR FOR
       SELECT xmdcseq,xmdc001,xmdc011,xmdc015
         FROM xmdc_t
        WHERE xmdcent = g_enterprise
          AND xmdcdocno = g_xmda_m.xmdadocno
 
      FOREACH sel_xmdc016_cs INTO l_xmdcseq,l_xmdc001,l_xmdc011,l_xmdc015
         IF g_tax_app = '2' AND NOT cl_null(l_xmdc001) AND NOT cl_null(g_pmab089) THEN
            #依料件設定
            CALL s_tax_chktype(g_xmda_m.xmdasite,g_xmda_m.xmda004,l_xmdc001,'1',g_pmab089)
                 RETURNING l_success,l_xmdc016,l_xmdc017
            IF NOT l_success THEN
               #稅別檢查失敗，將稅別、稅率清空
               LET l_xmdc016 = ''
               LET l_xmdc017 = ''
            END IF                   
         ELSE
            #依正常稅率
            LET l_xmdc016 = g_xmda_m.xmda011
            LET l_xmdc017 = g_xmda_m.xmda012
         END IF
         #重新計算含稅、未稅金額
         CALL s_axmt500_get_amount(g_xmda_m.xmdadocno,l_xmdcseq,l_xmdc011,l_xmdc015,l_xmdc016,g_xmda_m.xmda015,g_xmda_m.xmda016)
           RETURNING l_xmdc046,l_xmdc047,l_xmdc048
          
         UPDATE xmdc_t SET xmdc016 = l_xmdc016,
                           xmdc017 = l_xmdc017,
                           xmdc046 = l_xmdc046,
                           xmdc047 = l_xmdc047,
                           xmdc048 = l_xmdc048
          WHERE xmdcent = g_enterprise
            AND xmdcdocno = g_xmda_m.xmdadocno
            AND xmdcseq = l_xmdcseq   

         #重新產生交期明細資料
         CALL s_axmt500_gen_xmdd(g_xmda_m.xmdadocno,l_xmdcseq) RETURNING l_success
      END FOREACH
      CALL axmt500_b_fill()
   END IF
 
END FUNCTION]]>
  </point>
  <point name="function.axmt500_xmdd010_ref" order="18" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#出貨時段顯示
PRIVATE FUNCTION axmt500_xmdd010_ref(p_xmdd010)
DEFINE p_xmdd010    LIKE xmdd_t.xmdd010
DEFINE r_oocql004   LIKE oocql_t.oocql004

       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = p_xmdd010
       CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='274' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
       LET r_oocql004 = '', g_rtn_fields[1] , ''
       RETURN r_oocql004 
END FUNCTION]]>
  </point>
  <point name="function.axmt500_xmdc003_ref" order="19" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#包裝容器顯示
PRIVATE FUNCTION axmt500_xmdc003_ref(p_xmdc003)
DEFINE p_xmdc003     LIKE xmdc_t.xmdc003
DEFINE r_imaal003    LIKE imaal_t.imaal003

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = p_xmdc003
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET  r_imaal003 = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xmdc2_d[l_ac].xmdc003_desc
            RETURN r_imaal003
 
END FUNCTION]]>
  </point>
  <point name="function.axmt500_xmdadocno_ref" order="20" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#抓取單據別說明
PRIVATE FUNCTION axmt500_xmdadocno_ref()
DEFINE l_flag            LIKE type_t.num5
DEFINE l_site            LIKE ooef_t.ooef005
DEFINE l_ooef004         LIKE ooef_t.ooef004
DEFINE l_success         LIKE type_t.num5
   
   LET g_xmda_m.xmdadocno_desc = ''
   IF cl_null(g_xmda_m.xmdadocno) THEN
      RETURN
   END IF   
   #抓取單據別
   LET g_slip = ''
   CALL s_aooi200_get_slip(g_xmda_m.xmdadocno) RETURNING l_success,g_slip
   IF NOT l_success THEN
      RETURN
   END IF

   #抓取單據別說明
   SELECT oobxl003 INTO g_xmda_m.xmdadocno_desc
     FROM oobxl_t
    WHERE oobxlent = g_enterprise
      AND oobxl001 = g_slip
      AND oobxl002 = g_dlang

   DISPLAY BY NAME g_xmda_m.xmdadocno_desc
END FUNCTION]]>
  </point>
  <point name="function.axmt500_feature" order="21" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 新增時，依據產品特徵開窗後的值新增到資料庫
# Memo...........:
# Usage..........: CALL axmt500_feature()
#                  RETURNING r_success
# Input parameter: 
#                : 
# Return code....: r_success      TRUE/FALSE
#                : 
# Date & Author..: 2014/04/10 By Polly
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt500_feature()
   DEFINE  l_xmdcseq    LIKE xmdc_t.xmdcseq
   DEFINE  l_xmdqseq1   LIKE xmdq_t.xmdqseq1
   DEFINE  l_xmdc       RECORD LIKE xmdc_t.*
   DEFINE  l_xmdq       RECORD LIKE xmdq_t.*
   DEFINE  l_success    LIKE type_t.num5   
   DEFINE  l_i          LIKE type_t.num5
   DEFINE  l_cnt        LIKE type_t.num5
   DEFINE  l_flag       LIKE type_t.num5
   DEFINE  l_pmao004    LIKE pmao_t.pmao004 
   DEFINE  r_success    LIKE type_t.num5
   
      LET r_success = TRUE
      LET l_xmdcseq = ''  
       
 
      INITIALIZE l_xmdc.* TO NULL  
      SELECT xmdcent,xmdcsite,xmdcdocno,xmdcunit,xmdcorga,
             xmdc001,xmdc002,xmdc003,
             xmdc006,xmdc007,xmdc008,xmdc009,xmdc010,
             xmdc011,xmdc012,xmdc013,xmdc015,
             xmdc016,xmdc017,xmdc019,xmdc020, 
             xmdc021,xmdc022,xmdc023,xmdc024,xmdc025,
             xmdc026,xmdc027,xmdc028,xmdc029,xmdc030,
             xmdc031,xmdc032,xmdc033,xmdc034,xmdc035,
             xmdc036,xmdc037,xmdc038,xmdc039,xmdc040,
             xmdc041,xmdc045,xmdc046,xmdc047,xmdc048,
             xmdc049,xmdc050,xmdc052,xmdc053
        INTO l_xmdc.xmdcent,l_xmdc.xmdcsite,l_xmdc.xmdcdocno,l_xmdc.xmdcunit,l_xmdc.xmdcorga,
             l_xmdc.xmdc001,l_xmdc.xmdc002,l_xmdc.xmdc003,
             l_xmdc.xmdc006,l_xmdc.xmdc007,l_xmdc.xmdc008,l_xmdc.xmdc009,l_xmdc.xmdc010,
             l_xmdc.xmdc011,l_xmdc.xmdc012,l_xmdc.xmdc013,l_xmdc.xmdc015,
             l_xmdc.xmdc016,l_xmdc.xmdc017,l_xmdc.xmdc019,l_xmdc.xmdc020, 
             l_xmdc.xmdc021,l_xmdc.xmdc022,l_xmdc.xmdc023,l_xmdc.xmdc024,l_xmdc.xmdc025,
             l_xmdc.xmdc026,l_xmdc.xmdc027,l_xmdc.xmdc028,l_xmdc.xmdc029,l_xmdc.xmdc030,
             l_xmdc.xmdc031,l_xmdc.xmdc032,l_xmdc.xmdc033,l_xmdc.xmdc034,l_xmdc.xmdc035,
             l_xmdc.xmdc036,l_xmdc.xmdc037,l_xmdc.xmdc038,l_xmdc.xmdc039,l_xmdc.xmdc040,
             l_xmdc.xmdc041,l_xmdc.xmdc045,l_xmdc.xmdc046,l_xmdc.xmdc047,l_xmdc.xmdc048,
             l_xmdc.xmdc049,l_xmdc.xmdc050,l_xmdc.xmdc052,l_xmdc.xmdc053
        FROM xmdc_t
       WHERE xmdcent = g_enterprise
         AND xmdcdocno = g_xmda_m.xmdadocno
         AND xmdcseq = g_xmdc_d[l_ac].xmdcseq

      #查看是否有可選件或附屬零件      
      LET l_cnt = 0
      LET l_flag = FALSE
      SELECT COUNT(*) INTO l_cnt
        FROM xmdq_t
       WHERE xmdqent = g_enterprise       
         AND xmdqdocno = g_xmda_m.xmdadocno
         AND xmdqseq = g_xmdc_d[l_ac].xmdcseq
      IF l_cnt > 0 THEN
         LET l_flag = TRUE
         DECLARE axmt500_xmdq_cs CURSOR FOR
          SELECT xmdqent,xmdqsite,xmdqdocno,xmdqseq,xmdqseq1,
                 xmdq001,xmdq002,xmdq003,xmdq004,xmdq005,
                 xmdq006,xmdq007,xmdq008,xmdq009,xmdq010,
                 xmdq011,xmdq012                
            FROM xmdq_t
           WHERE xmdqent = g_enterprise       
             AND xmdqdocno = g_xmda_m.xmdadocno
             AND xmdqseq = g_xmdc_d[l_ac].xmdcseq        
      END IF


      SELECT MAX(xmdcseq) INTO l_xmdcseq
        FROM xmdc_t
       WHERE xmdcent = g_enterprise
         AND xmdcdocno = g_xmda_m.xmdadocno

      IF cl_null(l_xmdcseq) THEN
         LET l_xmdcseq = 0
      END IF     
      
      FOR l_i = 2 TO g_inam.getLength()
          LET l_xmdcseq = l_xmdcseq + 1
          LET l_xmdc.xmdcseq = l_xmdcseq   
          LET l_xmdc.xmdc001 = g_inam[l_i].inam001         
          LET l_xmdc.xmdc002 = g_inam[l_i].inam002   
          LET l_xmdc.xmdc024 = 'N'                                         #多交期
          IF cl_null(l_xmdc.xmdc034) THEN LET l_xmdc.xmdc034 = 0 END IF
          #依交易對象、料號、產品特徵回傳客戶料號
          CALL s_apmi070_get_pmao004(g_xmda_m.xmda004,l_xmdc.xmdc001,l_xmdc.xmdc002)
            RETURNING l_success,l_pmao004
          IF l_success THEN
             LET l_xmdc.xmdc027 = l_pmao004
          END IF    
          LET l_xmdc.xmdc007 = g_inam[l_i].inam004          
          #自動推算參考數量
          IF NOT cl_null(l_xmdc.xmdc006) AND NOT cl_null(l_xmdc.xmdc008) THEN
             LET l_xmdc.xmdc009 = 0
             CALL s_aooi250_convert_qty(l_xmdc.xmdc001,l_xmdc.xmdc006,l_xmdc.xmdc008,l_xmdc.xmdc007)
               RETURNING l_success,l_xmdc.xmdc009
             #參考數量取位
             CALL s_aooi250_take_decimals(l_xmdc.xmdc008,l_xmdc.xmdc009)
               RETURNING l_success,l_xmdc.xmdc009                         
          END IF       
          #自動推算計價數量          
          IF NOT cl_null(l_xmdc.xmdc006) AND NOT cl_null(l_xmdc.xmdc010) THEN
             LET l_xmdc.xmdc011 = 0
             CALL s_aooi250_convert_qty(l_xmdc.xmdc001,l_xmdc.xmdc006,l_xmdc.xmdc010,l_xmdc.xmdc007)
               RETURNING l_success,l_xmdc.xmdc011
             #對計價數量進行取位
             CALL s_aooi250_take_decimals(l_xmdc.xmdc010,l_xmdc.xmdc011)
               RETURNING l_success,l_xmdc.xmdc011 
          END IF                     
          #取出價格
          CALL s_sale_price_get(g_xmda_m.xmda017,g_xmda_m.xmda004,l_xmdc.xmdc001,l_xmdc.xmdc002,g_xmda_m.xmda015,
                                l_xmdc.xmdc016,g_xmda_m.xmda009,g_xmda_m.xmda010,g_xmda_m.xmda023,g_xmda_m.xmdadocno,
                                g_xmda_m.xmdadocdt,l_xmdc.xmdc010,l_xmdc.xmdc011,g_site,'1',g_xmda_m.xmda048)
            RETURNING l_xmdc.xmdc040,l_xmdc.xmdc043,l_xmdc.xmdc041,l_xmdc.xmdc042
          IF l_xmdc.xmdc040 <> 'X' THEN      
             LET l_xmdc.xmdc015 = l_xmdc.xmdc043                 
          END IF   
          #價差比：訂單價格-取出單價/取出單價*100
          IF l_xmdc.xmdc043 <> 0 THEN
             LET l_xmdc.xmdc044 = (l_xmdc.xmdc015 - l_xmdc.xmdc043)/l_xmdc.xmdc043 * 100
          END IF          
         
          #取得未稅金額、含稅金額、稅額  
          CALL s_axmt500_get_amount(g_xmda_m.xmdadocno,l_xmdc.xmdcseq,l_xmdc.xmdc011,l_xmdc.xmdc015,l_xmdc.xmdc016,g_xmda_m.xmda015,g_xmda_m.xmda016)
            RETURNING l_xmdc.xmdc046,l_xmdc.xmdc047,l_xmdc.xmdc048
          
          INSERT INTO xmdc_t
                 (xmdcent,xmdcsite,xmdcdocno,xmdcunit,xmdcorga,
                  xmdc001,xmdc002,xmdc003,
                  xmdc006,xmdc007,xmdc008,xmdc009,xmdc010,
                  xmdc011,xmdc012,xmdc013,xmdc015,xmdcseq,
                  xmdc016,xmdc017,xmdc019,xmdc020,
                  xmdc021,xmdc022,xmdc023,xmdc024,xmdc025,
                  xmdc026,xmdc027,xmdc028,xmdc029,xmdc030,
                  xmdc031,xmdc032,xmdc033,xmdc034,xmdc035,
                  xmdc036,xmdc037,xmdc038,xmdc039,xmdc040,
                  xmdc041,xmdc042,xmdc043,xmdc044,xmdc045,
                  xmdc046,xmdc047,xmdc048,xmdc049,xmdc050,
                  xmdc052,xmdc053)                      
          VALUES (l_xmdc.xmdcent,l_xmdc.xmdcsite,l_xmdc.xmdcdocno,l_xmdc.xmdcunit,l_xmdc.xmdcorga,
                  l_xmdc.xmdc001,l_xmdc.xmdc002,l_xmdc.xmdc003,
                  l_xmdc.xmdc006,l_xmdc.xmdc007,l_xmdc.xmdc008,l_xmdc.xmdc009,l_xmdc.xmdc010,
                  l_xmdc.xmdc011,l_xmdc.xmdc012,l_xmdc.xmdc013,l_xmdc.xmdc015,l_xmdcseq,
                  l_xmdc.xmdc016,l_xmdc.xmdc017,l_xmdc.xmdc019,l_xmdc.xmdc020, 
                  l_xmdc.xmdc021,l_xmdc.xmdc022,l_xmdc.xmdc023,l_xmdc.xmdc024,l_xmdc.xmdc025,
                  l_xmdc.xmdc026,l_xmdc.xmdc027,l_xmdc.xmdc028,l_xmdc.xmdc029,l_xmdc.xmdc030,
                  l_xmdc.xmdc031,l_xmdc.xmdc032,l_xmdc.xmdc033,l_xmdc.xmdc034,l_xmdc.xmdc035,
                  l_xmdc.xmdc036,l_xmdc.xmdc037,l_xmdc.xmdc038,l_xmdc.xmdc039,l_xmdc.xmdc040,
                  l_xmdc.xmdc041,l_xmdc.xmdc042,l_xmdc.xmdc043,l_xmdc.xmdc044,l_xmdc.xmdc045,
                  l_xmdc.xmdc046,l_xmdc.xmdc047,l_xmdc.xmdc048,l_xmdc.xmdc049,l_xmdc.xmdc050,
                  l_xmdc.xmdc052,l_xmdc.xmdc053)
          IF SQLCA.sqlcode THEN
             INITIALIZE g_errparam TO NULL
             LET g_errparam.code = SQLCA.sqlcode
             LET g_errparam.extend = "INSERT xmdc_t"
             LET g_errparam.popup = TRUE
             CALL cl_err()
             LET r_success = FALSE
             EXIT FOR
          END IF
                   
          #否有附屬零件、可選件，如有，需寫入xmdq訂單附屬零件明細檔
          IF l_flag THEN
             FOREACH axmt500_xmdq_cs INTO l_xmdq.xmdqent,l_xmdq.xmdqsite,l_xmdq.xmdqdocno,l_xmdq.xmdqseq,l_xmdq.xmdqseq1,
                                          l_xmdq.xmdq001,l_xmdq.xmdq002,l_xmdq.xmdq003,l_xmdq.xmdq004,l_xmdq.xmdq005,
                                          l_xmdq.xmdq006,l_xmdq.xmdq007,l_xmdq.xmdq008,l_xmdq.xmdq009,l_xmdq.xmdq010,
                                          l_xmdq.xmdq011,l_xmdq.xmdq012   
                LET l_xmdq.xmdqseq = l_xmdc.xmdcseq
                SELECT MAX(xmdqseq1) + 1 
                  INTO l_xmdq.xmdqseq1 
                  FROM xmdq_t
                 WHERE xmdqent =  g_enterprise
                   AND xmdqdocno = g_xmda_m.xmdadocno
                   AND xmdqseq = l_xmdq.xmdqseq
                IF cl_null(l_xmdq.xmdqseq1) OR l_xmdq.xmdqseq1 = 0 THEN
                   LET l_xmdq.xmdqseq1 = 1
                END IF   
                
                #[C:數量] = 訂單數量*標準組成用量/標準主件底數
                LET l_xmdq.xmdq009 = l_xmdc.xmdc011 * l_xmdq.xmdq010 / l_xmdq.xmdq011 
                
                INSERT INTO xmdq_t (xmdqent,xmdqsite,xmdqdocno,xmdqseq,xmdqseq1,
                                    xmdq001,xmdq002,xmdq004,xmdq005,xmdq006,
                                    xmdq007,xmdq008,xmdq009,xmdq010,xmdq011,
                                    xmdq012)
                       VALUES (l_xmdq.xmdqent,l_xmdq.xmdqsite,l_xmdq.xmdqdocno,l_xmdq.xmdqseq,l_xmdq.xmdqseq1,
                               l_xmdq.xmdq001,l_xmdq.xmdq002,l_xmdq.xmdq004,l_xmdq.xmdq005,l_xmdq.xmdq006,
                               l_xmdq.xmdq007,l_xmdq.xmdq008,l_xmdq.xmdq009,l_xmdq.xmdq010,l_xmdq.xmdq011,
                               l_xmdq.xmdq012)   
                IF SQLCA.SQLcode  THEN
                   INITIALIZE g_errparam TO NULL
                   LET g_errparam.code = SQLCA.sqlcode
                   LET g_errparam.extend = "INSERT xmdq_t"
                   LET g_errparam.popup = TRUE
                   CALL cl_err()
                   LET r_success = FALSE
                   EXIT FOR                                        
                END IF           
             END FOREACH
          END IF
          
          #產生交期明細檔
          IF NOT s_axmt500_gen_xmdd(g_xmda_m.xmdadocno,l_xmdcseq)  THEN
              INITIALIZE g_errparam TO NULL
              LET g_errparam.code = SQLCA.sqlcode
              LET g_errparam.extend = "xmdd_t"
              LET g_errparam.popup = TRUE
              CALL cl_err()
              LET r_success = FALSE
              EXIT FOR
          END IF                  
       END FOR 
       CALL axmt500_b_fill() 
       RETURN r_success
      
END FUNCTION]]>
  </point>
  <point name="function.axmt500_change_xmdc015" order="22" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 改變單頭幣別、收款條件、交易條件、取價方式需重新取價
# Memo...........: 重新取價
# Usage..........: axmt500_change_xmdc015(p_cmd)
#                  
# Input parameter: p_cmd        #輸入模式
#                : 
# Return code....: 
#                : 
# Date & Author..: 2014/07/10 By Polly
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt500_change_xmdc015(p_cmd)
  DEFINE p_cmd         LIKE type_t.chr1
  DEFINE l_i           LIKE type_t.num10  
  DEFINE l_success     LIKE type_t.num5
  DEFINE l_xmdcseq     LIKE xmdc_t.xmdcseq    #項次
  DEFINE l_xmdc001     LIKE xmdc_t.xmdc001    #料件
  DEFINE l_xmdc002     LIKE xmdc_t.xmdc002    #產品特徵
  DEFINE l_xmdc010     LIKE xmdc_t.xmdc010    #單位
  DEFINE l_xmdc011     LIKE xmdc_t.xmdc011    #數量
  DEFINE l_xmdc015     LIKE xmdc_t.xmdc015    #單價
  DEFINE l_xmdc016     LIKE xmdc_t.xmdc016    #稅別
  DEFINE l_xmdc040     LIKE xmdc_t.xmdc040    #取價來源
  DEFINE l_xmdc041     LIKE xmdc_t.xmdc041    #價格參考單號
  DEFINE l_xmdc042     LIKE xmdc_t.xmdc042    #價格參考項次
  DEFINE l_xmdc043     LIKE xmdc_t.xmdc043    #取出價格
  DEFINE l_xmdc046     LIKE xmdc_t.xmdc046    #未稅金額
  DEFINE l_xmdc047     LIKE xmdc_t.xmdc047    #含稅金額
  DEFINE l_xmdc048     LIKE xmdc_t.xmdc048    #稅額
  DEFINE r_success     LIKE type_t.num5
  
  LET r_success = TRUE

  #單頭新增時，因單身資料還沒insert到資料庫，所以只改變畫面上的顯示
  IF p_cmd = 'a' THEN  
      FOR l_i = 1 TO g_xmdc_d.getLength()        
          #單身重新取價
          CALL s_sale_price_get(g_xmda_m.xmda017,g_xmda_m.xmda004,g_xmdc_d[l_i].xmdc001,g_xmdc_d[l_i].xmdc002,g_xmda_m.xmda015,
                                g_xmdc_d[l_i].xmdc016,g_xmda_m.xmda009,g_xmda_m.xmda010,g_xmda_m.xmda023,g_xmda_m.xmdadocno,
                                g_xmda_m.xmdadocdt,g_xmdc_d[l_i].xmdc010,g_xmdc_d[l_i].xmdc011,g_site,'1',g_xmda_m.xmda048)
             RETURNING g_xmdc2_d[l_i].xmdc040,g_xmdc2_d[l_i].xmdc043,g_xmdc2_d[l_i].xmdc041,g_xmdc2_d[l_i].xmdc042
          LET g_xmdc_d[l_i].xmdc015 = g_xmdc2_d[l_i].xmdc043         
         #重計未稅金額、含稅金額、稅額
         CALL s_axmt500_get_amount(g_xmda_m.xmdadocno,g_xmdc_d[l_i].xmdcseq,g_xmdc_d[l_i].xmdc011,g_xmdc_d[l_i].xmdc015,g_xmdc_d[l_i].xmdc016,g_xmda_m.xmda015,g_xmda_m.xmda016)
           RETURNING l_xmdc046,l_xmdc047,l_xmdc048 
         LET g_xmdc_d[l_i].xmdc046 = l_xmdc046
         LET g_xmdc_d[l_i].xmdc047 = l_xmdc047
         LET g_xmdc_d[l_i].xmdc048 = l_xmdc048            
      END FOR  
  ELSE
     DECLARE sel_xmdc015_cur CURSOR FOR
        SELECT xmdcseq,xmdc001,xmdc002,xmdc010,xmdc011,
               xmdc016
          FROM xmdc_t
         WHERE xmdcent = g_enterprise 
           AND xmdcdocno = g_xmda_m.xmdadocno
     
     FOREACH sel_xmdc015_cur INTO l_xmdcseq,l_xmdc001,l_xmdc002,l_xmdc010,l_xmdc011,
                                  l_xmdc016
          #單身重新取價
          CALL s_sale_price_get(g_xmda_m.xmda017,g_xmda_m.xmda004,l_xmdc001,l_xmdc002,g_xmda_m.xmda015,
                                l_xmdc016,g_xmda_m.xmda009,g_xmda_m.xmda010,g_xmda_m.xmda023,g_xmda_m.xmdadocno,
                                g_xmda_m.xmdadocdt,l_xmdc010,l_xmdc011,g_site,'1',g_xmda_m.xmda048)
             RETURNING l_xmdc040,l_xmdc043,l_xmdc041,l_xmdc042
          LET l_xmdc015 = l_xmdc043
     
     
          #重新計算含稅、未稅金額
          CALL s_axmt500_get_amount(g_xmda_m.xmdadocno,l_xmdcseq,l_xmdc011,l_xmdc015,l_xmdc016,g_xmda_m.xmda015,g_xmda_m.xmda016)
             RETURNING l_xmdc046,l_xmdc047,l_xmdc048
             
          UPDATE xmdc_t SET xmdc015 = l_xmdc015,
                            xmdc040 = l_xmdc040,
                            xmdc041 = l_xmdc041,
                            xmdc042 = l_xmdc042,
                            xmdc043 = l_xmdc043,
                            xmdc046 = l_xmdc046,
                            xmdc047 = l_xmdc047,
                            xmdc048 = l_xmdc048
           WHERE xmdcent = g_enterprise 
             AND xmdcdocno = g_xmda_m.xmdadocno
             AND xmdcseq = l_xmdcseq  
          IF SQLCA.sqlcode THEN
             INITIALIZE g_errparam TO NULL 
             LET g_errparam.extend = "xmda_t" 
             LET g_errparam.code   = SQLCA.sqlcode 
             LET g_errparam.popup  = TRUE 
             CALL cl_err()
             LET r_success = FALSE
             RETURN r_success
          END IF
          #重新產生交期明細資料
          IF NOT s_axmt500_gen_xmdd(g_xmda_m.xmdadocno,l_xmdcseq) THEN
             LET r_success = FALSE
             RETURN r_success
          END IF          
     END FOREACH
     CALL axmt500_b_fill()    
  END IF   
  RETURN r_success     
END FUNCTION]]>
  </point>
  <point name="function.axmt500_get_xmdc025" order="23" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#抓取收貨地值預設值
PRIVATE FUNCTION axmt500_get_xmdc025()
DEFINE l_pmaa027    LIKE pmaa_t.pmaa027
DEFINE r_xmda025    LIKE xmda_t.xmda025


      LET l_pmaa027 = ''
      LET r_xmda025 = ''
      #收貨地址(地址類型先抓3，抓不到才改抓2)
      CALL s_axmt500_get_pmaa027(g_xmda_m.xmda022) RETURNING l_pmaa027
      SELECT oofb019 INTO r_xmda025 FROM oofb_t
       WHERE oofb002 = l_pmaa027 AND oofb008 = '3'
         AND oofbstus = 'Y' AND oofb010 = 'Y' AND rownum = 1
      IF cl_null(r_xmda025) THEN
         SELECT oofb019 INTO r_xmda025 FROM oofb_t
          WHERE oofb002 = l_pmaa027 AND oofb008 = '3'
            AND oofbstus = 'Y' AND rownum = 1
      END IF
      IF cl_null(r_xmda025) THEN
         SELECT oofb019 INTO r_xmda025 FROM oofb_t
          WHERE oofb002 = l_pmaa027 AND oofb008 = '2'
            AND oofbstus = 'Y' AND oofb010 = 'Y' AND rownum = 1
      END IF
      IF cl_null(r_xmda025) THEN
         SELECT oofb019 INTO r_xmda025 FROM oofb_t
          WHERE oofb002 = l_pmaa027 AND oofb008 = '2'
            AND oofbstus = 'Y' AND rownum = 1
      END IF
      RETURN r_xmda025      
END FUNCTION]]>
  </point>
  <point name="function.axmt500_get_xmdc026" order="24" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#抓取帳款地址預設值
PRIVATE FUNCTION axmt500_get_xmdc026()
DEFINE l_pmaa027    LIKE pmaa_t.pmaa027
DEFINE r_xmda026    LIKE xmda_t.xmda026
      
      LET l_pmaa027 = ''
      LET r_xmda026 = ''
      #帳款地址(地址類型先抓5，抓不到才改抓2)
      CALL s_axmt500_get_pmaa027(g_xmda_m.xmda021) RETURNING l_pmaa027
      SELECT oofb019 INTO r_xmda026 FROM oofb_t
       WHERE oofb002 = l_pmaa027  AND oofb008 = '5'
         AND oofbstus = 'Y' AND oofb010 = 'Y' AND rownum = 1
      IF cl_null(r_xmda026) THEN
         SELECT oofb019 INTO r_xmda026 FROM oofb_t
          WHERE oofb002 = g_xmda_m.xmda021 AND oofb008 = '5'
            AND oofbstus = 'Y' AND rownum = 1
      END IF
      IF cl_null(r_xmda026) THEN
         SELECT oofb019 INTO r_xmda026 FROM oofb_t
          WHERE oofb002 = l_pmaa027  AND oofb008 = '2'
            AND oofbstus = 'Y' AND oofb010 = 'Y' AND rownum = 1
      END IF
      IF cl_null(r_xmda026) THEN
         SELECT oofb019 INTO r_xmda026 FROM oofb_t
          WHERE oofb002 = g_xmda_m.xmda021 AND oofb008 = '2'
            AND oofbstus = 'Y' AND rownum = 1
      END IF
      RETURN r_xmda026 

END FUNCTION]]>
  </point>
  <point name="function.axmt500_get_xmdc015" order="25" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#取出價格
PRIVATE FUNCTION axmt500_get_xmdc015()
   DEFINE    l_xmdc015    LIKE xmdc_t.xmdc015

   LET l_xmdc015 = 0
   IF cl_null(g_xmda_m.xmdadocno) OR cl_null(g_xmda_m.xmdadocdt) OR cl_null(g_xmda_m.xmda017) OR 
      cl_null(g_xmda_m.xmda015) OR cl_null(g_xmdc_d[l_ac].xmdc016) OR cl_null(g_xmda_m.xmda009) OR
      cl_null(g_xmda_m.xmda010) OR cl_null(g_xmda_m.xmda023) OR cl_null(g_xmdc_d[l_ac].xmdc010) OR  
      cl_null(g_xmdc_d[l_ac].xmdc011) OR cl_null(g_xmda_m.xmda048) THEN      
      RETURN l_xmdc015
   END IF     

   #子件特性是9.樣9品的話，單價預設為0，不自動取價，而且單價可以輸入0  
   IF g_xmdc_d[l_ac].xmdc019 = '9' THEN
      RETURN l_xmdc015
   END IF 
   
   CALL s_sale_price_get(g_xmda_m.xmda017,g_xmda_m.xmda004,g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc002,g_xmda_m.xmda015,
                         g_xmdc_d[l_ac].xmdc016,g_xmda_m.xmda009,g_xmda_m.xmda010,g_xmda_m.xmda023,g_xmda_m.xmdadocno,
                         g_xmda_m.xmdadocdt,g_xmdc_d[l_ac].xmdc010,g_xmdc_d[l_ac].xmdc011,g_site,'1',g_xmda_m.xmda048)
     RETURNING g_xmdc2_d[l_ac].xmdc040,g_xmdc2_d[l_ac].xmdc043,g_xmdc2_d[l_ac].xmdc041,g_xmdc2_d[l_ac].xmdc042
   LET l_xmdc015 = g_xmdc2_d[l_ac].xmdc043
   IF cl_null(l_xmdc015) THEN LET l_xmdc015 = 0 END IF
   
   RETURN l_xmdc015

END FUNCTION]]>
  </point>
  <point name="function.axmt500_open_xmdb" order="26" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#維護多期預付款單身
PRIVATE FUNCTION axmt500_open_xmdb()
   DEFINE  l_cmd           LIKE type_t.chr1
   DEFINE  l_ac_t          LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n             LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw       LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert  LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete  LIKE type_t.num5                #可刪除否
   DEFINE  l_count         LIKE type_t.num5   
   DEFINE  l_insert        BOOLEAN
   DEFINE  ls_return       STRING
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE  l_success       LIKE type_t.num5
   DEFINE  l_xmdb005       LIKE xmdb_t.xmdb005
   DEFINE  l_xmdb006       LIKE xmdb_t.xmdb006   
   DEFINE  l_oodbl004      LIKE oodbl_t.oodbl004  #稅別名稱
   DEFINE  l_oodb005       LIKE oodb_t.oodb005    #含稅否
   DEFINE  l_oodb006       LIKE oodb_t.oodb006    #稅率
   DEFINE  l_oodb011       LIKE oodb_t.oodb011    #取得稅別類型1:正常稅率2:依料件設定
   DEFINE  r_success       LIKE type_t.num5


   LET r_success = TRUE

   LET g_forupd_sql = "SELECT xmdbsite,xmdb001,xmdb002,'',xmdb003,xmdb004,xmdb005,xmdb006,xmdb016,xmdb017,xmdb007,xmdb008,xmdb009 FROM xmdb_t WHERE xmdbent=? AND xmdbdocno=? AND xmdb001=? FOR UPDATE"

   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE axmt500_bcl6 CURSOR FROM g_forupd_sql

   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
                    
   
   LET g_errshow = 1
   
   LET g_flag1 = TRUE
   #取得稅別類型
   CALL s_tax_chk(g_site,g_xmda_m.xmda011)
     RETURNING l_success,l_oodbl004,l_oodb005,l_oodb006,l_oodb011
   IF l_success THEN
      LET g_tax_app = l_oodb011
   END IF   
   CALL axmt500_set_entry('u')
   CALL axmt500_set_no_entry('u')
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      INPUT BY NAME g_xmda_m.xmda039 ATTRIBUTE(WITHOUT DEFAULTS)         
                        

        BEFORE INPUT
           IF s_transaction_chk("N",0) THEN
              CALL s_transaction_begin()
           END IF
           LET g_xmda_m_t.* = g_xmda_m.*
           LET g_xmda_m_o.* = g_xmda_m.*
           
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            UPDATE xmda_t SET xmda039 = g_xmda_m.xmda039 
              WHERE xmdaent = g_enterprise AND xmdadocno = g_xmda_m.xmdadocno

            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.extend = "update xmda039"
               LET g_errparam.code   = SQLCA.sqlcode
               LET g_errparam.popup  = TRUE
               CALL cl_err()
               LET r_success = FALSE
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            END IF
            LET g_log1 = util.JSON.stringify(g_xmda_m_t)
            LET g_log2 = util.JSON.stringify(g_xmda_m)
            IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            ELSE
               CALL s_transaction_end('Y','0')
            END IF                             
      END INPUT
      
      INPUT ARRAY g_xmdc5_d FROM s_detail5.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert,
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 

         BEFORE INPUT
           IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xmdc5_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
           CALL axmt500_b_fill()
           #150312-S           
           IF g_loc = 'm' AND g_rec_b != 0 THEN
              CALL FGL_SET_ARR_CURR(g_detail_idx)
           END IF
           LET g_loc = 'm'           
           #150312-E
           LET g_rec_b = g_xmdc5_d.getLength()
           
            
         BEFORE INSERT            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmdc5_d[l_ac].* TO NULL
            INITIALIZE g_xmdc5_d_t.* TO NULL
            INITIALIZE g_xmdc5_d_o.* TO NULL  
            
            SELECT MAX(xmdb001)+1 INTO g_xmdc5_d[l_ac].xmdb001 FROM xmdb_t
              WHERE xmdbent = g_enterprise AND xmdbdocno = g_xmda_m.xmdadocno
            IF cl_null(g_xmdc5_d[l_ac].xmdb001) OR g_xmdc5_d[l_ac].xmdb001 = 0 THEN
               LET g_xmdc5_d[l_ac].xmdb001 = 1
            END IF
            
            LET g_xmdc5_d[l_ac].xmdbsite = g_site            
            LET g_xmdc5_d[l_ac].xmdb016 = "2"
            LET g_xmdc5_d[l_ac].xmdb017 = "1"
            IF g_xmdc5_d[l_ac].xmdb001 > 1 THEN
               LET l_xmdb005 = 0
               LET l_xmdb006 = 0
               CALL s_axmt500_get_amt(g_xmda_m.xmdadocno,g_xmdc5_d[l_ac].xmdb001,g_xmda_m.xmda041,g_xmda_m.xmda042) 
                 RETURNING l_xmdb005,l_xmdb006
               IF l_xmdb005 = 0  OR l_xmdb006 = 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'axm-00628'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  CANCEL INSERT
               ELSE
                  LET g_xmdc5_d[l_ac].xmdb005 = l_xmdb005
                  LET g_xmdc5_d[l_ac].xmdb006 = l_xmdb006
               END IF               
            END IF            
            
            LET g_xmdc5_d_t.* = g_xmdc5_d[l_ac].*     #新輸入資料
            LET g_xmdc5_d_o.* = g_xmdc5_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axmt500_set_entry_b(l_cmd)            
            CALL axmt500_set_no_entry_b(l_cmd)

            
         BEFORE ROW     
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac      
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx 
            
            CALL s_transaction_begin()           
            LET g_rec_b = g_xmdc5_d.getLength()   


            IF g_rec_b >= l_ac 
               AND g_xmdc5_d[l_ac].xmdb001 IS NOT NULL
            THEN 
               LET l_cmd = 'u'
               LET g_xmdc5_d_t.* = g_xmdc5_d[l_ac].*  #BACKUP
               LET g_xmdc5_d_o.* = g_xmdc5_d[l_ac].*  #BACKUP
               CALL axmt500_set_entry_b(l_cmd)             
               CALL axmt500_set_no_entry_b(l_cmd)
               
               OPEN axmt500_bcl6 USING g_enterprise,g_xmda_m.xmdadocno,g_xmdc5_d[l_ac].xmdb001
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "axmt500_bcl6"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  LET l_lock_sw = 'Y'
               ELSE
                  FETCH axmt500_bcl6 INTO g_xmdc5_d[l_ac].xmdbsite,g_xmdc5_d[l_ac].xmdb001,g_xmdc5_d[l_ac].xmdb002,g_xmdc5_d[l_ac].xmdb002_desc,g_xmdc5_d[l_ac].xmdb003,
                                           g_xmdc5_d[l_ac].xmdb004,g_xmdc5_d[l_ac].xmdb005,g_xmdc5_d[l_ac].xmdb006,g_xmdc5_d[l_ac].xmdb016,g_xmdc5_d[l_ac].xmdb017,
                                           g_xmdc5_d[l_ac].xmdb007,g_xmdc5_d[l_ac].xmdb008,g_xmdc5_d[l_ac].xmdb009
                   IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend = g_xmdc5_d_t.xmdb001
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET l_lock_sw = 'Y'
                  END IF
                  
                  LET g_bfill = 'N'
                  CALL axmt500_show()
                  LET g_bfill = 'Y'                 
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE   
            #150312-E
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = 'Y' THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  -263
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #已經有應收帳款與已收金額的資料不可以進行刪除
               IF NOT cl_null(g_xmdc5_d[l_ac].xmdb007) OR NOT cl_null(g_xmdc5_d[l_ac].xmdb008) OR
                  NOT cl_null(g_xmdc5_d[l_ac].xmdb009) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'axm-00396'
                  LET g_errparam.extend = g_xmdc5_d[l_ac].xmdb001
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  CANCEL DELETE      
               END IF 
 
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_xmda_m.xmdadocno
               LET gs_keys[gs_keys.getLength()+1] = g_xmdc5_d_t.xmdb001 
               
               DELETE FROM xmdb_t
                WHERE xmdbent = g_enterprise 
                  AND xmdbdocno = g_xmda_m.xmdadocno
                  AND xmdb001 = g_xmdc5_d_t.xmdb001

               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "DELETE xmdb_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  CALL s_transaction_end('Y','0')
               END IF 
               LET l_count = g_xmdc_d.getLength()
            END IF 

         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()
               LET INT_FLAG = 0
               CLOSE axmt500_bcl6
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM xmdb_t 
             WHERE xmdbent = g_enterprise AND xmdbdocno = g_xmda_m.xmdadocno
               AND xmdb001 = g_xmdc5_d[l_ac].xmdb001
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               INSERT INTO xmdb_t(xmdbent,xmdbdocno,xmdb001,xmdbsite,xmdb002,
                                  xmdb003,  xmdb004,xmdb005, xmdb006,xmdb016,
                                  xmdb017,  xmdb007,xmdb008,xmdb009) 
                           VALUES(g_enterprise,g_xmda_m.xmdadocno,g_xmdc5_d[l_ac].xmdb001,g_xmdc5_d[l_ac].xmdbsite,g_xmdc5_d[l_ac].xmdb002,
                                  g_xmdc5_d[l_ac].xmdb003,g_xmdc5_d[l_ac].xmdb004,g_xmdc5_d[l_ac].xmdb005,g_xmdc5_d[l_ac].xmdb006,g_xmdc5_d[l_ac].xmdb016, 
                                  g_xmdc5_d[l_ac].xmdb017,g_xmdc5_d[l_ac].xmdb007,g_xmdc5_d[l_ac].xmdb008,g_xmdc5_d[l_ac].xmdb009) 

               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "INSERT xmdb_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()                 
                  CALL s_transaction_end('N','0')                    
                  CANCEL INSERT
               END IF
            ELSE    
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00006"
               LET g_errparam.extend = "INSERT xmdb_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()
               INITIALIZE g_xmdc_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
            
            CALL s_transaction_end('Y','0')
            ERROR 'INSERT O.K'
            LET g_rec_b = g_rec_b + 1
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_xmdc5_d[l_ac].* = g_xmdc5_d_t.*
               LET r_success = FALSE
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = -263
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
               LET g_xmdc5_d[l_ac].* = g_xmdc5_d_t.*
            ELSE
               UPDATE xmdb_t 
                  SET (xmdbdocno,xmdbsite,xmdb001,xmdb002,xmdb003,
                         xmdb004, xmdb005,xmdb006,xmdb016,xmdb017,
                         xmdb007, xmdb008,xmdb009) 
                    = (g_xmda_m.xmdadocno,g_xmdc5_d[l_ac].xmdbsite,g_xmdc5_d[l_ac].xmdb001,g_xmdc5_d[l_ac].xmdb002,g_xmdc5_d[l_ac].xmdb003,
                       g_xmdc5_d[l_ac].xmdb004,g_xmdc5_d[l_ac].xmdb005,g_xmdc5_d[l_ac].xmdb006,g_xmdc5_d[l_ac].xmdb016,g_xmdc5_d[l_ac].xmdb017,
                       g_xmdc5_d[l_ac].xmdb007,g_xmdc5_d[l_ac].xmdb008,g_xmdc5_d[l_ac].xmdb009) 
                WHERE xmdbent = g_enterprise 
                  AND xmdbdocno = g_xmda_m.xmdadocno
                  AND xmdb001 = g_xmdc5_d_t.xmdb001                   
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "std-00009"
                     LET g_errparam.extend = "UPDATE xmdb_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_xmdc5_d[l_ac].* = g_xmdc5_d_t.*
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "UPDATE xmdb_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()  
                     CALL s_transaction_end('N','0')
                     LET g_xmdc5_d[l_ac].* = g_xmdc5_d_t.*
                     
                  OTHERWISE                     
                     INITIALIZE gs_keys TO NULL 
                     LET gs_keys[1] = g_xmda_m.xmdadocno
                     LET gs_keys_bak[1] = g_xmdadocno_t
                     LET gs_keys[2] = g_xmdc5_d[g_detail_idx].xmdb001
                     LET gs_keys_bak[2] = g_xmdc5_d_t.xmdb001
                     CALL axmt500_update_b('xmdb_t',gs_keys,gs_keys_bak,"'5'")
                     #資料多語言用-增/改                     
               END CASE
               #150312-S
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_xmdc5_d[g_detail_idx].xmdb001 = g_xmdc5_d_t.xmdb001
                  ) THEN
                  LET gs_keys[01] = g_xmda_m.xmdadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_xmdc5_d_t.xmdb001
                  CALL axmt500_key_update_b(gs_keys,'xmdb_t')
               END IF

               #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_xmda_m),util.JSON.stringify(g_xmdc5_d_t)
               LET g_log2 = util.JSON.stringify(g_xmda_m),util.JSON.stringify(g_xmdc5_d[l_ac])
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN
                  CALL s_transaction_end('N','0')
               END IF   
               #150312-E
            END IF
         
         AFTER FIELD xmdb001
            IF NOT cl_ap_chk_Range(g_xmdc5_d[l_ac].xmdb001,"0.000","0","","","azz-00079",1) THEN
               LET g_xmdc5_d[l_ac].xmdb001 = g_xmdc5_d_t.xmdb001
               NEXT FIELD xmdb001
            END IF
            IF  g_xmda_m.xmdadocno IS NOT NULL AND g_xmdc5_d[l_ac].xmdb001 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmda_m.xmdadocno != g_xmdadocno_t OR g_xmdc5_d[l_ac].xmdb001 != g_xmdc5_d_t.xmdb001)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmdb_t WHERE "||"xmdbent = '" ||g_enterprise|| "' AND "||"xmdbdocno = '"||g_xmda_m.xmdadocno ||"' AND "|| "xmdb001 = '"||g_xmdc5_d[l_ac].xmdb001 ||"'",'std-00004',0) THEN 
                     LET g_xmdc5_d[l_ac].xmdb001 = g_xmdc5_d_t.xmdb001
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

         AFTER FIELD xmdb002
            LET g_xmdc5_d[l_ac].xmdb002_desc = ''
            IF NOT cl_null(g_xmdc5_d[l_ac].xmdb002) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_xmdc5_d[l_ac].xmdb002 != g_xmdc5_d_t.xmdb002 OR g_xmdc5_d_t.xmdb002 IS NULL )) THEN            
                  INITIALIZE g_chkparam.* TO NULL              
                  LET g_chkparam.arg1 = g_xmda_m.xmda004
                  LET g_chkparam.arg2 = g_xmdc5_d[l_ac].xmdb002   
                  IF NOT cl_chk_exist("v_pmad002_2") THEN
                     #檢查失敗時後續處理
                     LET g_xmdc5_d[l_ac].xmdb002 = g_xmdc5_d_t.xmdb002
                     CALL s_desc_get_ooib002_desc(g_xmdc5_d[l_ac].xmdb002) RETURNING g_xmdc5_d[l_ac].xmdb002_desc
                     DISPLAY BY NAME g_xmdc5_d[l_ac].xmdb002_desc                     
                  END IF   
               END IF
            END IF 
            CALL s_desc_get_ooib002_desc(g_xmdc5_d[l_ac].xmdb002) RETURNING g_xmdc5_d[l_ac].xmdb002_desc
            DISPLAY BY NAME g_xmdc5_d[l_ac].xmdb002_desc

         AFTER FIELD xmdb004
            IF g_xmdc5_d[l_ac].xmdb003 > g_xmdc5_d[l_ac].xmdb004 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'adb-00080'
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()
               NEXT FIELD CURRENT
            END IF


         AFTER FIELD xmdb005
            IF NOT cl_ap_chk_Range(g_xmdc5_d[l_ac].xmdb005,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD xmdb005
            END IF
            IF NOT cl_null(g_xmdc5_d[l_ac].xmdb005) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_xmdc5_d[l_ac].xmdb005 != g_xmdc5_d_o.xmdb005 OR g_xmdc5_d_o.xmdb005 IS NULL )) THEN            
                  LET l_xmdb005 = 0
                  CALL s_axmt500_get_amt(g_xmda_m.xmdadocno,g_xmdc5_d[l_ac].xmdb001,g_xmda_m.xmda041,g_xmda_m.xmda042) 
                    RETURNING l_xmdb005,l_xmdb006                  
                  IF g_xmdc5_d[l_ac].xmdb005 > l_xmdb005 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'adb-00086'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_xmdc5_d[l_ac].xmdb005 = g_xmdc5_d_o.xmdb005
                     NEXT FIELD CURRENT
                  END IF 
                  #推算含稅金額
                  CALL s_axmt500_get_tax('2',g_xmda_m.xmda015,g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdadocno,g_xmdc5_d[l_ac].xmdb001,g_xmdc5_d[l_ac].xmdb005)
                    RETURNING g_xmdc5_d[l_ac].xmdb006                    
                  DISPLAY BY NAME g_xmdc5_d[l_ac].xmdb006  
               END IF   
               LET g_xmdc5_d_o.xmdb005 = g_xmdc5_d[l_ac].xmdb005               
            END IF           
	
        
         
         AFTER FIELD xmdb006
            IF NOT cl_ap_chk_Range(g_xmdc5_d[l_ac].xmdb006,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD xmdb006
            END IF
            IF NOT cl_null(g_xmdc5_d[l_ac].xmdb006) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_xmdc5_d[l_ac].xmdb006 != g_xmdc5_d_o.xmdb006 OR g_xmdc5_d_o.xmdb006 IS NULL )) THEN                   
                  LET l_xmdb006 = 0
                  CALL s_axmt500_get_amt(g_xmda_m.xmdadocno,g_xmdc5_d[l_ac].xmdb001,g_xmda_m.xmda041,g_xmda_m.xmda042) 
                    RETURNING l_xmdb005,l_xmdb006                  
                  IF g_xmdc5_d[l_ac].xmdb006 > l_xmdb006 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'adb-00087'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()          
                     LET g_xmdc5_d[l_ac].xmdb006 = g_xmdc5_d_o.xmdb006
                     NEXT FIELD CURRENT
                  END IF
                  #推算未稅金額
                  CALL s_axmt500_get_tax('1',g_xmda_m.xmda015,g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdadocno,g_xmdc5_d[l_ac].xmdb001,g_xmdc5_d[l_ac].xmdb006)
                    RETURNING g_xmdc5_d[l_ac].xmdb005                     
                  DISPLAY BY NAME g_xmdc5_d[l_ac].xmdb005
               END IF
               LET g_xmdc5_d_o.xmdb006 = g_xmdc5_d[l_ac].xmdb006
            END IF

         ON ACTION controlp INFIELD xmdb002
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdc5_d[l_ac].xmdb002       #給予default值
            LET g_qryparam.arg1 = g_xmda_m.xmda004 #
            CALL q_pmad002_3()                                      #呼叫開窗
            LET g_xmdc5_d[l_ac].xmdb002 = g_qryparam.return1        #將開窗取得的值回傳到變數
            DISPLAY g_xmdc5_d[l_ac].xmdb002 TO xmdb002              #顯示到畫面上
            CALL s_desc_get_ooib002_desc(g_xmdc5_d[l_ac].xmdb002) RETURNING g_xmdc5_d[l_ac].xmdb002_desc
            DISPLAY BY NAME g_xmdc5_d[l_ac].xmdb002_desc
            NEXT FIELD xmdb002                                      #返回原欄位

 
         AFTER ROW
            LET l_ac = ARR_CURR()
            LET l_ac_t = l_ac
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_xmdc5_d[l_ac].* = g_xmdc5_d_t.*
               END IF
               CLOSE axmt500_bcl6
               CALL s_transaction_end('N','0')
               LET r_success = FALSE
               EXIT DIALOG 
            END IF
            
            #多帳期預付款金額加總不可超過整張訂購單總訂購金額(含未稅金額均不能超過)
            LET l_xmdb005 = 0
            LET l_xmdb006 = 0
            SELECT SUM(xmdb005),SUM(xmdb006) 
              INTO l_xmdb005,l_xmdb006 FROM xmdb_t 
             WHERE xmdbent = g_enterprise 
               AND xmdbdocno = g_xmda_m.xmdadocno

            IF l_xmdb005 > g_xmda_m.xmda041 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00464'
               LET g_errparam.extend = g_xmda_m.xmdadocno
               LET g_errparam.popup = TRUE
               CALL cl_err()
               NEXT FIELD xmdb005
            END IF
            IF l_xmdb006 > g_xmda_m.xmda042 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00464'
               LET g_errparam.extend = g_xmda_m.xmdadocno
               LET g_errparam.popup = TRUE
               CALL cl_err()
               LET g_xmdc5_d[l_ac].xmdb006 = g_xmdc5_d_t.xmdb006
               NEXT FIELD xmdb006
            END IF
            
            #其他table進行unlock
            CLOSE axmt500_bcl6
            CALL s_transaction_end('Y','0')  
            
         AFTER INPUT
            #多帳期預付款金額加總不可超過整張訂購單總訂金額(含未稅金額均不能超過)
            LET l_xmdb005 = 0
            LET l_xmdb006 = 0
            SELECT SUM(xmdb005),SUM(xmdb006) 
              INTO l_xmdb005,l_xmdb006 FROM xmdb_t 
             WHERE xmdbent = g_enterprise 
               AND xmdbdocno = g_xmda_m.xmdadocno
            IF l_xmdb005 > g_xmda_m.xmda041 OR l_xmdb006 > g_xmda_m.xmda042 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00464'
               LET g_errparam.extend = g_xmda_m.xmdadocno
               LET g_errparam.popup = TRUE
               CALL cl_err()
               NEXT FIELD xmdb005
            END IF
 
      END INPUT
   
      ON ACTION accept
         ACCEPT DIALOG

      ON ACTION cancel      #在dialog button (放棄)
         LET r_success = FALSE
         EXIT DIALOG

      ON ACTION close       #在dialog 右上角 (X)
         LET r_success = FALSE
         EXIT DIALOG

      ON ACTION exit        #toolbar 離開
         LET r_success = FALSE
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG  
         
   END DIALOG
   CLOSE axmt500_cl2
   LET g_flag1 = FALSE
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.axmt500_unit_chk" order="27" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#單位資料檢查
PRIVATE FUNCTION axmt500_unit_chk(p_xmdc001,p_xmdc006)
DEFINE p_xmdc001    LIKE xmdc_t.xmdc001
DEFINE p_xmdc006    LIKE xmdc_t.xmdc006
DEFINE r_success    LIKE type_t.num5
       
       LET r_success = TRUE       
       IF NOT cl_null(p_xmdc006) THEN 
          #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
          INITIALIZE g_chkparam.* TO NULL          
          #設定g_chkparam.*的參數
          LET g_chkparam.arg1 = p_xmdc001
          LET g_chkparam.arg2 = p_xmdc006 
          #呼叫檢查存在並帶值的library
          IF NOT cl_chk_exist("v_imao002") THEN
             LET r_success = FALSE
             RETURN r_success             
          END IF
       END IF 
       RETURN r_success 
END FUNCTION]]>
  </point>
  <point name="function.axmt500_get_xmdc032" order="28" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#判斷單身取貨模式是否是供應商直送
PRIVATE FUNCTION axmt500_get_xmdc032()
DEFINE   l_cnt   LIKE type_t.num5

  LET l_cnt = 0
  SELECT COUNT(*) INTO l_cnt
    FROM xmdc_t
   WHERE xmdcent = g_enterprise
     AND xmdcdocno = g_xmda_m.xmdadocno
     AND xmdc032 = '3'
     
  IF l_cnt = 0 THEN
     RETURN FALSE
  END IF
  
  RETURN TRUE

END FUNCTION]]>
  </point>
  <point name="function.axmt500_upd_sale_price" order="29" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#訂單確認需更新單價至價格檔
PRIVATE FUNCTION axmt500_upd_sale_price()
  DEFINE l_cnt         LIKE type_t.num5
  DEFINE i             LIKE type_t.num5
  DEFINE l_xmag012     LIKE xmag_t.xmag012    #銷售單價
  DEFINE l_xmag013     LIKE xmag_t.xmag013    #本幣單價
  DEFINE l_xmag014     LIKE xmag_t.xmag014    #銷售單位
  DEFINE l_xmag015     LIKE xmag_t.xmag015    #銷售數量
  DEFINE l_xmag016     LIKE xmag_t.xmag016    #銷售含稅金額  
  DEFINE l_xmag017     LIKE xmag_t.xmag017    #銷售未稅金額
  DEFINE l_xmag018     LIKE xmag_t.xmag018    #參考單號
  DEFINE l_ooef016     LIKE ooef_t.ooef016  
  DEFINE l_scc40       LIKE type_t.chr2       #匯率类型
  DEFINE l_rate        LIKE ooan_t.ooan005
  DEFINE l_oodbl004    LIKE oodbl_t.oodbl004  #稅別名稱
  DEFINE l_oodb005     LIKE oodb_t.oodb005    #含稅否
  DEFINE l_oodb006     LIKE oodb_t.oodb006    #稅率
  DEFINE l_oodb011     LIKE oodb_t.oodb011    #取得稅別類型1:正常稅率2:依料件設定
  DEFINE l_success    LIKE type_t.num5

   
   LET l_success = TRUE

   CASE g_xmda_m.xmda048
      WHEN '1'  #內銷外幣採用匯率類型
         CALL cl_get_para(g_enterprise,g_site,'S-BAS-0010') RETURNING l_scc40
      WHEN '2'  #外銷外幣採用匯率類型
         CALL cl_get_para(g_enterprise,g_site,'S-BAS-0011') RETURNING l_scc40
      OTHERWISE EXIT CASE
   END CASE

   #取本幣
   LET l_ooef016 = ''
   SELECT ooef016 INTO l_ooef016
     FROM ooef_t
    WHERE ooefent = g_enterprise
      AND ooef001 = g_site

  CALL s_transaction_begin()
  
  FOR i = 1 TO g_xmdc_d.getLength()
      LET l_xmag012 = g_xmdc_d[i].xmdc015
      #將單價轉換成本國幣的單價
      LET l_rate = ''
      CALL s_aooi160_get_exrate('1',g_site,g_today,g_xmda_m.xmda015,l_ooef016,0,l_scc40) RETURNING l_rate
      
      IF NOT cl_null(l_rate) THEN
         LET l_xmag013 = l_xmag012 * l_rate
         CALL s_curr_round(g_site,l_ooef016,l_xmag013,'1') RETURNING l_xmag013
      END IF
      IF cl_null(l_xmag013) THEN LET l_xmag013 = l_xmag012 END IF
      
      #取稅率、單價含稅否
      CALL s_tax_chk(g_site,g_xmdc_d[i].xmdc016)
           RETURNING l_success,l_oodbl004,l_oodb005,l_oodb006,l_oodb011  
      
      LET l_xmag014 = g_xmdc_d[i].xmdc010
      LET l_xmag015 = g_xmdc_d[i].xmdc011
      LET l_xmag016 = g_xmdc_d[i].xmdc047
      LET l_xmag017 = g_xmdc_d[i].xmdc046
      LET l_xmag018 = g_xmda_m.xmdadocno


      #更新客戶料件一般銷售價格維護axmi125
      LET l_cnt = 0 
      SELECT COUNT(*) INTO l_cnt      
       FROM xmag_t
      WHERE xmagent = g_enterprise
        AND xmagsite = g_site
        AND xmag000 = 'N'          
        AND xmag001 = g_xmda_m.xmda004
        AND xmag002 = g_xmdc_d[i].xmdc001
        AND xmag003 = g_xmdc_d[i].xmdc002
        AND xmag006 = g_xmdc_d[i].xmdc010
        AND xmag007 = g_xmda_m.xmda015
        AND xmag009 = g_xmdc_d[i].xmdc016   

      IF l_cnt > 0 THEN
         UPDATE xmag_t
            SET xmag012 = l_xmag012,
                xmag013 = l_xmag013,
                xmag014 = l_xmag014,
                xmag015 = l_xmag015,
                xmag016 = l_xmag016,
                xmag017 = l_xmag017,
                xmag018 = l_xmag018,
                xmag019 = g_today,
                xmag020 = g_user
          WHERE xmagent = g_enterprise
            AND xmagsite = g_site
            AND xmag000 = 'N'          
            AND xmag001 = g_xmda_m.xmda004
            AND xmag002 = g_xmdc_d[i].xmdc001
            AND xmag003 = g_xmdc_d[i].xmdc002
            AND xmag004 = ' '
            AND xmag005 = ' '
            AND xmag006 = g_xmdc_d[i].xmdc010
            AND xmag007 = g_xmda_m.xmda015
            AND xmag009 = g_xmdc_d[i].xmdc016 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "UPDATE xmag_t"            
            LET g_errparam.popup  = FALSE
            CALL cl_err()         
            LET l_success = FALSE
            EXIT FOR  
         END IF            
      ELSE
         INSERT INTO xmag_t
                     (xmagent, xmagsite,  xmag000,  xmag001,xmag002,
                      xmag003,  xmag004,  xmag005,  xmag006,xmag007,  
                      xmag008,  xmag009,  xmag010,  xmag011,xmag012,  
                      xmag013,  xmag014,  xmag015,  xmag016,xmag017,
                      xmag018,  xmag019,  xmag020,xmagownid,xmagowndp,
                      xmagcrtid,xmagcrtdp,xmagcrtdt,xmagstus)
              VALUES (g_enterprise,g_site,'N',g_xmda_m.xmda004,g_xmdc_d[i].xmdc001,
                      g_xmdc_d[i].xmdc002,' ',' ',g_xmdc_d[i].xmdc010,g_xmda_m.xmda015,
                      l_rate,g_xmdc_d[i].xmdc016,l_oodb005,l_oodb006,l_xmag012,
                      l_xmag013,l_xmag014,l_xmag015,l_xmag016,l_xmag017,
                      l_xmag018,g_today,g_user,g_user,g_dept,
                      g_user,g_dept,g_today,'Y')
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "INSERT xmag_t"            
            LET g_errparam.popup  = FALSE
            CALL cl_err() 
            LET l_success = FALSE            
            EXIT FOR  
         END IF   
      END IF
      #151118-00022 by whitney add start
      IF l_oodb005 = 'Y' THEN
         LET l_xmag013 = l_xmag013 / (1 + l_oodb006/100)
      END IF
      #151118-00022 by whitney add end
      #更新料件據點資料的最近銷售價格(aimm201)
      UPDATE imai_t
         SET imai221 = l_xmag013,
             imai201 = g_today,
             imai202 = g_xmda_m.xmdadocno
       WHERE imaient = g_enterprise
         AND imaisite = g_site
         AND imai001 = g_xmdc_d[i].xmdc001
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE imai_t"            
         LET g_errparam.popup  = FALSE
         CALL cl_err() 
         LET l_success = FALSE            
         EXIT FOR  
      END IF
  END FOR

  IF l_success THEN
     CALL s_transaction_end('Y','0')
  ELSE 
     CALL s_transaction_end('N','0')
  END IF
END FUNCTION]]>
  </point>
  <point name="function.axmt500_xmda032_unhold" order="30" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#取消留置
PRIVATE FUNCTION axmt500_xmda032_unhold()
   DEFINE  r_success       LIKE type_t.num5
 
   LET r_success = TRUE
   #清空留置原因
   UPDATE xmda_t
      SET xmda032 = '',
          xmdamodid = g_xmda_m.xmdamodid,
          xmdamoddt = g_xmda_m.xmdamoddt,
          xmdastus = 'Y'                    #150713 earl add 多角流程須為Y才可自動拋轉
    WHERE xmdaent = g_enterprise 
      AND xmdadocno = g_xmda_m.xmdadocno  
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xmda032"            
      LET g_errparam.popup  = FALSE
      CALL cl_err() 
      LET r_success = FALSE            
      RETURN r_success 
   END IF
    
   #清掉畫面上的留置原因 
   LET g_xmda_m.xmda032      = ''
   LET g_xmda_m.xmda032_desc = ''
   DISPLAY BY NAME g_xmda_m.xmda032,g_xmda_m.xmda032_desc
   RETURN r_success    
   
END FUNCTION]]>
  </point>
  <point name="function.axmt500_xmda028_ref" order="31" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#一次性交易對象全名抓取
PRIVATE FUNCTION axmt500_xmda028_ref(p_xmda028)
DEFINE p_xmda028  LIKE xmda_t.xmda028
DEFINE r_pmak003  LIKE pmak_t.pmak003

    LET r_pmak003 = ''
    SELECT pmak003 INTO r_pmak003
      FROM pmak_t
     WHERE pmakent = g_enterprise
       AND pmak001 = p_xmda028    
    IF cl_null(r_pmak003) THEN
       CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda004) RETURNING r_pmak003
    END IF
    RETURN r_pmak003

END FUNCTION]]>
  </point>
  <point name="function.axmt500_get_xmdc044" order="32" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#計算價差比
PRIVATE FUNCTION axmt500_get_xmdc044()

   #價差比：訂單價格-取出單價/取出單價*100
   IF g_xmdc2_d[l_ac].xmdc043 <> 0 THEN
      LET g_xmdc2_d[l_ac].xmdc044 = (g_xmdc_d[l_ac].xmdc015 - g_xmdc2_d[l_ac].xmdc043)/g_xmdc2_d[l_ac].xmdc043 * 100
   END IF 

END FUNCTION]]>
  </point>
  <point name="function.axmt500_get_bmab" order="33" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 檢查料件是否為附屬零件或可選件
# Memo...........:
# Usage..........: CALL axmt500_get_bmab(p_xmdc001,p_xmdcunit)
#                  RETURNING TRUE/FALSE
# Input parameter: p_xmdc001      料號
#                : p_xmdcunit     出貨據點
# Return code....: TRUE/FALSE
# Date & Author..: 20140911 By Polly
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt500_get_bmab(p_xmdc001,p_xmdcunit)
   DEFINE p_xmdc001    LIKE xmdc_t.xmdc001
   DEFINE p_xmdcunit   LIKE xmdc_t.xmdcunit 
   DEFINE l_imae037    LIKE imae_t.imae037     #預設BOM特性 
   DEFINE l_cnt        LIKE type_t.num5
   DEFINE l_cnt2       LIKE type_t.num5   
   DEFINE l_sql        STRING

   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt FROM imaf_t
    WHERE imafent = g_enterprise
      AND imafsite = g_site
      AND imaf001 = p_xmdc001
      AND imaf018 = 'Y'
   IF l_cnt > 0 THEN   
      #抓取料件特性
      LET l_cnt2 = 0 
      
      LET l_imae037 = ''
      SELECT imae037 INTO l_imae037 FROM imae_t 
       WHERE imaeent  = g_enterprise 
         AND imaesite = g_site 
         AND imae001  = p_xmdc001  
           
      LET l_sql = "SELECT COUNT(*) FROM ( ",  
                  "   SELECT bmba020,bmba025 FROM bmaa_t,bmba_t ",
                  "    WHERE bmaa001 = bmba001 AND bmaa002 = bmba002 ",
                  "      AND bmaaent = bmbaent AND bmaasite = bmbasite ",
                  "      AND bmba005 <= SYSDATE ",    
                  "      AND (bmba006 >= SYSDATE OR bmba006 IS NULL) ",
                  "   Connect by bmba001 = prior bmba003  AND bmba002 = prior bmba002 ",
                  "   Start with bmaa001 = '",p_xmdc001,"' ",
                  "          AND bmaa002 = '",l_imae037,"' ",
                  "          AND bmbasite = '",p_xmdcunit,"' ",
                  "   ) ", 
                  " WHERE (bmba025 = 'Y' OR bmba020 = 'Y') "   
      PREPARE axmt500_BOM_p FROM l_sql
      EXECUTE axmt500_BOM_p INTO l_cnt2
      IF l_cnt2 > 0 THEN
         RETURN TRUE
      ELSE
         RETURN FALSE
      END IF
   ELSE
      RETURN FALSE   
   END IF

END FUNCTION]]>
  </point>
  <point name="function.axmt500_advance_xmda" order="34" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 帶出預先訂單單頭相關資料
# Memo...........:
# Usage..........: CALL axmt500_advance_xmda(p_xmda008)
#                  RETURNING r_success
# Input parameter: p_xmda008      來源單號
# Return code....: r_success      TRUE/FALSE
# Date & Author..: 20140912 By Polly
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt500_advance_xmda(p_xmda008)
DEFINE   p_xmda008      LIKE xmda_t.xmda008
DEFINE   l_cnt          LIKE type_t.num5
DEFINE   r_success      LIKE type_t.num5

    
    LET r_success = TRUE 

    LET g_xmda_m_t.* = g_xmda_m.*
    LET g_xmda_m_o.* = g_xmda_m.*

    SELECT xmda027,xmda009,xmda010,xmda011,xmda012,
           xmda013,xmda035,xmda015,xmda016,xmda017,
           xmda018,xmda019,xmda023,xmda032,xmda071,
           xmda050,xmda021,xmda022,xmda034,xmda024,
           xmda048,xmda049,xmda044,xmda030,xmda031,
           xmda045,xmda046,xmda047,xmda028,xmda043,
           xmda025,xmda026,xmda020,xmda037,xmda038,
           xmda036
      INTO g_xmda_m.xmda027,g_xmda_m.xmda009,g_xmda_m.xmda010,g_xmda_m.xmda011,g_xmda_m.xmda012,
           g_xmda_m.xmda013,g_xmda_m.xmda035,g_xmda_m.xmda015,g_xmda_m.xmda016,g_xmda_m.xmda017,
           g_xmda_m.xmda018,g_xmda_m.xmda019,g_xmda_m.xmda023,g_xmda_m.xmda032,g_xmda_m.xmda071,
           g_xmda_m.xmda050,g_xmda_m.xmda021,g_xmda_m.xmda022,g_xmda_m.xmda034,g_xmda_m.xmda024,
           g_xmda_m.xmda048,g_xmda_m.xmda049,g_xmda_m.xmda044,g_xmda_m.xmda030,g_xmda_m.xmda031,
           g_xmda_m.xmda045,g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028,g_xmda_m.xmda043,
           g_xmda_m.xmda025,g_xmda_m.xmda026,g_xmda_m.xmda020,g_xmda_m.xmda037,g_xmda_m.xmda038,
           g_xmda_m.xmda036           
      FROM xmda_t
     WHERE xmdaent = g_enterprise
       AND xmdadocno = p_xmda008
       AND xmda004 = g_xmda_m.xmda004
       AND xmda005 = '5'       
       AND xmdastus = 'Y'      
       
    IF SQLCA.sqlcode THEN
       INITIALIZE g_errparam TO NULL
       LET g_errparam.code = SQLCA.sqlcode
       LET g_errparam.extend = 'sel xmda_t'
       LET g_errparam.popup = TRUE
       CALL cl_err()   
       LET g_xmda_m.* = g_xmda_m_t.*       
       LET r_success = FALSE
       RETURN r_success
    END IF
    CALL axmt500_xmda027_ref()
    CALL s_desc_get_ooib002_desc(g_xmda_m.xmda009) RETURNING g_xmda_m.xmda009_desc
    CALL s_desc_get_acc_desc('238',g_xmda_m.xmda010) RETURNING g_xmda_m.xmda010_desc
    CALL s_desc_get_tax_desc1(g_site,g_xmda_m.xmda011) RETURNING g_xmda_m.xmda011_desc 
    CALL axmt500_xmda035_ref(g_xmda_m.xmda035) RETURNING g_xmda_m.xmda035_desc 
    CALL s_desc_get_currency_desc(g_xmda_m.xmda015) RETURNING g_xmda_m.xmda015_desc
    CALL axmt500_xmda017_ref(g_xmda_m.xmda017) RETURNING g_xmda_m.xmda017_desc
    CALL axmt500_xmda018_ref(g_xmda_m.xmda018) RETURNING g_xmda_m.xmda018_desc
    CALL s_desc_get_acc_desc('275',g_xmda_m.xmda023) RETURNING g_xmda_m.xmda023_desc    
    CALL s_desc_get_acc_desc('297',g_xmda_m.xmda032) RETURNING g_xmda_m.xmda032_desc 
    CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda021) RETURNING g_xmda_m.xmda021_desc 
    CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda022) RETURNING g_xmda_m.xmda022_desc  
    CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda034) RETURNING g_xmda_m.xmda034_desc
    CALL axmt500_xmda024_ref(g_xmda_m.xmda024) RETURNING g_xmda_m.xmda024_desc
    CALL axmt500_xmda025_ref(g_xmda_m.xmda022,g_xmda_m.xmda025) RETURNING g_xmda_m.xmda025_desc,g_xmda_m.oofb0171
    CALL axmt500_xmda025_ref(g_xmda_m.xmda021,g_xmda_m.xmda026) RETURNING g_xmda_m.xmda026_desc,g_xmda_m.oofb0172
    CALL s_desc_get_acc_desc('263',g_xmda_m.xmda020) RETURNING g_xmda_m.xmda020_desc  
    CALL s_apmi011_location_ref(g_xmda_m.xmda020,g_xmda_m.xmda037) RETURNING g_xmda_m.xmda037_desc
    CALL s_apmi011_location_ref(g_xmda_m.xmda020,g_xmda_m.xmda038) RETURNING g_xmda_m.xmda038_desc
    CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda036) RETURNING g_xmda_m.xmda036_desc

    DISPLAY BY NAME g_xmda_m.xmda027,g_xmda_m.xmda009,g_xmda_m.xmda009_desc,g_xmda_m.xmda010,
                    g_xmda_m.xmda010_desc,g_xmda_m.xmda011,g_xmda_m.xmda011_desc,g_xmda_m.xmda012,g_xmda_m.xmda013,
                    g_xmda_m.xmda035,g_xmda_m.xmda035_desc,g_xmda_m.xmda015,g_xmda_m.xmda015_desc,g_xmda_m.xmda016,
                    g_xmda_m.xmda017,g_xmda_m.xmda017_desc,g_xmda_m.xmda018,g_xmda_m.xmda018_desc,g_xmda_m.xmda019,
                    g_xmda_m.xmda023,g_xmda_m.xmda023_desc,g_xmda_m.xmda032,g_xmda_m.xmda032_desc,g_xmda_m.xmda071,
                    g_xmda_m.xmda050,g_xmda_m.xmda021,g_xmda_m.xmda021_desc,g_xmda_m.xmda022,g_xmda_m.xmda022_desc,
                    g_xmda_m.xmda034,g_xmda_m.xmda034_desc,g_xmda_m.xmda024,g_xmda_m.xmda024_desc,g_xmda_m.xmda048,
                    g_xmda_m.xmda049,g_xmda_m.xmda044,g_xmda_m.xmda030,g_xmda_m.xmda031,g_xmda_m.xmda045,
                    g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028,g_xmda_m.xmda043,g_xmda_m.xmda025,
                    g_xmda_m.xmda025_desc,g_xmda_m.oofb0171,g_xmda_m.xmda026,g_xmda_m.xmda026_desc,g_xmda_m.oofb0172,
                    g_xmda_m.xmda020,g_xmda_m.xmda020_desc,g_xmda_m.xmda037,g_xmda_m.xmda037_desc,g_xmda_m.xmda038,
                    g_xmda_m.xmda038_desc,g_xmda_m.xmda036,g_xmda_m.xmda036_desc    

    LET g_xmda_m_t.* = g_xmda_m.*
    LET g_xmda_m_o.* = g_xmda_m.*
    RETURN r_success
    
END FUNCTION]]>
  </point>
  <point name="function.axmt500_advance_xmdc" order="35" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 帶出預先訂單單身相關資料
# Memo...........:
# Usage..........: CALL axmt500_advance_xmdc(p_xmda008)
#                  RETURNING r_success
# Input parameter: p_xmda008      來源單號
# Return code....: r_success      TRUE/FALSE
# Date & Author..: 20140912 By Polly
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt500_advance_xmdc(p_xmda008)
   DEFINE  p_xmda008      LIKE xmda_t.xmda008
   DEFINE  l_xmda009      LIKE xmda_t.xmda009     #收款條件
   DEFINE  l_xmda010      LIKE xmda_t.xmda010     #交易條件
   DEFINE  l_xmda011      LIKE xmda_t.xmda011     #稅別
   DEFINE  l_xmda015      LIKE xmda_t.xmda015     #幣別
   DEFINE  l_xmda017      LIKE xmda_t.xmda017     #取價方式
   DEFINE  l_oodbl004     LIKE oodbl_t.oodbl004   #稅別名稱
   DEFINE  l_oodb005      LIKE oodb_t.oodb005     #含稅否
   DEFINE  l_oodb006      LIKE oodb_t.oodb006     #稅率
   DEFINE  l_oodb011      LIKE oodb_t.oodb011     #取得稅別類型1:正常稅率2:依料件設定
   DEFINE  l_xmdc         RECORD LIKE xmdc_t.*   
   DEFINE  l_sql          STRING
   DEFINE  l_flag         LIKE type_t.num5
   DEFINE  l_flag2        LIKE type_t.num5
   DEFINE  l_success      LIKE type_t.num5
   DEFINE  l_ooba002      LIKE ooba_t.ooba002     #單據別編號   20150826 dorislai add
   DEFINE  r_success      LIKE type_t.num5
 
   LET r_success = TRUE
   LET l_flag = TRUE
   LET l_flag2 = TRUE
   
   LET l_xmda009 = ''
   LET l_xmda010 = ''
   LET l_xmda011 = ''
   LET l_xmda015 = ''
   LET l_xmda017 = ''
   LET l_oodb011 = ''
   
   SELECT xmda009,xmda010,xmda011,xmda015,xmda017
     INTO l_xmda009,l_xmda010,l_xmda011,l_xmda015,l_xmda017
     FROM xmda_t
    WHERE xmdaent = g_enterprise
      AND xmdadocno = p_xmda008
   #判斷單頭是否收款條件、交易條件、幣別、取價方式，如有，需重新取計並計算金額
   IF l_xmda009 <> g_xmda_m.xmda009 OR l_xmda010 <> g_xmda_m.xmda010 OR 
      l_xmda015 <> g_xmda_m.xmda015 OR l_xmda017 <> g_xmda_m.xmda017 THEN
      LET l_flag = FALSE
   END IF      
   #判斷單頭是否有修改稅別，如有，需重新計算金額
   IF l_xmda011 <> g_xmda_m.xmda011 THEN
      LET l_flag2 = FALSE
   END IF   
 
   #取得稅別類型
   CALL s_tax_chk(g_site,g_xmda_m.xmda011) RETURNING l_success,l_oodbl004,l_oodb005,l_oodb006,l_oodb011
    
   LET l_sql = "SELECT  xmdcseq,xmdc027,xmdc001,xmdc019, ",
               "        xmdc002,xmdc006,xmdc007, ",
               "        xmdc008,xmdc009,xmdc024,xmdc012,xmdc013, ",
               "        xmdc045,xmdc016,xmdc017,xmdc010,xmdc011, ",
               "        xmdc015,xmdc046,xmdc047,xmdc048,xmdc023, ",
               "        xmdc020,xmdc021,xmdc022,xmdcunit,xmdcorga, ",
               "        xmdc052,xmdc049,xmdc053,xmdc050,xmdc028, ",
               "        xmdc029,xmdc030,xmdc057,xmdc025,xmdc026, ",
               "        xmdc031,xmdc032,xmdc033,xmdc003,xmdc054, ",
               "        xmdc036,xmdc037,xmdc038,xmdc039,xmdc035, ",
               "        xmdc040,xmdc041,xmdc042,xmdc043,xmdc044  ",
               "  FROM  xmdc_t ",
               " WHERE xmdcent = '",g_enterprise,"'",
               "   AND xmdcdocno = '",p_xmda008,"'",
               " ORDER BY xmdcseq "

   PREPARE sel_xmdc_pre FROM l_sql
   DECLARE sel_xmdc_cur CURSOR FOR sel_xmdc_pre
   INITIALIZE l_xmdc.* TO NULL          
   FOREACH sel_xmdc_cur INTO l_xmdc.xmdcseq,l_xmdc.xmdc027,l_xmdc.xmdc001,l_xmdc.xmdc019, 
                             l_xmdc.xmdc002,l_xmdc.xmdc006,l_xmdc.xmdc007, 
                             l_xmdc.xmdc008,l_xmdc.xmdc009,l_xmdc.xmdc024,l_xmdc.xmdc012,l_xmdc.xmdc013, 
                             l_xmdc.xmdc045,l_xmdc.xmdc016,l_xmdc.xmdc017,l_xmdc.xmdc010,l_xmdc.xmdc011, 
                             l_xmdc.xmdc015,l_xmdc.xmdc046,l_xmdc.xmdc047,l_xmdc.xmdc048,l_xmdc.xmdc023, 
                             l_xmdc.xmdc020,l_xmdc.xmdc021,l_xmdc.xmdc022,l_xmdc.xmdcunit,l_xmdc.xmdcorga, 
                             l_xmdc.xmdc052,l_xmdc.xmdc049,l_xmdc.xmdc053,l_xmdc.xmdc050,l_xmdc.xmdc028, 
                             l_xmdc.xmdc029,l_xmdc.xmdc030,l_xmdc.xmdc057,l_xmdc.xmdc025,l_xmdc.xmdc026, 
                             l_xmdc.xmdc031,l_xmdc.xmdc032,l_xmdc.xmdc033,l_xmdc.xmdc003,l_xmdc.xmdc054, 
                             l_xmdc.xmdc036,l_xmdc.xmdc037,l_xmdc.xmdc038,l_xmdc.xmdc039,l_xmdc.xmdc035, 
                             l_xmdc.xmdc040,l_xmdc.xmdc041,l_xmdc.xmdc042,l_xmdc.xmdc043,l_xmdc.xmdc044  
      IF NOT l_flag THEN
         #單身重新取價
         CALL s_sale_price_get(g_xmda_m.xmda017,g_xmda_m.xmda004,l_xmdc.xmdc001,l_xmdc.xmdc002,g_xmda_m.xmda015,
                               l_xmdc.xmdc016,g_xmda_m.xmda009,g_xmda_m.xmda010,g_xmda_m.xmda023,g_xmda_m.xmdadocno,
                               g_xmda_m.xmdadocdt,l_xmdc.xmdc010,l_xmdc.xmdc011,g_site,'1',g_xmda_m.xmda048)
           RETURNING l_xmdc.xmdc040,l_xmdc.xmdc043,l_xmdc.xmdc041,l_xmdc.xmdc042
         LET l_xmdc.xmdc015 = l_xmdc.xmdc043
         #重新計算含稅、未稅金額
         CALL s_axmt500_get_amount(g_xmda_m.xmdadocno,l_xmdc.xmdcseq,l_xmdc.xmdc011,l_xmdc.xmdc015,l_xmdc.xmdc016,g_xmda_m.xmda015,g_xmda_m.xmda016)
           RETURNING l_xmdc.xmdc046,l_xmdc.xmdc047,l_xmdc.xmdc048         
      END IF
         
      IF NOT l_flag2 THEN
         #單身重新取稅別
         IF l_oodb011 = '2' AND NOT cl_null(l_xmdc.xmdc001) AND NOT cl_null(g_xmda_m.xmda024) THEN
            #依料件設定
            CALL s_tax_chktype(g_xmda_m.xmdasite,g_xmda_m.xmda004,l_xmdc.xmdc001,'1',g_xmda_m.xmda024)
                 RETURNING l_success,l_xmdc.xmdc016,l_xmdc.xmdc017
            IF NOT l_success THEN
               #稅別檢查失敗，將稅別、稅率清空
               LET l_xmdc.xmdc016 = ''
               LET l_xmdc.xmdc017 = ''
            END IF                   
         ELSE
            #依正常稅率
            LET l_xmdc.xmdc016 = g_xmda_m.xmda011
            LET l_xmdc.xmdc017 = g_xmda_m.xmda012
         END IF
         #重新計算含稅、未稅金額
         CALL s_axmt500_get_amount(g_xmda_m.xmdadocno,l_xmdc.xmdcseq,l_xmdc.xmdc011,l_xmdc.xmdc015,l_xmdc.xmdc016,g_xmda_m.xmda015,g_xmda_m.xmda016)
           RETURNING l_xmdc.xmdc046,l_xmdc.xmdc047,l_xmdc.xmdc048
      END IF     
      #dorislai-20150824-add----(S)
      #預帶預設庫位的值，aooi200抓值優先順序：預設欄位>應用參數
      IF cl_null(l_xmdc.xmdc028) THEN
         #預設欄位
         CALL s_aooi200_get_slip(g_xmda_m.xmdadocno) RETURNING l_success,l_ooba002
         IF l_success THEN
            CALL s_aooi200_get_doc_default(g_site,'1',l_ooba002,'xmdc028',l_xmdc.xmdc028)
            RETURNING l_xmdc.xmdc028
            #應用參數
            IF cl_null(l_xmdc.xmdc028) THEN
               CALL cl_get_doc_para(g_enterprise,g_site,l_ooba002,'D-MFG-0076')
               RETURNING l_xmdc.xmdc028
            END IF
         END IF
      END IF
      #dorislai-20150824-add----(E)
      INSERT INTO xmdc_t
                  (xmdcent,xmdcsite,xmdcdocno,xmdcseq,xmdc027,
                   xmdc001,xmdc019,xmdc002,
                   xmdc006,xmdc007,xmdc008,xmdc009,xmdc024,
                   xmdc012,xmdc013,xmdc045,xmdc016,xmdc017,
                   xmdc010,xmdc011,xmdc015,xmdc046,xmdc047,
                   xmdc048,xmdc023,xmdc020,xmdc021,xmdc022,
                   xmdcunit,xmdcorga,xmdc052,xmdc049,xmdc053,
                   xmdc050,xmdc028,xmdc029,xmdc030,xmdc057,
                   xmdc025,xmdc026,xmdc031,xmdc032,xmdc033,
                   xmdc003,xmdc054,xmdc036,xmdc037,xmdc038,
                   xmdc039,xmdc035,xmdc040,xmdc041,xmdc042,
                   xmdc043,xmdc044) 
           VALUES (g_enterprise,g_site,g_xmda_m.xmdadocno,l_xmdc.xmdcseq,l_xmdc.xmdc027,
                   l_xmdc.xmdc001,l_xmdc.xmdc019,l_xmdc.xmdc002,
                   l_xmdc.xmdc006,l_xmdc.xmdc007,l_xmdc.xmdc008,l_xmdc.xmdc009,l_xmdc.xmdc024,
                   l_xmdc.xmdc012,l_xmdc.xmdc013,l_xmdc.xmdc045,l_xmdc.xmdc016,l_xmdc.xmdc017,
                   l_xmdc.xmdc010,l_xmdc.xmdc011,l_xmdc.xmdc015,l_xmdc.xmdc046,l_xmdc.xmdc047,
                   l_xmdc.xmdc048,l_xmdc.xmdc023,l_xmdc.xmdc020,l_xmdc.xmdc021,l_xmdc.xmdc022,
                   l_xmdc.xmdcunit,l_xmdc.xmdcorga,l_xmdc.xmdc052,l_xmdc.xmdc049,l_xmdc.xmdc053,
                   l_xmdc.xmdc050,l_xmdc.xmdc028,l_xmdc.xmdc029,l_xmdc.xmdc030,l_xmdc.xmdc057,
                   l_xmdc.xmdc025,l_xmdc.xmdc026,l_xmdc.xmdc031,l_xmdc.xmdc032,l_xmdc.xmdc033,
                   l_xmdc.xmdc003,l_xmdc.xmdc054,l_xmdc.xmdc036,l_xmdc.xmdc037,l_xmdc.xmdc038,
                   l_xmdc.xmdc039,l_xmdc.xmdc035,l_xmdc.xmdc040,l_xmdc.xmdc041,l_xmdc.xmdc042,
                   l_xmdc.xmdc043,l_xmdc.xmdc044) 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'INSERT INTO xmdc_t'
         LET g_errparam.popup = TRUE
         CALL cl_err()
         FREE sel_xmdc_pre
         LET r_success = FALSE          
         RETURN r_success
      END IF     
      #帶出訂單多交期匯總檔
      IF NOT axmt500_advance_xmdf(p_xmda008,l_xmdc.xmdcseq) THEN
         LET r_success = FALSE          
         RETURN r_success        
      END IF
      #產生訂單交期明細檔
      IF NOT s_axmt500_gen_xmdd(g_xmda_m.xmdadocno,l_xmdc.xmdcseq) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
      INITIALIZE l_xmdc.* TO NULL 
   END FOREACH
   FREE sel_xmdc_pre   

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.axmt500_advance_xmdf" order="36" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 帶出預先訂單多交期匯總檔相關資料
# Memo...........:
# Usage..........: CALL axmt500_advance_xmdf(p_xmda008,p_xmdcseq)
#                  RETURNING r_success
# Input parameter: p_xmda008      來源單號
#                : p_xmdcseq      項次
# Return code....: r_success      TRUE/FALSE
# Date & Author..: 20140912 By Polly
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt500_advance_xmdf(p_xmda008,p_xmdcseq)
   DEFINE  p_xmda008      LIKE xmda_t.xmda008
   DEFINE  p_xmdcseq      LIKE xmdc_t.xmdcseq
   DEFINE  l_xmdf         RECORD LIKE xmdf_t.*
   DEFINE  l_cnt          LIKE type_t.num5
   DEFINE  l_sql          STRING
   DEFINE  r_success      LIKE type_t.num5
  
   LET r_success = TRUE
   LET l_cnt = 0 
   SELECT COUNT(*) INTO l_cnt
     FROM xmdf_t
    WHERE xmdfent = g_enterprise
      AND xmdfdocno = p_xmda008
      AND xmdfseq = p_xmdcseq
   IF l_cnt = 0 THEN
      RETURN r_success
   END IF   
   INITIALIZE l_xmdf.* TO NULL
   LET l_sql = "SELECT xmdfseq2,xmdf002,xmdf003,xmdf004,xmdf005, ",
               "        xmdf006,xmdf007 ",
               "  FROM xmdf_t ",
               " WHERE xmdfent = '",g_enterprise,"'",
               "   AND xmdfdocno = '",p_xmda008,"'",
               "   AND xmdfseq = '",p_xmdcseq,"'",
               " ORDER BY xmdfseq2 "
   PREPARE sel_xmdf_pre FROM l_sql
   DECLARE sel_xmdf_cur CURSOR FOR sel_xmdf_pre

   FOREACH sel_xmdf_cur INTO l_xmdf.xmdfseq2,l_xmdf.xmdf002,l_xmdf.xmdf003,l_xmdf.xmdf004,l_xmdf.xmdf005,
                             l_xmdf.xmdf006,l_xmdf.xmdf007
      INSERT INTO xmdf_t 
                 (xmdfent,xmdfsite,xmdfdocno,xmdfseq,xmdfseq2,
                  xmdf002,xmdf003,xmdf004,xmdf005,xmdf006,
                  xmdf007)
          VALUES (g_enterprise,g_site,g_xmda_m.xmdadocno,p_xmdcseq,l_xmdf.xmdfseq2,
                  l_xmdf.xmdf002,l_xmdf.xmdf003,l_xmdf.xmdf004,l_xmdf.xmdf005,l_xmdf.xmdf006,
                  l_xmdf.xmdf007)
                  
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'INSERT INTO xmdf_t'
         LET g_errparam.popup = TRUE
         CALL cl_err()
         FREE sel_xmdf_pre
         LET r_success = FALSE          
         RETURN r_success
      END IF                         
      INITIALIZE l_xmdf.* TO NULL 
   END FOREACH
   FREE sel_xmdf_pre  
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.axmt500_advance_chk_xmdc001" order="37" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 預先訂單資料檢核
# Memo...........: 檢核料號+產品特徵是否存在預先訂單中
# Usage..........: CALL axmt500_advance_chk_xmdc001(p_xmdc001,p_xmdc002)
#                  RETURNING TRUE/FALSE
# Input parameter: p_xmdc001    料件編號
#                : p_xmdc002    產品特徵
# Return code....: TURE/FALSE
# Date & Author..: 20140912 By Polly
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt500_advance_chk_xmdc001(p_xmdc001,p_xmdc002)
DEFINE  p_xmdc001   LIKE xmdc_t.xmdc001
DEFINE  p_xmdc002   LIKE xmdc_t.xmdc002
DEFINE  l_cnt       LIKE type_t.num5

   #檢核料號+產品特徵是否存在預先訂單中
   LET l_cnt = 0 
   IF p_xmdc002 IS NOT NULL THEN
      SELECT COUNT(*) INTO l_cnt
        FROM xmda_t,xmdc_t
       WHERE xmdaent = g_enterprise
         AND xmdaent = xmdcent
         AND xmdadocno = xmdcdocno
         AND xmdadocno = g_xmda_m.xmda008
         AND xmdc001 = p_xmdc001
         AND xmdc002 = p_xmdc002   
   ELSE
      SELECT COUNT(*) INTO l_cnt
        FROM xmda_t,xmdc_t
       WHERE xmdaent = g_enterprise
         AND xmdaent = xmdcent
         AND xmdadocno = xmdcdocno
         AND xmdadocno = g_xmda_m.xmda008
         AND xmdc001 = p_xmdc001   
   END IF

   IF l_cnt > 0 THEN 
      RETURN TRUE
   ELSE
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'axm-00466'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()    
      RETURN FALSE
   END IF  

END FUNCTION]]>
  </point>
  <point name="function.axmt500_advance_chk_xmdc007" order="38" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 計算並檢查預先訂單的料件數量
# Memo...........:
# Usage..........: CALL axmt500_advance_chk_xmdc007(p_xmdcseq,p_xmdc001,p_xmdc002,p_xmdc006,p_xmdc007)
# Input parameter: p_xmdcseq：項次
#                : p_xmdc001：料件編號  
#                : p_xmdc002：產品特徵 
#                : p_xmdc006：單位 
#                : p_xmdc007：數量 
# Date & Author..: 2014/10/06 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt500_advance_chk_xmdc007(p_xmdcseq,p_xmdc001,p_xmdc002,p_xmdc006,p_xmdc007)
   DEFINE p_xmdcseq     LIKE xmdc_t.xmdcseq       #項次
   DEFINE p_xmdc001     LIKE xmdc_t.xmdc001       #料件編號 
   DEFINE p_xmdc002     LIKE xmdc_t.xmdc002       #產品特徵 
   DEFINE p_xmdc006     LIKE xmdc_t.xmdc006       #單位
   DEFINE p_xmdc007     LIKE xmdc_t.xmdc007       #數量
   DEFINE l_xmdc006     LIKE xmdc_t.xmdc006
   DEFINE l_xmdc007     LIKE xmdc_t.xmdc007
   DEFINE l_imaa006     LIKE imaa_t.imaa006       #基礎單位
   DEFINE l_sql         STRING
   DEFINE l_success     LIKE type_t.num5
   DEFINE l_qty_t1      LIKE xmdc_t.xmdc007       #數量
   DEFINE l_qty_t2      LIKE xmdc_t.xmdc007
   DEFINE l_qty_t3      LIKE xmdc_t.xmdc007       #151120-00001#1 add   
   DEFINE r_success     LIKE type_t.num5
   
   #因為資料來源的預先訂單，單身可以輸入多筆相同料號 但單位、數量不同的資料
   #所以應該先將其數量轉換，統一單位後，再行判斷

   LET r_success = TRUE
   #取得料件的基礎單位
   LET l_imaa006 = ''
   SELECT imaa006 INTO l_imaa006
     FROM imaa_t
    WHERE imaaent = g_enterprise
      AND imaa001 = p_xmdc001    #料號

   #計算來源的訂單數量 
   LET l_sql = "SELECT xmdc006,xmdc007 ",
               "  FROM xmdc_t ",
               " WHERE xmdcent   = '",g_enterprise,"'  ",
               "   AND xmdcsite  = '",g_site,"' ",
               "   AND xmdcdocno = '",g_xmda_m.xmda008,"' ",        #來源單號
               "   AND xmdc001   = '",p_xmdc001,"' ",               #料號 
               "   AND xmdc002   = '",p_xmdc002,"' "
   PREPARE axmt500_advance_chk_prep FROM l_sql
   DECLARE axmt500_advance_chk_curs CURSOR FOR axmt500_advance_chk_prep

   LET l_xmdc006 = ''       #單位
   LET l_xmdc007 = 0        #數量
   LET l_qty_t1  = 0        #來源的數量

   FOREACH axmt500_advance_chk_curs INTO l_xmdc006,l_xmdc007
      IF l_xmdc006 != l_imaa006 THEN
         CALL s_aooi250_convert_qty(p_xmdc001,l_xmdc006,l_imaa006,l_xmdc007)
              RETURNING l_success,l_xmdc007
      END IF
      LET l_qty_t1 = l_qty_t1 + l_xmdc007
   END FOREACH

   #計算本訂單的數量
   LET l_sql = "SELECT xmdc006,xmdc007 ",
               "  FROM xmdc_t ",
               " WHERE xmdcent   = '",g_enterprise,"' ", 
               "   AND xmdcsite  = '",g_site,"' ",
               "   AND xmdcdocno = '",g_xmda_m.xmdadocno,"' ",
               "   AND xmdc001   = '",p_xmdc001,"' ", 
               "   AND xmdc002   = '",p_xmdc002,"' ", 
               "   AND xmdcseq  != '",p_xmdcseq,"' "
   PREPARE axmt500_advance_chk_prep2 FROM l_sql
   DECLARE axmt500_advance_chk_curs2 CURSOR FOR axmt500_advance_chk_prep2

   LET l_xmdc006 = ''     #單位
   LET l_xmdc007 = 0      #數量
   LET l_qty_t2  = 0      #本單據的數量
   FOREACH axmt500_advance_chk_curs2 INTO l_xmdc006,l_xmdc007
      IF l_xmdc006 != l_imaa006 THEN
         CALL s_aooi250_convert_qty(p_xmdc001,l_xmdc006,l_imaa006,l_xmdc007)
              RETURNING l_success,l_xmdc007
      END IF
      LET l_qty_t2 = l_qty_t2 + l_xmdc007
   END FOREACH

   IF p_xmdc006 != l_imaa006 THEN
      CALL s_aooi250_convert_qty(p_xmdc001,p_xmdc006,l_imaa006,p_xmdc007)
           RETURNING l_success,p_xmdc007
   END IF  
   LET l_qty_t2 = l_qty_t2 + p_xmdc007   
   
   #151120-00001#1 --add--(s)
   #計算其它訂單的訂單數量
    LET l_sql = "SELECT xmdc006,xmdc007 ",
               "  FROM xmda_t,xmdc_t ",
               " WHERE xmdaent = xmdcent ",
               "   AND xmdadocno = xmdcdocno ",
               "   AND xmda008 = '",g_xmda_m.xmda008,"' ",
               "   AND xmdadocno != '",g_xmda_m.xmdadocno,"' ",      
               "   AND xmdcent   = '",g_enterprise,"' ", 
               "   AND xmdcsite  = '",g_site,"' ",
               "   AND xmdc001   = '",p_xmdc001,"' ", 
               "   AND xmdc002   = '",p_xmdc002,"' "
   PREPARE axmt500_advance_chk_prep3 FROM l_sql
   DECLARE axmt500_advance_chk_curs3 CURSOR FOR axmt500_advance_chk_prep3

   LET l_xmdc006 = ''     #單位
   LET l_xmdc007 = 0      #數量
   LET l_qty_t3  = 0      #其它單據的數量
   FOREACH axmt500_advance_chk_curs3 INTO l_xmdc006,l_xmdc007
      IF l_xmdc006 != l_imaa006 THEN
         CALL s_aooi250_convert_qty(p_xmdc001,l_xmdc006,l_imaa006,l_xmdc007)
              RETURNING l_success,l_xmdc007
      END IF
      LET l_qty_t3 = l_qty_t3 + l_xmdc007
   END FOREACH
   #151120-00001#1 --add--(e)
  
  #IF l_qty_t1 > l_qty_t2 THEN                              #151120-00001#1 mark
   IF l_qty_t1 < l_qty_t2 + l_qty_t3 THEN                   #151120-00001#1 add
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = ""
      LET g_errparam.code   = 'axm-00482'  #輸入的訂購量大於預先訂單中料號+產品特徵的總訂購量！！
      LET g_errparam.popup  = TRUE
      CALL cl_err()       
     #LET r_success = TRUE              #151120-00001#1 mark
      LET r_success = FALSE             #151120-00001#1 add
      RETURN r_success
   END IF
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.axmt500_from_sub_get_body1" order="39" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 由應用元件產生單身資料
# Memo...........:
# Usage..........: axmt500_from_sub_get_body1()
# Date & Author..: 2014/11/25 By shiun
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt500_from_sub_get_body1()
   DEFINE l_success       LIKE type_t.num5
   DEFINE l_n             LIKE type_t.num5
   DEFINE l_success1      LIKE type_t.num5
   DEFINE l_controlno     LIKE ooha_t.ooha001
   DEFINE l_imaf122       LIKE imaf_t.imaf122
   DEFINE l_pmao004       LIKE pmao_t.pmao004
   DEFINE l_xmdc016       LIKE xmdc_t.xmdc016
   DEFINE l_xmdc017       LIKE xmdc_t.xmdc017
   DEFINE l_xmdcunit      LIKE xmdc_t.xmdcunit    #出貨據點
   DEFINE l_s_item_select DYNAMIC ARRAY OF RECORD
                             imaa009            LIKE imaa_t.imaa009,    #產品分類
                             imaa001            LIKE imaa_t.imaa001,    #料件編號
                             inam002            LIKE inam_t.inam002,    #產品特徵
                             imaf053            LIKE imaf_t.imaf053,    #單位 
                             dat                LIKE type_t.dat,        #交貨日期                             
                             num                LIKE inao_t.inao012     #數量
                          END RECORD
   DEFINE l_xmdc    RECORD  LIKE xmdc_t.*
   DEFINE l_cnt           LIKE type_t.num5
   DEFINE l_i             LIKE type_t.num5
   
   LET g_slip = ''
   CALL s_aooi200_get_slip(g_xmda_m.xmdadocno) RETURNING l_success,g_slip
   
   CALL s_transaction_begin()

   LET l_success = TRUE
   CALL l_s_item_select.clear() 
   
   CALL s_item_select('Y') RETURNING l_success,l_s_item_select

   IF NOT l_success THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF

   LET l_cnt = ''
   SELECT MAX(xmdcseq)+1 INTO l_cnt
     FROM xmdc_t
    WHERE xmdcent = g_enterprise
      AND xmdcdocno = g_xmda_m.xmdadocno
   IF cl_null(l_cnt) OR l_cnt = 0 THEN
      LET l_cnt = 1
   END IF

   FOR l_i = 1 TO l_s_item_select.getLength()
      INITIALIZE l_xmdc.* TO NULL
      LET l_xmdc.xmdcent   = g_enterprise
      LET l_xmdc.xmdcsite  = g_site
      LET l_xmdc.xmdcdocno = g_xmda_m.xmdadocno
      LET l_xmdc.xmdcseq   = l_cnt
      LET l_xmdc.xmdc001   = l_s_item_select[l_i].imaa001
      LET l_xmdc.xmdc002   = l_s_item_select[l_i].inam002
      LET l_xmdc.xmdc012   = l_s_item_select[l_i].dat
      LET l_xmdc.xmdc027   = '' 
      LET l_xmdc.xmdc007   = l_s_item_select[l_i].num
      IF l_success THEN
         #由交易對象 料號 產品特徵 來取得 客戶料號 
         CALL s_apmi070_get_pmao004(g_xmda_m.xmda004,l_xmdc.xmdc001,l_xmdc.xmdc002)
              RETURNING l_success,l_xmdc.xmdc027
      END IF
      LET l_n = 0
      #先判斷這個供應商是否有設多個當前銷售控制組範圍內的客戶預設條件，則開窗，讓user 選擇帶哪一個控制組的資料
      LET l_controlno = ''
      CALL s_control_get_group('2',g_xmda_m.xmda002,g_xmda_m.xmda003) RETURNING l_success,l_controlno
      
      IF NOT cl_null(l_controlno) THEN
         SELECT COUNT(*) INTO l_n FROM xmaf_t 
            WHERE xmafent = g_enterprise AND xmafsite = g_site AND xmaf001 = g_xmda_m.xmda004
              AND xmaf002 = l_controlno AND xmaf003 = l_xmdc.xmdc001 AND xmaf004 = l_xmdc.xmdc002
         #若訂購料件有設置客戶料件預設條件'(axmi121)時，則需將設置的預設條件值預設到訂購單對應欄位
         IF l_n > 0 THEN  
            LET l_xmdcunit = ''                               #出貨據點
            SELECT xmaf005,xmaf006,xmaf007,xmaf008,xmaf009                   
              INTO l_xmdc.xmdc003,l_xmdc.xmdc006,l_xmdc.xmdc008,l_xmdc.xmdc010,l_xmdcunit                   
              FROM xmaf_t 
             WHERE xmafent = g_enterprise 
               AND xmafsite = g_site 
               AND xmaf001 = g_xmda_m.xmda004
               AND xmaf002 = l_controlno 
               AND xmaf003 = l_xmdc.xmdc001
               AND xmaf004 = l_xmdc.xmdc002
            
            #單頭多角性質為"3:統銷統收"、"4:統銷自收"時，才依客戶預設條件帶出預設值
            IF g_xmda_m.xmda006 MATCHES '[34]' AND NOT cl_null(l_xmdcunit) THEN
               LET l_xmdc.xmdcunit = l_xmdcunit
            END IF            
            IF g_xmda_m.xmda006 = '4' THEN
               LET l_xmdc.xmdcorga =l_xmdc.xmdcunit
            END IF           
         END IF
      END IF
      
      IF cl_null(l_controlno) OR l_n = 0 THEN        
         #沒有設置'客戶控制組料件預設條件改抓料件進銷存檔預設的條件
         SELECT imaf112,imaf015,imaf113,imaf123
           INTO l_xmdc.xmdc006,l_xmdc.xmdc008,l_xmdc.xmdc010,l_xmdc.xmdc003
           FROM imaf_t
          WHERE imafent = g_enterprise AND imafsite = g_site AND imaf001 = l_xmdc.xmdc001
      END IF
      #若稅別應用為2.依料件設定，呼叫應用元件帶出稅別、稅率
      IF g_tax_app = '2' AND NOT cl_null(g_pmab089) THEN
         #依料件檢核是否有依交易分類設定稅別
         CALL s_tax_chktype(g_xmda_m.xmdasite,g_xmda_m.xmda004,l_xmdc.xmdc001,'1',g_pmab089)
           RETURNING l_success1,l_xmdc016,l_xmdc017            
         IF l_success1 THEN
            LET l_xmdc.xmdc016 = l_xmdc016
            LET l_xmdc.xmdc017 = l_xmdc017
         ELSE
            #檢查失敗時後續處理
            LET l_xmdc.xmdc016 = ''
            LET l_xmdc.xmdc017 = ''
         END IF           
      ELSE
         LET l_xmdc.xmdc016 = g_xmda_m.xmda011
         LET l_xmdc.xmdc017 = g_xmda_m.xmda012
      END IF             
      
      #若[T:料件進銷存檔].[C:接單拆解方式(訂單)]的值為'1:自動CKD'或是'2:自動SKD'時，則[C:子件特性]的值預設'2:CKD'或是'3:SKD'
      LET l_imaf122 = ''
      SELECT imaf122 INTO l_imaf122 FROM imaf_t
       WHERE imafent = g_enterprise 
         AND imafsite = g_site 
         AND imaf001 = l_xmdc.xmdc001
      CASE l_imaf122 
        WHEN '1' 
          LET g_xmdc_d[l_ac].xmdc019 = '2'
        WHEN '2' 
          LET g_xmdc_d[l_ac].xmdc019 = '3'
        OTHERWISE 
          LET g_xmdc_d[l_ac].xmdc019 = '1'
      END CASE      

      #若訂單料件有設置'交易對象對應料號'(apmi070)有客戶料號時，需將對應的料號抓出顯示在[C:客戶料號]欄位上，若有設置多筆對應料號時以有勾選主要對應料那一筆為預設值
      IF cl_null(l_xmdc.xmdc027) THEN
         SELECT pmao004 INTO l_pmao004
           FROM pmao_t
          WHERE pmaoent = g_enterprise
            AND pmao001 = g_xmda_m.xmda004
            AND pmao002 = l_xmdc.xmdc001
            AND pmao003 = l_xmdc.xmdc002
            AND pmao007 = 'Y'
         IF cl_null(l_pmao004) THEN
            SELECT pmao004 INTO l_pmao004
              FROM pmao_t
             WHERE pmaoent = g_enterprise
               AND pmao001 = g_xmda_m.xmda004
               AND pmao002 = l_xmdc.xmdc001
               AND pmao003 = l_xmdc.xmdc002
               AND rownum = 1
         END IF
         LET l_xmdc.xmdc027 =  l_pmao004      
      END IF
                     
      IF NOT cl_null(l_xmdc.xmdc006) AND NOT cl_null(l_xmdc.xmdc008) THEN
         CALL s_aooi250_convert_qty(l_xmdc.xmdc001,l_xmdc.xmdc006,l_xmdc.xmdc008,l_xmdc.xmdc007)
           RETURNING l_success,l_xmdc.xmdc009
         #參考數量取位
         CALL s_aooi250_take_decimals(l_xmdc.xmdc008,l_xmdc.xmdc009)
           RETURNING l_success,l_xmdc.xmdc009                     
      END IF
      
      IF NOT cl_null(l_xmdc.xmdc006) AND NOT cl_null(l_xmdc.xmdc010) THEN
         CALL s_aooi250_convert_qty(l_xmdc.xmdc001,l_xmdc.xmdc006,l_xmdc.xmdc010,l_xmdc.xmdc007)
           RETURNING l_success,l_xmdc.xmdc011
         #對計價數量進行取位
         CALL s_aooi250_take_decimals(l_xmdc.xmdc010,l_xmdc.xmdc011)
           RETURNING l_success,l_xmdc.xmdc011   
#         LET l_xmdc015 = 0
#         CALL axmt500_get_xmdc015() RETURNING l_xmdc015                        
#         IF l_xmdc.xmdc015 <> l_xmdc015 THEN      #取出的單價不一樣時，開窗詢問是否重新取價
#            IF cl_null(g_xmdc_d_o.xmdc007) THEN           #新增資料不需開窗詢問
#               LET l_xmdc.xmdc015 = l_xmdc015
#            ELSE
#               IF cl_ask_confirm('axm-00230') THEN
#                  LET l_xmdc.xmdc015 = l_xmdc015
#               END IF
#            END IF
#         END IF
#         #當數量或單價有變更時，重計金額
#         IF l_cmd = 'a' OR (l_cmd = 'u' AND (
#            (l_xmdc.xmdc011 != g_xmdc_d_o.xmdc011 OR g_xmdc_d_o.xmdc011 IS NULL) OR
#            (l_xmdc.xmdc015 != g_xmdc_d_o.xmdc015 OR g_xmdc_d_o.xmdc015 IS NULL))) THEN
#            CALL s_axmt500_get_amount(g_xmda_m.xmdadocno,l_xmdc.xmdcseq,l_xmdc.xmdc011,l_xmdc.xmdc015,l_xmdc.xmdc016,g_xmda_m.xmda015,g_xmda_m.xmda016)
#              RETURNING l_xmdc.xmdc046,l_xmdc.xmdc047,l_xmdc.xmdc048                                                         
#         END IF                      
      END IF
      
      LET l_xmdc.xmdc019 = "1"
      LET l_xmdc.xmdc024 = "N"
      LET l_xmdc.xmdc045 = "1"
      LET l_xmdc.xmdc020 = "1"
      LET l_xmdc.xmdc021 = "N"
      LET l_xmdc.xmdc022 = "Y"
      LET l_xmdc.xmdc052 = "Y"         
      LET l_xmdc.xmdcunit = g_site
      LET l_xmdc.xmdcorga = g_site
      LET l_xmdc.xmdc017 = g_xmda_m.xmda012
      LET l_xmdc.xmdc023 = g_xmda_m.xmda022
      LET l_xmdc.xmdc046 = 0
      LET l_xmdc.xmdc047 = 0
      LET l_xmdc.xmdc048 = 0
      LET l_xmdc.xmdc025 = g_xmda_m.xmda025        
      LET l_xmdc.xmdc026 = g_xmda_m.xmda026
      LET l_xmdc.xmdc032 = "1"
      LET l_xmdc.xmdc035 = "1"
      CALL s_sale_price_get(g_xmda_m.xmda017,g_xmda_m.xmda004,l_xmdc.xmdc001,l_xmdc.xmdc002,g_xmda_m.xmda015,
                            l_xmdc.xmdc016,g_xmda_m.xmda009,g_xmda_m.xmda010,g_xmda_m.xmda023,g_xmda_m.xmdadocno,
                            g_xmda_m.xmdadocdt,l_xmdc.xmdc010,l_xmdc.xmdc011 ,g_site,'1',g_xmda_m.xmda048)
         RETURNING l_xmdc.xmdc040,l_xmdc.xmdc043,l_xmdc.xmdc041,l_xmdc.xmdc042
      LET l_xmdc.xmdc015 = l_xmdc.xmdc043
      #判斷單據別參數品質檢驗否(單據別參數:D-BAS-0076)
      IF cl_get_doc_para(g_enterprise,g_site,g_slip,'D-BAS-0076') = 'N' THEN
         LET l_xmdc.xmdc052 = "N"
      END IF
      LET l_xmdc.xmdc031 = g_xmda_m.xmda020
      IF g_tax_app = '1' THEN
         LET l_xmdc.xmdc016 = g_xmda_m.xmda011
         LET l_xmdc.xmdc017 = g_xmda_m.xmda012
      END IF
      
      LET l_cnt = l_cnt + 1
      INSERT INTO xmdc_t
                  VALUES l_xmdc.*
      IF SQLCA.sqlcode THEN
         LET l_success = FALSE
         EXIT FOR
      END IF
      #產生交期明細
      IF NOT s_axmt500_gen_xmdd(g_xmda_m.xmdadocno,l_xmdc.xmdcseq) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "xmdd_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()       
         LET l_success = FALSE
         EXIT FOR
      END IF 
   END FOR
   CALL axmt500_ins_xrcd()
   IF l_success THEN
      CALL s_transaction_end('Y','0')
      CALL axmt500_b_fill()
   ELSE
      CALL s_transaction_end('N','0')
   END IF
END FUNCTION]]>
  </point>
  <point name="function.axmt500_xmda009_chk" order="40" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 收款條件檢查
# Memo...........:
# Usage..........: CALL axmt500_xmda009_chk()
#                  RETURNING TRUE/FALSE
# Input parameter: 
#                : 
# Return code....: TRUE/FALSE
#                : 
# Date & Author..: 2014/12/17 By Polly
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt500_xmda009_chk()
     
    #收款條件
    INITIALIZE g_chkparam.* TO NULL
    LET g_chkparam.arg1 = g_xmda_m.xmda004
    LET g_chkparam.arg2 = g_xmda_m.xmda009
    IF cl_chk_exist("v_pmad002_2") THEN
       RETURN TRUE
    ELSE
       RETURN FALSE
    END IF    

END FUNCTION]]>
  </point>
  <point name="function.axmt500_xmda035_chk" order="41" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...:  發票類型檢查
# Memo...........:
# Usage..........: CALL axmt500_xmda035_chk()
#                  RETURNING TRUE/FALSE
# Input parameter: 
#                : 
# Return code....: TRUE/FALSE
#                : 
# Date & Author..: 2014/12/17 By Polly
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt500_xmda035_chk()

    #發票類型
    INITIALIZE g_chkparam.* TO NULL
    LET g_chkparam.arg1 = g_ooef019
    LET g_chkparam.arg2 = g_xmda_m.xmda035
    IF cl_chk_exist("v_isac002") THEN
       RETURN TRUE
    ELSE
       RETURN FALSE
    END IF 
   
END FUNCTION]]>
  </point>
  <point name="function.axmt500_xmda015_chk" order="42" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...:  幣別檢查
# Memo...........:
# Usage..........: CALL axmt500_xmda015_chk(p_xmda015)
#                  RETURNING TRUE/FALSE
# Input parameter: p_xmda015      #幣別
#                : 
# Return code....: TRUE/FALSE
#                : 
# Date & Author..: 2014/12/17 By Polly
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt500_xmda015_chk(p_xmda015)
  DEFINE  p_xmda015   LIKE xmda_t.xmda015
    
    IF cl_null(p_xmda015) THEN
       RETURN FALSE
    END IF
    
    #幣別
    INITIALIZE g_chkparam.* TO NULL
    LET g_chkparam.arg1 = g_site
    LET g_chkparam.arg2 = p_xmda015
    IF cl_chk_exist("v_ooaj002") THEN    
       RETURN TRUE
    ELSE
       RETURN FALSE
    END IF
    
END FUNCTION]]>
  </point>
  <point name="function.axmt500_xmda017_chk" order="43" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...:  取價方式檢查
# Memo...........:
# Usage..........: CALL axmt500_xmda017_chk()
#                  RETURNING TRUE/FALSE
# Input parameter: 
#                : 
# Return code....: TRUE/FALSE
#                : 
# Date & Author..: 2014/12/17 By Polly
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt500_xmda017_chk()
    #取價方式
    INITIALIZE g_chkparam.* TO NULL
    LET g_chkparam.arg1 = g_xmda_m.xmda017
    IF cl_chk_exist("v_xmah001") THEN   
       RETURN TRUE
    ELSE
       RETURN FALSE
    END IF
END FUNCTION]]>
  </point>
  <point name="function.axmt500_ins_xrcd" order="44" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 寫入交易稅明細檔(xrcd_t)
# Memo...........:
# Usage..........: CALL axmt500_ins_xrcd()
#                  RETURNING TRUE/FALSE
# Input parameter: 
# Return code....: 
# Date & Author..: 20141218 By Polly
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt500_ins_xrcd()
  DEFINE  l_sql      STRING
  DEFINE  l_xmdcseq  LIKE xmdc_t.xmdcseq
  DEFINE  l_xmdc011  LIKE xmdc_t.xmdc011
  DEFINE  l_xmdc015  LIKE xmdc_t.xmdc015
  DEFINE  l_xmdc016  LIKE xmdc_t.xmdc016
  DEFINE  l_xmdc046  LIKE xmdc_t.xmdc046
  DEFINE  l_xmdc047  LIKE xmdc_t.xmdc047
  DEFINE  l_xmdc048  LIKE xmdc_t.xmdc048  
  
   LET l_sql = "SELECT xmdcseq,xmdc011,xmdc015,xmdc016 ",
               "  FROM xmdc_t ",
               " WHERE xmdcent = '",g_enterprise,"' ",
               "   AND xmdcsite = '",g_site,"' ",
               "   AND xmdcdocno = '",g_xmda_m.xmdadocno,"' "
   PREPARE axmt500_xrcd_pr FROM l_sql
   DECLARE axmt500_xrcd_cs CURSOR FOR axmt500_xrcd_pr  

   FOREACH axmt500_xrcd_cs INTO l_xmdcseq,l_xmdc011,l_xmdc015,l_xmdc016
      CALL s_axmt500_get_amount(g_xmda_m.xmdadocno,l_xmdcseq,l_xmdc011,l_xmdc015,l_xmdc016,g_xmda_m.xmda015,g_xmda_m.xmda016)
        RETURNING l_xmdc046,l_xmdc047,l_xmdc048
   END FOREACH

END FUNCTION]]>
  </point>
  <point name="function.axmt500_upd_xmdc045" order="45" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 將單身的狀態調整為留置/一般
# Memo...........:
# Usage..........: CALL axmt500_upd_xmdc045(p_type)
#                : r_success 
# Input parameter: p_type         H：留置 Y：一般
#                : 
# Return code....: r_success      TRUE/FALSE
#                : 
# Date & Author..: 20141227  By Polly
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt500_upd_xmdc045(p_type)
   DEFINE  p_type       LIKE  type_t.chr5
   DEFINE  r_success    LIKE  type_t.num5
   
   LET r_success = TRUE
   IF cl_null(p_type) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'sub-00280'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF 
  
   CASE p_type
     WHEN 'H'
       UPDATE xmdc_t
          SET xmdc045 = '5',
              xmdc053 = g_xmda_m.xmda032
        WHERE xmdcent = g_enterprise
          AND xmdcsite = g_site
          AND xmdcdocno = g_xmda_m.xmdadocno      
          AND xmdc045 = '1'      
       
     WHEN 'UH'
       UPDATE xmdc_t
          SET xmdc045 = '1',
              xmdc053 = ''
        WHERE xmdcent = g_enterprise
          AND xmdcsite = g_site
          AND xmdcdocno = g_xmda_m.xmdadocno      
          AND xmdc045 = '5'       
     OTHERWISE
       RETURN r_success
   END CASE


   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success      
   END IF
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.axmt500_action_modify" order="46" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 執行action修改資料前lock
# Memo...........:
# Usage..........: CALL axmt500_action_modify(p_flag)
# Input parameter: p_flag   'P'多帳款/'H'留置
# Return code....: TRUE OR FALSE
# Date & Author..: 150130 By Polly
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt500_action_modify(p_flag)
DEFINE p_flag       LIKE type_t.chr1
DEFINE r_success    LIKE type_t.num5

   LET r_success = TRUE
  
   IF g_xmda_m.xmdadocno IS NULL THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = ""
      LET g_errparam.code   = "std-00003"
      LET g_errparam.popup  = FALSE
      CALL cl_err()
      RETURN FALSE
   END IF

   ERROR ""

   LET g_xmdadocno_t = g_xmda_m.xmdadocno

   #CALL s_transaction_begin()
   
   OPEN axmt500_cl USING g_enterprise,g_xmda_m.xmdadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = "OPEN axmt500_cl:"
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CLOSE axmt500_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF

   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   CALL cl_set_head_visible("","YES")

   CALL axmt500_show()   

   WHILE TRUE
      LET g_xmdadocno_t = g_xmda_m.xmdadocno
      LET g_xmda_m.xmdamodid = g_user
      LET g_xmda_m.xmdamoddt = cl_get_current()

      CASE p_flag
         WHEN 'P'  #多帳期
            CALL axmt500_open_xmdb() RETURNING r_success
         WHEN 'H'  #留置
            CALL axmt500_hold() RETURNING r_success
            IF NOT r_success THEN
               LET g_xmda_m.xmda032 = ''
               LET g_xmda_m.xmda032_desc = ''
               DISPLAY BY NAME g_xmda_m.xmda032,g_xmda_m.xmda032_desc
            END IF
         OTHERWISE EXIT CASE
      END CASE
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_xmda_m.* = g_xmda_m_t.*
         CALL axmt500_show()
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = ''
         LET g_errparam.code   = 9001
         LET g_errparam.popup  = FALSE
         CALL cl_err()
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF

      EXIT WHILE
   END WHILE
   
   CLOSE axmt500_cl


   #流程通知預埋點-U
   CALL cl_flow_notify(g_xmda_m.xmdadocno,'U')
   RETURN r_success   


END FUNCTION]]>
  </point>
  <point name="function.axmt500_hold" order="47" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 留置
# Memo...........:
# Usage..........: axmt500_hold()
# Input parameter: 
# Return code....: TRUE OR FALSE
# Date & Author..: 150130 By Polly
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt500_hold()
DEFINE r_success    LIKE type_t.num5

   LET r_success = TRUE

   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      INPUT BY NAME g_xmda_m.xmda032 ATTRIBUTE(WITHOUT DEFAULTS)         
   
        BEFORE INPUT
           IF s_transaction_chk("N",0) THEN
              CALL s_transaction_begin()
           END IF
           LET g_xmda_m_t.* = g_xmda_m.*
           LET g_xmda_m_o.* = g_xmda_m.*
   
   
         AFTER FIELD xmda032
         
            LET g_xmda_m.xmda032_desc = ''
            IF NOT cl_null(g_xmda_m.xmda032) THEN
               IF g_xmda_m.xmda032 != g_xmda_m_t.xmda032 OR g_xmda_m_t.xmda032 IS NULL THEN
                  IF NOT s_azzi650_chk_exist('297',g_xmda_m.xmda032) THEN
                     LET g_xmda_m.xmda032 = g_xmda_m_o.xmda032
                     CALL s_desc_get_acc_desc('297',g_xmda_m.xmda032) RETURNING g_xmda_m.xmda032_desc
                     DISPLAY BY NAME g_xmda_m.xmda032,g_xmda_m.xmda032_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_acc_desc('297',g_xmda_m.xmda032) RETURNING g_xmda_m.xmda032_desc
            DISPLAY BY NAME g_xmda_m.xmda032_desc
   
   
         ON ACTION controlp INFIELD xmda032
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmda_m.xmda032  #給予default值
            LET g_qryparam.arg1 = "297"
            CALL q_oocq002()                            #呼叫開窗
            LET g_xmda_m.xmda032 = g_qryparam.return1   #將開窗取得的值回傳到變數
            DISPLAY g_xmda_m.xmda032 TO xmda032         #顯示到畫面上
            CALL s_desc_get_acc_desc('297',g_xmda_m.xmda032) RETURNING g_xmda_m.xmda032_desc
            DISPLAY BY NAME g_xmda_m.xmda032_desc
            NEXT FIELD xmda032                          #返回原欄位
   
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            DISPLAY BY NAME g_xmda_m.xmdadocno
   
            UPDATE xmda_t
               SET xmda032 = g_xmda_m.xmda032
             WHERE xmdaent = g_enterprise 
               AND xmdadocno = g_xmdadocno_t
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.extend = "xmda032"
               LET g_errparam.code   = SQLCA.sqlcode
               LET g_errparam.popup  = TRUE
               CALL cl_err()
               LET r_success = FALSE
               CALL s_transaction_end('N','0')
               CONTINUE DIALOG
            ELSE
               IF NOT axmt500_upd_xmdc045('H') THEN         #單身行狀態改為5留置
                  CALL s_transaction_end('N','0')
                  LET r_success = FALSE
                  CONTINUE DIALOG
               END IF
            END IF
            LET g_log1 = util.JSON.stringify(g_xmda_m_t)
            LET g_log2 = util.JSON.stringify(g_xmda_m)
            IF NOT cl_log_modified_record(g_log1,g_log2) THEN
               CALL s_transaction_end('N','0')
               LET r_success = FALSE
            END IF
            LET g_xmdadocno_t = g_xmda_m.xmdadocno                      
      END INPUT 
      
      BEFORE DIALOG
         NEXT FIELD xmda032
   
      ON ACTION accept
         ACCEPT DIALOG
   
      ON ACTION cancel      #在dialog button (放棄)
         LET r_success = FALSE
         EXIT DIALOG
   
      ON ACTION close       #在dialog 右上角 (X)
         LET r_success = FALSE
         EXIT DIALOG
   
      ON ACTION exit        #toolbar 離開
         LET r_success = FALSE
         EXIT DIALOG
   
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.axmt500_set_comp_visible" order="48" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 控制欄位顯示
# Memo...........:
# Usage..........: CALL axmt500_set_comp_visible()
# Input parameter: no
# Return code....: no
# Date & Author..: 150203 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt500_set_comp_visible()
   
   #參考單位、數量
   CALL cl_set_comp_visible("xmdc008,xmdc008_desc,xmdc009,xmdd024,xmdd024_desc,xmdd025",TRUE)

   #計價單單位、數量
   CALL cl_set_comp_visible("xmdc010,xmdc010_desc,xmdc011,xmdd026,xmdd026_desc,xmdd027",TRUE)

   #產品特徵
   CALL cl_set_comp_visible("xmdc002,xmdc002_desc",TRUE)       
   CALL cl_set_comp_visible("imaa005,imaa005_desc",TRUE)
   CALL cl_set_comp_visible("xmdd002,xmdd002_desc",TRUE)

   #借貨相關
   CALL cl_set_comp_visible("xmdc058,xmdc059,xmdc060,xmdc061",TRUE)
   CALL cl_set_comp_visible("xmdd036,xmdd037,xmdd038,xmdd039",TRUE)

END FUNCTION]]>
  </point>
  <point name="function.axmt500_set_comp_no_visible" order="49" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 控制欄位隱藏
# Memo...........:
# Usage..........: CALL axmt500_set_comp_no_visible()
# Input parameter: no
# Return code....: no
# Date & Author..: 150203 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt500_set_comp_no_visible()
   
   #判斷據點參數若不使用參考單位時，則參考單位、數量需隱藏不可以維護(據點參數:S-BAS-0028)
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0028') = 'N' THEN
      CALL cl_set_comp_visible("xmdc008,xmdc008_desc,xmdc009,xmdd024,xmdd024_desc,xmdd025",FALSE)
   END IF

   #整體參數未使用銷售計價單位，則計價單單位、數量需隱藏不可以維護(據點參數:S-BAS-0007)
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0007') = "N" THEN
      CALL cl_set_comp_visible("xmdc010,xmdc010_desc,xmdc011,xmdd026,xmdd026_desc,xmdd027",FALSE)
   END IF

   #判斷據點參數若不使用產品特徵時，則產品特徵需隱藏不可以維護(據點參數:S-BAS-0036)
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0036') = 'N' THEN
      CALL cl_set_comp_visible("xmdc002,xmdc002_desc",FALSE)       
      CALL cl_set_comp_visible("imaa005,imaa005_desc",FALSE)
      CALL cl_set_comp_visible("xmdd002,xmdd002_desc",FALSE)
   END IF

   IF cl_null(g_argv[01]) OR g_argv[01] != '8' THEN
      CALL cl_set_comp_visible("xmdc058,xmdc059,xmdc060,xmdc061",FALSE)
      CALL cl_set_comp_visible("xmdd036,xmdd037,xmdd038,xmdd039",FALSE)
   END IF

END FUNCTION]]>
  </point>
  <point name="function.axmt500_set_comp_att_text" order="50" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 更改欄位名稱顯示
# Memo...........:
# Usage..........: CALL axmt500_set_comp_att_text()
# Input parameter: no
# Return code....: no
# Date & Author..: 150203 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt500_set_comp_att_text()
DEFINE l_gzze003    LIKE gzze_t.gzze003

   IF g_argv[01] = '8' THEN
      #借出單號
      CALL cl_getmsg('axm-00564',g_lang) RETURNING l_gzze003
      CALL cl_set_comp_att_text('xmdadocno',l_gzze003)
      #借出日期
      CALL cl_getmsg('axm-00563',g_lang) RETURNING l_gzze003
      CALL cl_set_comp_att_text('xmdadocdt',l_gzze003)
      #借出料號
      CALL cl_getmsg('axm-00562',g_lang) RETURNING l_gzze003
      CALL cl_set_comp_att_text('xmdc001',l_gzze003)
      #借出數量
      CALL cl_getmsg('axm-00561',g_lang) RETURNING l_gzze003
      CALL cl_set_comp_att_text('xmdc007',l_gzze003)
      #原始預計歸還日
      CALL cl_getmsg('axm-00560',g_lang) RETURNING l_gzze003
      CALL cl_set_comp_att_text('xmdc013',l_gzze003)
      CALL cl_set_comp_att_text('xmdc013_1',l_gzze003)
      #預計歸還日
      CALL cl_getmsg('axm-00559',g_lang) RETURNING l_gzze003
      CALL cl_set_comp_att_text('xmdd012',l_gzze003)
   END IF

END FUNCTION]]>
  </point>
  <point name="function.axmt500_return_xmda" order="51" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 帶出銷退換貨單頭相關資料
# Memo...........:
# Usage..........: CALL axmt500_return_xmda(p_xmda005,p_xmda008)
#                  RETURNING r_success
# Input parameter: p_xmda005      訂單性質
#                : p_xmda008      來源單號
# Return code....: r_success      TRUE/FALSE
# Date & Author..: 20150224 By Polly
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt500_return_xmda(p_xmda005,p_xmda008)
   DEFINE   p_xmda005      LIKE xmda_t.xmda005
   DEFINE   p_xmda008      LIKE xmda_t.xmda008
   DEFINE   l_xmdk082      LIKE xmdk_t.xmdk082
   DEFINE   l_cnt          LIKE type_t.num5
   DEFINE   r_success      LIKE type_t.num5
    
    LET r_success = TRUE

    LET g_xmda_m_t.* = g_xmda_m.*
    LET g_xmda_m_o.* = g_xmda_m.*

    LET l_xmdk082 = ''
    CASE p_xmda005
      WHEN '1'
        LET l_xmdk082 = '3'                 #3:銷退產生新訂單出貨
      WHEN '2' 
        LET l_xmdk082 = '5'                 #5:銷退換貨(與帳款無關)  
    END CASE

    SELECT xmdk008,xmdk009,xmdk010,xmdk011,xmdk012,
           xmdk013,xmdk014,xmdk015,xmdk016,xmdk018,
           xmdk019,xmdk020,xmdk021,xmdk022,xmdk023,
           xmdk024,xmdk030,xmdk031,xmdk042,xmdk043,
           xmdk045,xmdk202
      INTO g_xmda_m.xmda021,g_xmda_m.xmda022,g_xmda_m.xmda009,g_xmda_m.xmda010,g_xmda_m.xmda011,
           g_xmda_m.xmda012,g_xmda_m.xmda013,g_xmda_m.xmda035,g_xmda_m.xmda015,g_xmda_m.xmda017,
           g_xmda_m.xmda018,g_xmda_m.xmda036,g_xmda_m.xmda025,g_xmda_m.xmda020,g_xmda_m.xmda037,
           g_xmda_m.xmda038,g_xmda_m.xmda023,g_xmda_m.xmda024,g_xmda_m.xmda048,g_xmda_m.xmda049,
           g_xmda_m.xmda006,g_xmda_m.xmda203
      FROM xmdk_t
     WHERE xmdkent = g_enterprise
       AND xmdkdocno = p_xmda008
       AND xmdk000 = '6'                     #銷退單
       AND xmdkstus = 'S'            
       AND xmdk082 = l_xmdk082
    IF SQLCA.sqlcode THEN
       INITIALIZE g_errparam TO NULL
       LET g_errparam.code = SQLCA.sqlcode
       LET g_errparam.extend = 'sel xmda_t'
       LET g_errparam.popup = TRUE
       CALL cl_err()   
       LET g_xmda_m.* = g_xmda_m_t.*       
       LET r_success = FALSE
       RETURN r_success
    END IF
    #取匯率
    CALL s_axmt540_get_exchange(g_xmda_m.xmda048,g_xmda_m.xmda015,g_xmda_m.xmdadocdt) RETURNING g_xmda_m.xmda016   #modify--151118-00012#1 By shiun   新增傳入參數g_xmda_m.xmdadocdt
    LET g_xmda_m.xmda034 = g_xmda_m.xmda004                        #最終客戶
     
    CALL s_desc_get_ooib002_desc(g_xmda_m.xmda009) RETURNING g_xmda_m.xmda009_desc
    CALL s_desc_get_acc_desc('238',g_xmda_m.xmda010) RETURNING g_xmda_m.xmda010_desc
    CALL s_desc_get_tax_desc1(g_site,g_xmda_m.xmda011) RETURNING g_xmda_m.xmda011_desc 
    CALL axmt500_xmda035_ref(g_xmda_m.xmda035) RETURNING g_xmda_m.xmda035_desc 
    CALL s_desc_get_currency_desc(g_xmda_m.xmda015) RETURNING g_xmda_m.xmda015_desc
    CALL axmt500_xmda017_ref(g_xmda_m.xmda017) RETURNING g_xmda_m.xmda017_desc
    CALL axmt500_xmda018_ref(g_xmda_m.xmda018) RETURNING g_xmda_m.xmda018_desc
    CALL s_desc_get_acc_desc('275',g_xmda_m.xmda023) RETURNING g_xmda_m.xmda023_desc    
    CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda021) RETURNING g_xmda_m.xmda021_desc 
    CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda022) RETURNING g_xmda_m.xmda022_desc  
    CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda034) RETURNING g_xmda_m.xmda034_desc
    CALL axmt500_xmda024_ref(g_xmda_m.xmda024) RETURNING g_xmda_m.xmda024_desc
    CALL axmt500_xmda025_ref(g_xmda_m.xmda022,g_xmda_m.xmda025) RETURNING g_xmda_m.xmda025_desc,g_xmda_m.oofb0171
    CALL axmt500_xmda025_ref(g_xmda_m.xmda021,g_xmda_m.xmda026) RETURNING g_xmda_m.xmda026_desc,g_xmda_m.oofb0172
    CALL s_desc_get_acc_desc('263',g_xmda_m.xmda020) RETURNING g_xmda_m.xmda020_desc  
    CALL s_apmi011_location_ref(g_xmda_m.xmda020,g_xmda_m.xmda037) RETURNING g_xmda_m.xmda037_desc
    CALL s_apmi011_location_ref(g_xmda_m.xmda020,g_xmda_m.xmda038) RETURNING g_xmda_m.xmda038_desc
    CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda036) RETURNING g_xmda_m.xmda036_desc

    DISPLAY BY NAME g_xmda_m.xmda021,g_xmda_m.xmda022,g_xmda_m.xmda009,g_xmda_m.xmda010,g_xmda_m.xmda011,
                    g_xmda_m.xmda012,g_xmda_m.xmda013,g_xmda_m.xmda035,g_xmda_m.xmda015,g_xmda_m.xmda017,
                    g_xmda_m.xmda018,g_xmda_m.xmda036,g_xmda_m.xmda025,g_xmda_m.xmda020,g_xmda_m.xmda037,
                    g_xmda_m.xmda038,g_xmda_m.xmda023,g_xmda_m.xmda024,g_xmda_m.xmda048,g_xmda_m.xmda049,
                    g_xmda_m.xmda006,g_xmda_m.xmda203,g_xmda_m.xmda016,g_xmda_m.xmda034,
                    g_xmda_m.xmda009_desc,g_xmda_m.xmda010_desc,g_xmda_m.xmda011_desc,g_xmda_m.xmda035_desc,
                    g_xmda_m.xmda015_desc,g_xmda_m.xmda017_desc,g_xmda_m.xmda018_desc,g_xmda_m.xmda023_desc,
                    g_xmda_m.xmda021_desc,g_xmda_m.xmda022_desc,g_xmda_m.xmda034_desc,g_xmda_m.xmda024_desc,
                    g_xmda_m.xmda025_desc,g_xmda_m.oofb0171,g_xmda_m.xmda026_desc,g_xmda_m.oofb0172,g_xmda_m.xmda020_desc,
                    g_xmda_m.xmda037_desc,g_xmda_m.xmda038_desc,g_xmda_m.xmda036_desc 

    LET g_xmda_m_t.* = g_xmda_m.*
    LET g_xmda_m_o.* = g_xmda_m.*

    RETURN r_success
    
END FUNCTION]]>
  </point>
  <point name="function.axmt500_xmda008_chk" order="52" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 根據不同的資料來源類型，判斷資料的有效否
# Memo...........:
# Usage..........: CALL axmt500_xmda008_chk()
#                  RETURNING r_success
# Input parameter: 
# Return code....: r_success  TRUE/FALSE
# Date & Author..: 20150224 By Polly
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt500_xmda008_chk()
DEFINE l_xmdk082   LIKE xmdk_t.xmdk082
DEFINE l_cnt       LIKE type_t.num5
DEFINE r_success   LIKE type_t.num5

       LET r_success = TRUE
       IF cl_null(g_xmda_m.xmda004) THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.code = 'axm-00145'      #請先輸入客戶編號！
          LET g_errparam.extend = ''
          LET g_errparam.popup = TRUE
          CALL cl_err()    
          LET r_success = FALSE
          RETURN r_success         
       END IF
       IF cl_null(g_xmda_m.xmda008) THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.code = 'sub-00344'      #傳入的來源單號不可為空!
          LET g_errparam.extend = ''
          LET g_errparam.popup = TRUE
          CALL cl_err()    
          LET r_success = FALSE
          RETURN r_success         
       END IF 
       CASE g_xmda_m.xmda007
          WHEN '2'  #預先訂單             
            INITIALIZE g_chkparam.* TO NULL                  
            LET g_chkparam.arg1 = g_xmda_m.xmda008     
            IF NOT cl_chk_exist("v_xmdadocno_1") THEN
               LET r_success = FALSE
               RETURN r_success
            END IF
            LET l_cnt = 0
            SELECT COUNT(*) INTO l_cnt
              FROM xmda_t
             WHERE xmdaent = g_enterprise
               AND xmdadocno = g_xmda_m.xmda008
               AND xmda005 = '5'                     #訂單性質5預先訂單
               AND xmdastus = 'Y'       
            IF l_cnt = 0 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00060'
               LET g_errparam.extend = g_xmda_m.xmda008
               LET g_errparam.popup = TRUE
               CALL cl_err()    
               LET r_success = FALSE
               RETURN r_success
            END IF 
            LET l_cnt = 0
            SELECT COUNT(*) INTO l_cnt
              FROM xmda_t
             WHERE xmdaent = g_enterprise
               AND xmdadocno = g_xmda_m.xmda008
               AND xmda004 = g_xmda_m.xmda004        #客戶編號
               AND xmda005 = '5'                     #訂單性質5預先訂單
               AND xmdastus = 'Y'       
            IF l_cnt = 0 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00571'
               LET g_errparam.extend = g_xmda_m.xmda004
               LET g_errparam.popup = TRUE
               CALL cl_err()    
               LET r_success = FALSE
               RETURN r_success
            END IF             
          WHEN '5'  #銷退換貨
            LET l_xmdk082 = ''
            CASE g_xmda_m.xmda005
              WHEN '1'
                LET l_xmdk082 = '3'                 #3:銷退產生新訂單出貨
              WHEN '2' 
                LET l_xmdk082 = '5'                 #5:銷退換貨(與帳款無關)  
            END CASE            
            LET l_cnt = 0    
            SELECT COUNT(*) INTO l_cnt
              FROM xmdk_t
             WHERE xmdkent = g_enterprise
               AND xmdkdocno = g_xmda_m.xmda008 
               AND xmdk000 = '6'                     #銷退單
               AND xmdkstus = 'S'       
               AND xmdk082 = l_xmdk082                          
            IF l_cnt = 0 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axr-00097'
               LET g_errparam.extend = g_xmda_m.xmda008 
               LET g_errparam.popup = TRUE
               CALL cl_err()    
               LET r_success = FALSE
               RETURN r_success
            END IF  
            LET l_cnt = 0    
            SELECT COUNT(*) INTO l_cnt
              FROM xmdk_t
             WHERE xmdkent = g_enterprise
               AND xmdkdocno = g_xmda_m.xmda008 
               AND xmdk007 = g_xmda_m.xmda004        #客戶編號
               AND xmdk000 = '6'                     #銷退單
               AND xmdkstus = 'S'       
               AND xmdk082 = l_xmdk082                          
            IF l_cnt = 0 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00571'
               LET g_errparam.extend = g_xmda_m.xmda004 
               LET g_errparam.popup = TRUE
               CALL cl_err()    
               LET r_success = FALSE
               RETURN r_success
            END IF            
            #已產生換貨訂單
            LET l_cnt = 0
            SELECT COUNT(xmdadocno) INTO l_cnt
              FROM xmda_t
             WHERE xmdaent = g_enterprise
               AND xmda008 = g_xmda_m.xmda008 
               AND xmdastus <> 'X'
            IF l_cnt > 0 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00545'     #此筆資料已有未作廢的換貨訂單，不可產生換貨訂單！
               LET g_errparam.extend = g_xmda_m.xmda008 
               LET g_errparam.popup = TRUE
               CALL cl_err()
               LET r_success = FALSE
               RETURN r_success
            END IF            
       END CASE
       RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.axmt500_chk_xmdq" order="53" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 判斷是否有可選件/附屬零件(xmdq_t)資料
# Memo...........:
# Usage..........: CALL axmt500_chk_xmdq(p_xmdcdocno,p_xmdcseq)
#                  RETURNING TRUE/FALSE
# Input parameter: p_xmdcdocno    單號
#                : p_xmdcseq      項次
# Return code....: TRUE/FALSE
# Date & Author..: 20150226 By Polly
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt500_chk_xmdq(p_xmdcdocno,p_xmdcseq)
   DEFINE p_xmdcdocno   LIKE xmdc_t.xmdcdocno
   DEFINE p_xmdcseq     LIKE xmdc_t.xmdcseq
   DEFINE l_cnt         LIKE type_t.num5
   
     LET l_cnt = 0
     SELECT COUNT(*) INTO l_cnt
       FROM xmdq_t
      WHERE xmdqent = g_enterprise
        AND xmdqdocno = p_xmdcdocno
        AND xmdqseq =p_xmdcseq
     IF l_cnt > 0 THEN
        RETURN TRUE
     ELSE
         RETURN FALSE
     END IF
   
END FUNCTION]]>
  </point>
  <point name="function.axmt500_return_xmdc" order="54" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 帶出銷退換貨單身相關資料
# Memo...........:
# Usage..........: CALL axmt500_return_xmdc(p_xmda005,p_xmda008)
#                  RETURNING r_success
# Input parameter: p_xmda005      訂單性質
#                : p_xmda008      來源單號
# Return code....: r_success      TRUE/FALSE
# Date & Author..: 20150224 By Polly
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt500_return_xmdc(p_xmda005,p_xmda008)
   DEFINE   p_xmda005      LIKE xmda_t.xmda005
   DEFINE   p_xmda008      LIKE xmda_t.xmda008
   DEFINE   l_xmdk082      LIKE xmdk_t.xmdk082
   DEFINE  l_xmdk010      LIKE xmdk_t.xmdk010     #收款條件
   DEFINE  l_xmdk011      LIKE xmdk_t.xmdk011     #交易條件
   DEFINE  l_xmdk012      LIKE xmdk_t.xmdk012     #稅別
   DEFINE  l_xmdk016      LIKE xmdk_t.xmdk016     #幣別
   DEFINE  l_xmdk018      LIKE xmdk_t.xmdk018     #取價方式
   DEFINE  l_oodbl004     LIKE oodbl_t.oodbl004   #稅別名稱
   DEFINE  l_oodb005      LIKE oodb_t.oodb005     #含稅否
   DEFINE  l_oodb006      LIKE oodb_t.oodb006     #稅率
   DEFINE  l_oodb011      LIKE oodb_t.oodb011     #取得稅別類型1:正常稅率2:依料件設定
   DEFINE  l_xmdc         RECORD LIKE xmdc_t.*   
   DEFINE  l_sql          STRING
   DEFINE  l_flag         LIKE type_t.num5
   DEFINE  l_flag2        LIKE type_t.num5
   DEFINE  l_success      LIKE type_t.num5
   DEFINE  r_success      LIKE type_t.num5
 
   LET r_success = TRUE
   LET l_flag = TRUE
   LET l_flag2 = TRUE
   
   LET l_xmdk082 = ''
   CASE p_xmda005
     WHEN '1'
       LET l_xmdk082 = '3'                 #3:銷退產生新訂單出貨
     WHEN '2' 
       LET l_xmdk082 = '5'                 #5:銷退換貨(與帳款無關)  
   END CASE    

   LET l_xmdk010 = ''
   LET l_xmdk011 = ''
   LET l_xmdk012 = ''
   LET l_xmdk016 = ''
   LET l_xmdk018 = ''
   LET l_oodb011 = ''
   
   SELECT xmdk010,xmdk011,xmdk012,xmdk016,xmdk018
     INTO l_xmdk010,l_xmdk011,l_xmdk012,l_xmdk016,l_xmdk018
     FROM xmdk_t
    WHERE xmdkent = g_enterprise
      AND xmdkdocno = p_xmda008
      AND xmdk000 = '6'                     #銷退單
      AND xmdkstus = 'S'            
      AND xmdk082 = l_xmdk082
      
   #判斷單頭是否收款條件、交易條件、幣別、取價方式，如有，需重新取計並計算金額
   IF l_xmdk010 <> g_xmda_m.xmda009 OR l_xmdk011 <> g_xmda_m.xmda010 OR 
      l_xmdk016 <> g_xmda_m.xmda015 OR l_xmdk018 <> g_xmda_m.xmda017 THEN
      LET l_flag = FALSE
   END IF      
   #判斷單頭是否有修改稅別，如有，需重新計算金額
   IF l_xmdk012 <> g_xmda_m.xmda011 THEN
      LET l_flag2 = FALSE
   END IF   
 
   #取得稅別類型
   CALL s_tax_chk(g_site,g_xmda_m.xmda011) RETURNING l_success,l_oodbl004,l_oodb005,l_oodb006,l_oodb011

   LET l_ac = 1
   #銷退單單身
   LET l_sql = "SELECT xmdl007,xmdl010,xmdl011,",
               "       xmdl021,xmdl024,xmdl025,xmdl026,",
               "       xmdl030,xmdl031,xmdl032,xmdl033,",
               "       xmdl042,xmdl043,xmdl044,xmdl045,xmdl046,",
               "       xmdmdocno,xmdmseq,",
               "       xmdm001,xmdm002,xmdm003,xmdm004,",
               "       xmdm007,xmdm008,xmdm009,",
               "       xmdm010,xmdm011",
               "  FROM xmdk_t,xmdl_t,xmdm_t",
               " WHERE xmdkent = xmdlent ",
               "   AND xmdkdocno = xmdldocno ",
               "   AND xmdkent = '",g_enterprise,"'",
               "   AND xmdkdocno = '",p_xmda008,"'",
               "   AND xmdk000 = '6' AND xmdkstus = 'S' ",
               "   AND xmdk082 = '",l_xmdk082,"'",
               "   AND xmdlent = xmdment AND xmdldocno = xmdmdocno ",
               "   AND xmdlseq = xmdmseq",
               " ORDER BY xmdmseq,xmdmseq1"
   PREPARE axmt500_xmdl_pre FROM l_sql
   DECLARE axmt500_xmdl_cl CURSOR FOR axmt500_xmdl_pre   
 

   FOREACH axmt500_xmdl_cl INTO l_xmdc.xmdc019,l_xmdc.xmdc003,l_xmdc.xmdc004,
                                l_xmdc.xmdc010,l_xmdc.xmdc015,l_xmdc.xmdc016,l_xmdc.xmdc017,
                                l_xmdc.xmdc036,l_xmdc.xmdc037,l_xmdc.xmdc038,l_xmdc.xmdc027,
                                l_xmdc.xmdc040,l_xmdc.xmdc041,l_xmdc.xmdc042,l_xmdc.xmdc043,l_xmdc.xmdc044,
                                l_xmdc.xmdc055,l_xmdc.xmdc056,
                                l_xmdc.xmdc001,l_xmdc.xmdc002,l_xmdc.xmdc004,l_xmdc.xmdc005,
                                l_xmdc.xmdc030,l_xmdc.xmdc006,l_xmdc.xmdc007,
                                l_xmdc.xmdc008,l_xmdc.xmdc009
      #項次加1
      SELECT MAX(xmdcseq)+1 INTO l_xmdc.xmdcseq FROM xmdc_t
       WHERE xmdcent = g_enterprise AND xmdcdocno = g_xmda_m.xmdadocno
      IF cl_null(l_xmdc.xmdcseq) OR l_xmdc.xmdcseq = 0 THEN
         LET l_xmdc.xmdcseq = 1
      END IF  
  
      LET l_xmdc.xmdc012 = g_today
      LET l_xmdc.xmdc013 = g_today
      LET l_xmdc.xmdc020 = '1'
      LET l_xmdc.xmdc021 = 'N'
      LET l_xmdc.xmdc022 = 'N'
      LET l_xmdc.xmdcunit = g_xmda_m.xmdasite
      LET l_xmdc.xmdcorga = g_xmda_m.xmdasite
      LET l_xmdc.xmdc023 = g_xmda_m.xmda022
      LET l_xmdc.xmdc024 = 'N'
      LET l_xmdc.xmdc025 = g_xmda_m.xmda025
      LET l_xmdc.xmdc026 = g_xmda_m.xmda026          
      LET l_xmdc.xmdc031 = g_xmda_m.xmda020           
      LET l_xmdc.xmdc045 = '1'          
      LET l_xmdc.xmdc052 = 'N'
  
      #若料號有使用銷售計價單位時，自動推算計價數量
      IF NOT cl_null(l_xmdc.xmdc010) THEN
         CALL s_aooi250_convert_qty(l_xmdc.xmdc001,l_xmdc.xmdc006,l_xmdc.xmdc010,l_xmdc.xmdc007)
         RETURNING l_success,l_xmdc.xmdc011
      END IF
  
      #重新計算含稅、未稅金額
      CALL s_axmt500_get_amount(g_xmda_m.xmdadocno,l_xmdc.xmdcseq,l_xmdc.xmdc011,l_xmdc.xmdc015,l_xmdc.xmdc016,g_xmda_m.xmda015,g_xmda_m.xmda016)
        RETURNING l_xmdc.xmdc046,l_xmdc.xmdc047,l_xmdc.xmdc048  
  
      IF NOT l_flag THEN
         #單身重新取價
         CALL s_sale_price_get(g_xmda_m.xmda017,g_xmda_m.xmda004,l_xmdc.xmdc001,l_xmdc.xmdc002,g_xmda_m.xmda015,
                               l_xmdc.xmdc016,g_xmda_m.xmda009,g_xmda_m.xmda010,g_xmda_m.xmda023,g_xmda_m.xmdadocno,
                               g_xmda_m.xmdadocdt,l_xmdc.xmdc010,l_xmdc.xmdc011,g_site,'1',g_xmda_m.xmda048)
           RETURNING l_xmdc.xmdc040,l_xmdc.xmdc043,l_xmdc.xmdc041,l_xmdc.xmdc042
         LET l_xmdc.xmdc015 = l_xmdc.xmdc043
         #重新計算含稅、未稅金額
         CALL s_axmt500_get_amount(g_xmda_m.xmdadocno,l_xmdc.xmdcseq,l_xmdc.xmdc011,l_xmdc.xmdc015,l_xmdc.xmdc016,g_xmda_m.xmda015,g_xmda_m.xmda016)
           RETURNING l_xmdc.xmdc046,l_xmdc.xmdc047,l_xmdc.xmdc048         
      END IF
         
      IF NOT l_flag2 THEN
         #單身重新取稅別
         IF l_oodb011 = '2' AND NOT cl_null(l_xmdc.xmdc001) AND NOT cl_null(g_xmda_m.xmda024) THEN
            #依料件設定
            CALL s_tax_chktype(g_xmda_m.xmdasite,g_xmda_m.xmda004,l_xmdc.xmdc001,'1',g_xmda_m.xmda024)
                 RETURNING l_success,l_xmdc.xmdc016,l_xmdc.xmdc017
            IF NOT l_success THEN
               LET l_xmdc.xmdc016 = g_xmda_m.xmda011
               LET l_xmdc.xmdc017 = g_xmda_m.xmda012
            END IF                   
         ELSE
            #依正常稅率
            LET l_xmdc.xmdc016 = g_xmda_m.xmda011
            LET l_xmdc.xmdc017 = g_xmda_m.xmda012
         END IF
         #重新計算含稅、未稅金額
         CALL s_axmt500_get_amount(g_xmda_m.xmdadocno,l_xmdc.xmdcseq,l_xmdc.xmdc011,l_xmdc.xmdc015,l_xmdc.xmdc016,g_xmda_m.xmda015,g_xmda_m.xmda016)
           RETURNING l_xmdc.xmdc046,l_xmdc.xmdc047,l_xmdc.xmdc048
      END IF  
      
      INSERT INTO xmdc_t (xmdcent,xmdcsite,xmdcdocno,xmdcseq,
                          xmdc001,xmdc002,xmdc003,xmdc004,xmdc005,
                          xmdc006,xmdc007,xmdc008,xmdc009,xmdc010,
                          xmdc011,xmdc012,xmdc013,xmdc015,
                          xmdc016,xmdc017,xmdc019,xmdc020,
                          xmdc021,xmdc022,xmdcunit,xmdcorga,
                          xmdc023,xmdc024,xmdc025,
                          xmdc026,xmdc027,
                          xmdc031,xmdc036,xmdc037,xmdc038,
                          xmdc040,xmdc041,xmdc042,xmdc043,xmdc044,xmdc045,
                          xmdc046,xmdc047,xmdc048,xmdc052,xmdc055,xmdc056)
           VALUES (g_enterprise,g_xmda_m.xmdasite,g_xmda_m.xmdadocno,l_xmdc.xmdcseq,
                   l_xmdc.xmdc001,l_xmdc.xmdc002,l_xmdc.xmdc003,l_xmdc.xmdc004,l_xmdc.xmdc005,
                   l_xmdc.xmdc006,l_xmdc.xmdc007,l_xmdc.xmdc008,l_xmdc.xmdc009,l_xmdc.xmdc010,
                   l_xmdc.xmdc011,l_xmdc.xmdc012,l_xmdc.xmdc013,l_xmdc.xmdc015,
                   l_xmdc.xmdc016,l_xmdc.xmdc017,l_xmdc.xmdc019,l_xmdc.xmdc020,
                   l_xmdc.xmdc021,l_xmdc.xmdc022,l_xmdc.xmdcunit,l_xmdc.xmdcorga,
                   l_xmdc.xmdc023,l_xmdc.xmdc024,l_xmdc.xmdc025,
                   l_xmdc.xmdc026,l_xmdc.xmdc027,
                   l_xmdc.xmdc031,l_xmdc.xmdc036,l_xmdc.xmdc037,l_xmdc.xmdc038,
                   l_xmdc.xmdc040,l_xmdc.xmdc041,l_xmdc.xmdc042,l_xmdc.xmdc043,l_xmdc.xmdc044,l_xmdc.xmdc045,
                   l_xmdc.xmdc046,l_xmdc.xmdc047,l_xmdc.xmdc048,l_xmdc.xmdc052,l_xmdc.xmdc055,l_xmdc.xmdc056)
      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "xmdc_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()            
         LET r_success = FALSE
         RETURN r_success
      END IF 
      #自動產生訂購單交期明細
      IF NOT s_axmt500_gen_xmdd(g_xmda_m.xmdadocno,l_xmdc.xmdcseq) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "xmdd_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()         
         LET r_success = FALSE
         RETURN r_success
      END IF         
      INITIALIZE l_xmdc.* TO NULL 
   END FOREACH            
   RETURN r_success 
END FUNCTION]]>
  </point>
  <point name="function.axmt500_docno_xmdc_default" order="55" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 取得單據別設定帶出單身預設值
# Memo...........: 需搭配單據別aooi200的設定
# Usage..........: CALL axmt500_docno_xmdc_default()
#                  RETURNING 
# Input parameter: 
# Return code....: 
# Date & Author..: 20150603 By Polly
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt500_docno_xmdc_default()
DEFINE  l_success    LIKE type_t.num5   
DEFINE  l_oodbl004   LIKE oodbl_t.oodbl004  #稅別名稱
DEFINE  l_oodb005    LIKE oodb_t.oodb005    #含稅否
DEFINE  l_oodb006    LIKE oodb_t.oodb006    #稅率 
DEFINE  l_oodb011    LIKE oodb_t.oodb011    #取得稅別類型1:正常稅率2:依料件設定  

                              
   LET g_xmdc_d[l_ac].xmdc027 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmdc027',g_xmdc_d[l_ac].xmdc027) 
   LET g_xmdc_d[l_ac].xmdc001 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmdc001',g_xmdc_d[l_ac].xmdc001) 
   LET g_xmdc_d[l_ac].xmdc019 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmdc019',g_xmdc_d[l_ac].xmdc019) 
   LET g_xmdc_d[l_ac].xmdc002 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmdc002',g_xmdc_d[l_ac].xmdc002) 
   LET g_xmdc_d[l_ac].xmdc006 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmdc006',g_xmdc_d[l_ac].xmdc006) 
   LET g_xmdc_d[l_ac].xmdc007 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmdc007',g_xmdc_d[l_ac].xmdc007) 
   LET g_xmdc_d[l_ac].xmdc008 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmdc008',g_xmdc_d[l_ac].xmdc008) 
   LET g_xmdc_d[l_ac].xmdc009 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmdc009',g_xmdc_d[l_ac].xmdc009) 
   LET g_xmdc_d[l_ac].xmdc012 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmdc012',g_xmdc_d[l_ac].xmdc012) 
   LET g_xmdc_d[l_ac].xmdc013 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmdc013',g_xmdc_d[l_ac].xmdc013) 
   LET g_xmdc_d[l_ac].xmdc045 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmdc045',g_xmdc_d[l_ac].xmdc045) 
   LET g_xmdc_d[l_ac].xmdc016 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmdc016',g_xmdc_d[l_ac].xmdc016) 
   LET g_xmdc_d[l_ac].xmdc017 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmdc017',g_xmdc_d[l_ac].xmdc017) 
   LET g_xmdc_d[l_ac].xmdc010 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmdc010',g_xmdc_d[l_ac].xmdc010) 
   LET g_xmdc_d[l_ac].xmdc011 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmdc011',g_xmdc_d[l_ac].xmdc011) 
   LET g_xmdc_d[l_ac].xmdc015 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmdc015',g_xmdc_d[l_ac].xmdc015) 
   LET g_xmdc_d[l_ac].xmdc023 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmdc023',g_xmdc_d[l_ac].xmdc023) 
   LET g_xmdc_d[l_ac].xmdc020 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmdc020',g_xmdc_d[l_ac].xmdc020) 
   LET g_xmdc_d[l_ac].xmdc021 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmdc021',g_xmdc_d[l_ac].xmdc021) 
   LET g_xmdc_d[l_ac].xmdc022 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmdc022',g_xmdc_d[l_ac].xmdc022) 
  #LET g_xmdc_d[l_ac].xmdc052 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmdc052',g_xmdc_d[l_ac].xmdc052) 
   LET g_xmdc_d[l_ac].xmdc049 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmdc049',g_xmdc_d[l_ac].xmdc049) 
   LET g_xmdc_d[l_ac].xmdc050 = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmdc050',g_xmdc_d[l_ac].xmdc050)  
   LET g_xmdc_d[l_ac].xmdcunit = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmdcunit',g_xmdc_d[l_ac].xmdcunit)
   LET g_xmdc_d[l_ac].xmdcorga = s_aooi200_get_doc_default(g_site,'1',g_slip,'xmdcorga',g_xmdc_d[l_ac].xmdcorga)      

   #判斷單據別參數品質檢驗否(單據別參數:D-BAS-0076)
   IF cl_get_doc_para(g_enterprise,g_site,g_slip,'D-BAS-0076') = 'N' THEN
      LET g_xmdc_d[l_ac].xmdc052 = "N"
   END IF
   
   
END FUNCTION]]>
  </point>
  <point name="function.axmt500_xmda044_ref" order="56" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#嘜頭編號說明
PRIVATE FUNCTION axmt500_xmda044_ref(p_xmda044)
DEFINE p_xmda044    LIKE xmda_t.xmda044
DEFINE r_xmaol004   LIKE xmaol_t.xmaol004
 
        INITIALIZE g_ref_fields TO NULL
        LET g_ref_fields[1] = p_xmda044
        CALL ap_ref_array2(g_ref_fields,"SELECT xmaol004 FROM xmaol_t WHERE xmaolent='"||g_enterprise||"' AND xmaol001='"||g_xmda_m.xmda004||"' AND xmaol002=? AND xmaol003='"||g_dlang||"'","") RETURNING g_rtn_fields
        LET r_xmaol004 = '', g_rtn_fields[1] , ''
        RETURN r_xmaol004
END FUNCTION]]>
  </point>
  <point name="function.axmt500_get_xmda027" order="57" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 客戶連絡人
# Memo...........:
# Usage..........: CALL axmt500_get_xmda027()
# Input parameter: 
# Return code....: 
# Date & Author..: 151016 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt500_get_xmda027()
   LET g_xmda_m.xmda027 = ''
   SELECT pmaj002 INTO g_xmda_m.xmda027
     FROM pmaj_t
    WHERE pmajent = g_enterprise
#      AND pmaj001 = g_xmda_m.xmda004
      AND pmaj001 = g_xmda_m.xmda022
      AND pmajstus = 'Y'
      AND pmaj004 = 'Y'
   DISPLAY BY NAME g_xmda_m.xmda027
   CALL axmt500_xmda027_ref()
END FUNCTION]]>
  </point>
  <point name="function.axmt500_chk_apmt400" order="58" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 檢查是否可以轉請購單
# Memo...........:
# Usage..........: CALL axmt500_chk_apmt400()
#                  RETURNING r_success
# Input parameter: 
# Return code....: r_success   TRUE/FALSE
# Date & Author..: 151210-00002#1 151214 By Polly
# Modify.........: 
################################################################################
PRIVATE FUNCTION axmt500_chk_apmt400()
DEFINE l_cnt       LIKE type_t.num5
DEFINE l_pmdb006   LIKE pmdb_t.pmdb006
DEFINE l_xmdc007   LIKE xmdc_t.xmdc007
DEFINE r_success   LIKE type_t.num5


   LET r_success = TRUE
   
   LET l_cnt = 0
   #先檢查是否有轉採購單(採購/請購二擇一)
   SELECT COUNT(*) INTO l_cnt
     FROM pmdl_t
    WHERE pmdlent = g_enterprise
      AND pmdl007 = '3'   #訂單
      AND pmdl008 = g_xmda_m.xmdadocno
      AND pmdlstus <> 'X'
   IF l_cnt > 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = g_xmda_m.xmdadocno
      LET g_errparam.code   = 'axm-00738'  #請購及採購只能擇一轉，已有相對應的採購單！
      LET g_errparam.popup  = TRUE
      CALL cl_err()       
      LET r_success = FALSE
      RETURN r_success
   END IF      
   #檢查是否已無數量可轉請購單
   LET l_pmdb006 = 0
   SELECT SUM(pmdb006) INTO l_pmdb006
     FROM pmda_t,pmdb_t
    WHERE pmdaent = pmdbent
      AND pmdadocno = pmdbdocno
      AND pmdaent = g_enterprise
      AND pmdastus <> 'X'
      AND pmdb001 = g_xmda_m.xmdadocno
   IF cl_null(l_pmdb006) THEN LET l_pmdb006 = 0 END IF
   
   LET l_xmdc007 = 0
   SELECT SUM(xmdc007) INTO l_xmdc007
     FROM xmdc_t
    WHERE xmdcent = g_enterprise
      AND xmdcdocno = g_xmda_m.xmdadocno
   IF cl_null(l_xmdc007) THEN LET l_xmdc007 = 0 END IF   
   
   IF l_pmdb006 = l_xmdc007 AND l_pmdb006 > 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = g_xmda_m.xmdadocno
      LET g_errparam.code   = 'axm-00740'  #已無數量可轉請購/採購單！
      LET g_errparam.popup  = TRUE
      CALL cl_err()       
      LET r_success = FALSE
      RETURN r_success   
   END IF
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.axmt500_chk_apmt500" order="59" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 檢查是否可以轉採購單
# Memo...........:
# Usage..........: CALL axmt500_chk_apmt500()
#                  RETURNING r_success
# Input parameter: 
# Return code....: r_success   TRUE/FALSE
# Date & Author..: 151210-00002#1 151214 By Polly
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt500_chk_apmt500()
DEFINE l_cnt       LIKE type_t.num5
DEFINE l_pmdn007   LIKE pmdn_t.pmdn007
DEFINE l_xmdc007   LIKE xmdc_t.xmdc007
DEFINE r_success   LIKE type_t.num5


   LET r_success = TRUE
   
   LET l_cnt = 0
   #先檢查是否有轉請購單(採購/請購二擇一)
   SELECT COUNT(*) INTO l_cnt
     FROM pmda_t,pmdb_t
    WHERE pmdaent = pmdbent
      AND pmdadocno = pmdbdocno
      AND pmdaent = g_enterprise
      AND pmdastus <> 'X'
      AND pmdb001 = g_xmda_m.xmdadocno
   IF l_cnt > 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = g_xmda_m.xmdadocno
      LET g_errparam.code   = 'axm-00739'  #請購及採購只能擇一轉，已有相對應的採購單！
      LET g_errparam.popup  = TRUE
      CALL cl_err()       
      LET r_success = FALSE
      RETURN r_success
   END IF      
   #檢查是否已無數量可轉採購單
   LET l_pmdn007 = 0
   SELECT SUM(pmdn007) INTO l_pmdn007
     FROM pmdl_t,pmdn_t
    WHERE pmdlent = pmdnent
      AND pmdldocno = pmdndocno
      AND pmdlent = g_enterprise
      AND pmdlstus <> 'X'
      AND pmdl007 = '3'
      AND pmdl008 = g_xmda_m.xmdadocno
   IF cl_null(l_pmdn007) THEN LET l_pmdn007 = 0 END IF
   
   LET l_xmdc007 = 0
   SELECT SUM(xmdc007) INTO l_xmdc007
     FROM xmdc_t
    WHERE xmdcent = g_enterprise
      AND xmdcdocno = g_xmda_m.xmdadocno
   IF cl_null(l_xmdc007) THEN LET l_xmdc007 = 0 END IF   
   
   IF l_pmdn007 = l_xmdc007 AND l_pmdn007 > 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = g_xmda_m.xmdadocno
      LET g_errparam.code   = 'axm-00740'  #已無數量可轉請購/採購單！
      LET g_errparam.popup  = TRUE
      CALL cl_err()       
      LET r_success = FALSE
      RETURN r_success   
   END IF
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="b_fill.body.fill_sql" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      IF NOT cl_null(g_wc2_table2) AND g_wc2_table2 <> " 1=1" THEN
         LET g_wc2_table1 = g_wc2_table1 CLIPPED,
                            " AND (xmdcdocno,xmdcseq) IN (SELECT xmdddocno,xmddseq FROM xmdd_t ",
                                                         " WHERE xmddent = xmdcent ",
                                                         "   AND xmdddocno = xmdcdocno ",
                                                         "   AND xmddseq = xmdcseq ",
                                                         "   AND ",g_wc2_table2 CLIPPED,")"
      END IF     
      IF NOT cl_null(g_wc2_table3) AND g_wc2_table3 <> " 1=1" THEN
         LET g_wc2_table1 = g_wc2_table1 CLIPPED,
                            " AND (xmdcdocno,xmdcseq) IN (SELECT xmdqdocno,xmdqseq FROM xmdq_t ",
                                                         " WHERE xmdqent = xmdcent ",
                                                         "   AND xmdqdocno = xmdcdocno ",
                                                         "   AND xmdqseq = xmdcseq ",
                                                         "   AND ",g_wc2_table3 CLIPPED,")"
      END IF          ]]>
  </point>
  <point name="b_fill.body2.fill_sql" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      IF NOT cl_null(g_wc2_table1) AND g_wc2_table1 <> " 1=1" THEN
         LET g_wc2_table2 = g_wc2_table2 CLIPPED,
                            " AND (xmdddocno,xmddseq) IN (SELECT xmdcdocno,xmdcseq FROM xmdc_t ",
                                                         " WHERE xmdcent = xmddent ",
                                                         "   AND xmdcdocno = xmdddocno ",
                                                         "   AND xmdcseq = xmddseq ",
                                                         "   AND ",g_wc2_table1 CLIPPED,")"
      END IF     
      IF NOT cl_null(g_wc2_table3) AND g_wc2_table3 <> " 1=1" THEN
         LET g_wc2_table2 = g_wc2_table2 CLIPPED,
                            " AND (xmdddocno,xmddseq) IN (SELECT xmdqdocno,xmdqseq FROM xmdq_t ",
                                                         " WHERE xmdqent = xmddent ",
                                                         "   AND xmdqdocno = xmdddocno ",
                                                         "   AND xmdqseq = xmddseq ",
                                                         "   AND ",g_wc2_table3 CLIPPED,")"
      END IF                                      ]]>
  </point>
  <point name="b_fill.body3.fill_sql" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         IF NOT cl_null(g_wc2_table1) AND g_wc2_table1 <> " 1=1" THEN
            LET g_wc2_table3 = g_wc2_table3 CLIPPED,
                               " AND (xmdqocno,xmdqseq) IN (SELECT xmdcdocno,xmdcseq FROM xmdc_t ",
                                                            " WHERE xmdcent = xmdqent ",
                                                            "   AND xmdcdocno = xmdqdocno ",
                                                            "   AND xmdcseq = xmdqseq ",
                                                            "   AND ",g_wc2_table1 CLIPPED,")"
         END IF     
         IF NOT cl_null(g_wc2_table2) AND g_wc2_table2 <> " 1=1" THEN
            LET g_wc2_table3 = g_wc2_table3 CLIPPED,
                               " AND (xmdqocno,xmdqseq) IN (SELECT xmdddocno,xmddseq FROM xmdd_t ",
                                                            " WHERE xmddent = xmdqent ",
                                                            "   AND xmdddocno = xmdqdocno ",
                                                            "   AND xmddseq = xmdqseq ",
                                                            "   AND ",g_wc2_table2 CLIPPED,")"
         END IF   
         LET g_sql = g_sql CLIPPED," AND xmdq012 = '4' "         ]]>
  </point>
  <point name="b_fill.define" order="" ver="4" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_xmddseq  LIKE xmdd_t.xmddseq
   DEFINE l_xmddseq1 LIKE xmdd_t.xmddseq1
   DEFINE l_xmdd001  LIKE xmdd_t.xmdd001
   DEFINE l_xmdd002  LIKE xmdd_t.xmdd002
   DEFINE l_xmdd003  LIKE xmdd_t.xmdd003   
   DEFINE l_xmdd004  LIKE xmdd_t.xmdd004
   DEFINE l_xmdd005  LIKE xmdd_t.xmdd005    
   DEFINE l_wc2_table1  STRING
   DEFINE l_wc2_table2  STRING
   DEFINE l_wc2_table3  STRING    
   DEFINE l_success  LIKE type_t.num5   ]]>
  </point>
  <point name="b_fill.fill" order="" ver="8" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         CALL s_desc_get_tax_desc1(g_site,g_xmdc_d[l_ac].xmdc016) RETURNING g_xmdc_d[l_ac].xmdc016_desc  
         CALL s_feature_description(g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc002)
           RETURNING l_success,g_xmdc_d[l_ac].xmdc002_desc                   
         LET g_xmdc2_d[l_ac].xmdcseq = g_xmdc_d[l_ac].xmdcseq
         LET g_xmdc2_d[l_ac].imaa001 = g_xmdc_d[l_ac].xmdc001
         LET g_xmdc2_d[l_ac].imaal003 = g_xmdc_d[l_ac].xmdc001_desc
         LET g_xmdc2_d[l_ac].imaal004 = g_xmdc_d[l_ac].xmdc001_desc_desc
         LET g_xmdc2_d[l_ac].imaa005 = g_xmdc_d[l_ac].xmdc002
         LET g_xmdc2_d[l_ac].xmdc0272 = g_xmdc_d[l_ac].xmdc027
         LET g_xmdc3_d[l_ac].xmdc012 = g_xmdc_d[l_ac].xmdc012
         LET g_xmdc3_d[l_ac].xmdc013 = g_xmdc_d[l_ac].xmdc013
         
         SELECT pmao009,pmao010
            INTO g_xmdc_d[l_ac].l_pmao009,g_xmdc_d[l_ac].l_pmao010
            FROM pmao_t
           WHERE pmaoent = g_enterprise
             AND pmao001 = g_xmda_m.xmda004
             AND pmao002 = g_xmdc_d[l_ac].xmdc001
             AND pmao003 = g_xmdc_d[l_ac].xmdc002
             AND pmao004 = g_xmdc_d[l_ac].xmdc027                     
         LET g_xmdc2_d[l_ac].l_pmao0092 = g_xmdc_d[l_ac].l_pmao009
         LET g_xmdc2_d[l_ac].l_pmao0102 = g_xmdc_d[l_ac].l_pmao010]]>
  </point>
  <point name="b_fill.sql" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      LET g_wc2_table1 = l_wc2_table1                             ]]>
  </point>
  <point name="b_fill.sql2" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      LET g_wc2_table2 = l_wc2_table2                                     ]]>
  </point>
  <point name="b_fill.sql3" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         LET g_wc2_table3 = l_wc2_table3                                       ]]>
  </point>
  <point name="b_fill.sql_before" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET l_wc2_table1 = g_wc2_table1
   LET l_wc2_table2 = g_wc2_table2
   LET l_wc2_table3 = g_wc2_table3                 ]]>
  </point>
  <point name="b_fill2.after_fill" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="b_fill2.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="b_fill2.fill" order="" ver="4" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         IF g_xmdc3_d[l_ac].xmddseq = l_xmddseq 
                 AND g_xmdc3_d[l_ac].xmddseq1 = l_xmddseq1
                 AND g_xmdc3_d[l_ac].xmdd001 = l_xmdd001
                 AND g_xmdc3_d[l_ac].xmdd002 = l_xmdd002
                 AND g_xmdc3_d[l_ac].xmdd003 = l_xmdd003                 
                 AND g_xmdc3_d[l_ac].xmdd004 = l_xmdd004
                 AND g_xmdc3_d[l_ac].xmdd005 = l_xmdd005 THEN
                 
            LET l_xmddseq = g_xmdc3_d[l_ac].xmddseq
            LET l_xmddseq1 = g_xmdc3_d[l_ac].xmddseq1
            LET l_xmdd001 = g_xmdc3_d[l_ac].xmdd001
            LET l_xmdd002 = g_xmdc3_d[l_ac].xmdd002
            LET l_xmdd003 = g_xmdc3_d[l_ac].xmdd003            
            LET l_xmdd004 = g_xmdc3_d[l_ac].xmdd004
            LET l_xmdd005 = g_xmdc3_d[l_ac].xmdd005     
               
            LET g_xmdc3_d[l_ac].xmddseq = ''
            LET g_xmdc3_d[l_ac].xmddseq1 = ''
            LET g_xmdc3_d[l_ac].xmdd001 = ''
            LET g_xmdc3_d[l_ac].xmdd001_desc = ''
            LET g_xmdc3_d[l_ac].xmdd001_desc_desc = ''
            LET g_xmdc3_d[l_ac].xmdd002 = ''
            LET g_xmdc3_d[l_ac].xmdd003 = ''
            LET g_xmdc3_d[l_ac].xmdd004 = ''
            LET g_xmdc3_d[l_ac].xmdd004_desc = ''
            LET g_xmdc3_d[l_ac].xmdd005 = ''
            LET g_xmdc3_d[l_ac].xmdc012 = ''
            LET g_xmdc3_d[l_ac].xmdc013 = ''            
         ELSE
            LET l_xmddseq = g_xmdc3_d[l_ac].xmddseq
            LET l_xmddseq1 = g_xmdc3_d[l_ac].xmddseq1
            LET l_xmdd001 = g_xmdc3_d[l_ac].xmdd001
            LET l_xmdd002 = g_xmdc3_d[l_ac].xmdd002
            LET l_xmdd003 = g_xmdc3_d[l_ac].xmdd003            
            LET l_xmdd004 = g_xmdc3_d[l_ac].xmdd004
            LET l_xmdd005 = g_xmdc3_d[l_ac].xmdd005
         END IF         
         
         ]]>
  </point>
  <point name="b_fill3.fill" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                       ]]>
  </point>
  <point name="b_fill4.fill" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[ ]]>
  </point>
  <point name="browser_fill.after" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="browser_fill.before_count" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="browser_fill.before_foreach" order="" ver="4" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_wc2 = " 1=1" THEN
      LET g_wc2 = " AND xmdq012 = '4' "      #可選件頁籤只顯示子件特性4可選件 
   END IF 
   
   IF cl_null(g_wc) THEN
      LET g_wc = " xmdasite = '",g_site,"' " 
   ELSE
      LET g_wc = g_wc," AND xmdasite = '",g_site,"' "
   END IF

   IF g_argv[01] = '8' THEN
      LET g_wc = g_wc," AND xmda005 = '", g_argv[01], "' "
   ELSE
      LET g_wc = g_wc," AND xmda005 <> '8' "
   END IF

   LET l_wc  = g_wc.trim()   ]]>
  </point>
  <point name="browser_fill.before_prepare" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="browser_fill.cnt.join.xmdd_t1" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                      " AND xmddseq = xmdcseq ",]]>
  </point>
  <point name="browser_fill.cnt.join.xmdq_t1" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                      " AND xmdqseq = xmdcseq AND xmdq012= '4' ",]]>
  </point>
  <point name="browser_fill.cnt_sqlwc" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_wc2 = l_wc2.trim()]]>
  </point>
  <point name="browser_fill.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="browser_fill.join.xmdd_t1" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               " AND xmddseq = xmdcseq ",]]>
  </point>
  <point name="browser_fill.join.xmdq_t1" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               " AND xmdqseq = xmdcseq AND xmdq012 = '4' ",]]>
  </point>
  <point name="browser_fill.open" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="browser_fill.other_fill" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="browser_fill.reference" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="browser_search.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="construct.a.page1.imaal004" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page1.xmdc001" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page1.xmdc002" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page1.xmdc004" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page1.xmdc005" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page1.xmdc006" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page1.xmdc007" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page1.xmdc008" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page1.xmdc009" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page1.xmdc010" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page1.xmdc011" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page1.xmdc012" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page1.xmdc013" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page1.xmdc015" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page1.xmdc016" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page1.xmdc019" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page1.xmdc020" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page1.xmdc021" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page1.xmdc022" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page1.xmdc023" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page1.xmdc024" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page1.xmdc027" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page1.xmdc045" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page1.xmdc049" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page1.xmdc050" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page1.xmdc052" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page1.xmdcorga" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page1.xmdcseq" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page1.xmdcunit" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page2.xmdc003" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page2.xmdc025" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page2.xmdc026" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page2.xmdc0272" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page2.xmdc028" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page2.xmdc029" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page2.xmdc030" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page2.xmdc031" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page2.xmdc032" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page2.xmdc033" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page2.xmdc034" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page2.xmdc036" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page2.xmdc037" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page2.xmdc038" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page2.xmdc039" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page3.xmdc012" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page3.xmdc013" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.page5.xmdb003" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="construct.a.page5.xmdb005" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="construct.a.page5.xmdb006" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="construct.a.xmda001" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda002" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda003" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda004" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda005" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda006" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda007" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda008" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda009" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda010" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda011" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda012" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda013" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda015" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda016" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda017" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda018" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda019" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda020" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda021" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda022" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda023" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda024" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda025" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda026" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda027" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda028" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda030" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda031" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda032" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda033" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda034" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda035" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda036" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda037" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda038" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda039" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda043" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmda044" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmdacnfid" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmdacrtdp" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmdacrtid" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmdadocdt" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmdadocno" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmdamodid" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmdaowndp" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmdaownid" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmdapstid" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmdasite" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.xmdastus" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page1.imaal004" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page1.xmdc001" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page1.xmdc002" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page1.xmdc004" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page1.xmdc005" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page1.xmdc006" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page1.xmdc007" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page1.xmdc008" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page1.xmdc009" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page1.xmdc010" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page1.xmdc011" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page1.xmdc012" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page1.xmdc013" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page1.xmdc015" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page1.xmdc016" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page1.xmdc019" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page1.xmdc020" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page1.xmdc021" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page1.xmdc022" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page1.xmdc023" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page1.xmdc024" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page1.xmdc027" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page1.xmdc045" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page1.xmdc049" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page1.xmdc050" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page1.xmdc052" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page1.xmdcorga" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page1.xmdcseq" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page1.xmdcunit" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page2.xmdc003" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page2.xmdc025" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page2.xmdc026" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page2.xmdc0272" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page2.xmdc028" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page2.xmdc029" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page2.xmdc030" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page2.xmdc031" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page2.xmdc032" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page2.xmdc033" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page2.xmdc034" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page2.xmdc036" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page2.xmdc037" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page2.xmdc038" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page2.xmdc039" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page3.xmdc012" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.page3.xmdc013" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda001" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda002" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda003" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda004" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda005" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda006" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda007" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda008" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda009" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda010" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda011" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda012" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda013" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda015" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda016" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda017" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda018" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda019" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda020" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda021" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda022" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda023" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda024" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda025" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda026" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda027" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda028" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda030" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda031" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda032" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda033" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda034" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda035" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda036" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda037" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda038" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda039" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda043" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmda044" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmdacnfdt" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmdacnfid" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmdacrtdp" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmdacrtdt" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmdacrtid" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmdadocdt" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmdadocno" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmdamoddt" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmdamodid" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmdaowndp" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmdaownid" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmdapstdt" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmdapstid" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmdasite" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.xmdastus" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.page1.imaal004" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.page1.xmdc001" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_imaf001_15()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdc001  #顯示到畫面上

            NEXT FIELD xmdc001                     #返回原欄位
]]>
  </point>
  <point name="construct.c.page1.xmdc002" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.page1.xmdc004" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '221'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdc004  #顯示到畫面上

            NEXT FIELD xmdc004                     #返回原欄位
]]>
  </point>
  <point name="construct.c.page1.xmdc005" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.page1.xmdc006" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                          #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdc006      #顯示到畫面上

            NEXT FIELD xmdc006                         #返回原欄位
]]>
  </point>
  <point name="construct.c.page1.xmdc007" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.page1.xmdc008" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE                         
            CALL q_ooca001_1()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdc008    #顯示到畫面上

            NEXT FIELD xmdc008                       #返回原欄位
]]>
  </point>
  <point name="construct.c.page1.xmdc009" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.page1.xmdc010" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdc010  #顯示到畫面上

            NEXT FIELD xmdc010                     #返回原欄位
]]>
  </point>
  <point name="construct.c.page1.xmdc011" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.page1.xmdc012" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.page1.xmdc013" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.page1.xmdc015" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.page1.xmdc016" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_oodb002_2()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdc016  #顯示到畫面上
            NEXT FIELD xmdc016                     #返回原欄位
           
]]>
  </point>
  <point name="construct.c.page1.xmdc019" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.page1.xmdc020" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.page1.xmdc021" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.page1.xmdc022" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.page1.xmdc023" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_pmac002_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdc023  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO pmaal004 #交易對象簡稱 

            NEXT FIELD xmdc023                     #返回原欄位
]]>
  </point>
  <point name="construct.c.page1.xmdc024" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.page1.xmdc027" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_pmao004_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdc027  #顯示到畫面上
            NEXT FIELD xmdc027                     #返回原欄位
]]>
  </point>
  <point name="construct.c.page1.xmdc045" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.page1.xmdc049" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = g_acc
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdc049  #顯示到畫面上
 
            NEXT FIELD xmdc049                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.xmdc050" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.page1.xmdc052" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.page1.xmdc053" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = g_acc 
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdc053  #顯示到畫面上

            NEXT FIELD xmdc053                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.xmdcorga" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdcorga  #顯示到畫面上

            NEXT FIELD xmdcorga                     #返回原欄位

 ]]>
  </point>
  <point name="construct.c.page1.xmdcseq" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.page1.xmdcunit" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdcunit  #顯示到畫面上

            NEXT FIELD xmdcunit                     #返回原欄位
]]>
  </point>
  <point name="construct.c.page2.xmda0272" order="" ver="1" cite_std="" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_pmao004_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda0272  #顯示到畫面上

            NEXT FIELD xmda0272                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.xmdc003" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_imaf001_5()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdc003  #顯示到畫面上
            NEXT FIELD xmdc003                     #返回原欄位                                                                        ]]>
  </point>
  <point name="construct.c.page2.xmdc025" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE 
			LET g_qryparam.arg1 = g_oofa001
            CALL q_oofb019_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdc025  #顯示到畫面上

            NEXT FIELD xmdc025                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.xmdc026" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE 
			LET g_qryparam.arg1 = g_oofa001
            CALL q_oofb019_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdc026  #顯示到畫面上

            NEXT FIELD xmdc026                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.xmdc027" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_pmao004_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdc027  #顯示到畫面上

            NEXT FIELD xmdc027                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.xmdc0272" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_pmao004_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdc0272  #顯示到畫面上
 
            NEXT FIELD xmdc0272                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.xmdc027_1" order="" ver="1" cite_std="" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_pmao004_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdc027_1  #顯示到畫面上

            NEXT FIELD xmdc027_1                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.xmdc028" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_inaa001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdc028  #顯示到畫面上 

            NEXT FIELD xmdc028                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.xmdc029" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_inab002_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdc029  #顯示到畫面上

            NEXT FIELD xmdc029                     #返回原欄位 

]]>
  </point>
  <point name="construct.c.page2.xmdc030" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.page2.xmdc031" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = "263" 
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdc031  #顯示到畫面上
          
            NEXT FIELD xmda031                     #返回原欄位                                                                        ]]>
  </point>
  <point name="construct.c.page2.xmdc032" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.page2.xmdc033" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.page2.xmdc034" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.page2.xmdc036" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            #CALL q_pjba001()  #mark by lixiang 2015/11/21
            CALL q_pjab001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdc036  #顯示到畫面上
            NEXT FIELD xmdc036                     #返回原欄位
    ]]>
  </point>
  <point name="construct.c.page2.xmdc037" order="" ver="8" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_pjbb002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdc037  #顯示到畫面上
            NEXT FIELD xmdc037                     #返回原欄位
                                                                            ]]>
  </point>
  <point name="construct.c.page2.xmdc038" order="" ver="8" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_pjbm002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdc038  #顯示到畫面上
            NEXT FIELD xmdc038                     #返回原欄位
                                                                            ]]>
  </point>
  <point name="construct.c.page2.xmdc039" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.page3.xmdc012" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.page3.xmdc013" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.page3.xmdd001" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imaf001_15()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdd001  #顯示到畫面上

            NEXT FIELD xmdd001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page3.xmdd004" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
			LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdd004  #顯示到畫面上

            NEXT FIELD xmdd004                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page3.xmdd017" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段 
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_oodb002_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdd017  #顯示到畫面上

            NEXT FIELD xmdd017                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page3.xmdd019" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_oodb002_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdd019  #顯示到畫面上
            NEXT FIELD xmdd019                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page3.xmdd022" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE 
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdd022  #顯示到畫面上

            NEXT FIELD xmdd022                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page3.xmdd024" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdd024  #顯示到畫面上 

            NEXT FIELD xmdd024                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page3.xmdd026" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
			LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdd026  #顯示到畫面上

            NEXT FIELD xmdd026                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page4.xmde001" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmde001  #顯示到畫面上

            NEXT FIELD xmde001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page4.xmde003" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_xmdadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmde003  #顯示到畫面上

            NEXT FIELD xmde003                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page4.xmde008" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmde008  #顯示到畫面上

            NEXT FIELD xmde008                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page4.xmde022" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmde022  #顯示到畫面上

            NEXT FIELD xmde022                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page5.xmdb002" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段 
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooib002_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdb002  #顯示到畫面上

            NEXT FIELD xmdb002                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page6.xmds001" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:1)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaf001_17()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmds001  #顯示到畫面上
            NEXT FIELD xmds001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page6.xmds002" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:1)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            CALL q_ooaj002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmds002  #顯示到畫面上
            NEXT FIELD xmds002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page6.xmds005" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:1)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            CALL q_pmaa001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmds005  #顯示到畫面上
            NEXT FIELD xmds005                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.xmda001" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.xmda002" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda002  #顯示到畫面上

            NEXT FIELD xmda002                     #返回原欄位
]]>
  </point>
  <point name="construct.c.xmda003" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = g_xmda_m.xmdadocdt
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda003  #顯示到畫面上

            NEXT FIELD xmda003                     #返回原欄位
]]>
  </point>
  <point name="construct.c.xmda004" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE	
            LET g_qryparam.arg1 = g_site

		
            CALL q_pmaa001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda004        #顯示到畫面上

            NEXT FIELD xmda004                           #返回原欄位
]]>
  </point>
  <point name="construct.c.xmda005" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.xmda006" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.xmda007" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.xmda008" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
		   	LET g_qryparam.reqry = FALSE
            CALL q_xmda008()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda008      #顯示到畫面上
            NEXT FIELD xmda008                         #返回原欄位
]]>
  </point>
  <point name="construct.c.xmda009" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.arg1 = g_xmda_m.xmda004
            CALL q_ooib002_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda009        #顯示到畫面上            
            CALL s_desc_get_ooib002_desc(g_xmda_m.xmda009) RETURNING g_xmda_m.xmda009_desc
            DISPLAY BY NAME g_xmda_m.xmda009_desc
            NEXT FIELD xmda009                            #返回原欄位
]]>
  </point>
  <point name="construct.c.xmda010" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
		    LET g_qryparam.arg1 = '238'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda010  #顯示到畫面上

            NEXT FIELD xmda010                     #返回原欄位
]]>
  </point>
  <point name="construct.c.xmda011" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_oodb002_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda011  #顯示到畫面上

            NEXT FIELD xmda011                     #返回原欄位
]]>
  </point>
  <point name="construct.c.xmda012" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.xmda013" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.xmda015" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = g_site
            CALL q_ooaj002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda015  #顯示到畫面上

            NEXT FIELD xmda015                     #返回原欄位
]]>
  </point>
  <point name="construct.c.xmda016" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.xmda017" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_xmah001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda017  #顯示到畫面上

            NEXT FIELD xmda017                     #返回原欄位
]]>
  </point>
  <point name="construct.c.xmda018" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooid001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda018  #顯示到畫面上

            NEXT FIELD xmda018                     #返回原欄位
]]>
  </point>
  <point name="construct.c.xmda019" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.xmda020" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = "263"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda020  #顯示到畫面上

            NEXT FIELD xmda020                     #返回原欄位
]]>
  </point>
  <point name="construct.c.xmda021" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.arg2 = g_site
            CALL q_pmac002_5()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda021    #顯示到畫面上
            
            NEXT FIELD xmda021                     #返回原欄位

]]>
  </point>
  <point name="construct.c.xmda022" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg2 = g_site
            CALL q_pmac002_6() 
            DISPLAY g_qryparam.return1 TO xmda022  #顯示到畫面上
              

            NEXT FIELD xmda022                     #返回原欄位

]]>
  </point>
  <point name="construct.c.xmda023" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
		    LET g_qryparam.arg1 = "275"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda023  #顯示到畫面上

            NEXT FIELD xmda023                     #返回原欄位
]]>
  </point>
  <point name="construct.c.xmda024" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = "295"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda024  #顯示到畫面上
            NEXT FIELD xmda024                     #返回原欄位

]]>
  </point>
  <point name="construct.c.xmda025" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.arg1 = g_oofa001
            CALL q_oofb019_1()                      #呼叫開窗           
            DISPLAY g_qryparam.return1 TO xmda025  #顯示到畫面上
            NEXT FIELD xmda025                     #返回原欄位]]>
  </point>
  <point name="construct.c.xmda026" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = g_oofa001
            CALL q_oofb019_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda026  #顯示到畫面上

            NEXT FIELD xmda026                     #返回原欄位
]]>
  </point>
  <point name="construct.c.xmda027" order="" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_pmaj002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda027  #顯示到畫面上
            CALL axmt500_xmda027_ref()
            NEXT FIELD xmda027                     #返回原欄位
]]>
  </point>
  <point name="construct.c.xmda028" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.xmda030" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.xmda031" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_xmda031()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda031  #顯示到畫面上
            NEXT FIELD xmda031	                     #返回原欄位                                                                        ]]>
  </point>
  <point name="construct.c.xmda032" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
		    LET g_qryparam.arg1 = "297"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda032  #顯示到畫面上

            NEXT FIELD xmda032                     #返回原欄位
]]>
  </point>
  <point name="construct.c.xmda033" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.xmda034" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE  
            LET g_qryparam.arg1 = g_site

            CALL q_pmaa001_6()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda034  #顯示到畫面上
            NEXT FIELD xmda034                     #返回原欄位

]]>
  </point>
  <point name="construct.c.xmda035" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
		      LET g_qryparam.arg1 = g_ooef019 
            LET g_qryparam.arg2 = "2"                
            CALL q_isac002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda035       #顯示到畫面上
            NEXT FIELD xmda035                     #返回原欄位]]>
  </point>
  <point name="construct.c.xmda036" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda036  #顯示到畫面上

            NEXT FIELD xmda036                     #返回原欄位
]]>
  </point>
  <point name="construct.c.xmda037" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_xmda037()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda037  #顯示到畫面上

            NEXT FIELD xmda037                     #返回原欄位
]]>
  </point>
  <point name="construct.c.xmda038" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_xmda038()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda038  #顯示到畫面上

            NEXT FIELD xmda038                     #返回原欄位
]]>
  </point>
  <point name="construct.c.xmda039" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.xmda043" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.xmda044" order="" ver="4" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xmao002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda044  #顯示到畫面上
            NEXT FIELD xmda044                     #返回原欄位                                                                               ]]>
  </point>
  <point name="construct.c.xmda050" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '1'
            CALL q_icaa001_1()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda050  #顯示到畫面上
            NEXT FIELD xmda050                     #返回原欄位
   

]]>
  </point>
  <point name="construct.c.xmda203" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg2 = g_site
            CALL q_pmac002_7()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda203  #顯示到畫面上
            NEXT FIELD xmda203                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.xmdacnfid" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdacnfid  #顯示到畫面上

            NEXT FIELD xmdacnfid                     #返回原欄位
]]>
  </point>
  <point name="construct.c.xmdacrtdp" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdacrtdp  #顯示到畫面上

            NEXT FIELD xmdacrtdp                     #返回原欄位
]]>
  </point>
  <point name="construct.c.xmdacrtid" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdacrtid  #顯示到畫面上

            NEXT FIELD xmdacrtid                     #返回原欄位
]]>
  </point>
  <point name="construct.c.xmdadocdt" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.xmdadocno" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			IF g_argv[01] = '8' THEN
   			LET g_qryparam.where = " xmda005 = '8' "
   		ELSE
   			LET g_qryparam.where = " xmda005 <> '8' "   		
			END IF
            CALL q_xmdadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdadocno  #顯示到畫面上

            NEXT FIELD xmdadocno                     #返回原欄位
]]>
  </point>
  <point name="construct.c.xmdamodid" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdamodid  #顯示到畫面上

            NEXT FIELD xmdamodid                     #返回原欄位
]]>
  </point>
  <point name="construct.c.xmdaowndp" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdaowndp  #顯示到畫面上

            NEXT FIELD xmdaowndp                     #返回原欄位
]]>
  </point>
  <point name="construct.c.xmdaownid" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdaownid  #顯示到畫面上

            NEXT FIELD xmdaownid                     #返回原欄位
]]>
  </point>
  <point name="construct.c.xmdapstid" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdapstid  #顯示到畫面上

            NEXT FIELD xmdapstid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.xmdasite" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.c.xmdastus" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="cs.add_cs" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="cs.after_construct" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="cs.b_dialog" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         #加上合計功能後無法查詢，需重新DISPLAY所有頁籤
         LET g_xmdc_d[1].xmdcseq = ""
         DISPLAY ARRAY g_xmdc_d TO s_detail1.*
            BEFORE DISPLAY
               EXIT DISPLAY    
         END DISPLAY
         LET g_xmdc2_d[1].xmdcseq = ""         
         DISPLAY ARRAY g_xmdc2_d TO s_detail2.*
            BEFORE DISPLAY
               EXIT DISPLAY    
         END DISPLAY          
         LET g_xmdc3_d[1].xmddseq = ""
         DISPLAY ARRAY g_xmdc3_d TO s_detail3.*
            BEFORE DISPLAY
               EXIT DISPLAY
         END DISPLAY  
         LET g_xmdc4_d[1].xmdqseq = ""
         DISPLAY ARRAY g_xmdc4_d TO s_detail4.*    
            BEFORE DISPLAY
               EXIT DISPLAY
         END DISPLAY 
         LET g_xmdc5_d[1].xmdb001 = ""
         DISPLAY ARRAY g_xmdc5_d TO s_detail5.*    
            BEFORE DISPLAY
               EXIT DISPLAY
         END DISPLAY   
         LET g_xmdc6_d[1].xmdsseq = ""
         DISPLAY ARRAY g_xmdc6_d TO s_detail6.*    
            BEFORE DISPLAY
               EXIT DISPLAY
         END DISPLAY           ]]>
  </point>
  <point name="cs.before_construct" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="cs.body.before_construct" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="cs.body2.before_construct" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="cs.body3.before_construct" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="cs.define" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_sql       STRING
   DEFINE l_success   LIKE type_t.num5  ]]>
  </point>
  <point name="cs.head.before_construct" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="default_search.after" order="" ver="4" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_argv[01] = '8' THEN
      LET g_wc = g_wc , " AND xmda005 = '", g_argv[01], "' "
   ELSE   
      LET g_wc = g_wc , " AND xmda005 <> '8' "
   END IF]]>
  </point>
  <point name="default_search.after_sql" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="default_search.before" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="default_search.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="delete.before_ask" order="" ver="8" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #add by lixiang 150821-00016#1--start---
   #判斷資料來源為"EC"時，單頭不可刪除
   IF g_xmda_m.xmda007 = '9' THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = g_xmda_m.xmdadocno
      LET g_errparam.code   = 'axm-00712'
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CLOSE axmt500_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   #add by lixiang 150821-00016#1--end---]]>
  </point>
  <point name="delete.body.a_delete" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="delete.body.a_delete2" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="delete.body.a_delete3" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[    ]]>
  </point>
  <point name="delete.body.a_delete4" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      #刪除單號
      IF NOT s_aooi200_del_docno(g_xmda_m.xmdadocno,g_xmda_m.xmdadocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN 
      END IF  
      #一次性交易對象
      LET l_cnt = 0
      SELECT COUNT(*) INTO l_cnt
        FROM pmak_t 
       WHERE pmakent = g_enterprise 
         AND pmak001 = g_xmda_m.xmda028
      IF l_cnt > 0 THEN
         DELETE FROM pmak_t WHERE pmakent = g_enterprise AND pmak001 = g_xmda_m.xmda028
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "pmak_t"
            LET g_errparam.popup = FALSE
            CALL cl_err() 
            CALL s_transaction_end('N','0')
            RETURN
         END IF            
      END IF       
      #刪除備註資料
      IF NOT s_aooi360_del('6',g_prog,g_xmda_m.xmdadocno,'','','','','','','','','4') THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF        
      #刪除訂單多交期匯總檔
      LET l_cnt = 0
      SELECT COUNT(*) INTO l_cnt
        FROM xmdf_t 
       WHERE xmdfent = g_enterprise 
         AND xmdfdocno = g_xmda_m.xmdadocno
      IF l_cnt > 0 THEN   
         DELETE FROM xmdf_t 
          WHERE xmdfent = g_enterprise 
            AND xmdfdocno = g_xmda_m.xmdadocno
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "xmdf_t"
            LET g_errparam.popup = FALSE
            CALL cl_err()
            CALL s_transaction_end('N','0')
            RETURN
         END IF
      END IF
      #刪除訂單附屬零件明細檔
      LET l_cnt = 0
      SELECT COUNT(*) INTO l_cnt
        FROM xmdq_t
       WHERE xmdqent =  g_enterprise 
         AND xmdqdocno = g_xmda_m.xmdadocno   
      IF l_cnt > 0 THEN                      
         DELETE FROM xmdq_t
          WHERE xmdqent =  g_enterprise 
            AND xmdqdocno = g_xmda_m.xmdadocno 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "DELETE xmdq_t"
            LET g_errparam.popup = FALSE
            CALL cl_err()
            CALL s_transaction_end('N','0')
            RETURN
         END IF           
      END IF 
      #刪除訂單附屬零件明細檔
      LET l_cnt = 0
      SELECT COUNT(*) INTO l_cnt
        FROM xmdq_t
       WHERE xmdqent =  g_enterprise 
         AND xmdqdocno = g_xmda_m.xmdadocno 
      IF l_cnt > 0 THEN                      
         DELETE FROM xmdq_t
          WHERE xmdqent =  g_enterprise 
            AND xmdqdocno = g_xmda_m.xmdadocno 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "DELETE xmdq_t"
            LET g_errparam.popup = FALSE
            CALL cl_err()
            CALL s_transaction_end('N','0')
            RETURN
         END IF           
      END IF 
      #刪除交易稅明細檔
      LET l_cnt = 0
      SELECT COUNT(*) INTO l_cnt
        FROM xrcd_t
       WHERE xrcdent = g_enterprise
         AND xrcddocno = g_xmda_m.xmdadocno
         AND xrcdseq2 = 0         
      IF l_cnt > 0 THEN               
         DELETE FROM xrcd_t
          WHERE xrcdent = g_enterprise
            AND xrcddocno = g_xmda_m.xmdadocno
            AND xrcdseq2 = 0
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = "DELETE xrcd_t"
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.popup  = FALSE
            CALL cl_err()
            CALL s_transaction_end('N','0')
            RETURN
         END IF    
      END IF          ]]>
  </point>
  <point name="delete.body.b_delete" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="delete.body.b_delete2" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="delete.body.b_delete3" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="delete.body.m_delete" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="delete.body.m_delete2" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="delete.body.m_delete3" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="delete.define" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE  l_cnt   LIKE type_t.num5  ]]>
  </point>
  <point name="delete.head.a_delete" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[     ]]>
  </point>
  <point name="delete.head.b_delete" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="delete.head.m_delete" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="delete_b.a_delete" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="delete_b.a_delete2" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="delete_b.a_delete3" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="delete_b.b_delete" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="delete_b.b_delete2" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="delete_b.b_delete3" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="delete_b.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="delete_b.m_delete" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="delete_b.m_delete2" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="delete_b.m_delete3" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="delete_b.other" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="detail_reproduce.body.table1.a_insert" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #結案理由碼需清空
    UPDATE xmdc_t       
       SET xmdc053 = '',
           xmdc036 = '',
           xmdc037 = '',
           xmdc038 = '',
           xmdc045 = '1'
     WHERE xmdcdocno = g_xmda_m.xmdadocno   

   #add by lixiang 2015/06/29--s----
   #依訂單單別參數（D-BAS-0095）設定的"專案類型"抓取專案與訂單連動(pjaa003)、專案編號與訂單單號一致(pjaa004)資料
   #pjaa003="Y" AND pjaa004="Y" 則專案編號欄位不可輸，預設帶入訂單單號
   LET g_slip = ''
   CALL s_aooi200_get_slip(g_xmda_m.xmdadocno) RETURNING l_success,g_slip
   LET g_pjaa001 = ''
   LET g_pjaa001 =  cl_get_doc_para(g_enterprise,g_site,g_slip,'D-BAS-0095')
   IF NOT cl_null(g_pjaa001) THEN
      LET g_pjaa003 = ''
      LET g_pjaa004 = ''
      SELECT pjaa003,pjaa004 INTO g_pjaa003,g_pjaa004 FROM pjaa_t WHERE pjaaent = g_enterprise AND pjaa001 = g_pjaa001
      IF g_pjaa003 = 'Y' AND g_pjaa004 = 'Y' THEN
         UPDATE xmdc_t       
           SET xmdc036 = g_xmda_m.xmdadocno   
         WHERE xmdcdocno = g_xmda_m.xmdadocno     
      END IF
   END IF
   #add by lixiang 2015/06/29--e----]]>
  </point>
  <point name="detail_reproduce.body.table1.b_insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="detail_reproduce.body.table1.b_update" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="detail_reproduce.body.table1.m_insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="detail_reproduce.body.table2.a_insert" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #已出貨量、已銷退量、銷退換貨數量、已轉出通數量
   UPDATE xmdd_t       
      SET xmdd014 = 0,   
          xmdd015 = 0,
          xmdd016 = 0,
          xmdd031 = 0      
    WHERE xmdddocno = g_xmda_m.xmdadocno                   ]]>
  </point>
  <point name="detail_reproduce.body.table2.b_insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="detail_reproduce.body.table2.m_insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="detail_reproduce.body.table3.a_insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="detail_reproduce.body.table3.b_insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="detail_reproduce.body.table3.m_insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="detail_reproduce.body.table4.a_insert" order="" ver="8" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   UPDATE xmdb_t       
      SET xmdb007 = ''        
    WHERE xmdbdocno = g_xmda_m.xmdadocno ]]>
  </point>
  <point name="detail_reproduce.body.table5.a_insert" order="" ver="8" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #--150923--polly--add--(S)
   #更新交期匯總檔
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE axmt500_detail AS ",
      "SELECT * FROM xmdf_t "
   PREPARE repro_tbl6 FROM ls_sql
   EXECUTE repro_tbl6
   FREE repro_tbl6
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO axmt500_detail SELECT * FROM xmdf_t
                                         WHERE xmdfent = g_enterprise AND xmdfdocno = g_xmdadocno_t 
 
   #將key修正為調整後   
   UPDATE axmt500_detail SET xmdfdocno = g_xmda_m.xmdadocno 
  
   #將資料塞回原table   
   INSERT INTO xmdf_t SELECT * FROM axmt500_detail   
   
   #刪除TEMP TABLE
   DROP TABLE axmt500_detail   
   #--150923--polly--add--(E)
   
   #將金額寫入xrcd檔
   CALL axmt500_ins_xrcd()]]>
  </point>
  <point name="detail_reproduce.define" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE  l_success    LIKE type_t.num5]]>
  </point>
  <point name="detail_show.after" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="detail_show.before" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="detail_show.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="fetch.action_control" order="" ver="4" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL axmt500_set_act_visible()      
   CALL axmt500_set_act_no_visible()   ]]>
  </point>
  <point name="fetch.after" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="fetch.define" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_pmaa004  LIKE pmaa_t.pmaa004 
   DEFINE l_success  LIKE type_t.num5
   DEFINE l_flag     LIKE type_t.num5 
   DEFINE l_cnt      LIKE type_t.num5     ]]>
  </point>
  <point name="fill_chk.after_chk" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) OR
      ((NOT cl_null(g_wc2_table2) AND g_wc2_table2.trim() <> '1=1')) OR 
      ((NOT cl_null(g_wc2_table3) AND g_wc2_table3.trim() <> '1=1')) OR
      ((NOT cl_null(g_wc2_table4) AND g_wc2_table4.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF]]>
  </point>
  <point name="fill_chk.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="fill_chk.other_chk" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="filter.add_cs" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="filter.b_dialog" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="filter.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="filter_parser.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="global.inc" order="" ver="4" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[GLOBALS "../../../com/sub/4gl/s_apmm101.inc"]]>
  </point>
  <point name="global.memo" order="" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#151118-00012#1  151118 By shiun  新增s_axmt540_get_exchange傳入參數
#151125-00013#1  151126 By Polly  調整重新計算整單單據金額條件
#150710-00002#1  151126 By Polly  作廢單據關閉視窗後會出現錯誤
#151210-00002#1  151214 By Polly  1.拿掉需「供應商直送」才可轉採購單 2.新增轉請購單功能3增加控卡請購/採購只能擇一]]>
  </point>
  <point name="global.variable" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE g_flag         LIKE type_t.num5
DEFINE g_flag1        LIKE type_t.num5
DEFINE g_oofa001      LIKE oofa_t.oofa001
DEFINE g_ooef019      LIKE ooef_t.ooef019
DEFINE g_acc          LIKE gzcb_t.gzcb007
DEFINE g_pmab089      LIKE pmab_t.pmab089
DEFINE g_inam       DYNAMIC ARRAY OF RECORD   #記錄產品特徵
         inam001      LIKE inam_t.inam001,
         inam002      LIKE inam_t.inam002,
         inam004      LIKE inam_t.inam004
                   END RECORD   
DEFINE g_tax_app      LIKE oodb_t.oodb011      #取得稅別類型1:正常稅率2:依料件設定
DEFINE g_xmah003      LIKE xmah_t.xmah003      #價格是否允許修改
DEFINE g_xmah006      LIKE xmah_t.xmah006      #允許單價為0
DEFINE g_imaa005      LIKE imaa_t.imaa005 
DEFINE g_imaf015      LIKE imaf_t.imaf015  
DEFINE g_imaf055      LIKE imaf_t.imaf055
DEFINE g_imaf061      LIKE imaf_t.imaf061
DEFINE g_imaf113      LIKE imaf_t.imaf113 
DEFINE g_pmaa004      LIKE pmaa_t.pmaa004      #法人類型
DEFINE g_slip         LIKE oobal_t.oobal002
DEFINE g_pjaa001      LIKE pjaa_t.pjaa001 #add by lixiang 2015/06/29
DEFINE g_pjaa003      LIKE pjaa_t.pjaa003 #add by lixiang 2015/06/29
DEFINE g_pjaa004      LIKE pjaa_t.pjaa004 #add by lixiang 2015/06/29
DEFINE g_pmao_flag    LIKE type_t.chr1
DEFINE g_hold         LIKE type_t.num5    #151102 polly add]]>
  </point>
  <point name="idx_chk.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="idx_chk.other" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="init.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="init.init" order="" ver="8" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_combo_scc_part('xmda005','2063','1,2,3,4,5')      
   CALL cl_set_combo_scc_part('xmdc019','2055','1,2,3,9')
   CALL cl_set_combo_scc_part('xmda007','2065','1,2,5,6,7,9')   #150511 by whitney add 150512-00015#4
  
   IF g_argv[01] = '8' THEN
      CALL cl_set_combo_scc_part('xmda005','2063','1,2,3,4,5,6,8')
   ELSE
      CALL cl_set_combo_scc_part('xmda005','2063','1,2,3,4,5')
   END IF 

   CALL axmt500_set_comp_att_text()

   CALL axmt500_set_comp_visible()
   CALL axmt500_set_comp_no_visible()
   
   #計算金額建立tmptable
   CALL s_tax_recount_tmp()
]]>
  </point>
  <point name="input.a.page1.imaal004" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.a.page1.xmdc001" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdc_d[l_ac].xmdc001_desc = ''
            LET g_xmdc_d[l_ac].xmdc001_desc_desc = ''
            IF NOT cl_null(g_xmdc_d[l_ac].xmdc001) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmdc_d[l_ac].xmdc001 != g_xmdc_d_o.xmdc001 OR g_xmdc_d_o.xmdc001 IS NULL)) THEN 
                  #檢核料號+產品特徵是否存在預先訂單中                  
                  IF g_xmda_m.xmda007 = '2' AND NOT cl_null(g_xmda_m.xmda008) THEN                     
                     IF NOT axmt500_advance_chk_xmdc001(g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc002) THEN
                        LET g_xmdc_d[l_ac].xmdc001 = g_xmdc_d_o.xmdc001
                        NEXT FIELD CURRENT                     
                     END IF                   
                  END IF 
                  IF NOT axmt500_xmdc001_chk(g_xmdc_d[l_ac].xmdc001) THEN
                     LET g_xmdc_d[l_ac].xmdc001 = g_xmdc_d_o.xmdc001
                     NEXT FIELD CURRENT
                  END IF              
                  #查看料號是否為T:範本
                  LET l_bmaa001 = '' 
                  LET l_bmaa002 = ''
                  SELECT bmaa001,bmaa002 
                    INTO l_bmaa001,l_bmaa002
                    FROM imaa_t,bmaa_t
                   WHERE imaaent = bmaaent 
                     AND imaa001 = bmaa001
                     AND imaaent = g_enterprise
                     AND imaa001 = g_xmdc_d[l_ac].xmdc001
                     AND bmaasite = 'ALL'                        
                     AND imaa004 = 'T' 
                  IF NOT cl_null(l_bmaa001) THEN
                     CALL s_abmm208(l_bmaa001,l_bmaa002) RETURNING l_success,l_bmla001,l_bmla002   
                     IF l_success THEN
                        LET g_xmdc_d[l_ac].xmdc001 = l_bmla001
                        LET g_xmdc_d[l_ac].xmdc002 = l_bmla002
                     END IF    
                  END IF
                 #--151103--polly--add--(s) 
                  #判斷客戶料號是否存在交易對象料號對應檔，若無，則跳出詢問示窗是否要回寫交易對象料號對應檔中
                  IF g_xmdc_d[l_ac].xmdc001 != g_xmdc_d_o.xmdc001 OR g_xmdc_d_o.xmdc001 IS NULL THEN
                     #根據料件編號、供應商、銷售控制組帶出欄位預設值
                     CALL axmt500_xmdc001_desc()
                     IF NOT cl_null(g_xmdc_d[l_ac].xmdc027) AND NOT cl_null(g_xmdc_d[l_ac].xmdc001) AND g_xmdc_d[l_ac].xmdc002 IS NOT NULL THEN
                        LET l_cnt = 0
                        SELECT COUNT(*) INTO l_cnt
                          FROM pmao_t
                         WHERE pmaoent = g_enterprise 
                           AND pmao001 = g_xmda_m.xmda004
                           AND pmao002 = g_xmdc_d[l_ac].xmdc001
                           AND pmao003 = g_xmdc_d[l_ac].xmdc002
                           AND pmao004 = g_xmdc_d[l_ac].xmdc027 
                        IF l_cnt = 0 THEN
                           IF cl_ask_confirm('axm-00445') THEN
                              LET g_pmao_flag = 'Y'
                           ELSE
                              LET g_xmdc_d[l_ac].xmdc027 = ''
                              DISPLAY BY NAME g_xmdc_d[l_ac].xmdc027                      
                           END IF               
                        END IF               
                     END IF
                  END IF   
                 #--151103--polly--add--(e) 
                  IF g_xmdc_d[l_ac].xmdc001 != g_xmdc_d_o.xmdc001 THEN                      
                     #修改料號時，需考慮重新取價、可選件/附屬零件
                     IF NOT cl_null(g_xmdc_d[l_ac].xmdc011) THEN                      
                        #可選件/附屬零件
                        IF axmt500_chk_xmdq(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq) THEN
                           DELETE FROM xmdq_t
                            WHERE xmdqent = g_enterprise
                              AND xmdqdocno = g_xmda_m.xmdadocno
                              AND xmdqseq = g_xmdc_d[l_ac].xmdcseq                    
                        END IF                     
                        IF axmt500_get_bmab(g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdcunit) THEN
                           IF NOT axmt500_05(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq) THEN
                              LET g_xmdc_d[l_ac].xmdc001 = g_xmdc_d_o.xmdc001
                              CALL axmt500_xmdc001_desc()
                              NEXT FIELD CURRENT   
                           END IF                     
                        END IF
                        #重新取價
                        IF cl_ask_confirm('axm-00230') THEN                              
                           LET l_xmdc015 = 0
                           CALL axmt500_get_xmdc015() RETURNING l_xmdc015      
                           LET g_xmdc_d[l_ac].xmdc015 = l_xmdc015                                                  
                           #當數量或單價有變更時，重計金額
                           IF l_cmd = 'a' OR (l_cmd = 'u' AND (
                              (g_xmdc_d[l_ac].xmdc011 != g_xmdc_d_o.xmdc011 OR g_xmdc_d_o.xmdc011 IS NULL) OR
                              (g_xmdc_d[l_ac].xmdc015 != g_xmdc_d_o.xmdc015 OR g_xmdc_d_o.xmdc015 IS NULL))) THEN
                              CALL s_axmt500_get_amount(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq,g_xmdc_d[l_ac].xmdc011,g_xmdc_d[l_ac].xmdc015,g_xmdc_d[l_ac].xmdc016,g_xmda_m.xmda015,g_xmda_m.xmda016)
                                RETURNING g_xmdc_d[l_ac].xmdc046,g_xmdc_d[l_ac].xmdc047,g_xmdc_d[l_ac].xmdc048
                              LET g_xmdc_d_o.xmdc015 = g_xmdc_d[l_ac].xmdc015  
                           END IF 
                        END IF
                     END IF
                  END IF                       
               END IF
               LET g_xmdc_d_o.xmdc001 = g_xmdc_d[l_ac].xmdc001                           
            END IF
            CALL s_desc_get_item_desc(g_xmdc_d[l_ac].xmdc001)                      
              RETURNING g_xmdc_d[l_ac].xmdc001_desc,g_xmdc_d[l_ac].xmdc001_desc_desc                        
            DISPLAY BY NAME g_xmdc_d[l_ac].xmdc001_desc,g_xmdc_d[l_ac].xmdc001_desc_desc                      
            LET g_xmdc2_d[l_ac].imaa001 = g_xmdc_d[l_ac].xmdc001
            LET g_xmdc2_d[l_ac].imaal003 = g_xmdc_d[l_ac].xmdc001_desc
            LET g_xmdc2_d[l_ac].imaal004 = g_xmdc_d[l_ac].xmdc001_desc_desc
            CALL axmt500_set_entry_b(l_cmd) 
            CALL axmt500_set_no_entry_b(l_cmd)             ]]>
  </point>
  <point name="input.a.page1.xmdc002" order="" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #取得產品特徵說明 
            CALL s_feature_description(g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc002)
                 RETURNING l_success,g_xmdc_d[l_ac].xmdc002_desc
            IF g_xmdc_d[l_ac].xmdc002 IS NOT NULL THEN
               IF NOT s_feature_check(g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc002) THEN
                  LET g_xmdc_d[l_ac].xmdc002 = g_xmdc_d_t.xmdc002
                  NEXT FIELD CURRENT
               END IF
              #151224 Sarah add (S)
               IF NOT s_feature_direct_input(g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc002,g_xmdc_d_t.xmdc002,g_xmda_m.xmdadocno,g_xmda_m.xmdasite) THEN
                  NEXT FIELD CURRENT
               END IF
              #151224 Sarah add (E)                 
            END IF
          
            IF NOT cl_null(g_xmdc_d[l_ac].xmdc002) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmdc_d[l_ac].xmdc002 != g_xmdc_d_o.xmdc002 OR g_xmdc_d_o.xmdc002 IS NULL)) THEN 
                  IF g_xmda_m.xmda007 = '2' AND NOT cl_null(g_xmda_m.xmda008) THEN
                     #預先訂單檢核
                     IF NOT cl_null(g_xmdc_d[l_ac].xmdc001) THEN 
                        #檢核料號+產品特徵是否存在預先訂單中
                        IF NOT axmt500_advance_chk_xmdc001(g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc002) THEN
                           LET g_xmdc_d[l_ac].xmdc002 = g_xmdc_d_o.xmdc002
                           NEXT FIELD xmdc001                     
                        END IF  
                     END IF                   
                  END IF
                 #--151103--polly--add--(s) 
                  #判斷客戶料號是否存在交易對象料號對應檔，若無，則跳出詢問示窗是否要回寫交易對象料號對應檔中
                  IF g_xmdc_d[l_ac].xmdc002 != g_xmdc_d_o.xmdc002 OR g_xmdc_d_o.xmdc002 IS NULL THEN
                     IF NOT cl_null(g_xmdc_d[l_ac].xmdc027) AND NOT cl_null(g_xmdc_d[l_ac].xmdc001) AND g_xmdc_d[l_ac].xmdc002 IS NOT NULL THEN
                        LET l_cnt = 0
                        SELECT COUNT(*) INTO l_cnt
                          FROM pmao_t
                         WHERE pmaoent = g_enterprise 
                           AND pmao001 = g_xmda_m.xmda004
                           AND pmao002 = g_xmdc_d[l_ac].xmdc001
                           AND pmao003 = g_xmdc_d[l_ac].xmdc002
                           AND pmao004 = g_xmdc_d[l_ac].xmdc027 
                        IF l_cnt = 0 THEN
                           IF cl_ask_confirm('axm-00445') THEN
                              LET g_pmao_flag = 'Y'
                           ELSE
                              LET g_xmdc_d[l_ac].xmdc027 = ''
                              DISPLAY BY NAME g_xmdc_d[l_ac].xmdc027                      
                           END IF               
                        END IF               
                     END IF
                  END IF   
                 #--151103--polly--add--(e)                  
                  #依交易對象、料號、產品特徵回傳客戶料號
                  IF NOT cl_null(g_xmdc_d[l_ac].xmdc001) AND cl_null(g_xmdc_d[l_ac].xmdc027) THEN
                     CALL s_apmi070_get_pmao004(g_xmda_m.xmda004,g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc002)
                       RETURNING l_success,l_pmao004
                     IF l_success THEN
                        LET g_xmdc_d[l_ac].xmdc027 = l_pmao004
                        DISPLAY BY NAME g_xmdc_d[l_ac].xmdc027
                        SELECT pmao009,pmao010
                          INTO g_xmdc_d[l_ac].l_pmao009,g_xmdc_d[l_ac].l_pmao010
                          FROM pmao_t
                         WHERE pmaoent = g_enterprise
                           AND pmao001 = g_xmda_m.xmda004
                           AND pmao002 = g_xmdc_d[l_ac].xmdc001
                           AND pmao003 = g_xmdc_d[l_ac].xmdc002
                           AND pmao004 = g_xmdc_d[l_ac].xmdc027                     
                        DISPLAY BY NAME g_xmdc_d[l_ac].l_pmao009,g_xmdc_d[l_ac].l_pmao010
                     END IF 
                  END IF  
                   
                  #修改產品特徵時需要開窗詢問是否重新取價，若選擇要時則需呼叫取價應用元件重新取價，
                  IF g_xmdc_d[l_ac].xmdc002 != g_xmdc_d_o.xmdc002 AND NOT cl_null(g_xmdc_d[l_ac].xmdc011) THEN
                     IF cl_ask_confirm('axm-00230') THEN                              
                        #取出價格     
                        LET l_xmdc015 = 0
                        CALL axmt500_get_xmdc015() RETURNING l_xmdc015                       
                        LET g_xmdc_d[l_ac].xmdc015 = l_xmdc015
                        #當數量或單價有變更時，重計金額
                        IF l_cmd = 'a' OR (l_cmd = 'u' AND (
                           (g_xmdc_d[l_ac].xmdc011 != g_xmdc_d_o.xmdc011 OR g_xmdc_d_o.xmdc011 IS NULL) OR
                           (g_xmdc_d[l_ac].xmdc015 != g_xmdc_d_o.xmdc015 OR g_xmdc_d_o.xmdc015 IS NULL))) THEN
                           CALL s_axmt500_get_amount(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq,g_xmdc_d[l_ac].xmdc011,g_xmdc_d[l_ac].xmdc015,g_xmdc_d[l_ac].xmdc016,g_xmda_m.xmda015,g_xmda_m.xmda016)
                             RETURNING g_xmdc_d[l_ac].xmdc046,g_xmdc_d[l_ac].xmdc047,g_xmdc_d[l_ac].xmdc048
                           LET g_xmdc_d_o.xmdc015 = g_xmdc_d[l_ac].xmdc015   
                        END IF 
                     END IF  
                  END IF                        
               END IF                  
            ELSE
               IF NOT cl_null(g_imaa005) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  'sub-00124'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = FALSE
                  CALL cl_err()    
                  NEXT FIELD xmdc002
               ELSE 
                  LET g_xmdc_d[l_ac].xmdc002 = ' '            
               END IF                
            END IF   
            LET g_xmdc_d_o.xmdc002 = g_xmdc_d[l_ac].xmdc002             ]]>
  </point>
  <point name="input.a.page1.xmdc004" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL axmt500_xmdc004_ref(g_xmdc_d[l_ac].xmdc004) RETURNING g_xmdc_d[l_ac].xmdc004_desc
               DISPLAY BY NAME g_xmdc_d[l_ac].xmdc004_desc 
               IF NOT cl_null(g_xmdc_d[l_ac].xmdc004) THEN 
               #此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmdc_d[l_ac].xmdc004

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_oocq002_221") THEN
                  #檢查成功時後續處理
               ELSE
                  #檢查失敗時後續處理
                  LET g_xmdc_d[l_ac].xmdc004 = g_xmdc_d_t.xmdc004
                  CALL axmt500_xmdc004_ref(g_xmdc_d[l_ac].xmdc004) RETURNING g_xmdc_d[l_ac].xmdc004_desc
                  DISPLAY BY NAME g_xmdc_d[l_ac].xmdc004_desc
                  NEXT FIELD CURRENT 
               END IF
            END IF 
]]>
  </point>
  <point name="input.a.page1.xmdc005" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.a.page1.xmdc006" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdc_d[l_ac].xmdc006_desc = '' 
            IF NOT cl_null(g_xmdc_d[l_ac].xmdc006) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmdc_d[l_ac].xmdc006 != g_xmdc_d_t.xmdc006 OR g_xmdc_d_t.xmdc006 IS NULL )) THEN            
                  IF NOT axmt500_unit_chk(g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc006) THEN
                     LET g_xmdc_d[l_ac].xmdc006 = g_xmdc_d_t.xmdc006
                     CALL s_desc_get_unit_desc(g_xmdc_d[l_ac].xmdc006) RETURNING g_xmdc_d[l_ac].xmdc006_desc
                     DISPLAY BY NAME g_xmdc_d[l_ac].xmdc006_desc
                     NEXT FIELD CURRENT
                  END IF               
                  IF g_xmdc_d[l_ac].xmdc006 != g_xmdc_d_t.xmdc006 AND NOT cl_null(g_xmdc_d[l_ac].xmdc007)  THEN
                     #銷售數量取位
                     CALL s_aooi250_take_decimals(g_xmdc_d[l_ac].xmdc006,g_xmdc_d[l_ac].xmdc007)
                       RETURNING l_success,g_xmdc_d[l_ac].xmdc007                    
                     DISPLAY BY NAME g_xmdc_d[l_ac].xmdc007  
                     #訂單來源為預先訂單時，訂購數量不可以少於預先訂單的數量
                     IF g_xmda_m.xmda007 = '2' AND NOT cl_null(g_xmda_m.xmda008) THEN
                        IF NOT axmt500_advance_chk_xmdc007(g_xmdc_d[l_ac].xmdcseq,g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc002,g_xmdc_d[l_ac].xmdc006,g_xmdc_d[l_ac].xmdc007) THEN
                          #LET g_xmdc_d[l_ac].xmdc006 = g_xmdc_d_t.xmdc006  #151120-00001#1 mark
                           LET g_xmdc_d[l_ac].xmdc007 = g_xmdc_d_t.xmdc007
                           CALL s_desc_get_unit_desc(g_xmdc_d[l_ac].xmdc006) RETURNING g_xmdc_d[l_ac].xmdc006_desc                     
                           NEXT FIELD xmdc007 
                        END IF
                     END IF                     
                     #若料號有設置使用參考單位時，且銷售單位與參考單位有設置換算率時，則應自動推算參考數量
                     IF NOT cl_null(g_xmdc_d[l_ac].xmdc008) THEN
                        CALL s_aooi250_convert_qty(g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc006,g_xmdc_d[l_ac].xmdc008,g_xmdc_d[l_ac].xmdc007)
                          RETURNING l_success,g_xmdc_d[l_ac].xmdc009
                        #參考數量取位
                        CALL s_aooi250_take_decimals(g_xmdc_d[l_ac].xmdc008,g_xmdc_d[l_ac].xmdc009)
                          RETURNING l_success,g_xmdc_d[l_ac].xmdc009                     
                     END IF
                     #若料號有使用銷售計價單位時，則輸入[C:出貨數量]時則應自動推算計價數量                     
                     IF cl_get_para(g_enterprise,g_site,'S-BAS-0007') = "Y" THEN      
                        CALL s_aooi250_convert_qty(g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc006,g_xmdc_d[l_ac].xmdc010,g_xmdc_d[l_ac].xmdc007)
                          RETURNING l_success,g_xmdc_d[l_ac].xmdc011
                        #對計價數量進行取位
                        CALL s_aooi250_take_decimals(g_xmdc_d[l_ac].xmdc010,g_xmdc_d[l_ac].xmdc011)
                          RETURNING l_success,g_xmdc_d[l_ac].xmdc011                                      
                        #當數量或單價有變更時，重計金額
                         IF l_cmd = 'a' OR (l_cmd = 'u' AND (
                            (g_xmdc_d[l_ac].xmdc011 != g_xmdc_d_o.xmdc011 OR g_xmdc_d_o.xmdc011 IS NULL) OR
                            (g_xmdc_d[l_ac].xmdc015 != g_xmdc_d_o.xmdc015 OR g_xmdc_d_o.xmdc015 IS NULL))) THEN
                            CALL s_axmt500_get_amount(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq,g_xmdc_d[l_ac].xmdc011,g_xmdc_d[l_ac].xmdc015,g_xmdc_d[l_ac].xmdc016,g_xmda_m.xmda015,g_xmda_m.xmda016)
                              RETURNING g_xmdc_d[l_ac].xmdc046,g_xmdc_d[l_ac].xmdc047,g_xmdc_d[l_ac].xmdc048                                                         
                         END IF                        
                     END IF  
                     #單位有調整時，如果有附屬零件/可選件時，需提示是否要調整
                     IF axmt500_chk_xmdq(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq) THEN
                        IF cl_ask_confirm('axm-00607') THEN 
                           IF NOT axmt500_05(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq) THEN
                              LET g_xmdc_d[l_ac].xmdc006 = g_xmdc_d_t.xmdc006
                              LET g_xmdc_d[l_ac].xmdc007 = g_xmdc_d_t.xmdc007
                              LET g_xmdc_d[l_ac].xmdc009 = g_xmdc_d_t.xmdc009
                              LET g_xmdc_d[l_ac].xmdc011 = g_xmdc_d_t.xmdc011                              
                              CALL s_desc_get_unit_desc(g_xmdc_d[l_ac].xmdc006) RETURNING g_xmdc_d[l_ac].xmdc006_desc 
                              NEXT FIELD CURRENT
                           END IF                        
                        END IF
                     END IF
                  END IF
               END IF 
            END IF
            CALL s_desc_get_unit_desc(g_xmdc_d[l_ac].xmdc006) RETURNING g_xmdc_d[l_ac].xmdc006_desc
            DISPLAY BY NAME g_xmdc_d[l_ac].xmdc006_desc     
            CALL axmt500_set_entry_b(l_cmd) 
            CALL axmt500_set_no_entry_b(l_cmd)               ]]>
  </point>
  <point name="input.a.page1.xmdc007" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #add by lixiang 2015/10/21--start---
            #訂單來源為ec的，數量可為0，其他來源時，數量不可為0
            IF g_xmda_m.xmda007 <> '9' THEN
               IF NOT cl_ap_chk_range(g_xmdc_d[l_ac].xmdc007,"0.000","0","","","azz-00079",1) THEN
                  NEXT FIELD xmdc007
               END IF 
            END IF
            #add by lixiang 2015/10/21--end---
            
            IF NOT cl_null(g_xmdc_d[l_ac].xmdc007) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmdc_d[l_ac].xmdc007 != g_xmdc_d_o.xmdc007 OR g_xmdc_d_o.xmdc007 IS NULL )) THEN
                  IF NOT cl_null(g_xmdc_d[l_ac].xmdc006) THEN
                     CALL s_aooi250_take_decimals(g_xmdc_d[l_ac].xmdc006,g_xmdc_d[l_ac].xmdc007)
                       RETURNING l_success,g_xmdc_d[l_ac].xmdc007                    
                     DISPLAY BY NAME g_xmdc_d[l_ac].xmdc007                   
                     #訂單來源為預先訂單時，訂購數量不可以少於預先訂單的數量
                     IF g_xmda_m.xmda007 = '2' AND NOT cl_null(g_xmda_m.xmda008) THEN
                        IF NOT axmt500_advance_chk_xmdc007(g_xmdc_d[l_ac].xmdcseq,g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc002,g_xmdc_d[l_ac].xmdc006,g_xmdc_d[l_ac].xmdc007) THEN
                          #LET g_xmdc_d[l_ac].xmdc006 = g_xmdc_d_t.xmdc006 #151120-00001#1 mark
                           LET g_xmdc_d[l_ac].xmdc007 = g_xmdc_d_t.xmdc007
                           CALL s_desc_get_unit_desc(g_xmdc_d[l_ac].xmdc006) RETURNING g_xmdc_d[l_ac].xmdc006_desc                     
                           NEXT FIELD xmdc007 
                        END IF
                     END IF   
                     IF g_xmdc_d[l_ac].xmdc007 != g_xmdc_d_o.xmdc007 THEN
                        #--150923--polly--add--(s)
                        #判斷是否有多交期，如有，則需開啟多交期視窗維護數量
                        IF g_xmdc_d[l_ac].xmdc024 = 'Y' THEN
                           CALL axmt500_03(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq,g_xmdc_d[l_ac].xmdc007)
                             RETURNING g_xmdc_d[l_ac].xmdc012,g_xmdc_d[l_ac].xmdc013
                           IF cl_null(g_xmdc_d[l_ac].xmdc012) THEN
                              LET g_xmdc_d[l_ac].xmdc024 = 'N'
                              DISPLAY BY NAME g_xmdc_d[l_ac].xmdc024                  
                           ELSE              
                              DISPLAY BY NAME g_xmdc_d[l_ac].xmdc012,g_xmdc_d[l_ac].xmdc013
                           END IF                         
                        END IF
                        #--150923--polly--add--(e)                         
                        #數量有調整時，如果有附屬零件/可選件時，需提示是否要調整
                        IF axmt500_chk_xmdq(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq) THEN
                           IF cl_ask_confirm('axm-00607') THEN 
                              IF NOT axmt500_05(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq) THEN
                                 LET g_xmdc_d[l_ac].xmdc007 = g_xmdc_d_t.xmdc007
                                 LET g_xmdc_d[l_ac].xmdc009 = g_xmdc_d_t.xmdc009
                                 LET g_xmdc_d[l_ac].xmdc011 = g_xmdc_d_t.xmdc011
                                 NEXT FIELD CURRENT
                              END IF                        
                           END IF
                        END IF    
                     END IF                        
                     #若料號有設置使用參考單位時，且銷售單位與參考單位有設置換算率時，則應自動推算參考數量
                     IF NOT cl_null(g_xmdc_d[l_ac].xmdc006) AND NOT cl_null(g_xmdc_d[l_ac].xmdc008) THEN
                        CALL s_aooi250_convert_qty(g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc006,g_xmdc_d[l_ac].xmdc008,g_xmdc_d[l_ac].xmdc007)
                          RETURNING l_success,g_xmdc_d[l_ac].xmdc009
                        CALL s_aooi250_take_decimals(g_xmdc_d[l_ac].xmdc008,g_xmdc_d[l_ac].xmdc009)
                          RETURNING l_success,g_xmdc_d[l_ac].xmdc009                     
                     END IF
                     #若料號有使用銷售計價單位時，則輸入[C:出貨數量]時則應自動推算計價數量
                     IF NOT cl_null(g_xmdc_d[l_ac].xmdc006) AND NOT cl_null(g_xmdc_d[l_ac].xmdc010) THEN
                        CALL s_aooi250_convert_qty(g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc006,g_xmdc_d[l_ac].xmdc010,g_xmdc_d[l_ac].xmdc007)
                          RETURNING l_success,g_xmdc_d[l_ac].xmdc011
                        CALL s_aooi250_take_decimals(g_xmdc_d[l_ac].xmdc010,g_xmdc_d[l_ac].xmdc011)
                          RETURNING l_success,g_xmdc_d[l_ac].xmdc011   
                        LET l_xmdc015 = 0
                        CALL axmt500_get_xmdc015() RETURNING l_xmdc015                        
                        IF g_xmdc_d[l_ac].xmdc015 <> l_xmdc015 THEN      #取出的單價不一樣時，開窗詢問是否重新取價
                           IF cl_null(g_xmdc_d_o.xmdc007) THEN           #新增資料不需開窗詢問
                              LET g_xmdc_d[l_ac].xmdc015 = l_xmdc015
                           ELSE
                              IF cl_ask_confirm('axm-00230') THEN
                                 LET g_xmdc_d[l_ac].xmdc015 = l_xmdc015
                              END IF
                           END IF
                        END IF                      
                        #當數量或單價有變更時，重計金額
                        IF l_cmd = 'a' OR (l_cmd = 'u' AND (
                           (g_xmdc_d[l_ac].xmdc011 != g_xmdc_d_o.xmdc011 OR g_xmdc_d_o.xmdc011 IS NULL) OR
                           (g_xmdc_d[l_ac].xmdc015 != g_xmdc_d_o.xmdc015 OR g_xmdc_d_o.xmdc015 IS NULL))) THEN
                           CALL s_axmt500_get_amount(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq,g_xmdc_d[l_ac].xmdc011,g_xmdc_d[l_ac].xmdc015,g_xmdc_d[l_ac].xmdc016,g_xmda_m.xmda015,g_xmda_m.xmda016)
                             RETURNING g_xmdc_d[l_ac].xmdc046,g_xmdc_d[l_ac].xmdc047,g_xmdc_d[l_ac].xmdc048                                                         
                           LET g_xmdc_d_o.xmdc015 = g_xmdc_d[l_ac].xmdc015                                      #150119 polly add
                        END IF                      
                     END IF 
                       
                  ELSE
                     NEXT FIELD xmdc006
                  END IF
               END IF 
               LET g_xmdc_d_o.xmdc007 = g_xmdc_d[l_ac].xmdc007              
            END IF
            CALL axmt500_set_entry_b(l_cmd) 
            CALL axmt500_set_no_entry_b(l_cmd)   ]]>
  </point>
  <point name="input.a.page1.xmdc008" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdc_d[l_ac].xmdc008_desc = ''
            IF NOT cl_null(g_xmdc_d[l_ac].xmdc008) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmdc_d[l_ac].xmdc008 != g_xmdc_d_o.xmdc008 OR g_xmdc_d_o.xmdc008 IS NULL )) THEN
                  IF NOT axmt500_unit_chk(g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc008) THEN
                     LET g_xmdc_d[l_ac].xmdc008 = g_xmdc_d_o.xmdc008
                     CALL s_desc_get_unit_desc(g_xmdc_d[l_ac].xmdc008) RETURNING g_xmdc_d[l_ac].xmdc008_desc
                     DISPLAY BY NAME g_xmdc_d[l_ac].xmdc006_desc  
                     NEXT FIELD CURRENT 
                  END IF                  
                  #若料號有設置使用參考單位時，且銷售單位與參考單位有設置換算率時，則應自動推算參考數量
                  IF NOT cl_null(g_xmdc_d[l_ac].xmdc006) THEN
                     CALL s_aooi250_convert_qty(g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc006,g_xmdc_d[l_ac].xmdc008,g_xmdc_d[l_ac].xmdc007)
                       RETURNING l_success,g_xmdc_d[l_ac].xmdc009    
                     #參考數量取位
                     CALL s_aooi250_take_decimals(g_xmdc_d[l_ac].xmdc008,g_xmdc_d[l_ac].xmdc009)
                       RETURNING l_success,g_xmdc_d[l_ac].xmdc009   
                  END IF                     
              END IF
              LET g_xmdc_d_o.xmdc008 = g_xmdc_d[l_ac].xmdc008
            END IF 
            CALL s_desc_get_unit_desc(g_xmdc_d[l_ac].xmdc008) RETURNING g_xmdc_d[l_ac].xmdc008_desc
            DISPLAY BY NAME g_xmdc_d[l_ac].xmdc008_desc  ]]>
  </point>
  <point name="input.a.page1.xmdc009" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdc_d[l_ac].xmdc009) THEN
               IF NOT cl_null(g_xmdc_d[l_ac].xmdc008) THEN
                  #參考數量取位
                  CALL s_aooi250_take_decimals(g_xmdc_d[l_ac].xmdc008,g_xmdc_d[l_ac].xmdc009)
                    RETURNING l_success,g_xmdc_d[l_ac].xmdc009  
               END IF
            END IF ]]>
  </point>
  <point name="input.a.page1.xmdc010" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdc_d[l_ac].xmdc010_desc = ''
            IF NOT cl_null(g_xmdc_d[l_ac].xmdc010) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmdc_d[l_ac].xmdc010 != g_xmdc_d_t.xmdc010 OR g_xmdc_d_t.xmdc010 IS NULL )) THEN
                  IF NOT axmt500_unit_chk(g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc010) THEN
                     LET g_xmdc_d[l_ac].xmdc010 = g_xmdc_d_t.xmdc010
                     CALL s_desc_get_unit_desc(g_xmdc_d[l_ac].xmdc010) RETURNING g_xmdc_d[l_ac].xmdc010_desc
                     DISPLAY BY NAME g_xmdc_d[l_ac].xmdc010_desc 
                     NEXT FIELD CURRENT
                  END IF 
                  IF NOT cl_null(g_xmdc_d[l_ac].xmdc011) THEN
                     IF cl_get_para(g_enterprise,g_site,'S-BAS-0007') = "Y" THEN        #使用銷售計價單位
                        CALL s_aooi250_convert_qty(g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc006,g_xmdc_d[l_ac].xmdc010,g_xmdc_d[l_ac].xmdc007)
                          RETURNING l_success,g_xmdc_d[l_ac].xmdc011
                        #對計價數量進行取位
                        CALL s_aooi250_take_decimals(g_xmdc_d[l_ac].xmdc010,g_xmdc_d[l_ac].xmdc011)
                          RETURNING l_success,g_xmdc_d[l_ac].xmdc011    
                        DISPLAY BY NAME g_xmdc_d[l_ac].xmdc011  
                     END IF  

                     LET l_xmdc015 = 0
                     CALL axmt500_get_xmdc015() RETURNING l_xmdc015                        
                     IF g_xmdc_d[l_ac].xmdc015 <> l_xmdc015 THEN      #取出的單價不一樣時，開窗詢問是否重新取價
                        IF cl_null(g_xmdc_d_t.xmdc010) THEN           #新增資料不需開窗詢問
                           LET g_xmdc_d[l_ac].xmdc015 = l_xmdc015
                        ELSE
                           IF cl_ask_confirm('axm-00230') THEN
                              LET g_xmdc_d[l_ac].xmdc015 = l_xmdc015
                           END IF
                        END IF
                     END IF                       
                     #當數量或單價有變更時，重計金額
                     IF l_cmd = 'a' OR (l_cmd = 'u' AND (
                        (g_xmdc_d[l_ac].xmdc011 != g_xmdc_d_o.xmdc011 OR g_xmdc_d_o.xmdc011 IS NULL) OR
                        (g_xmdc_d[l_ac].xmdc015 != g_xmdc_d_o.xmdc015 OR g_xmdc_d_o.xmdc015 IS NULL))) THEN
                         CALL s_axmt500_get_amount(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq,g_xmdc_d[l_ac].xmdc011,g_xmdc_d[l_ac].xmdc015,g_xmdc_d[l_ac].xmdc016,g_xmda_m.xmda015,g_xmda_m.xmda016)
                           RETURNING g_xmdc_d[l_ac].xmdc046,g_xmdc_d[l_ac].xmdc047,g_xmdc_d[l_ac].xmdc048                           
                        LET g_xmdc_d_o.xmdc015 = g_xmdc_d[l_ac].xmdc015                                      #150119 polly add   
                     END IF  
                  END IF 
               LET g_xmdc_d_o.xmdc010 = g_xmdc_d[l_ac].xmdc010                                      #150119 polly add   
               END IF
            END IF 
            CALL s_desc_get_unit_desc(g_xmdc_d[l_ac].xmdc010) RETURNING g_xmdc_d[l_ac].xmdc010_desc
            DISPLAY BY NAME g_xmdc_d[l_ac].xmdc010_desc             ]]>
  </point>
  <point name="input.a.page1.xmdc011" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdc_d[l_ac].xmdc011) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmdc_d[l_ac].xmdc011 != g_xmdc_d_o.xmdc011 OR g_xmdc_d_o.xmdc011 IS NULL )) THEN                  
                  IF NOT cl_null(g_xmdc_d[l_ac].xmdc010) THEN
                     #對計價數量進行取位
                     CALL s_aooi250_take_decimals(g_xmdc_d[l_ac].xmdc010,g_xmdc_d[l_ac].xmdc011)
                       RETURNING l_success,g_xmdc_d[l_ac].xmdc011                      
                     #當數量或單價有變更時，重計金額
                     LET l_xmdc015 = 0
                     CALL axmt500_get_xmdc015() RETURNING l_xmdc015                        
                     IF g_xmdc_d[l_ac].xmdc015 <> l_xmdc015 THEN      #取出的單價不一樣時，開窗詢問是否重新取價
                        IF cl_null(g_xmdc_d_o.xmdc011) THEN           #新增資料不需開窗詢問
                           LET g_xmdc_d[l_ac].xmdc015 = l_xmdc015
                        ELSE
                           IF cl_ask_confirm('axm-00230') THEN
                              LET g_xmdc_d[l_ac].xmdc015 = l_xmdc015
                           END IF
                        END IF
                     END IF                        
                     IF l_cmd = 'a' OR (l_cmd = 'u' AND (
                        (g_xmdc_d[l_ac].xmdc011 != g_xmdc_d_o.xmdc011 OR g_xmdc_d_o.xmdc011 IS NULL) OR
                        (g_xmdc_d[l_ac].xmdc015 != g_xmdc_d_o.xmdc015 OR g_xmdc_d_o.xmdc015 IS NULL))) THEN
                         CALL s_axmt500_get_amount(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq,g_xmdc_d[l_ac].xmdc011,g_xmdc_d[l_ac].xmdc015,g_xmdc_d[l_ac].xmdc016,g_xmda_m.xmda015,g_xmda_m.xmda016)
                           RETURNING g_xmdc_d[l_ac].xmdc046,g_xmdc_d[l_ac].xmdc047,g_xmdc_d[l_ac].xmdc048                                                 
                        LET g_xmdc_d_o.xmdc015 = g_xmdc_d[l_ac].xmdc015                                      #150119 polly add   
                     END IF                     
                  END IF    
                  LET g_xmdc_d_o.xmdc011 = g_xmdc_d[l_ac].xmdc011  
               END IF 
            END IF
            ]]>
  </point>
  <point name="input.a.page1.xmdc012" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            #根據交貨日期計算緊急度
              CALL axmt500_xmdc012_to_xmdc020()                       ]]>
  </point>
  <point name="input.a.page1.xmdc013" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.a.page1.xmdc015" order="" ver="8" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdc_d[l_ac].xmdc015) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmdc_d[l_ac].xmdc015 != g_xmdc_d_o.xmdc015 OR g_xmdc_d_o.xmdc015 IS NULL )) THEN
                  #若單頭取價方式的基本資料設置單價不可為0時，則輸入的單價不可以為0
                  IF g_xmdc_d[l_ac].xmdc019 <> '9' THEN
                     IF g_xmah006 = 'N' AND g_xmdc_d[l_ac].xmdc015 = 0 THEN   
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'apm-00273'
                        LET g_errparam.extend = g_xmdc_d[l_ac].xmdc015
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        LET g_xmdc_d[l_ac].xmdc015 = g_xmdc_d_o.xmdc015
                        NEXT FIELD CURRENT
                     END IF
                     #依據取價方式設置的單價修改控管方式檢核修改後單價的合理性
                     LET l_errno = ''
                     CALL s_sale_price_check(g_xmda_m.xmda017,g_xmdc_d[l_ac].xmdc015,g_xmdc2_d[l_ac].xmdc043,g_xmdc2_d[l_ac].xmdc040,g_xmda_m.xmda015,g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc002,g_xmdc_d[l_ac].xmdc010)
                       RETURNING l_flag,l_errno
                     IF NOT l_flag THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = l_errno
                        LET g_errparam.extend = ''
                        LET g_errparam.popup = TRUE
                        CALL cl_err() 
                        LET g_xmdc_d[l_ac].xmdc015 = g_xmdc_d_o.xmdc015
                        NEXT FIELD CURRENT
                     END IF                   
                  END IF    
                  #當數量或單價有變更時，重計金額
                  IF l_cmd = 'a' OR (l_cmd = 'u' AND (
                     (g_xmdc_d[l_ac].xmdc011 != g_xmdc_d_o.xmdc011 OR g_xmdc_d_o.xmdc011 IS NULL) OR
                     (g_xmdc_d[l_ac].xmdc015 != g_xmdc_d_o.xmdc015 OR g_xmdc_d_o.xmdc015 IS NULL))) THEN
                      CALL s_axmt500_get_amount(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq,g_xmdc_d[l_ac].xmdc011,g_xmdc_d[l_ac].xmdc015,g_xmdc_d[l_ac].xmdc016,g_xmda_m.xmda015,g_xmda_m.xmda016)
                        RETURNING g_xmdc_d[l_ac].xmdc046,g_xmdc_d[l_ac].xmdc047,g_xmdc_d[l_ac].xmdc048
                  END IF                   
               END IF
               LET g_xmdc_d_o.xmdc015 = g_xmdc_d[l_ac].xmdc015  
            END IF           ]]>
  </point>
  <point name="input.a.page1.xmdc016" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdc_d[l_ac].xmdc016_desc = ''            
            IF NOT cl_null(g_xmdc_d[l_ac].xmdc016) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmdc_d[l_ac].xmdc016 != g_xmdc_d_o.xmdc016 OR g_xmdc_d_o.xmdc016 IS NULL )) THEN
                  CALL s_tax_chk(g_site,g_xmdc_d[l_ac].xmdc016)
                    RETURNING l_success,g_xmdc_d[l_ac].xmdc016_desc,l_oodb005,g_xmdc_d[l_ac].xmdc017,l_oodb011
                  IF NOT l_success THEN 
                     LET g_xmdc_d[l_ac].xmdc016 = g_xmdc_d_o.xmdc016
                     LET g_xmdc_d[l_ac].xmdc017 = g_xmdc_d_o.xmdc017
                     CALL s_desc_get_tax_desc1(g_site,g_xmdc_d[l_ac].xmdc016) RETURNING g_xmdc_d[l_ac].xmdc016_desc
                     DISPLAY BY NAME g_xmdc_d[l_ac].xmdc016_desc 
                     NEXT FIELD CURRENT
                  END IF
                  IF g_xmdc_d[l_ac].xmdc011 > 0 AND g_xmdc_d[l_ac].xmdc015 > 0 THEN
                     CALL s_axmt500_get_amount(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq,g_xmdc_d[l_ac].xmdc011,g_xmdc_d[l_ac].xmdc015,g_xmdc_d[l_ac].xmdc016,g_xmda_m.xmda015,g_xmda_m.xmda016)
                       RETURNING g_xmdc_d[l_ac].xmdc046,g_xmdc_d[l_ac].xmdc047,g_xmdc_d[l_ac].xmdc048
                  END IF
               END IF
               LET g_xmdc_d_o.xmdc016 = g_xmdc_d[l_ac].xmdc016
            END IF
            CALL s_desc_get_tax_desc1(g_site,g_xmdc_d[l_ac].xmdc016) RETURNING g_xmdc_d[l_ac].xmdc016_desc  
            DISPLAY BY NAME g_xmdc_d[l_ac].xmdc016_desc            ]]>
  </point>
  <point name="input.a.page1.xmdc019" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.a.page1.xmdc020" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.a.page1.xmdc021" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.a.page1.xmdc022" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.a.page1.xmdc023" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
            
            IF NOT cl_null(g_xmdc_d[l_ac].xmdc023) THEN  

            END IF]]>
  </point>
  <point name="input.a.page1.xmdc024" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.a.page1.xmdc027" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdc_d[l_ac].xmdc027) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmdc_d[l_ac].xmdc027 != g_xmdc_d_o.xmdc027 OR g_xmdc_d_o.xmdc027 IS NULL )) THEN
                  #若料件為空時，呼叫元件帶出料件+產品特徵
                  IF cl_null(g_xmdc_d[l_ac].xmdc001) THEN
                     CALL s_axmt500_get_pmao002_pmao003(g_xmda_m.xmda004,g_xmdc_d[l_ac].xmdc027)
                       RETURNING l_success,l_pmao002,l_pmao003           
                     IF l_success THEN              
                        LET g_xmdc_d[l_ac].xmdc001 = l_pmao002
                        LET g_xmdc_d[l_ac].xmdc002 = l_pmao003    
                        CALL s_desc_get_item_desc(g_xmdc_d[l_ac].xmdc001)                      
                          RETURNING g_xmdc_d[l_ac].xmdc001_desc,g_xmdc_d[l_ac].xmdc001_desc_desc                                                
                        DISPLAY BY NAME g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc002  
                        DISPLAY BY NAME g_xmdc_d[l_ac].xmdc001_desc,g_xmdc_d[l_ac].xmdc001_desc_desc
                        LET g_xmdc_d_o.xmdc001 = g_xmdc_d[l_ac].xmdc001
                        LET g_xmdc_d_o.xmdc002 = g_xmdc_d[l_ac].xmdc002   
                     END IF              
                  END IF 
                  IF g_xmdc_d[l_ac].xmdc027 != g_xmdc_d_o.xmdc027 OR g_xmdc_d_o.xmdc027 IS NULL THEN                  
                     #判斷客戶料號是否存在交易對象料號對應檔，若無，則跳出詢問示窗是否要回寫交易對象料號對應檔中
                     IF NOT cl_null(g_xmdc_d[l_ac].xmdc001) AND g_xmdc_d[l_ac].xmdc002 IS NOT NULL THEN
                        LET l_cnt = 0
                        SELECT COUNT(*) INTO l_cnt
                          FROM pmao_t
                         WHERE pmaoent = g_enterprise 
                           AND pmao001 = g_xmda_m.xmda004
                           AND pmao002 = g_xmdc_d[l_ac].xmdc001
                           AND pmao003 = g_xmdc_d[l_ac].xmdc002
                           AND pmao004 = g_xmdc_d[l_ac].xmdc027 
                        IF l_cnt = 0 THEN
                           IF cl_ask_confirm('axm-00445') THEN
                              LET g_pmao_flag ='Y'
                           ELSE
                              LET g_xmdc_d[l_ac].xmdc027 = ''
                              DISPLAY BY NAME g_xmdc_d[l_ac].xmdc027                      
                           END IF               
                        END IF               
                     END IF  
                  END IF   
                  SELECT pmao009,pmao010
                    INTO g_xmdc_d[l_ac].l_pmao009,g_xmdc_d[l_ac].l_pmao010
                    FROM pmao_t
                   WHERE pmaoent = g_enterprise
                     AND pmao001 = g_xmda_m.xmda004
                     AND pmao002 = g_xmdc_d[l_ac].xmdc001
                     AND pmao003 = g_xmdc_d[l_ac].xmdc002
                     AND pmao004 = g_xmdc_d[l_ac].xmdc027                     
                  DISPLAY BY NAME g_xmdc_d[l_ac].l_pmao009,g_xmdc_d[l_ac].l_pmao010                  
                  LET g_xmdc_d_o.xmdc027 = g_xmdc_d[l_ac].xmdc027             
               END IF
            ELSE               
            END IF
            CALL axmt500_set_entry_b(l_cmd)
            CALL axmt500_set_no_entry_b(l_cmd)]]>
  </point>
  <point name="input.a.page1.xmdc045" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.a.page1.xmdc049" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL axmt500_xmdc049_ref(g_xmdc_d[l_ac].xmdc049) RETURNING g_xmdc_d[l_ac].xmdc049_desc
            DISPLAY BY NAME g_xmdc_d[l_ac].xmdc049_desc            
            IF NOT cl_null(g_xmdc_d[l_ac].xmdc049) THEN
               IF NOT axmt500_xmdc049_chk(g_xmdc_d[l_ac].xmdc049) THEN
                  LET g_xmdc_d[l_ac].xmdc049 = g_xmdc_d_t.xmdc049
                  CALL axmt500_xmdc049_ref(g_xmdc_d[l_ac].xmdc049) RETURNING g_xmdc_d[l_ac].xmdc049_desc
                  DISPLAY BY NAME g_xmdc_d[l_ac].xmdc049_desc
                  NEXT FIELD CURRENT
               END IF
            END IF]]>
  </point>
  <point name="input.a.page1.xmdc050" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.a.page1.xmdc052" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.a.page1.xmdc053" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xmdc_d[l_ac].xmdc053
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='265' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xmdc_d[l_ac].xmdc053_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xmdc_d[l_ac].xmdc053_desc
]]>
  </point>
  <point name="input.a.page1.xmdcorga" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    CALL axmt500_xmda003_ref(g_xmdc_d[l_ac].xmdcorga) RETURNING g_xmdc_d[l_ac].xmdcorga_desc
            DISPLAY BY NAME g_xmdc_d[l_ac].xmdcorga_desc
            IF NOT cl_null(g_xmdc_d[l_ac].xmdcorga) THEN 
               IF NOT axmt500_xmdcunit_chk(g_xmdc_d[l_ac].xmdcorga) THEN
                  LET g_xmdc_d[l_ac].xmdcorga = g_xmdc_d_t.xmdcorga
                  CALL axmt500_xmda003_ref(g_xmdc_d[l_ac].xmdcorga) RETURNING g_xmdc_d[l_ac].xmdcorga_desc
                  DISPLAY BY NAME g_xmdc_d[l_ac].xmdcorga_desc
                  NEXT FIELD CURRENT
               END IF
            ELSE
               LET g_xmdc_d[l_ac].xmdcorga = g_site
               CALL axmt500_xmda003_ref(g_xmdc_d[l_ac].xmdcorga) RETURNING g_xmdc_d[l_ac].xmdcorga_desc
               DISPLAY BY NAME g_xmdc_d[l_ac].xmdcorga_desc 
            END IF]]>
  </point>
  <point name="input.a.page1.xmdcseq" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a05產生
            IF  g_xmda_m.xmdadocno IS NOT NULL AND g_xmdc_d[g_detail_idx].xmdcseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmda_m.xmdadocno != g_xmdadocno_t OR g_xmdc_d[g_detail_idx].xmdcseq != g_xmdc_d_t.xmdcseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmdc_t WHERE "||"xmdcent = '" ||g_enterprise|| "' AND "||"xmdcdocno = '"||g_xmda_m.xmdadocno ||"' AND "|| "xmdcseq = '"||g_xmdc_d[g_detail_idx].xmdcseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.xmdcunit" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    CALL s_desc_get_department_desc(g_xmdc_d[l_ac].xmdcunit) RETURNING g_xmdc_d[l_ac].xmdcunit_desc
            DISPLAY BY NAME g_xmdc_d[l_ac].xmdcunit_desc
            IF NOT cl_null(g_xmdc_d[l_ac].xmdcunit) THEN 
               IF NOT axmt500_xmdcunit_chk(g_xmdc_d[l_ac].xmdcunit) THEN
                  LET g_xmdc_d[l_ac].xmdcunit = g_xmdc_d_t.xmdcunit
                  CALL s_desc_get_department_desc(g_xmdc_d[l_ac].xmdcunit) RETURNING g_xmdc_d[l_ac].xmdcunit_desc
                  DISPLAY BY NAME g_xmdc_d[l_ac].xmdcunit_desc
                  NEXT FIELD CURRENT
               END IF
               
               LET g_xmdc_d[l_ac].xmdcorga = g_xmdc_d[l_ac].xmdcunit
               CALL s_desc_get_department_desc(g_xmdc_d[l_ac].xmdcorga) RETURNING g_xmdc_d[l_ac].xmdcorga_desc
               DISPLAY BY NAME g_xmdc_d[l_ac].xmdcorga_desc           
            ELSE
               LET g_xmdc_d[l_ac].xmdcunit = g_site
               CALL s_desc_get_department_desc(g_xmdc_d[l_ac].xmdcunit) RETURNING g_xmdc_d[l_ac].xmdcunit_desc
               DISPLAY BY NAME g_xmdc_d[l_ac].xmdcunit_desc     
            END IF 
]]>
  </point>
  <point name="input.a.page2.imaa005" order="" ver="8" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
]]>
  </point>
  <point name="input.a.page2.xmdc003" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdc2_d[l_ac].xmdc003_desc = ''
            IF NOT cl_null(g_xmdc2_d[l_ac].xmdc003) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmdc2_d[l_ac].xmdc003 != g_xmdc2_d_o.xmdc003 OR g_xmdc2_d_o.xmdc003 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmdc2_d[l_ac].xmdc003 
                  IF NOT cl_chk_exist("v_imaf001_2") THEN
                     LET g_xmdc2_d[l_ac].xmdc003 = g_xmdc2_d_t.xmdc003
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL axmt500_xmdc003_ref(g_xmdc2_d[l_ac].xmdc003) RETURNING  g_xmdc2_d[l_ac].xmdc003_desc         
            DISPLAY BY NAME g_xmdc2_d[l_ac].xmdc003_desc
]]>
  </point>
  <point name="input.a.page2.xmdc025" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdc2_d[l_ac].oofb0173 = ''
            IF NOT cl_null(g_xmdc2_d[l_ac].xmdc025) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmdc2_d[l_ac].xmdc025 != g_xmdc2_d_t.xmdc025 OR
                                                   g_xmdc2_d_t.xmdc025 IS NULL)) THEN

                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = l_pmaa027
                  LET g_chkparam.arg2 = g_xmdc2_d[l_ac].xmdc025
                  IF NOT cl_chk_exist("v_oofb019") THEN
                     LET g_xmdc2_d[l_ac].xmdc025 = g_xmdc2_d_t.xmdc025
                     CALL axmt500_xmda025_ref(g_xmda_m.xmda022,g_xmdc2_d[l_ac].xmdc025) 
                       RETURNING l_desc,g_xmdc2_d[l_ac].oofb0173
                     DISPLAY BY NAME g_xmdc2_d[l_ac].oofb0173
                     NEXT FIELD CURRENT
                  END IF
               END IF
               CALL axmt500_xmda025_ref(g_xmda_m.xmda022,g_xmdc2_d[l_ac].xmdc025) 
                 RETURNING l_desc,g_xmdc2_d[l_ac].oofb0173
               DISPLAY BY NAME g_xmdc2_d[l_ac].oofb0173                
            END IF        
]]>
  </point>
  <point name="input.a.page2.xmdc026" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdc2_d[l_ac].oofb0174 = ''
            IF NOT cl_null(g_xmdc2_d[l_ac].xmdc026) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmdc2_d[l_ac].xmdc026 != g_xmdc2_d_t.xmdc026 OR g_xmdc2_d_t.xmdc026 IS NULL )) THEN
            
                  INITIALIZE g_chkparam.* TO NULL               
		            LET g_chkparam.arg1 = l_pmaa027
                  LET g_chkparam.arg2 = g_xmdc2_d[l_ac].xmdc026                 
                  IF NOT cl_chk_exist("v_oofb019") THEN
                     LET g_xmdc2_d[l_ac].xmdc026 = g_xmdc2_d_t.xmdc026
                     CALL axmt500_xmda025_ref(g_xmda_m.xmda021,g_xmdc2_d[l_ac].xmdc026) 
                       RETURNING l_desc,g_xmdc2_d[l_ac].oofb0174
                     DISPLAY BY NAME g_xmdc2_d[l_ac].oofb0174
                     NEXT FIELD CURRENT
                  END IF
               END IF   
               CALL axmt500_xmda025_ref(g_xmda_m.xmda021,g_xmdc2_d[l_ac].xmdc026) 
                 RETURNING l_desc,g_xmdc2_d[l_ac].oofb0174
               DISPLAY BY NAME g_xmdc2_d[l_ac].oofb0174               
            END IF ]]>
  </point>
  <point name="input.a.page2.xmdc0272" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.a.page2.xmdc028" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdc2_d[l_ac].xmdc028_desc = ''
            IF NOT cl_null(g_xmdc2_d[l_ac].xmdc028) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmdc2_d[l_ac].xmdc028 != g_xmdc2_d_o.xmdc028 OR g_xmdc2_d_o.xmdc028 IS NULL )) THEN
                  IF NOT s_axmt500_xmdc028_chk(g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc002,g_xmdc2_d[l_ac].xmdc028) THEN
                     LET g_xmdc2_d[l_ac].xmdc028 = g_xmdc2_d_o.xmdc028
                     CALL s_desc_get_stock_desc(g_site,g_xmdc2_d[l_ac].xmdc028) RETURNING g_xmdc2_d[l_ac].xmdc028_desc
                     NEXT FIELD CURRENT
                  END IF 
                 #--20150205--訂單不需考慮庫存量----mark(S)
                 #IF NOT s_axmt500_inan_chk(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc002,
                 #                          g_xmdc2_d[l_ac].xmdc028,g_xmdc2_d[l_ac].xmdc029,g_xmdc2_d[l_ac].xmdc030,
                 #                          g_xmdc_d[l_ac].xmdc010,g_xmdc_d[l_ac].xmdc011) THEN
                 #   LET g_xmdc2_d[l_ac].xmdc028 = g_xmdc2_d_o.xmdc028
                 #   CALL s_desc_get_stock_desc(g_site,g_xmdc2_d[l_ac].xmdc028) RETURNING g_xmdc2_d[l_ac].xmdc028_desc
                 #   NEXT FIELD CURRENT
                 #END IF
                 #--20150205--訂單不需考慮庫存量----mark(E)
               END IF 
               LET g_xmdc2_d_o.xmdc028 = g_xmdc2_d[l_ac].xmdc028
            END IF
            CALL s_desc_get_stock_desc(g_site,g_xmdc2_d[l_ac].xmdc028) RETURNING g_xmdc2_d[l_ac].xmdc028_desc
            DISPLAY BY NAME g_xmdc2_d[l_ac].xmdc028_desc
            CALL axmt500_set_entry_b(l_cmd) 
            CALL axmt500_set_no_entry_b(l_cmd)            ]]>
  </point>
  <point name="input.a.page2.xmdc029" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdc2_d[l_ac].xmdc029_desc = ''
            IF NOT cl_null(g_xmdc2_d[l_ac].xmdc029) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmdc2_d[l_ac].xmdc029 != g_xmdc2_d_o.xmdc029 OR g_xmdc2_d_o.xmdc029 IS NULL )) THEN
                  IF NOT s_axmt500_xmdc029_chk(g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc002,g_xmdc2_d[l_ac].xmdc028,
                                               g_xmdc2_d[l_ac].xmdc029) THEN
                     LET g_xmdc2_d[l_ac].xmdc029 = g_xmdc2_d_o.xmdc029
                     CALL s_desc_get_locator_desc(g_site,g_xmdc2_d[l_ac].xmdc028,g_xmdc2_d[l_ac].xmdc029)
                       RETURNING g_xmdc2_d[l_ac].xmdc029_desc
                     NEXT FIELD CURRENT
                  END IF
                 #--20150205--訂單不需考慮庫存量----mark(S) 
                 #IF NOT s_axmt500_inan_chk(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc002,
                 #                          g_xmdc2_d[l_ac].xmdc028,g_xmdc2_d[l_ac].xmdc029,g_xmdc2_d[l_ac].xmdc030,
                 #                          g_xmdc_d[l_ac].xmdc010,g_xmdc_d[l_ac].xmdc011) THEN
                 #   LET g_xmdc2_d[l_ac].xmdc029 = g_xmdc2_d_o.xmdc029
                 #   CALL s_desc_get_locator_desc(g_site,g_xmdc2_d[l_ac].xmdc028,g_xmdc2_d[l_ac].xmdc029)
                 #     RETURNING g_xmdc2_d[l_ac].xmdc029_desc
                 #   NEXT FIELD CURRENT
                 #END IF 
                 #--20150205--訂單不需考慮庫存量----mark(E) 
               END IF
               LET g_xmdc2_d_o.xmdc029 = g_xmdc2_d[l_ac].xmdc029
            END IF
            CALL s_desc_get_locator_desc(g_site,g_xmdc2_d[l_ac].xmdc028,g_xmdc2_d[l_ac].xmdc029)
              RETURNING g_xmdc2_d[l_ac].xmdc029_desc]]>
  </point>
  <point name="input.a.page2.xmdc030" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdc2_d[l_ac].xmdc030) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmdc2_d[l_ac].xmdc030 != g_xmdc2_d_o.xmdc030 OR g_xmdc2_d_o.xmdc030 IS NULL )) THEN
                  IF NOT  s_axmt500_xmdc030_chk(g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc002,g_xmdc2_d[l_ac].xmdc028,
                                                 g_xmdc2_d[l_ac].xmdc029,g_xmdc2_d[l_ac].xmdc030) THEN
                     LET g_xmdc2_d[l_ac].xmdc030 = g_xmdc2_d_o.xmdc030
                     NEXT FIELD CURRENT
                  END IF
                  #--20150205--訂單不需考慮庫存量----mark(S)
                  #IF NOT s_axmt500_inan_chk(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc002,
                  #                          g_xmdc2_d[l_ac].xmdc028,g_xmdc2_d[l_ac].xmdc029,g_xmdc2_d[l_ac].xmdc030,
                  #                          g_xmdc_d[l_ac].xmdc010,g_xmdc_d[l_ac].xmdc011) THEN
                  #   LET g_xmdc2_d[l_ac].xmdc030 = g_xmdc2_d_o.xmdc030
                  #   NEXT FIELD CURRENT
                  #END IF 
                  #--20150205--訂單不需考慮庫存量----mark(E)
               END IF
               LET g_xmdc2_d_o.xmdc030 = g_xmdc2_d[l_ac].xmdc030 
            END IF
                                                                        ]]>
  </point>
  <point name="input.a.page2.xmdc031" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdc2_d[l_ac].xmdc031_desc = ''
            IF NOT cl_null(g_xmdc2_d[l_ac].xmdc031) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmdc2_d[l_ac].xmdc031 != g_xmdc2_d_t.xmdc031 OR g_xmdc2_d_t.xmdc031 IS NULL )) THEN
                  IF NOT s_azzi650_chk_exist('263',g_xmdc2_d[l_ac].xmdc031) THEN
                     LET g_xmdc2_d[l_ac].xmdc031 = g_xmdc2_d_t.xmdc031
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_acc_desc('263',g_xmdc2_d[l_ac].xmdc031) RETURNING g_xmdc2_d[l_ac].xmdc031_desc
            DISPLAY BY NAME g_xmdc2_d[l_ac].xmdc031_desc ]]>
  </point>
  <point name="input.a.page2.xmdc032" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.a.page2.xmdc033" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdc2_d[l_ac].xmdc033) THEN 
            END IF 
]]>
  </point>
  <point name="input.a.page2.xmdc034" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                    IF NOT cl_null(g_xmdc2_d[l_ac].xmdc034) THEN 
            END IF 
]]>
  </point>
  <point name="input.a.page2.xmdc036" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL s_desc_get_project_desc(g_xmdc2_d[l_ac].xmdc036) RETURNING g_xmdc2_d[l_ac].xmdc036_desc
            DISPLAY BY NAME g_xmdc2_d[l_ac].xmdc036_desc
            IF NOT cl_null(g_xmdc2_d[l_ac].xmdc036) THEN 
#應用 a17 樣板自動產生(Version:2)
               #IF g_xmdc2_d[l_ac].xmdc036 != g_xmdc2_d_o.xmdc036 OR cl_null(g_xmdc2_d_o.xmdc036) THEN
                  
                 #IF g_pjaa003 = 'N' THEN
                 # IF g_pjaa003 = 'N' OR cl_null(g_pjaa003) THEN  #mark by lixiang 2015/11/21
                     #欄位存在檢查
                     #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                     INITIALIZE g_chkparam.* TO NULL
                     
                     #設定g_chkparam.*的參數
                     LET g_chkparam.arg1 = g_xmdc2_d[l_ac].xmdc036
                     
                     #呼叫檢查存在並帶值的library
                     #IF NOT cl_chk_exist("v_pjba001") THEN  #mark by lixiang 2015/11/21
                     IF NOT cl_chk_exist("v_pjab001") THEN   #add by lixiang 2015/11/21
                        #檢查失敗時後續處理
                        LET g_xmdc2_d[l_ac].xmdc036 = g_xmdc2_d_o.xmdc036
                        CALL s_desc_get_project_desc(g_xmdc2_d[l_ac].xmdc036) RETURNING g_xmdc2_d[l_ac].xmdc036_desc
                        DISPLAY BY NAME g_xmdc2_d[l_ac].xmdc036_desc
                        NEXT FIELD CURRENT
                     END IF
                  #END IF #mark by lixiang 2015/11/21
                  
                  IF g_xmdc2_d[l_ac].xmdc036 != g_xmdc2_d_o.xmdc036 OR cl_null(g_xmdc2_d_o.xmdc036) THEN
                     LET g_xmdc2_d[l_ac].xmdc037 = ''
                     LET g_xmdc2_d[l_ac].xmdc037_desc = ''
                     LET g_xmdc2_d[l_ac].xmdc038 = ''
                     LET g_xmdc2_d[l_ac].xmdc038_desc = ''
                  END IF
               #END IF

            END IF  
            LET g_xmdc2_d_o.xmdc036 = g_xmdc2_d[l_ac].xmdc036            ]]>
  </point>
  <point name="input.a.page2.xmdc037" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL s_desc_get_wbs_desc(g_xmdc2_d[l_ac].xmdc036,g_xmdc2_d[l_ac].xmdc037) RETURNING g_xmdc2_d[l_ac].xmdc037_desc
            DISPLAY BY NAME g_xmdc2_d[l_ac].xmdc037_desc
            IF NOT cl_null(g_xmdc2_d[l_ac].xmdc037) THEN 
#應用 a17 樣板自動產生(Version:2)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmdc2_d[l_ac].xmdc036
               LET g_chkparam.arg2 = g_xmdc2_d[l_ac].xmdc037
                  
               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_pjbb002") THEN
                  #檢查失敗時後續處理
                  LET g_xmdc2_d[l_ac].xmdc037 = g_xmdc2_d_t.xmdc037
                  CALL s_desc_get_wbs_desc(g_xmdc2_d[l_ac].xmdc036,g_xmdc2_d[l_ac].xmdc037) RETURNING g_xmdc2_d[l_ac].xmdc037_desc
                  DISPLAY BY NAME g_xmdc2_d[l_ac].xmdc037_desc
                  NEXT FIELD CURRENT
               END IF

            END IF                                                                         ]]>
  </point>
  <point name="input.a.page2.xmdc038" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL s_desc_get_activity_desc(g_xmdc2_d[l_ac].xmdc036,g_xmdc2_d[l_ac].xmdc038) RETURNING g_xmdc2_d[l_ac].xmdc038_desc
            DISPLAY BY NAME g_xmdc2_d[l_ac].xmdc038_desc

            IF NOT cl_null(g_xmdc2_d[l_ac].xmdc038) THEN 
#應用 a17 樣板自動產生(Version:2)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmdc2_d[l_ac].xmdc036
               LET g_chkparam.arg2 = g_xmdc2_d[l_ac].xmdc038
                  
               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_pjbm002") THEN
                  #檢查失敗時後續處理
                  LET g_xmdc2_d[l_ac].xmdc038 = g_xmdc2_d_t.xmdc038
                  CALL s_desc_get_activity_desc(g_xmdc2_d[l_ac].xmdc036,g_xmdc2_d[l_ac].xmdc038) RETURNING g_xmdc2_d[l_ac].xmdc038_desc
                  DISPLAY BY NAME g_xmdc2_d[l_ac].xmdc038_desc
                  NEXT FIELD CURRENT
               END IF
            END IF                                                             ]]>
  </point>
  <point name="input.a.page2.xmdc039" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.a.page2.xmdcseq_2" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xmda_m.xmdadocno IS NOT NULL AND g_xmdc2_d[g_detail_idx].xmdcseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmda_m.xmdadocno != g_xmdadocno_t OR g_xmdc2_d[g_detail_idx].xmdcseq != g_xmdc2_d_t.xmdcseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmdc_t WHERE "||"xmdcent = '" ||g_enterprise|| "' AND "||"xmdcdocno = '"||g_xmda_m.xmdadocno ||"' AND "|| "xmdcseq = '"||g_xmdc2_d[g_detail_idx].xmdcseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page3.xmdc012" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.a.page3.xmdc013" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.a.page3.xmdd001" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdc3_d[l_ac].xmdd001) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmdc3_d[l_ac].xmdd001

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_imaa001_5") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
]]>
  </point>
  <point name="input.a.page3.xmdd002" order="" ver="8" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
]]>
  </point>
  <point name="input.a.page3.xmdd004" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdc3_d[l_ac].xmdd004) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmdc3_d[l_ac].xmdd004

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooca001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
]]>
  </point>
  <point name="input.a.page3.xmdd017" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdc3_d[l_ac].xmdd017) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_site
               LET g_chkparam.arg2 = g_xmdc3_d[l_ac].xmdd017 
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_oodb002") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
]]>
  </point>
  <point name="input.a.page3.xmdd022" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdc3_d[l_ac].xmdd022) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmdc3_d[l_ac].xmdd022

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooag001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
]]>
  </point>
  <point name="input.a.page3.xmdd024" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdc3_d[l_ac].xmdd024) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmdc3_d[l_ac].xmdd024

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooca001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
]]>
  </point>
  <point name="input.a.page3.xmdd025" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdc3_d[l_ac].xmdd025) THEN 
            END IF 
]]>
  </point>
  <point name="input.a.page3.xmdd026" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdc3_d[l_ac].xmdd026) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmdc3_d[l_ac].xmdd026

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooca001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
]]>
  </point>
  <point name="input.a.page3.xmdd027" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdc3_d[l_ac].xmdd027) THEN 
            END IF 
]]>
  </point>
  <point name="input.a.page3.xmddseq" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xmda_m.xmdadocno IS NOT NULL AND g_xmdc3_d[g_detail_idx].xmddseq IS NOT NULL AND g_xmdc3_d[g_detail_idx].xmddseq1 IS NOT NULL AND g_xmdc3_d[g_detail_idx].xmddseq2 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmda_m.xmdadocno != g_xmdadocno_t OR g_xmdc3_d[g_detail_idx].xmddseq != g_xmdc3_d_t.xmddseq OR g_xmdc3_d[g_detail_idx].xmddseq1 != g_xmdc3_d_t.xmddseq1 OR g_xmdc3_d[g_detail_idx].xmddseq2 != g_xmdc3_d_t.xmddseq2)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmdd_t WHERE "||"xmddent = '" ||g_enterprise|| "' AND "||"xmdddocno = '"||g_xmda_m.xmdadocno ||"' AND "|| "xmddseq = '"||g_xmdc3_d[g_detail_idx].xmddseq ||"' AND "|| "xmddseq1 = '"||g_xmdc3_d[g_detail_idx].xmddseq1 ||"' AND "|| "xmddseq2 = '"||g_xmdc3_d[g_detail_idx].xmddseq2 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page3.xmddseq1" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xmda_m.xmdadocno IS NOT NULL AND g_xmdc3_d[g_detail_idx].xmddseq IS NOT NULL AND g_xmdc3_d[g_detail_idx].xmddseq1 IS NOT NULL AND g_xmdc3_d[g_detail_idx].xmddseq2 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmda_m.xmdadocno != g_xmdadocno_t OR g_xmdc3_d[g_detail_idx].xmddseq != g_xmdc3_d_t.xmddseq OR g_xmdc3_d[g_detail_idx].xmddseq1 != g_xmdc3_d_t.xmddseq1 OR g_xmdc3_d[g_detail_idx].xmddseq2 != g_xmdc3_d_t.xmddseq2)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmdd_t WHERE "||"xmddent = '" ||g_enterprise|| "' AND "||"xmdddocno = '"||g_xmda_m.xmdadocno ||"' AND "|| "xmddseq = '"||g_xmdc3_d[g_detail_idx].xmddseq ||"' AND "|| "xmddseq1 = '"||g_xmdc3_d[g_detail_idx].xmddseq1 ||"' AND "|| "xmddseq2 = '"||g_xmdc3_d[g_detail_idx].xmddseq2 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page3.xmddseq2" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xmda_m.xmdadocno IS NOT NULL AND g_xmdc3_d[g_detail_idx].xmddseq IS NOT NULL AND g_xmdc3_d[g_detail_idx].xmddseq1 IS NOT NULL AND g_xmdc3_d[g_detail_idx].xmddseq2 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmda_m.xmdadocno != g_xmdadocno_t OR g_xmdc3_d[g_detail_idx].xmddseq != g_xmdc3_d_t.xmddseq OR g_xmdc3_d[g_detail_idx].xmddseq1 != g_xmdc3_d_t.xmddseq1 OR g_xmdc3_d[g_detail_idx].xmddseq2 != g_xmdc3_d_t.xmddseq2)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmdd_t WHERE "||"xmddent = '" ||g_enterprise|| "' AND "||"xmdddocno = '"||g_xmda_m.xmdadocno ||"' AND "|| "xmddseq = '"||g_xmdc3_d[g_detail_idx].xmddseq ||"' AND "|| "xmddseq1 = '"||g_xmdc3_d[g_detail_idx].xmddseq1 ||"' AND "|| "xmddseq2 = '"||g_xmdc3_d[g_detail_idx].xmddseq2 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page4.xmdadocno" order="" ver="1" cite_std="" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xmda_m.xmdadocno IS NOT NULL AND g_xmdc4_d[g_detail_idx].xmdadocno IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmda_m.xmdadocno != g_xmdadocno_t OR g_xmdc4_d[g_detail_idx].xmdadocno != g_xmdc4_d_t.xmdadocno)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmda_t WHERE "||"xmdaent = '" ||g_enterprise|| "' AND "||"xmdadocno = '"||g_xmda_m.xmdadocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page4.xmdcseq_4" order="" ver="1" cite_std="" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xmda_m.xmdadocno IS NOT NULL AND g_xmdc4_d[g_detail_idx].xmdcseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmda_m.xmdadocno != g_xmdadocno_t OR g_xmdc4_d[g_detail_idx].xmdcseq != g_xmdc4_d_t.xmdcseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmdc_t WHERE "||"xmdcent = '" ||g_enterprise|| "' AND "||"xmdcdocno = '"||g_xmda_m.xmdadocno ||"' AND "|| "xmdcseq = '"||g_xmdc4_d[g_detail_idx].xmdcseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page4.xmde001" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdc4_d[l_ac].xmde001) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmdc4_d[l_ac].xmde001

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist_and_ref_val("v_imaa001_5") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
]]>
  </point>
  <point name="input.a.page4.xmde008" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdc4_d[l_ac].xmde008) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmdc4_d[l_ac].xmde008

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist_and_ref_val("v_oocq002_221") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
]]>
  </point>
  <point name="input.a.page4.xmde022" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdc4_d[l_ac].xmde022) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmdc4_d[l_ac].xmde022

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist_and_ref_val("v_ooca001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
]]>
  </point>
  <point name="input.a.page4.xmdeseq" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xmda_m.xmdadocno IS NOT NULL AND g_xmdc4_d[g_detail_idx].xmdeseq IS NOT NULL AND g_xmdc4_d[g_detail_idx].xmdeseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmda_m.xmdadocno != g_xmdadocno_t OR g_xmdc4_d[g_detail_idx].xmdeseq != g_xmdc4_d_t.xmdeseq OR g_xmdc4_d[g_detail_idx].xmdeseq1 != g_xmdc4_d_t.xmdeseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmde_t WHERE "||"xmdeent = '" ||g_enterprise|| "' AND "||"xmdedocno = '"||g_xmda_m.xmdadocno ||"' AND "|| "xmdeseq = '"||g_xmdc4_d[g_detail_idx].xmdeseq ||"' AND "|| "xmdeseq1 = '"||g_xmdc4_d[g_detail_idx].xmdeseq1 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page4.xmdeseq1" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xmda_m.xmdadocno IS NOT NULL AND g_xmdc4_d[g_detail_idx].xmdeseq IS NOT NULL AND g_xmdc4_d[g_detail_idx].xmdeseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmda_m.xmdadocno != g_xmdadocno_t OR g_xmdc4_d[g_detail_idx].xmdeseq != g_xmdc4_d_t.xmdeseq OR g_xmdc4_d[g_detail_idx].xmdeseq1 != g_xmdc4_d_t.xmdeseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmde_t WHERE "||"xmdeent = '" ||g_enterprise|| "' AND "||"xmdedocno = '"||g_xmda_m.xmdadocno ||"' AND "|| "xmdeseq = '"||g_xmdc4_d[g_detail_idx].xmdeseq ||"' AND "|| "xmdeseq1 = '"||g_xmdc4_d[g_detail_idx].xmdeseq1 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page4.xmdqseq" order="" ver="1" cite_std="" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xmda_m.xmdadocno IS NOT NULL AND g_xmdc4_d[g_detail_idx].xmdqseq IS NOT NULL AND g_xmdc4_d[g_detail_idx].xmdqseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmda_m.xmdadocno != g_xmdadocno_t OR g_xmdc4_d[g_detail_idx].xmdqseq != g_xmdc4_d_t.xmdqseq OR g_xmdc4_d[g_detail_idx].xmdqseq1 != g_xmdc4_d_t.xmdqseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmdq_t WHERE "||"xmdqent = '" ||g_enterprise|| "' AND "||"xmdqdocno = '"||g_xmda_m.xmdadocno ||"' AND "|| "xmdqseq = '"||g_xmdc4_d[g_detail_idx].xmdqseq ||"' AND "|| "xmdqseq1 = '"||g_xmdc4_d[g_detail_idx].xmdqseq1 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page4.xmdqseq1" order="" ver="1" cite_std="" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xmda_m.xmdadocno IS NOT NULL AND g_xmdc4_d[g_detail_idx].xmdqseq IS NOT NULL AND g_xmdc4_d[g_detail_idx].xmdqseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmda_m.xmdadocno != g_xmdadocno_t OR g_xmdc4_d[g_detail_idx].xmdqseq != g_xmdc4_d_t.xmdqseq OR g_xmdc4_d[g_detail_idx].xmdqseq1 != g_xmdc4_d_t.xmdqseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmdq_t WHERE "||"xmdqent = '" ||g_enterprise|| "' AND "||"xmdqdocno = '"||g_xmda_m.xmdadocno ||"' AND "|| "xmdqseq = '"||g_xmdc4_d[g_detail_idx].xmdqseq ||"' AND "|| "xmdqseq1 = '"||g_xmdc4_d[g_detail_idx].xmdqseq1 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page5.xmdb001" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xmda_m.xmdadocno IS NOT NULL AND g_xmdc5_d[g_detail_idx].xmdb001 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmda_m.xmdadocno != g_xmdadocno_t OR g_xmdc5_d[g_detail_idx].xmdb001 != g_xmdc5_d_t.xmdb001)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmdb_t WHERE "||"xmdbent = '" ||g_enterprise|| "' AND xmdbsite = '" ||g_site|| "' AND "||"xmdbdocno = '"||g_xmda_m.xmdadocno ||"' AND "|| "xmdb001 = '"||g_xmdc5_d[g_detail_idx].xmdb001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page5.xmdb002" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdc5_d[l_ac].xmdb002) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_pmad002_2") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
]]>
  </point>
  <point name="input.a.page5.xmdb005" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdc5_d[l_ac].xmdb005) THEN 
            END IF 
]]>
  </point>
  <point name="input.a.page5.xmdb006" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdc5_d[l_ac].xmdb006) THEN 
            END IF 
]]>
  </point>
  <point name="input.a.page6.xmds001" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdc6_d[l_ac].xmds001_desc = ''
            LET g_xmdc6_d[l_ac].xmds001_desc_desc = ''
            IF NOT cl_null(g_xmdc6_d[l_ac].xmds001) THEN 
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_xmdc6_d[l_ac].xmds001 != g_xmdc6_d_t.xmds001 OR g_xmdc6_d_t.xmds001 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmdc6_d[l_ac].xmds001                  
                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_imaf001_16") THEN
                     LET g_xmdc6_d[l_ac].xmds001 = g_xmdc6_d_o.xmds001
                     CALL s_desc_get_item_desc(g_xmdc6_d[l_ac].xmds001)
                          RETURNING g_xmdc6_d[l_ac].xmds001_desc,g_xmdc6_d[l_ac].xmds001_desc_desc
                     NEXT FIELD CURRENT
                  END IF        
               END IF
            END IF 
            CALL s_desc_get_item_desc(g_xmdc6_d[l_ac].xmds001)
              RETURNING g_xmdc6_d[l_ac].xmds001_desc,g_xmdc6_d[l_ac].xmds001_desc_desc
            DISPLAY BY NAME g_xmdc6_d[l_ac].xmds001_desc,g_xmdc6_d[l_ac].xmds001_desc_desc]]>
  </point>
  <point name="input.a.page6.xmds002" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdc6_d[l_ac].xmds002_desc = ''
            IF NOT cl_null(g_xmdc6_d[l_ac].xmds002) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmdc6_d[l_ac].xmds002 != g_xmdc6_d_t.xmds002 OR g_xmdc6_d_t.xmds002 IS NULL )) THEN
                  IF axmt500_xmda015_chk(g_xmdc6_d[l_ac].xmds002) THEN
                     #依內外銷決定匯率
                     IF NOT cl_null(g_xmda_m.xmda048) THEN
                        CALL s_axmt540_get_exchange(g_xmda_m.xmda048,g_xmdc6_d[l_ac].xmds002,g_xmda_m.xmdadocdt) RETURNING g_xmdc6_d[l_ac].xmds003   #modify--151118-00012#1 By shiun   新增傳入參數g_xmda_m.xmdadocdt
                        LET g_xmdc6_d_t.xmds003 = g_xmdc6_d[l_ac].xmds003
                        DISPLAY BY NAME g_xmdc6_d[l_ac].xmds003
                     END IF
                  ELSE
                     #檢查失敗時後續處理
                     LET g_xmdc6_d[l_ac].xmds002 = g_xmdc6_d_t.xmds002
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_currency_desc(g_xmdc6_d[l_ac].xmds002) RETURNING g_xmdc6_d[l_ac].xmds002_desc
            DISPLAY BY NAME g_xmdc6_d[l_ac].xmds002_desc
            LET g_xmdc6_d_t.xmds002 = g_xmdc6_d[l_ac].xmds002]]>
  </point>
  <point name="input.a.page6.xmds003" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdc6_d[l_ac].xmds003) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page6.xmds004" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.a.page6.xmds005" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdc6_d[l_ac].xmds005) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmdc6_d[l_ac].xmds005 != g_xmdc6_d_t.xmds005 OR g_xmdc6_d_t.xmds005 IS NULL )) THEN            
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmdc6_d[l_ac].xmds005                  
                  IF NOT cl_chk_exist("v_pmaa001_1") THEN
                     #檢查失敗時後續處理
                     LET g_xmdc6_d[l_ac].xmds005 = g_xmdc6_d_t.xmds005
                     CALL s_desc_get_trading_partner_abbr_desc(g_xmdc6_d[l_ac].xmds005) RETURNING g_xmdc6_d[l_ac].xmds005_desc
                     DISPLAY BY NAME g_xmdc6_d[l_ac].xmds005_desc                  
                     NEXT FIELD CURRENT
                  END IF            
               END IF 
            END IF   
            CALL s_desc_get_trading_partner_abbr_desc(g_xmdc6_d[l_ac].xmds005) RETURNING g_xmdc6_d[l_ac].xmds005_desc
            DISPLAY BY NAME g_xmdc6_d[l_ac].xmds005_desc]]>
  </point>
  <point name="input.a.page6.xmdsdocno" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:1)
            #確認資料無重複
            IF  g_xmda_m.xmdadocno IS NOT NULL AND g_xmdc6_d[g_detail_idx].xmdsdocno IS NOT NULL AND g_xmdc6_d[g_detail_idx].xmdsseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmda_m.xmdadocno != g_xmdadocno_t OR g_xmdc6_d[g_detail_idx].xmdsdocno != g_xmdc6_d_t.xmdsdocno OR g_xmdc6_d[g_detail_idx].xmdsseq != g_xmdc6_d_t.xmdsseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmds_t WHERE "||"xmdsent = '" ||g_enterprise|| "' AND "||"xmdsdocno = '"||g_xmda_m.xmdadocno ||"' AND "|| "xmdsseq = '"||g_xmdc6_d[g_detail_idx].xmdsdocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page6.xmdsseq" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:1)
            #確認資料無重複
            IF  g_xmda_m.xmdadocno IS NOT NULL AND g_xmdc6_d[g_detail_idx].xmdsdocno IS NOT NULL AND g_xmdc6_d[g_detail_idx].xmdsseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmda_m.xmdadocno != g_xmdadocno_t OR g_xmdc6_d[g_detail_idx].xmdsdocno != g_xmdc6_d_t.xmdsdocno OR g_xmdc6_d[g_detail_idx].xmdsseq != g_xmdc6_d_t.xmdsseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmds_t WHERE "||"xmdsent = '" ||g_enterprise|| "' AND "||"xmdsdocno = '"||g_xmda_m.xmdadocno ||"' AND "|| "xmdsseq = '"||g_xmdc6_d[g_detail_idx].xmdsdocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.xmda001" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.a.xmda002" order="" ver="8" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL s_desc_get_person_desc(g_xmda_m.xmda002) RETURNING g_xmda_m.xmda002_desc
            DISPLAY BY NAME g_xmda_m.xmda002_desc
            IF NOT cl_null(g_xmda_m.xmda002) THEN 
               IF g_xmda_m.xmda002 != g_xmda_m_o.xmda002 OR cl_null(g_xmda_m_o.xmda002) THEN
                  INITIALIZE g_chkparam.* TO NULL               
                  LET g_chkparam.arg1 = g_xmda_m.xmda002
                  IF cl_chk_exist("v_ooag001") THEN
                     SELECT ooag003 INTO g_xmda_m.xmda003 FROM ooag_t WHERE ooagent = g_enterprise AND ooag001 = g_xmda_m.xmda002
                     CALL s_desc_get_department_desc(g_xmda_m.xmda003) RETURNING g_xmda_m.xmda003_desc
                     DISPLAY BY NAME g_xmda_m.xmda003,g_xmda_m.xmda003_desc 
                  ELSE
                     LET g_xmda_m.xmda002 = g_xmda_m_o.xmda002
                     CALL s_desc_get_person_desc(g_xmda_m.xmda002) RETURNING g_xmda_m.xmda002_desc
                     DISPLAY BY NAME g_xmda_m.xmda002_desc
                     NEXT FIELD CURRENT
                  END IF
                END IF
            END IF
            LET g_xmda_m_o.xmda002 = g_xmda_m.xmda002]]>
  </point>
  <point name="input.a.xmda003" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL s_desc_get_department_desc(g_xmda_m.xmda003) RETURNING g_xmda_m.xmda003_desc
            DISPLAY BY NAME g_xmda_m.xmda003_desc 
            IF NOT cl_null(g_xmda_m.xmda003) THEN 
               IF NOT axmt500_xmda003_chk(g_xmda_m.xmda003) THEN
                  LET g_xmda_m.xmda003 = g_xmda_m_t.xmda003
                  CALL s_desc_get_department_desc(g_xmda_m.xmda003) RETURNING g_xmda_m.xmda003_desc
                  DISPLAY BY NAME g_xmda_m.xmda003_desc 
                  NEXT FIELD CURRENT
               END IF                
            END IF ]]>
  </point>
  <point name="input.a.xmda004" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmda_m.xmda004_desc = ''          
            DISPLAY BY NAME g_xmda_m.xmda004_desc
            IF NOT cl_null(g_xmda_m.xmda004) THEN 
               IF g_xmda_m.xmda004 != g_xmda_m_o.xmda004 OR cl_null(g_xmda_m_o.xmda004) THEN 
                  #150305--ADD-Polly
                  #資料來源為2預先訂單5銷退訂單，且資料來源欗位有值，則不可變更客戶
                  IF g_xmda_m.xmda004 != g_xmda_m_o.xmda004 THEN
                     IF g_xmda_m.xmda007 MATCHES "[23]" AND NOT cl_null(g_xmda_m.xmda008)THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code =  'axm-00568'
                        LET g_errparam.extend = ''
                        LET g_errparam.popup = TRUE
                        CALL cl_err()                  
                        LET g_xmda_m.xmda004 = g_xmda_m_o.xmda004
                        CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda004) RETURNING g_xmda_m.xmda004_desc
                        DISPLAY BY NAME g_xmda_m.xmda004,g_xmda_m.xmda004_desc 
                        NEXT FIELD CURRENT
                     END IF               
                  END IF                              
                  #150305--ADD-Polly
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmda_m.xmda004
                  LET g_chkparam.arg2 = g_site
                  IF NOT cl_chk_exist("v_pmaa001_3") THEN
                     LET g_xmda_m.xmda004 = g_xmda_m_o.xmda004
                     CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda004) RETURNING g_xmda_m.xmda004_desc
                     DISPLAY BY NAME g_xmda_m.xmda004,g_xmda_m.xmda004_desc 
                     NEXT FIELD CURRENT
                  END IF
                  #檢查單據別是否設置限用的資料
                  IF NOT s_control_check_customer(g_xmda_m.xmda004,'2',g_site,g_user,g_dept,g_xmda_m.xmdadocno) THEN
                     LET g_xmda_m.xmda004 = g_xmda_m_o.xmda004
                     CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda004) RETURNING g_xmda_m.xmda004_desc
                     DISPLAY BY NAME g_xmda_m.xmda004,g_xmda_m.xmda004_desc 
                     NEXT FIELD CURRENT
                  END IF                  
                  #如果客戶有修改，根據客戶帶值
                  CALL axmt500_xmda004_desc()                                              
                  #供應商的法人類型為'2:一次性交易'或是'4:內部員工'時需維護一次性交易對項基本資料並回傳對象識別碼給xmda028欄位
                  LET g_pmaa004 = ''
                  SELECT pmaa004 INTO g_pmaa004 FROM pmaa_t WHERE pmaaent = g_enterprise AND pmaa001 = g_xmda_m.xmda004
                  IF g_pmaa004 = '2' THEN   #一次性交易對象
                     CALL apmi004_01('1',g_xmda_m.xmda028,g_xmda_m.xmda004,g_xmda_m.xmdadocno) RETURNING g_xmda_m.xmda028
                  END IF
                  IF g_pmaa004 = '4' THEN   #內部員工
                     CALL apmi004_01('2',g_xmda_m.xmda028,g_xmda_m.xmda004,g_xmda_m.xmdadocno) RETURNING g_xmda_m.xmda028
                  END IF                  
                  #新增時將訂單客戶值預設給最終客戶
                  IF p_cmd = 'a' THEN
                     LET g_xmda_m.xmda034 = g_xmda_m.xmda004
                     DISPLAY BY NAME g_xmda_m.xmda034
                     CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda034) 
                       RETURNING g_xmda_m.xmda034_desc           
                     DISPLAY BY NAME g_xmda_m.xmda034_desc                  
                  END IF  
                  CALL axmt500_set_entry(p_cmd)
                  CALL axmt500_set_no_entry(p_cmd) 
               END IF      
            END IF  
            LET g_xmda_m_o.xmda004 = g_xmda_m.xmda004            
            IF g_pmaa004 MATCHES '[24]' THEN
               CALL axmt500_xmda028_ref(g_xmda_m.xmda028) RETURNING g_xmda_m.xmda004_desc
            ELSE
               CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda004) RETURNING g_xmda_m.xmda004_desc
            END IF    
            DISPLAY BY NAME g_xmda_m.xmda004,g_xmda_m.xmda004_desc            ]]>
  </point>
  <point name="input.a.xmda005" order="" ver="4" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #150407---earl---add---s
            IF NOT cl_null(g_xmda_m.xmda005) THEN
               IF g_xmda_m.xmda005 <> g_xmda_m_o.xmda005 OR cl_null(g_xmda_m_o.xmda005) THEN
                  IF NOT s_axmt500_xmda050_chk(g_xmda_m.xmda005,g_xmda_m.xmda050) THEN
                     LET g_xmda_m.xmda005 = g_xmda_m_o.xmda005
                     
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            LET g_xmda_m_o.xmda005 = g_xmda_m.xmda005
            #150407---earl---add---e]]>
  </point>
  <point name="input.a.xmda006" order="" ver="8" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmda_m.xmda006) THEN
               IF g_xmda_m.xmda006 <> g_xmda_m_o.xmda006 OR cl_null(g_xmda_m_o.xmda006) THEN
                  LET g_xmda_m.xmda050 = ''
                  LET g_xmda_m_o.xmda050 = ''
                  DISPLAY BY NAME g_xmda_m.xmda050
               END IF
            ELSE
               LET g_xmda_m.xmda050 = ''
               LET g_xmda_m_o.xmda050 = ''
               DISPLAY BY NAME g_xmda_m.xmda050
            END IF
            
            LET g_xmda_m_o.xmda006 = g_xmda_m.xmda006
            
            CALL axmt500_set_entry(p_cmd)
            CALL axmt500_set_no_entry(p_cmd)                                                                      ]]>
  </point>
  <point name="input.a.xmda007" order="" ver="8" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #來源EC選項，在進入欄位時不可見，因為來源EC不可手動打單據，在退出編輯狀態時，需要重新顯示出來
            CALL cl_set_combo_scc_part('xmda007','2065','1,2,5,6,7,9')                                         ]]>
  </point>
  <point name="input.a.xmda008" order="" ver="8" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmda_m.xmda008) THEN
               #150909 earl add s
               IF NOT s_aooi210_check_doc(g_site,'',g_xmda_m.xmda008,g_xmda_m.xmdadocno,'4','') THEN
                  LET g_xmda_m.xmda008 = g_xmda_m_t.xmda008
                  NEXT FIELD CURRENT
               END IF
               #150909 earl add e
               
               IF g_xmda_m.xmda007 MATCHES '[25]' THEN
                  IF NOT axmt500_xmda008_chk() THEN
                     LET g_xmda_m.xmda008 = g_xmda_m_t.xmda008
                     NEXT FIELD CURRENT                  
                  ELSE 
                     IF NOT axmt500_xmda008_desc(g_xmda_m.xmda007,g_xmda_m.xmda008) THEN
                        LET g_xmda_m.xmda008 = g_xmda_m_t.xmda008
                        NEXT FIELD CURRENT
                     END IF
                  END IF   
               END IF
            END IF  ]]>
  </point>
  <point name="input.a.xmda009" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmda_m.xmda009_desc = ''
            IF NOT cl_null(g_xmda_m.xmda009) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmda_m.xmda009 != g_xmda_m_o.xmda009 OR g_xmda_m_o.xmda009 IS NULL )) THEN 
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmda_m.xmda004
                  LET g_chkparam.arg2 = g_xmda_m.xmda009
                  IF cl_chk_exist("v_pmad002_2") THEN
                     #變更收款條件時，需詢問是否要重新取價，並重新計算含稅金額、未稅金額、稅額
                     IF g_xmdc_d.getLength() > 0 AND g_xmda_m.xmda009 != g_xmda_m_o.xmda009 THEN
                        IF cl_ask_confirm('axm-00230') THEN                              
                           CALL axmt500_change_xmdc015(p_cmd) RETURNING l_success
                        END IF                              
                     END IF                       
                  ELSE
                     LET g_xmda_m.xmda009 = g_xmda_m_o.xmda009                 
                     NEXT FIELD CURRENT
                  END IF  
               END IF                 
            END IF 
            CALL s_desc_get_ooib002_desc(g_xmda_m.xmda009) RETURNING g_xmda_m.xmda009_desc
            DISPLAY BY NAME g_xmda_m.xmda009_desc                     
            LET g_xmda_m_o.xmda009 = g_xmda_m.xmda009 ]]>
  </point>
  <point name="input.a.xmda010" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmda_m.xmda010_desc = ''
            IF NOT cl_null(g_xmda_m.xmda010) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmda_m.xmda010 != g_xmda_m_o.xmda010 OR g_xmda_m_o.xmda010 IS NULL )) THEN
                  IF s_azzi650_chk_exist('238',g_xmda_m.xmda010) THEN
                     #變更交易條件時，需詢問是否要重新取價，並重新計算含稅金額、未稅金額、稅額                
                     IF g_xmdc_d.getLength() > 0 AND g_xmda_m.xmda010 != g_xmda_m_o.xmda010 THEN
                        IF cl_ask_confirm('axm-00230') THEN                              
                           CALL axmt500_change_xmdc015(p_cmd) RETURNING l_success
                        END IF                              
                     END IF                                        
                  ELSE                     
                     LET g_xmda_m.xmda010 = g_xmda_m_o.xmda010               
                     NEXT FIELD CURRENT
                  END IF
               END IF                            
            END IF 
            CALL s_desc_get_acc_desc('238',g_xmda_m.xmda010) RETURNING g_xmda_m.xmda010_desc
            DISPLAY BY NAME g_xmda_m.xmda010_desc                     
            LET g_xmda_m_o.xmda010 = g_xmda_m.xmda010             ]]>
  </point>
  <point name="input.a.xmda011" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmda_m.xmda011_desc = ''
            IF NOT cl_null(g_xmda_m.xmda011) THEN 
               #此段落由子樣板a19產生
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmda_m.xmda011 <> g_xmda_m_o.xmda011 OR g_xmda_m_o.xmda011 IS NULL)) THEN              
                  CALL s_tax_chk(g_site,g_xmda_m.xmda011)
                    RETURNING l_success,g_xmda_m.xmda011_desc,g_xmda_m.xmda013,g_xmda_m.xmda012,l_oodb011                         
                  IF NOT l_success THEN
                     LET g_xmda_m.xmda011 = g_xmda_m_o.xmda011
                     LET g_xmda_m.xmda012 = g_xmda_m_o.xmda012
                     LET g_xmda_m.xmda013 = g_xmda_m_o.xmda013
                     NEXT FIELD CURRENT                     
                  ELSE                    
                     LET g_tax_app = l_oodb011                                       
                     #單身有資料時，才詢問是否重設单身税别及税率？            
                     IF g_xmdc_d.getLength() > 0 AND g_xmda_m.xmda011 <> g_xmda_m_o.xmda011 THEN
                        IF cl_ask_confirm('apm-00351') THEN
                           CALL axmt500_change_xmdc016(p_cmd)      #重設單身稅別
                        END IF                     
                     END IF
                  END IF
               END IF
               LET g_xmda_m_o.xmda011 = g_xmda_m.xmda011
               LET g_xmda_m_o.xmda012 = g_xmda_m.xmda012
               LET g_xmda_m_o.xmda013 = g_xmda_m.xmda013
            END IF              
            CALL s_desc_get_tax_desc1(g_site,g_xmda_m.xmda011) RETURNING g_xmda_m.xmda011_desc
            DISPLAY BY NAME g_xmda_m.xmda011,g_xmda_m.xmda012,g_xmda_m.xmda013,g_xmda_m.xmda011_desc ]]>
  </point>
  <point name="input.a.xmda012" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.a.xmda013" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.a.xmda015" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmda_m.xmda015_desc = ''
            IF NOT cl_null(g_xmda_m.xmda015) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmda_m.xmda015 != g_xmda_m_o.xmda015 OR g_xmda_m_o.xmda015 IS NULL )) THEN                              
                  IF axmt500_xmda015_chk(g_xmda_m.xmda015) THEN
                     #依內外銷決定匯率
                     IF NOT cl_null(g_xmda_m.xmda048) THEN
                        CALL s_axmt540_get_exchange(g_xmda_m.xmda048,g_xmda_m.xmda015,g_xmda_m.xmdadocdt) RETURNING g_xmda_m.xmda016   #modify--151118-00012#1 By shiun   新增傳入參數g_xmda_m.xmdadocdt
                        LET g_xmda_m_o.xmda016 = g_xmda_m.xmda016
                        DISPLAY BY NAME g_xmda_m.xmda016                     
                     END IF
                     #變更幣別時，需詢問是否要重新取價，並重新計算含稅金額、未稅金額、稅額
                     IF g_xmdc_d.getLength() > 0 AND g_xmda_m.xmda015 != g_xmda_m_o.xmda015 THEN
                        IF cl_ask_confirm('axm-00230') THEN                              
                           CALL axmt500_change_xmdc015(p_cmd) RETURNING l_success
                        END IF                              
                     END IF                                             
                  ELSE
                     #檢查失敗時後續處理
                     LET g_xmda_m.xmda015 = g_xmda_m_t.xmda015
                     NEXT FIELD CURRENT
                  END IF            
               END IF             
            END IF 
            CALL s_desc_get_currency_desc(g_xmda_m.xmda015) RETURNING g_xmda_m.xmda015_desc 
            DISPLAY BY NAME g_xmda_m.xmda015_desc
            LET g_xmda_m_o.xmda015 = g_xmda_m.xmda015            ]]>
  </point>
  <point name="input.a.xmda016" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmda_m.xmda015) AND NOT cl_null(g_xmda_m.xmda016) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmda_m.xmda016 != g_xmda_m_o.xmda016 OR g_xmda_m_o.xmda016 IS NULL )) THEN     

                  #變更幣別時，需詢問是否要重新取價，並重新計算含稅金額、未稅金額、稅額
                  IF g_xmdc_d.getLength() > 0 AND g_xmda_m.xmda016 != g_xmda_m_o.xmda016 THEN
                     IF cl_ask_confirm('axm-00230') THEN
                        CALL axmt500_change_xmdc015(p_cmd) RETURNING l_success
                     END IF                              
                  END IF                                             

               END IF
            END IF

            LET g_xmda_m_o.xmda016 = g_xmda_m.xmda016]]>
  </point>
  <point name="input.a.xmda017" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmda_m.xmda017_desc = ''    
            IF NOT cl_null(g_xmda_m.xmda017) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmda_m.xmda017 != g_xmda_m_o.xmda017 OR g_xmda_m_o.xmda017 IS NULL )) THEN                             
                  IF axmt500_xmda017_chk() THEN
                     #重新抓取價格是否允許修改,修改容差率,價格超過容差率的處理方式,允許單價為0
                     LET g_xmah003 = ''
                     LET g_xmah006 = ''
                     SELECT xmah003,xmah006
                       INTO g_xmah003,g_xmah006
                       FROM xmah_t       
                      WHERE xmahent = g_enterprise
                        AND xmah001 = g_xmda_m.xmda017 
                     #變更取價方式時，需詢問是否要重新取價，並重新計算含稅金額、未稅金額、稅額                
                     IF g_xmdc_d.getLength() > 0 AND g_xmda_m.xmda017 != g_xmda_m_o.xmda017 THEN
                        IF cl_ask_confirm('axm-00230') THEN
                           CALL axmt500_change_xmdc015(p_cmd) RETURNING l_success
                        END IF                              
                     END IF                        
                  ELSE
                     #檢查失敗時後續處理
                     LET g_xmda_m.xmda017 = g_xmda_m_o.xmda017
                     NEXT FIELD CURRENT                                 
                  END IF
               END IF             
            END IF 
            CALL axmt500_xmda017_ref(g_xmda_m.xmda017) RETURNING g_xmda_m.xmda017_desc
            DISPLAY BY NAME g_xmda_m.xmda017_desc               
            LET g_xmda_m_o.xmda017 = g_xmda_m.xmda017             ]]>
  </point>
  <point name="input.a.xmda018" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL axmt500_xmda018_ref(g_xmda_m.xmda018) RETURNING g_xmda_m.xmda018_desc
            DISPLAY BY NAME g_xmda_m.xmda018_desc
            IF NOT cl_null(g_xmda_m.xmda018) THEN 
               INITIALIZE g_chkparam.* TO NULL              
               LET g_chkparam.arg1 = g_xmda_m.xmda018
               IF NOT cl_chk_exist("v_ooid001_2") THEN
                  LET g_xmda_m.xmda018 = g_xmda_m_t.xmda018
                  CALL axmt500_xmda018_ref(g_xmda_m.xmda018) RETURNING g_xmda_m.xmda018_desc
                  DISPLAY BY NAME g_xmda_m.xmda018_desc                  
                  NEXT FIELD CURRENT
               END IF 
            END IF ]]>
  </point>
  <point name="input.a.xmda019" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.a.xmda020" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmda_m.xmda020_desc = ''
            IF NOT cl_null(g_xmda_m.xmda020) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmda_m.xmda020 != g_xmda_m_o.xmda020 OR g_xmda_m_o.xmda020 IS NULL )) THEN
                  IF NOT s_azzi650_chk_exist('263',g_xmda_m.xmda020) THEN
                     LET g_xmda_m.xmda020 = g_xmda_m_o.xmda020
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_acc_desc('263',g_xmda_m.xmda020) RETURNING g_xmda_m.xmda020_desc
            DISPLAY BY NAME g_xmda_m.xmda020_desc
            LET g_xmda_m_t.xmda020 = g_xmda_m.xmda020 
]]>
  </point>
  <point name="input.a.xmda021" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmda_m.xmda021_desc = '' 
            DISPLAY BY NAME g_xmda_m.xmda021_desc
            IF NOT cl_null(g_xmda_m.xmda021) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmda_m.xmda021 != g_xmda_m_t.xmda021 OR g_xmda_m_t.xmda021 IS NULL )) THEN
                  IF g_xmda_m.xmda004 <> g_xmda_m.xmda021 THEN 
                     IF s_apmm100_chk_pmac002('2','1',g_xmda_m.xmda004,g_xmda_m.xmda021 ) THEN
                        #依收款客戶抓取預設帳款地址
                        CALL axmt500_get_xmdc026() RETURNING g_xmda_m.xmda026
                        IF NOT cl_null(g_xmda_m.xmda021) AND NOT cl_null(g_xmda_m.xmda026) THEN 
                           CALL axmt500_xmda025_ref(g_xmda_m.xmda021,g_xmda_m.xmda026) RETURNING g_xmda_m.xmda026_desc,g_xmda_m.oofb0172
                           DISPLAY BY NAME g_xmda_m.xmda026_desc,g_xmda_m.oofb0172
                        END IF 
                     ELSE
                        #檢查失敗時後續處理
                        LET g_xmda_m.xmda021 = g_xmda_m_t.xmda021
                        CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda021) RETURNING g_xmda_m.xmda021_desc 
                        DISPLAY BY NAME g_xmda_m.xmda021_desc                  
                        NEXT FIELD CURRENT
                     END IF           
                  END IF 
               END IF 
            END IF
            CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda021) RETURNING g_xmda_m.xmda021_desc 
            DISPLAY BY NAME g_xmda_m.xmda021_desc               ]]>
  </point>
  <point name="input.a.xmda022" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmda_m.xmda022_desc = '' 
            IF NOT cl_null(g_xmda_m.xmda022) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmda_m.xmda022 != g_xmda_m_t.xmda022 OR g_xmda_m_t.xmda022 IS NULL )) THEN
                  IF g_xmda_m.xmda004 <> g_xmda_m.xmda022 THEN 
                     IF s_apmm100_chk_pmac002('2','2',g_xmda_m.xmda004,g_xmda_m.xmda022 ) THEN
                        #依收貨客戶抓取預設收貨
                        CALL axmt500_get_xmdc025() RETURNING g_xmda_m.xmda025
                        IF NOT cl_null(g_xmda_m.xmda022) AND NOT cl_null(g_xmda_m.xmda025) THEN
                           CALL axmt500_xmda025_ref(g_xmda_m.xmda022,g_xmda_m.xmda025) RETURNING g_xmda_m.xmda025_desc,g_xmda_m.oofb0171
                           DISPLAY BY NAME g_xmda_m.xmda025_desc,g_xmda_m.oofb0171
                        END IF                     
                     ELSE
                        LET g_xmda_m.xmda022 = g_xmda_m_t.xmda022                  
                        CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda022) RETURNING g_xmda_m.xmda022_desc                   
                        DISPLAY BY NAME g_xmda_m.xmda022_desc                 
                        NEXT FIELD CURRENT
                     END IF           
                  END IF
               END IF 
            END IF 
            CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda022) RETURNING g_xmda_m.xmda022_desc                   
            DISPLAY BY NAME g_xmda_m.xmda022_desc ]]>
  </point>
  <point name="input.a.xmda023" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL s_desc_get_acc_desc('275',g_xmda_m.xmda023) RETURNING g_xmda_m.xmda023_desc
            DISPLAY BY NAME g_xmda_m.xmda023_desc
            IF NOT cl_null(g_xmda_m.xmda023) THEN
               IF NOT s_azzi650_chk_exist('275',g_xmda_m.xmda023) THEN
                  LET g_xmda_m.xmda023 = g_xmda_m_t.xmda023
                  CALL s_desc_get_acc_desc('275',g_xmda_m.xmda023) RETURNING g_xmda_m.xmda023_desc
                  DISPLAY BY NAME g_xmda_m.xmda023_desc
                  NEXT FIELD CURRENT
               END IF                   
            END IF ]]>
  </point>
  <point name="input.a.xmda024" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL axmt500_xmda024_ref(g_xmda_m.xmda024) RETURNING g_xmda_m.xmda024_desc
            DISPLAY BY NAME g_xmda_m.xmda024_desc
            IF NOT cl_null(g_xmda_m.xmda024) THEN
               IF NOT s_azzi650_chk_exist('295',g_xmda_m.xmda024) THEN
                  LET g_xmda_m.xmda024 = g_xmda_m_t.xmda024
                  CALL axmt500_xmda024_ref(g_xmda_m.xmda024) RETURNING g_xmda_m.xmda024_desc
                  DISPLAY BY NAME g_xmda_m.xmda024_desc
                  NEXT FIELD CURRENT
               END IF 
            END IF            ]]>
  </point>
  <point name="input.a.xmda025" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmda_m.xmda025_desc = ''
            LET g_xmda_m.oofb0171 = ''
            IF NOT cl_null(g_xmda_m.xmda025) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmda_m.xmda025 != g_xmda_m_t.xmda025 OR g_xmda_m_t.xmda025 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL               
                  LET g_chkparam.arg1 = l_pmaa027
                  LET g_chkparam.arg2 = g_xmda_m.xmda025                  
                  IF NOT cl_chk_exist("v_oofb019") THEN
                     #檢查失敗時後續處理
                     LET g_xmda_m.xmda025 = g_xmda_m_t.xmda025
                     CALL axmt500_xmda025_ref(g_xmda_m.xmda022,g_xmda_m.xmda025) RETURNING g_xmda_m.xmda025_desc,g_xmda_m.oofb0171
                     DISPLAY BY NAME g_xmda_m.xmda025_desc,g_xmda_m.oofb0171
                     NEXT FIELD CURRENT
                  END IF
               END IF
               CALL axmt500_xmda025_ref(g_xmda_m.xmda022,g_xmda_m.xmda025) RETURNING g_xmda_m.xmda025_desc,g_xmda_m.oofb0171
               DISPLAY BY NAME g_xmda_m.xmda025_desc,g_xmda_m.oofb0171              
            END IF]]>
  </point>
  <point name="input.a.xmda026" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmda_m.xmda026_desc = ''
            LET g_xmda_m.oofb0172 = ''
            IF NOT cl_null(g_xmda_m.xmda026) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmda_m.xmda026 != g_xmda_m_t.xmda026 OR g_xmda_m_t.xmda026 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL               
			         LET g_chkparam.arg1 = l_pmaa027
                  LET g_chkparam.arg2 = g_xmda_m.xmda026                 
                  IF NOT cl_chk_exist("v_oofb019") THEN
                     LET g_xmda_m.xmda026 = g_xmda_m_t.xmda026
                     CALL axmt500_xmda025_ref(g_xmda_m.xmda021,g_xmda_m.xmda026) RETURNING g_xmda_m.xmda026_desc,g_xmda_m.oofb0172
                     DISPLAY BY NAME g_xmda_m.xmda026_desc,g_xmda_m.oofb0172
                     NEXT FIELD CURRENT
                  END IF
               END IF   
               CALL axmt500_xmda025_ref(g_xmda_m.xmda021,g_xmda_m.xmda026) RETURNING g_xmda_m.xmda026_desc,g_xmda_m.oofb0172
               DISPLAY BY NAME g_xmda_m.xmda026_desc,g_xmda_m.oofb0172               
            END IF]]>
  </point>
  <point name="input.a.xmda027" order="" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmda_m.xmda027_desc = ''
            IF NOT cl_null(g_xmda_m.xmda027) THEN 
               INITIALIZE g_chkparam.* TO NULL
#151014-00008 By whitney modify start
#               LET g_chkparam.arg1 = g_xmda_m.xmda004
               LET g_chkparam.arg1 = g_xmda_m.xmda022
#151014-00008 By whitney modify end
               LET g_chkparam.arg2 = g_xmda_m.xmda027
               IF NOT cl_chk_exist("v_pmaj002") THEN
                  LET g_xmda_m.xmda027 = g_xmda_m_t.xmda027
                  CALL axmt500_xmda027_ref()
                  NEXT FIELD CURRENT
               END IF
            END IF
            CALL axmt500_xmda027_ref()]]>
  </point>
  <point name="input.a.xmda028" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.a.xmda030" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.a.xmda031" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.a.xmda032" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[           
            CALL s_desc_get_acc_desc('297',g_xmda_m.xmda032) RETURNING g_xmda_m.xmda032_desc 
            DISPLAY BY NAME g_xmda_m.xmda032_desc

            IF NOT cl_null(g_xmda_m.xmda032) THEN
               IF NOT s_azzi650_chk_exist('298',g_xmda_m.xmda032) THEN
                  LET g_xmda_m.xmda032 = g_xmda_m_t.xmda032
                  CALL s_desc_get_acc_desc('297',g_xmda_m.xmda032) RETURNING g_xmda_m.xmda032_desc 
                  DISPLAY BY NAME g_xmda_m.xmda032_desc
                  NEXT FIELD CURRENT               
               END IF
            END IF
]]>
  </point>
  <point name="input.a.xmda033" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.a.xmda034" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda034) RETURNING g_xmda_m.xmda034_desc             
            DISPLAY BY NAME g_xmda_m.xmda034_desc
            IF NOT cl_null(g_xmda_m.xmda034)  AND g_xmda_m.xmda004 <> g_xmda_m.xmda034 THEN 
               INITIALIZE g_chkparam.* TO NULL               
               LET g_chkparam.arg1 = g_xmda_m.xmda034                   
               LET g_chkparam.arg2 = g_site 
               IF NOT cl_chk_exist("v_pmaa001_3") THEN
                  LET g_xmda_m.xmda034 = g_xmda_m_t.xmda034
                  CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda034) RETURNING g_xmda_m.xmda034_desc  
                  DISPLAY BY NAME g_xmda_m.xmda034_desc
                  NEXT FIELD CURRENT
               END IF          
            END IF 
]]>
  </point>
  <point name="input.a.xmda035" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL axmt500_xmda035_ref(g_xmda_m.xmda035) RETURNING g_xmda_m.xmda035_desc
            DISPLAY BY NAME g_xmda_m.xmda035_desc  
            IF NOT cl_null(g_xmda_m.xmda035) THEN
               IF NOT axmt500_xmda035_chk() THEN                 
                  LET g_xmda_m.xmda035 = g_xmda_m_t.xmda033
                  CALL axmt500_xmda035_ref(g_xmda_m.xmda035) RETURNING g_xmda_m.xmda035_desc
                  DISPLAY BY NAME g_xmda_m.xmda035_desc 
                  NEXT FIELD CURRENT
               END IF               
            END IF]]>
  </point>
  <point name="input.a.xmda036" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda036) RETURNING g_xmda_m.xmda036_desc              
            DISPLAY BY NAME g_xmda_m.xmda036_desc
            IF NOT cl_null(g_xmda_m.xmda036) THEN 
               INITIALIZE g_chkparam.* TO NULL             
               LET g_chkparam.arg1 = g_xmda_m.xmda036                
               IF NOT cl_chk_exist("v_pmaa001_1") THEN
                  LET g_xmda_m.xmda036 = g_xmda_m_t.xmda036
                  CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda036) RETURNING g_xmda_m.xmda036_desc 
                  DISPLAY BY NAME g_xmda_m.xmda036_desc
                  NEXT FIELD CURRENT
               END IF            
           END IF 
]]>
  </point>
  <point name="input.a.xmda037" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmda_m.xmda037_desc = ''
            IF NOT cl_null(g_xmda_m.xmda037) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmda_m.xmda037 != g_xmda_m_o.xmda037 OR g_xmda_m_o.xmda037 IS NULL )) THEN
                  CALL s_apmi011_check_location(g_xmda_m.xmda020,g_xmda_m.xmda037) RETURNING l_success
                  IF NOT l_success THEN
                     LET g_xmda_m.xmda037 = g_xmda_m_o.xmda037
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 
            CALL s_apmi011_location_ref(g_xmda_m.xmda020,g_xmda_m.xmda037) RETURNING g_xmda_m.xmda037_desc
            DISPLAY BY NAME g_xmda_m.xmda037_desc
            LET g_xmda_m_o.xmda037 = g_xmda_m.xmda037 ]]>
  </point>
  <point name="input.a.xmda038" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmda_m.xmda038) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmda_m.xmda038 != g_xmda_m_o.xmda038 OR g_xmda_m_o.xmda038 IS NULL )) THEN
                  CALL s_apmi011_check_location(g_xmda_m.xmda020,g_xmda_m.xmda038) RETURNING l_success
                  IF NOT l_success THEN
                     LET g_xmda_m.xmda038 = g_xmda_m_o.xmda038
                     NEXT FIELD CURRENT
                  END IF
               END IF 
            END IF
            CALL s_apmi011_location_ref(g_xmda_m.xmda020,g_xmda_m.xmda038) RETURNING g_xmda_m.xmda038_desc
            DISPLAY BY NAME g_xmda_m.xmda038_desc
            LET g_xmda_m_o.xmda038 = g_xmda_m.xmda038  ]]>
  </point>
  <point name="input.a.xmda039" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.a.xmda043" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.a.xmda044" order="" ver="4" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmda_m.xmda044_desc = ''
            IF NOT cl_null(g_xmda_m.xmda044) THEN
               INITIALIZE g_chkparam.* TO NULL               
               LET g_chkparam.arg1 = g_xmda_m.xmda004                   
               LET g_chkparam.arg2 = g_xmda_m.xmda044
               IF NOT cl_chk_exist("v_xmao002") THEN
                  LET g_xmda_m.xmda044 = g_xmda_m_t.xmda044
                  CALL axmt500_xmda044_ref(g_xmda_m.xmda044) RETURNING g_xmda_m.xmda044_desc
                  DISPLAY BY NAME g_xmda_m.xmda044_desc
                  NEXT FIELD CURRENT
               END IF
            END IF                                                                        ]]>
  </point>
  <point name="input.a.xmda048" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #修改時需重新依據據點參數內外銷匯率來源重新取匯率更新回xmda016   ]]>
  </point>
  <point name="input.a.xmda050" order="" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #150407---earl---mod---s
            IF NOT cl_null(g_xmda_m.xmda050) THEN
               IF g_xmda_m.xmda050 <> g_xmda_m_o.xmda050 OR cl_null(g_xmda_m_o.xmda050) THEN
                  #此段落由子樣板a19產生
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmda_m.xmda050
                  LET g_chkparam.arg2 = '1'
                  LET g_chkparam.arg3 = '0' 
                  LET g_chkparam.arg4 = g_site
                  
                  #替換錯誤訊息
                  LET l_gzcbl004 = ''
                  SELECT gzcbl004 INTO l_gzcbl004
                    FROM gzcbl_t
                   WHERE gzcbl001 = '2501'
                     AND gzcbl002 = '1'
                     AND gzcbl003 = g_dlang
                  LET l_gzcbl004 = g_chkparam.arg2,".",l_gzcbl004
                  LET g_chkparam.err_str[1] = "aic-00084|",l_gzcbl004
                  LET g_chkparam.err_str[2] = "aic-00085|",g_chkparam.arg3               
                   
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_icaa001_1") THEN
                     #檢查成功時後續處理
                     #LET  = g_chkparam.return1
                     #DISPLAY BY NAME 
                  ELSE
                     #檢查失敗時後續處理
                     LET g_xmda_m.xmda050 = g_xmda_m_o.xmda050
                     
                     NEXT FIELD CURRENT
                  END IF

                  #多角流程代碼與訂單性質檢查
                  IF NOT s_axmt500_xmda050_chk(g_xmda_m.xmda005,g_xmda_m.xmda050) THEN
                     LET g_xmda_m.xmda050 = g_xmda_m_o.xmda050
                     
                     NEXT FIELD CURRENT
                  END IF
                  
                  #151229 earl add s
                  #多角製造批序號檢查
                  IF NOT s_axmt500_inao_chk(g_xmda_m.xmdadocno,g_xmda_m.xmda050,'') THEN
                     LET g_xmda_m.xmda050 = g_xmda_m_o.xmda050
                     
                     NEXT FIELD CURRENT
                  END IF
                  #151229 earl add e
                  
               END IF
            END IF 
            
            LET g_xmda_m_o.xmda050 = g_xmda_m.xmda050
            #150407---earl---mod---e]]>
  </point>
  <point name="input.a.xmda203" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmda_m.xmda203_desc = ''
            IF NOT cl_null(g_xmda_m.xmda203) THEN 
               IF g_xmda_m.xmda203 <> g_xmda_m_o.xmda203 OR cl_null(g_xmda_m_o.xmda203) THEN
                  IF g_xmda_m.xmda203 <> g_xmda_m.xmda004 THEN      #和訂單客戶不同時，才做檢查
                     IF NOT s_apmm100_chk_pmac002('2','3',g_xmda_m.xmda004,g_xmda_m_o.xmda203) THEN
                        LET g_xmda_m.xmda203 = g_xmda_m_o.xmda203
                        CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda203) RETURNING g_xmda_m.xmda203_desc
                        DISPLAY BY NAME g_xmda_m.xmda203_desc
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF                  
            END IF 
            CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda203) RETURNING g_xmda_m.xmda203_desc
            DISPLAY BY NAME g_xmda_m.xmda203_desc]]>
  </point>
  <point name="input.a.xmdadocdt" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.a.xmdadocno" order="" ver="8" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL axmt500_xmdadocno_ref()           
            IF NOT cl_null(g_xmda_m.xmdadocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xmda_m.xmdadocno != g_xmdadocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmda_t WHERE "||"xmdaent = '" ||g_enterprise|| "' AND "||"xmdadocno = '"||g_xmda_m.xmdadocno ||"'",'std-00004',0) THEN 
                     LET g_xmda_m.xmdadocno = g_xmdadocno_t
                     CALL axmt500_xmdadocno_ref()
                     NEXT FIELD CURRENT
                  END IF
                  #檢核輸入的單據別是否可以被key人員對應的控制組使用,'2' 為銷售控制組類型
                  CALL s_control_chk_doc('1',g_xmda_m.xmdadocno,'2',g_user,g_dept,'','') RETURNING l_success,l_flag
                  IF l_success THEN
                     IF NOT l_flag THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'axm-00015'
                        LET g_errparam.extend = g_xmda_m.xmdadocno
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                         LET g_xmda_m.xmdadocno = g_xmdadocno_t
                        CALL axmt500_xmdadocno_ref()
                        NEXT FIELD CURRENT
                     END IF
                  ELSE
                     LET g_xmda_m.xmdadocno = g_xmdadocno_t
                     CALL axmt500_xmdadocno_ref()
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT s_aooi200_chk_slip(g_site,'',g_xmda_m.xmdadocno,g_prog) THEN
                     LET g_xmda_m.xmdadocno = g_xmdadocno_t
                     CALL axmt500_xmdadocno_ref()
                     NEXT FIELD CURRENT   
                  END IF
                  
                  #150909 earl add s
                  #檢核前後置單別的合理性
                  IF NOT cl_null(g_xmda_m.xmda008) THEN
                     IF NOT s_aooi210_check_doc(g_site,'',g_xmda_m.xmda008,g_xmda_m.xmdadocno,'3','') THEN
                        LET g_xmda_m.xmdadocno = g_xmdadocno_t
                        CALL axmt500_xmdadocno_ref()
                        NEXT FIELD CURRENT
                     END IF
                  END IF
                  #150909 earl add e
                  
                  CALL axmt500_docno_xmda_default()   #取得單據別aooi200欄位預設值                            
                  CALL axmt500_set_entry(p_cmd)
                  CALL axmt500_set_no_entry(p_cmd) 
               END IF    
            ELSE
               NEXT FIELD CURRENT                 
            END IF           
            NEXT FIELD xmdadocdt            ]]>
  </point>
  <point name="input.a.xmdasite" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.a.xmdastus" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.after_define_sql" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="input.after_define_sql2" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="input.after_define_sql3" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="input.after_input" order="" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #來源EC選項，在進入欄位時不可見，因為來源EC不可手動打單據，在退出編輯狀態時，需要重新顯示出來
   CALL cl_set_combo_scc_part('xmda007','2065','1,2,5,6,7,9')
            
   #IF NOT INT_FLAG AND g_xmdc_d.getLength() > 0 THEN   #151125-00013#1 mark
   #重新計算整單的未稅、含稅總金額
   IF NOT cl_null(g_xmda_m.xmdadocno) THEN
      CALL s_transaction_begin()
      CALL s_tax_recount(g_xmda_m.xmdadocno)
        RETURNING g_xmda_m.xmda041,g_xmda_m.xmda043,g_xmda_m.xmda042,l_xrcd113,l_xrcd114,l_xrcd115
      IF cl_null(g_xmda_m.xmda041) THEN
         LET g_xmda_m.xmda041 = 0
      END IF
      IF cl_null(g_xmda_m.xmda042) THEN
         LET g_xmda_m.xmda042 = 0
      END IF
      IF cl_null(g_xmda_m.xmda043) THEN 
         LET g_xmda_m.xmda043 = 0
      END IF        
      UPDATE xmda_t SET xmda041 = g_xmda_m.xmda041,
                        xmda042 = g_xmda_m.xmda042,
                        xmda043 = g_xmda_m.xmda043
        WHERE xmdaent = g_enterprise AND xmdadocno = g_xmdadocno_t  
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xmda_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()
         CALL s_transaction_end('N','0')
      ELSE
         #150116 --polly---add(S)
         #檢查xrcd是否有調尾差、需更新回單身
         IF NOT s_axmt500_adjust_tax(g_xmdadocno_t) THEN
            CALL s_transaction_end('N','0')
         ELSE
            CALL s_transaction_end('Y','0')            
         END IF
         #150116 --polly---add(E)
      END IF               
      DISPLAY BY NAME g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmda043     
   END IF 
   #END IF                        #151125-00013#1 mark
   CALL axmt500_b_fill()    ]]>
  </point>
  <point name="input.after_set_entry" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="input.b.page1.imaal004" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page1.xmdc001" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page1.xmdc002" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF cl_get_para(g_enterprise,g_site,'S-BAS-0036') = 'Y'  AND NOT cl_null(g_imaa005) THEN
               IF l_cmd = 'a' AND g_xmda_m.xmda007 = '1' AND cl_null(g_xmdc_d[l_ac].xmdc002) THEN
                  CALL g_inam.clear()
                  CALL s_feature_multi(g_xmdc_d[l_ac].xmdc001,'','',g_site,g_xmda_m.xmdadocno) RETURNING l_success,g_inam
                  LET g_xmdc_d[l_ac].xmdc002 = g_inam[1].inam002
                  LET g_xmdc_d[l_ac].xmdc007 = g_inam[1].inam004 
                  DISPLAY BY NAME g_xmdc_d[l_ac].xmdc002
                  IF NOT cl_null(g_xmdc_d[l_ac].xmdc006) THEN
                     #銷售數量取位 
                     CALL s_aooi250_take_decimals(g_xmdc_d[l_ac].xmdc006,g_xmdc_d[l_ac].xmdc007)
                       RETURNING l_success,g_xmdc_d[l_ac].xmdc007                    
                     DISPLAY BY NAME g_xmdc_d[l_ac].xmdc007
                     #若料號有設置使用參考單位時，且銷售單位與參考單位有設置換算率時，則應自動推算參考數量
                     IF NOT cl_null(g_xmdc_d[l_ac].xmdc006) AND NOT cl_null(g_xmdc_d[l_ac].xmdc008) THEN
                        CALL s_aooi250_convert_qty(g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc006,g_xmdc_d[l_ac].xmdc008,g_xmdc_d[l_ac].xmdc007)
                          RETURNING l_success,g_xmdc_d[l_ac].xmdc009
                        #參考數量取位
                        CALL s_aooi250_take_decimals(g_xmdc_d[l_ac].xmdc008,g_xmdc_d[l_ac].xmdc009)
                          RETURNING l_success,g_xmdc_d[l_ac].xmdc009 
                        DISPLAY BY NAME g_xmdc_d[l_ac].xmdc009                          
                     END IF
                     #若料號有使用銷售計價單位時，則輸入[C:出貨數量]時則應自動推算計價數量
                     IF NOT cl_null(g_xmdc_d[l_ac].xmdc006) AND NOT cl_null(g_xmdc_d[l_ac].xmdc010) THEN
                        CALL s_aooi250_convert_qty(g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc006,g_xmdc_d[l_ac].xmdc010,g_xmdc_d[l_ac].xmdc007)
                          RETURNING l_success,g_xmdc_d[l_ac].xmdc011
                        #對計價數量進行取位
                        CALL s_aooi250_take_decimals(g_xmdc_d[l_ac].xmdc010,g_xmdc_d[l_ac].xmdc011)
                          RETURNING l_success,g_xmdc_d[l_ac].xmdc011
                        DISPLAY BY NAME g_xmdc_d[l_ac].xmdc011  
                     END IF     
                  END IF
               END IF
            END IF         ]]>
  </point>
  <point name="input.b.page1.xmdc004" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page1.xmdc005" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page1.xmdc006" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page1.xmdc007" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[        ]]>
  </point>
  <point name="input.b.page1.xmdc008" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page1.xmdc009" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page1.xmdc010" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page1.xmdc011" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page1.xmdc012" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page1.xmdc013" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page1.xmdc015" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page1.xmdc016" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page1.xmdc019" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page1.xmdc020" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page1.xmdc021" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page1.xmdc022" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page1.xmdc023" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page1.xmdc024" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page1.xmdc027" order="" ver="8" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL axmt500_set_entry_b(l_cmd)                                                           ]]>
  </point>
  <point name="input.b.page1.xmdc045" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page1.xmdc049" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page1.xmdc050" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page1.xmdc052" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page1.xmdcorga" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page1.xmdcseq" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page1.xmdcunit" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL axmt500_set_entry_b(p_cmd) 
            CALL axmt500_set_no_entry_b(p_cmd)                                                ]]>
  </point>
  <point name="input.b.page2.xmdc003" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page2.xmdc025" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET l_pmaa027 = ''
            CALL s_axmt500_get_pmaa027(g_xmda_m.xmda022) RETURNING l_pmaa027                                                                       ]]>
  </point>
  <point name="input.b.page2.xmdc026" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET l_pmaa027 = ''
            CALL s_axmt500_get_pmaa027(g_xmda_m.xmda021) RETURNING l_pmaa027                                                                          ]]>
  </point>
  <point name="input.b.page2.xmdc0272" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page2.xmdc028" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page2.xmdc029" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page2.xmdc030" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page2.xmdc031" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page2.xmdc032" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page2.xmdc033" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page2.xmdc034" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page2.xmdc036" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page2.xmdc037" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page2.xmdc038" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page2.xmdc039" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page3.xmdc012" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.page3.xmdc013" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmda001" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmda002" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmda003" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmda004" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmda005" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmda006" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmda007" order="" ver="8" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #來源EC選項，在進入欄位時不可見，因為來源EC不可手動打單據
            CALL cl_set_combo_scc_part('xmda007','2065','1,2,5,6,7')                                                             ]]>
  </point>
  <point name="input.b.xmda008" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmda009" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmda010" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmda011" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmda012" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmda013" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmda015" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmda016" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmda017" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmda018" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmda019" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmda020" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmda021" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmda022" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmda023" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmda024" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmda025" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET l_pmaa027 = ''
            CALL s_axmt500_get_pmaa027(g_xmda_m.xmda022) RETURNING l_pmaa027                                                           ]]>
  </point>
  <point name="input.b.xmda026" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET l_pmaa027 = ''
            CALL s_axmt500_get_pmaa027(g_xmda_m.xmda021) RETURNING l_pmaa027                                                             ]]>
  </point>
  <point name="input.b.xmda027" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmda028" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmda030" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmda031" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmda032" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmda033" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmda034" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmda035" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmda036" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmda037" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF cl_null(g_xmda_m.xmda020) THEN  #運輸類型 
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00085'
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
               #請先輸入運輸方式   
               NEXT FIELD xmda020
            END IF               ]]>
  </point>
  <point name="input.b.xmda038" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF cl_null(g_xmda_m.xmda020) THEN  #運輸類型 
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00085'
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
               #請先輸入運輸方式   
               NEXT FIELD xmda020
            END IF                                                                         ]]>
  </point>
  <point name="input.b.xmda039" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmda043" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmda044" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmdadocdt" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmdadocno" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmdasite" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.b.xmdastus" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.before_dialog" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="input.before_input" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_errshow = 1
   LET g_flag = FALSE 
   CALL axmt500_set_entry(p_cmd)
   CALL axmt500_set_no_entry(p_cmd)
   LET l_ooef004 = ''
   SELECT ooef004 INTO l_ooef004 FROM ooef_t 
    WHERE ooefent = g_enterprise 
      AND ooef001 = g_site
   DISPLAY BY NAME g_xmda_m.xmda002_desc,g_xmda_m.xmda003_desc   
   
   #add by lixiang 150821-00016#1--start---
   #來源類型是EC時，單身不可刪除
   IF g_xmda_m.xmda007 = '9' THEN
      #LET l_allow_insert = FALSE  #modify by lixiang 2015/10/21 #訂單單身可新增，但維持不可刪除
      LET l_allow_delete = FALSE
   END IF
   #add by lixiang 150821-00016#1--end---]]>
  </point>
  <point name="input.body.a_delete" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  #刪除訂單交期明細檔
                  DELETE FROM xmdd_t 
                   WHERE xmddent = g_enterprise 
                     AND xmdddocno = g_xmda_m.xmdadocno 
                     AND xmddseq = g_xmdc_d_t.xmdcseq
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "DELETE xmdd_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     CANCEL DELETE
                  END IF
                  #刪除訂單多交期匯總檔
                  LET l_cnt = 0
                  SELECT COUNT(*) INTO l_cnt
                    FROM xmdf_t
                   WHERE xmdfent = g_enterprise 
                     AND xmdfdocno = g_xmda_m.xmdadocno 
                     AND xmdfseq = g_xmdc_d_t.xmdcseq
                  IF l_cnt > 0 THEN                      
                     DELETE FROM xmdf_t 
                      WHERE xmdfent = g_enterprise 
                        AND xmdfdocno = g_xmda_m.xmdadocno 
                        AND xmdfseq = g_xmdc_d_t.xmdcseq
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = "DELETE xmdf_t"
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        CALL s_transaction_end('N','0')
                        CANCEL DELETE
                     END IF           
                  END IF 
                  #刪除訂單附屬零件明細檔
                  LET l_cnt = 0
                  SELECT COUNT(*) INTO l_cnt
                    FROM xmdq_t
                   WHERE xmdqent =  g_enterprise 
                     AND xmdqdocno = g_xmda_m.xmdadocno 
                     AND xmdqseq = g_xmdc_d_t.xmdcseq  
                  IF l_cnt > 0 THEN                      
                     DELETE FROM xmdq_t
                      WHERE xmdqent =  g_enterprise 
                        AND xmdqdocno = g_xmda_m.xmdadocno 
                        AND xmdqseq = g_xmdc_d_t.xmdcseq  
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = "DELETE xmdq_t"
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        CALL s_transaction_end('N','0')
                        CANCEL DELETE
                     END IF           
                  END IF 
                  #刪除訂單備置明細檔
                  LET l_cnt = 0
                  SELECT COUNT(*) INTO l_cnt
                    FROM xmdr_t
                   WHERE xmdrent = g_enterprise
                     AND xmdrdocno = g_xmda_m.xmdadocno
                     AND xmdrseq = g_xmdc_d_t.xmdcseq
                  IF l_cnt > 0 THEN                  
                     DELETE FROM xmdr_t
                      WHERE xmdrent = g_enterprise
                        AND xmdrdocno = g_xmda_m.xmdadocno
                        AND xmdrseq = g_xmdc_d_t.xmdcseq   
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = "DELETE xmdr_t"
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        CALL s_transaction_end('N','0')
                        CANCEL DELETE
                     END IF                         
                  END IF                  
                  #刪除交易稅明細檔
                  DELETE FROM xrcd_t
                   WHERE xrcdent = g_enterprise
                     AND xrcddocno = g_xmda_m.xmdadocno
                     AND xrcdseq = g_xmdc_d_t.xmdcseq
                     AND xrcdseq2 = 0                     
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend = "DELETE xrcd_t"
                     LET g_errparam.code   = SQLCA.sqlcode
                     LET g_errparam.popup  = TRUE
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     CANCEL DELETE
                  END IF                  
                                    ]]>
  </point>
  <point name="input.body.a_insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                          ]]>
  </point>
  <point name="input.body.a_insert2" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #維護其它單身資料  
               #CALL axmt500_04(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq)
     
               #判斷此料件是否有使用附屬零件/可選件，才可開啟訂單附屬零件明細作業
               IF axmt500_get_bmab(g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdcunit) THEN
                  IF NOT axmt500_05(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "xmdq_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()       
                     CALL s_transaction_end('N','0')                    
                     CANCEL INSERT   
                  END IF                 
               END IF               
               #產生交期明細
               IF NOT s_axmt500_gen_xmdd(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "xmdd_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()       
                  CALL s_transaction_end('N','0')                    
                  CANCEL INSERT   
               END IF                
               #產生產品特徵開窗的值到資料庫
               IF g_xmda_m.xmda007 = '1' THEN
                  IF g_inam.getLength() > 1 THEN
                     IF NOT axmt500_feature() THEN
                        CALL s_transaction_end('N','0') 
                        CANCEL INSERT
                     END IF
                  END IF  
               END IF
               CALL axmt500_b_fill()                  ]]>
  </point>
  <point name="input.body.a_update" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #單身修改後，需重新產生交期明細資料
               IF NOT s_axmt500_gen_xmdd(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "xmdd_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err() 
                  LET g_xmdc_d[l_ac].* = g_xmdc_d_t.*
                  CALL s_transaction_end('N','0')
               END IF                                                                                                                                       ]]>
  </point>
  <point name="input.body.after_delete" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.body.after_input" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.body.after_row" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.body.after_set_entry_b" order="" ver="4" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_xmdc_d[l_ac].xmdc001) THEN
                  LET g_imaf015 = ''
                  LET g_imaf055 = ''      
                  LET g_imaf061 = ''
                  LET g_imaf113 = ''      
                  SELECT imaf015,imaf055,imaf061,imaf113,imaf122 
                    INTO g_imaf015,g_imaf055,g_imaf061,g_imaf113
                    FROM imaf_t
                   WHERE imafent = g_enterprise 
                     AND imafsite = g_site 
                     AND imaf001 = g_xmdc_d[l_ac].xmdc001                
               END IF        ]]>
  </point>
  <point name="input.body.b_a_insert" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #判斷客戶料號是否存在交易對象料號對應檔，若無，則回寫交易對象料號對應檔中
             IF g_pmao_flag = 'Y' THEN
                IF NOT s_axmt500_ins_pmao(g_xmda_m.xmdadocno,g_xmda_m.xmda004,g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc002,g_xmdc_d[l_ac].xmdc027,
                                          g_xmdc_d[l_ac].l_pmao009,g_xmdc_d[l_ac].l_pmao010) THEN
                   LET g_xmdc_d[l_ac].xmdc027 = ''
                   LET g_xmdc_d[l_ac].l_pmao009= ''
                   LET g_xmdc_d[l_ac].l_pmao010 = ''
                   DISPLAY BY NAME g_xmdc_d[l_ac].xmdc027,g_xmdc_d[l_ac].l_pmao009,g_xmdc_d[l_ac].l_pmao010 
                END IF              
            END IF               
            #產品特徵
            IF cl_null(g_xmdc_d[l_ac].xmdc002) THEN
               LET g_xmdc_d[l_ac].xmdc002 = ' '
            END IF             
            #計價單位、計價數量
            IF cl_get_para(g_enterprise,g_site,'S-BAS-0007') = "N" THEN
               LET g_xmdc_d[l_ac].xmdc010 = g_xmdc_d[l_ac].xmdc006
               LET g_xmdc_d[l_ac].xmdc011 = g_xmdc_d[l_ac].xmdc007 
            ELSE
               IF cl_null(g_imaf113) THEN
                  LET g_xmdc_d[l_ac].xmdc010 = g_xmdc_d[l_ac].xmdc006
                  LET g_xmdc_d[l_ac].xmdc011 = g_xmdc_d[l_ac].xmdc007  
               END IF                 
            END IF          
            CALL axmt500_get_xmdc044() ]]>
  </point>
  <point name="input.body.b_delete" order="" ver="8" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #add by lixiang 150821-00016#1--start---
               #判斷資料來源為"EC"時，單頭不可刪除
               IF g_xmda_m.xmda007 = '9' THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = g_xmda_m.xmdadocno
                  LET g_errparam.code   = 'axm-00712'
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               #add by lixiang 150821-00016#1--end---                                                                           ]]>
  </point>
  <point name="input.body.b_insert" order="" ver="8" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                              ]]>
  </point>
  <point name="input.body.b_update" order="" ver="8" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF g_pmao_flag = 'Y' THEN
                  IF NOT s_axmt500_ins_pmao(g_xmda_m.xmdadocno,g_xmda_m.xmda004,g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc002,g_xmdc_d[l_ac].xmdc027,
                                            g_xmdc_d[l_ac].l_pmao009,g_xmdc_d[l_ac].l_pmao010) THEN
                     LET g_xmdc_d[l_ac].xmdc027 = ''
                     LET g_xmdc_d[l_ac].l_pmao009= ''
                     LET g_xmdc_d[l_ac].l_pmao010 = ''
                     DISPLAY BY NAME g_xmdc_d[l_ac].xmdc027,g_xmdc_d[l_ac].l_pmao009,g_xmdc_d[l_ac].l_pmao010
                  END IF
               END IF
               #計價單位、計價數量
               IF cl_get_para(g_enterprise,g_site,'S-BAS-0007') = "N" THEN
                  LET g_xmdc_d[l_ac].xmdc010 = g_xmdc_d[l_ac].xmdc006
                  LET g_xmdc_d[l_ac].xmdc011 = g_xmdc_d[l_ac].xmdc007      
               END IF
               #150212--polly--mody--(S)
               #參考單位、參考數量
               IF cl_get_para(g_enterprise,g_site,'S-BAS-0028') = 'N' THEN
                  LET g_xmdc_d[l_ac].xmdc008 = ''
                  LET g_xmdc_d[l_ac].xmdc009 = ''
               END IF                
               #150212--polly--mody--(E)
               #價差比
               CALL axmt500_get_xmdc044()                                                                            ]]>
  </point>
  <point name="input.body.before_input2" order="" ver="4" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #抓取單據別
            LET g_slip = ''
            CALL s_aooi200_get_slip(g_xmda_m.xmdadocno) RETURNING l_success,g_slip
            #抓取價格是否允許修改,修改容差率,價格超過容差率的處理方式,允許單價為0
            IF NOT cl_null(g_xmda_m.xmda017) THEN
               LET g_xmah003 = ''
               LET g_xmah006 = ''            
               SELECT xmah003,xmah006
                 INTO g_xmah003,g_xmah006
                 FROM xmah_t
                WHERE xmahent = g_enterprise
                  AND xmah001 = g_xmda_m.xmda017
            END IF
            #取稅率、單價含稅否
            IF NOT cl_null(g_xmda_m.xmda011) THEN
               LET l_oodb005 = ''
               LET l_oodb006 = ''
               LET g_tax_app = ''
               CALL s_tax_chk(g_site,g_xmda_m.xmda011)
                 RETURNING l_success,l_oodbl004,l_oodb005,l_oodb006,g_tax_app
            END IF               ]]>
  </point>
  <point name="input.body.before_insert" order="" ver="8" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL s_transaction_begin()   
           
            #項次加1
            SELECT MAX(xmdcseq)+1 INTO g_xmdc_d[l_ac].xmdcseq FROM xmdc_t
             WHERE xmdcent = g_enterprise AND xmdcdocno = g_xmda_m.xmdadocno
            IF cl_null(g_xmdc_d[l_ac].xmdcseq) OR g_xmdc_d[l_ac].xmdcseq = 0 THEN
               LET g_xmdc_d[l_ac].xmdcseq = 1
            END IF 
            LET g_xmdc2_d[l_ac].xmdcseq = g_xmdc_d[l_ac].xmdcseq            
            LET g_xmdc_d[l_ac].xmdcsite = g_site           
            LET g_xmdc_d[l_ac].xmdcunit = g_site
            LET g_xmdc_d[l_ac].xmdcorga = g_site
            LET g_xmdc_d[l_ac].xmdc012 = g_xmda_m.xmdadocdt
            LET g_xmdc_d[l_ac].xmdc017 = g_xmda_m.xmda012
            LET g_xmdc_d[l_ac].xmdc023 = g_xmda_m.xmda022
            LET g_xmdc_d[l_ac].xmdc046 = 0
            LET g_xmdc_d[l_ac].xmdc047 = 0
            LET g_xmdc2_d[l_ac].xmdc025 = g_xmda_m.xmda025        
            LET g_xmdc2_d[l_ac].xmdc026 = g_xmda_m.xmda026
            LET g_xmdc2_d[l_ac].xmdc032 = "1"
            LET g_xmdc2_d[l_ac].xmdc035 = "1"
            LET g_xmdc2_d[l_ac].xmdc040 = "1"           
            LET g_xmdc2_d[l_ac].xmdc031 = g_xmda_m.xmda020           

           #訂單收貨日期、簽收日期第二筆以後都先預設上一筆資料
            IF g_xmdc_d[l_ac].xmdcseq > 1 THEN
               LET l_i = g_xmdc_d[l_ac].xmdcseq - 1
               SELECT xmdc012,xmdc013,xmdc020  #15/08/18 Sarah add xmdc020
                 INTO g_xmdc_d[l_ac].xmdc012,g_xmdc_d[l_ac].xmdc013,g_xmdc_d[l_ac].xmdc020  #15/08/18 Sarah add xmdc020
                 FROM xmdc_t
                WHERE xmdcent = g_enterprise
                  AND xmdcdocno = g_xmda_m.xmdadocno
                  AND xmdcseq = l_i
            END IF
           #判斷據點參數若不使用產品特徵時，則產品特徵不可以維護，需給空白
            IF cl_get_para(g_enterprise,g_site,'S-BAS-0036') = 'N' THEN
               LET g_xmdc_d[l_ac].xmdc002 = ' '
            END IF            
           #稅別應用=1.正常稅率，則單身的稅別、稅率預設為單頭的稅別、稅率
            IF g_tax_app = '1' THEN
               LET g_xmdc_d[l_ac].xmdc016 = g_xmda_m.xmda011
               LET g_xmdc_d[l_ac].xmdc016_desc = g_xmda_m.xmda011_desc
               LET g_xmdc_d[l_ac].xmdc017 = g_xmda_m.xmda012
            END IF
           #依單別aooi200預帶預設值
            CALL axmt500_docno_xmdc_default()
            CALL s_desc_get_department_desc(g_xmdc_d[l_ac].xmdcunit) RETURNING g_xmdc_d[l_ac].xmdcunit_desc
            CALL s_desc_get_department_desc(g_xmdc_d[l_ac].xmdcorga) RETURNING g_xmdc_d[l_ac].xmdcorga_desc 
            CALL s_desc_get_acc_desc('263',g_xmdc2_d[l_ac].xmdc031) RETURNING g_xmdc2_d[l_ac].xmdc031_desc  
            #dorislai-20150824-add----(S)
            #預帶預設庫位的值，aooi200抓值優先順序：預設欄位>應用參數
            IF cl_null(g_xmdc2_d[l_ac].xmdc028) THEN
               #預設欄位
               CALL s_aooi200_get_slip(g_xmda_m.xmdadocno) RETURNING l_success,l_ooba002
               IF l_success THEN
                  CALL s_aooi200_get_doc_default(g_site,'1',l_ooba002,'xmdc028',g_xmdc2_d[l_ac].xmdc028)
                  RETURNING g_xmdc2_d[l_ac].xmdc028
                  #應用參數
                  IF cl_null(g_xmdc2_d[l_ac].xmdc028) THEN
                     CALL cl_get_doc_para(g_enterprise,g_site,l_ooba002,'D-MFG-0076')
                     RETURNING g_xmdc2_d[l_ac].xmdc028
                  END IF
               END IF
            END IF
            #dorislai-20150824-add----(E)            
            LET g_xmdc_d_t.* = g_xmdc_d[l_ac].*
            LET g_xmdc_d_o.* = g_xmdc_d[l_ac].*         ]]>
  </point>
  <point name="input.body.before_row" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF l_cmd = 'u' THEN
               LET g_xmdc_d_o.* = g_xmdc_d[l_ac].* 
            ELSE
               INITIALIZE g_xmdc_d_o.* TO NULL
            END IF    
            LET g_pmao_flag = 'N'            ]]>
  </point>
  <point name="input.body.insert.after_set_entry_b" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body.insert.before_bak" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_pmao_flag = 'N']]>
  </point>
  <point name="input.body.m_delete" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                          ]]>
  </point>
  <point name="input.body.m_update" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                          ]]>
  </point>
  <point name="input.body2.a_delete" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.body2.a_insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                          ]]>
  </point>
  <point name="input.body2.a_update" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                          ]]>
  </point>
  <point name="input.body2.after_delete" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.body2.after_input" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.body2.after_insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                          ]]>
  </point>
  <point name="input.body2.after_row" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.body2.after_set_entry_b" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body2.b_a_insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.body2.b_delete" order="" ver="8" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #add by lixiang 150821-00016#1--start---
               #判斷資料來源為"EC"時，單頭不可刪除
               IF g_xmda_m.xmda007 = '9' THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = g_xmda_m.xmdadocno
                  LET g_errparam.code   = 'axm-00712'
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               #add by lixiang 150821-00016#1--end---                                                                                ]]>
  </point>
  <point name="input.body2.b_insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                          ]]>
  </point>
  <point name="input.body2.b_update" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               LET g_xmdc_d[l_ac].xmdc001 = g_xmdc2_d[l_ac].imaa001
               LET g_xmdc_d[l_ac].xmdc002 = g_xmdc2_d[l_ac].imaa005
               LET g_xmdc_d[l_ac].xmdc027 = g_xmdc2_d[l_ac].xmdc0272  ]]>
  </point>
  <point name="input.body2.before_input" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.body2.before_input2" order="" ver="4" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #抓取單據別
            LET g_slip = ''
            CALL s_aooi200_get_slip(g_xmda_m.xmdadocno) RETURNING l_success,g_slip
            IF NOT l_success THEN
               RETURN
            END IF ]]>
  </point>
  <point name="input.body2.before_insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.body2.before_row" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.body2.insert.after_set_entry_b" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body2.m_delete" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                          ]]>
  </point>
  <point name="input.body2.m_update" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                          ]]>
  </point>
  <point name="input.body3.a_delete" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.body3.a_insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                          ]]>
  </point>
  <point name="input.body3.a_update" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                          ]]>
  </point>
  <point name="input.body3.after_delete" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.body3.after_input" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.body3.after_insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                          ]]>
  </point>
  <point name="input.body3.after_row" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.body3.after_set_entry_b" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                          ]]>
  </point>
  <point name="input.body3.b_a_insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.body3.b_delete" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                          ]]>
  </point>
  <point name="input.body3.b_insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                          ]]>
  </point>
  <point name="input.body3.b_update" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                          ]]>
  </point>
  <point name="input.body3.before_input" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.body3.before_insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.body3.before_row" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.body3.insert.after_set_entry_b" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.body3.m_delete" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                          ]]>
  </point>
  <point name="input.body3.m_update" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                          ]]>
  </point>
  <point name="input.body5.action" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="input.body5.before_row" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.body6.after_input" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET l_cnt = 0
            SELECT COUNT(*) INTO l_cnt
              FROM xmds_t
             WHERE xmdsent = g_enterprise
               AND xmdsdocno = g_xmda_m.xmdadocno
               AND xmds004 <= 0
            IF l_cnt > 0 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00521'
               LET g_errparam.extend = g_xmda_m.xmdadocno
               LET g_errparam.popup = TRUE
               CALL cl_err()
               NEXT FIELD xmds004            
            END IF]]>
  </point>
  <point name="input.body6.after_set_entry_b" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body6.before_insert" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #項次加1
            SELECT MAX(xmdsseq)+1 INTO g_xmdc6_d[l_ac].xmdsseq FROM xmds_t
             WHERE xmdsent = g_enterprise AND xmdsdocno = g_xmda_m.xmdadocno
            IF cl_null(g_xmdc6_d[l_ac].xmdsseq) OR g_xmdc6_d[l_ac].xmdsseq = 0 THEN
               LET g_xmdc6_d[l_ac].xmdsseq = 1
            END IF    
            LET g_xmdc6_d[l_ac].xmdssite = g_site
            LET g_xmdc6_d[l_ac].xmds002 = g_xmda_m.xmda015     #弊別預設和單頭一致
            LET g_xmdc6_d[l_ac].xmds003 = g_xmda_m.xmda016     #匯率預設和單頭一致
            CALL s_desc_get_currency_desc(g_xmdc6_d[l_ac].xmds002) RETURNING g_xmdc6_d[l_ac].xmds002_desc 
            ]]>
  </point>
  <point name="input.body6.before_row" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body6.insert.after_set_entry_b" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.c.page1.imaal004" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.page1.xmdc001" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdc_d[l_ac].xmdc001             #給予default值
            LET g_qryparam.where = "1=1 "
            LET l_where = '' 
            CALL s_control_get_item_sql('2',g_site,g_user,g_dept,g_xmda_m.xmdadocno) RETURNING l_success,l_where
            IF l_success THEN
               LET g_qryparam.where = g_qryparam.where ," AND ",l_where
            END IF
            CALL q_imaf001_15()                               #呼叫開窗
            LET g_xmdc_d[l_ac].xmdc001 = g_qryparam.return1   #將開窗取得的值回傳到變數
            DISPLAY g_xmdc_d[l_ac].xmdc001 TO xmdc001         #顯示到畫面上
            CALL s_desc_get_item_desc(g_xmdc_d[l_ac].xmdc001) 
              RETURNING g_xmdc_d[l_ac].xmdc001_desc,g_xmdc_d[l_ac].xmdc001_desc_desc
            DISPLAY g_xmdc_d[l_ac].xmdc001_desc,g_xmdc_d[l_ac].xmdc001_desc_desc 
            NEXT FIELD xmdc001                                #返回原欄位

]]>
  </point>
  <point name="input.c.page1.xmdc002" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_imaa005 = ''
            CALL s_axmt500_get_imaa005(g_enterprise,g_xmdc_d[l_ac].xmdc001) RETURNING g_imaa005

            IF NOT cl_null(g_imaa005) THEN 
               IF l_cmd = 'u' OR (l_cmd = 'a' AND NOT cl_null(g_xmdc_d[l_ac].xmdc002)) THEN
                  CALL s_feature_single(g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc002,g_site,g_xmda_m.xmdadocno)
                       RETURNING l_success,g_xmdc_d[l_ac].xmdc002
                  #依交易對象、料號、產品特徵回傳客戶料號
                  CALL s_apmi070_get_pmao004(g_xmda_m.xmda004,g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc002)
                    RETURNING l_success,l_pmao004
                  IF l_success THEN
                     LET g_xmdc_d[l_ac].xmdc027 = l_pmao004
                     DISPLAY BY NAME g_xmdc_d[l_ac].xmdc027
                  END IF                       
                  DISPLAY BY NAME g_xmdc_d[l_ac].xmdc002
               END IF
            END IF                                                                        ]]>
  </point>
  <point name="input.c.page1.xmdc004" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc_d[l_ac].xmdc004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '221' #
            CALL q_oocq002()                                #呼叫開窗

            LET g_xmdc_d[l_ac].xmdc004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdc_d[l_ac].xmdc004 TO xmdc004              #顯示到畫面上

            NEXT FIELD xmdc004                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.xmdc005" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.page1.xmdc006" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdc_d[l_ac].xmdc006           #給予default值
            LET g_qryparam.arg1 = g_xmdc_d[l_ac].xmdc001
            CALL q_imao002()                                           #呼叫開窗
            LET g_xmdc_d[l_ac].xmdc006 = g_qryparam.return1            #將開窗取得的值回傳到變數
            DISPLAY g_xmdc_d[l_ac].xmdc006 TO xmdc006                  #顯示到畫面上
            CALL s_desc_get_unit_desc(g_xmdc_d[l_ac].xmdc006) RETURNING g_xmdc_d[l_ac].xmdc006_desc            
            NEXT FIELD xmdc006                                         #返回原欄位
]]>
  </point>
  <point name="input.c.page1.xmdc007" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.page1.xmdc008" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdc_d[l_ac].xmdc008             #給予default值
            LET g_qryparam.arg1 = g_xmdc_d[l_ac].xmdc001
            CALL q_imao002()                                             #呼叫開窗
            LET g_xmdc_d[l_ac].xmdc008 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmdc_d[l_ac].xmdc008 TO xmdc008                    #顯示到畫面上
            CALL s_desc_get_unit_desc(g_xmdc_d[l_ac].xmdc008) RETURNING g_xmdc_d[l_ac].xmdc008_desc
            NEXT FIELD xmdc008                          #返回原欄位]]>
  </point>
  <point name="input.c.page1.xmdc009" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.page1.xmdc010" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段 
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdc_d[l_ac].xmdc010             #給予default值
            LET g_qryparam.arg1 = g_xmdc_d[l_ac].xmdc001
            CALL q_imao002()                                             #呼叫開窗
            LET g_xmdc_d[l_ac].xmdc010 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmdc_d[l_ac].xmdc010 TO xmdc010              #顯示到畫面上
            CALL s_desc_get_unit_desc(g_xmdc_d[l_ac].xmdc010) RETURNING g_xmdc_d[l_ac].xmdc010_desc
            NEXT FIELD xmdc010                          #返回原欄位]]>
  </point>
  <point name="input.c.page1.xmdc011" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.page1.xmdc012" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.page1.xmdc013" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.page1.xmdc015" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.page1.xmdc016" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段 
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdc_d[l_ac].xmdc016             #給予default值
            #給予arg
            CALL q_oodb002_2()                                     #呼叫開窗
            LET g_xmdc_d[l_ac].xmdc016 = g_qryparam.return1        #將開窗取得的值回傳到變數
            DISPLAY g_xmdc_d[l_ac].xmdc016 TO xmdc016              #顯示到畫面上
            CALL s_desc_get_tax_desc1(g_site,g_xmdc_d[l_ac].xmdc016) RETURNING g_xmdc_d[l_ac].xmdc016_desc
            DISPLAY BY NAME g_xmdc_d[l_ac].xmdc016_desc             
            NEXT FIELD xmdc016                                     #返回原欄位            ]]>
  </point>
  <point name="input.c.page1.xmdc019" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.page1.xmdc020" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.page1.xmdc021" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.page1.xmdc022" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.page1.xmdc023" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        #此段落由子樣板a07產生            
            #開窗i段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc_d[l_ac].xmdc023             #給予default值


            #給予arg
            LET g_qryparam.arg1 = g_xmda_m.xmda004 
            LET g_qryparam.arg2 = g_site 

            CALL q_pmac002_5()                                     #呼叫開窗
            LET g_xmdc_d[l_ac].xmdc023 = g_qryparam.return1        #將開窗取得的值回傳到變數
            DISPLAY g_xmdc_d[l_ac].xmdc023 TO xmdc023              #顯示到畫面上
            NEXT FIELD xmdc023                                     #返回原欄位

]]>
  </point>
  <point name="input.c.page1.xmdc024" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.page1.xmdc027" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdc_d[l_ac].xmdc027             #給予default值
            #給予arg
            LET g_qryparam.arg1 = g_xmda_m.xmda004
            LET g_qryparam.arg2 = g_xmdc_d[l_ac].xmdc001
            LET g_qryparam.arg3 = g_xmdc_d[l_ac].xmdc002
               
            IF cl_null(g_xmdc_d[l_ac].xmdc001) THEN
               CALL q_pmao004_3()                                   #呼叫開窗
               LET g_xmdc_d[l_ac].xmdc027 = g_qryparam.return1      #將開窗取得的值回傳到變數
               LET g_xmdc_d[l_ac].xmdc001 = g_qryparam.return2
               LET g_xmdc_d[l_ac].xmdc002 = g_qryparam.return3
               DISPLAY g_xmdc_d[l_ac].xmdc027 TO xmdc027
               DISPLAY g_xmdc_d[l_ac].xmdc001 TO xmdc001
               DISPLAY g_xmdc_d[l_ac].xmdc002 TO xmdc002
            ELSE            
               CALL q_pmao004_1()                                   #呼叫開窗
               LET g_xmdc_d[l_ac].xmdc027 = g_qryparam.return1      #將開窗取得的值回傳到變數
               DISPLAY g_xmdc_d[l_ac].xmdc027 TO xmdc027
            END IF                                                      
            NEXT FIELD xmdc027                                      #返回原欄位]]>
  </point>
  <point name="input.c.page1.xmdc045" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.page1.xmdc049" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc_d[l_ac].xmdc049             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_acc

            CALL q_oocq002()                                #呼叫開窗

            LET g_xmdc_d[l_ac].xmdc049 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdc_d[l_ac].xmdc049 TO xmdc049              #顯示到畫面上

            NEXT FIELD xmdc049                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.xmdc050" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.page1.xmdc052" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.page1.xmdc053" order="" ver="1" cite_std="" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc_d[l_ac].xmdc053             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            CALL q_oocq002()                                #呼叫開窗

            LET g_xmdc_d[l_ac].xmdc053 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdc_d[l_ac].xmdc053 TO xmdc053              #顯示到畫面上

            NEXT FIELD xmdc053                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.xmdcorga" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        #此段落由子樣板a07產生            
              #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc_d[l_ac].xmdcorga             #給予default值

            #給予arg

            CALL q_ooef001()                                #呼叫開窗

            LET g_xmdc_d[l_ac].xmdcorga = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdc_d[l_ac].xmdcorga TO xmdcorga              #顯示到畫面上

            NEXT FIELD xmdcorga                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.xmdcseq" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.page1.xmdcunit" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
		   	LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdc_d[l_ac].xmdcunit             #給予default值
            #給予arg
            CALL q_ooef001()                                #呼叫開窗
            LET g_xmdc_d[l_ac].xmdcunit = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmdc_d[l_ac].xmdcunit TO xmdcunit              #顯示到畫面上
            NEXT FIELD xmdcunit                          #返回原欄位]]>
  </point>
  <point name="input.c.page2.xmda0272" order="" ver="1" cite_std="" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc2_d[l_ac].xmda0272             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #
            LET g_qryparam.arg2 = "" #
            LET g_qryparam.arg3 = "" #

            CALL q_pmao004_1()                                #呼叫開窗

            LET g_xmdc2_d[l_ac].xmda0272 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdc2_d[l_ac].xmda0272 TO xmda0272              #顯示到畫面上

            NEXT FIELD xmda0272                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.xmdc003" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdc2_d[l_ac].xmdc003  #給予default值
            CALL q_imaf001_5()                                 #呼叫開窗
            LET g_xmdc2_d[l_ac].xmdc003 = g_qryparam.return1    #將開窗取得的值回傳到變數
            DISPLAY g_xmdc2_d[l_ac].xmdc003 TO xmdc003         #顯示到畫面上
            NEXT FIELD xmdc003                                 #返回原欄位                                                                        
]]>
  </point>
  <point name="input.c.page2.xmdc025" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
	         LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdc2_d[l_ac].xmdc025            
            LET g_qryparam.arg1 = l_pmaa027
            CALL q_oofb019_1()                                    
            LET g_xmdc2_d[l_ac].xmdc025 = g_qryparam.return1              
            DISPLAY g_xmdc2_d[l_ac].xmdc025 TO xmdc025                  
            CALL axmt500_xmda025_ref(g_xmda_m.xmda022,g_xmdc2_d[l_ac].xmdc025) 
              RETURNING l_desc,g_xmdc2_d[l_ac].oofb0173
            DISPLAY BY NAME g_xmdc2_d[l_ac].oofb0173
            NEXT FIELD xmdc025  ]]>
  </point>
  <point name="input.c.page2.xmdc026" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
	         LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdc2_d[l_ac].xmdc026           
	         LET g_qryparam.arg1 = l_pmaa027
            CALL q_oofb019_1()                                    
            LET g_xmdc2_d[l_ac].xmdc026 = g_qryparam.return1             
            DISPLAY g_xmdc2_d[l_ac].xmdc026 TO xmdc026                  
            CALL axmt500_xmda025_ref(g_xmda_m.xmda021,g_xmdc2_d[l_ac].xmdc026) 
              RETURNING l_desc,g_xmdc2_d[l_ac].oofb0174
            DISPLAY BY NAME g_xmdc2_d[l_ac].oofb0174
            NEXT FIELD xmdc026]]>
  </point>
  <point name="input.c.page2.xmdc027" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc2_d[l_ac].xmdc027             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #
            LET g_qryparam.arg2 = "" #
            LET g_qryparam.arg3 = "" #

            CALL q_pmao004_1()                                #呼叫開窗

            LET g_xmdc2_d[l_ac].xmdc027 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdc2_d[l_ac].xmdc027 TO xmdc027              #顯示到畫面上

            NEXT FIELD xmdc027                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.xmdc0272" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        #此段落由子樣板a07產生            
            #開窗i段
	         INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
	         LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdc2_d[l_ac].xmdc0272             #給予default值
            #給予arg
            LET g_qryparam.arg1 = g_xmda_m.xmda004
            LET g_qryparam.arg2 = g_xmdc2_d[l_ac].imaa001
            LET g_qryparam.arg3 = g_xmdc2_d[l_ac].imaa005
               
            IF cl_null(g_xmdc2_d[l_ac].imaa001) THEN
               CALL q_pmao004_3()                                     #呼叫開窗
               LET g_xmdc2_d[l_ac].xmdc0272 = g_qryparam.return1      #將開窗取得的值回傳到變數
               LET g_xmdc2_d[l_ac].imaa001 = g_qryparam.return2
               LET g_xmdc2_d[l_ac].imaa005 = g_qryparam.return3
               DISPLAY g_xmdc2_d[l_ac].xmdc0272 TO xmdc0272
               DISPLAY g_xmdc2_d[l_ac].imaa001 TO imaa001
               DISPLAY g_xmdc2_d[l_ac].imaa005 TO imaa005
            ELSE            
               CALL q_pmao004_1()                                   #呼叫開窗
               LET g_xmdc2_d[l_ac].xmdc0272 = g_qryparam.return1      #將開窗取得的值回傳到變數
               DISPLAY g_xmdc2_d[l_ac].xmdc0272 TO xmdc0272
            END IF                                                      
            NEXT FIELD xmdc0272                                      #返回原欄位

]]>
  </point>
  <point name="input.c.page2.xmdc028" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生                       
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdc2_d[l_ac].xmdc028    #給予default值
            #ming 20150120 modify -------------------------(S) 
            #LET g_qryparam.arg1 = g_xmdc_d[l_ac].xmdc001
            #LET g_qryparam.arg2 = g_xmdc_d[l_ac].xmdc002
            #CALL q_inag004_1()                                   #呼叫開窗
            #LET g_xmdc2_d[l_ac].xmdc028 = g_qryparam.return1     #將開窗取得的值回傳到變數
            #LET g_xmdc2_d[l_ac].xmdc029 = g_qryparam.return2
            #LET g_xmdc2_d[l_ac].xmdc030 = g_qryparam.return3
            #DISPLAY g_xmdc2_d[l_ac].xmdc028 TO xmdc028           #顯示到畫面上
            #DISPLAY g_xmdc2_d[l_ac].xmdc029 TO xmdc029
            #DISPLAY g_xmdc2_d[l_ac].xmdc030 TO xmdc030
            LET g_qryparam.arg1 = g_site
            CALL q_inaa001_6()

            LET g_xmdc2_d[l_ac].xmdc028 = g_qryparam.return1
            DISPLAY g_xmdc2_d[l_ac].xmdc028 TO xmdc028
            #ming 20150120 modify -------------------------(E) 
            CALL s_desc_get_stock_desc(g_site,g_xmdc2_d[l_ac].xmdc028) RETURNING g_xmdc2_d[l_ac].xmdc028_desc
            CALL s_desc_get_locator_desc(g_site,g_xmdc2_d[l_ac].xmdc028,g_xmdc2_d[l_ac].xmdc029) RETURNING g_xmdc2_d[l_ac].xmdc029_desc
            NEXT FIELD xmdc028
]]>
  </point>
  <point name="input.c.page2.xmdc029" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdc2_d[l_ac].xmdc029     #給予default值
            #ming 20150120 modify ---------------------------------------(S) 
            #LET g_qryparam.arg1 = g_xmdc_d[l_ac].xmdc001
            #LET g_qryparam.arg2 = g_xmdc_d[l_ac].xmdc002
            #LET g_qryparam.arg3 = g_xmdc2_d[l_ac].xmdc028
            #CALL q_inag005_5()                                      #呼叫開窗
            LET g_qryparam.arg1 = g_xmdc2_d[l_ac].xmdc028
            CALL q_inab002_3()
            #ming 20150120 modify ---------------------------------------(E) 
            LET g_xmdc2_d[l_ac].xmdc029 = g_qryparam.return1      #將開窗取得的值回傳到變數
            DISPLAY g_xmdc2_d[l_ac].xmdc029 TO xmdc029         #顯示到畫面上
            CALL s_desc_get_locator_desc(g_site,g_xmdc2_d[l_ac].xmdc028,g_xmdc2_d[l_ac].xmdc029) RETURNING g_xmdc2_d[l_ac].xmdc029_desc
            NEXT FIELD xmdc029  
]]>
  </point>
  <point name="input.c.page2.xmdc030" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.page2.xmdc031" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdc2_d[l_ac].xmdc031            #給予default值
            #給予arg
            LET g_qryparam.arg1 = "263" #
            CALL q_oocq002()                                #呼叫開窗
            LET g_xmdc2_d[l_ac].xmdc031 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmdc2_d[l_ac].xmdc031 TO xmda031              #顯示到畫面上
            CALL s_desc_get_acc_desc('263',g_xmdc2_d[l_ac].xmdc031) RETURNING g_xmdc2_d[l_ac].xmdc031_desc            
            DISPLAY BY NAME g_xmdc2_d[l_ac].xmdc031_desc                                                                        ]]>
  </point>
  <point name="input.c.page2.xmdc032" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.page2.xmdc033" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.c.page2.xmdc034" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.page2.xmdc036" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc2_d[l_ac].xmdc036             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s

            #CALL q_pjba001()   #mark by lixiang 2015/11/21
            CALL q_pjab001()                                #呼叫開窗

            LET g_xmdc2_d[l_ac].xmdc036 = g_qryparam.return1              

            DISPLAY g_xmdc2_d[l_ac].xmdc036 TO xmdc036              #
            CALL s_desc_get_project_desc(g_xmdc2_d[l_ac].xmdc036) RETURNING g_xmdc2_d[l_ac].xmdc036_desc
            DISPLAY BY NAME g_xmdc2_d[l_ac].xmdc036_desc

            NEXT FIELD xmdc036                          #返回原欄位
                                                                       ]]>
  </point>
  <point name="input.c.page2.xmdc037" order="" ver="8" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc2_d[l_ac].xmdc037             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_xmdc2_d[l_ac].xmdc036 #s


            CALL q_pjbb002_1()                                #呼叫開窗

            LET g_xmdc2_d[l_ac].xmdc037 = g_qryparam.return1              

            DISPLAY g_xmdc2_d[l_ac].xmdc037 TO xmdc037              #
            CALL s_desc_get_wbs_desc(g_xmdc2_d[l_ac].xmdc036,g_xmdc2_d[l_ac].xmdc037) RETURNING g_xmdc2_d[l_ac].xmdc037_desc
            DISPLAY BY NAME g_xmdc2_d[l_ac].xmdc037_desc

            NEXT FIELD xmdc037                          #返回原欄位
            ]]>
  </point>
  <point name="input.c.page2.xmdc038" order="" ver="8" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc2_d[l_ac].xmdc038             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_xmdc2_d[l_ac].xmdc036 #s


            CALL q_pjbm002()                                #呼叫開窗

            LET g_xmdc2_d[l_ac].xmdc038 = g_qryparam.return1              

            DISPLAY g_xmdc2_d[l_ac].xmdc038 TO xmdc038              #
            CALL s_desc_get_activity_desc(g_xmdc2_d[l_ac].xmdc036,g_xmdc2_d[l_ac].xmdc038) RETURNING g_xmdc2_d[l_ac].xmdc038_desc
            DISPLAY BY NAME g_xmdc2_d[l_ac].xmdc038_desc

            NEXT FIELD xmdc038                          #返回原欄位
                                                                        ]]>
  </point>
  <point name="input.c.page2.xmdc039" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.page3.xmdc012" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.page3.xmdc013" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.page3.xmdd001" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc3_d[l_ac].xmdd001             #給予default值

            #給予arg

            CALL q_imaa001()                                #呼叫開窗

            LET g_xmdc3_d[l_ac].xmdd001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdc3_d[l_ac].xmdd001 TO xmdd001              #顯示到畫面上

            NEXT FIELD xmdd001                          #返回原欄位

]]>
  </point>
  <point name="input.c.page3.xmdd004" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc3_d[l_ac].xmdd004             #給予default值

            #給予arg

            CALL q_ooca001_1()                                #呼叫開窗

            LET g_xmdc3_d[l_ac].xmdd004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdc3_d[l_ac].xmdd004 TO xmdd004              #顯示到畫面上

            NEXT FIELD xmdd004                          #返回原欄位

]]>
  </point>
  <point name="input.c.page3.xmdd017" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc3_d[l_ac].xmdd017             #給予default值

            #給予arg

            CALL q_oodb002_2()                                #呼叫開窗

            LET g_xmdc3_d[l_ac].xmdd017 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdc3_d[l_ac].xmdd017 TO xmdd017              #顯示到畫面上

            NEXT FIELD xmdd017                          #返回原欄位

]]>
  </point>
  <point name="input.c.page3.xmdd022" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc3_d[l_ac].xmdd022             #給予default值

            #給予arg

            CALL q_ooag001()                                #呼叫開窗

            LET g_xmdc3_d[l_ac].xmdd022 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdc3_d[l_ac].xmdd022 TO xmdd022              #顯示到畫面上

            NEXT FIELD xmdd022                          #返回原欄位

]]>
  </point>
  <point name="input.c.page3.xmdd024" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc3_d[l_ac].xmdd024             #給予default值

            #給予arg

            CALL q_ooca001_1()                                #呼叫開窗

            LET g_xmdc3_d[l_ac].xmdd024 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdc3_d[l_ac].xmdd024 TO xmdd024              #顯示到畫面上

            NEXT FIELD xmdd024                          #返回原欄位

]]>
  </point>
  <point name="input.c.page3.xmdd026" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc3_d[l_ac].xmdd026             #給予default值

            #給予arg

            CALL q_ooca001_1()                                #呼叫開窗

            LET g_xmdc3_d[l_ac].xmdd026 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdc3_d[l_ac].xmdd026 TO xmdd026              #顯示到畫面上

            NEXT FIELD xmdd026                          #返回原欄位

]]>
  </point>
  <point name="input.c.page4.xmde001" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc4_d[l_ac].xmde001             #給予default值

            #給予arg

            CALL q_imaa001()                                #呼叫開窗

            LET g_xmdc4_d[l_ac].xmde001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdc4_d[l_ac].xmde001 TO xmde001              #顯示到畫面上

            NEXT FIELD xmde001                          #返回原欄位

]]>
  </point>
  <point name="input.c.page4.xmde003" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc4_d[l_ac].xmde003             #給予default值

            #給予arg

            CALL q_xmdadocno()                                #呼叫開窗

            LET g_xmdc4_d[l_ac].xmde003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdc4_d[l_ac].xmde003 TO xmde003              #顯示到畫面上

            NEXT FIELD xmde003                          #返回原欄位

]]>
  </point>
  <point name="input.c.page4.xmde008" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc4_d[l_ac].xmde008             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            CALL q_oocq002()                                #呼叫開窗

            LET g_xmdc4_d[l_ac].xmde008 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdc4_d[l_ac].xmde008 TO xmde008              #顯示到畫面上

            NEXT FIELD xmde008                          #返回原欄位

]]>
  </point>
  <point name="input.c.page4.xmde022" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc4_d[l_ac].xmde022             #給予default值

            #給予arg

            CALL q_ooca001_1()                                #呼叫開窗

            LET g_xmdc4_d[l_ac].xmde022 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdc4_d[l_ac].xmde022 TO xmde022              #顯示到畫面上

            NEXT FIELD xmde022                          #返回原欄位

]]>
  </point>
  <point name="input.c.page5.xmdb002" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc5_d[l_ac].xmdb002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_xmda_m.xmda004

            CALL q_pmad002_3()                                #呼叫開窗

            LET g_xmdc5_d[l_ac].xmdb002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdc5_d[l_ac].xmdb002 TO xmdb002              #顯示到畫面上

            NEXT FIELD xmdb002                          #返回原欄位

]]>
  </point>
  <point name="input.c.page6.xmds001" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:1)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc6_d[l_ac].xmds001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s            
            CALL q_imaf001_17()                                #呼叫開窗
            LET g_xmdc6_d[l_ac].xmds001 = g_qryparam.return1             
            DISPLAY g_xmdc6_d[l_ac].xmds001 TO xmds001              #
            CALL s_desc_get_item_desc(g_xmdc6_d[l_ac].xmds001)
               RETURNING g_xmdc6_d[l_ac].xmds001_desc,g_xmdc6_d[l_ac].xmds001_desc_desc
            DISPLAY BY NAME g_xmdc6_d[l_ac].xmds001_desc,g_xmdc6_d[l_ac].xmds001_desc_desc
            NEXT FIELD xmds001                          #返回原欄位

]]>
  </point>
  <point name="input.c.page6.xmds002" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:1)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE            
            LET g_qryparam.default1 = g_xmdc6_d[l_ac].xmds002             #給予default值
            #給予arg
            LET g_qryparam.arg1 = g_site            
            CALL q_ooaj002_1()                                #呼叫開窗
            LET g_xmdc6_d[l_ac].xmds002 = g_qryparam.return1          
            DISPLAY g_xmdc6_d[l_ac].xmds002 TO xmds002              
            CALL s_desc_get_currency_desc(g_xmdc6_d[l_ac].xmds002)
                 RETURNING g_xmdc6_d[l_ac].xmds002_desc
            DISPLAY BY NAME g_xmdc6_d[l_ac].xmds002_desc            
            NEXT FIELD xmds002                          #返回原欄位]]>
  </point>
  <point name="input.c.page6.xmds005" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:1)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdc6_d[l_ac].xmds005             #給予default值
            #給予arg
            LET g_qryparam.arg1 = g_site 
            CALL q_pmaa001_3()                                #呼叫開窗
            LET g_xmdc6_d[l_ac].xmds005 = g_qryparam.return1              
            DISPLAY g_xmdc6_d[l_ac].xmds005 TO xmds005              #
            CALL s_desc_get_trading_partner_abbr_desc(g_xmdc6_d[l_ac].xmds005) RETURNING g_xmdc6_d[l_ac].xmds005_desc
            DISPLAY BY NAME g_xmdc6_d[l_ac].xmds005_desc
            NEXT FIELD xmds005                          #返回原欄位

]]>
  </point>
  <point name="input.c.xmda001" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.xmda002" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #開窗i段
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
   			LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmda_m.xmda002             #給予default值
            CALL q_ooag001()                                #呼叫開窗
            LET g_xmda_m.xmda002 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmda_m.xmda002 TO xmda002              #顯示到畫面上
            NEXT FIELD xmda002                          #返回原欄位]]>
  </point>
  <point name="input.c.xmda003" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmda_m.xmda003             #給予default值
            #給予arg
            LET g_qryparam.arg1 = g_xmda_m.xmdadocdt
            CALL q_ooeg001()                                #呼叫開窗
            LET g_xmda_m.xmda003 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmda_m.xmda003 TO xmda003              #顯示到畫面上
            NEXT FIELD xmda003                          #返回原欄位
]]>
  </point>
  <point name="input.c.xmda004" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = "1=1 "            
            LET l_where = ''
            CALL s_control_get_customer_sql('2',g_site,g_user,g_dept,g_xmda_m.xmdadocno) RETURNING l_success,l_where
            IF l_success THEN
               LET g_qryparam.where = g_qryparam.where ," AND ",l_where
            END IF           
            LET g_qryparam.default1 = g_xmda_m.xmda004             #給予default值
            LET g_qryparam.arg1 = g_site

            CALL q_pmaa001_6()                                     #呼叫開窗
            LET g_xmda_m.xmda004 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmda_m.xmda004 TO xmda004                    #顯示到畫面上
            CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda004) RETURNING g_xmda_m.xmda004_desc
            DISPLAY BY NAME g_xmda_m.xmda004_desc
            NEXT FIELD xmda004                                 #返回原欄位
]]>
  </point>
  <point name="input.c.xmda005" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.xmda006" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.xmda007" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.xmda008" order="" ver="8" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF g_xmda_m.xmda007 = '2' THEN
               IF NOT cl_null(g_xmda_m.xmda004)THEN
                  #開窗i段
			         INITIALIZE g_qryparam.* TO NULL
                  LET g_qryparam.state = 'i'
		            LET g_qryparam.reqry = FALSE
                  LET g_qryparam.default1 = g_xmda_m.xmda008  
                  LET g_qryparam.where = " xmda004 = '",g_xmda_m.xmda004,"' AND xmda005 = '5' AND xmdastus = 'Y'"
                  
                  #150909 earl mod s
                  #組合過濾前後置單據資料SQL
                  CALL s_aooi210_get_check_sql(g_site,'',g_xmda_m.xmdadocno,'4','','xmdadocno') RETURNING l_success,l_where
                  IF l_success THEN
                     LET g_qryparam.where = g_qryparam.where," AND ",l_where
                     CALL q_xmdadocno()
                     LET g_xmda_m.xmda008 = g_qryparam.return1              #將開窗取得的值回傳到變數
                     DISPLAY g_xmda_m.xmda008 TO xmda008
                  END IF
                  #150909 earl mod e
               ELSE
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'axm-00145'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  NEXT FIELD xmda004               
               END IF   
            END IF]]>
  </point>
  <point name="input.c.xmda009" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
		    	LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmda_m.xmda009             #給予default值
            #給予arg
            LET g_qryparam.arg1 = g_xmda_m.xmda004
            CALL q_pmad002_3()                                 #呼叫開窗
            LET g_xmda_m.xmda009 = g_qryparam.return1          #將開窗取得的值回傳到變數
            DISPLAY g_xmda_m.xmda009 TO xmda009                #顯示到畫面上
            CALL s_desc_get_ooib002_desc(g_xmda_m.xmda009) RETURNING g_xmda_m.xmda009_desc
            DISPLAY BY NAME g_xmda_m.xmda009_desc
            NEXT FIELD xmda009                                 #返回原欄位]]>
  </point>
  <point name="input.c.xmda010" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmda_m.xmda010             #給予default值
            #給予arg
			   LET g_qryparam.arg1 = '238'
            CALL q_oocq002()                                #呼叫開窗
            LET g_xmda_m.xmda010 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmda_m.xmda010 TO xmda010              #顯示到畫面上
            CALL s_desc_get_acc_desc('238',g_xmda_m.xmda010) RETURNING g_xmda_m.xmda010_desc
            DISPLAY BY NAME g_xmda_m.xmda010_desc
            NEXT FIELD xmda010                          #返回原欄位]]>
  </point>
  <point name="input.c.xmda011" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #開窗i段
		    	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmda_m.xmda011        #給予default值
            CALL q_oodb002_2()                                #呼叫開窗
            LET g_xmda_m.xmda011 = g_qryparam.return1         #將開窗取得的值回傳到變數
            DISPLAY g_xmda_m.xmda011 TO xmda011               #顯示到畫面上
            CALL s_desc_get_tax_desc1(g_site,g_xmda_m.xmda011) RETURNING g_xmda_m.xmda011_desc
            DISPLAY BY NAME g_xmda_m.xmda011_desc
            NEXT FIELD xmda011                          #返回原欄位
]]>
  </point>
  <point name="input.c.xmda012" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.xmda013" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.xmda015" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmda_m.xmda015             #給予default值
            #給予arg
            LET g_qryparam.arg1 = g_site
            CALL q_ooaj002_2()                                 #呼叫開窗
            LET g_xmda_m.xmda015 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmda_m.xmda015 TO xmda015              #顯示到畫面上
            CALL s_desc_get_currency_desc(g_xmda_m.xmda015) RETURNING g_xmda_m.xmda015_desc           
            DISPLAY BY NAME g_xmda_m.xmda015_desc
            NEXT FIELD xmda015                          #返回原欄位]]>
  </point>
  <point name="input.c.xmda016" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.xmda017" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmda_m.xmda017             #給予default值
            CALL q_xmah001()                                #呼叫開窗
            LET g_xmda_m.xmda017 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmda_m.xmda017 TO xmda017              #顯示到畫面上
            NEXT FIELD xmda017                               #返回原欄位
            CALL axmt500_xmda017_ref(g_xmda_m.xmda017) RETURNING g_xmda_m.xmda017_desc
            DISPLAY BY NAME g_xmda_m.xmda017_desc]]>
  </point>
  <point name="input.c.xmda018" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmda_m.xmda018             #給予default值
            CALL q_ooid001_1()                                #呼叫開窗
            LET g_xmda_m.xmda018 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmda_m.xmda018 TO xmda018              #顯示到畫面上
            CALL axmt500_xmda018_ref(g_xmda_m.xmda018) RETURNING g_xmda_m.xmda018_desc
            DISPLAY BY NAME g_xmda_m.xmda018_desc
            NEXT FIELD xmda018                          #返回原欄位]]>
  </point>
  <point name="input.c.xmda019" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.xmda020" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmda_m.xmda020             #給予default值
            #給予arg
            LET g_qryparam.arg1 = "263" #
            CALL q_oocq002()                                #呼叫開窗
            LET g_xmda_m.xmda020 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmda_m.xmda020 TO xmda020              #顯示到畫面上
            CALL s_desc_get_acc_desc('263',g_xmda_m.xmda020) RETURNING g_xmda_m.xmda020_desc
            DISPLAY BY NAME g_xmda_m.xmda020_desc
            NEXT FIELD xmda020                          #返回原欄位]]>
  </point>
  <point name="input.c.xmda021" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF cl_null(g_xmda_m.xmda004) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00145'  #請先輸入客戶編號
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
               NEXT FIELD xmda004
            END IF
            
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
		   	LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmda_m.xmda021             
            LET g_qryparam.default2 = g_xmda_m.xmda021_desc
            LET g_qryparam.arg1 = g_xmda_m.xmda004  
            LET g_qryparam.arg2 = g_site 
            CALL q_pmac002_5()                                 
            LET g_xmda_m.xmda021 = g_qryparam.return1          
            LET g_xmda_m.xmda021_desc = g_qryparam.return1         
            DISPLAY g_xmda_m.xmda021 TO xmda021                  
            DISPLAY g_xmda_m.xmda021_desc TO xmda_desc
            NEXT FIELD xmda021                          
]]>
  </point>
  <point name="input.c.xmda022" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmda_m.xmda022          #給予default值
            LET g_qryparam.arg1 = g_xmda_m.xmda004  
            LET g_qryparam.arg2 = g_site 
            CALL q_pmac002_6()                                  #呼叫開窗
            LET g_xmda_m.xmda022 = g_qryparam.return1           #將開窗取得的值回傳到變數
            DISPLAY g_xmda_m.xmda022 TO xmda022                 #顯示到畫面上
            CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda022) RETURNING g_xmda_m.xmda022_desc
            DISPLAY BY NAME g_xmda_m.xmda022_desc            
            NEXT FIELD xmda022                                  #返回原欄位
]]>
  </point>
  <point name="input.c.xmda023" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmda_m.xmda023             #給予default值
            #給予arg
            LET g_qryparam.arg1 = "275"
            CALL q_oocq002()                                #呼叫開窗
            LET g_xmda_m.xmda023 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmda_m.xmda023 TO xmda023              #顯示到畫面上
            CALL s_desc_get_acc_desc('275',g_xmda_m.xmda023) RETURNING g_xmda_m.xmda023_desc
            DISPLAY BY NAME g_xmda_m.xmda023_desc
            NEXT FIELD xmda023                          #返回原欄位
]]>
  </point>
  <point name="input.c.xmda024" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmda_m.xmda024             #給予default值
            #給予arg
            LET g_qryparam.arg1 = "295"
            CALL q_oocq002()                               #呼叫開窗
            LET g_xmda_m.xmda024 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmda_m.xmda024 TO xmda024              #顯示到畫面上
            CALL axmt500_xmda024_ref(g_xmda_m.xmda024) RETURNING g_xmda_m.xmda024_desc
            DISPLAY BY NAME g_xmda_m.xmda024_desc
            NEXT FIELD xmda024                          #返回原欄位]]>
  </point>
  <point name="input.c.xmda025" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmda_m.xmda025             #給予default值
            LET g_qryparam.arg1 = l_pmaa027
            CALL q_oofb019_1()                                     #呼叫開窗
            LET g_xmda_m.xmda025 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmda_m.xmda025 TO xmda025                    #顯示到畫面上
            CALL axmt500_xmda025_ref(g_xmda_m.xmda022,g_xmda_m.xmda025) RETURNING g_xmda_m.xmda025_desc,g_xmda_m.oofb0171
            DISPLAY BY NAME g_xmda_m.xmda025_desc,g_xmda_m.oofb0171
            NEXT FIELD xmda025                                     #返回原欄位
]]>
  </point>
  <point name="input.c.xmda026" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmda_m.xmda026             #給予default值
			   LET g_qryparam.arg1 = l_pmaa027
            CALL q_oofb019_1()                                     #呼叫開窗
            LET g_xmda_m.xmda026 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmda_m.xmda026 TO xmda026                    #顯示到畫面上
            CALL axmt500_xmda025_ref(g_xmda_m.xmda021,g_xmda_m.xmda026) RETURNING g_xmda_m.xmda026_desc,g_xmda_m.oofb0172
            DISPLAY BY NAME g_xmda_m.xmda026_desc,g_xmda_m.oofb0172
            NEXT FIELD xmda026                                        #返回原欄位]]>
  </point>
  <point name="input.c.xmda027" order="" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
		      LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmda_m.xmda027             #給予default值
            #給予arg
#151014-00008 By whitney modify start
#            LET g_qryparam.arg1 = g_xmda_m.xmda004 #
            LET g_qryparam.arg1 = g_xmda_m.xmda022
#151014-00008 By whitney modify end
            CALL q_pmaj002()                                #呼叫開窗
            LET g_xmda_m.xmda027 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmda_m.xmda027 TO xmda027              #顯示到畫面上
            CALL axmt500_xmda027_ref()
            NEXT FIELD xmda027                          #返回原欄位
]]>
  </point>
  <point name="input.c.xmda028" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.xmda030" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.xmda031" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.xmda032" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmda_m.xmda032             #給予default值
            LET g_qryparam.arg1 = "297"
            CALL q_oocq002()                                #呼叫開窗
            LET g_xmda_m.xmda032 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmda_m.xmda032 TO xmda032              #顯示到畫面上
            CALL s_desc_get_acc_desc('297',g_xmda_m.xmda032) RETURNING g_xmda_m.xmda032_desc 
            DISPLAY BY NAME g_xmda_m.xmda032_desc
            NEXT FIELD xmda032                          #返回原欄位

]]>
  </point>
  <point name="input.c.xmda033" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.xmda034" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmda_m.xmda034             #給予default值 
            LET g_qryparam.arg1 = g_site
            CALL q_pmaa001_6()                                #呼叫開窗
            LET g_xmda_m.xmda034 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmda_m.xmda034 TO xmda034              #顯示到畫面上
            CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda034) RETURNING g_xmda_m.xmda034_desc
            DISPLAY BY NAME g_xmda_m.xmda034_desc            
            NEXT FIELD xmda034                          #返回原欄位]]>
  </point>
  <point name="input.c.xmda035" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmda_m.xmda035             #給予default值
            #給予arg
            LET g_qryparam.arg1 = g_ooef019 
            LET g_qryparam.arg2 = "2" 
            CALL q_isac002_1()                            #呼叫開窗
            LET g_xmda_m.xmda035 = g_qryparam.return1              #將開窗取得的值回傳到變數
            CALL axmt500_xmda035_ref(g_xmda_m.xmda035) RETURNING g_xmda_m.xmda035_desc
            DISPLAY BY NAME g_xmda_m.xmda035_desc           
            DISPLAY g_xmda_m.xmda035 TO xmda035              #顯示到畫面上   
            NEXT FIELD xmda035                          #返回原欄位
]]>
  </point>
  <point name="input.c.xmda036" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmda_m.xmda036             #給予default值
            CALL q_pmaa001_3()                                #呼叫開窗
            LET g_xmda_m.xmda036 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmda_m.xmda036 TO xmda036              #顯示到畫面上
            NEXT FIELD xmda036                          #返回原欄位]]>
  </point>
  <point name="input.c.xmda037" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmda_m.xmda037
            CALL s_axmt500_get_oocq019(g_xmda_m.xmda020) RETURNING l_oocq019  #運輸類型
            IF NOT cl_null(l_oocq019) THEN
               CASE
                  WHEN l_oocq019 ='1' OR l_oocq019='4'
                     LET g_qryparam.arg1 = "315"
                     CALL q_oocq002()
                  WHEN l_oocq019 ='2'
                     CALL q_oocq002_10()
                  WHEN l_oocq019 ='3' 
                     CALL q_oocq002_12()
                  OTHERWISE EXIT CASE
               END CASE
            END IF
            LET g_xmda_m.xmda037 = g_qryparam.return1       #將開窗取得的值回傳到變數
            DISPLAY g_xmda_m.xmda037 TO xmda037
            CALL s_apmi011_location_ref(g_xmda_m.xmda020,g_xmda_m.xmda037) RETURNING g_xmda_m.xmda037_desc
            DISPLAY BY NAME g_xmda_m.xmda037_desc
            NEXT FIELD xmda037                ]]>
  </point>
  <point name="input.c.xmda038" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmda_m.xmda038
            CALL s_axmt500_get_oocq019(g_xmda_m.xmda020) RETURNING l_oocq019  #運輸類型
            IF NOT cl_null(l_oocq019) THEN
               CASE
                  WHEN l_oocq019 ='1' OR l_oocq019='4'
                     LET g_qryparam.arg1 = "315"
                     CALL q_oocq002()
                  WHEN l_oocq019 ='2'
                     CALL q_oocq002_10()
                  WHEN l_oocq019 ='3'
                     CALL q_oocq002_12()
                  OTHERWISE EXIT CASE
               END CASE
            END IF
            LET g_xmda_m.xmda038 = g_qryparam.return1       #將開窗取得的值回傳到變數
            DISPLAY g_xmda_m.xmda038 TO xmda038
            CALL s_apmi011_location_ref(g_xmda_m.xmda020,g_xmda_m.xmda038) RETURNING g_xmda_m.xmda038_desc
            DISPLAY BY NAME g_xmda_m.xmda038_desc
            NEXT FIELD xmda038        ]]>
  </point>
  <point name="input.c.xmda039" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.xmda043" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.xmda044" order="" ver="4" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmda_m.xmda044            
            LET g_qryparam.where = " xmao001 = '",g_xmda_m.xmda004,"'"             
            CALL q_xmao002()                                #呼叫開窗
            LET g_xmda_m.xmda044 = g_qryparam.return1              
            DISPLAY g_xmda_m.xmda044 TO xmda044         
            CALL axmt500_xmda044_ref(g_xmda_m.xmda044) 
              RETURNING  g_xmda_m.xmda044_desc 
            DISPLAY BY NAME g_xmda_m.xmda044_desc               
            NEXT FIELD xmda044                              #返回原欄位

]]>
  </point>
  <point name="input.c.xmda050" order="" ver="8" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmda_m.xmda050             #給予default值
            LET g_qryparam.arg1 = '1' 
            LET g_qryparam.arg2 = '0'
            
            #150818 earl mod s
            #150407---earl---add---s
            IF g_xmda_m.xmda005 = '3' THEN #簽收訂單
               LET g_qryparam.where = "icaa005 = 'N' AND icaa004 = '2'"
            END IF
            #150407---earl---add---e
            #150818 earl mod e
            
            CALL q_icaa001_1()                                #呼叫開窗
            LET g_xmda_m.xmda050 = g_qryparam.return1              
            DISPLAY g_xmda_m.xmda050 TO xmda050              #
            NEXT FIELD xmda050                          #返回原欄位]]>
  </point>
  <point name="input.c.xmda203" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            IF cl_null(g_xmda_m.xmda004) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00145'  #請先輸入客戶編號
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
               NEXT FIELD xmda004
            END IF
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmda_m.xmda203           
            LET g_qryparam.default2 = g_xmda_m.xmda203_desc      
            LET g_qryparam.arg1 = g_xmda_m.xmda004
            LET g_qryparam.arg2 = g_site
            CALL q_pmac002_7()                               #呼叫開窗
            LET g_xmda_m.xmda203 = g_qryparam.return1              #將開窗取得的值回傳到變數
            LET g_xmda_m.xmda203_desc = g_qryparam.return2         #交易對象簡稱
            DISPLAY g_xmda_m.xmda203 TO xmda203              #顯示到畫面上
            DISPLAY g_xmda_m.xmda203_desc TO xmda203_desc    #交易對象簡稱
            NEXT FIELD xmda203                          #返回原欄位

]]>
  </point>
  <point name="input.c.xmdadocdt" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.xmdadocno" order="" ver="8" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmda_m.xmdadocno             #給予default值
            LET g_qryparam.arg1 = l_ooef004
            LET g_qryparam.arg2 = g_prog
            
            #150909 earl mod s
            IF NOT cl_null(g_xmda_m.xmda008) THEN
               CALL s_aooi210_get_search_sql(g_site,'',g_xmda_m.xmda008,g_prog) RETURNING l_success,l_where
               LET g_qryparam.where = l_where
            ELSE
               LET l_success = TRUE
            END IF
            
            IF l_success THEN
               CALL q_ooba002_1()                                #呼叫開窗
               LET g_xmda_m.xmdadocno = g_qryparam.return1              #將開窗取得的值回傳到變數
               DISPLAY g_xmda_m.xmdadocno TO xmdadocno              #顯示到畫面上
               CALL axmt500_xmdadocno_ref()
            END IF
            #150909 earl mod e
            
            NEXT FIELD xmdadocno                          #返回原欄位]]>
  </point>
  <point name="input.c.xmdasite" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.c.xmdastus" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.d.before_input" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.define" order="" ver="8" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE  l_success    LIKE type_t.num5
   DEFINE  l_flag       LIKE type_t.num5
   DEFINE  l_errno      LIKE type_t.chr10
   DEFINE  l_where      STRING     
   DEFINE  l_ooef004    LIKE ooef_t.ooef004
   DEFINE  l_pmaa027    LIKE pmaa_t.pmaa027    
   DEFINE  l_oocq019    LIKE oocq_t.oocq019     
   DEFINE  l_pmao002    LIKE pmao_t.pmao002
   DEFINE  l_pmao003    LIKE pmao_t.pmao003 
   DEFINE  l_pmao004    LIKE pmao_t.pmao004 
   DEFINE  l_imaf062    LIKE imaf_t.imaf062 
   DEFINE  l_xrcd113    LIKE xrcd_t.xrcd113
   DEFINE  l_xrcd114    LIKE xrcd_t.xrcd114
   DEFINE  l_xrcd115    LIKE xrcd_t.xrcd115    
   DEFINE  l_oodb005    LIKE oodb_t.oodb005    #含稅否
   DEFINE  l_oodb006    LIKE oodb_t.oodb006    #稅率 
   DEFINE  l_oodb011    LIKE oodb_t.oodb011    #取得稅別類型1:正常稅率2:依料件設定
   DEFINE  l_oodbl004   LIKE oodbl_t.oodbl004  #稅別名稱   
   DEFINE  l_gzcbl004   LIKE gzcbl_t.gzcbl004  
   DEFINE  l_xmdc015    LIKE xmdc_t.xmdc015    #重取價格 
   DEFINE  l_desc       LIKE type_t.chr80   
   DEFINE  l_bmaa001    LIKE bmaa_t.bmaa001    #主件料號
   DEFINE  l_bmaa002    LIKE bmaa_t.bmaa002    #特性
   DEFINE  l_bmla001    LIKE bmla_t.bmla001    #範本主件料號
   DEFINE  l_bmla002    LIKE bmla_t.bmla002    #特性   
   DEFINE  l_ooba002    LIKE ooba_t.ooba002    #單據別編號  20150824-dorislai-add]]>
  </point>
  <point name="input.define_sql" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="input.define_sql2" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="input.define_sql3" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="input.g.page1.imaal004" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page1.xmdc001" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page1.xmdc002" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page1.xmdc004" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page1.xmdc005" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page1.xmdc006" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page1.xmdc007" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page1.xmdc008" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page1.xmdc009" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page1.xmdc010" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page1.xmdc011" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page1.xmdc012" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page1.xmdc013" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page1.xmdc015" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page1.xmdc016" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page1.xmdc019" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF g_xmdc_d[l_ac].xmdc019 = '9'  THEN     #樣品
               LET g_xmdc_d[l_ac].xmdc015 = 0
               #LET g_xmdc_d[l_ac].xmdc046 = 0
               #LET g_xmdc_d[l_ac].xmdc047 = 0
               #LET g_xmdc_d[l_ac].xmdc048 = 0              
            ELSE
               CALL axmt500_get_xmdc015() RETURNING g_xmdc_d[l_ac].xmdc015                      
            END IF 
            CALL s_axmt500_get_amount(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq,g_xmdc_d[l_ac].xmdc011,g_xmdc_d[l_ac].xmdc015,g_xmdc_d[l_ac].xmdc016,g_xmda_m.xmda015,g_xmda_m.xmda016)
              RETURNING g_xmdc_d[l_ac].xmdc046,g_xmdc_d[l_ac].xmdc047,g_xmdc_d[l_ac].xmdc048             
            CALL axmt500_set_entry_b(l_cmd) 
            CALL axmt500_set_no_entry_b(l_cmd)             ]]>
  </point>
  <point name="input.g.page1.xmdc020" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page1.xmdc021" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page1.xmdc022" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page1.xmdc023" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page1.xmdc024" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF g_xmdc_d[l_ac].xmdc024 = 'Y' THEN
               CALL axmt500_03(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq,g_xmdc_d[l_ac].xmdc007)
                 RETURNING g_xmdc_d[l_ac].xmdc012,g_xmdc_d[l_ac].xmdc013
               IF cl_null(g_xmdc_d[l_ac].xmdc012) THEN
                   LET g_xmdc_d[l_ac].xmdc024 = 'N'
                   DISPLAY BY NAME g_xmdc_d[l_ac].xmdc024                  
               ELSE              
                   DISPLAY BY NAME g_xmdc_d[l_ac].xmdc012,g_xmdc_d[l_ac].xmdc013
               END IF                              
            ELSE
               LET l_cnt = 0 
               SELECT COUNT(*) INTO l_cnt
                 FROM xmdf_t 
                WHERE xmdfent = g_enterprise
                  AND xmdfdocno = g_xmda_m.xmdadocno
                  AND xmdfseq = g_xmdc_d_t.xmdcseq
               IF l_cnt > 0 THEN
                  IF cl_ask_confirm('axm-00528') THEN
                     DELETE FROM xmdf_t
                      WHERE xmdfent = g_enterprise
                        AND xmdfdocno = g_xmda_m.xmdadocno
                        AND xmdfseq = g_xmdc_d_t.xmdcseq 
                     LET g_xmdc_d[l_ac].xmdc012 = ''
                     LET g_xmdc_d[l_ac].xmdc013 = '' 
                     DISPLAY BY NAME g_xmdc_d[l_ac].xmdc012,g_xmdc_d[l_ac].xmdc013                   
                  ELSE
                     LET g_xmdc_d[l_ac].xmdc024 = 'Y'
                     DISPLAY BY NAME g_xmdc_d[l_ac].xmdc024                   
                  END IF
               END IF               
            END IF            ]]>
  </point>
  <point name="input.g.page1.xmdc027" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page1.xmdc045" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page1.xmdc049" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page1.xmdc050" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page1.xmdc052" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page1.xmdcorga" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page1.xmdcseq" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page1.xmdcunit" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page2.xmdc003" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page2.xmdc025" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page2.xmdc026" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page2.xmdc0272" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page2.xmdc028" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page2.xmdc029" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page2.xmdc030" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page2.xmdc031" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page2.xmdc032" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page2.xmdc033" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page2.xmdc034" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page2.xmdc036" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page2.xmdc037" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page2.xmdc038" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page2.xmdc039" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page3.xmdc012" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.page3.xmdc013" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmda001" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmda002" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmda003" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmda004" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmda005" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF g_xmda_m.xmda005 = '2' THEN
               LET g_xmda_m.xmda007 = '5'
            END IF
            IF g_xmda_m.xmda005 = '1' THEN
               LET g_xmda_m.xmda007 = '1'
            END IF            
            CALL axmt500_set_entry(p_cmd)
            CALL axmt500_set_no_entry(p_cmd)              ]]>
  </point>
  <point name="input.g.xmda006" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmda007" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF g_xmda_m.xmda005 = '2' THEN
               IF g_xmda_m.xmda007 <> '5' THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  'axm-00568'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  LET g_xmda_m.xmda007 = '5'
               END IF
            END IF
            CALL axmt500_set_entry(p_cmd)
            CALL axmt500_set_no_entry(p_cmd)                                                             ]]>
  </point>
  <point name="input.g.xmda008" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmda009" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmda010" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmda011" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmda012" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmda013" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmda015" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmda016" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmda017" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmda018" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmda019" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmda020" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmda021" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmda022" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmda023" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmda024" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmda025" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmda026" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmda027" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmda028" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmda030" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmda031" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmda032" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmda033" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmda034" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmda035" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmda036" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmda037" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmda038" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmda039" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmda043" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmda044" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmdadocdt" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmdadocno" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmdasite" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.g.xmdastus" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.head.a_insert" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #依來源單號自動出預先訂單單身
               IF g_xmda_m.xmda007 MATCHES "[25]" AND NOT cl_null(g_xmda_m.xmda008) AND g_xmdc_d.getLength() = 0 THEN
                  IF cl_ask_confirm('axm-00465') THEN
                     IF g_xmda_m.xmda007 = '2' THEN
                        #帶出預先訂單
                        IF NOT axmt500_advance_xmdc(g_xmda_m.xmda008) THEN
                           CALL s_transaction_end('N','0') 
                           CONTINUE DIALOG
                        END IF
                     END IF
                     IF g_xmda_m.xmda007 = '5' THEN  
                        #帶出銷退單                     
                        IF NOT axmt500_return_xmdc(g_xmda_m.xmda005,g_xmda_m.xmda008) THEN
                           CALL s_transaction_end('N','0') 
                           CONTINUE DIALOG
                        END IF   
                     END IF
                     CALL axmt500_b_fill()                     
                  END IF                
               END IF        
]]>
  </point>
  <point name="input.head.a_update" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                          ]]>
  </point>
  <point name="input.head.b_insert" order="" ver="4" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #單頭必要欄位資料檢查
               #收款條件
               IF NOT axmt500_xmda009_chk() THEN
                  NEXT FIELD xmda009
               END IF 
               #交易條件
               IF NOT s_azzi650_chk_exist('238',g_xmda_m.xmda010) THEN
                  NEXT FIELD xmda010
               END IF
               #稅別
               CALL s_tax_chk(g_site,g_xmda_m.xmda011) 
                 RETURNING l_success,g_xmda_m.xmda011_desc,g_xmda_m.xmda013,g_xmda_m.xmda012,l_oodb011
               IF NOT l_success THEN
                  NEXT FIELD xmda011
               END IF 
               #發票類型
               IF NOT axmt500_xmda035_chk() THEN
                  NEXT FIELD xmda035
               END IF    
               #幣別
               IF NOT axmt500_xmda015_chk(g_xmda_m.xmda015) THEN  
                  NEXT FIELD xmda015
               END IF
               #匯率
               IF NOT cl_ap_chk_range(g_xmda_m.xmda016,"0","0","","","azz-00079",1) THEN
                  NEXT FIELD xmda016
               END IF    
               #取價方式
               IF NOT axmt500_xmda017_chk() THEN
                  NEXT FIELD xmda017
               END IF
               #銷售通路
               IF NOT s_azzi650_chk_exist('275',g_xmda_m.xmda023) THEN
                  NEXT FIELD xmda023
               END IF
               #收款客戶
               IF NOT s_apmm100_chk_pmac002('2','1',g_xmda_m.xmda004,g_xmda_m.xmda021) THEN 
                  NEXT FIELD xmda021
               END IF
               #收貨客戶
               IF NOT s_apmm100_chk_pmac002('2','2',g_xmda_m.xmda004,g_xmda_m.xmda022) THEN
                  NEXT FIELD xmda022
               END IF
               
               #取單號
               CALL s_aooi200_gen_docno(g_site,g_xmda_m.xmdadocno,g_xmda_m.xmdadocdt,g_prog) RETURNING l_success,g_xmda_m.xmdadocno 
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apm-00003'
                  LET g_errparam.extend = g_xmda_m.xmdadocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  NEXT FIELD xmdadocno
                  CONTINUE DIALOG
               END IF 
               DISPLAY BY NAME g_xmda_m.xmdadocno 
               #取完單號後，如果是一次性交易對像，需回寫回完整單號                  
               IF g_pmaa004 MATCHES '[24]' AND NOT cl_null(g_xmda_m.xmda028) THEN
                  UPDATE pmak_t
                     SET pmak006 = g_xmda_m.xmdadocno
                   WHERE pmakent = g_enterprise
                     AND pmak001 = g_xmda_m.xmda028
               END IF               ]]>
  </point>
  <point name="input.head.b_update" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                          ]]>
  </point>
  <point name="input.head.m_insert" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                           ]]>
  </point>
  <point name="input.head.m_update" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                          ]]>
  </point>
  <point name="input.m.before_input" order="" ver="4" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                     ]]>
  </point>
  <point name="input.more_input" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.other_sql" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF p_cmd = 'u' THEN   
      #取得銷售分類
      LET g_pmab089 = g_xmda_m.xmda024
      #取得稅別類型
      CALL s_tax_chk(g_site,g_xmda_m.xmda011)
        RETURNING l_success,l_oodbl004,l_oodb005,l_oodb006,l_oodb011
      IF l_success THEN
         LET g_tax_app = l_oodb011
      END IF     
      #取得價格是否允許修改,修改容差率,價格超過容差率的處理方式,允許單價為0
       LET g_xmah003 = ''
       LET g_xmah006 = ''
       SELECT xmah003,xmah006
         INTO g_xmah003,g_xmah006
         FROM xmah_t       
        WHERE xmahent = g_enterprise
          AND xmah001 = g_xmda_m.xmda017             
   END IF   ]]>
  </point>
  <point name="insert.after" order="" ver="4" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL axmt500_show()]]>
  </point>
  <point name="insert.after_insert" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL axmt500_set_act_visible()      
      CALL axmt500_set_act_no_visible()   ]]>
  </point>
  <point name="insert.default" order="" ver="4" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      INITIALIZE g_xmda_m_t.* TO NULL       #axmt500 QC16
      LET g_xmda_m.xmdadocdt = g_today
      LET g_xmda_m.xmda002 = g_user
      LET g_xmda_m.xmdasite = g_site
      LET g_xmda_m_o.* = g_xmda_m.*              #舊值備份      
      CALL s_desc_get_person_desc(g_xmda_m.xmda002) RETURNING g_xmda_m.xmda002_desc
      DISPLAY BY NAME g_xmda_m.xmda002_desc       
      LET g_xmda_m.xmda003 = g_dept
      CALL s_desc_get_department_desc(g_xmda_m.xmda003) RETURNING g_xmda_m.xmda003_desc
      DISPLAY BY NAME g_xmda_m.xmda003_desc
      
      IF g_argv[01] = '8' THEN
         LET g_xmda_m.xmda005 = g_argv[01]
      END IF
      ]]>
  </point>
  <point name="insert.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="insert_b.after_insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="insert_b.after_insert2" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="insert_b.after_insert3" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="insert_b.before_insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="insert_b.before_insert2" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="insert_b.before_insert3" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="insert_b.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="insert_b.m_insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="insert_b.m_insert2" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="insert_b.m_insert3" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="insert_b.other" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="lock_b.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="lock_b.other" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="main.after_define_sql" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="main.before_close" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="main.define" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE  l_forupd_sql    STRING                  
   DEFINE  l_success  LIKE type_t.num5]]>
  </point>
  <point name="main.define_sql" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET l_forupd_sql = "SELECT xmdasite,xmdadocno,xmda001,'',xmdadocdt,xmda004,'',xmda002,'',xmda003, 
       '',xmdastus,xmda005,xmda006,xmda007,xmda008,xmda033,xmda027,'',xmda009,'',xmda010,'',xmda011, 
       '',xmda012,xmda013,xmda035,'',xmda015,'',xmda016,xmda017,'',xmda018,'',xmda019,xmda023,'',xmda032, 
       '',xmda071,xmda050,xmda021,'',xmda022,'',xmda034,'',xmda203,'',xmda024,'',xmda048,xmda049,xmda044,xmda030, 
       xmda031,xmda045,xmda046,xmda047,xmda028,xmda041,xmda042,xmda043,xmda025,'','',xmda026,'','',xmda020, 
       '',xmda037,'',xmda038,'',xmda036,'',xmdaownid,'',xmdaowndp,'',xmdacrtid,'',xmdacrtdp, 
       '',xmdacrtdt,xmdamodid,'',xmdamoddt,xmdacnfid,'',xmdacnfdt FROM xmda_t WHERE xmdaent= ? AND xmdadocno=?  
       FOR UPDATE"

   LET l_forupd_sql = cl_sql_forupd(l_forupd_sql)                #轉換不同資料庫語法
   LET l_forupd_sql = cl_sql_add_mask(l_forupd_sql)              #遮蔽特定資料
   DECLARE axmt500_cl2 CURSOR FROM l_forupd_sql
   ]]>
  </point>
  <point name="main.exit" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_item_select_drop_tmp()
   CALL s_abmm208_drop_table() RETURNING l_success]]>
  </point>
  <point name="main.init" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_item_select_create_tmp()
   CALL s_abmm208_create_table() RETURNING l_success
   
   #獲取當前營運據點的聯絡對象識別碼
   LET g_oofa001 = '' 
   SELECT oofa001 INTO g_oofa001 FROM oofa_t WHERE oofaent = g_enterprise AND oofa002 = '1' AND oofa003 = g_site
   
   #獲得當前營運據點的所屬稅區
   LET g_ooef019 = ''
   SELECT ooef019 INTO g_ooef019 FROM ooef_t WHERE ooefent = g_enterprise AND ooef001 = g_site
 
   LET g_acc = ''
   #抓取[T:系統分類值檔].[C:系統分類碼]=24且[T:系統分類值檔].[C:系統分類碼]=g_prog 的[T:系統分類值檔].[C:參考欄位>
   SELECT gzcb004 INTO g_acc FROM gzcb_t WHERE gzcb001 = '24' AND gzcb002 = g_prog
   
   LET g_flag1 = FALSE]]>
  </point>
  <point name="main.servicecall" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="menu.default.insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="menu.delete" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                          ]]>
  </point>
  <point name="menu.direct_orders" order="" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #--151210-00002#1--mark--(s)
               #LET l_cnt = 0
               #SELECT COUNT(*) INTO l_cnt
               #  FROM xmda_t,xmdc_t
               # WHERE xmdaent= xmdcent
               #   AND xmdadocno = xmdcdocno
               #   AND xmdcent = g_enterprise
               #   AND xmdcdocno = g_xmda_m.xmdadocno
               #   AND xmdastus = 'Y'
               #   AND xmdc032 = '3'                     #3:供應商直送            
               #IF l_cnt > 0 THEN
               #--151210-00002#1--mark--(e)
               IF axmt500_chk_apmt500() THEN             #151210-00002#1 add        
                  CALL s_transaction_begin()
                  IF NOT s_axmt500_direct_orders(g_xmda_m.xmdadocno) THEN
                     CALL s_transaction_end('N','0')
                  ELSE
                     CALL s_transaction_end('Y','0')
                  END IF                   
               END IF]]>
  </point>
  <point name="menu.get_price" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               LET l_cnt = 0
               SELECT COUNT(*) INTO l_cnt
                 FROM xmdc_t
                WHERE xmdcent = g_enterprise
                  AND xmdcdocno = g_xmda_m.xmdadocno
               IF cl_null(l_cnt) OR l_cnt = 0 THEN               
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'agl-00066'
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  EXIT DIALOG
               END IF
               IF cl_ask_confirm('apm-00801') THEN                              
                  CALL s_transaction_begin()
                  IF NOT axmt500_change_xmdc015('u') THEN
                     CALL s_transaction_end('N','0') 
                     EXIT DIALOG                  
                   END IF 
                   CALL s_transaction_end('Y','0') 
               END IF 
              ]]>
  </point>
  <point name="menu.insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                          ]]>
  </point>
  <point name="menu.make_apmt400" order="" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[              #--151210-00002#1--add--(s)
               IF axmt500_chk_apmt400() THEN
                  CALL cl_err_collect_init()
                  CALL s_transaction_begin()
                  IF NOT s_axmt500_make_apmt400(g_xmda_m.xmdadocno) THEN
                     CALL s_transaction_end('N','0')
                  ELSE
                     CALL s_transaction_end('Y','0')
                  END IF 
                  CALL cl_err_collect_show()                  
               END IF               
              #--151210-00002#1--add--(e) ]]>
  </point>
  <point name="menu.modify" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                          ]]>
  </point>
  <point name="menu.modify_detail" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                          ]]>
  </point>
  <point name="menu.open_apmi004_01" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #若輸入供應商的法人類型為'2:一次性交易'或是'4:內部員工'時，則自動串apmi004_01
               #維護一次性交易對項基本資料，維護完基本資料後會回傳一個一次性交易對象識別碼，
               #將識別碼值預設給xmda028欄位
               IF NOT cl_null(g_xmda_m.xmda004) THEN
                  LET g_pmaa004 = ''
                  SELECT pmaa004 INTO g_pmaa004 FROM pmaa_t WHERE pmaaent = g_enterprise AND pmaa001 = g_xmda_m.xmda004
                  IF g_pmaa004 = '2' THEN   #一次性交易對象
                     CALL apmi004_01('1',g_xmda_m.xmda028,g_xmda_m.xmda004,g_xmda_m.xmdadocno) RETURNING g_xmda_m.xmda028
                  END IF
                  IF g_pmaa004 = '4' THEN   #內部員工
                     CALL apmi004_01('2',g_xmda_m.xmda028,g_xmda_m.xmda004,g_xmda_m.xmdadocno) RETURNING g_xmda_m.xmda028
                  END IF                       
               END IF   ]]>
  </point>
  <point name="menu.open_axmq140" order="" ver="7" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_xmda_m.xmda004) THEN
                  CALL cl_cmdrun("axmq140 '"||g_site||"' '"||g_xmda_m.xmda004||"'")
               END IF]]>
  </point>
  <point name="menu.open_axmt500_02" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL axmt500_02(g_xmda_m.xmdadocno)]]>
  </point>
  <point name="menu.open_axmt500_03" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               LET l_cnt = 0
               SELECT COUNT(*) INTO l_cnt
                 FROM xmdc_t
                WHERE xmdcent = g_enterprise
                  AND xmdcdocno = g_xmda_m.xmdadocno
               IF cl_null(l_cnt) OR l_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'agl-00066'
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  EXIT DIALOG
               END IF
               CALL s_transaction_begin()
               CALL axmt500_03(g_xmda_m.xmdadocno,g_xmdc_d[g_detail_idx].xmdcseq,g_xmdc_d[g_detail_idx].xmdc007)
                 RETURNING l_xmdc012,l_xmdc013
               #xmdc012、xmdc013其中一個有值,表示有多交期資料,就將抓到的值寫回xmdc_t
               IF NOT (cl_null(l_xmdc012) AND cl_null(l_xmdc013)) THEN               
                  #修改約定交貨日、預定簽收日
                  UPDATE xmdc_t
                     SET xmdc012 = l_xmdc012,
                         xmdc013 = l_xmdc013,
                         xmdc024 = 'Y'
                   WHERE xmdcent = g_enterprise
                     AND xmdcdocno = g_xmda_m.xmdadocno
                     AND xmdcseq = g_xmdc_d[g_detail_idx].xmdcseq
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code   = SQLCA.sqlcode
                     LET g_errparam.extend = "UPDATE xmdc012,xmdc013"
                     LET g_errparam.popup  = FALSE
                     CALL cl_err()                  
                     CALL s_transaction_end('N','0')
                     EXIT DIALOG
                  END IF  
               END IF
               
               #修改後，需重新產生交期明細資料
               IF NOT s_axmt500_gen_xmdd(g_xmda_m.xmdadocno,g_xmdc_d[g_detail_idx].xmdcseq) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "xmdd_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  EXIT DIALOG
               END IF
               CALL s_transaction_end('Y','0')
               CALL axmt500_b_fill()                  ]]>
  </point>
  <point name="menu.open_axmt500_05" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               LET l_cnt = 0
               SELECT COUNT(*) INTO l_cnt
                 FROM xmdc_t
                WHERE xmdcent = g_enterprise
                  AND xmdcdocno = g_xmda_m.xmdadocno
               IF cl_null(l_cnt) OR l_cnt = 0 THEN               
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'agl-00066'
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  EXIT DIALOG
               END IF
               
               #判斷單身料件是否有使用附屬零件/可選件，才可開啟訂單附屬零件明細作業               
               IF NOT axmt500_get_bmab(g_xmdc_d[g_detail_idx].xmdc001,g_xmdc_d[g_detail_idx].xmdcunit) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'axm-00273'
                   LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()            
               ELSE 
                  CALL s_transaction_begin()
                  IF axmt500_05(g_xmda_m.xmdadocno,g_xmdc_d[g_detail_idx].xmdcseq) THEN
                      #重新產生交期明細
                      IF NOT s_axmt500_gen_xmdd(g_xmda_m.xmdadocno,g_xmdc_d[g_detail_idx].xmdcseq) THEN
                         INITIALIZE g_errparam TO NULL
                         LET g_errparam.code = SQLCA.sqlcode
                         LET g_errparam.extend = "UPDATE xmdd_t"
                         LET g_errparam.popup = TRUE
                         CALL cl_err()       
                         CALL s_transaction_end('N','0')                    
                      ELSE
                         CALL s_transaction_end('Y','0')
                         CALL axmt500_b_fill()                        
                      END IF                             
                  ELSE
                      INITIALIZE g_errparam TO NULL
                      LET g_errparam.code = SQLCA.sqlcode
                      LET g_errparam.extend = "INSERT xmdq_t"
                      LET g_errparam.popup = TRUE
                     CALL cl_err()
                     CALL s_transaction_end('N','0')                  
                  END IF                  
               END IF                   ]]>
  </point>
  <point name="menu.open_memo" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL aooi360_02('6',g_prog,g_xmda_m.xmdadocno,'','','','','','','','','4')]]>
  </point>
  <point name="menu.open_xmdb" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL s_transaction_begin()
               #CALL axmt500_open_xmdb()
               IF NOT axmt500_action_modify('P') THEN
                  CALL cl_err_collect_show()
               END IF               
               CALL axmt500_b_fill()
               LET INT_FLAG = FALSE]]>
  </point>
  <point name="menu.output" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               LET g_rep_wc = " xmdaent = '",g_enterprise,"' AND xmdadocno = '",g_xmda_m.xmdadocno,"' "]]>
  </point>
  <point name="menu.prog_xmda002" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL cl_user_contact("aooi130", "ooag_t", "ooag002", "ooag001",g_xmda_m.xmda002)]]>
  </point>
  <point name="menu.prog_xmda008" order="" ver="4" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #應用 a41 樣板自動產生(Version:2)
               #使用JSON格式組合參數與作業編號(串查)
               #抓取單據別
               LET g_slip = ''
               LET l_prog = ''
               IF NOT cl_null(g_xmda_m.xmda008) THEN
                  CALL s_aooi200_get_slip(g_xmda_m.xmda008) RETURNING l_success,g_slip
                  IF NOT cl_null(g_slip) THEN
                     SELECT oobx004 INTO l_prog
                       FROM oobx_t
                      WHERE oobxent = g_enterprise
                        AND oobx001 = g_slip
                  END IF
                  IF NOT cl_null(l_prog) THEN
                     INITIALIZE la_param.* TO NULL
                     LET la_param.prog     = l_prog
                     IF l_prog = 'adbt600' THEN
                        LET la_param.param[2] = g_xmda_m.xmda008
                     ELSE
                        LET la_param.param[1] = g_xmda_m.xmda008
                     END IF
                     
                     LET ls_js = util.JSON.stringify(la_param)
                     CALL cl_cmdrun_wait(ls_js)
                  END IF
               END IF]]>
  </point>
  <point name="menu.prog_xmda027" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #20151028 by stellar modify ----- (S)
               #CALL cl_user_contact("aooi130", "ooag_t", "ooag002", "ooag001",g_xmda_m.xmda027) 
               CALL cl_user_contact("axmi100", "pmaj_t", "pmaj002", "pmaj001,pmaj002",g_xmda_m.xmda004||','||g_xmda_m.xmda027) 
               #20151028 by stellar modify ----- (E)               ]]>
  </point>
  <point name="menu.query" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                          ]]>
  </point>
  <point name="menu.reproduce" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                          ]]>
  </point>
  <point name="menu.s_item_select" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF cl_ask_confirm("axm-00394") THEN     #是否由產品分類快速產生單身資料！  
                  CALL axmt500_from_sub_get_body1()
               END IF]]>
  </point>
  <point name="modify.after_input" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="modify.before_input" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      LET g_xmda_m_o.* = g_xmda_m.*  #舊值備份
      #「D抽單 / R已拒絕」狀況碼更改資料後，需還原為「N未確認」
      IF g_xmda_m.xmdastus MATCHES "[DR]" THEN 
         LET g_xmda_m.xmdastus = "N"
      END IF ]]>
  </point>
  <point name="modify.before_show" order="" ver="4" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="modify.body.a_fk_update" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="modify.body.a_fk_update2" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="modify.body.a_fk_update3" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="modify.body.b_fk_update" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="modify.body.b_fk_update2" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="modify.body.b_fk_update3" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="modify.body.m_fk_update" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="modify.body.m_fk_update2" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="modify.body.m_fk_update3" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="modify.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="query.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="query.other" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="reproduce.after_reproduce" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL axmt500_set_act_visible()      
   CALL axmt500_set_act_no_visible()   ]]>
  </point>
  <point name="reproduce.define" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE i           LIKE type_t.num5               ]]>
  </point>
  <point name="reproduce.head.b_input" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_xmda_m.xmda001 = 0
   LET g_xmda_m.xmda030 = 'N'    #多角貿易已拋轉
   LET g_xmda_m.xmda031 = ''     #多角來源單號
   LET g_xmda_m.xmda032 = ''     #留置原因   
   LET g_xmda_m.xmda045 = 'N'    #物流結案
   LET g_xmda_m.xmda046 = 'N'    #帳流結案
   LET g_xmda_m.xmda047 = 'N'    #金流結案
   LET g_xmda_m.xmdastus = 'N'
   LET g_xmda_m.xmda002 = g_user
   CALL s_desc_get_person_desc(g_xmda_m.xmda002) RETURNING g_xmda_m.xmda002_desc 
   LET g_xmda_m.xmda003 = g_dept
   CALL s_desc_get_department_desc(g_xmda_m.xmda003) RETURNING g_xmda_m.xmda003_desc
   LET g_xmda_m.xmdadocdt = g_today
   LET g_xmda_m.xmdacnfid = ""
   LET g_xmda_m.xmdacnfdt = ""   
   
   FOR i = 1 TO g_xmdc3_d.getLength()
       LET g_xmdc3_d[i].xmdd014 = 0
       LET g_xmdc3_d[i].xmdd015 = 0
       LET g_xmdc3_d[i].xmdd016 = 0
       LET g_xmdc3_d[i].xmdd031 = 0
       DISPLAY BY NAME g_xmdc3_d[i].xmdd014,g_xmdc3_d[i].xmdd015,g_xmdc3_d[i].xmdd016,g_xmdc3_d[i].xmdd031
   END FOR
   FOR i = 1 TO g_xmdc5_d.getLength()
       LET g_xmdc5_d[i].xmdb007 = ''
       DISPLAY BY NAME g_xmdc5_d[i].xmdb007
   END FOR]]>
  </point>
  <point name="send.before_send" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF NOT s_axmt500_conf_chk(g_xmda_m.xmdadocno) THEN
      CLOSE axmt500_cl
      CALL s_transaction_end('N','0') 
      RETURN
   END IF]]>
  </point>
  <point name="set_act_no_visible.define" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success  LIKE type_t.num5
   DEFINE l_flag     LIKE type_t.num5 
   DEFINE l_cnt      LIKE type_t.num5 ]]>
  </point>
  <point name="set_act_no_visible.set_act_no_visible" order="" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
   # N未確認/D抽單/R已拒絕允許修改
   IF g_xmda_m.xmdastus NOT MATCHES "[NDR]" THEN
      CALL cl_set_act_visible("modify,delete,modify_detail,s_item_select,open_apmi004_01,open_xmdb,open_axmt500_03,open_axmt500_05,get_price", FALSE) 
   END IF 
     
   IF g_xmda_m.xmdastus != 'Y' THEN  
      CALL cl_set_act_visible("open_axmt500_02,direct_orders,make_apmt400", FALSE)   #151210-00002#1 add make_apmt400          
   END IF
   
   IF NOT cl_null(g_xmda_m.xmda004) THEN
      LET g_pmaa004 = ''
      SELECT pmaa004 INTO g_pmaa004 FROM pmaa_t WHERE pmaaent = g_enterprise AND pmaa001 = g_xmda_m.xmda004
      IF g_pmaa004 NOT MATCHES '[24]' THEN
         CALL cl_set_act_visible("open_apmi004_01", FALSE)
      END IF
   ELSE
      CALL cl_set_act_visible("open_apmi004_01", FALSE)
   END IF    
  #--151210-00002#1--mark--(s)  
  #LET l_cnt = 0
  #SELECT COUNT(*) INTO l_cnt
  #  FROM xmdc_t
  # WHERE xmdcent = g_enterprise
  #   AND xmdcdocno = g_xmda_m.xmdadocno
  #   AND xmdc032 = '3'                    #供應商直送
  #IF l_cnt = 0 THEN
  #   CALL cl_set_act_visible("direct_orders", FALSE)
  #END IF  
  #--151210-00002#1--mark--(e)
   #判斷當下的營運據點是否在控制組限制的營運據點範圍內，若不在限制內則不允許新增
   CALL s_control_chk_group('5','3',g_user,g_dept,g_site,'','','','') RETURNING l_success,l_flag
   IF l_success THEN                            #處理狀態為FALSE，則隱藏新增按鈕
      IF NOT l_flag THEN                        #不在控制組範圍內
         CALL cl_set_act_visible("insert", FALSE)
      END IF 
   ELSE
      CALL cl_set_act_visible("insert", FALSE)
   END IF  

   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF NOT cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
   
   #來源類型是EC時，資料不可複製
   IF g_xmda_m.xmda007 = '9' THEN
      CALL cl_set_act_visible("reproduce",FALSE)
   END IF]]>
  </point>
  <point name="set_act_visible.set_act_visible" order="" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
   #基礎ACTION權限開啟
   CALL cl_set_act_visible("insert,modify,delete,modify_detail,s_item_select", TRUE) 
   
   #其他ACTION權限開啟
   CALL cl_set_act_visible("open_apmi004_01,open_xmdb,open_axmt500_02,open_axmt500_03,open_axmt500_05,direct_orders,get_price", TRUE) 
   CALL cl_set_act_visible("make_apmt400", TRUE)      #151210-00002#1 add
   
   #BPM ACTION權限開啟
   CALL cl_set_act_visible("bpm_status",TRUE)
   
   CALL cl_set_act_visible("reproduce",TRUE)]]>
  </point>
  <point name="set_entry.after_control" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #欄位隱藏/不可編輯，則不可將欄位開啟/關閉，不然會頁籤切換會有問題
   CALL cl_set_comp_entry("xmda004,xmda002,xmda003,xmda005,xmda006",TRUE)
   CALL cl_set_comp_entry("xmda007,xmda008,xmda033,xmda027,xmda009",TRUE)
   CALL cl_set_comp_entry("xmda010,xmda011,xmda035,xmda015,xmda017",TRUE)
   CALL cl_set_comp_entry("xmda018,xmda019,xmda023,xmda071,xmda050",TRUE)
   CALL cl_set_comp_entry("xmda021,xmda022,xmda034,xmda024,xmda048",TRUE)
   CALL cl_set_comp_entry("xmda049,xmda044,xmda025,xmda026,xmda020",TRUE)
   CALL cl_set_comp_entry("xmda037,xmda038,xmda036,xmda039",TRUE)]]>
  </point>
  <point name="set_entry.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="set_entry.field_control" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL cl_set_comp_entry("xmdadocdt",TRUE) ]]>
  </point>
  <point name="set_entry_b.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="set_entry_b.set_entry_b" order="" ver="8" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("xmddseq",TRUE)
   CALL cl_set_comp_entry("xmdb001,xmdb002,xmdb003,xmdb004,xmdb005,xmdb006",TRUE)
   CALL cl_set_comp_entry("xmdc002,xmdc029,xmdc030",TRUE) 
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0028') = 'Y' THEN
       CALL cl_set_comp_entry("xmdc008,xmdc009",TRUE) 
   END IF
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0007') = "Y" THEN
      CALL cl_set_comp_entry("xmdc010,xmdc011",TRUE) 
   END IF   
   CALL cl_set_comp_entry("xmdc015,xmdc016,xmdcunit",TRUE) 
   CALL cl_set_comp_entry("xmdc057",TRUE)
   
   CALL cl_set_comp_entry("xmdc036",TRUE)  #add by lixiang 2015/06/29
   CALL cl_set_comp_entry("l_pmao009,l_pmao010",TRUE)
   
   CALL cl_set_comp_entry("xmdc001",TRUE)  
   ]]>
  </point>
  <point name="set_no_entry.after_control" order="" ver="8" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #依單據別設定aooi200的欄位預設值不可更改，將欄位關閉
   IF NOT cl_null(g_xmda_m.xmdadocno) THEN
      LET l_fields = ''
      CALL s_aooi200_get_doc_fields(g_site,'1',g_xmda_m.xmdadocno) RETURNING l_fields
      CALL cl_set_comp_entry(l_fields,FALSE)
   END IF
   
   IF NOT g_flag1 THEN
      CALL cl_set_comp_entry("xmda039",FALSE) 
   END IF
  
   CALL cl_set_comp_entry("xmda043",FALSE)
        
   IF g_xmda_m.xmda007 = '1' THEN
      CALL cl_set_comp_entry("xmda008",FALSE) 
   END IF
   
   #當單頭多角性質為'2'銷售多角時，多角流程代碼才可維護
   IF g_xmda_m.xmda006 <> '2' THEN
      CALL cl_set_comp_entry("xmda050",FALSE)
   END IF
   
   IF g_argv[01] = '8' THEN
      CALL cl_set_comp_entry("xmda005",FALSE)
   END IF
   
   #當來源類型為EC時，來源類型欄位不可修改
   IF g_xmda_m.xmda007 = '9' THEN
      CALL cl_set_comp_entry("xmda007",FALSE)
   END IF]]>
  </point>
  <point name="set_no_entry.define" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_pmam003   LIKE pmam_t.pmam003 
   DEFINE l_fields    STRING  ]]>
  </point>
  <point name="set_no_entry.field_control" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL cl_set_comp_entry("xmdadocdt",FALSE) ]]>
  </point>
  <point name="set_no_entry_b.define" order="" ver="8" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_inaa007    LIKE inaa_t.inaa007
   DEFINE l_fields     STRING ]]>
  </point>
  <point name="set_no_entry_b.set_no_entry_b" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("xmddseq",FALSE)  
   CALL cl_set_comp_entry("xmdb001",FALSE)  
   
   #單頭多角性質為"3:統銷統收"、"4:統銷自收"時，出貨據點才可維護
   IF g_xmda_m.xmda006 NOT MATCHES '[34]' THEN
      CALL cl_set_comp_entry("xmdcunit",FALSE)
   END IF

   #若不為2依料件，則單身稅別不可輸入
   IF g_tax_app <> '2' THEN
      CALL cl_set_comp_entry("xmdc016",FALSE)
   END IF
   #單頭取價方式的基本資料設置不允許修改單價，單身子件特性為9樣品時，可允許修改單價
   IF g_xmah003 <> 'Y' AND g_xmdc_d[l_ac].xmdc019 <> '9' THEN
      CALL cl_set_comp_entry("xmdc015",FALSE)
   END IF

   IF cl_null(g_xmdc_d[l_ac].xmdc001) THEN
      CALL cl_set_comp_entry("xmdc002",FALSE)
   ELSE
      #料件主檔無特徵類別，不能維護產品特徵
      IF cl_get_para(g_enterprise,g_site,'S-BAS-0036') = 'Y' THEN
         LET g_imaa005 = ''
         CALL s_axmt500_get_imaa005(g_enterprise,g_xmdc_d[l_ac].xmdc001) RETURNING g_imaa005
         IF cl_null(g_imaa005) THEN
            CALL cl_set_comp_entry("xmdc002",FALSE)
            LET g_xmdc_d[l_ac].xmdc002 = ' '
         END IF
      END IF

      #[T:料件據點進銷存檔].[C:批號控管]=1或3時才可輸入
      IF g_imaf061 NOT MATCHES '[13]' THEN
         LET g_xmdc2_d[l_ac].xmdc030 = ' '
         CALL cl_set_comp_entry("xmdc030",FALSE)
      END IF
      #儲位控管若為5.不使用儲位控管，則不能維護儲位
      IF NOT cl_null(g_xmdc2_d[l_ac].xmdc028) THEN
         LET l_inaa007 = ''
         SELECT inaa007 INTO l_inaa007
           FROM inaa_t
          WHERE inaaent = g_enterprise
            AND inaasite = g_site
            AND inaa001 = g_xmdc2_d[l_ac].xmdc028
         IF l_inaa007 = '5' THEN
            CALL cl_set_comp_entry("xmdc029",FALSE)
         END IF
      END IF
      #計價單位、計價數量
      IF cl_get_para(g_enterprise,g_site,'S-BAS-0007') = 'N' THEN
         LET g_xmdc_d[l_ac].xmdc010 = g_xmdc_d[l_ac].xmdc006
         LET g_xmdc_d[l_ac].xmdc011 = g_xmdc_d[l_ac].xmdc007
      ELSE
         IF cl_null(g_imaf113) THEN
            CALL cl_set_comp_entry("xmdc010,xmdc011",FALSE)   
            LET g_xmdc_d[l_ac].xmdc010 = g_xmdc_d[l_ac].xmdc006
            LET g_xmdc_d[l_ac].xmdc011 = g_xmdc_d[l_ac].xmdc007  
         END IF            
      END IF      
      #參考單位、參考數量      
      IF cl_get_para(g_enterprise,g_site,'S-BAS-0028') = 'N' THEN
         LET g_xmdc_d[l_ac].xmdc008 = ''
         LET g_xmdc_d[l_ac].xmdc009 = ''        
      ELSE 
         IF cl_null(g_imaf015) THEN
            CALL cl_set_comp_entry("xmdc008,xmdc009",FALSE)  
            LET g_xmdc_d[l_ac].xmdc008 = ''
            LET g_xmdc_d[l_ac].xmdc009 = ''           
         END IF   
      END IF       
   END IF    
   #多期預付款頁籤：已經有應收帳款與已收金額的資料不可以進行修改
   IF (NOT cl_null(g_xmdc5_d_t.xmdb007)) AND (g_xmdc5_d_t.xmdb008> 0 OR g_xmdc5_d_t.xmdb009 > 0)  OR  NOT g_flag1 THEN
      CALL cl_set_comp_entry("xmdb001,xmdb002,xmdb003,xmdb004,xmdb005,xmdb006",FALSE)
   END IF
   #多期預付款頁籤：依照單價含稅否開收未稅、含稅欄位輸入
   IF g_xmda_m.xmda013 = 'Y' THEN
      CALL cl_set_comp_entry("xmdb005",FALSE)
   ELSE
      CALL cl_set_comp_entry("xmdb006",FALSE)   
   END IF  

   #若無使用庫存管理特徵時，則不允許輸入        
   IF g_imaf055 = '2' THEN       
      CALL cl_set_comp_entry("xmdc057",FALSE)
   END IF
   
   #add by lixiang 2015/06/29--s---
   #依訂單單別參數（D-BAS-0095）設定的"專案類型"抓取專案與訂單連動(pjaa003)、專案編號與訂單單號一致(pjaa004)資料
   #pjaa003="Y" AND pjaa004="Y" 則專案編號欄位不可輸，預設帶入訂單單號
   LET g_pjaa001 = ''
   LET g_pjaa001 =  cl_get_doc_para(g_enterprise,g_site,g_slip,'D-BAS-0095')
   IF NOT cl_null(g_pjaa001) THEN
      LET g_pjaa003 = ''
      LET g_pjaa004 = ''
      SELECT pjaa003,pjaa004 INTO g_pjaa003,g_pjaa004 FROM pjaa_t WHERE pjaaent = g_enterprise AND pjaa001 = g_pjaa001
      IF g_pjaa003 = 'Y' AND g_pjaa004 = 'Y' THEN
         LET g_xmdc2_d[l_ac].xmdc036 = g_xmda_m.xmdadocno
         DISPLAY BY NAME g_xmdc2_d[l_ac].xmdc036
         CALL cl_set_comp_entry("xmdc036",FALSE)
      END IF
   END IF
   #add by lixiang 2015/06/29--e----
   
   IF g_pmao_flag ='Y' THEN
   ELSE
      CALL cl_set_comp_entry("l_pmao009,l_pmao010",FALSE)
   END IF
   
   #add by lixiang 150821-00016#1--start---
   #判斷資料來源為"EC"時，料號欄位不可修改
   IF g_xmda_m.xmda007 = '9' AND p_cmd = 'u' THEN  #modify by lixiang 2015/10/21 #修改時，料號欄位不可修改
      CALL cl_set_comp_entry("xmdc001",FALSE)
   END IF
   #add by lixiang 150821-00016#1--end---     
   ]]>
  </point>
  <point name="show.after" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[              
   #如果項次為空的話就把資料刪掉 
   IF g_xmdc_d.getLength() > 0 THEN
      IF cl_null(g_xmdc_d[g_xmdc_d.getLength()].xmdcseq) THEN
         CALL g_xmdc_d.deleteElement(g_xmdc_d.getLength())
      END IF
   END IF
         ]]>
  </point>
  <point name="show.before" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="show.body.reference" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL s_desc_get_tax_desc1(g_site,g_xmdc_d[l_ac].xmdc016) RETURNING g_xmdc_d[l_ac].xmdc016_desc
      DISPLAY BY NAME g_xmdc_d[l_ac].xmdc016_desc  
      
      #取得產品特徵說明 
      CALL s_feature_description(g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc002)
           RETURNING l_success,g_xmdc_d[l_ac].xmdc002_desc
 
      IF g_xmdc_d[l_ac].xmdc045 MATCHES '[5]' THEN      #留置
         CALL s_desc_get_acc_desc('297',g_xmdc_d[l_ac].xmdc053) RETURNING g_xmdc_d[l_ac].xmdc053_desc                      
      END IF
      IF g_xmdc_d[l_ac].xmdc045 MATCHES '[234]' THEN     #結案
         CALL s_desc_get_acc_desc('284',g_xmdc_d[l_ac].xmdc053) RETURNING g_xmdc_d[l_ac].xmdc053_desc                      
      END IF 
 ]]>
  </point>
  <point name="show.body2.reference" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdc2_d[l_ac].xmdcseq = g_xmdc_d[l_ac].xmdcseq
            LET g_xmdc2_d[l_ac].imaa001 = g_xmdc_d[l_ac].xmdc001
            LET g_xmdc2_d[l_ac].imaal003 = g_xmdc_d[l_ac].xmdc001_desc
            LET g_xmdc2_d[l_ac].imaal004 = g_xmdc_d[l_ac].xmdc001_desc_desc
            LET g_xmdc2_d[l_ac].imaa005 = g_xmdc_d[l_ac].xmdc002
            LET g_xmdc2_d[l_ac].xmdc0272 = g_xmdc_d[l_ac].xmdc027 
            DISPLAY BY NAME g_xmdc2_d[l_ac].xmdcseq,g_xmdc2_d[l_ac].imaa001,g_xmdc2_d[l_ac].imaal003,
                            g_xmdc2_d[l_ac].imaal004,g_xmdc2_d[l_ac].imaa005,g_xmdc2_d[l_ac].xmdc0272            
                            
      #取得產品特徵說明 
      CALL s_feature_description(g_xmdc2_d[l_ac].imaa001,g_xmdc2_d[l_ac].imaa005)
           RETURNING l_success,g_xmdc2_d[l_ac].imaa005_desc 
           ]]>
  </point>
  <point name="show.body3.reference" order="" ver="4" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      #抓取約定交貨日、預計簽收日期
     SELECT xmdc012,xmdc013 
        INTO g_xmdc3_d[l_ac].xmdc012,g_xmdc3_d[l_ac].xmdc013
        FROM xmdc_t
       WHERE xmdcent = g_enterprise
         AND xmdcdocno = g_xmda_m.xmdadocno
         AND xmdcseq = g_xmdc3_d[l_ac].xmddseq
      DISPLAY BY NAME g_xmdc3_d[l_ac].xmdc012,g_xmdc3_d[l_ac].xmdc013      
      
      CALL s_desc_get_tax_desc1(g_site,g_xmdc3_d[l_ac].xmdd019) RETURNING g_xmdc3_d[l_ac].xmdd019_desc
      DISPLAY BY NAME g_xmdc3_d[l_ac].xmdd019_desc 
      
      #取得產品特徵說明 
      CALL s_feature_description(g_xmdc3_d[l_ac].xmdd001,g_xmdc3_d[l_ac].xmdd002)
        RETURNING l_success,g_xmdc3_d[l_ac].xmdd002_desc 
      DISPLAY BY NAME g_xmdc3_d[l_ac].xmdd002_desc     
      CALL s_desc_get_tax_desc1(g_site,g_xmdc3_d[l_ac].xmdd019) RETURNING g_xmdc3_d[l_ac].xmdd019_desc                                                      
      DISPLAY BY NAME g_xmdc3_d[l_ac].xmdd019_desc]]>
  </point>
  <point name="show.body4.reference" order="" ver="1" cite_std="" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xmdc4_d[l_ac].xmdq001
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xmdc4_d[l_ac].xmdq001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xmdc4_d[l_ac].xmdq001_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xmdc4_d[l_ac].xmdq008
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xmdc4_d[l_ac].xmdq008_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xmdc4_d[l_ac].xmdq008_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xmdc4_d[l_ac].xmdq002
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xmdc4_d[l_ac].xmdq002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xmdc4_d[l_ac].xmdq002_desc
]]>
  </point>
  <point name="show.body5.reference" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      #取得多期帳款頁的單身，收款條件的說明 
      SELECT ooibl004 INTO g_xmdc5_d[l_ac].xmdb002_desc
        FROM ooibl_t
       WHERE ooiblent = g_enterprise
         AND ooibl002 = g_xmdc5_d[l_ac].xmdb002
         AND ooibl003 = g_dlang    ]]>
  </point>
  <point name="show.define" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE  l_pmaa027    LIKE pmaa_t.pmaa027
   DEFINE  r_success    LIKE type_t.num5 
   DEFINE  r_address    STRING    
   DEFINE  l_success    LIKE type_t.num5 ]]>
  </point>
  <point name="show.head.reference" order="" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL axmt500_xmdadocno_ref() 

            CALL axmt500_xmda027_ref()

            CALL s_desc_get_tax_desc1(g_site,g_xmda_m.xmda011) RETURNING g_xmda_m.xmda011_desc
            DISPLAY BY NAME g_xmda_m.xmda011_desc
                     
            IF g_pmaa004 MATCHES '[24]' THEN
               CALL axmt500_xmda028_ref(g_xmda_m.xmda028) RETURNING g_xmda_m.xmda004_desc
            ELSE
               CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda004) RETURNING g_xmda_m.xmda004_desc
            END IF

            CALL axmt500_xmda035_ref(g_xmda_m.xmda035) RETURNING g_xmda_m.xmda035_desc
            DISPLAY BY NAME g_xmda_m.xmda035_desc
            
            CALL s_apmi011_location_ref(g_xmda_m.xmda020,g_xmda_m.xmda037) RETURNING g_xmda_m.xmda037_desc
            DISPLAY BY NAME g_xmda_m.xmda037_desc

            CALL s_apmi011_location_ref(g_xmda_m.xmda020,g_xmda_m.xmda038) RETURNING g_xmda_m.xmda038_desc
            DISPLAY BY NAME g_xmda_m.xmda038_desc

            LET g_xmda_m.xmda025_desc = ''
            LET g_xmda_m.oofb0171 = ''
            IF NOT cl_null(g_xmda_m.xmda022) AND NOT cl_null(g_xmda_m.xmda025) THEN   
               CALL axmt500_xmda025_ref(g_xmda_m.xmda022,g_xmda_m.xmda025) RETURNING g_xmda_m.xmda025_desc,g_xmda_m.oofb0171
               DISPLAY BY NAME g_xmda_m.xmda025_desc,g_xmda_m.oofb0171                    
            END IF
            
            LET g_xmda_m.xmda026_desc = ''
            LET g_xmda_m.oofb0172 = ''
            IF NOT cl_null(g_xmda_m.xmda021) AND NOT cl_null(g_xmda_m.xmda026) THEN 
               CALL axmt500_xmda025_ref(g_xmda_m.xmda021,g_xmda_m.xmda026) RETURNING g_xmda_m.xmda026_desc,g_xmda_m.oofb0172
               DISPLAY BY NAME g_xmda_m.xmda026_desc,g_xmda_m.oofb0172               
            END IF   
            ]]>
  </point>
  <point name="show.other" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="statechange.a_update" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL axmt500_set_act_visible()      
   CALL axmt500_set_act_no_visible() 
   CALL axmt500_show()   ]]>
  </point>
  <point name="statechange.after" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="statechange.b_update" order="" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_err_collect_init()
   CALL s_transaction_begin()
   
   CASE lc_state
     WHEN 'Y'

      IF NOT s_axmt500_conf_chk(g_xmda_m.xmdadocno) THEN
         CALL s_transaction_end('N','0')
         CALL cl_err_collect_show()
         RETURN
      END IF
      IF NOT cl_ask_confirm('aim-00108') THEN
         CALL s_transaction_end('N','0')
         CALL cl_err_collect_show()
         RETURN
      END IF
      IF NOT s_axmt500_conf_upd(g_xmda_m.xmdadocno) THEN
         CALL s_transaction_end('N','0')
         CALL cl_err_collect_show()
         RETURN
      END IF
     #--151102--polly--mark--(s)--搬至確認元件處理  
     #確認後，如果信用額度超限，超限控管方式為2警告且留置時，需做留置動作
     #CALL s_axmt500_get_credit('2',g_xmda_m.xmda004) RETURNING l_xmaj003_1,l_xmaj003_2
     #IF l_xmaj003_1 = '2' OR l_xmaj003_2 = '2' THEN  #警告且留置
     #
     #      CALL s_axmt500_credit('4',g_xmda_m.xmdadocno,g_xmda_m.xmda004) RETURNING l_flag
     #   IF NOT l_flag THEN
     #      CASE l_flag
     #         WHEN 0  #超限
     #            LET l_xmda032 = cl_get_para(g_enterprise,g_site,'S-BAS-0047')
     #         WHEN 2  #逾期
     #            LET l_xmda032 = cl_get_para(g_enterprise,g_site,'S-BAS-0051')
     #      END CASE
     #
     #      CALL cl_ask_confirm3("axm-00440","")
     #      UPDATE xmda_t
     #         SET (xmdastus,xmda032,xmdamodid,xmdamoddt)
     #           = ('H',l_xmda032,g_xmda_m.xmdamodid,g_xmda_m.xmdamoddt)
     #       WHERE xmdaent = g_enterprise AND xmdadocno = g_xmda_m.xmdadocno
     #      UPDATE xmdc_t
     #         SET xmdc045 = '5'
     #       WHERE xmdcent = g_enterprise
     #         AND xmdcdocno = g_xmda_m.xmdadocno
     #      LET lc_state = 'H'                                                         
     #   END IF    
     #END IF
     ##更新信用餘額檔(正向)
     #IF NOT s_axmt500_credit('2',g_xmda_m.xmdadocno,g_xmda_m.xmda004) THEN
     #   CALL s_transaction_end('N','0')
     #   CALL cl_err_collect_show()
     #   RETURN
     #END IF
     #--151102--polly--mark--(e)--搬至確認元件處理   
     #--151102--polly--add--(s) 
      IF g_hold THEN
         LET lc_state = 'H'
      END IF     
     #--151102--polly--add--(e) 
      
     #--151102--polly--mark--(s)--搬至確認元件處理   
     #更新價格檔
      #CALL axmt500_upd_sale_price() 
     #--151102--polly--mark--(e)--搬至確認元件處理   
      CALL s_transaction_end('Y','0') 
    #151210-00002#1--mark--(S)  
     ##確認後判斷單身是否有"供應商直送"模式，如有詢問是否要自動產生採購單
     #IF axmt500_get_xmdc032() THEN
     #   IF cl_ask_confirm('axm-00421') THEN
     #      CALL s_transaction_begin()
     #      IF NOT s_axmt500_direct_orders(g_xmda_m.xmdadocno) THEN
     #         CALL s_transaction_end('N','0')  
     #      END IF
     #      CALL s_transaction_end('Y','0')
     #   END IF
     #END IF    
    #151210-00002#1--mark--(e)  
      #150623---earl---add---s
      #多角自動拋轉
      IF cl_get_para(g_enterprise,'','E-BAS-0022') = 'Y' AND
         g_xmda_m.xmda006 = '2' AND
         g_xmda_m.xmda050 IS NOT NULL THEN
         
         INITIALIZE la_param.* TO NULL
         LET la_param.prog     = 'aicp100'
         LET la_param.param[1] = g_xmda_m.xmdadocno
         LET ls_js = util.JSON.stringify(la_param)
         CALL cl_cmdrun_wait(ls_js)
      END IF
      #150623---earl---add---e
   
   WHEN 'N'   
   
      IF NOT s_axmt500_unconf_chk(g_xmda_m.xmdadocno) THEN
         CALL s_transaction_end('N','0')
         CALL cl_err_collect_show()
         RETURN
      END IF
      IF NOT cl_ask_confirm('aim-00110') THEN
         CALL s_transaction_end('N','0')
         CALL cl_err_collect_show()
         RETURN
      END IF
      #150623---earl---add---s
      CALL s_transaction_end('Y','0')
      #多角自動拋轉還原
      IF cl_get_para(g_enterprise,'','E-BAS-0022') = 'Y' AND
         g_xmda_m.xmda006 = '2' AND
         g_xmda_m.xmda050 IS NOT NULL THEN
         
         INITIALIZE la_param.* TO NULL
         LET la_param.prog     = 'aicp110'
         LET la_param.param[1] = g_xmda_m.xmdadocno
         LET ls_js = util.JSON.stringify(la_param)
         CALL cl_cmdrun_wait(ls_js)
      END IF
      
      LET l_xmda030 = ''
      SELECT xmda030 INTO l_xmda030
        FROM xmda_t
       WHERE xmdaent = g_enterprise
         AND xmdadocno = g_xmda_m.xmdadocno
         
      IF l_xmda030 = 'Y' THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = 'aic-00180'   #多角流程已拋轉之單據不可取消確認！
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         
         CALL cl_err_collect_show()
         CLOSE axmt500_cl
         RETURN
      END IF
      
      CALL s_transaction_begin()
      
      OPEN axmt500_cl USING g_enterprise,g_xmda_m.xmdadocno
      IF STATUS THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "OPEN axmt500_cl:" 
         LET g_errparam.code   = STATUS 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         CLOSE axmt500_cl
         CALL s_transaction_end('N','0')
         CALL cl_err_collect_show()
         RETURN
      END IF
      #150623---earl---add---e
      
      IF NOT s_axmt500_unconf_upd(g_xmda_m.xmdadocno) THEN
         CALL s_transaction_end('N','0')
         CALL cl_err_collect_show()
         RETURN
      END IF
     #--151102--polly--mark--(s)--搬至取消元件處理 
     ##更新信用餘額檔(反向)
     #IF NOT s_axmt500_credit('3',g_xmda_m.xmdadocno,g_xmda_m.xmda004) THEN
     #   CALL s_transaction_end('N','0')
     #   CALL cl_err_collect_show()
     #   RETURN
     #END IF
     #--151102--polly--mark--(e)--搬至取消元件處理 
      CALL s_transaction_end('Y','0')
   
   WHEN 'X'
   
      IF NOT s_axmt500_invalid_chk(g_xmda_m.xmdadocno) THEN
         CALL s_transaction_end('N','0')
         CALL cl_err_collect_show()
         RETURN
      END IF
      IF NOT cl_ask_confirm('aim-00109') THEN
         CALL s_transaction_end('N','0')
         CALL cl_err_collect_show()
         RETURN
      END IF
      IF NOT s_axmt500_invalid_upd(g_xmda_m.xmdadocno) THEN
         CALL s_transaction_end('N','0')
         CALL cl_err_collect_show()
         RETURN
      END IF
      CALL s_transaction_end('Y','0')
   
   WHEN 'H'
   
      CALL cl_set_comp_entry("xmda032",TRUE)
      CALL axmt500_action_modify('H') RETURNING l_success
      CALL cl_set_comp_entry("xmda032",FALSE)
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         CALL cl_err_collect_show()
         RETURN
      END IF
      CALL s_transaction_end('Y','0')
   
   WHEN 'UH'
   
      IF NOT axmt500_xmda032_unhold() THEN
         CALL s_transaction_end('N','0')
         CALL cl_err_collect_show()
         RETURN
      END IF
      #將單身的狀態調整為一般
      IF NOT axmt500_upd_xmdc045('UH') THEN
         CALL s_transaction_end('N','0')
         CALL cl_err_collect_show()
         RETURN
      END IF
      CALL s_transaction_end('Y','0')
      #取消留置將狀態調整為已確認
      LET lc_state = 'Y'
      
      #150623---earl---add---s
      #多角自動拋轉
      IF cl_get_para(g_enterprise,'','E-BAS-0022') = 'Y' AND
         g_xmda_m.xmda006 = '2' AND
         g_xmda_m.xmda050 IS NOT NULL THEN
         
         INITIALIZE la_param.* TO NULL
         LET la_param.prog     = 'aicp100'
         LET la_param.param[1] = g_xmda_m.xmdadocno
         LET ls_js = util.JSON.stringify(la_param)
         CALL cl_cmdrun_wait(ls_js)
      END IF
      #150623---earl---add---e
   END CASE   
   
   
  
   CALL cl_err_collect_show()
   ]]>
  </point>
  <point name="statechange.before" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="statechange.before_menu" order="" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      #open改為unconfirmed
      CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold,unhold",TRUE)
      #無條件關結案
      CALL cl_set_act_visible("closed",FALSE)
      #提交和抽單一開始先無條件關
      CALL cl_set_act_visible("signing,withdraw",FALSE)
      
      CASE g_xmda_m.xmdastus
         WHEN "N"
            CALL cl_set_act_visible("unconfirmed,hold,unhold",FALSE)
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            IF cl_bpm_chk() THEN
               CALL cl_set_act_visible("signing",TRUE)
               CALL cl_set_act_visible("confirmed",FALSE)
            END IF

         WHEN "X"
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold,unhold",FALSE)
            CALL s_transaction_end('N','0')                           #150710-00002#1   add
            RETURN
         WHEN "Y"
            CALL cl_set_act_visible("invalid,confirmed,unhold",FALSE)
            
         WHEN "H"
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold",FALSE)            
            
          #已核准只能顯示確認;其餘應用功能皆隱藏
         WHEN "A"     
            CALL cl_set_act_visible("confirmed ",TRUE)   
            CALL cl_set_act_visible("unconfirmed,invalid,hold,unhold",FALSE)         
         
         #保留修改的功能(如作廢)，隱藏其他應用功能
         WHEN "R"   
            CALL cl_set_act_visible("confirmed,unconfirmed",FALSE)
         WHEN "D"  
            CALL cl_set_act_visible("confirmed,unconfirmed,hold,unhold",FALSE)
            
         #送簽中只能顯示抽單;其餘應用功能皆隱藏
         WHEN "W"   
            CALL cl_set_act_visible("withdraw",TRUE)  
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold,unhold",FALSE)
      END CASE]]>
  </point>
  <point name="statechange.confirmed" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="statechange.define" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success     LIKE type_t.num5
   DEFINE l_xmaj003_1   LIKE xmaj_t.xmaj003      #訂單確認時超限控管方式(據點)
   DEFINE l_xmaj003_2   LIKE xmaj_t.xmaj003      #訂單確認時超限控管方式(集團)

   #150623 earl add start
   DEFINE la_param   RECORD
          prog          STRING,
          actionid      STRING,
          background    LIKE type_t.chr1,
          param         DYNAMIC ARRAY OF STRING
                     END RECORD
   
   DEFINE ls_js         STRING
   DEFINE l_xmda030     LIKE xmda_t.xmda030
   #150623 earl add end
   DEFINE l_xmda032     LIKE xmda_t.xmda032
   DEFINE l_flag        LIKE type_t.num5         #150924 by whitney add]]>
  </point>
  <point name="statechange.hold" order="" ver="2" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="statechange.invalid" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="statechange.more_control" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="statechange.open" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="statechange.verify" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="ui_browser_refresh.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="ui_detailshow.after" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="ui_detailshow.before" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="ui_detailshow.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="ui_dialog.action_default" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="ui_dialog.before_dialog" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="ui_dialog.before_dialog2" order="" ver="3" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF lb_first THEN
               LET lb_first = FALSE
            END IF
            NEXT FIELD xmdcseq                                                          ]]>
  </point>
  <point name="ui_dialog.body2.action" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="ui_dialog.body2.before_display" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                          ]]>
  </point>
  <point name="ui_dialog.body2.before_row" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                          ]]>
  </point>
  <point name="ui_dialog.body3.action" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="ui_dialog.body3.before_display" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                          ]]>
  </point>
  <point name="ui_dialog.body3.before_row" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                          ]]>
  </point>
  <point name="ui_dialog.body5.action" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="ui_dialog.body5.before_display" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                          ]]>
  </point>
  <point name="ui_dialog.body5.before_row" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                          ]]>
  </point>
  <point name="ui_dialog.define" order="" ver="4" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_cnt      LIKE type_t.num5   
   DEFINE l_wc       STRING
   DEFINE l_sql      STRING
   DEFINE l_xmdc012  LIKE xmdc_t.xmdc012
   DEFINE l_xmdc013  LIKE xmdc_t.xmdc013
   DEFINE l_xmdc024  LIKE xmdc_t.xmdc024
   DEFINE l_success  LIKE type_t.num5  
   #add--2015/04/23 By shiun--(S)

   DEFINE l_prog     LIKE oobx_t.oobx004
   #add--2015/04/23 By shiun--(E)]]>
  </point>
  <point name="ui_dialog.more_displayarray" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="ui_dialog.page1.action" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="ui_dialog.page1.before_display" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                          ]]>
  </point>
  <point name="ui_dialog.page1.before_row" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                          ]]>
  </point>
  <point name="ui_headershow.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="unlock_b.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="unlock_b.other" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="update_b.after_update" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="update_b.after_update2" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="update_b.after_update3" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="update_b.before_update" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="update_b.before_update2" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="update_b.before_update3" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="update_b.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="update_b.m_update" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="update_b.m_update2" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="update_b.m_update3" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="update_b.other" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <section id="axmt500.description" ver="657" ch="" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:11,PR版次:11) Build-001364
#+ 
#+ Filename...: axmt500
#+ Description: 訂單維護作業
#+ Creator....: 02040(2014-01-23 17:03:13)
#+ Modifier...: 02040(2015-12-14 15:06:53) -SD/PR-
]]>
  </section>
  <section id="axmt500.global" ver="150" ch="" status="" src="s" readonly="">
    <![CDATA[#應用 t01 樣板自動產生(Version:50)
{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" mark="Y"/>}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_xmda_m        RECORD
       xmdadocno LIKE xmda_t.xmdadocno, 
   xmda001 LIKE xmda_t.xmda001, 
   xmdadocno_desc LIKE type_t.chr80, 
   xmdadocdt LIKE xmda_t.xmdadocdt, 
   xmda004 LIKE xmda_t.xmda004, 
   xmda004_desc LIKE type_t.chr80, 
   xmda002 LIKE xmda_t.xmda002, 
   xmda002_desc LIKE type_t.chr80, 
   xmda003 LIKE xmda_t.xmda003, 
   xmda003_desc LIKE type_t.chr80, 
   xmdasite LIKE xmda_t.xmdasite, 
   xmdastus LIKE xmda_t.xmdastus, 
   xmda005 LIKE xmda_t.xmda005, 
   xmda006 LIKE xmda_t.xmda006, 
   xmda007 LIKE xmda_t.xmda007, 
   xmda008 LIKE xmda_t.xmda008, 
   xmda033 LIKE xmda_t.xmda033, 
   xmda027 LIKE xmda_t.xmda027, 
   xmda027_desc LIKE type_t.chr80, 
   xmda009 LIKE xmda_t.xmda009, 
   xmda009_desc LIKE type_t.chr80, 
   xmda010 LIKE xmda_t.xmda010, 
   xmda010_desc LIKE type_t.chr80, 
   xmda011 LIKE xmda_t.xmda011, 
   xmda011_desc LIKE type_t.chr80, 
   xmda012 LIKE xmda_t.xmda012, 
   xmda013 LIKE xmda_t.xmda013, 
   xmda035 LIKE xmda_t.xmda035, 
   xmda035_desc LIKE type_t.chr80, 
   xmda015 LIKE xmda_t.xmda015, 
   xmda015_desc LIKE type_t.chr80, 
   xmda016 LIKE xmda_t.xmda016, 
   xmda017 LIKE xmda_t.xmda017, 
   xmda017_desc LIKE type_t.chr80, 
   xmda018 LIKE xmda_t.xmda018, 
   xmda018_desc LIKE type_t.chr80, 
   xmda019 LIKE xmda_t.xmda019, 
   xmda023 LIKE xmda_t.xmda023, 
   xmda023_desc LIKE type_t.chr80, 
   xmda032 LIKE xmda_t.xmda032, 
   xmda032_desc LIKE type_t.chr80, 
   xmda071 LIKE xmda_t.xmda071, 
   xmda050 LIKE xmda_t.xmda050, 
   xmda021 LIKE xmda_t.xmda021, 
   xmda021_desc LIKE type_t.chr80, 
   xmda022 LIKE xmda_t.xmda022, 
   xmda022_desc LIKE type_t.chr80, 
   xmda034 LIKE xmda_t.xmda034, 
   xmda034_desc LIKE type_t.chr80, 
   xmda203 LIKE xmda_t.xmda203, 
   xmda203_desc LIKE type_t.chr80, 
   xmda024 LIKE xmda_t.xmda024, 
   xmda024_desc LIKE type_t.chr80, 
   xmda048 LIKE xmda_t.xmda048, 
   xmda049 LIKE xmda_t.xmda049, 
   xmda044 LIKE xmda_t.xmda044, 
   xmda044_desc LIKE type_t.chr80, 
   xmda030 LIKE xmda_t.xmda030, 
   xmda031 LIKE xmda_t.xmda031, 
   xmda045 LIKE xmda_t.xmda045, 
   xmda046 LIKE xmda_t.xmda046, 
   xmda047 LIKE xmda_t.xmda047, 
   xmda028 LIKE xmda_t.xmda028, 
   xmda043 LIKE xmda_t.xmda043, 
   xmda025 LIKE xmda_t.xmda025, 
   xmda025_desc LIKE type_t.chr80, 
   oofb0171 LIKE type_t.chr500, 
   xmda026 LIKE xmda_t.xmda026, 
   xmda026_desc LIKE type_t.chr80, 
   oofb0172 LIKE type_t.chr500, 
   xmda020 LIKE xmda_t.xmda020, 
   xmda020_desc LIKE type_t.chr80, 
   xmda037 LIKE xmda_t.xmda037, 
   xmda037_desc LIKE type_t.chr80, 
   xmda038 LIKE xmda_t.xmda038, 
   xmda038_desc LIKE type_t.chr80, 
   xmda036 LIKE xmda_t.xmda036, 
   xmda036_desc LIKE type_t.chr80, 
   xmda039 LIKE xmda_t.xmda039, 
   xmda041 LIKE xmda_t.xmda041, 
   xmda042 LIKE xmda_t.xmda042, 
   xmdaownid LIKE xmda_t.xmdaownid, 
   xmdaownid_desc LIKE type_t.chr80, 
   xmdaowndp LIKE xmda_t.xmdaowndp, 
   xmdaowndp_desc LIKE type_t.chr80, 
   xmdacrtid LIKE xmda_t.xmdacrtid, 
   xmdacrtid_desc LIKE type_t.chr80, 
   xmdacrtdp LIKE xmda_t.xmdacrtdp, 
   xmdacrtdp_desc LIKE type_t.chr80, 
   xmdacrtdt LIKE xmda_t.xmdacrtdt, 
   xmdamodid LIKE xmda_t.xmdamodid, 
   xmdamodid_desc LIKE type_t.chr80, 
   xmdamoddt LIKE xmda_t.xmdamoddt, 
   xmdacnfid LIKE xmda_t.xmdacnfid, 
   xmdacnfid_desc LIKE type_t.chr80, 
   xmdacnfdt LIKE xmda_t.xmdacnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_xmdc_d        RECORD
       xmdcseq LIKE xmdc_t.xmdcseq, 
   xmdc027 LIKE xmdc_t.xmdc027, 
   l_pmao009 LIKE type_t.chr500, 
   l_pmao010 LIKE type_t.chr500, 
   xmdc001 LIKE xmdc_t.xmdc001, 
   xmdc001_desc LIKE type_t.chr500, 
   xmdc001_desc_desc LIKE type_t.chr500, 
   xmdc019 LIKE xmdc_t.xmdc019, 
   xmdc002 LIKE xmdc_t.xmdc002, 
   xmdc002_desc LIKE type_t.chr500, 
   xmdc006 LIKE xmdc_t.xmdc006, 
   xmdc006_desc LIKE type_t.chr500, 
   xmdc007 LIKE xmdc_t.xmdc007, 
   xmdc008 LIKE xmdc_t.xmdc008, 
   xmdc008_desc LIKE type_t.chr500, 
   xmdc009 LIKE xmdc_t.xmdc009, 
   xmdc024 LIKE xmdc_t.xmdc024, 
   xmdc012 LIKE xmdc_t.xmdc012, 
   xmdc013 LIKE xmdc_t.xmdc013, 
   xmdc045 LIKE xmdc_t.xmdc045, 
   xmdc016 LIKE xmdc_t.xmdc016, 
   xmdc016_desc LIKE type_t.chr500, 
   xmdc017 LIKE xmdc_t.xmdc017, 
   xmdc010 LIKE xmdc_t.xmdc010, 
   xmdc010_desc LIKE type_t.chr500, 
   xmdc011 LIKE xmdc_t.xmdc011, 
   xmdc015 LIKE xmdc_t.xmdc015, 
   xmdc046 LIKE xmdc_t.xmdc046, 
   xmdc047 LIKE xmdc_t.xmdc047, 
   xmdc048 LIKE xmdc_t.xmdc048, 
   xmdc023 LIKE xmdc_t.xmdc023, 
   xmdc020 LIKE xmdc_t.xmdc020, 
   xmdc021 LIKE xmdc_t.xmdc021, 
   xmdc022 LIKE xmdc_t.xmdc022, 
   xmdcunit LIKE xmdc_t.xmdcunit, 
   xmdcunit_desc LIKE type_t.chr500, 
   xmdcorga LIKE xmdc_t.xmdcorga, 
   xmdcorga_desc LIKE type_t.chr500, 
   xmdc052 LIKE xmdc_t.xmdc052, 
   xmdc049 LIKE xmdc_t.xmdc049, 
   xmdc049_desc LIKE type_t.chr500, 
   xmdc053 LIKE xmdc_t.xmdc053, 
   xmdc053_desc LIKE type_t.chr500, 
   xmdc050 LIKE xmdc_t.xmdc050, 
   xmdcsite LIKE xmdc_t.xmdcsite, 
   xmdc058 LIKE xmdc_t.xmdc058, 
   xmdc059 LIKE xmdc_t.xmdc059, 
   xmdc060 LIKE xmdc_t.xmdc060, 
   xmdc061 LIKE xmdc_t.xmdc061
       END RECORD
PRIVATE TYPE type_g_xmdc2_d RECORD
       xmdcseq LIKE xmdc_t.xmdcseq, 
   imaa001 LIKE type_t.chr500, 
   imaal003 LIKE type_t.chr500, 
   imaal004 LIKE type_t.chr500, 
   imaa005 LIKE type_t.chr500, 
   imaa005_desc LIKE type_t.chr500, 
   xmdc0272 LIKE type_t.chr500, 
   l_pmao0092 LIKE type_t.chr500, 
   l_pmao0102 LIKE type_t.chr500, 
   xmdc028 LIKE xmdc_t.xmdc028, 
   xmdc028_desc LIKE type_t.chr500, 
   xmdc029 LIKE xmdc_t.xmdc029, 
   xmdc029_desc LIKE type_t.chr500, 
   xmdc030 LIKE xmdc_t.xmdc030, 
   xmdc057 LIKE xmdc_t.xmdc057, 
   xmdc025 LIKE xmdc_t.xmdc025, 
   oofb0173 LIKE type_t.chr500, 
   xmdc026 LIKE xmdc_t.xmdc026, 
   oofb0174 LIKE type_t.chr500, 
   xmdc031 LIKE xmdc_t.xmdc031, 
   xmdc031_desc LIKE type_t.chr500, 
   xmdc032 LIKE xmdc_t.xmdc032, 
   xmdc033 LIKE xmdc_t.xmdc033, 
   xmdc003 LIKE xmdc_t.xmdc003, 
   xmdc003_desc LIKE type_t.chr500, 
   xmdc054 LIKE xmdc_t.xmdc054, 
   xmdc036 LIKE xmdc_t.xmdc036, 
   xmdc036_desc LIKE type_t.chr500, 
   xmdc037 LIKE xmdc_t.xmdc037, 
   xmdc037_desc LIKE type_t.chr500, 
   xmdc038 LIKE xmdc_t.xmdc038, 
   xmdc038_desc LIKE type_t.chr500, 
   xmdc039 LIKE xmdc_t.xmdc039, 
   xmdc035 LIKE xmdc_t.xmdc035, 
   xmdc040 LIKE xmdc_t.xmdc040, 
   xmdc041 LIKE xmdc_t.xmdc041, 
   xmdc042 LIKE xmdc_t.xmdc042, 
   xmdc043 LIKE xmdc_t.xmdc043, 
   xmdc044 LIKE xmdc_t.xmdc044
       END RECORD
PRIVATE TYPE type_g_xmdc3_d RECORD
       xmddseq LIKE xmdd_t.xmddseq, 
   xmddseq1 LIKE xmdd_t.xmddseq1, 
   xmdd003 LIKE xmdd_t.xmdd003, 
   xmdd001 LIKE xmdd_t.xmdd001, 
   xmdd001_desc LIKE type_t.chr500, 
   xmdd001_desc_desc LIKE type_t.chr500, 
   xmdd002 LIKE xmdd_t.xmdd002, 
   xmdd002_desc LIKE type_t.chr500, 
   xmdd004 LIKE xmdd_t.xmdd004, 
   xmdd004_desc LIKE type_t.chr500, 
   xmdd005 LIKE xmdd_t.xmdd005, 
   xmdc012 LIKE xmdc_t.xmdc012, 
   xmdc013 LIKE xmdc_t.xmdc013, 
   xmddseq2 LIKE xmdd_t.xmddseq2, 
   xmdd006 LIKE xmdd_t.xmdd006, 
   xmdd024 LIKE xmdd_t.xmdd024, 
   xmdd024_desc LIKE type_t.chr500, 
   xmdd025 LIKE xmdd_t.xmdd025, 
   xmdd011 LIKE xmdd_t.xmdd011, 
   xmdd012 LIKE xmdd_t.xmdd012, 
   xmdd010 LIKE xmdd_t.xmdd010, 
   xmdd010_desc LIKE type_t.chr500, 
   xmdd013 LIKE xmdd_t.xmdd013, 
   xmdd009 LIKE xmdd_t.xmdd009, 
   xmdd031 LIKE xmdd_t.xmdd031, 
   xmdd014 LIKE xmdd_t.xmdd014, 
   xmdd015 LIKE xmdd_t.xmdd015, 
   xmdd016 LIKE xmdd_t.xmdd016, 
   xmdd017 LIKE xmdd_t.xmdd017, 
   xmdd026 LIKE xmdd_t.xmdd026, 
   xmdd026_desc LIKE type_t.chr500, 
   xmdd027 LIKE xmdd_t.xmdd027, 
   xmdd018 LIKE xmdd_t.xmdd018, 
   xmdd019 LIKE xmdd_t.xmdd019, 
   xmdd019_desc LIKE type_t.chr500, 
   xmdd020 LIKE xmdd_t.xmdd020, 
   xmdd028 LIKE xmdd_t.xmdd028, 
   xmdd029 LIKE xmdd_t.xmdd029, 
   xmdd030 LIKE xmdd_t.xmdd030, 
   xmdd021 LIKE xmdd_t.xmdd021, 
   xmdd022 LIKE xmdd_t.xmdd022, 
   xmdd022_desc LIKE type_t.chr500, 
   xmdd023 LIKE xmdd_t.xmdd023, 
   xmddsite LIKE xmdd_t.xmddsite, 
   xmdd036 LIKE xmdd_t.xmdd036, 
   xmdd037 LIKE xmdd_t.xmdd037, 
   xmdd038 LIKE xmdd_t.xmdd038, 
   xmdd039 LIKE xmdd_t.xmdd039
       END RECORD
PRIVATE TYPE type_g_xmdc4_d RECORD
       xmdqdocno LIKE type_t.chr20, 
   xmdqseq LIKE type_t.num10, 
   xmdqseq1 LIKE type_t.num10, 
   xmdq001 LIKE type_t.chr500, 
   xmdq001_desc LIKE type_t.chr500, 
   xmdq001_desc_desc LIKE type_t.chr500, 
   xmdq006 LIKE type_t.num20_6, 
   xmdq007 LIKE type_t.num20_6, 
   xmdq008 LIKE type_t.chr10, 
   xmdq008_desc LIKE type_t.chr500, 
   xmdq009 LIKE type_t.num20_6, 
   xmdq002 LIKE type_t.chr500, 
   xmdq002_desc LIKE type_t.chr500, 
   xmdq002_desc_desc LIKE type_t.chr500, 
   xmdq004 LIKE type_t.chr10, 
   xmdq005 LIKE type_t.chr10, 
   xmdqsite LIKE type_t.chr10
       END RECORD
PRIVATE TYPE type_g_xmdc5_d RECORD
       xmdb001 LIKE xmdb_t.xmdb001, 
   xmdb002 LIKE xmdb_t.xmdb002, 
   xmdb002_desc LIKE type_t.chr500, 
   xmdb003 LIKE xmdb_t.xmdb003, 
   xmdb004 LIKE xmdb_t.xmdb004, 
   xmdb005 LIKE xmdb_t.xmdb005, 
   xmdb006 LIKE xmdb_t.xmdb006, 
   xmdb016 LIKE xmdb_t.xmdb016, 
   xmdb017 LIKE xmdb_t.xmdb017, 
   xmdb007 LIKE xmdb_t.xmdb007, 
   xmdb008 LIKE xmdb_t.xmdb008, 
   xmdb009 LIKE xmdb_t.xmdb009, 
   xmdbsite LIKE xmdb_t.xmdbsite
       END RECORD
PRIVATE TYPE type_g_xmdc6_d RECORD
       xmdsseq LIKE xmds_t.xmdsseq, 
   xmds001 LIKE xmds_t.xmds001, 
   xmds001_desc LIKE type_t.chr500, 
   xmds001_desc_desc LIKE type_t.chr500, 
   xmds002 LIKE xmds_t.xmds002, 
   xmds002_desc LIKE type_t.chr500, 
   xmds003 LIKE xmds_t.xmds003, 
   xmds004 LIKE xmds_t.xmds004, 
   xmds005 LIKE xmds_t.xmds005, 
   xmds005_desc LIKE type_t.chr500, 
   xmds006 LIKE xmds_t.xmds006, 
   xmdssite LIKE xmds_t.xmdssite
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_xmdadocno LIKE xmda_t.xmdadocno,
      b_xmdadocdt LIKE xmda_t.xmdadocdt,
      b_xmda001 LIKE xmda_t.xmda001,
      b_xmda002 LIKE xmda_t.xmda002,
   b_xmda002_desc LIKE type_t.chr80,
      b_xmda003 LIKE xmda_t.xmda003,
   b_xmda003_desc LIKE type_t.chr80,
      b_xmda004 LIKE xmda_t.xmda004,
   b_xmda004_desc LIKE type_t.chr80
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
{<point name="global.variable"/>} 
#end add-point
       
#模組變數(Module Variables)
DEFINE g_xmda_m          type_g_xmda_m
DEFINE g_xmda_m_t        type_g_xmda_m
DEFINE g_xmda_m_o        type_g_xmda_m
DEFINE g_xmda_m_mask_o   type_g_xmda_m #轉換遮罩前資料
DEFINE g_xmda_m_mask_n   type_g_xmda_m #轉換遮罩後資料
 
   DEFINE g_xmdadocno_t LIKE xmda_t.xmdadocno
 
 
DEFINE g_xmdc_d          DYNAMIC ARRAY OF type_g_xmdc_d
DEFINE g_xmdc_d_t        type_g_xmdc_d
DEFINE g_xmdc_d_o        type_g_xmdc_d
DEFINE g_xmdc_d_mask_o   DYNAMIC ARRAY OF type_g_xmdc_d #轉換遮罩前資料
DEFINE g_xmdc_d_mask_n   DYNAMIC ARRAY OF type_g_xmdc_d #轉換遮罩後資料
DEFINE g_xmdc2_d          DYNAMIC ARRAY OF type_g_xmdc2_d
DEFINE g_xmdc2_d_t        type_g_xmdc2_d
DEFINE g_xmdc2_d_o        type_g_xmdc2_d
DEFINE g_xmdc2_d_mask_o   DYNAMIC ARRAY OF type_g_xmdc2_d #轉換遮罩前資料
DEFINE g_xmdc2_d_mask_n   DYNAMIC ARRAY OF type_g_xmdc2_d #轉換遮罩後資料
DEFINE g_xmdc3_d          DYNAMIC ARRAY OF type_g_xmdc3_d
DEFINE g_xmdc3_d_t        type_g_xmdc3_d
DEFINE g_xmdc3_d_o        type_g_xmdc3_d
DEFINE g_xmdc3_d_mask_o   DYNAMIC ARRAY OF type_g_xmdc3_d #轉換遮罩前資料
DEFINE g_xmdc3_d_mask_n   DYNAMIC ARRAY OF type_g_xmdc3_d #轉換遮罩後資料
DEFINE g_xmdc4_d          DYNAMIC ARRAY OF type_g_xmdc4_d
DEFINE g_xmdc4_d_t        type_g_xmdc4_d
DEFINE g_xmdc4_d_o        type_g_xmdc4_d
DEFINE g_xmdc4_d_mask_o   DYNAMIC ARRAY OF type_g_xmdc4_d #轉換遮罩前資料
DEFINE g_xmdc4_d_mask_n   DYNAMIC ARRAY OF type_g_xmdc4_d #轉換遮罩後資料
DEFINE g_xmdc5_d          DYNAMIC ARRAY OF type_g_xmdc5_d
DEFINE g_xmdc5_d_t        type_g_xmdc5_d
DEFINE g_xmdc5_d_o        type_g_xmdc5_d
DEFINE g_xmdc5_d_mask_o   DYNAMIC ARRAY OF type_g_xmdc5_d #轉換遮罩前資料
DEFINE g_xmdc5_d_mask_n   DYNAMIC ARRAY OF type_g_xmdc5_d #轉換遮罩後資料
DEFINE g_xmdc6_d          DYNAMIC ARRAY OF type_g_xmdc6_d
DEFINE g_xmdc6_d_t        type_g_xmdc6_d
DEFINE g_xmdc6_d_o        type_g_xmdc6_d
DEFINE g_xmdc6_d_mask_o   DYNAMIC ARRAY OF type_g_xmdc6_d #轉換遮罩前資料
DEFINE g_xmdc6_d_mask_n   DYNAMIC ARRAY OF type_g_xmdc6_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
DEFINE g_wc2_table4   STRING
 
DEFINE g_wc2_table5   STRING
 
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="axmt500.main" ver="70" ch="" status="" src="s" readonly="">
    <![CDATA[#應用 a26 樣板自動產生(Version:6)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用)
   {<point name="main.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="main.define"/>}
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #add-point:初始化前定義
   {<point name="main.before_ap_init"/>}
   #end add-point
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axm","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT xmdadocno,xmda001,'',xmdadocdt,xmda004,'',xmda002,'',xmda003,'',xmdasite, 
       xmdastus,xmda005,xmda006,xmda007,xmda008,xmda033,xmda027,'',xmda009,'',xmda010,'',xmda011,'', 
       xmda012,xmda013,xmda035,'',xmda015,'',xmda016,xmda017,'',xmda018,'',xmda019,xmda023,'',xmda032, 
       '',xmda071,xmda050,xmda021,'',xmda022,'',xmda034,'',xmda203,'',xmda024,'',xmda048,xmda049,xmda044, 
       '',xmda030,xmda031,xmda045,xmda046,xmda047,xmda028,xmda043,xmda025,'','',xmda026,'','',xmda020, 
       '',xmda037,'',xmda038,'',xmda036,'',xmda039,xmda041,xmda042,xmdaownid,'',xmdaowndp,'',xmdacrtid, 
       '',xmdacrtdp,'',xmdacrtdt,xmdamodid,'',xmdamoddt,xmdacnfid,'',xmdacnfdt", 
                      " FROM xmda_t",
                      " WHERE xmdaent= ? AND xmdadocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt500_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.xmdadocno,t0.xmda001,t0.xmdadocdt,t0.xmda004,t0.xmda002,t0.xmda003, 
       t0.xmdasite,t0.xmdastus,t0.xmda005,t0.xmda006,t0.xmda007,t0.xmda008,t0.xmda033,t0.xmda027,t0.xmda009, 
       t0.xmda010,t0.xmda011,t0.xmda012,t0.xmda013,t0.xmda035,t0.xmda015,t0.xmda016,t0.xmda017,t0.xmda018, 
       t0.xmda019,t0.xmda023,t0.xmda032,t0.xmda071,t0.xmda050,t0.xmda021,t0.xmda022,t0.xmda034,t0.xmda203, 
       t0.xmda024,t0.xmda048,t0.xmda049,t0.xmda044,t0.xmda030,t0.xmda031,t0.xmda045,t0.xmda046,t0.xmda047, 
       t0.xmda028,t0.xmda043,t0.xmda025,t0.xmda026,t0.xmda020,t0.xmda037,t0.xmda038,t0.xmda036,t0.xmda039, 
       t0.xmda041,t0.xmda042,t0.xmdaownid,t0.xmdaowndp,t0.xmdacrtid,t0.xmdacrtdp,t0.xmdacrtdt,t0.xmdamodid, 
       t0.xmdamoddt,t0.xmdacnfid,t0.xmdacnfdt,t1.pmaal004 ,t2.ooag011 ,t3.ooefl003 ,t4.ooibl004 ,t5.oocql004 , 
       t6.ooail003 ,t7.xmahl003 ,t8.ooidl003 ,t9.oocql004 ,t10.oocql004 ,t11.pmaal004 ,t12.pmaal004 , 
       t13.pmaal004 ,t14.pmaal004 ,t15.oocql004 ,t16.xmaol004 ,t17.oofb011 ,t18.oofb011 ,t19.oocql004 , 
       t20.pmaal004 ,t21.ooag011 ,t22.ooefl003 ,t23.ooag011 ,t24.ooefl003 ,t25.ooag011 ,t26.ooag011", 

               " FROM xmda_t t0",
                              " LEFT JOIN pmaal_t t1 ON t1.pmaalent='"||g_enterprise||"' AND t1.pmaal001=t0.xmda004 AND t1.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent='"||g_enterprise||"' AND t2.ooag001=t0.xmda002  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=t0.xmda003 AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooibl_t t4 ON t4.ooiblent='"||g_enterprise||"' AND t4.ooibl002=t0.xmda009 AND t4.ooibl003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t5 ON t5.oocqlent='"||g_enterprise||"' AND t5.oocql001='238' AND t5.oocql002=t0.xmda010 AND t5.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooail_t t6 ON t6.ooailent='"||g_enterprise||"' AND t6.ooail001=t0.xmda015 AND t6.ooail002='"||g_dlang||"' ",
               " LEFT JOIN xmahl_t t7 ON t7.xmahlent='"||g_enterprise||"' AND t7.xmahl001=t0.xmda017 AND t7.xmahl002='"||g_dlang||"' ",
               " LEFT JOIN ooidl_t t8 ON t8.ooidlent='"||g_enterprise||"' AND t8.ooidl001=t0.xmda018 AND t8.ooidl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t9 ON t9.oocqlent='"||g_enterprise||"' AND t9.oocql001='275' AND t9.oocql002=t0.xmda023 AND t9.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t10 ON t10.oocqlent='"||g_enterprise||"' AND t10.oocql001='297' AND t10.oocql002=t0.xmda032 AND t10.oocql003='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t11 ON t11.pmaalent='"||g_enterprise||"' AND t11.pmaal001=t0.xmda021 AND t11.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t12 ON t12.pmaalent='"||g_enterprise||"' AND t12.pmaal001=t0.xmda022 AND t12.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t13 ON t13.pmaalent='"||g_enterprise||"' AND t13.pmaal001=t0.xmda034 AND t13.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t14 ON t14.pmaalent='"||g_enterprise||"' AND t14.pmaal001=t0.xmda203 AND t14.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t15 ON t15.oocqlent='"||g_enterprise||"' AND t15.oocql001='295' AND t15.oocql002=t0.xmda024 AND t15.oocql003='"||g_dlang||"' ",
               " LEFT JOIN xmaol_t t16 ON t16.xmaolent='"||g_enterprise||"' AND t16.xmaol001=t0.xmda004 AND t16.xmaol002=t0.xmda044 AND t16.xmaol003='"||g_dlang||"' ",
               " LEFT JOIN oofb_t t17 ON t17.oofbent='"||g_enterprise||"' AND t17.oofb001=t0.xmda025  ",
               " LEFT JOIN oofb_t t18 ON t18.oofbent='"||g_enterprise||"' AND t18.oofb001=t0.xmda026  ",
               " LEFT JOIN oocql_t t19 ON t19.oocqlent='"||g_enterprise||"' AND t19.oocql001='263' AND t19.oocql002=t0.xmda020 AND t19.oocql003='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t20 ON t20.pmaalent='"||g_enterprise||"' AND t20.pmaal001=t0.xmda036 AND t20.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t21 ON t21.ooagent='"||g_enterprise||"' AND t21.ooag001=t0.xmdaownid  ",
               " LEFT JOIN ooefl_t t22 ON t22.ooeflent='"||g_enterprise||"' AND t22.ooefl001=t0.xmdaowndp AND t22.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t23 ON t23.ooagent='"||g_enterprise||"' AND t23.ooag001=t0.xmdacrtid  ",
               " LEFT JOIN ooefl_t t24 ON t24.ooeflent='"||g_enterprise||"' AND t24.ooefl001=t0.xmdacrtdp AND t24.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t25 ON t25.ooagent='"||g_enterprise||"' AND t25.ooag001=t0.xmdamodid  ",
               " LEFT JOIN ooag_t t26 ON t26.ooagent='"||g_enterprise||"' AND t26.ooag001=t0.xmdacnfid  ",
 
               " WHERE t0.xmdaent = '" ||g_enterprise|| "' AND t0.xmdadocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE axmt500_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axmt500 WITH FORM cl_ap_formpath("axm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axmt500_init()   
 
      #進入選單 Menu (="N")
      CALL axmt500_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axmt500
      
   END IF 
   
   CLOSE axmt500_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
]]>
  </section>
  <section id="axmt500.init" ver="26" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION axmt500_init()
   #add-point:init段define(客製用)
   {<point name="init.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="init.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理 
   {<point name="init.pre_function"/>}
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
   LET g_detail_idx_list[4] = 1
   LET g_detail_idx_list[5] = 1
   LET g_detail_idx_list[6] = 1
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('xmdastus','13','N,Y,A,D,R,W,C,H,UH,X')
 
      CALL cl_set_combo_scc('xmda005','2063') 
   CALL cl_set_combo_scc('xmda006','2064') 
   CALL cl_set_combo_scc('xmda007','2065') 
   CALL cl_set_combo_scc('xmda048','2085') 
   CALL cl_set_combo_scc('xmda049','2084') 
   CALL cl_set_combo_scc('xmda039','8321') 
   CALL cl_set_combo_scc('xmdc019','2055') 
   CALL cl_set_combo_scc('xmdc045','2035') 
   CALL cl_set_combo_scc('xmdc020','2036') 
   CALL cl_set_combo_scc('xmdc032','2097') 
   CALL cl_set_combo_scc('xmdc035','2039') 
   CALL cl_set_combo_scc('xmdc040','2067') 
   CALL cl_set_combo_scc('xmdd003','2055') 
   CALL cl_set_combo_scc('xmdd009','2057') 
   CALL cl_set_combo_scc('xmdd017','2058') 
   CALL cl_set_combo_scc('xmdb016','3015') 
   CALL cl_set_combo_scc('xmdb017','3016') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1','2',","1")
   CALL g_idx_group.addAttribute("'3',","1")
   CALL g_idx_group.addAttribute("'4',","1")
   CALL g_idx_group.addAttribute("'5',","1")
   CALL g_idx_group.addAttribute("'6',","1")
   CALL g_idx_group.addAttribute("","1")
 
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL axmt500_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="axmt500.ui_dialog" ver="262" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION axmt500_ui_dialog()
   #add-point:ui_dialog段define(客製用)
   {<point name="ui_dialog.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="ui_dialog.define"/>} 
   #end add-point
   
   #add-point:Function前置處理 
   {<point name="ui_dialog.pre_function"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:2)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL axmt500_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_xmda_m.* TO NULL
         CALL g_xmdc_d.clear()
         CALL g_xmdc2_d.clear()
         CALL g_xmdc3_d.clear()
         CALL g_xmdc4_d.clear()
         CALL g_xmdc5_d.clear()
         CALL g_xmdc6_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL axmt500_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL axmt500_fetch('') # reload data
               LET l_ac = 1
               CALL axmt500_ui_detailshow() #Setting the current row 
         
               CALL axmt500_idx_chk()
               #NEXT FIELD xmdcseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_xmdc_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axmt500_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1','2',",l_ac)
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1','2',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL axmt500_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_xmdc2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axmt500_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[2] = l_ac
               CALL g_idx_group.addAttribute("'3',",l_ac)
               
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL axmt500_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_xmdc3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axmt500_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[3] = l_ac
               CALL g_idx_group.addAttribute("'4',",l_ac)
               
               #add-point:page3, before row動作
               {<point name="ui_dialog.body3.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'4',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
               #顯示單身筆數
               CALL axmt500_idx_chk()
               #add-point:page3自定義行為
               {<point name="ui_dialog.body3.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為
            {<point name="ui_dialog.body3.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_xmdc4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axmt500_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[4] = l_ac
               CALL g_idx_group.addAttribute("'5',",l_ac)
               
               #add-point:page4, before row動作
               {<point name="ui_dialog.body4.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'5',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_current_page = 4
               #顯示單身筆數
               CALL axmt500_idx_chk()
               #add-point:page4自定義行為
               {<point name="ui_dialog.body4.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_4)
            
         
            #add-point:page4自定義行為
            {<point name="ui_dialog.body4.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_xmdc5_d TO s_detail5.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axmt500_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[5] = l_ac
               CALL g_idx_group.addAttribute("'6',",l_ac)
               
               #add-point:page5, before row動作
               {<point name="ui_dialog.body5.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'6',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               LET g_current_page = 5
               #顯示單身筆數
               CALL axmt500_idx_chk()
               #add-point:page5自定義行為
               {<point name="ui_dialog.body5.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_5)
            
         
            #add-point:page5自定義行為
            {<point name="ui_dialog.body5.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_xmdc6_d TO s_detail6.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axmt500_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail6")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[6] = l_ac
               CALL g_idx_group.addAttribute("",l_ac)
               
               #add-point:page6, before row動作
               {<point name="ui_dialog.body6.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue(""))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail6")
               LET g_current_page = 6
               #顯示單身筆數
               CALL axmt500_idx_chk()
               #add-point:page6自定義行為
               {<point name="ui_dialog.body6.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_6)
            
         
            #add-point:page6自定義行為
            {<point name="ui_dialog.body6.action"/>}
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL axmt500_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL axmt500_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL axmt500_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL axmt500_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL axmt500_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL axmt500_set_act_visible()   
            CALL axmt500_set_act_no_visible()
            IF NOT (g_xmda_m.xmdadocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " xmdaent = '" ||g_enterprise|| "' AND",
                                  " xmdadocno = '", g_xmda_m.xmdadocno, "' "
 
               #填到對應位置
               CALL axmt500_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:2)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status
            {<point name="menu.bpm_status" />}
            #END add-point
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
               INITIALIZE g_wc2_table4 TO NULL
 
               INITIALIZE g_wc2_table5 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "xmda_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmdc_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmdd_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "xmdq_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "xmdb_t" 
                        LET g_wc2_table4 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "xmds_t" 
                        LET g_wc2_table5 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
                  OR NOT cl_null(g_wc2_table4)
 
                  OR NOT cl_null(g_wc2_table5)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
                  IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
                  END IF
 
                  IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL axmt500_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
               INITIALIZE g_wc2_table4 TO NULL
 
               INITIALIZE g_wc2_table5 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "xmda_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmdc_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmdd_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "xmdq_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "xmdb_t" 
                        LET g_wc2_table4 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "xmds_t" 
                        LET g_wc2_table5 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
                  OR NOT cl_null(g_wc2_table4)
 
                  OR NOT cl_null(g_wc2_table5)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
                  IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
                  END IF
 
                  IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL axmt500_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL axmt500_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:2)
            #過濾瀏覽頁資料
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL axmt500_filter()
               EXIT DIALOG
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL axmt500_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt500_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL axmt500_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt500_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL axmt500_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt500_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL axmt500_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt500_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL axmt500_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt500_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_xmdc_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_xmdc2_d)
                  LET g_export_id[2]   = "s_detail2"
                  LET g_export_node[3] = base.typeInfo.create(g_xmdc3_d)
                  LET g_export_id[3]   = "s_detail3"
                  LET g_export_node[4] = base.typeInfo.create(g_xmdc4_d)
                  LET g_export_id[4]   = "s_detail4"
                  LET g_export_node[5] = base.typeInfo.create(g_xmdc5_d)
                  LET g_export_id[5]   = "s_detail5"
                  LET g_export_node[6] = base.typeInfo.create(g_xmdc6_d)
                  LET g_export_id[6]   = "s_detail6"
 
                  #add-point:ON ACTION exporttoexcel
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD xmdcseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL axmt500_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL axmt500_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION make_apmt400
            LET g_action_choice="make_apmt400"
            IF cl_auth_chk_act("make_apmt400") THEN
               
               #add-point:ON ACTION make_apmt400
               {<point name="menu.make_apmt400" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION open_apmi004_01
            LET g_action_choice="open_apmi004_01"
            IF cl_auth_chk_act("open_apmi004_01") THEN
               
               #add-point:ON ACTION open_apmi004_01
               {<point name="menu.open_apmi004_01" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL axmt500_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL axmt500_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION open_axmq140
            LET g_action_choice="open_axmq140"
            IF cl_auth_chk_act("open_axmq140") THEN
               
               #add-point:ON ACTION open_axmq140
               {<point name="menu.open_axmq140" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION open_memo
            LET g_action_choice="open_memo"
            IF cl_auth_chk_act("open_memo") THEN
               
               #add-point:ON ACTION open_memo
               {<point name="menu.open_memo" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION open_axmt500_03
            LET g_action_choice="open_axmt500_03"
            IF cl_auth_chk_act("open_axmt500_03") THEN
               
               #add-point:ON ACTION open_axmt500_03
               {<point name="menu.open_axmt500_03" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" mark="Y"/>}
               #END add-point
               &include "erp/axm/axmt500_rep.4gl"
               #add-point:ON ACTION output.after
               {<point name="menu.after_output" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL axmt500_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION get_price
            LET g_action_choice="get_price"
            IF cl_auth_chk_act("get_price") THEN
               
               #add-point:ON ACTION get_price
               {<point name="menu.get_price" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION open_axmt500_05
            LET g_action_choice="open_axmt500_05"
            IF cl_auth_chk_act("open_axmt500_05") THEN
               
               #add-point:ON ACTION open_axmt500_05
               {<point name="menu.open_axmt500_05" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL axmt500_query()
               #add-point:ON ACTION query
               {<point name="menu.query" mark="Y"/>}
               #END add-point
               #應用 a59 樣板自動產生(Version:2)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
               CALL g_curr_diag.setCurrentRow("s_detail3",1)
               CALL g_curr_diag.setCurrentRow("s_detail4",1)
               CALL g_curr_diag.setCurrentRow("s_detail5",1)
               CALL g_curr_diag.setCurrentRow("s_detail6",1)
 
 
 
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION direct_orders
            LET g_action_choice="direct_orders"
            IF cl_auth_chk_act("direct_orders") THEN
               
               #add-point:ON ACTION direct_orders
               {<point name="menu.direct_orders" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION open_axmt500_02
            LET g_action_choice="open_axmt500_02"
            IF cl_auth_chk_act("open_axmt500_02") THEN
               
               #add-point:ON ACTION open_axmt500_02
               {<point name="menu.open_axmt500_02" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION open_xmdb
            LET g_action_choice="open_xmdb"
            IF cl_auth_chk_act("open_xmdb") THEN
               
               #add-point:ON ACTION open_xmdb
               {<point name="menu.open_xmdb" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION s_item_select
            LET g_action_choice="s_item_select"
            IF cl_auth_chk_act("s_item_select") THEN
               
               #add-point:ON ACTION s_item_select
               {<point name="menu.s_item_select" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION prog_xmda002
            LET g_action_choice="prog_xmda002"
            IF cl_auth_chk_act("prog_xmda002") THEN
               
               #add-point:ON ACTION prog_xmda002
               {<point name="menu.prog_xmda002" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION prog_xmda008
            LET g_action_choice="prog_xmda008"
            IF cl_auth_chk_act("prog_xmda008") THEN
               
               #add-point:ON ACTION prog_xmda008
               {<point name="menu.prog_xmda008" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION prog_xmda027
            LET g_action_choice="prog_xmda027"
            IF cl_auth_chk_act("prog_xmda027") THEN
               
               #add-point:ON ACTION prog_xmda027
               {<point name="menu.prog_xmda027" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL axmt500_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL axmt500_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL axmt500_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_xmda_m.xmdadocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="axmt500.browser_fill" ver="65" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION axmt500_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用)
   {<point name="browser_fill.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="browser_fill.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE xmdadocno ",
                      " FROM xmda_t ",
                      " ",
                      " LEFT JOIN xmdc_t ON xmdcent = xmdaent AND xmdadocno = xmdcdocno ", "  ",
                      #add-point:browser_fill段sql(xmdc_t1)
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
                      " LEFT JOIN xmdd_t ON xmddent = xmdaent AND xmdadocno = xmdddocno", "  AND xmdcseq=xmddseq ",
                      #add-point:browser_fill段sql(xmdd_t1)
                      {<point name="browser_fill.cnt.join.xmdd_t1"/>}
                      #end add-point
 
                      " LEFT JOIN xmdq_t ON xmdqent = xmdaent AND xmdadocno = xmdqdocno", "  ",
                      #add-point:browser_fill段sql(xmdq_t1)
                      {<point name="browser_fill.cnt.join.xmdq_t1"/>}
                      #end add-point
 
                      " LEFT JOIN xmdb_t ON xmdbent = xmdaent AND xmdadocno = xmdbdocno", "  ",
                      #add-point:browser_fill段sql(xmdb_t1)
                      {<point name="browser_fill.cnt.join.xmdb_t1"/>}
                      #end add-point
 
                      " LEFT JOIN xmds_t ON xmdsent = xmdaent AND xmdadocno = xmdsdocno", "  ",
                      #add-point:browser_fill段sql(xmds_t1)
                      {<point name="browser_fill.cnt.join.xmds_t1"/>}
                      #end add-point
 
 
 
                      " ", 
                      " ", 
                      " WHERE xmdaent = '" ||g_enterprise|| "' AND xmdcent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("xmda_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE xmdadocno ",
                      " FROM xmda_t ", 
                      "  ",
                      "  ",
                      " WHERE xmdaent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("xmda_t")
   END IF
   
   #add-point:browser_fill,cnt wc
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_xmda_m.* TO NULL
      CALL g_xmdc_d.clear()        
      CALL g_xmdc2_d.clear() 
      CALL g_xmdc3_d.clear() 
      CALL g_xmdc4_d.clear() 
      CALL g_xmdc5_d.clear() 
      CALL g_xmdc6_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.xmdadocno,t0.xmdadocdt,t0.xmda001,t0.xmda002,t0.xmda003,t0.xmda004 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   LET g_sql = " SELECT DISTINCT t0.xmdastus,t0.xmdadocno,t0.xmdadocdt,t0.xmda001,t0.xmda002,t0.xmda003, 
       t0.xmda004,t1.ooag011 ,t2.ooefl003 ,t3.pmaal004 ",
               " FROM xmda_t t0",
               "  ",
               "  LEFT JOIN xmdc_t ON xmdcent = xmdaent AND xmdadocno = xmdcdocno ", "  ", 
               #add-point:browser_fill段sql(xmdc_t1)
               {<point name="browser_fill.join.xmdc_t1"/>}
               #end add-point
               "  LEFT JOIN xmdd_t ON xmddent = xmdaent AND xmdadocno = xmdddocno", "  AND xmdcseq=xmddseq ", 
               #add-point:browser_fill段sql(xmdd_t1)
               {<point name="browser_fill.join.xmdd_t1"/>}
               #end add-point
 
               "  LEFT JOIN xmdq_t ON xmdqent = xmdaent AND xmdadocno = xmdqdocno", "  ", 
               #add-point:browser_fill段sql(xmdq_t1)
               {<point name="browser_fill.join.xmdq_t1"/>}
               #end add-point
 
               "  LEFT JOIN xmdb_t ON xmdbent = xmdaent AND xmdadocno = xmdbdocno", "  ", 
               #add-point:browser_fill段sql(xmdb_t1)
               {<point name="browser_fill.join.xmdb_t1"/>}
               #end add-point
 
               "  LEFT JOIN xmds_t ON xmdsent = xmdaent AND xmdadocno = xmdsdocno", "  ", 
               #add-point:browser_fill段sql(xmds_t1)
               {<point name="browser_fill.join.xmds_t1"/>}
               #end add-point
 
 
 
               "  ",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent='"||g_enterprise||"' AND t1.ooag001=t0.xmda002  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=t0.xmda003 AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t3 ON t3.pmaalent='"||g_enterprise||"' AND t3.pmaal001=t0.xmda004 AND t3.pmaal002='"||g_dlang||"' ",
 
               " WHERE t0.xmdaent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("xmda_t")
   #add-point:browser_fill,sql wc
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY xmdadocno ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"xmda_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill段open cursor
   {<point name="browser_fill.open"/>}
   #end add-point
   
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_xmdadocno,g_browser[g_cnt].b_xmdadocdt, 
       g_browser[g_cnt].b_xmda001,g_browser[g_cnt].b_xmda002,g_browser[g_cnt].b_xmda003,g_browser[g_cnt].b_xmda004, 
       g_browser[g_cnt].b_xmda002_desc,g_browser[g_cnt].b_xmda003_desc,g_browser[g_cnt].b_xmda004_desc 

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
      #遮罩相關處理
      CALL axmt500_browser_mask()
  
            #應用 a24 樣板自動產生(Version:2)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "C"
            LET g_browser[g_cnt].b_statepic = "stus/16/closed.png"
         WHEN "H"
            LET g_browser[g_cnt].b_statepic = "stus/16/hold.png"
         WHEN "UH"
            LET g_browser[g_cnt].b_statepic = "stus/16/unhold.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_browse THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_xmdadocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION
]]>
  </section>
  <section id="axmt500.ui_headershow" ver="44" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION axmt500_ui_headershow()
   #add-point:ui_headershow段define(客製用)
   {<point name="ui_headershow.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="ui_headershow.define"/>} 
   #end add-point      
   
   #add-point:Function前置處理 
   {<point name="ui_headershow.pre_function"/>}
   #end add-point
   
   LET g_xmda_m.xmdadocno = g_browser[g_current_idx].b_xmdadocno   
 
   EXECUTE axmt500_master_referesh USING g_xmda_m.xmdadocno INTO g_xmda_m.xmdadocno,g_xmda_m.xmda001, 
       g_xmda_m.xmdadocdt,g_xmda_m.xmda004,g_xmda_m.xmda002,g_xmda_m.xmda003,g_xmda_m.xmdasite,g_xmda_m.xmdastus, 
       g_xmda_m.xmda005,g_xmda_m.xmda006,g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda033,g_xmda_m.xmda027, 
       g_xmda_m.xmda009,g_xmda_m.xmda010,g_xmda_m.xmda011,g_xmda_m.xmda012,g_xmda_m.xmda013,g_xmda_m.xmda035, 
       g_xmda_m.xmda015,g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda018,g_xmda_m.xmda019,g_xmda_m.xmda023, 
       g_xmda_m.xmda032,g_xmda_m.xmda071,g_xmda_m.xmda050,g_xmda_m.xmda021,g_xmda_m.xmda022,g_xmda_m.xmda034, 
       g_xmda_m.xmda203,g_xmda_m.xmda024,g_xmda_m.xmda048,g_xmda_m.xmda049,g_xmda_m.xmda044,g_xmda_m.xmda030, 
       g_xmda_m.xmda031,g_xmda_m.xmda045,g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028,g_xmda_m.xmda043, 
       g_xmda_m.xmda025,g_xmda_m.xmda026,g_xmda_m.xmda020,g_xmda_m.xmda037,g_xmda_m.xmda038,g_xmda_m.xmda036, 
       g_xmda_m.xmda039,g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdaownid,g_xmda_m.xmdaowndp,g_xmda_m.xmdacrtid, 
       g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid,g_xmda_m.xmdamoddt,g_xmda_m.xmdacnfid, 
       g_xmda_m.xmdacnfdt,g_xmda_m.xmda004_desc,g_xmda_m.xmda002_desc,g_xmda_m.xmda003_desc,g_xmda_m.xmda009_desc, 
       g_xmda_m.xmda010_desc,g_xmda_m.xmda015_desc,g_xmda_m.xmda017_desc,g_xmda_m.xmda018_desc,g_xmda_m.xmda023_desc, 
       g_xmda_m.xmda032_desc,g_xmda_m.xmda021_desc,g_xmda_m.xmda022_desc,g_xmda_m.xmda034_desc,g_xmda_m.xmda203_desc, 
       g_xmda_m.xmda024_desc,g_xmda_m.xmda044_desc,g_xmda_m.xmda025_desc,g_xmda_m.xmda026_desc,g_xmda_m.xmda020_desc, 
       g_xmda_m.xmda036_desc,g_xmda_m.xmdaownid_desc,g_xmda_m.xmdaowndp_desc,g_xmda_m.xmdacrtid_desc, 
       g_xmda_m.xmdacrtdp_desc,g_xmda_m.xmdamodid_desc,g_xmda_m.xmdacnfid_desc
   CALL axmt500_xmda_t_mask()
   CALL axmt500_show()
      
END FUNCTION
]]>
  </section>
  <section id="axmt500.ui_detailshow" ver="9" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION axmt500_ui_detailshow()
   #add-point:ui_detailshow段define(客製用)
   {<point name="ui_detailshow.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="ui_detailshow.define"/>} 
   #end add-point    
 
   #add-point:Function前置處理
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail4",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail5",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail6",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="axmt500.ui_browser_refresh" ver="13" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION axmt500_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用)
   {<point name="ui_browser_refresh.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="ui_browser_refresh.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理 
   {<point name="ui_browser_refresh.pre_function"/>}
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_xmdadocno = g_xmda_m.xmdadocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="axmt500.construct" ver="113" ch="" status="" src="s" readonly="">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION axmt500_construct()
   #add-point:cs段define(客製用)
   {<point name="cs.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="cs.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理 
   {<point name="cs.pre_function"/>}
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_xmda_m.* TO NULL
   CALL g_xmdc_d.clear()        
   CALL g_xmdc2_d.clear() 
   CALL g_xmdc3_d.clear() 
   CALL g_xmdc4_d.clear() 
   CALL g_xmdc5_d.clear() 
   CALL g_xmdc6_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
   INITIALIZE g_wc2_table3 TO NULL
 
   INITIALIZE g_wc2_table4 TO NULL
 
   INITIALIZE g_wc2_table5 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON xmdadocno,xmda001,xmdadocdt,xmda004,xmda002,xmda003,xmdastus,xmda005, 
          xmda006,xmda007,xmda008,xmda033,xmda027,xmda009,xmda010,xmda011,xmda012,xmda013,xmda035,xmda015, 
          xmda016,xmda017,xmda018,xmda019,xmda023,xmda032,xmda071,xmda050,xmda021,xmda022,xmda034,xmda203, 
          xmda024,xmda048,xmda049,xmda044,xmda030,xmda031,xmda045,xmda046,xmda047,xmda028,xmda025,oofb0171, 
          xmda026,oofb0172,xmda020,xmda037,xmda037_desc,xmda038,xmda038_desc,xmda036,xmda039,xmda041, 
          xmda042,xmdaownid,xmdaowndp,xmdacrtid,xmdacrtdp,xmdacrtdt,xmdamodid,xmdamoddt,xmdacnfid,xmdacnfdt 

 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<xmdacrtdt>>----
         AFTER FIELD xmdacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<xmdamoddt>>----
         AFTER FIELD xmdamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmdacnfdt>>----
         AFTER FIELD xmdacnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmdapstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.xmdadocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdadocno
            #add-point:ON ACTION controlp INFIELD xmdadocno
            {<point name="construct.c.xmdadocno" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdadocno
            #add-point:BEFORE FIELD xmdadocno
            {<point name="construct.b.xmdadocno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdadocno
            
            #add-point:AFTER FIELD xmdadocno
            {<point name="construct.a.xmdadocno" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda001
            #add-point:BEFORE FIELD xmda001
            {<point name="construct.b.xmda001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda001
            
            #add-point:AFTER FIELD xmda001
            {<point name="construct.a.xmda001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda001
            #add-point:ON ACTION controlp INFIELD xmda001
            {<point name="construct.c.xmda001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdadocdt
            #add-point:BEFORE FIELD xmdadocdt
            {<point name="construct.b.xmdadocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdadocdt
            
            #add-point:AFTER FIELD xmdadocdt
            {<point name="construct.a.xmdadocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdadocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdadocdt
            #add-point:ON ACTION controlp INFIELD xmdadocdt
            {<point name="construct.c.xmdadocdt" />}
            #END add-point
 
         #Ctrlp:construct.c.xmda004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda004
            #add-point:ON ACTION controlp INFIELD xmda004
            {<point name="construct.c.xmda004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda004
            #add-point:BEFORE FIELD xmda004
            {<point name="construct.b.xmda004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda004
            
            #add-point:AFTER FIELD xmda004
            {<point name="construct.a.xmda004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda002
            #add-point:ON ACTION controlp INFIELD xmda002
            {<point name="construct.c.xmda002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda002
            #add-point:BEFORE FIELD xmda002
            {<point name="construct.b.xmda002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda002
            
            #add-point:AFTER FIELD xmda002
            {<point name="construct.a.xmda002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda003
            #add-point:ON ACTION controlp INFIELD xmda003
            {<point name="construct.c.xmda003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda003
            #add-point:BEFORE FIELD xmda003
            {<point name="construct.b.xmda003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda003
            
            #add-point:AFTER FIELD xmda003
            {<point name="construct.a.xmda003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdastus
            #add-point:BEFORE FIELD xmdastus
            {<point name="construct.b.xmdastus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdastus
            
            #add-point:AFTER FIELD xmdastus
            {<point name="construct.a.xmdastus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdastus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdastus
            #add-point:ON ACTION controlp INFIELD xmdastus
            {<point name="construct.c.xmdastus" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda005
            #add-point:BEFORE FIELD xmda005
            {<point name="construct.b.xmda005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda005
            
            #add-point:AFTER FIELD xmda005
            {<point name="construct.a.xmda005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda005
            #add-point:ON ACTION controlp INFIELD xmda005
            {<point name="construct.c.xmda005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda006
            #add-point:BEFORE FIELD xmda006
            {<point name="construct.b.xmda006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda006
            
            #add-point:AFTER FIELD xmda006
            {<point name="construct.a.xmda006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda006
            #add-point:ON ACTION controlp INFIELD xmda006
            {<point name="construct.c.xmda006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda007
            #add-point:BEFORE FIELD xmda007
            {<point name="construct.b.xmda007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda007
            
            #add-point:AFTER FIELD xmda007
            {<point name="construct.a.xmda007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda007
            #add-point:ON ACTION controlp INFIELD xmda007
            {<point name="construct.c.xmda007" />}
            #END add-point
 
         #Ctrlp:construct.c.xmda008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda008
            #add-point:ON ACTION controlp INFIELD xmda008
            {<point name="construct.c.xmda008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda008
            #add-point:BEFORE FIELD xmda008
            {<point name="construct.b.xmda008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda008
            
            #add-point:AFTER FIELD xmda008
            {<point name="construct.a.xmda008" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda033
            #add-point:BEFORE FIELD xmda033
            {<point name="construct.b.xmda033" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda033
            
            #add-point:AFTER FIELD xmda033
            {<point name="construct.a.xmda033" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda033
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda033
            #add-point:ON ACTION controlp INFIELD xmda033
            {<point name="construct.c.xmda033" />}
            #END add-point
 
         #Ctrlp:construct.c.xmda027
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda027
            #add-point:ON ACTION controlp INFIELD xmda027
            {<point name="construct.c.xmda027" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda027
            #add-point:BEFORE FIELD xmda027
            {<point name="construct.b.xmda027" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda027
            
            #add-point:AFTER FIELD xmda027
            {<point name="construct.a.xmda027" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda009
            #add-point:ON ACTION controlp INFIELD xmda009
            {<point name="construct.c.xmda009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda009
            #add-point:BEFORE FIELD xmda009
            {<point name="construct.b.xmda009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda009
            
            #add-point:AFTER FIELD xmda009
            {<point name="construct.a.xmda009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda010
            #add-point:ON ACTION controlp INFIELD xmda010
            {<point name="construct.c.xmda010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda010
            #add-point:BEFORE FIELD xmda010
            {<point name="construct.b.xmda010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda010
            
            #add-point:AFTER FIELD xmda010
            {<point name="construct.a.xmda010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda011
            #add-point:ON ACTION controlp INFIELD xmda011
            {<point name="construct.c.xmda011" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda011
            #add-point:BEFORE FIELD xmda011
            {<point name="construct.b.xmda011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda011
            
            #add-point:AFTER FIELD xmda011
            {<point name="construct.a.xmda011" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda012
            #add-point:BEFORE FIELD xmda012
            {<point name="construct.b.xmda012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda012
            
            #add-point:AFTER FIELD xmda012
            {<point name="construct.a.xmda012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda012
            #add-point:ON ACTION controlp INFIELD xmda012
            {<point name="construct.c.xmda012" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda013
            #add-point:BEFORE FIELD xmda013
            {<point name="construct.b.xmda013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda013
            
            #add-point:AFTER FIELD xmda013
            {<point name="construct.a.xmda013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda013
            #add-point:ON ACTION controlp INFIELD xmda013
            {<point name="construct.c.xmda013" />}
            #END add-point
 
         #Ctrlp:construct.c.xmda035
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda035
            #add-point:ON ACTION controlp INFIELD xmda035
            {<point name="construct.c.xmda035" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda035
            #add-point:BEFORE FIELD xmda035
            {<point name="construct.b.xmda035" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda035
            
            #add-point:AFTER FIELD xmda035
            {<point name="construct.a.xmda035" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda015
            #add-point:ON ACTION controlp INFIELD xmda015
            {<point name="construct.c.xmda015" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda015
            #add-point:BEFORE FIELD xmda015
            {<point name="construct.b.xmda015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda015
            
            #add-point:AFTER FIELD xmda015
            {<point name="construct.a.xmda015" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda016
            #add-point:BEFORE FIELD xmda016
            {<point name="construct.b.xmda016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda016
            
            #add-point:AFTER FIELD xmda016
            {<point name="construct.a.xmda016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda016
            #add-point:ON ACTION controlp INFIELD xmda016
            {<point name="construct.c.xmda016" />}
            #END add-point
 
         #Ctrlp:construct.c.xmda017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda017
            #add-point:ON ACTION controlp INFIELD xmda017
            {<point name="construct.c.xmda017" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda017
            #add-point:BEFORE FIELD xmda017
            {<point name="construct.b.xmda017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda017
            
            #add-point:AFTER FIELD xmda017
            {<point name="construct.a.xmda017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda018
            #add-point:ON ACTION controlp INFIELD xmda018
            {<point name="construct.c.xmda018" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda018
            #add-point:BEFORE FIELD xmda018
            {<point name="construct.b.xmda018" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda018
            
            #add-point:AFTER FIELD xmda018
            {<point name="construct.a.xmda018" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda019
            #add-point:BEFORE FIELD xmda019
            {<point name="construct.b.xmda019" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda019
            
            #add-point:AFTER FIELD xmda019
            {<point name="construct.a.xmda019" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda019
            #add-point:ON ACTION controlp INFIELD xmda019
            {<point name="construct.c.xmda019" />}
            #END add-point
 
         #Ctrlp:construct.c.xmda023
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda023
            #add-point:ON ACTION controlp INFIELD xmda023
            {<point name="construct.c.xmda023" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda023
            #add-point:BEFORE FIELD xmda023
            {<point name="construct.b.xmda023" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda023
            
            #add-point:AFTER FIELD xmda023
            {<point name="construct.a.xmda023" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda032
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda032
            #add-point:ON ACTION controlp INFIELD xmda032
            {<point name="construct.c.xmda032" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda032
            #add-point:BEFORE FIELD xmda032
            {<point name="construct.b.xmda032" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda032
            
            #add-point:AFTER FIELD xmda032
            {<point name="construct.a.xmda032" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda071
            #add-point:BEFORE FIELD xmda071
            {<point name="construct.b.xmda071" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda071
            
            #add-point:AFTER FIELD xmda071
            {<point name="construct.a.xmda071" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda071
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda071
            #add-point:ON ACTION controlp INFIELD xmda071
            {<point name="construct.c.xmda071" />}
            #END add-point
 
         #Ctrlp:construct.c.xmda050
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda050
            #add-point:ON ACTION controlp INFIELD xmda050
            {<point name="construct.c.xmda050" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda050
            #add-point:BEFORE FIELD xmda050
            {<point name="construct.b.xmda050" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda050
            
            #add-point:AFTER FIELD xmda050
            {<point name="construct.a.xmda050" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda021
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda021
            #add-point:ON ACTION controlp INFIELD xmda021
            {<point name="construct.c.xmda021" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda021
            #add-point:BEFORE FIELD xmda021
            {<point name="construct.b.xmda021" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda021
            
            #add-point:AFTER FIELD xmda021
            {<point name="construct.a.xmda021" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda022
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda022
            #add-point:ON ACTION controlp INFIELD xmda022
            {<point name="construct.c.xmda022" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda022
            #add-point:BEFORE FIELD xmda022
            {<point name="construct.b.xmda022" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda022
            
            #add-point:AFTER FIELD xmda022
            {<point name="construct.a.xmda022" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda034
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda034
            #add-point:ON ACTION controlp INFIELD xmda034
            {<point name="construct.c.xmda034" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda034
            #add-point:BEFORE FIELD xmda034
            {<point name="construct.b.xmda034" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda034
            
            #add-point:AFTER FIELD xmda034
            {<point name="construct.a.xmda034" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda203
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda203
            #add-point:ON ACTION controlp INFIELD xmda203
            {<point name="construct.c.xmda203" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda203
            #add-point:BEFORE FIELD xmda203
            {<point name="construct.b.xmda203" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda203
            
            #add-point:AFTER FIELD xmda203
            {<point name="construct.a.xmda203" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda024
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda024
            #add-point:ON ACTION controlp INFIELD xmda024
            {<point name="construct.c.xmda024" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda024
            #add-point:BEFORE FIELD xmda024
            {<point name="construct.b.xmda024" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda024
            
            #add-point:AFTER FIELD xmda024
            {<point name="construct.a.xmda024" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda048
            #add-point:BEFORE FIELD xmda048
            {<point name="construct.b.xmda048" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda048
            
            #add-point:AFTER FIELD xmda048
            {<point name="construct.a.xmda048" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda048
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda048
            #add-point:ON ACTION controlp INFIELD xmda048
            {<point name="construct.c.xmda048" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda049
            #add-point:BEFORE FIELD xmda049
            {<point name="construct.b.xmda049" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda049
            
            #add-point:AFTER FIELD xmda049
            {<point name="construct.a.xmda049" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda049
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda049
            #add-point:ON ACTION controlp INFIELD xmda049
            {<point name="construct.c.xmda049" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda044
            #add-point:BEFORE FIELD xmda044
            {<point name="construct.b.xmda044" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda044
            
            #add-point:AFTER FIELD xmda044
            {<point name="construct.a.xmda044" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda044
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda044
            #add-point:ON ACTION controlp INFIELD xmda044
            {<point name="construct.c.xmda044" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda030
            #add-point:BEFORE FIELD xmda030
            {<point name="construct.b.xmda030" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda030
            
            #add-point:AFTER FIELD xmda030
            {<point name="construct.a.xmda030" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda030
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda030
            #add-point:ON ACTION controlp INFIELD xmda030
            {<point name="construct.c.xmda030" />}
            #END add-point
 
         #Ctrlp:construct.c.xmda031
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda031
            #add-point:ON ACTION controlp INFIELD xmda031
            {<point name="construct.c.xmda031" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda031
            #add-point:BEFORE FIELD xmda031
            {<point name="construct.b.xmda031" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda031
            
            #add-point:AFTER FIELD xmda031
            {<point name="construct.a.xmda031" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda045
            #add-point:BEFORE FIELD xmda045
            {<point name="construct.b.xmda045" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda045
            
            #add-point:AFTER FIELD xmda045
            {<point name="construct.a.xmda045" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda045
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda045
            #add-point:ON ACTION controlp INFIELD xmda045
            {<point name="construct.c.xmda045" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda046
            #add-point:BEFORE FIELD xmda046
            {<point name="construct.b.xmda046" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda046
            
            #add-point:AFTER FIELD xmda046
            {<point name="construct.a.xmda046" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda046
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda046
            #add-point:ON ACTION controlp INFIELD xmda046
            {<point name="construct.c.xmda046" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda047
            #add-point:BEFORE FIELD xmda047
            {<point name="construct.b.xmda047" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda047
            
            #add-point:AFTER FIELD xmda047
            {<point name="construct.a.xmda047" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda047
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda047
            #add-point:ON ACTION controlp INFIELD xmda047
            {<point name="construct.c.xmda047" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda028
            #add-point:BEFORE FIELD xmda028
            {<point name="construct.b.xmda028" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda028
            
            #add-point:AFTER FIELD xmda028
            {<point name="construct.a.xmda028" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda028
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda028
            #add-point:ON ACTION controlp INFIELD xmda028
            {<point name="construct.c.xmda028" />}
            #END add-point
 
         #Ctrlp:construct.c.xmda025
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda025
            #add-point:ON ACTION controlp INFIELD xmda025
            {<point name="construct.c.xmda025" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda025
            #add-point:BEFORE FIELD xmda025
            {<point name="construct.b.xmda025" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda025
            
            #add-point:AFTER FIELD xmda025
            {<point name="construct.a.xmda025" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD oofb0171
            #add-point:BEFORE FIELD oofb0171
            {<point name="construct.b.oofb0171" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD oofb0171
            
            #add-point:AFTER FIELD oofb0171
            {<point name="construct.a.oofb0171" />}
            #END add-point
            
 
         #Ctrlp:construct.c.oofb0171
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD oofb0171
            #add-point:ON ACTION controlp INFIELD oofb0171
            {<point name="construct.c.oofb0171" />}
            #END add-point
 
         #Ctrlp:construct.c.xmda026
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda026
            #add-point:ON ACTION controlp INFIELD xmda026
            {<point name="construct.c.xmda026" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda026
            #add-point:BEFORE FIELD xmda026
            {<point name="construct.b.xmda026" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda026
            
            #add-point:AFTER FIELD xmda026
            {<point name="construct.a.xmda026" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD oofb0172
            #add-point:BEFORE FIELD oofb0172
            {<point name="construct.b.oofb0172" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD oofb0172
            
            #add-point:AFTER FIELD oofb0172
            {<point name="construct.a.oofb0172" />}
            #END add-point
            
 
         #Ctrlp:construct.c.oofb0172
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD oofb0172
            #add-point:ON ACTION controlp INFIELD oofb0172
            {<point name="construct.c.oofb0172" />}
            #END add-point
 
         #Ctrlp:construct.c.xmda020
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda020
            #add-point:ON ACTION controlp INFIELD xmda020
            {<point name="construct.c.xmda020" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda020
            #add-point:BEFORE FIELD xmda020
            {<point name="construct.b.xmda020" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda020
            
            #add-point:AFTER FIELD xmda020
            {<point name="construct.a.xmda020" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda037
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda037
            #add-point:ON ACTION controlp INFIELD xmda037
            {<point name="construct.c.xmda037" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda037
            #add-point:BEFORE FIELD xmda037
            {<point name="construct.b.xmda037" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda037
            
            #add-point:AFTER FIELD xmda037
            {<point name="construct.a.xmda037" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda037_desc
            #add-point:BEFORE FIELD xmda037_desc
            {<point name="construct.b.xmda037_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda037_desc
            
            #add-point:AFTER FIELD xmda037_desc
            {<point name="construct.a.xmda037_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda037_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda037_desc
            #add-point:ON ACTION controlp INFIELD xmda037_desc
            {<point name="construct.c.xmda037_desc" />}
            #END add-point
 
         #Ctrlp:construct.c.xmda038
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda038
            #add-point:ON ACTION controlp INFIELD xmda038
            {<point name="construct.c.xmda038" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda038
            #add-point:BEFORE FIELD xmda038
            {<point name="construct.b.xmda038" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda038
            
            #add-point:AFTER FIELD xmda038
            {<point name="construct.a.xmda038" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda038_desc
            #add-point:BEFORE FIELD xmda038_desc
            {<point name="construct.b.xmda038_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda038_desc
            
            #add-point:AFTER FIELD xmda038_desc
            {<point name="construct.a.xmda038_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda038_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda038_desc
            #add-point:ON ACTION controlp INFIELD xmda038_desc
            {<point name="construct.c.xmda038_desc" />}
            #END add-point
 
         #Ctrlp:construct.c.xmda036
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda036
            #add-point:ON ACTION controlp INFIELD xmda036
            {<point name="construct.c.xmda036" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda036
            #add-point:BEFORE FIELD xmda036
            {<point name="construct.b.xmda036" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda036
            
            #add-point:AFTER FIELD xmda036
            {<point name="construct.a.xmda036" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda039
            #add-point:BEFORE FIELD xmda039
            {<point name="construct.b.xmda039" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda039
            
            #add-point:AFTER FIELD xmda039
            {<point name="construct.a.xmda039" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda039
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda039
            #add-point:ON ACTION controlp INFIELD xmda039
            {<point name="construct.c.xmda039" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda041
            #add-point:BEFORE FIELD xmda041
            {<point name="construct.b.xmda041" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda041
            
            #add-point:AFTER FIELD xmda041
            {<point name="construct.a.xmda041" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda041
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda041
            #add-point:ON ACTION controlp INFIELD xmda041
            {<point name="construct.c.xmda041" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda042
            #add-point:BEFORE FIELD xmda042
            {<point name="construct.b.xmda042" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda042
            
            #add-point:AFTER FIELD xmda042
            {<point name="construct.a.xmda042" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda042
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda042
            #add-point:ON ACTION controlp INFIELD xmda042
            {<point name="construct.c.xmda042" />}
            #END add-point
 
         #Ctrlp:construct.c.xmdaownid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdaownid
            #add-point:ON ACTION controlp INFIELD xmdaownid
            {<point name="construct.c.xmdaownid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdaownid
            #add-point:BEFORE FIELD xmdaownid
            {<point name="construct.b.xmdaownid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdaownid
            
            #add-point:AFTER FIELD xmdaownid
            {<point name="construct.a.xmdaownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdaowndp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdaowndp
            #add-point:ON ACTION controlp INFIELD xmdaowndp
            {<point name="construct.c.xmdaowndp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdaowndp
            #add-point:BEFORE FIELD xmdaowndp
            {<point name="construct.b.xmdaowndp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdaowndp
            
            #add-point:AFTER FIELD xmdaowndp
            {<point name="construct.a.xmdaowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdacrtid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdacrtid
            #add-point:ON ACTION controlp INFIELD xmdacrtid
            {<point name="construct.c.xmdacrtid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdacrtid
            #add-point:BEFORE FIELD xmdacrtid
            {<point name="construct.b.xmdacrtid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdacrtid
            
            #add-point:AFTER FIELD xmdacrtid
            {<point name="construct.a.xmdacrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdacrtdp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdacrtdp
            #add-point:ON ACTION controlp INFIELD xmdacrtdp
            {<point name="construct.c.xmdacrtdp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdacrtdp
            #add-point:BEFORE FIELD xmdacrtdp
            {<point name="construct.b.xmdacrtdp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdacrtdp
            
            #add-point:AFTER FIELD xmdacrtdp
            {<point name="construct.a.xmdacrtdp" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdacrtdt
            #add-point:BEFORE FIELD xmdacrtdt
            {<point name="construct.b.xmdacrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.xmdamodid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdamodid
            #add-point:ON ACTION controlp INFIELD xmdamodid
            {<point name="construct.c.xmdamodid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdamodid
            #add-point:BEFORE FIELD xmdamodid
            {<point name="construct.b.xmdamodid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdamodid
            
            #add-point:AFTER FIELD xmdamodid
            {<point name="construct.a.xmdamodid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdamoddt
            #add-point:BEFORE FIELD xmdamoddt
            {<point name="construct.b.xmdamoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.xmdacnfid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdacnfid
            #add-point:ON ACTION controlp INFIELD xmdacnfid
            {<point name="construct.c.xmdacnfid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdacnfid
            #add-point:BEFORE FIELD xmdacnfid
            {<point name="construct.b.xmdacnfid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdacnfid
            
            #add-point:AFTER FIELD xmdacnfid
            {<point name="construct.a.xmdacnfid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdacnfdt
            #add-point:BEFORE FIELD xmdacnfdt
            {<point name="construct.b.xmdacnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON xmdcseq,xmdc027,xmdc001,xmdc019,xmdc002,xmdc002_desc,xmdc006,xmdc007, 
          xmdc008,xmdc009,xmdc024,xmdc012,xmdc013,xmdc045,xmdc016,xmdc017,xmdc010,xmdc011,xmdc015,xmdc046, 
          xmdc047,xmdc048,xmdc023,xmdc020,xmdc021,xmdc022,xmdcunit,xmdcorga,xmdc052,xmdc049,xmdc053, 
          xmdc050,xmdc058,xmdc059,xmdc060,xmdc061,imaa005_desc,xmdc0272,l_pmao0092,l_pmao0102,xmdc028, 
          xmdc029,xmdc030,xmdc057,xmdc025,oofb0173,xmdc026,oofb0174,xmdc031,xmdc032,xmdc033,xmdc003, 
          xmdc054,xmdc036,xmdc037,xmdc038,xmdc039,xmdc035,xmdc040,xmdc041,xmdc042,xmdc043,xmdc044
           FROM s_detail1[1].xmdcseq,s_detail1[1].xmdc027,s_detail1[1].xmdc001,s_detail1[1].xmdc019, 
               s_detail1[1].xmdc002,s_detail1[1].xmdc002_desc,s_detail1[1].xmdc006,s_detail1[1].xmdc007, 
               s_detail1[1].xmdc008,s_detail1[1].xmdc009,s_detail1[1].xmdc024,s_detail1[1].xmdc012,s_detail1[1].xmdc013, 
               s_detail1[1].xmdc045,s_detail1[1].xmdc016,s_detail1[1].xmdc017,s_detail1[1].xmdc010,s_detail1[1].xmdc011, 
               s_detail1[1].xmdc015,s_detail1[1].xmdc046,s_detail1[1].xmdc047,s_detail1[1].xmdc048,s_detail1[1].xmdc023, 
               s_detail1[1].xmdc020,s_detail1[1].xmdc021,s_detail1[1].xmdc022,s_detail1[1].xmdcunit, 
               s_detail1[1].xmdcorga,s_detail1[1].xmdc052,s_detail1[1].xmdc049,s_detail1[1].xmdc053, 
               s_detail1[1].xmdc050,s_detail1[1].xmdc058,s_detail1[1].xmdc059,s_detail1[1].xmdc060,s_detail1[1].xmdc061, 
               s_detail2[1].imaa005_desc,s_detail2[1].xmdc0272,s_detail2[1].l_pmao0092,s_detail2[1].l_pmao0102, 
               s_detail2[1].xmdc028,s_detail2[1].xmdc029,s_detail2[1].xmdc030,s_detail2[1].xmdc057,s_detail2[1].xmdc025, 
               s_detail2[1].oofb0173,s_detail2[1].xmdc026,s_detail2[1].oofb0174,s_detail2[1].xmdc031, 
               s_detail2[1].xmdc032,s_detail2[1].xmdc033,s_detail2[1].xmdc003,s_detail2[1].xmdc054,s_detail2[1].xmdc036, 
               s_detail2[1].xmdc037,s_detail2[1].xmdc038,s_detail2[1].xmdc039,s_detail2[1].xmdc035,s_detail2[1].xmdc040, 
               s_detail2[1].xmdc041,s_detail2[1].xmdc042,s_detail2[1].xmdc043,s_detail2[1].xmdc044
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdcseq
            #add-point:BEFORE FIELD xmdcseq
            {<point name="construct.b.page1.xmdcseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdcseq
            
            #add-point:AFTER FIELD xmdcseq
            {<point name="construct.a.page1.xmdcseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdcseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdcseq
            #add-point:ON ACTION controlp INFIELD xmdcseq
            {<point name="construct.c.page1.xmdcseq" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xmdc027
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc027
            #add-point:ON ACTION controlp INFIELD xmdc027
            {<point name="construct.c.page1.xmdc027" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc027
            #add-point:BEFORE FIELD xmdc027
            {<point name="construct.b.page1.xmdc027" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc027
            
            #add-point:AFTER FIELD xmdc027
            {<point name="construct.a.page1.xmdc027" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_pmao009
            #add-point:BEFORE FIELD l_pmao009
            {<point name="construct.b.page1.l_pmao009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_pmao009
            
            #add-point:AFTER FIELD l_pmao009
            {<point name="construct.a.page1.l_pmao009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_pmao009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_pmao009
            #add-point:ON ACTION controlp INFIELD l_pmao009
            {<point name="construct.c.page1.l_pmao009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_pmao010
            #add-point:BEFORE FIELD l_pmao010
            {<point name="construct.b.page1.l_pmao010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_pmao010
            
            #add-point:AFTER FIELD l_pmao010
            {<point name="construct.a.page1.l_pmao010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_pmao010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_pmao010
            #add-point:ON ACTION controlp INFIELD l_pmao010
            {<point name="construct.c.page1.l_pmao010" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xmdc001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc001
            #add-point:ON ACTION controlp INFIELD xmdc001
            {<point name="construct.c.page1.xmdc001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc001
            #add-point:BEFORE FIELD xmdc001
            {<point name="construct.b.page1.xmdc001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc001
            
            #add-point:AFTER FIELD xmdc001
            {<point name="construct.a.page1.xmdc001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc019
            #add-point:BEFORE FIELD xmdc019
            {<point name="construct.b.page1.xmdc019" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc019
            
            #add-point:AFTER FIELD xmdc019
            {<point name="construct.a.page1.xmdc019" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdc019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc019
            #add-point:ON ACTION controlp INFIELD xmdc019
            {<point name="construct.c.page1.xmdc019" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc002
            #add-point:BEFORE FIELD xmdc002
            {<point name="construct.b.page1.xmdc002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc002
            
            #add-point:AFTER FIELD xmdc002
            {<point name="construct.a.page1.xmdc002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdc002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc002
            #add-point:ON ACTION controlp INFIELD xmdc002
            {<point name="construct.c.page1.xmdc002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc002_desc
            #add-point:BEFORE FIELD xmdc002_desc
            {<point name="construct.b.page1.xmdc002_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc002_desc
            
            #add-point:AFTER FIELD xmdc002_desc
            {<point name="construct.a.page1.xmdc002_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdc002_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc002_desc
            #add-point:ON ACTION controlp INFIELD xmdc002_desc
            {<point name="construct.c.page1.xmdc002_desc" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xmdc006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc006
            #add-point:ON ACTION controlp INFIELD xmdc006
            {<point name="construct.c.page1.xmdc006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc006
            #add-point:BEFORE FIELD xmdc006
            {<point name="construct.b.page1.xmdc006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc006
            
            #add-point:AFTER FIELD xmdc006
            {<point name="construct.a.page1.xmdc006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc007
            #add-point:BEFORE FIELD xmdc007
            {<point name="construct.b.page1.xmdc007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc007
            
            #add-point:AFTER FIELD xmdc007
            {<point name="construct.a.page1.xmdc007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdc007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc007
            #add-point:ON ACTION controlp INFIELD xmdc007
            {<point name="construct.c.page1.xmdc007" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xmdc008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc008
            #add-point:ON ACTION controlp INFIELD xmdc008
            {<point name="construct.c.page1.xmdc008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc008
            #add-point:BEFORE FIELD xmdc008
            {<point name="construct.b.page1.xmdc008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc008
            
            #add-point:AFTER FIELD xmdc008
            {<point name="construct.a.page1.xmdc008" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc009
            #add-point:BEFORE FIELD xmdc009
            {<point name="construct.b.page1.xmdc009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc009
            
            #add-point:AFTER FIELD xmdc009
            {<point name="construct.a.page1.xmdc009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdc009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc009
            #add-point:ON ACTION controlp INFIELD xmdc009
            {<point name="construct.c.page1.xmdc009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc024
            #add-point:BEFORE FIELD xmdc024
            {<point name="construct.b.page1.xmdc024" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc024
            
            #add-point:AFTER FIELD xmdc024
            {<point name="construct.a.page1.xmdc024" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdc024
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc024
            #add-point:ON ACTION controlp INFIELD xmdc024
            {<point name="construct.c.page1.xmdc024" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc012
            #add-point:BEFORE FIELD xmdc012
            {<point name="construct.b.page1.xmdc012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc012
            
            #add-point:AFTER FIELD xmdc012
            {<point name="construct.a.page1.xmdc012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdc012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc012
            #add-point:ON ACTION controlp INFIELD xmdc012
            {<point name="construct.c.page1.xmdc012" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc013
            #add-point:BEFORE FIELD xmdc013
            {<point name="construct.b.page1.xmdc013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc013
            
            #add-point:AFTER FIELD xmdc013
            {<point name="construct.a.page1.xmdc013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdc013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc013
            #add-point:ON ACTION controlp INFIELD xmdc013
            {<point name="construct.c.page1.xmdc013" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc045
            #add-point:BEFORE FIELD xmdc045
            {<point name="construct.b.page1.xmdc045" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc045
            
            #add-point:AFTER FIELD xmdc045
            {<point name="construct.a.page1.xmdc045" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdc045
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc045
            #add-point:ON ACTION controlp INFIELD xmdc045
            {<point name="construct.c.page1.xmdc045" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xmdc016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc016
            #add-point:ON ACTION controlp INFIELD xmdc016
            {<point name="construct.c.page1.xmdc016" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc016
            #add-point:BEFORE FIELD xmdc016
            {<point name="construct.b.page1.xmdc016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc016
            
            #add-point:AFTER FIELD xmdc016
            {<point name="construct.a.page1.xmdc016" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc017
            #add-point:BEFORE FIELD xmdc017
            {<point name="construct.b.page1.xmdc017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc017
            
            #add-point:AFTER FIELD xmdc017
            {<point name="construct.a.page1.xmdc017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdc017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc017
            #add-point:ON ACTION controlp INFIELD xmdc017
            {<point name="construct.c.page1.xmdc017" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xmdc010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc010
            #add-point:ON ACTION controlp INFIELD xmdc010
            {<point name="construct.c.page1.xmdc010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc010
            #add-point:BEFORE FIELD xmdc010
            {<point name="construct.b.page1.xmdc010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc010
            
            #add-point:AFTER FIELD xmdc010
            {<point name="construct.a.page1.xmdc010" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc011
            #add-point:BEFORE FIELD xmdc011
            {<point name="construct.b.page1.xmdc011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc011
            
            #add-point:AFTER FIELD xmdc011
            {<point name="construct.a.page1.xmdc011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdc011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc011
            #add-point:ON ACTION controlp INFIELD xmdc011
            {<point name="construct.c.page1.xmdc011" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc015
            #add-point:BEFORE FIELD xmdc015
            {<point name="construct.b.page1.xmdc015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc015
            
            #add-point:AFTER FIELD xmdc015
            {<point name="construct.a.page1.xmdc015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdc015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc015
            #add-point:ON ACTION controlp INFIELD xmdc015
            {<point name="construct.c.page1.xmdc015" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc046
            #add-point:BEFORE FIELD xmdc046
            {<point name="construct.b.page1.xmdc046" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc046
            
            #add-point:AFTER FIELD xmdc046
            {<point name="construct.a.page1.xmdc046" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdc046
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc046
            #add-point:ON ACTION controlp INFIELD xmdc046
            {<point name="construct.c.page1.xmdc046" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc047
            #add-point:BEFORE FIELD xmdc047
            {<point name="construct.b.page1.xmdc047" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc047
            
            #add-point:AFTER FIELD xmdc047
            {<point name="construct.a.page1.xmdc047" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdc047
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc047
            #add-point:ON ACTION controlp INFIELD xmdc047
            {<point name="construct.c.page1.xmdc047" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc048
            #add-point:BEFORE FIELD xmdc048
            {<point name="construct.b.page1.xmdc048" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc048
            
            #add-point:AFTER FIELD xmdc048
            {<point name="construct.a.page1.xmdc048" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdc048
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc048
            #add-point:ON ACTION controlp INFIELD xmdc048
            {<point name="construct.c.page1.xmdc048" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xmdc023
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc023
            #add-point:ON ACTION controlp INFIELD xmdc023
            {<point name="construct.c.page1.xmdc023" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc023
            #add-point:BEFORE FIELD xmdc023
            {<point name="construct.b.page1.xmdc023" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc023
            
            #add-point:AFTER FIELD xmdc023
            {<point name="construct.a.page1.xmdc023" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc020
            #add-point:BEFORE FIELD xmdc020
            {<point name="construct.b.page1.xmdc020" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc020
            
            #add-point:AFTER FIELD xmdc020
            {<point name="construct.a.page1.xmdc020" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdc020
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc020
            #add-point:ON ACTION controlp INFIELD xmdc020
            {<point name="construct.c.page1.xmdc020" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc021
            #add-point:BEFORE FIELD xmdc021
            {<point name="construct.b.page1.xmdc021" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc021
            
            #add-point:AFTER FIELD xmdc021
            {<point name="construct.a.page1.xmdc021" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdc021
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc021
            #add-point:ON ACTION controlp INFIELD xmdc021
            {<point name="construct.c.page1.xmdc021" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc022
            #add-point:BEFORE FIELD xmdc022
            {<point name="construct.b.page1.xmdc022" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc022
            
            #add-point:AFTER FIELD xmdc022
            {<point name="construct.a.page1.xmdc022" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdc022
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc022
            #add-point:ON ACTION controlp INFIELD xmdc022
            {<point name="construct.c.page1.xmdc022" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xmdcunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdcunit
            #add-point:ON ACTION controlp INFIELD xmdcunit
            {<point name="construct.c.page1.xmdcunit" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdcunit
            #add-point:BEFORE FIELD xmdcunit
            {<point name="construct.b.page1.xmdcunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdcunit
            
            #add-point:AFTER FIELD xmdcunit
            {<point name="construct.a.page1.xmdcunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdcorga
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdcorga
            #add-point:ON ACTION controlp INFIELD xmdcorga
            {<point name="construct.c.page1.xmdcorga" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdcorga
            #add-point:BEFORE FIELD xmdcorga
            {<point name="construct.b.page1.xmdcorga" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdcorga
            
            #add-point:AFTER FIELD xmdcorga
            {<point name="construct.a.page1.xmdcorga" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc052
            #add-point:BEFORE FIELD xmdc052
            {<point name="construct.b.page1.xmdc052" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc052
            
            #add-point:AFTER FIELD xmdc052
            {<point name="construct.a.page1.xmdc052" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdc052
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc052
            #add-point:ON ACTION controlp INFIELD xmdc052
            {<point name="construct.c.page1.xmdc052" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xmdc049
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc049
            #add-point:ON ACTION controlp INFIELD xmdc049
            {<point name="construct.c.page1.xmdc049" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc049
            #add-point:BEFORE FIELD xmdc049
            {<point name="construct.b.page1.xmdc049" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc049
            
            #add-point:AFTER FIELD xmdc049
            {<point name="construct.a.page1.xmdc049" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdc053
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc053
            #add-point:ON ACTION controlp INFIELD xmdc053
            {<point name="construct.c.page1.xmdc053" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc053
            #add-point:BEFORE FIELD xmdc053
            {<point name="construct.b.page1.xmdc053" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc053
            
            #add-point:AFTER FIELD xmdc053
            {<point name="construct.a.page1.xmdc053" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc050
            #add-point:BEFORE FIELD xmdc050
            {<point name="construct.b.page1.xmdc050" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc050
            
            #add-point:AFTER FIELD xmdc050
            {<point name="construct.a.page1.xmdc050" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdc050
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc050
            #add-point:ON ACTION controlp INFIELD xmdc050
            {<point name="construct.c.page1.xmdc050" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc058
            #add-point:BEFORE FIELD xmdc058
            {<point name="construct.b.page1.xmdc058" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc058
            
            #add-point:AFTER FIELD xmdc058
            {<point name="construct.a.page1.xmdc058" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdc058
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc058
            #add-point:ON ACTION controlp INFIELD xmdc058
            {<point name="construct.c.page1.xmdc058" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc059
            #add-point:BEFORE FIELD xmdc059
            {<point name="construct.b.page1.xmdc059" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc059
            
            #add-point:AFTER FIELD xmdc059
            {<point name="construct.a.page1.xmdc059" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdc059
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc059
            #add-point:ON ACTION controlp INFIELD xmdc059
            {<point name="construct.c.page1.xmdc059" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc060
            #add-point:BEFORE FIELD xmdc060
            {<point name="construct.b.page1.xmdc060" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc060
            
            #add-point:AFTER FIELD xmdc060
            {<point name="construct.a.page1.xmdc060" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdc060
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc060
            #add-point:ON ACTION controlp INFIELD xmdc060
            {<point name="construct.c.page1.xmdc060" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc061
            #add-point:BEFORE FIELD xmdc061
            {<point name="construct.b.page1.xmdc061" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc061
            
            #add-point:AFTER FIELD xmdc061
            {<point name="construct.a.page1.xmdc061" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdc061
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc061
            #add-point:ON ACTION controlp INFIELD xmdc061
            {<point name="construct.c.page1.xmdc061" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD imaa005
            #add-point:BEFORE FIELD imaa005
            {<point name="construct.b.page2.imaa005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD imaa005
            
            #add-point:AFTER FIELD imaa005
            {<point name="construct.a.page2.imaa005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.imaa005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD imaa005
            #add-point:ON ACTION controlp INFIELD imaa005
            {<point name="construct.c.page2.imaa005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD imaa005_desc
            #add-point:BEFORE FIELD imaa005_desc
            {<point name="construct.b.page2.imaa005_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD imaa005_desc
            
            #add-point:AFTER FIELD imaa005_desc
            {<point name="construct.a.page2.imaa005_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.imaa005_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD imaa005_desc
            #add-point:ON ACTION controlp INFIELD imaa005_desc
            {<point name="construct.c.page2.imaa005_desc" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.xmdc0272
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc0272
            #add-point:ON ACTION controlp INFIELD xmdc0272
            {<point name="construct.c.page2.xmdc0272" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc0272
            #add-point:BEFORE FIELD xmdc0272
            {<point name="construct.b.page2.xmdc0272" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc0272
            
            #add-point:AFTER FIELD xmdc0272
            {<point name="construct.a.page2.xmdc0272" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_pmao0092
            #add-point:BEFORE FIELD l_pmao0092
            {<point name="construct.b.page2.l_pmao0092" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_pmao0092
            
            #add-point:AFTER FIELD l_pmao0092
            {<point name="construct.a.page2.l_pmao0092" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.l_pmao0092
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_pmao0092
            #add-point:ON ACTION controlp INFIELD l_pmao0092
            {<point name="construct.c.page2.l_pmao0092" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_pmao0102
            #add-point:BEFORE FIELD l_pmao0102
            {<point name="construct.b.page2.l_pmao0102" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_pmao0102
            
            #add-point:AFTER FIELD l_pmao0102
            {<point name="construct.a.page2.l_pmao0102" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.l_pmao0102
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_pmao0102
            #add-point:ON ACTION controlp INFIELD l_pmao0102
            {<point name="construct.c.page2.l_pmao0102" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.xmdc028
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc028
            #add-point:ON ACTION controlp INFIELD xmdc028
            {<point name="construct.c.page2.xmdc028" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc028
            #add-point:BEFORE FIELD xmdc028
            {<point name="construct.b.page2.xmdc028" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc028
            
            #add-point:AFTER FIELD xmdc028
            {<point name="construct.a.page2.xmdc028" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdc029
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc029
            #add-point:ON ACTION controlp INFIELD xmdc029
            {<point name="construct.c.page2.xmdc029" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc029
            #add-point:BEFORE FIELD xmdc029
            {<point name="construct.b.page2.xmdc029" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc029
            
            #add-point:AFTER FIELD xmdc029
            {<point name="construct.a.page2.xmdc029" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc030
            #add-point:BEFORE FIELD xmdc030
            {<point name="construct.b.page2.xmdc030" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc030
            
            #add-point:AFTER FIELD xmdc030
            {<point name="construct.a.page2.xmdc030" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdc030
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc030
            #add-point:ON ACTION controlp INFIELD xmdc030
            {<point name="construct.c.page2.xmdc030" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc057
            #add-point:BEFORE FIELD xmdc057
            {<point name="construct.b.page2.xmdc057" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc057
            
            #add-point:AFTER FIELD xmdc057
            {<point name="construct.a.page2.xmdc057" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdc057
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc057
            #add-point:ON ACTION controlp INFIELD xmdc057
            {<point name="construct.c.page2.xmdc057" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.xmdc025
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc025
            #add-point:ON ACTION controlp INFIELD xmdc025
            {<point name="construct.c.page2.xmdc025" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc025
            #add-point:BEFORE FIELD xmdc025
            {<point name="construct.b.page2.xmdc025" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc025
            
            #add-point:AFTER FIELD xmdc025
            {<point name="construct.a.page2.xmdc025" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD oofb0173
            #add-point:BEFORE FIELD oofb0173
            {<point name="construct.b.page2.oofb0173" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD oofb0173
            
            #add-point:AFTER FIELD oofb0173
            {<point name="construct.a.page2.oofb0173" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.oofb0173
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD oofb0173
            #add-point:ON ACTION controlp INFIELD oofb0173
            {<point name="construct.c.page2.oofb0173" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.xmdc026
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc026
            #add-point:ON ACTION controlp INFIELD xmdc026
            {<point name="construct.c.page2.xmdc026" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc026
            #add-point:BEFORE FIELD xmdc026
            {<point name="construct.b.page2.xmdc026" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc026
            
            #add-point:AFTER FIELD xmdc026
            {<point name="construct.a.page2.xmdc026" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD oofb0174
            #add-point:BEFORE FIELD oofb0174
            {<point name="construct.b.page2.oofb0174" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD oofb0174
            
            #add-point:AFTER FIELD oofb0174
            {<point name="construct.a.page2.oofb0174" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.oofb0174
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD oofb0174
            #add-point:ON ACTION controlp INFIELD oofb0174
            {<point name="construct.c.page2.oofb0174" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.xmdc031
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc031
            #add-point:ON ACTION controlp INFIELD xmdc031
            {<point name="construct.c.page2.xmdc031" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc031
            #add-point:BEFORE FIELD xmdc031
            {<point name="construct.b.page2.xmdc031" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc031
            
            #add-point:AFTER FIELD xmdc031
            {<point name="construct.a.page2.xmdc031" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc032
            #add-point:BEFORE FIELD xmdc032
            {<point name="construct.b.page2.xmdc032" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc032
            
            #add-point:AFTER FIELD xmdc032
            {<point name="construct.a.page2.xmdc032" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdc032
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc032
            #add-point:ON ACTION controlp INFIELD xmdc032
            {<point name="construct.c.page2.xmdc032" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc033
            #add-point:BEFORE FIELD xmdc033
            {<point name="construct.b.page2.xmdc033" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc033
            
            #add-point:AFTER FIELD xmdc033
            {<point name="construct.a.page2.xmdc033" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdc033
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc033
            #add-point:ON ACTION controlp INFIELD xmdc033
            {<point name="construct.c.page2.xmdc033" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.xmdc003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc003
            #add-point:ON ACTION controlp INFIELD xmdc003
            {<point name="construct.c.page2.xmdc003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc003
            #add-point:BEFORE FIELD xmdc003
            {<point name="construct.b.page2.xmdc003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc003
            
            #add-point:AFTER FIELD xmdc003
            {<point name="construct.a.page2.xmdc003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc054
            #add-point:BEFORE FIELD xmdc054
            {<point name="construct.b.page2.xmdc054" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc054
            
            #add-point:AFTER FIELD xmdc054
            {<point name="construct.a.page2.xmdc054" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdc054
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc054
            #add-point:ON ACTION controlp INFIELD xmdc054
            {<point name="construct.c.page2.xmdc054" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.xmdc036
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc036
            #add-point:ON ACTION controlp INFIELD xmdc036
            {<point name="construct.c.page2.xmdc036" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc036
            #add-point:BEFORE FIELD xmdc036
            {<point name="construct.b.page2.xmdc036" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc036
            
            #add-point:AFTER FIELD xmdc036
            {<point name="construct.a.page2.xmdc036" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdc037
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc037
            #add-point:ON ACTION controlp INFIELD xmdc037
            {<point name="construct.c.page2.xmdc037" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc037
            #add-point:BEFORE FIELD xmdc037
            {<point name="construct.b.page2.xmdc037" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc037
            
            #add-point:AFTER FIELD xmdc037
            {<point name="construct.a.page2.xmdc037" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdc038
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc038
            #add-point:ON ACTION controlp INFIELD xmdc038
            {<point name="construct.c.page2.xmdc038" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc038
            #add-point:BEFORE FIELD xmdc038
            {<point name="construct.b.page2.xmdc038" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc038
            
            #add-point:AFTER FIELD xmdc038
            {<point name="construct.a.page2.xmdc038" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc039
            #add-point:BEFORE FIELD xmdc039
            {<point name="construct.b.page2.xmdc039" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc039
            
            #add-point:AFTER FIELD xmdc039
            {<point name="construct.a.page2.xmdc039" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdc039
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc039
            #add-point:ON ACTION controlp INFIELD xmdc039
            {<point name="construct.c.page2.xmdc039" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc035
            #add-point:BEFORE FIELD xmdc035
            {<point name="construct.b.page2.xmdc035" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc035
            
            #add-point:AFTER FIELD xmdc035
            {<point name="construct.a.page2.xmdc035" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdc035
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc035
            #add-point:ON ACTION controlp INFIELD xmdc035
            {<point name="construct.c.page2.xmdc035" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc040
            #add-point:BEFORE FIELD xmdc040
            {<point name="construct.b.page2.xmdc040" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc040
            
            #add-point:AFTER FIELD xmdc040
            {<point name="construct.a.page2.xmdc040" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdc040
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc040
            #add-point:ON ACTION controlp INFIELD xmdc040
            {<point name="construct.c.page2.xmdc040" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc041
            #add-point:BEFORE FIELD xmdc041
            {<point name="construct.b.page2.xmdc041" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc041
            
            #add-point:AFTER FIELD xmdc041
            {<point name="construct.a.page2.xmdc041" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdc041
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc041
            #add-point:ON ACTION controlp INFIELD xmdc041
            {<point name="construct.c.page2.xmdc041" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc042
            #add-point:BEFORE FIELD xmdc042
            {<point name="construct.b.page2.xmdc042" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc042
            
            #add-point:AFTER FIELD xmdc042
            {<point name="construct.a.page2.xmdc042" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdc042
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc042
            #add-point:ON ACTION controlp INFIELD xmdc042
            {<point name="construct.c.page2.xmdc042" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc043
            #add-point:BEFORE FIELD xmdc043
            {<point name="construct.b.page2.xmdc043" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc043
            
            #add-point:AFTER FIELD xmdc043
            {<point name="construct.a.page2.xmdc043" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdc043
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc043
            #add-point:ON ACTION controlp INFIELD xmdc043
            {<point name="construct.c.page2.xmdc043" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc044
            #add-point:BEFORE FIELD xmdc044
            {<point name="construct.b.page2.xmdc044" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc044
            
            #add-point:AFTER FIELD xmdc044
            {<point name="construct.a.page2.xmdc044" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdc044
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc044
            #add-point:ON ACTION controlp INFIELD xmdc044
            {<point name="construct.c.page2.xmdc044" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON xmddseq,xmddseq1,xmdd003,xmdd001,xmdd002,xmdd002_desc,xmdd004,xmdd005, 
          xmdc012_1,xmdc013_1,xmddseq2,xmdd006,xmdd024,xmdd025,xmdd011,xmdd012,xmdd010,xmdd013,xmdd009, 
          xmdd031,xmdd014,xmdd015,xmdd016,xmdd017,xmdd026,xmdd027,xmdd018,xmdd019,xmdd020,xmdd028,xmdd029, 
          xmdd030,xmdd021,xmdd022,xmdd023,xmdd036,xmdd037,xmdd038,xmdd039
           FROM s_detail3[1].xmddseq,s_detail3[1].xmddseq1,s_detail3[1].xmdd003,s_detail3[1].xmdd001, 
               s_detail3[1].xmdd002,s_detail3[1].xmdd002_desc,s_detail3[1].xmdd004,s_detail3[1].xmdd005, 
               s_detail3[1].xmdc012_1,s_detail3[1].xmdc013_1,s_detail3[1].xmddseq2,s_detail3[1].xmdd006, 
               s_detail3[1].xmdd024,s_detail3[1].xmdd025,s_detail3[1].xmdd011,s_detail3[1].xmdd012,s_detail3[1].xmdd010, 
               s_detail3[1].xmdd013,s_detail3[1].xmdd009,s_detail3[1].xmdd031,s_detail3[1].xmdd014,s_detail3[1].xmdd015, 
               s_detail3[1].xmdd016,s_detail3[1].xmdd017,s_detail3[1].xmdd026,s_detail3[1].xmdd027,s_detail3[1].xmdd018, 
               s_detail3[1].xmdd019,s_detail3[1].xmdd020,s_detail3[1].xmdd028,s_detail3[1].xmdd029,s_detail3[1].xmdd030, 
               s_detail3[1].xmdd021,s_detail3[1].xmdd022,s_detail3[1].xmdd023,s_detail3[1].xmdd036,s_detail3[1].xmdd037, 
               s_detail3[1].xmdd038,s_detail3[1].xmdd039
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmddseq
            #add-point:BEFORE FIELD xmddseq
            {<point name="construct.b.page3.xmddseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmddseq
            
            #add-point:AFTER FIELD xmddseq
            {<point name="construct.a.page3.xmddseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmddseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmddseq
            #add-point:ON ACTION controlp INFIELD xmddseq
            {<point name="construct.c.page3.xmddseq" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmddseq1
            #add-point:BEFORE FIELD xmddseq1
            {<point name="construct.b.page3.xmddseq1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmddseq1
            
            #add-point:AFTER FIELD xmddseq1
            {<point name="construct.a.page3.xmddseq1" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmddseq1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmddseq1
            #add-point:ON ACTION controlp INFIELD xmddseq1
            {<point name="construct.c.page3.xmddseq1" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdd003
            #add-point:BEFORE FIELD xmdd003
            {<point name="construct.b.page3.xmdd003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdd003
            
            #add-point:AFTER FIELD xmdd003
            {<point name="construct.a.page3.xmdd003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdd003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdd003
            #add-point:ON ACTION controlp INFIELD xmdd003
            {<point name="construct.c.page3.xmdd003" />}
            #END add-point
 
         #Ctrlp:construct.c.page3.xmdd001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdd001
            #add-point:ON ACTION controlp INFIELD xmdd001
            {<point name="construct.c.page3.xmdd001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdd001
            #add-point:BEFORE FIELD xmdd001
            {<point name="construct.b.page3.xmdd001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdd001
            
            #add-point:AFTER FIELD xmdd001
            {<point name="construct.a.page3.xmdd001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdd002
            #add-point:BEFORE FIELD xmdd002
            {<point name="construct.b.page3.xmdd002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdd002
            
            #add-point:AFTER FIELD xmdd002
            {<point name="construct.a.page3.xmdd002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdd002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdd002
            #add-point:ON ACTION controlp INFIELD xmdd002
            {<point name="construct.c.page3.xmdd002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdd002_desc
            #add-point:BEFORE FIELD xmdd002_desc
            {<point name="construct.b.page3.xmdd002_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdd002_desc
            
            #add-point:AFTER FIELD xmdd002_desc
            {<point name="construct.a.page3.xmdd002_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdd002_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdd002_desc
            #add-point:ON ACTION controlp INFIELD xmdd002_desc
            {<point name="construct.c.page3.xmdd002_desc" />}
            #END add-point
 
         #Ctrlp:construct.c.page3.xmdd004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdd004
            #add-point:ON ACTION controlp INFIELD xmdd004
            {<point name="construct.c.page3.xmdd004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdd004
            #add-point:BEFORE FIELD xmdd004
            {<point name="construct.b.page3.xmdd004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdd004
            
            #add-point:AFTER FIELD xmdd004
            {<point name="construct.a.page3.xmdd004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdd005
            #add-point:BEFORE FIELD xmdd005
            {<point name="construct.b.page3.xmdd005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdd005
            
            #add-point:AFTER FIELD xmdd005
            {<point name="construct.a.page3.xmdd005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdd005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdd005
            #add-point:ON ACTION controlp INFIELD xmdd005
            {<point name="construct.c.page3.xmdd005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc012_1
            #add-point:BEFORE FIELD xmdc012_1
            {<point name="construct.b.page3.xmdc012_1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc012_1
            
            #add-point:AFTER FIELD xmdc012_1
            {<point name="construct.a.page3.xmdc012_1" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdc012_1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc012_1
            #add-point:ON ACTION controlp INFIELD xmdc012_1
            {<point name="construct.c.page3.xmdc012_1" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc013_1
            #add-point:BEFORE FIELD xmdc013_1
            {<point name="construct.b.page3.xmdc013_1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc013_1
            
            #add-point:AFTER FIELD xmdc013_1
            {<point name="construct.a.page3.xmdc013_1" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdc013_1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc013_1
            #add-point:ON ACTION controlp INFIELD xmdc013_1
            {<point name="construct.c.page3.xmdc013_1" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmddseq2
            #add-point:BEFORE FIELD xmddseq2
            {<point name="construct.b.page3.xmddseq2" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmddseq2
            
            #add-point:AFTER FIELD xmddseq2
            {<point name="construct.a.page3.xmddseq2" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmddseq2
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmddseq2
            #add-point:ON ACTION controlp INFIELD xmddseq2
            {<point name="construct.c.page3.xmddseq2" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdd006
            #add-point:BEFORE FIELD xmdd006
            {<point name="construct.b.page3.xmdd006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdd006
            
            #add-point:AFTER FIELD xmdd006
            {<point name="construct.a.page3.xmdd006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdd006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdd006
            #add-point:ON ACTION controlp INFIELD xmdd006
            {<point name="construct.c.page3.xmdd006" />}
            #END add-point
 
         #Ctrlp:construct.c.page3.xmdd024
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdd024
            #add-point:ON ACTION controlp INFIELD xmdd024
            {<point name="construct.c.page3.xmdd024" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdd024
            #add-point:BEFORE FIELD xmdd024
            {<point name="construct.b.page3.xmdd024" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdd024
            
            #add-point:AFTER FIELD xmdd024
            {<point name="construct.a.page3.xmdd024" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdd025
            #add-point:BEFORE FIELD xmdd025
            {<point name="construct.b.page3.xmdd025" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdd025
            
            #add-point:AFTER FIELD xmdd025
            {<point name="construct.a.page3.xmdd025" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdd025
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdd025
            #add-point:ON ACTION controlp INFIELD xmdd025
            {<point name="construct.c.page3.xmdd025" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdd011
            #add-point:BEFORE FIELD xmdd011
            {<point name="construct.b.page3.xmdd011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdd011
            
            #add-point:AFTER FIELD xmdd011
            {<point name="construct.a.page3.xmdd011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdd011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdd011
            #add-point:ON ACTION controlp INFIELD xmdd011
            {<point name="construct.c.page3.xmdd011" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdd012
            #add-point:BEFORE FIELD xmdd012
            {<point name="construct.b.page3.xmdd012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdd012
            
            #add-point:AFTER FIELD xmdd012
            {<point name="construct.a.page3.xmdd012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdd012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdd012
            #add-point:ON ACTION controlp INFIELD xmdd012
            {<point name="construct.c.page3.xmdd012" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdd010
            #add-point:BEFORE FIELD xmdd010
            {<point name="construct.b.page3.xmdd010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdd010
            
            #add-point:AFTER FIELD xmdd010
            {<point name="construct.a.page3.xmdd010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdd010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdd010
            #add-point:ON ACTION controlp INFIELD xmdd010
            {<point name="construct.c.page3.xmdd010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdd013
            #add-point:BEFORE FIELD xmdd013
            {<point name="construct.b.page3.xmdd013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdd013
            
            #add-point:AFTER FIELD xmdd013
            {<point name="construct.a.page3.xmdd013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdd013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdd013
            #add-point:ON ACTION controlp INFIELD xmdd013
            {<point name="construct.c.page3.xmdd013" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdd009
            #add-point:BEFORE FIELD xmdd009
            {<point name="construct.b.page3.xmdd009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdd009
            
            #add-point:AFTER FIELD xmdd009
            {<point name="construct.a.page3.xmdd009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdd009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdd009
            #add-point:ON ACTION controlp INFIELD xmdd009
            {<point name="construct.c.page3.xmdd009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdd031
            #add-point:BEFORE FIELD xmdd031
            {<point name="construct.b.page3.xmdd031" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdd031
            
            #add-point:AFTER FIELD xmdd031
            {<point name="construct.a.page3.xmdd031" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdd031
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdd031
            #add-point:ON ACTION controlp INFIELD xmdd031
            {<point name="construct.c.page3.xmdd031" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdd014
            #add-point:BEFORE FIELD xmdd014
            {<point name="construct.b.page3.xmdd014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdd014
            
            #add-point:AFTER FIELD xmdd014
            {<point name="construct.a.page3.xmdd014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdd014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdd014
            #add-point:ON ACTION controlp INFIELD xmdd014
            {<point name="construct.c.page3.xmdd014" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdd015
            #add-point:BEFORE FIELD xmdd015
            {<point name="construct.b.page3.xmdd015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdd015
            
            #add-point:AFTER FIELD xmdd015
            {<point name="construct.a.page3.xmdd015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdd015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdd015
            #add-point:ON ACTION controlp INFIELD xmdd015
            {<point name="construct.c.page3.xmdd015" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdd016
            #add-point:BEFORE FIELD xmdd016
            {<point name="construct.b.page3.xmdd016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdd016
            
            #add-point:AFTER FIELD xmdd016
            {<point name="construct.a.page3.xmdd016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdd016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdd016
            #add-point:ON ACTION controlp INFIELD xmdd016
            {<point name="construct.c.page3.xmdd016" />}
            #END add-point
 
         #Ctrlp:construct.c.page3.xmdd017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdd017
            #add-point:ON ACTION controlp INFIELD xmdd017
            {<point name="construct.c.page3.xmdd017" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdd017
            #add-point:BEFORE FIELD xmdd017
            {<point name="construct.b.page3.xmdd017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdd017
            
            #add-point:AFTER FIELD xmdd017
            {<point name="construct.a.page3.xmdd017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdd026
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdd026
            #add-point:ON ACTION controlp INFIELD xmdd026
            {<point name="construct.c.page3.xmdd026" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdd026
            #add-point:BEFORE FIELD xmdd026
            {<point name="construct.b.page3.xmdd026" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdd026
            
            #add-point:AFTER FIELD xmdd026
            {<point name="construct.a.page3.xmdd026" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdd027
            #add-point:BEFORE FIELD xmdd027
            {<point name="construct.b.page3.xmdd027" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdd027
            
            #add-point:AFTER FIELD xmdd027
            {<point name="construct.a.page3.xmdd027" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdd027
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdd027
            #add-point:ON ACTION controlp INFIELD xmdd027
            {<point name="construct.c.page3.xmdd027" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdd018
            #add-point:BEFORE FIELD xmdd018
            {<point name="construct.b.page3.xmdd018" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdd018
            
            #add-point:AFTER FIELD xmdd018
            {<point name="construct.a.page3.xmdd018" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdd018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdd018
            #add-point:ON ACTION controlp INFIELD xmdd018
            {<point name="construct.c.page3.xmdd018" />}
            #END add-point
 
         #Ctrlp:construct.c.page3.xmdd019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdd019
            #add-point:ON ACTION controlp INFIELD xmdd019
            {<point name="construct.c.page3.xmdd019" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdd019
            #add-point:BEFORE FIELD xmdd019
            {<point name="construct.b.page3.xmdd019" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdd019
            
            #add-point:AFTER FIELD xmdd019
            {<point name="construct.a.page3.xmdd019" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdd020
            #add-point:BEFORE FIELD xmdd020
            {<point name="construct.b.page3.xmdd020" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdd020
            
            #add-point:AFTER FIELD xmdd020
            {<point name="construct.a.page3.xmdd020" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdd020
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdd020
            #add-point:ON ACTION controlp INFIELD xmdd020
            {<point name="construct.c.page3.xmdd020" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdd028
            #add-point:BEFORE FIELD xmdd028
            {<point name="construct.b.page3.xmdd028" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdd028
            
            #add-point:AFTER FIELD xmdd028
            {<point name="construct.a.page3.xmdd028" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdd028
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdd028
            #add-point:ON ACTION controlp INFIELD xmdd028
            {<point name="construct.c.page3.xmdd028" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdd029
            #add-point:BEFORE FIELD xmdd029
            {<point name="construct.b.page3.xmdd029" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdd029
            
            #add-point:AFTER FIELD xmdd029
            {<point name="construct.a.page3.xmdd029" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdd029
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdd029
            #add-point:ON ACTION controlp INFIELD xmdd029
            {<point name="construct.c.page3.xmdd029" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdd030
            #add-point:BEFORE FIELD xmdd030
            {<point name="construct.b.page3.xmdd030" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdd030
            
            #add-point:AFTER FIELD xmdd030
            {<point name="construct.a.page3.xmdd030" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdd030
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdd030
            #add-point:ON ACTION controlp INFIELD xmdd030
            {<point name="construct.c.page3.xmdd030" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdd021
            #add-point:BEFORE FIELD xmdd021
            {<point name="construct.b.page3.xmdd021" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdd021
            
            #add-point:AFTER FIELD xmdd021
            {<point name="construct.a.page3.xmdd021" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdd021
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdd021
            #add-point:ON ACTION controlp INFIELD xmdd021
            {<point name="construct.c.page3.xmdd021" />}
            #END add-point
 
         #Ctrlp:construct.c.page3.xmdd022
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdd022
            #add-point:ON ACTION controlp INFIELD xmdd022
            {<point name="construct.c.page3.xmdd022" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdd022
            #add-point:BEFORE FIELD xmdd022
            {<point name="construct.b.page3.xmdd022" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdd022
            
            #add-point:AFTER FIELD xmdd022
            {<point name="construct.a.page3.xmdd022" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdd023
            #add-point:BEFORE FIELD xmdd023
            {<point name="construct.b.page3.xmdd023" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdd023
            
            #add-point:AFTER FIELD xmdd023
            {<point name="construct.a.page3.xmdd023" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdd023
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdd023
            #add-point:ON ACTION controlp INFIELD xmdd023
            {<point name="construct.c.page3.xmdd023" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdd036
            #add-point:BEFORE FIELD xmdd036
            {<point name="construct.b.page3.xmdd036" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdd036
            
            #add-point:AFTER FIELD xmdd036
            {<point name="construct.a.page3.xmdd036" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdd036
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdd036
            #add-point:ON ACTION controlp INFIELD xmdd036
            {<point name="construct.c.page3.xmdd036" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdd037
            #add-point:BEFORE FIELD xmdd037
            {<point name="construct.b.page3.xmdd037" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdd037
            
            #add-point:AFTER FIELD xmdd037
            {<point name="construct.a.page3.xmdd037" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdd037
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdd037
            #add-point:ON ACTION controlp INFIELD xmdd037
            {<point name="construct.c.page3.xmdd037" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdd038
            #add-point:BEFORE FIELD xmdd038
            {<point name="construct.b.page3.xmdd038" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdd038
            
            #add-point:AFTER FIELD xmdd038
            {<point name="construct.a.page3.xmdd038" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdd038
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdd038
            #add-point:ON ACTION controlp INFIELD xmdd038
            {<point name="construct.c.page3.xmdd038" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdd039
            #add-point:BEFORE FIELD xmdd039
            {<point name="construct.b.page3.xmdd039" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdd039
            
            #add-point:AFTER FIELD xmdd039
            {<point name="construct.a.page3.xmdd039" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdd039
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdd039
            #add-point:ON ACTION controlp INFIELD xmdd039
            {<point name="construct.c.page3.xmdd039" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON xmdqdocno,xmdqseq,xmdqseq1,xmdq001,xmdq006,xmdq007,xmdq008,xmdq009,xmdq002, 
          xmdq004,xmdq005
           FROM s_detail4[1].xmdqdocno,s_detail4[1].xmdqseq,s_detail4[1].xmdqseq1,s_detail4[1].xmdq001, 
               s_detail4[1].xmdq006,s_detail4[1].xmdq007,s_detail4[1].xmdq008,s_detail4[1].xmdq009,s_detail4[1].xmdq002, 
               s_detail4[1].xmdq004,s_detail4[1].xmdq005
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body3.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdqdocno
            #add-point:BEFORE FIELD xmdqdocno
            {<point name="construct.b.page4.xmdqdocno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdqdocno
            
            #add-point:AFTER FIELD xmdqdocno
            {<point name="construct.a.page4.xmdqdocno" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.xmdqdocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdqdocno
            #add-point:ON ACTION controlp INFIELD xmdqdocno
            {<point name="construct.c.page4.xmdqdocno" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdqseq
            #add-point:BEFORE FIELD xmdqseq
            {<point name="construct.b.page4.xmdqseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdqseq
            
            #add-point:AFTER FIELD xmdqseq
            {<point name="construct.a.page4.xmdqseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.xmdqseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdqseq
            #add-point:ON ACTION controlp INFIELD xmdqseq
            {<point name="construct.c.page4.xmdqseq" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdqseq1
            #add-point:BEFORE FIELD xmdqseq1
            {<point name="construct.b.page4.xmdqseq1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdqseq1
            
            #add-point:AFTER FIELD xmdqseq1
            {<point name="construct.a.page4.xmdqseq1" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.xmdqseq1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdqseq1
            #add-point:ON ACTION controlp INFIELD xmdqseq1
            {<point name="construct.c.page4.xmdqseq1" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdq001
            #add-point:BEFORE FIELD xmdq001
            {<point name="construct.b.page4.xmdq001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdq001
            
            #add-point:AFTER FIELD xmdq001
            {<point name="construct.a.page4.xmdq001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.xmdq001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdq001
            #add-point:ON ACTION controlp INFIELD xmdq001
            {<point name="construct.c.page4.xmdq001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdq006
            #add-point:BEFORE FIELD xmdq006
            {<point name="construct.b.page4.xmdq006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdq006
            
            #add-point:AFTER FIELD xmdq006
            {<point name="construct.a.page4.xmdq006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.xmdq006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdq006
            #add-point:ON ACTION controlp INFIELD xmdq006
            {<point name="construct.c.page4.xmdq006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdq007
            #add-point:BEFORE FIELD xmdq007
            {<point name="construct.b.page4.xmdq007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdq007
            
            #add-point:AFTER FIELD xmdq007
            {<point name="construct.a.page4.xmdq007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.xmdq007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdq007
            #add-point:ON ACTION controlp INFIELD xmdq007
            {<point name="construct.c.page4.xmdq007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdq008
            #add-point:BEFORE FIELD xmdq008
            {<point name="construct.b.page4.xmdq008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdq008
            
            #add-point:AFTER FIELD xmdq008
            {<point name="construct.a.page4.xmdq008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.xmdq008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdq008
            #add-point:ON ACTION controlp INFIELD xmdq008
            {<point name="construct.c.page4.xmdq008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdq009
            #add-point:BEFORE FIELD xmdq009
            {<point name="construct.b.page4.xmdq009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdq009
            
            #add-point:AFTER FIELD xmdq009
            {<point name="construct.a.page4.xmdq009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.xmdq009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdq009
            #add-point:ON ACTION controlp INFIELD xmdq009
            {<point name="construct.c.page4.xmdq009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdq002
            #add-point:BEFORE FIELD xmdq002
            {<point name="construct.b.page4.xmdq002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdq002
            
            #add-point:AFTER FIELD xmdq002
            {<point name="construct.a.page4.xmdq002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.xmdq002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdq002
            #add-point:ON ACTION controlp INFIELD xmdq002
            {<point name="construct.c.page4.xmdq002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdq004
            #add-point:BEFORE FIELD xmdq004
            {<point name="construct.b.page4.xmdq004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdq004
            
            #add-point:AFTER FIELD xmdq004
            {<point name="construct.a.page4.xmdq004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.xmdq004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdq004
            #add-point:ON ACTION controlp INFIELD xmdq004
            {<point name="construct.c.page4.xmdq004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdq005
            #add-point:BEFORE FIELD xmdq005
            {<point name="construct.b.page4.xmdq005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdq005
            
            #add-point:AFTER FIELD xmdq005
            {<point name="construct.a.page4.xmdq005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.xmdq005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdq005
            #add-point:ON ACTION controlp INFIELD xmdq005
            {<point name="construct.c.page4.xmdq005" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table4 ON xmdb001,xmdb002,xmdb003,xmdb004,xmdb005,xmdb006,xmdb016,xmdb017,xmdb007, 
          xmdb008,xmdb009
           FROM s_detail5[1].xmdb001,s_detail5[1].xmdb002,s_detail5[1].xmdb003,s_detail5[1].xmdb004, 
               s_detail5[1].xmdb005,s_detail5[1].xmdb006,s_detail5[1].xmdb016,s_detail5[1].xmdb017,s_detail5[1].xmdb007, 
               s_detail5[1].xmdb008,s_detail5[1].xmdb009
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body4.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 4)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdb001
            #add-point:BEFORE FIELD xmdb001
            {<point name="construct.b.page5.xmdb001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdb001
            
            #add-point:AFTER FIELD xmdb001
            {<point name="construct.a.page5.xmdb001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page5.xmdb001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdb001
            #add-point:ON ACTION controlp INFIELD xmdb001
            {<point name="construct.c.page5.xmdb001" />}
            #END add-point
 
         #Ctrlp:construct.c.page5.xmdb002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdb002
            #add-point:ON ACTION controlp INFIELD xmdb002
            {<point name="construct.c.page5.xmdb002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdb002
            #add-point:BEFORE FIELD xmdb002
            {<point name="construct.b.page5.xmdb002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdb002
            
            #add-point:AFTER FIELD xmdb002
            {<point name="construct.a.page5.xmdb002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdb003
            #add-point:BEFORE FIELD xmdb003
            {<point name="construct.b.page5.xmdb003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdb003
            
            #add-point:AFTER FIELD xmdb003
            {<point name="construct.a.page5.xmdb003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page5.xmdb003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdb003
            #add-point:ON ACTION controlp INFIELD xmdb003
            {<point name="construct.c.page5.xmdb003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdb004
            #add-point:BEFORE FIELD xmdb004
            {<point name="construct.b.page5.xmdb004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdb004
            
            #add-point:AFTER FIELD xmdb004
            {<point name="construct.a.page5.xmdb004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page5.xmdb004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdb004
            #add-point:ON ACTION controlp INFIELD xmdb004
            {<point name="construct.c.page5.xmdb004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdb005
            #add-point:BEFORE FIELD xmdb005
            {<point name="construct.b.page5.xmdb005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdb005
            
            #add-point:AFTER FIELD xmdb005
            {<point name="construct.a.page5.xmdb005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page5.xmdb005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdb005
            #add-point:ON ACTION controlp INFIELD xmdb005
            {<point name="construct.c.page5.xmdb005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdb006
            #add-point:BEFORE FIELD xmdb006
            {<point name="construct.b.page5.xmdb006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdb006
            
            #add-point:AFTER FIELD xmdb006
            {<point name="construct.a.page5.xmdb006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page5.xmdb006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdb006
            #add-point:ON ACTION controlp INFIELD xmdb006
            {<point name="construct.c.page5.xmdb006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdb016
            #add-point:BEFORE FIELD xmdb016
            {<point name="construct.b.page5.xmdb016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdb016
            
            #add-point:AFTER FIELD xmdb016
            {<point name="construct.a.page5.xmdb016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page5.xmdb016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdb016
            #add-point:ON ACTION controlp INFIELD xmdb016
            {<point name="construct.c.page5.xmdb016" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdb017
            #add-point:BEFORE FIELD xmdb017
            {<point name="construct.b.page5.xmdb017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdb017
            
            #add-point:AFTER FIELD xmdb017
            {<point name="construct.a.page5.xmdb017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page5.xmdb017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdb017
            #add-point:ON ACTION controlp INFIELD xmdb017
            {<point name="construct.c.page5.xmdb017" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdb007
            #add-point:BEFORE FIELD xmdb007
            {<point name="construct.b.page5.xmdb007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdb007
            
            #add-point:AFTER FIELD xmdb007
            {<point name="construct.a.page5.xmdb007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page5.xmdb007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdb007
            #add-point:ON ACTION controlp INFIELD xmdb007
            {<point name="construct.c.page5.xmdb007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdb008
            #add-point:BEFORE FIELD xmdb008
            {<point name="construct.b.page5.xmdb008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdb008
            
            #add-point:AFTER FIELD xmdb008
            {<point name="construct.a.page5.xmdb008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page5.xmdb008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdb008
            #add-point:ON ACTION controlp INFIELD xmdb008
            {<point name="construct.c.page5.xmdb008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdb009
            #add-point:BEFORE FIELD xmdb009
            {<point name="construct.b.page5.xmdb009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdb009
            
            #add-point:AFTER FIELD xmdb009
            {<point name="construct.a.page5.xmdb009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page5.xmdb009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdb009
            #add-point:ON ACTION controlp INFIELD xmdb009
            {<point name="construct.c.page5.xmdb009" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table5 ON xmdsseq,xmds001,xmds002,xmds003,xmds004,xmds005,xmds006
           FROM s_detail6[1].xmdsseq,s_detail6[1].xmds001,s_detail6[1].xmds002,s_detail6[1].xmds003, 
               s_detail6[1].xmds004,s_detail6[1].xmds005,s_detail6[1].xmds006
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body5.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 5)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdsseq
            #add-point:BEFORE FIELD xmdsseq
            {<point name="construct.b.page6.xmdsseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdsseq
            
            #add-point:AFTER FIELD xmdsseq
            {<point name="construct.a.page6.xmdsseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.xmdsseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdsseq
            #add-point:ON ACTION controlp INFIELD xmdsseq
            {<point name="construct.c.page6.xmdsseq" />}
            #END add-point
 
         #Ctrlp:construct.c.page6.xmds001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmds001
            #add-point:ON ACTION controlp INFIELD xmds001
            {<point name="construct.c.page6.xmds001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmds001
            #add-point:BEFORE FIELD xmds001
            {<point name="construct.b.page6.xmds001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmds001
            
            #add-point:AFTER FIELD xmds001
            {<point name="construct.a.page6.xmds001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.xmds002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmds002
            #add-point:ON ACTION controlp INFIELD xmds002
            {<point name="construct.c.page6.xmds002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmds002
            #add-point:BEFORE FIELD xmds002
            {<point name="construct.b.page6.xmds002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmds002
            
            #add-point:AFTER FIELD xmds002
            {<point name="construct.a.page6.xmds002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmds003
            #add-point:BEFORE FIELD xmds003
            {<point name="construct.b.page6.xmds003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmds003
            
            #add-point:AFTER FIELD xmds003
            {<point name="construct.a.page6.xmds003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.xmds003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmds003
            #add-point:ON ACTION controlp INFIELD xmds003
            {<point name="construct.c.page6.xmds003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmds004
            #add-point:BEFORE FIELD xmds004
            {<point name="construct.b.page6.xmds004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmds004
            
            #add-point:AFTER FIELD xmds004
            {<point name="construct.a.page6.xmds004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.xmds004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmds004
            #add-point:ON ACTION controlp INFIELD xmds004
            {<point name="construct.c.page6.xmds004" />}
            #END add-point
 
         #Ctrlp:construct.c.page6.xmds005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmds005
            #add-point:ON ACTION controlp INFIELD xmds005
            {<point name="construct.c.page6.xmds005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmds005
            #add-point:BEFORE FIELD xmds005
            {<point name="construct.b.page6.xmds005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmds005
            
            #add-point:AFTER FIELD xmds005
            {<point name="construct.a.page6.xmds005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmds006
            #add-point:BEFORE FIELD xmds006
            {<point name="construct.b.page6.xmds006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmds006
            
            #add-point:AFTER FIELD xmds006
            {<point name="construct.a.page6.xmds006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.xmds006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmds006
            #add-point:ON ACTION controlp INFIELD xmds006
            {<point name="construct.c.page6.xmds006" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
            INITIALIZE g_wc2_table2 TO NULL
 
            INITIALIZE g_wc2_table3 TO NULL
 
            INITIALIZE g_wc2_table4 TO NULL
 
            INITIALIZE g_wc2_table5 TO NULL
 
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "xmda_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "xmdc_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "xmdd_t" 
                     LET g_wc2_table2 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "xmdq_t" 
                     LET g_wc2_table3 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "xmdb_t" 
                     LET g_wc2_table4 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "xmds_t" 
                     LET g_wc2_table5 = la_wc[li_idx].wc
 
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
   IF g_wc2_table4 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
   END IF
 
   IF g_wc2_table5 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
   END IF
 
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="axmt500.filter" ver="16" ch="" status="" src="s" readonly="">
    <![CDATA[#應用 a50 樣板自動產生(Version:7)
#+ filter過濾功能
PRIVATE FUNCTION axmt500_filter()
   #add-point:filter段define
   {<point name="filter.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="filter.define"/>}
   #end add-point   
   
   #add-point:Function前置處理 
   {<point name="filter.pre_function"/>}
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON xmdadocno,xmdadocdt,xmda001,xmda002,xmda003,xmda004
                          FROM s_browse[1].b_xmdadocno,s_browse[1].b_xmdadocdt,s_browse[1].b_xmda001, 
                              s_browse[1].b_xmda002,s_browse[1].b_xmda003,s_browse[1].b_xmda004
 
         BEFORE CONSTRUCT
               DISPLAY axmt500_filter_parser('xmdadocno') TO s_browse[1].b_xmdadocno
            DISPLAY axmt500_filter_parser('xmdadocdt') TO s_browse[1].b_xmdadocdt
            DISPLAY axmt500_filter_parser('xmda001') TO s_browse[1].b_xmda001
            DISPLAY axmt500_filter_parser('xmda002') TO s_browse[1].b_xmda002
            DISPLAY axmt500_filter_parser('xmda003') TO s_browse[1].b_xmda003
            DISPLAY axmt500_filter_parser('xmda004') TO s_browse[1].b_xmda004
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL axmt500_filter_show('xmdadocno')
   CALL axmt500_filter_show('xmdadocdt')
   CALL axmt500_filter_show('xmda001')
   CALL axmt500_filter_show('xmda002')
   CALL axmt500_filter_show('xmda003')
   CALL axmt500_filter_show('xmda004')
 
END FUNCTION
]]>
  </section>
  <section id="axmt500.filter_parser" ver="5" ch="" status="" src="s" readonly="">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION axmt500_filter_parser(ps_field)
   #add-point:filter段define
   {<point name="filter_parser.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="filter_parser.define"/>}
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="axmt500.filter_show" ver="2" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION axmt500_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = axmt500_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="axmt500.query" ver="19" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION axmt500_query()
   #add-point:query段define(客製用)
   {<point name="query.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="query.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理 
   {<point name="query.pre_function"/>}
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_xmdc_d.clear()
   CALL g_xmdc2_d.clear()
   CALL g_xmdc3_d.clear()
   CALL g_xmdc4_d.clear()
   CALL g_xmdc5_d.clear()
   CALL g_xmdc6_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL axmt500_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL axmt500_browser_fill("")
      CALL axmt500_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
   LET g_detail_idx_list[4] = 1
   LET g_detail_idx_list[5] = 1
   LET g_detail_idx_list[6] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL axmt500_filter_show('xmdadocno')
   CALL axmt500_filter_show('xmdadocdt')
   CALL axmt500_filter_show('xmda001')
   CALL axmt500_filter_show('xmda002')
   CALL axmt500_filter_show('xmda003')
   CALL axmt500_filter_show('xmda004')
   CALL axmt500_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL axmt500_fetch("F") 
      #顯示單身筆數
      CALL axmt500_idx_chk()
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="axmt500.fetch" ver="57" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION axmt500_fetch(p_flag)
   #add-point:fetch段define(客製用)
   {<point name="fetch.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="fetch.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理 
   {<point name="fetch.pre_function"/>}
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_xmda_m.xmdadocno = g_browser[g_current_idx].b_xmdadocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE axmt500_master_referesh USING g_xmda_m.xmdadocno INTO g_xmda_m.xmdadocno,g_xmda_m.xmda001, 
       g_xmda_m.xmdadocdt,g_xmda_m.xmda004,g_xmda_m.xmda002,g_xmda_m.xmda003,g_xmda_m.xmdasite,g_xmda_m.xmdastus, 
       g_xmda_m.xmda005,g_xmda_m.xmda006,g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda033,g_xmda_m.xmda027, 
       g_xmda_m.xmda009,g_xmda_m.xmda010,g_xmda_m.xmda011,g_xmda_m.xmda012,g_xmda_m.xmda013,g_xmda_m.xmda035, 
       g_xmda_m.xmda015,g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda018,g_xmda_m.xmda019,g_xmda_m.xmda023, 
       g_xmda_m.xmda032,g_xmda_m.xmda071,g_xmda_m.xmda050,g_xmda_m.xmda021,g_xmda_m.xmda022,g_xmda_m.xmda034, 
       g_xmda_m.xmda203,g_xmda_m.xmda024,g_xmda_m.xmda048,g_xmda_m.xmda049,g_xmda_m.xmda044,g_xmda_m.xmda030, 
       g_xmda_m.xmda031,g_xmda_m.xmda045,g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028,g_xmda_m.xmda043, 
       g_xmda_m.xmda025,g_xmda_m.xmda026,g_xmda_m.xmda020,g_xmda_m.xmda037,g_xmda_m.xmda038,g_xmda_m.xmda036, 
       g_xmda_m.xmda039,g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdaownid,g_xmda_m.xmdaowndp,g_xmda_m.xmdacrtid, 
       g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid,g_xmda_m.xmdamoddt,g_xmda_m.xmdacnfid, 
       g_xmda_m.xmdacnfdt,g_xmda_m.xmda004_desc,g_xmda_m.xmda002_desc,g_xmda_m.xmda003_desc,g_xmda_m.xmda009_desc, 
       g_xmda_m.xmda010_desc,g_xmda_m.xmda015_desc,g_xmda_m.xmda017_desc,g_xmda_m.xmda018_desc,g_xmda_m.xmda023_desc, 
       g_xmda_m.xmda032_desc,g_xmda_m.xmda021_desc,g_xmda_m.xmda022_desc,g_xmda_m.xmda034_desc,g_xmda_m.xmda203_desc, 
       g_xmda_m.xmda024_desc,g_xmda_m.xmda044_desc,g_xmda_m.xmda025_desc,g_xmda_m.xmda026_desc,g_xmda_m.xmda020_desc, 
       g_xmda_m.xmda036_desc,g_xmda_m.xmdaownid_desc,g_xmda_m.xmdaowndp_desc,g_xmda_m.xmdacrtid_desc, 
       g_xmda_m.xmdacrtdp_desc,g_xmda_m.xmdamodid_desc,g_xmda_m.xmdacnfid_desc
   
   #遮罩相關處理
   LET g_xmda_m_mask_o.* =  g_xmda_m.*
   CALL axmt500_xmda_t_mask()
   LET g_xmda_m_mask_n.* =  g_xmda_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt500_set_act_visible()   
   CALL axmt500_set_act_no_visible()
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_xmda_m_t.* = g_xmda_m.*
   LET g_xmda_m_o.* = g_xmda_m.*
   
   LET g_data_owner = g_xmda_m.xmdaownid      
   LET g_data_dept  = g_xmda_m.xmdaowndp
   
   #重新顯示   
   CALL axmt500_show()
 
   #應用 a56 樣板自動產生(Version:2)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
END FUNCTION
]]>
  </section>
  <section id="axmt500.insert" ver="55" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION axmt500_insert()
   #add-point:insert段define(客製用)
   {<point name="insert.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="insert.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理 
   {<point name="insert.pre_function"/>}
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_xmdc_d.clear()   
   CALL g_xmdc2_d.clear()  
   CALL g_xmdc3_d.clear()  
   CALL g_xmdc4_d.clear()  
   CALL g_xmdc5_d.clear()  
   CALL g_xmdc6_d.clear()  
 
 
   INITIALIZE g_xmda_m.* LIKE xmda_t.*             #DEFAULT 設定
   
   LET g_xmdadocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_xmda_m.xmdaownid = g_user
      LET g_xmda_m.xmdaowndp = g_dept
      LET g_xmda_m.xmdacrtid = g_user
      LET g_xmda_m.xmdacrtdp = g_dept 
      LET g_xmda_m.xmdacrtdt = cl_get_current()
      LET g_xmda_m.xmdamodid = g_user
      LET g_xmda_m.xmdamoddt = cl_get_current()
      LET g_xmda_m.xmdastus = 'N'
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_xmda_m.xmda001 = "0"
      LET g_xmda_m.xmdastus = "N"
      LET g_xmda_m.xmda005 = "1"
      LET g_xmda_m.xmda006 = "1"
      LET g_xmda_m.xmda007 = "1"
      LET g_xmda_m.xmda013 = "N"
      LET g_xmda_m.xmda019 = "Y"
      LET g_xmda_m.xmda048 = "1"
      LET g_xmda_m.xmda049 = "1"
      LET g_xmda_m.xmda030 = "N"
      LET g_xmda_m.xmda045 = "N"
      LET g_xmda_m.xmda046 = "N"
      LET g_xmda_m.xmda047 = "N"
      LET g_xmda_m.xmda043 = "0"
      LET g_xmda_m.xmda039 = "1"
      LET g_xmda_m.xmda041 = "0"
      LET g_xmda_m.xmda042 = "0"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_xmda_m_t.* = g_xmda_m.*
      LET g_xmda_m_o.* = g_xmda_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_xmda_m.xmdastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "H"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/hold.png")
         WHEN "UH"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unhold.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
    
      CALL axmt500_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_xmda_m.* TO NULL
         INITIALIZE g_xmdc_d TO NULL
         INITIALIZE g_xmdc2_d TO NULL
         INITIALIZE g_xmdc3_d TO NULL
         INITIALIZE g_xmdc4_d TO NULL
         INITIALIZE g_xmdc5_d TO NULL
         INITIALIZE g_xmdc6_d TO NULL
 
         #add-point:取消新增後
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL axmt500_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_xmdc_d.clear()
      #CALL g_xmdc2_d.clear()
      #CALL g_xmdc3_d.clear()
      #CALL g_xmdc4_d.clear()
      #CALL g_xmdc5_d.clear()
      #CALL g_xmdc6_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt500_set_act_visible()   
   CALL axmt500_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_xmdadocno_t = g_xmda_m.xmdadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " xmdaent = '" ||g_enterprise|| "' AND",
                      " xmdadocno = '", g_xmda_m.xmdadocno, "' "
 
                      
   #add-point:組合新增資料的條件後
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axmt500_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE axmt500_cl
   
   CALL axmt500_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE axmt500_master_referesh USING g_xmda_m.xmdadocno INTO g_xmda_m.xmdadocno,g_xmda_m.xmda001, 
       g_xmda_m.xmdadocdt,g_xmda_m.xmda004,g_xmda_m.xmda002,g_xmda_m.xmda003,g_xmda_m.xmdasite,g_xmda_m.xmdastus, 
       g_xmda_m.xmda005,g_xmda_m.xmda006,g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda033,g_xmda_m.xmda027, 
       g_xmda_m.xmda009,g_xmda_m.xmda010,g_xmda_m.xmda011,g_xmda_m.xmda012,g_xmda_m.xmda013,g_xmda_m.xmda035, 
       g_xmda_m.xmda015,g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda018,g_xmda_m.xmda019,g_xmda_m.xmda023, 
       g_xmda_m.xmda032,g_xmda_m.xmda071,g_xmda_m.xmda050,g_xmda_m.xmda021,g_xmda_m.xmda022,g_xmda_m.xmda034, 
       g_xmda_m.xmda203,g_xmda_m.xmda024,g_xmda_m.xmda048,g_xmda_m.xmda049,g_xmda_m.xmda044,g_xmda_m.xmda030, 
       g_xmda_m.xmda031,g_xmda_m.xmda045,g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028,g_xmda_m.xmda043, 
       g_xmda_m.xmda025,g_xmda_m.xmda026,g_xmda_m.xmda020,g_xmda_m.xmda037,g_xmda_m.xmda038,g_xmda_m.xmda036, 
       g_xmda_m.xmda039,g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdaownid,g_xmda_m.xmdaowndp,g_xmda_m.xmdacrtid, 
       g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid,g_xmda_m.xmdamoddt,g_xmda_m.xmdacnfid, 
       g_xmda_m.xmdacnfdt,g_xmda_m.xmda004_desc,g_xmda_m.xmda002_desc,g_xmda_m.xmda003_desc,g_xmda_m.xmda009_desc, 
       g_xmda_m.xmda010_desc,g_xmda_m.xmda015_desc,g_xmda_m.xmda017_desc,g_xmda_m.xmda018_desc,g_xmda_m.xmda023_desc, 
       g_xmda_m.xmda032_desc,g_xmda_m.xmda021_desc,g_xmda_m.xmda022_desc,g_xmda_m.xmda034_desc,g_xmda_m.xmda203_desc, 
       g_xmda_m.xmda024_desc,g_xmda_m.xmda044_desc,g_xmda_m.xmda025_desc,g_xmda_m.xmda026_desc,g_xmda_m.xmda020_desc, 
       g_xmda_m.xmda036_desc,g_xmda_m.xmdaownid_desc,g_xmda_m.xmdaowndp_desc,g_xmda_m.xmdacrtid_desc, 
       g_xmda_m.xmdacrtdp_desc,g_xmda_m.xmdamodid_desc,g_xmda_m.xmdacnfid_desc
   
   #遮罩相關處理
   LET g_xmda_m_mask_o.* =  g_xmda_m.*
   CALL axmt500_xmda_t_mask()
   LET g_xmda_m_mask_n.* =  g_xmda_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_xmda_m.xmdadocno,g_xmda_m.xmda001,g_xmda_m.xmdadocno_desc,g_xmda_m.xmdadocdt,g_xmda_m.xmda004, 
       g_xmda_m.xmda004_desc,g_xmda_m.xmda002,g_xmda_m.xmda002_desc,g_xmda_m.xmda003,g_xmda_m.xmda003_desc, 
       g_xmda_m.xmdasite,g_xmda_m.xmdastus,g_xmda_m.xmda005,g_xmda_m.xmda006,g_xmda_m.xmda007,g_xmda_m.xmda008, 
       g_xmda_m.xmda033,g_xmda_m.xmda027,g_xmda_m.xmda027_desc,g_xmda_m.xmda009,g_xmda_m.xmda009_desc, 
       g_xmda_m.xmda010,g_xmda_m.xmda010_desc,g_xmda_m.xmda011,g_xmda_m.xmda011_desc,g_xmda_m.xmda012, 
       g_xmda_m.xmda013,g_xmda_m.xmda035,g_xmda_m.xmda035_desc,g_xmda_m.xmda015,g_xmda_m.xmda015_desc, 
       g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda017_desc,g_xmda_m.xmda018,g_xmda_m.xmda018_desc, 
       g_xmda_m.xmda019,g_xmda_m.xmda023,g_xmda_m.xmda023_desc,g_xmda_m.xmda032,g_xmda_m.xmda032_desc, 
       g_xmda_m.xmda071,g_xmda_m.xmda050,g_xmda_m.xmda021,g_xmda_m.xmda021_desc,g_xmda_m.xmda022,g_xmda_m.xmda022_desc, 
       g_xmda_m.xmda034,g_xmda_m.xmda034_desc,g_xmda_m.xmda203,g_xmda_m.xmda203_desc,g_xmda_m.xmda024, 
       g_xmda_m.xmda024_desc,g_xmda_m.xmda048,g_xmda_m.xmda049,g_xmda_m.xmda044,g_xmda_m.xmda044_desc, 
       g_xmda_m.xmda030,g_xmda_m.xmda031,g_xmda_m.xmda045,g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028, 
       g_xmda_m.xmda043,g_xmda_m.xmda025,g_xmda_m.xmda025_desc,g_xmda_m.oofb0171,g_xmda_m.xmda026,g_xmda_m.xmda026_desc, 
       g_xmda_m.oofb0172,g_xmda_m.xmda020,g_xmda_m.xmda020_desc,g_xmda_m.xmda037,g_xmda_m.xmda037_desc, 
       g_xmda_m.xmda038,g_xmda_m.xmda038_desc,g_xmda_m.xmda036,g_xmda_m.xmda036_desc,g_xmda_m.xmda039, 
       g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdaownid,g_xmda_m.xmdaownid_desc,g_xmda_m.xmdaowndp, 
       g_xmda_m.xmdaowndp_desc,g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtid_desc,g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdp_desc, 
       g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid,g_xmda_m.xmdamodid_desc,g_xmda_m.xmdamoddt,g_xmda_m.xmdacnfid, 
       g_xmda_m.xmdacnfid_desc,g_xmda_m.xmdacnfdt
   
   #add-point:新增結束後
   {<point name="insert.after"/>}
   #end add-point 
   
   #功能已完成,通報訊息中心
   CALL axmt500_msgcentre_notify('insert')
   
END FUNCTION
]]>
  </section>
  <section id="axmt500.modify" ver="80" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION axmt500_modify()
   #add-point:modify段define(客製用)
   {<point name="modify.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING
 
   DEFINE l_wc2_table3   STRING
 
   DEFINE l_wc2_table4   STRING
 
   DEFINE l_wc2_table5   STRING
 
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="modify.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理 
   {<point name="modify.pre_function"/>}
   #end add-point
   
   #保存單頭舊值
   LET g_xmda_m_t.* = g_xmda_m.*
   LET g_xmda_m_o.* = g_xmda_m.*
   
   IF g_xmda_m.xmdadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_xmdadocno_t = g_xmda_m.xmdadocno
 
   CALL s_transaction_begin()
   
   OPEN axmt500_cl USING g_enterprise,g_xmda_m.xmdadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axmt500_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE axmt500_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axmt500_master_referesh USING g_xmda_m.xmdadocno INTO g_xmda_m.xmdadocno,g_xmda_m.xmda001, 
       g_xmda_m.xmdadocdt,g_xmda_m.xmda004,g_xmda_m.xmda002,g_xmda_m.xmda003,g_xmda_m.xmdasite,g_xmda_m.xmdastus, 
       g_xmda_m.xmda005,g_xmda_m.xmda006,g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda033,g_xmda_m.xmda027, 
       g_xmda_m.xmda009,g_xmda_m.xmda010,g_xmda_m.xmda011,g_xmda_m.xmda012,g_xmda_m.xmda013,g_xmda_m.xmda035, 
       g_xmda_m.xmda015,g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda018,g_xmda_m.xmda019,g_xmda_m.xmda023, 
       g_xmda_m.xmda032,g_xmda_m.xmda071,g_xmda_m.xmda050,g_xmda_m.xmda021,g_xmda_m.xmda022,g_xmda_m.xmda034, 
       g_xmda_m.xmda203,g_xmda_m.xmda024,g_xmda_m.xmda048,g_xmda_m.xmda049,g_xmda_m.xmda044,g_xmda_m.xmda030, 
       g_xmda_m.xmda031,g_xmda_m.xmda045,g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028,g_xmda_m.xmda043, 
       g_xmda_m.xmda025,g_xmda_m.xmda026,g_xmda_m.xmda020,g_xmda_m.xmda037,g_xmda_m.xmda038,g_xmda_m.xmda036, 
       g_xmda_m.xmda039,g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdaownid,g_xmda_m.xmdaowndp,g_xmda_m.xmdacrtid, 
       g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid,g_xmda_m.xmdamoddt,g_xmda_m.xmdacnfid, 
       g_xmda_m.xmdacnfdt,g_xmda_m.xmda004_desc,g_xmda_m.xmda002_desc,g_xmda_m.xmda003_desc,g_xmda_m.xmda009_desc, 
       g_xmda_m.xmda010_desc,g_xmda_m.xmda015_desc,g_xmda_m.xmda017_desc,g_xmda_m.xmda018_desc,g_xmda_m.xmda023_desc, 
       g_xmda_m.xmda032_desc,g_xmda_m.xmda021_desc,g_xmda_m.xmda022_desc,g_xmda_m.xmda034_desc,g_xmda_m.xmda203_desc, 
       g_xmda_m.xmda024_desc,g_xmda_m.xmda044_desc,g_xmda_m.xmda025_desc,g_xmda_m.xmda026_desc,g_xmda_m.xmda020_desc, 
       g_xmda_m.xmda036_desc,g_xmda_m.xmdaownid_desc,g_xmda_m.xmdaowndp_desc,g_xmda_m.xmdacrtid_desc, 
       g_xmda_m.xmdacrtdp_desc,g_xmda_m.xmdamodid_desc,g_xmda_m.xmdacnfid_desc
   
   #檢查是否允許此動作
   IF NOT axmt500_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_xmda_m_mask_o.* =  g_xmda_m.*
   CALL axmt500_xmda_t_mask()
   LET g_xmda_m_mask_n.* =  g_xmda_m.*
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
   #LET l_wc2_table3 = g_wc2_table3
   #LET l_wc2_table3 = " 1=1"
 
   #LET l_wc2_table4 = g_wc2_table4
   #LET l_wc2_table4 = " 1=1"
 
   #LET l_wc2_table5 = g_wc2_table5
   #LET l_wc2_table5 = " 1=1"
 
 
 
   
   CALL axmt500_show()
   #add-point:modify段show之後
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 
 
   #LET  g_wc2_table3 = l_wc2_table3 
 
   #LET  g_wc2_table4 = l_wc2_table4 
 
   #LET  g_wc2_table5 = l_wc2_table5 
 
 
 
    
   WHILE TRUE
      LET g_xmdadocno_t = g_xmda_m.xmdadocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_xmda_m.xmdamodid = g_user 
LET g_xmda_m.xmdamoddt = cl_get_current()
LET g_xmda_m.xmdamodid_desc = cl_get_username(g_xmda_m.xmdamodid)
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      CALL axmt500_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE xmda_t SET (xmdamodid,xmdamoddt) = (g_xmda_m.xmdamodid,g_xmda_m.xmdamoddt)
          WHERE xmdaent = g_enterprise AND xmdadocno = g_xmdadocno_t
 
      END IF
    
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_xmda_m.* = g_xmda_m_t.*
         CALL axmt500_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_xmda_m.xmdadocno != g_xmdadocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE xmdc_t SET xmdcdocno = g_xmda_m.xmdadocno
 
          WHERE xmdcent = g_enterprise AND xmdcdocno = g_xmdadocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmdc_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmdc_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         
         UPDATE xmdd_t
            SET xmdddocno = g_xmda_m.xmdadocno
 
          WHERE xmddent = g_enterprise AND
                xmdddocno = g_xmdadocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmdd_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmdd_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update3" mark="Y"/>}
         #end add-point
         
         UPDATE xmdq_t
            SET xmdqdocno = g_xmda_m.xmdadocno
 
          WHERE xmdqent = g_enterprise AND
                xmdqdocno = g_xmdadocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update3"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmdq_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmdq_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update3"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update4" mark="Y"/>}
         #end add-point
         
         UPDATE xmdb_t
            SET xmdbdocno = g_xmda_m.xmdadocno
 
          WHERE xmdbent = g_enterprise AND
                xmdbdocno = g_xmdadocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update4"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmdb_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmdb_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update4"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update5" mark="Y"/>}
         #end add-point
         
         UPDATE xmds_t
            SET xmdsdocno = g_xmda_m.xmdadocno
 
          WHERE xmdsent = g_enterprise AND
                xmdsdocno = g_xmdadocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update5"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmds_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmds_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update5"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
         
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt500_set_act_visible()   
   CALL axmt500_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " xmdaent = '" ||g_enterprise|| "' AND",
                      " xmdadocno = '", g_xmda_m.xmdadocno, "' "
 
   #填到對應位置
   CALL axmt500_browser_fill("")
 
   CLOSE axmt500_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL axmt500_msgcentre_notify('modify')
 
END FUNCTION 
]]>
  </section>
  <section id="axmt500.input" ver="73" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION axmt500_input(p_cmd)
   #add-point:input段define(客製用)
   {<point name="input.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="input.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理 
   {<point name="input.pre_function"/>}
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xmda_m.xmdadocno,g_xmda_m.xmda001,g_xmda_m.xmdadocno_desc,g_xmda_m.xmdadocdt,g_xmda_m.xmda004, 
       g_xmda_m.xmda004_desc,g_xmda_m.xmda002,g_xmda_m.xmda002_desc,g_xmda_m.xmda003,g_xmda_m.xmda003_desc, 
       g_xmda_m.xmdasite,g_xmda_m.xmdastus,g_xmda_m.xmda005,g_xmda_m.xmda006,g_xmda_m.xmda007,g_xmda_m.xmda008, 
       g_xmda_m.xmda033,g_xmda_m.xmda027,g_xmda_m.xmda027_desc,g_xmda_m.xmda009,g_xmda_m.xmda009_desc, 
       g_xmda_m.xmda010,g_xmda_m.xmda010_desc,g_xmda_m.xmda011,g_xmda_m.xmda011_desc,g_xmda_m.xmda012, 
       g_xmda_m.xmda013,g_xmda_m.xmda035,g_xmda_m.xmda035_desc,g_xmda_m.xmda015,g_xmda_m.xmda015_desc, 
       g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda017_desc,g_xmda_m.xmda018,g_xmda_m.xmda018_desc, 
       g_xmda_m.xmda019,g_xmda_m.xmda023,g_xmda_m.xmda023_desc,g_xmda_m.xmda032,g_xmda_m.xmda032_desc, 
       g_xmda_m.xmda071,g_xmda_m.xmda050,g_xmda_m.xmda021,g_xmda_m.xmda021_desc,g_xmda_m.xmda022,g_xmda_m.xmda022_desc, 
       g_xmda_m.xmda034,g_xmda_m.xmda034_desc,g_xmda_m.xmda203,g_xmda_m.xmda203_desc,g_xmda_m.xmda024, 
       g_xmda_m.xmda024_desc,g_xmda_m.xmda048,g_xmda_m.xmda049,g_xmda_m.xmda044,g_xmda_m.xmda044_desc, 
       g_xmda_m.xmda030,g_xmda_m.xmda031,g_xmda_m.xmda045,g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028, 
       g_xmda_m.xmda043,g_xmda_m.xmda025,g_xmda_m.xmda025_desc,g_xmda_m.oofb0171,g_xmda_m.xmda026,g_xmda_m.xmda026_desc, 
       g_xmda_m.oofb0172,g_xmda_m.xmda020,g_xmda_m.xmda020_desc,g_xmda_m.xmda037,g_xmda_m.xmda037_desc, 
       g_xmda_m.xmda038,g_xmda_m.xmda038_desc,g_xmda_m.xmda036,g_xmda_m.xmda036_desc,g_xmda_m.xmda039, 
       g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdaownid,g_xmda_m.xmdaownid_desc,g_xmda_m.xmdaowndp, 
       g_xmda_m.xmdaowndp_desc,g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtid_desc,g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdp_desc, 
       g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid,g_xmda_m.xmdamodid_desc,g_xmda_m.xmdamoddt,g_xmda_m.xmdacnfid, 
       g_xmda_m.xmdacnfid_desc,g_xmda_m.xmdacnfdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT xmdcseq,xmdc027,xmdc001,xmdc019,xmdc002,xmdc006,xmdc007,xmdc008,xmdc009, 
       xmdc024,xmdc012,xmdc013,xmdc045,xmdc016,xmdc017,xmdc010,xmdc011,xmdc015,xmdc046,xmdc047,xmdc048, 
       xmdc023,xmdc020,xmdc021,xmdc022,xmdcunit,xmdcorga,xmdc052,xmdc049,xmdc053,xmdc050,xmdcsite,xmdc058, 
       xmdc059,xmdc060,xmdc061,xmdcseq,xmdc028,xmdc029,xmdc030,xmdc057,xmdc025,xmdc026,xmdc031,xmdc032, 
       xmdc033,xmdc003,xmdc054,xmdc036,xmdc037,xmdc038,xmdc039,xmdc035,xmdc040,xmdc041,xmdc042,xmdc043, 
       xmdc044 FROM xmdc_t WHERE xmdcent=? AND xmdcdocno=? AND xmdcseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt500_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT xmddseq,xmddseq1,xmdd003,xmdd001,xmdd002,xmdd004,xmdd005,xmddseq2,xmdd006, 
       xmdd024,xmdd025,xmdd011,xmdd012,xmdd010,xmdd013,xmdd009,xmdd031,xmdd014,xmdd015,xmdd016,xmdd017, 
       xmdd026,xmdd027,xmdd018,xmdd019,xmdd020,xmdd028,xmdd029,xmdd030,xmdd021,xmdd022,xmdd023,xmddsite, 
       xmdd036,xmdd037,xmdd038,xmdd039 FROM xmdd_t WHERE xmddent=? AND xmdddocno=? AND xmddseq=? AND  
       xmddseq1=? AND xmddseq2=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt500_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql3" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT xmdqdocno,xmdqseq,xmdqseq1,xmdq001,xmdq006,xmdq007,xmdq008,xmdq009,xmdq002, 
       xmdq004,xmdq005,xmdqsite FROM xmdq_t WHERE xmdqent=? AND xmdqdocno=? AND xmdqseq=? AND xmdqseq1=?  
       FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql3"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt500_bcl3 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql4" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT xmdb001,xmdb002,xmdb003,xmdb004,xmdb005,xmdb006,xmdb016,xmdb017,xmdb007, 
       xmdb008,xmdb009,xmdbsite FROM xmdb_t WHERE xmdbent=? AND xmdbdocno=? AND xmdb001=? FOR UPDATE" 

   #add-point:input段define_sql
   {<point name="input.after_define_sql4"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt500_bcl4 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql5" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT xmdsseq,xmds001,xmds002,xmds003,xmds004,xmds005,xmds006,xmdssite FROM  
       xmds_t WHERE xmdsent=? AND xmdsdocno=? AND xmdsseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql5"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt500_bcl5 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL axmt500_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL axmt500_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_xmda_m.xmdadocno,g_xmda_m.xmdadocdt,g_xmda_m.xmda004,g_xmda_m.xmda002,g_xmda_m.xmda003, 
       g_xmda_m.xmdastus,g_xmda_m.xmda005,g_xmda_m.xmda006,g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda033, 
       g_xmda_m.xmda027,g_xmda_m.xmda009,g_xmda_m.xmda010,g_xmda_m.xmda011,g_xmda_m.xmda035,g_xmda_m.xmda015, 
       g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda018,g_xmda_m.xmda019,g_xmda_m.xmda023,g_xmda_m.xmda032, 
       g_xmda_m.xmda071,g_xmda_m.xmda050,g_xmda_m.xmda021,g_xmda_m.xmda022,g_xmda_m.xmda034,g_xmda_m.xmda203, 
       g_xmda_m.xmda024,g_xmda_m.xmda048,g_xmda_m.xmda049,g_xmda_m.xmda044,g_xmda_m.xmda028,g_xmda_m.xmda025, 
       g_xmda_m.xmda026,g_xmda_m.xmda020,g_xmda_m.xmda037,g_xmda_m.xmda038,g_xmda_m.xmda036,g_xmda_m.xmda039 

   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
  </section>
  <section id="axmt500.input.head" ver="59" ch="" status="" src="s" readonly="">
    <![CDATA[      #單頭段
      INPUT BY NAME g_xmda_m.xmdadocno,g_xmda_m.xmdadocdt,g_xmda_m.xmda004,g_xmda_m.xmda002,g_xmda_m.xmda003, 
          g_xmda_m.xmdastus,g_xmda_m.xmda005,g_xmda_m.xmda006,g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda033, 
          g_xmda_m.xmda027,g_xmda_m.xmda009,g_xmda_m.xmda010,g_xmda_m.xmda011,g_xmda_m.xmda035,g_xmda_m.xmda015, 
          g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda018,g_xmda_m.xmda019,g_xmda_m.xmda023,g_xmda_m.xmda032, 
          g_xmda_m.xmda071,g_xmda_m.xmda050,g_xmda_m.xmda021,g_xmda_m.xmda022,g_xmda_m.xmda034,g_xmda_m.xmda203, 
          g_xmda_m.xmda024,g_xmda_m.xmda048,g_xmda_m.xmda049,g_xmda_m.xmda044,g_xmda_m.xmda028,g_xmda_m.xmda025, 
          g_xmda_m.xmda026,g_xmda_m.xmda020,g_xmda_m.xmda037,g_xmda_m.xmda038,g_xmda_m.xmda036,g_xmda_m.xmda039  

         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN axmt500_cl USING g_enterprise,g_xmda_m.xmdadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axmt500_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE axmt500_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL axmt500_set_entry(p_cmd)
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL axmt500_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdadocno
            
            #add-point:AFTER FIELD xmdadocno
            {<point name="input.a.xmdadocno" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdadocno
            #add-point:BEFORE FIELD xmdadocno
            {<point name="input.b.xmdadocno" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdadocno
            #add-point:ON CHANGE xmdadocno
            {<point name="input.g.xmdadocno" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdadocdt
            #add-point:BEFORE FIELD xmdadocdt
            {<point name="input.b.xmdadocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdadocdt
            
            #add-point:AFTER FIELD xmdadocdt
            {<point name="input.a.xmdadocdt" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdadocdt
            #add-point:ON CHANGE xmdadocdt
            {<point name="input.g.xmdadocdt" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda004
            
            #add-point:AFTER FIELD xmda004
            {<point name="input.a.xmda004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda004
            #add-point:BEFORE FIELD xmda004
            {<point name="input.b.xmda004" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda004
            #add-point:ON CHANGE xmda004
            {<point name="input.g.xmda004" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda002
            
            #add-point:AFTER FIELD xmda002
            {<point name="input.a.xmda002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda002
            #add-point:BEFORE FIELD xmda002
            {<point name="input.b.xmda002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda002
            #add-point:ON CHANGE xmda002
            {<point name="input.g.xmda002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda003
            
            #add-point:AFTER FIELD xmda003
            {<point name="input.a.xmda003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda003
            #add-point:BEFORE FIELD xmda003
            {<point name="input.b.xmda003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda003
            #add-point:ON CHANGE xmda003
            {<point name="input.g.xmda003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdastus
            #add-point:BEFORE FIELD xmdastus
            {<point name="input.b.xmdastus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdastus
            
            #add-point:AFTER FIELD xmdastus
            {<point name="input.a.xmdastus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdastus
            #add-point:ON CHANGE xmdastus
            {<point name="input.g.xmdastus" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda005
            #add-point:BEFORE FIELD xmda005
            {<point name="input.b.xmda005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda005
            
            #add-point:AFTER FIELD xmda005
            {<point name="input.a.xmda005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda005
            #add-point:ON CHANGE xmda005
            {<point name="input.g.xmda005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda006
            #add-point:BEFORE FIELD xmda006
            {<point name="input.b.xmda006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda006
            
            #add-point:AFTER FIELD xmda006
            {<point name="input.a.xmda006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda006
            #add-point:ON CHANGE xmda006
            {<point name="input.g.xmda006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda007
            #add-point:BEFORE FIELD xmda007
            {<point name="input.b.xmda007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda007
            
            #add-point:AFTER FIELD xmda007
            {<point name="input.a.xmda007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda007
            #add-point:ON CHANGE xmda007
            {<point name="input.g.xmda007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda008
            #add-point:BEFORE FIELD xmda008
            {<point name="input.b.xmda008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda008
            
            #add-point:AFTER FIELD xmda008
            {<point name="input.a.xmda008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda008
            #add-point:ON CHANGE xmda008
            {<point name="input.g.xmda008" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda033
            #add-point:BEFORE FIELD xmda033
            {<point name="input.b.xmda033" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda033
            
            #add-point:AFTER FIELD xmda033
            {<point name="input.a.xmda033" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda033
            #add-point:ON CHANGE xmda033
            {<point name="input.g.xmda033" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda027
            
            #add-point:AFTER FIELD xmda027
            {<point name="input.a.xmda027" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda027
            #add-point:BEFORE FIELD xmda027
            {<point name="input.b.xmda027" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda027
            #add-point:ON CHANGE xmda027
            {<point name="input.g.xmda027" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda009
            
            #add-point:AFTER FIELD xmda009
            {<point name="input.a.xmda009" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda009
            #add-point:BEFORE FIELD xmda009
            {<point name="input.b.xmda009" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda009
            #add-point:ON CHANGE xmda009
            {<point name="input.g.xmda009" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda010
            
            #add-point:AFTER FIELD xmda010
            {<point name="input.a.xmda010" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda010
            #add-point:BEFORE FIELD xmda010
            {<point name="input.b.xmda010" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda010
            #add-point:ON CHANGE xmda010
            {<point name="input.g.xmda010" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda011
            
            #add-point:AFTER FIELD xmda011
            {<point name="input.a.xmda011" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda011
            #add-point:BEFORE FIELD xmda011
            {<point name="input.b.xmda011" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda011
            #add-point:ON CHANGE xmda011
            {<point name="input.g.xmda011" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda035
            
            #add-point:AFTER FIELD xmda035
            {<point name="input.a.xmda035" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda035
            #add-point:BEFORE FIELD xmda035
            {<point name="input.b.xmda035" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda035
            #add-point:ON CHANGE xmda035
            {<point name="input.g.xmda035" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda015
            
            #add-point:AFTER FIELD xmda015
            {<point name="input.a.xmda015" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda015
            #add-point:BEFORE FIELD xmda015
            {<point name="input.b.xmda015" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda015
            #add-point:ON CHANGE xmda015
            {<point name="input.g.xmda015" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda016
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmda_m.xmda016,"0","0","","","azz-00079",1) THEN
               NEXT FIELD xmda016
            END IF 
 
 
            #add-point:AFTER FIELD xmda016
            {<point name="input.a.xmda016" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda016
            #add-point:BEFORE FIELD xmda016
            {<point name="input.b.xmda016" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda016
            #add-point:ON CHANGE xmda016
            {<point name="input.g.xmda016" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda017
            
            #add-point:AFTER FIELD xmda017
            {<point name="input.a.xmda017" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda017
            #add-point:BEFORE FIELD xmda017
            {<point name="input.b.xmda017" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda017
            #add-point:ON CHANGE xmda017
            {<point name="input.g.xmda017" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda018
            
            #add-point:AFTER FIELD xmda018
            {<point name="input.a.xmda018" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda018
            #add-point:BEFORE FIELD xmda018
            {<point name="input.b.xmda018" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda018
            #add-point:ON CHANGE xmda018
            {<point name="input.g.xmda018" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda019
            #add-point:BEFORE FIELD xmda019
            {<point name="input.b.xmda019" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda019
            
            #add-point:AFTER FIELD xmda019
            {<point name="input.a.xmda019" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda019
            #add-point:ON CHANGE xmda019
            {<point name="input.g.xmda019" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda023
            
            #add-point:AFTER FIELD xmda023
            {<point name="input.a.xmda023" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda023
            #add-point:BEFORE FIELD xmda023
            {<point name="input.b.xmda023" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda023
            #add-point:ON CHANGE xmda023
            {<point name="input.g.xmda023" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda032
            
            #add-point:AFTER FIELD xmda032
            {<point name="input.a.xmda032" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda032
            #add-point:BEFORE FIELD xmda032
            {<point name="input.b.xmda032" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda032
            #add-point:ON CHANGE xmda032
            {<point name="input.g.xmda032" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda071
            #add-point:BEFORE FIELD xmda071
            {<point name="input.b.xmda071" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda071
            
            #add-point:AFTER FIELD xmda071
            {<point name="input.a.xmda071" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda071
            #add-point:ON CHANGE xmda071
            {<point name="input.g.xmda071" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda050
            
            #add-point:AFTER FIELD xmda050
            {<point name="input.a.xmda050" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda050
            #add-point:BEFORE FIELD xmda050
            {<point name="input.b.xmda050" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda050
            #add-point:ON CHANGE xmda050
            {<point name="input.g.xmda050" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda021
            
            #add-point:AFTER FIELD xmda021
            {<point name="input.a.xmda021" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda021
            #add-point:BEFORE FIELD xmda021
            {<point name="input.b.xmda021" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda021
            #add-point:ON CHANGE xmda021
            {<point name="input.g.xmda021" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda022
            
            #add-point:AFTER FIELD xmda022
            {<point name="input.a.xmda022" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda022
            #add-point:BEFORE FIELD xmda022
            {<point name="input.b.xmda022" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda022
            #add-point:ON CHANGE xmda022
            {<point name="input.g.xmda022" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda034
            
            #add-point:AFTER FIELD xmda034
            {<point name="input.a.xmda034" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda034
            #add-point:BEFORE FIELD xmda034
            {<point name="input.b.xmda034" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda034
            #add-point:ON CHANGE xmda034
            {<point name="input.g.xmda034" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda203
            
            #add-point:AFTER FIELD xmda203
            {<point name="input.a.xmda203" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda203
            #add-point:BEFORE FIELD xmda203
            {<point name="input.b.xmda203" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda203
            #add-point:ON CHANGE xmda203
            {<point name="input.g.xmda203" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda024
            
            #add-point:AFTER FIELD xmda024
            {<point name="input.a.xmda024" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda024
            #add-point:BEFORE FIELD xmda024
            {<point name="input.b.xmda024" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda024
            #add-point:ON CHANGE xmda024
            {<point name="input.g.xmda024" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda048
            #add-point:BEFORE FIELD xmda048
            {<point name="input.b.xmda048" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda048
            
            #add-point:AFTER FIELD xmda048
            {<point name="input.a.xmda048" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda048
            #add-point:ON CHANGE xmda048
            {<point name="input.g.xmda048" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda049
            #add-point:BEFORE FIELD xmda049
            {<point name="input.b.xmda049" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda049
            
            #add-point:AFTER FIELD xmda049
            {<point name="input.a.xmda049" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda049
            #add-point:ON CHANGE xmda049
            {<point name="input.g.xmda049" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda044
            
            #add-point:AFTER FIELD xmda044
            {<point name="input.a.xmda044" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda044
            #add-point:BEFORE FIELD xmda044
            {<point name="input.b.xmda044" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda044
            #add-point:ON CHANGE xmda044
            {<point name="input.g.xmda044" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda028
            #add-point:BEFORE FIELD xmda028
            {<point name="input.b.xmda028" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda028
            
            #add-point:AFTER FIELD xmda028
            {<point name="input.a.xmda028" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda028
            #add-point:ON CHANGE xmda028
            {<point name="input.g.xmda028" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda025
            
            #add-point:AFTER FIELD xmda025
            {<point name="input.a.xmda025" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda025
            #add-point:BEFORE FIELD xmda025
            {<point name="input.b.xmda025" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda025
            #add-point:ON CHANGE xmda025
            {<point name="input.g.xmda025" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda026
            
            #add-point:AFTER FIELD xmda026
            {<point name="input.a.xmda026" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda026
            #add-point:BEFORE FIELD xmda026
            {<point name="input.b.xmda026" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda026
            #add-point:ON CHANGE xmda026
            {<point name="input.g.xmda026" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda020
            
            #add-point:AFTER FIELD xmda020
            {<point name="input.a.xmda020" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda020
            #add-point:BEFORE FIELD xmda020
            {<point name="input.b.xmda020" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda020
            #add-point:ON CHANGE xmda020
            {<point name="input.g.xmda020" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda037
            
            #add-point:AFTER FIELD xmda037
            {<point name="input.a.xmda037" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda037
            #add-point:BEFORE FIELD xmda037
            {<point name="input.b.xmda037" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda037
            #add-point:ON CHANGE xmda037
            {<point name="input.g.xmda037" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda038
            
            #add-point:AFTER FIELD xmda038
            {<point name="input.a.xmda038" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda038
            #add-point:BEFORE FIELD xmda038
            {<point name="input.b.xmda038" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda038
            #add-point:ON CHANGE xmda038
            {<point name="input.g.xmda038" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda036
            
            #add-point:AFTER FIELD xmda036
            {<point name="input.a.xmda036" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda036
            #add-point:BEFORE FIELD xmda036
            {<point name="input.b.xmda036" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda036
            #add-point:ON CHANGE xmda036
            {<point name="input.g.xmda036" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda039
            #add-point:BEFORE FIELD xmda039
            {<point name="input.b.xmda039" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda039
            
            #add-point:AFTER FIELD xmda039
            {<point name="input.a.xmda039" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda039
            #add-point:ON CHANGE xmda039
            {<point name="input.g.xmda039" />}
            #END add-point 
 
 #欄位檢查
                  #Ctrlp:input.c.xmdadocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdadocno
            #add-point:ON ACTION controlp INFIELD xmdadocno
            {<point name="input.c.xmdadocno" />}
            #END add-point
 
         #Ctrlp:input.c.xmdadocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdadocdt
            #add-point:ON ACTION controlp INFIELD xmdadocdt
            {<point name="input.c.xmdadocdt" />}
            #END add-point
 
         #Ctrlp:input.c.xmda004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda004
            #add-point:ON ACTION controlp INFIELD xmda004
            {<point name="input.c.xmda004" />}
            #END add-point
 
         #Ctrlp:input.c.xmda002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda002
            #add-point:ON ACTION controlp INFIELD xmda002
            {<point name="input.c.xmda002" />}
            #END add-point
 
         #Ctrlp:input.c.xmda003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda003
            #add-point:ON ACTION controlp INFIELD xmda003
            {<point name="input.c.xmda003" />}
            #END add-point
 
         #Ctrlp:input.c.xmdastus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdastus
            #add-point:ON ACTION controlp INFIELD xmdastus
            {<point name="input.c.xmdastus" />}
            #END add-point
 
         #Ctrlp:input.c.xmda005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda005
            #add-point:ON ACTION controlp INFIELD xmda005
            {<point name="input.c.xmda005" />}
            #END add-point
 
         #Ctrlp:input.c.xmda006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda006
            #add-point:ON ACTION controlp INFIELD xmda006
            {<point name="input.c.xmda006" />}
            #END add-point
 
         #Ctrlp:input.c.xmda007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda007
            #add-point:ON ACTION controlp INFIELD xmda007
            {<point name="input.c.xmda007" />}
            #END add-point
 
         #Ctrlp:input.c.xmda008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda008
            #add-point:ON ACTION controlp INFIELD xmda008
            {<point name="input.c.xmda008" />}
            #END add-point
 
         #Ctrlp:input.c.xmda033
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda033
            #add-point:ON ACTION controlp INFIELD xmda033
            {<point name="input.c.xmda033" />}
            #END add-point
 
         #Ctrlp:input.c.xmda027
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda027
            #add-point:ON ACTION controlp INFIELD xmda027
            {<point name="input.c.xmda027" />}
            #END add-point
 
         #Ctrlp:input.c.xmda009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda009
            #add-point:ON ACTION controlp INFIELD xmda009
            {<point name="input.c.xmda009" />}
            #END add-point
 
         #Ctrlp:input.c.xmda010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda010
            #add-point:ON ACTION controlp INFIELD xmda010
            {<point name="input.c.xmda010" />}
            #END add-point
 
         #Ctrlp:input.c.xmda011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda011
            #add-point:ON ACTION controlp INFIELD xmda011
            {<point name="input.c.xmda011" />}
            #END add-point
 
         #Ctrlp:input.c.xmda035
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda035
            #add-point:ON ACTION controlp INFIELD xmda035
            {<point name="input.c.xmda035" />}
            #END add-point
 
         #Ctrlp:input.c.xmda015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda015
            #add-point:ON ACTION controlp INFIELD xmda015
            {<point name="input.c.xmda015" />}
            #END add-point
 
         #Ctrlp:input.c.xmda016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda016
            #add-point:ON ACTION controlp INFIELD xmda016
            {<point name="input.c.xmda016" />}
            #END add-point
 
         #Ctrlp:input.c.xmda017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda017
            #add-point:ON ACTION controlp INFIELD xmda017
            {<point name="input.c.xmda017" />}
            #END add-point
 
         #Ctrlp:input.c.xmda018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda018
            #add-point:ON ACTION controlp INFIELD xmda018
            {<point name="input.c.xmda018" />}
            #END add-point
 
         #Ctrlp:input.c.xmda019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda019
            #add-point:ON ACTION controlp INFIELD xmda019
            {<point name="input.c.xmda019" />}
            #END add-point
 
         #Ctrlp:input.c.xmda023
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda023
            #add-point:ON ACTION controlp INFIELD xmda023
            {<point name="input.c.xmda023" />}
            #END add-point
 
         #Ctrlp:input.c.xmda032
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda032
            #add-point:ON ACTION controlp INFIELD xmda032
            {<point name="input.c.xmda032" />}
            #END add-point
 
         #Ctrlp:input.c.xmda071
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda071
            #add-point:ON ACTION controlp INFIELD xmda071
            {<point name="input.c.xmda071" />}
            #END add-point
 
         #Ctrlp:input.c.xmda050
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda050
            #add-point:ON ACTION controlp INFIELD xmda050
            {<point name="input.c.xmda050" />}
            #END add-point
 
         #Ctrlp:input.c.xmda021
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda021
            #add-point:ON ACTION controlp INFIELD xmda021
            {<point name="input.c.xmda021" />}
            #END add-point
 
         #Ctrlp:input.c.xmda022
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda022
            #add-point:ON ACTION controlp INFIELD xmda022
            {<point name="input.c.xmda022" />}
            #END add-point
 
         #Ctrlp:input.c.xmda034
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda034
            #add-point:ON ACTION controlp INFIELD xmda034
            {<point name="input.c.xmda034" />}
            #END add-point
 
         #Ctrlp:input.c.xmda203
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda203
            #add-point:ON ACTION controlp INFIELD xmda203
            {<point name="input.c.xmda203" />}
            #END add-point
 
         #Ctrlp:input.c.xmda024
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda024
            #add-point:ON ACTION controlp INFIELD xmda024
            {<point name="input.c.xmda024" />}
            #END add-point
 
         #Ctrlp:input.c.xmda048
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda048
            #add-point:ON ACTION controlp INFIELD xmda048
            {<point name="input.c.xmda048" />}
            #END add-point
 
         #Ctrlp:input.c.xmda049
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda049
            #add-point:ON ACTION controlp INFIELD xmda049
            {<point name="input.c.xmda049" />}
            #END add-point
 
         #Ctrlp:input.c.xmda044
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda044
            #add-point:ON ACTION controlp INFIELD xmda044
            {<point name="input.c.xmda044" />}
            #END add-point
 
         #Ctrlp:input.c.xmda028
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda028
            #add-point:ON ACTION controlp INFIELD xmda028
            {<point name="input.c.xmda028" />}
            #END add-point
 
         #Ctrlp:input.c.xmda025
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda025
            #add-point:ON ACTION controlp INFIELD xmda025
            {<point name="input.c.xmda025" />}
            #END add-point
 
         #Ctrlp:input.c.xmda026
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda026
            #add-point:ON ACTION controlp INFIELD xmda026
            {<point name="input.c.xmda026" />}
            #END add-point
 
         #Ctrlp:input.c.xmda020
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda020
            #add-point:ON ACTION controlp INFIELD xmda020
            {<point name="input.c.xmda020" />}
            #END add-point
 
         #Ctrlp:input.c.xmda037
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda037
            #add-point:ON ACTION controlp INFIELD xmda037
            {<point name="input.c.xmda037" />}
            #END add-point
 
         #Ctrlp:input.c.xmda038
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda038
            #add-point:ON ACTION controlp INFIELD xmda038
            {<point name="input.c.xmda038" />}
            #END add-point
 
         #Ctrlp:input.c.xmda036
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda036
            #add-point:ON ACTION controlp INFIELD xmda036
            {<point name="input.c.xmda036" />}
            #END add-point
 
         #Ctrlp:input.c.xmda039
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda039
            #add-point:ON ACTION controlp INFIELD xmda039
            {<point name="input.c.xmda039" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_xmda_m.xmdadocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO xmda_t (xmdaent,xmdadocno,xmda001,xmdadocdt,xmda004,xmda002,xmda003,xmdasite, 
                   xmdastus,xmda005,xmda006,xmda007,xmda008,xmda033,xmda027,xmda009,xmda010,xmda011, 
                   xmda012,xmda013,xmda035,xmda015,xmda016,xmda017,xmda018,xmda019,xmda023,xmda032,xmda071, 
                   xmda050,xmda021,xmda022,xmda034,xmda203,xmda024,xmda048,xmda049,xmda044,xmda030,xmda031, 
                   xmda045,xmda046,xmda047,xmda028,xmda043,xmda025,xmda026,xmda020,xmda037,xmda038,xmda036, 
                   xmda039,xmda041,xmda042,xmdaownid,xmdaowndp,xmdacrtid,xmdacrtdp,xmdacrtdt,xmdamodid, 
                   xmdamoddt,xmdacnfid,xmdacnfdt)
               VALUES (g_enterprise,g_xmda_m.xmdadocno,g_xmda_m.xmda001,g_xmda_m.xmdadocdt,g_xmda_m.xmda004, 
                   g_xmda_m.xmda002,g_xmda_m.xmda003,g_xmda_m.xmdasite,g_xmda_m.xmdastus,g_xmda_m.xmda005, 
                   g_xmda_m.xmda006,g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda033,g_xmda_m.xmda027, 
                   g_xmda_m.xmda009,g_xmda_m.xmda010,g_xmda_m.xmda011,g_xmda_m.xmda012,g_xmda_m.xmda013, 
                   g_xmda_m.xmda035,g_xmda_m.xmda015,g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda018, 
                   g_xmda_m.xmda019,g_xmda_m.xmda023,g_xmda_m.xmda032,g_xmda_m.xmda071,g_xmda_m.xmda050, 
                   g_xmda_m.xmda021,g_xmda_m.xmda022,g_xmda_m.xmda034,g_xmda_m.xmda203,g_xmda_m.xmda024, 
                   g_xmda_m.xmda048,g_xmda_m.xmda049,g_xmda_m.xmda044,g_xmda_m.xmda030,g_xmda_m.xmda031, 
                   g_xmda_m.xmda045,g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028,g_xmda_m.xmda043, 
                   g_xmda_m.xmda025,g_xmda_m.xmda026,g_xmda_m.xmda020,g_xmda_m.xmda037,g_xmda_m.xmda038, 
                   g_xmda_m.xmda036,g_xmda_m.xmda039,g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdaownid, 
                   g_xmda_m.xmdaowndp,g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid, 
                   g_xmda_m.xmdamoddt,g_xmda_m.xmdacnfid,g_xmda_m.xmdacnfdt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_xmda_m" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL axmt500_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL axmt500_b_fill()
                  CALL axmt500_b_fill2('0')
               END IF
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL axmt500_xmda_t_mask_restore('restore_mask_o')
               
               UPDATE xmda_t SET (xmdadocno,xmda001,xmdadocdt,xmda004,xmda002,xmda003,xmdasite,xmdastus, 
                   xmda005,xmda006,xmda007,xmda008,xmda033,xmda027,xmda009,xmda010,xmda011,xmda012,xmda013, 
                   xmda035,xmda015,xmda016,xmda017,xmda018,xmda019,xmda023,xmda032,xmda071,xmda050,xmda021, 
                   xmda022,xmda034,xmda203,xmda024,xmda048,xmda049,xmda044,xmda030,xmda031,xmda045,xmda046, 
                   xmda047,xmda028,xmda043,xmda025,xmda026,xmda020,xmda037,xmda038,xmda036,xmda039,xmda041, 
                   xmda042,xmdaownid,xmdaowndp,xmdacrtid,xmdacrtdp,xmdacrtdt,xmdamodid,xmdamoddt,xmdacnfid, 
                   xmdacnfdt) = (g_xmda_m.xmdadocno,g_xmda_m.xmda001,g_xmda_m.xmdadocdt,g_xmda_m.xmda004, 
                   g_xmda_m.xmda002,g_xmda_m.xmda003,g_xmda_m.xmdasite,g_xmda_m.xmdastus,g_xmda_m.xmda005, 
                   g_xmda_m.xmda006,g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda033,g_xmda_m.xmda027, 
                   g_xmda_m.xmda009,g_xmda_m.xmda010,g_xmda_m.xmda011,g_xmda_m.xmda012,g_xmda_m.xmda013, 
                   g_xmda_m.xmda035,g_xmda_m.xmda015,g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda018, 
                   g_xmda_m.xmda019,g_xmda_m.xmda023,g_xmda_m.xmda032,g_xmda_m.xmda071,g_xmda_m.xmda050, 
                   g_xmda_m.xmda021,g_xmda_m.xmda022,g_xmda_m.xmda034,g_xmda_m.xmda203,g_xmda_m.xmda024, 
                   g_xmda_m.xmda048,g_xmda_m.xmda049,g_xmda_m.xmda044,g_xmda_m.xmda030,g_xmda_m.xmda031, 
                   g_xmda_m.xmda045,g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028,g_xmda_m.xmda043, 
                   g_xmda_m.xmda025,g_xmda_m.xmda026,g_xmda_m.xmda020,g_xmda_m.xmda037,g_xmda_m.xmda038, 
                   g_xmda_m.xmda036,g_xmda_m.xmda039,g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdaownid, 
                   g_xmda_m.xmdaowndp,g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid, 
                   g_xmda_m.xmdamoddt,g_xmda_m.xmdacnfid,g_xmda_m.xmdacnfdt)
                WHERE xmdaent = g_enterprise AND xmdadocno = g_xmdadocno_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "xmda_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL axmt500_xmda_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_xmda_m_t)
               LET g_log2 = util.JSON.stringify(g_xmda_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_xmdadocno_t = g_xmda_m.xmdadocno
 
            
      END INPUT
   
]]>
  </section>
  <section id="axmt500.input.body" ver="132" ch="" status="" src="s" readonly="">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_xmdc_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xmdc_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axmt500_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1','2',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_xmdc_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN axmt500_cl USING g_enterprise,g_xmda_m.xmdadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axmt500_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE axmt500_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_xmdc_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xmdc_d[l_ac].xmdcseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xmdc_d_t.* = g_xmdc_d[l_ac].*  #BACKUP
               LET g_xmdc_d_o.* = g_xmdc_d[l_ac].*  #BACKUP
               CALL axmt500_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL axmt500_set_no_entry_b(l_cmd)
               IF NOT axmt500_lock_b("xmdc_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axmt500_bcl INTO g_xmdc_d[l_ac].xmdcseq,g_xmdc_d[l_ac].xmdc027,g_xmdc_d[l_ac].xmdc001, 
                      g_xmdc_d[l_ac].xmdc019,g_xmdc_d[l_ac].xmdc002,g_xmdc_d[l_ac].xmdc006,g_xmdc_d[l_ac].xmdc007, 
                      g_xmdc_d[l_ac].xmdc008,g_xmdc_d[l_ac].xmdc009,g_xmdc_d[l_ac].xmdc024,g_xmdc_d[l_ac].xmdc012, 
                      g_xmdc_d[l_ac].xmdc013,g_xmdc_d[l_ac].xmdc045,g_xmdc_d[l_ac].xmdc016,g_xmdc_d[l_ac].xmdc017, 
                      g_xmdc_d[l_ac].xmdc010,g_xmdc_d[l_ac].xmdc011,g_xmdc_d[l_ac].xmdc015,g_xmdc_d[l_ac].xmdc046, 
                      g_xmdc_d[l_ac].xmdc047,g_xmdc_d[l_ac].xmdc048,g_xmdc_d[l_ac].xmdc023,g_xmdc_d[l_ac].xmdc020, 
                      g_xmdc_d[l_ac].xmdc021,g_xmdc_d[l_ac].xmdc022,g_xmdc_d[l_ac].xmdcunit,g_xmdc_d[l_ac].xmdcorga, 
                      g_xmdc_d[l_ac].xmdc052,g_xmdc_d[l_ac].xmdc049,g_xmdc_d[l_ac].xmdc053,g_xmdc_d[l_ac].xmdc050, 
                      g_xmdc_d[l_ac].xmdcsite,g_xmdc_d[l_ac].xmdc058,g_xmdc_d[l_ac].xmdc059,g_xmdc_d[l_ac].xmdc060, 
                      g_xmdc_d[l_ac].xmdc061,g_xmdc2_d[l_ac].xmdcseq,g_xmdc2_d[l_ac].xmdc028,g_xmdc2_d[l_ac].xmdc029, 
                      g_xmdc2_d[l_ac].xmdc030,g_xmdc2_d[l_ac].xmdc057,g_xmdc2_d[l_ac].xmdc025,g_xmdc2_d[l_ac].xmdc026, 
                      g_xmdc2_d[l_ac].xmdc031,g_xmdc2_d[l_ac].xmdc032,g_xmdc2_d[l_ac].xmdc033,g_xmdc2_d[l_ac].xmdc003, 
                      g_xmdc2_d[l_ac].xmdc054,g_xmdc2_d[l_ac].xmdc036,g_xmdc2_d[l_ac].xmdc037,g_xmdc2_d[l_ac].xmdc038, 
                      g_xmdc2_d[l_ac].xmdc039,g_xmdc2_d[l_ac].xmdc035,g_xmdc2_d[l_ac].xmdc040,g_xmdc2_d[l_ac].xmdc041, 
                      g_xmdc2_d[l_ac].xmdc042,g_xmdc2_d[l_ac].xmdc043,g_xmdc2_d[l_ac].xmdc044
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_xmdc_d_t.xmdcseq 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_xmdc_d_mask_o[l_ac].* =  g_xmdc_d[l_ac].*
                  CALL axmt500_xmdc_t_mask()
                  LET g_xmdc_d_mask_n[l_ac].* =  g_xmdc_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL axmt500_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmdc_d[l_ac].* TO NULL 
            INITIALIZE g_xmdc_d_t.* TO NULL 
            INITIALIZE g_xmdc_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_xmdc_d[l_ac].xmdc019 = "1"
      LET g_xmdc_d[l_ac].xmdc009 = "0"
      LET g_xmdc_d[l_ac].xmdc024 = "N"
      LET g_xmdc_d[l_ac].xmdc045 = "1"
      LET g_xmdc_d[l_ac].xmdc011 = "0"
      LET g_xmdc_d[l_ac].xmdc015 = "0"
      LET g_xmdc_d[l_ac].xmdc046 = "0"
      LET g_xmdc_d[l_ac].xmdc047 = "0"
      LET g_xmdc_d[l_ac].xmdc048 = "0"
      LET g_xmdc_d[l_ac].xmdc020 = "2"
      LET g_xmdc_d[l_ac].xmdc021 = "N"
      LET g_xmdc_d[l_ac].xmdc022 = "Y"
      LET g_xmdc_d[l_ac].xmdc052 = "Y"
      LET g_xmdc_d[l_ac].xmdc058 = "0"
      LET g_xmdc_d[l_ac].xmdc059 = "0"
      LET g_xmdc_d[l_ac].xmdc060 = "0"
      LET g_xmdc_d[l_ac].xmdc061 = "0"
 
            #add-point:modify段before備份
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_xmdc_d_t.* = g_xmdc_d[l_ac].*     #新輸入資料
            LET g_xmdc_d_o.* = g_xmdc_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axmt500_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL axmt500_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmdc_d[li_reproduce_target].* = g_xmdc_d[li_reproduce].*
               LET g_xmdc2_d[li_reproduce_target].* = g_xmdc2_d[li_reproduce].*
 
               LET g_xmdc_d[li_reproduce_target].xmdcseq = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM xmdc_t 
             WHERE xmdcent = g_enterprise AND xmdcdocno = g_xmda_m.xmdadocno
 
               AND xmdcseq = g_xmdc_d[l_ac].xmdcseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmda_m.xmdadocno
               LET gs_keys[2] = g_xmdc_d[g_detail_idx].xmdcseq
               CALL axmt500_insert_b('xmdc_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_xmdc_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmdc_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axmt500_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d)
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_xmda_m.xmdadocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_xmdc_d_t.xmdcseq
 
            
               #刪除同層單身
               IF NOT axmt500_delete_b('xmdc_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt500_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT axmt500_key_delete_b(gs_keys,'xmdc_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt500_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE axmt500_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_xmdc_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_xmdc_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc027
            
            #add-point:AFTER FIELD xmdc027
            {<point name="input.a.page1.xmdc027" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc027
            #add-point:BEFORE FIELD xmdc027
            {<point name="input.b.page1.xmdc027" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc027
            #add-point:ON CHANGE xmdc027
            {<point name="input.g.page1.xmdc027" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_pmao009
            #add-point:BEFORE FIELD l_pmao009
            {<point name="input.b.page1.l_pmao009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_pmao009
            
            #add-point:AFTER FIELD l_pmao009
            {<point name="input.a.page1.l_pmao009" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_pmao009
            #add-point:ON CHANGE l_pmao009
            {<point name="input.g.page1.l_pmao009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_pmao010
            #add-point:BEFORE FIELD l_pmao010
            {<point name="input.b.page1.l_pmao010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_pmao010
            
            #add-point:AFTER FIELD l_pmao010
            {<point name="input.a.page1.l_pmao010" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_pmao010
            #add-point:ON CHANGE l_pmao010
            {<point name="input.g.page1.l_pmao010" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc001
            
            #add-point:AFTER FIELD xmdc001
            {<point name="input.a.page1.xmdc001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc001
            #add-point:BEFORE FIELD xmdc001
            {<point name="input.b.page1.xmdc001" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc001
            #add-point:ON CHANGE xmdc001
            {<point name="input.g.page1.xmdc001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc019
            #add-point:BEFORE FIELD xmdc019
            {<point name="input.b.page1.xmdc019" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc019
            
            #add-point:AFTER FIELD xmdc019
            {<point name="input.a.page1.xmdc019" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc019
            #add-point:ON CHANGE xmdc019
            {<point name="input.g.page1.xmdc019" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc002
            
            #add-point:AFTER FIELD xmdc002
            {<point name="input.a.page1.xmdc002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc002
            #add-point:BEFORE FIELD xmdc002
            {<point name="input.b.page1.xmdc002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc002
            #add-point:ON CHANGE xmdc002
            {<point name="input.g.page1.xmdc002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc002_desc
            #add-point:BEFORE FIELD xmdc002_desc
            {<point name="input.b.page1.xmdc002_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc002_desc
            
            #add-point:AFTER FIELD xmdc002_desc
            {<point name="input.a.page1.xmdc002_desc" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc002_desc
            #add-point:ON CHANGE xmdc002_desc
            {<point name="input.g.page1.xmdc002_desc" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc006
            
            #add-point:AFTER FIELD xmdc006
            {<point name="input.a.page1.xmdc006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc006
            #add-point:BEFORE FIELD xmdc006
            {<point name="input.b.page1.xmdc006" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc006
            #add-point:ON CHANGE xmdc006
            {<point name="input.g.page1.xmdc006" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc007
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdc_d[l_ac].xmdc007,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD xmdc007
            END IF 
 
 
            #add-point:AFTER FIELD xmdc007
            {<point name="input.a.page1.xmdc007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc007
            #add-point:BEFORE FIELD xmdc007
            {<point name="input.b.page1.xmdc007" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc007
            #add-point:ON CHANGE xmdc007
            {<point name="input.g.page1.xmdc007" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc009
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdc_d[l_ac].xmdc009,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD xmdc009
            END IF 
 
 
            #add-point:AFTER FIELD xmdc009
            {<point name="input.a.page1.xmdc009" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc009
            #add-point:BEFORE FIELD xmdc009
            {<point name="input.b.page1.xmdc009" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc009
            #add-point:ON CHANGE xmdc009
            {<point name="input.g.page1.xmdc009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc024
            #add-point:BEFORE FIELD xmdc024
            {<point name="input.b.page1.xmdc024" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc024
            
            #add-point:AFTER FIELD xmdc024
            {<point name="input.a.page1.xmdc024" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc024
            #add-point:ON CHANGE xmdc024
            {<point name="input.g.page1.xmdc024" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc012
            #add-point:BEFORE FIELD xmdc012
            {<point name="input.b.page1.xmdc012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc012
            
            #add-point:AFTER FIELD xmdc012
            {<point name="input.a.page1.xmdc012" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc012
            #add-point:ON CHANGE xmdc012
            {<point name="input.g.page1.xmdc012" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc013
            #add-point:BEFORE FIELD xmdc013
            {<point name="input.b.page1.xmdc013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc013
            
            #add-point:AFTER FIELD xmdc013
            {<point name="input.a.page1.xmdc013" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc013
            #add-point:ON CHANGE xmdc013
            {<point name="input.g.page1.xmdc013" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc045
            #add-point:BEFORE FIELD xmdc045
            {<point name="input.b.page1.xmdc045" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc045
            
            #add-point:AFTER FIELD xmdc045
            {<point name="input.a.page1.xmdc045" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc045
            #add-point:ON CHANGE xmdc045
            {<point name="input.g.page1.xmdc045" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc016
            
            #add-point:AFTER FIELD xmdc016
            {<point name="input.a.page1.xmdc016" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc016
            #add-point:BEFORE FIELD xmdc016
            {<point name="input.b.page1.xmdc016" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc016
            #add-point:ON CHANGE xmdc016
            {<point name="input.g.page1.xmdc016" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc010
            
            #add-point:AFTER FIELD xmdc010
            {<point name="input.a.page1.xmdc010" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc010
            #add-point:BEFORE FIELD xmdc010
            {<point name="input.b.page1.xmdc010" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc010
            #add-point:ON CHANGE xmdc010
            {<point name="input.g.page1.xmdc010" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc011
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdc_d[l_ac].xmdc011,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD xmdc011
            END IF 
 
 
            #add-point:AFTER FIELD xmdc011
            {<point name="input.a.page1.xmdc011" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc011
            #add-point:BEFORE FIELD xmdc011
            {<point name="input.b.page1.xmdc011" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc011
            #add-point:ON CHANGE xmdc011
            {<point name="input.g.page1.xmdc011" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc015
            #add-point:BEFORE FIELD xmdc015
            {<point name="input.b.page1.xmdc015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc015
            
            #add-point:AFTER FIELD xmdc015
            {<point name="input.a.page1.xmdc015" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc015
            #add-point:ON CHANGE xmdc015
            {<point name="input.g.page1.xmdc015" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc023
            
            #add-point:AFTER FIELD xmdc023
            {<point name="input.a.page1.xmdc023" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc023
            #add-point:BEFORE FIELD xmdc023
            {<point name="input.b.page1.xmdc023" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc023
            #add-point:ON CHANGE xmdc023
            {<point name="input.g.page1.xmdc023" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc020
            #add-point:BEFORE FIELD xmdc020
            {<point name="input.b.page1.xmdc020" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc020
            
            #add-point:AFTER FIELD xmdc020
            {<point name="input.a.page1.xmdc020" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc020
            #add-point:ON CHANGE xmdc020
            {<point name="input.g.page1.xmdc020" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc021
            #add-point:BEFORE FIELD xmdc021
            {<point name="input.b.page1.xmdc021" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc021
            
            #add-point:AFTER FIELD xmdc021
            {<point name="input.a.page1.xmdc021" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc021
            #add-point:ON CHANGE xmdc021
            {<point name="input.g.page1.xmdc021" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc022
            #add-point:BEFORE FIELD xmdc022
            {<point name="input.b.page1.xmdc022" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc022
            
            #add-point:AFTER FIELD xmdc022
            {<point name="input.a.page1.xmdc022" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc022
            #add-point:ON CHANGE xmdc022
            {<point name="input.g.page1.xmdc022" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdcunit
            
            #add-point:AFTER FIELD xmdcunit
            {<point name="input.a.page1.xmdcunit" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdcunit
            #add-point:BEFORE FIELD xmdcunit
            {<point name="input.b.page1.xmdcunit" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdcunit
            #add-point:ON CHANGE xmdcunit
            {<point name="input.g.page1.xmdcunit" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc052
            #add-point:BEFORE FIELD xmdc052
            {<point name="input.b.page1.xmdc052" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc052
            
            #add-point:AFTER FIELD xmdc052
            {<point name="input.a.page1.xmdc052" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc052
            #add-point:ON CHANGE xmdc052
            {<point name="input.g.page1.xmdc052" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc049
            
            #add-point:AFTER FIELD xmdc049
            {<point name="input.a.page1.xmdc049" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc049
            #add-point:BEFORE FIELD xmdc049
            {<point name="input.b.page1.xmdc049" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc049
            #add-point:ON CHANGE xmdc049
            {<point name="input.g.page1.xmdc049" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc050
            #add-point:BEFORE FIELD xmdc050
            {<point name="input.b.page1.xmdc050" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc050
            
            #add-point:AFTER FIELD xmdc050
            {<point name="input.a.page1.xmdc050" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc050
            #add-point:ON CHANGE xmdc050
            {<point name="input.g.page1.xmdc050" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.xmdc027
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc027
            #add-point:ON ACTION controlp INFIELD xmdc027
            {<point name="input.c.page1.xmdc027" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_pmao009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_pmao009
            #add-point:ON ACTION controlp INFIELD l_pmao009
            {<point name="input.c.page1.l_pmao009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_pmao010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_pmao010
            #add-point:ON ACTION controlp INFIELD l_pmao010
            {<point name="input.c.page1.l_pmao010" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdc001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc001
            #add-point:ON ACTION controlp INFIELD xmdc001
            {<point name="input.c.page1.xmdc001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdc019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc019
            #add-point:ON ACTION controlp INFIELD xmdc019
            {<point name="input.c.page1.xmdc019" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdc002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc002
            #add-point:ON ACTION controlp INFIELD xmdc002
            {<point name="input.c.page1.xmdc002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdc002_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc002_desc
            #add-point:ON ACTION controlp INFIELD xmdc002_desc
            {<point name="input.c.page1.xmdc002_desc" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdc006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc006
            #add-point:ON ACTION controlp INFIELD xmdc006
            {<point name="input.c.page1.xmdc006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdc007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc007
            #add-point:ON ACTION controlp INFIELD xmdc007
            {<point name="input.c.page1.xmdc007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdc009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc009
            #add-point:ON ACTION controlp INFIELD xmdc009
            {<point name="input.c.page1.xmdc009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdc024
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc024
            #add-point:ON ACTION controlp INFIELD xmdc024
            {<point name="input.c.page1.xmdc024" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdc012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc012
            #add-point:ON ACTION controlp INFIELD xmdc012
            {<point name="input.c.page1.xmdc012" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdc013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc013
            #add-point:ON ACTION controlp INFIELD xmdc013
            {<point name="input.c.page1.xmdc013" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdc045
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc045
            #add-point:ON ACTION controlp INFIELD xmdc045
            {<point name="input.c.page1.xmdc045" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdc016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc016
            #add-point:ON ACTION controlp INFIELD xmdc016
            {<point name="input.c.page1.xmdc016" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdc010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc010
            #add-point:ON ACTION controlp INFIELD xmdc010
            {<point name="input.c.page1.xmdc010" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdc011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc011
            #add-point:ON ACTION controlp INFIELD xmdc011
            {<point name="input.c.page1.xmdc011" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdc015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc015
            #add-point:ON ACTION controlp INFIELD xmdc015
            {<point name="input.c.page1.xmdc015" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdc023
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc023
            #add-point:ON ACTION controlp INFIELD xmdc023
            {<point name="input.c.page1.xmdc023" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdc020
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc020
            #add-point:ON ACTION controlp INFIELD xmdc020
            {<point name="input.c.page1.xmdc020" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdc021
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc021
            #add-point:ON ACTION controlp INFIELD xmdc021
            {<point name="input.c.page1.xmdc021" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdc022
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc022
            #add-point:ON ACTION controlp INFIELD xmdc022
            {<point name="input.c.page1.xmdc022" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdcunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdcunit
            #add-point:ON ACTION controlp INFIELD xmdcunit
            {<point name="input.c.page1.xmdcunit" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdc052
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc052
            #add-point:ON ACTION controlp INFIELD xmdc052
            {<point name="input.c.page1.xmdc052" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdc049
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc049
            #add-point:ON ACTION controlp INFIELD xmdc049
            {<point name="input.c.page1.xmdc049" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdc050
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc050
            #add-point:ON ACTION controlp INFIELD xmdc050
            {<point name="input.c.page1.xmdc050" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_xmdc_d[l_ac].* = g_xmdc_d_t.*
               CLOSE axmt500_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_xmdc_d[l_ac].xmdcseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_xmdc_d[l_ac].* = g_xmdc_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL axmt500_xmdc_t_mask_restore('restore_mask_o')
      
               UPDATE xmdc_t SET (xmdcdocno,xmdcseq,xmdc027,xmdc001,xmdc019,xmdc002,xmdc006,xmdc007, 
                   xmdc008,xmdc009,xmdc024,xmdc012,xmdc013,xmdc045,xmdc016,xmdc017,xmdc010,xmdc011,xmdc015, 
                   xmdc046,xmdc047,xmdc048,xmdc023,xmdc020,xmdc021,xmdc022,xmdcunit,xmdcorga,xmdc052, 
                   xmdc049,xmdc053,xmdc050,xmdcsite,xmdc058,xmdc059,xmdc060,xmdc061,xmdc028,xmdc029, 
                   xmdc030,xmdc057,xmdc025,xmdc026,xmdc031,xmdc032,xmdc033,xmdc003,xmdc054,xmdc036,xmdc037, 
                   xmdc038,xmdc039,xmdc035,xmdc040,xmdc041,xmdc042,xmdc043,xmdc044) = (g_xmda_m.xmdadocno, 
                   g_xmdc_d[l_ac].xmdcseq,g_xmdc_d[l_ac].xmdc027,g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc019, 
                   g_xmdc_d[l_ac].xmdc002,g_xmdc_d[l_ac].xmdc006,g_xmdc_d[l_ac].xmdc007,g_xmdc_d[l_ac].xmdc008, 
                   g_xmdc_d[l_ac].xmdc009,g_xmdc_d[l_ac].xmdc024,g_xmdc_d[l_ac].xmdc012,g_xmdc_d[l_ac].xmdc013, 
                   g_xmdc_d[l_ac].xmdc045,g_xmdc_d[l_ac].xmdc016,g_xmdc_d[l_ac].xmdc017,g_xmdc_d[l_ac].xmdc010, 
                   g_xmdc_d[l_ac].xmdc011,g_xmdc_d[l_ac].xmdc015,g_xmdc_d[l_ac].xmdc046,g_xmdc_d[l_ac].xmdc047, 
                   g_xmdc_d[l_ac].xmdc048,g_xmdc_d[l_ac].xmdc023,g_xmdc_d[l_ac].xmdc020,g_xmdc_d[l_ac].xmdc021, 
                   g_xmdc_d[l_ac].xmdc022,g_xmdc_d[l_ac].xmdcunit,g_xmdc_d[l_ac].xmdcorga,g_xmdc_d[l_ac].xmdc052, 
                   g_xmdc_d[l_ac].xmdc049,g_xmdc_d[l_ac].xmdc053,g_xmdc_d[l_ac].xmdc050,g_xmdc_d[l_ac].xmdcsite, 
                   g_xmdc_d[l_ac].xmdc058,g_xmdc_d[l_ac].xmdc059,g_xmdc_d[l_ac].xmdc060,g_xmdc_d[l_ac].xmdc061, 
                   g_xmdc2_d[l_ac].xmdc028,g_xmdc2_d[l_ac].xmdc029,g_xmdc2_d[l_ac].xmdc030,g_xmdc2_d[l_ac].xmdc057, 
                   g_xmdc2_d[l_ac].xmdc025,g_xmdc2_d[l_ac].xmdc026,g_xmdc2_d[l_ac].xmdc031,g_xmdc2_d[l_ac].xmdc032, 
                   g_xmdc2_d[l_ac].xmdc033,g_xmdc2_d[l_ac].xmdc003,g_xmdc2_d[l_ac].xmdc054,g_xmdc2_d[l_ac].xmdc036, 
                   g_xmdc2_d[l_ac].xmdc037,g_xmdc2_d[l_ac].xmdc038,g_xmdc2_d[l_ac].xmdc039,g_xmdc2_d[l_ac].xmdc035, 
                   g_xmdc2_d[l_ac].xmdc040,g_xmdc2_d[l_ac].xmdc041,g_xmdc2_d[l_ac].xmdc042,g_xmdc2_d[l_ac].xmdc043, 
                   g_xmdc2_d[l_ac].xmdc044)
                WHERE xmdcent = g_enterprise AND xmdcdocno = g_xmda_m.xmdadocno 
 
                  AND xmdcseq = g_xmdc_d_t.xmdcseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmdc_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_xmdc_d[l_ac].* = g_xmdc_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmdc_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()                   
                     CALL s_transaction_end('N','0')
                     LET g_xmdc_d[l_ac].* = g_xmdc_d_t.*  
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmda_m.xmdadocno
               LET gs_keys_bak[1] = g_xmdadocno_t
               LET gs_keys[2] = g_xmdc_d[g_detail_idx].xmdcseq
               LET gs_keys_bak[2] = g_xmdc_d_t.xmdcseq
               CALL axmt500_update_b('xmdc_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL axmt500_xmdc_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_xmdc_d[g_detail_idx].xmdcseq = g_xmdc_d_t.xmdcseq 
 
                  ) THEN
                  LET gs_keys[01] = g_xmda_m.xmdadocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_xmdc_d_t.xmdcseq
 
                  CALL axmt500_key_update_b(gs_keys,'xmdc_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_xmda_m),util.JSON.stringify(g_xmdc_d_t)
               LET g_log2 = util.JSON.stringify(g_xmda_m),util.JSON.stringify(g_xmdc_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL axmt500_unlock_b("xmdc_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_xmdc_d[li_reproduce_target].* = g_xmdc_d[li_reproduce].*
               LET g_xmdc2_d[li_reproduce_target].* = g_xmdc2_d[li_reproduce].*
 
               LET g_xmdc_d[li_reproduce_target].xmdcseq = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_xmdc_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_xmdc_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_xmdc2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = FALSE, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = FALSE,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body2.before_input2"/>}
            #end add-point
            
            CALL axmt500_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_xmdc2_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmdc2_d[l_ac].* TO NULL 
            INITIALIZE g_xmdc2_d_t.* TO NULL 
            INITIALIZE g_xmdc2_d_o.* TO NULL 
            #公用欄位給值(單身2)
            
            #自定義預設值(單身2)
                  LET g_xmdc2_d[l_ac].xmdc032 = "1"
      LET g_xmdc2_d[l_ac].xmdc035 = "1"
      LET g_xmdc2_d[l_ac].xmdc040 = "1"
      LET g_xmdc2_d[l_ac].xmdc043 = "0"
 
            #add-point:modify段before備份
            {<point name="input.body2.insert.before_bak"/>}
            #end add-point
            LET g_xmdc2_d_t.* = g_xmdc2_d[l_ac].*     #新輸入資料
            LET g_xmdc2_d_o.* = g_xmdc2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axmt500_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL axmt500_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmdc_d[li_reproduce_target].* = g_xmdc_d[li_reproduce].*
               LET g_xmdc2_d[li_reproduce_target].* = g_xmdc2_d[li_reproduce].*
 
               LET g_xmdc2_d[li_reproduce_target].xmdcseq = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body2.before_insert"/>}
            #end add-point  
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 2
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN axmt500_cl USING g_enterprise,g_xmda_m.xmdadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axmt500_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE axmt500_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_xmdc2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xmdc2_d[l_ac].xmdcseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_xmdc2_d_t.* = g_xmdc2_d[l_ac].*  #BACKUP
               LET g_xmdc2_d_o.* = g_xmdc2_d[l_ac].*  #BACKUP
               CALL axmt500_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL axmt500_set_no_entry_b(l_cmd)
               IF NOT axmt500_lock_b("xmdc_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axmt500_bcl INTO g_xmdc_d[l_ac].xmdcseq,g_xmdc_d[l_ac].xmdc027,g_xmdc_d[l_ac].xmdc001, 
                      g_xmdc_d[l_ac].xmdc019,g_xmdc_d[l_ac].xmdc002,g_xmdc_d[l_ac].xmdc006,g_xmdc_d[l_ac].xmdc007, 
                      g_xmdc_d[l_ac].xmdc008,g_xmdc_d[l_ac].xmdc009,g_xmdc_d[l_ac].xmdc024,g_xmdc_d[l_ac].xmdc012, 
                      g_xmdc_d[l_ac].xmdc013,g_xmdc_d[l_ac].xmdc045,g_xmdc_d[l_ac].xmdc016,g_xmdc_d[l_ac].xmdc017, 
                      g_xmdc_d[l_ac].xmdc010,g_xmdc_d[l_ac].xmdc011,g_xmdc_d[l_ac].xmdc015,g_xmdc_d[l_ac].xmdc046, 
                      g_xmdc_d[l_ac].xmdc047,g_xmdc_d[l_ac].xmdc048,g_xmdc_d[l_ac].xmdc023,g_xmdc_d[l_ac].xmdc020, 
                      g_xmdc_d[l_ac].xmdc021,g_xmdc_d[l_ac].xmdc022,g_xmdc_d[l_ac].xmdcunit,g_xmdc_d[l_ac].xmdcorga, 
                      g_xmdc_d[l_ac].xmdc052,g_xmdc_d[l_ac].xmdc049,g_xmdc_d[l_ac].xmdc053,g_xmdc_d[l_ac].xmdc050, 
                      g_xmdc_d[l_ac].xmdcsite,g_xmdc_d[l_ac].xmdc058,g_xmdc_d[l_ac].xmdc059,g_xmdc_d[l_ac].xmdc060, 
                      g_xmdc_d[l_ac].xmdc061,g_xmdc2_d[l_ac].xmdcseq,g_xmdc2_d[l_ac].xmdc028,g_xmdc2_d[l_ac].xmdc029, 
                      g_xmdc2_d[l_ac].xmdc030,g_xmdc2_d[l_ac].xmdc057,g_xmdc2_d[l_ac].xmdc025,g_xmdc2_d[l_ac].xmdc026, 
                      g_xmdc2_d[l_ac].xmdc031,g_xmdc2_d[l_ac].xmdc032,g_xmdc2_d[l_ac].xmdc033,g_xmdc2_d[l_ac].xmdc003, 
                      g_xmdc2_d[l_ac].xmdc054,g_xmdc2_d[l_ac].xmdc036,g_xmdc2_d[l_ac].xmdc037,g_xmdc2_d[l_ac].xmdc038, 
                      g_xmdc2_d[l_ac].xmdc039,g_xmdc2_d[l_ac].xmdc035,g_xmdc2_d[l_ac].xmdc040,g_xmdc2_d[l_ac].xmdc041, 
                      g_xmdc2_d[l_ac].xmdc042,g_xmdc2_d[l_ac].xmdc043,g_xmdc2_d[l_ac].xmdc044
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_xmdc2_d_mask_o[l_ac].* =  g_xmdc2_d[l_ac].*
                  CALL axmt500_xmdc_t_mask()
                  LET g_xmdc2_d_mask_n[l_ac].* =  g_xmdc2_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL axmt500_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body2.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_xmda_m.xmdadocno
               LET gs_keys[gs_keys.getLength()+1] = g_xmdc2_d_t.xmdcseq
            
               #刪除同層單身
               IF NOT axmt500_delete_b('xmdc_t',gs_keys,"'2'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt500_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT axmt500_key_delete_b(gs_keys,'xmdc_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt500_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身2刪除中
               {<point name="input.body2.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE axmt500_bcl
               LET g_rec_b = g_rec_b-1
               
               #add-point:單身2刪除後
               {<point name="input.body2.a_delete"/>}
               #end add-point
               LET l_count = g_xmdc_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body2.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_xmdc2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM xmdc_t 
             WHERE xmdcent = g_enterprise AND xmdcdocno = g_xmda_m.xmdadocno
               AND xmdcseq = g_xmdc2_d[l_ac].xmdcseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmda_m.xmdadocno
               LET gs_keys[2] = g_xmdc2_d[g_detail_idx].xmdcseq
               CALL axmt500_insert_b('xmdc_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_xmdc_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmdc_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axmt500_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_xmdc2_d[l_ac].* = g_xmdc2_d_t.*
               CLOSE axmt500_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_xmdc2_d[l_ac].* = g_xmdc2_d_t.*
            ELSE
               #add-point:單身page2修改前
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               #將遮罩欄位還原
               CALL axmt500_xmdc_t_mask_restore('restore_mask_o')
                              
               UPDATE xmdc_t SET (xmdcdocno,xmdcseq,xmdc027,xmdc001,xmdc019,xmdc002,xmdc006,xmdc007, 
                   xmdc008,xmdc009,xmdc024,xmdc012,xmdc013,xmdc045,xmdc016,xmdc017,xmdc010,xmdc011,xmdc015, 
                   xmdc046,xmdc047,xmdc048,xmdc023,xmdc020,xmdc021,xmdc022,xmdcunit,xmdcorga,xmdc052, 
                   xmdc049,xmdc053,xmdc050,xmdcsite,xmdc058,xmdc059,xmdc060,xmdc061,xmdc028,xmdc029, 
                   xmdc030,xmdc057,xmdc025,xmdc026,xmdc031,xmdc032,xmdc033,xmdc003,xmdc054,xmdc036,xmdc037, 
                   xmdc038,xmdc039,xmdc035,xmdc040,xmdc041,xmdc042,xmdc043,xmdc044) = (g_xmda_m.xmdadocno, 
                   g_xmdc_d[l_ac].xmdcseq,g_xmdc_d[l_ac].xmdc027,g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc019, 
                   g_xmdc_d[l_ac].xmdc002,g_xmdc_d[l_ac].xmdc006,g_xmdc_d[l_ac].xmdc007,g_xmdc_d[l_ac].xmdc008, 
                   g_xmdc_d[l_ac].xmdc009,g_xmdc_d[l_ac].xmdc024,g_xmdc_d[l_ac].xmdc012,g_xmdc_d[l_ac].xmdc013, 
                   g_xmdc_d[l_ac].xmdc045,g_xmdc_d[l_ac].xmdc016,g_xmdc_d[l_ac].xmdc017,g_xmdc_d[l_ac].xmdc010, 
                   g_xmdc_d[l_ac].xmdc011,g_xmdc_d[l_ac].xmdc015,g_xmdc_d[l_ac].xmdc046,g_xmdc_d[l_ac].xmdc047, 
                   g_xmdc_d[l_ac].xmdc048,g_xmdc_d[l_ac].xmdc023,g_xmdc_d[l_ac].xmdc020,g_xmdc_d[l_ac].xmdc021, 
                   g_xmdc_d[l_ac].xmdc022,g_xmdc_d[l_ac].xmdcunit,g_xmdc_d[l_ac].xmdcorga,g_xmdc_d[l_ac].xmdc052, 
                   g_xmdc_d[l_ac].xmdc049,g_xmdc_d[l_ac].xmdc053,g_xmdc_d[l_ac].xmdc050,g_xmdc_d[l_ac].xmdcsite, 
                   g_xmdc_d[l_ac].xmdc058,g_xmdc_d[l_ac].xmdc059,g_xmdc_d[l_ac].xmdc060,g_xmdc_d[l_ac].xmdc061, 
                   g_xmdc2_d[l_ac].xmdc028,g_xmdc2_d[l_ac].xmdc029,g_xmdc2_d[l_ac].xmdc030,g_xmdc2_d[l_ac].xmdc057, 
                   g_xmdc2_d[l_ac].xmdc025,g_xmdc2_d[l_ac].xmdc026,g_xmdc2_d[l_ac].xmdc031,g_xmdc2_d[l_ac].xmdc032, 
                   g_xmdc2_d[l_ac].xmdc033,g_xmdc2_d[l_ac].xmdc003,g_xmdc2_d[l_ac].xmdc054,g_xmdc2_d[l_ac].xmdc036, 
                   g_xmdc2_d[l_ac].xmdc037,g_xmdc2_d[l_ac].xmdc038,g_xmdc2_d[l_ac].xmdc039,g_xmdc2_d[l_ac].xmdc035, 
                   g_xmdc2_d[l_ac].xmdc040,g_xmdc2_d[l_ac].xmdc041,g_xmdc2_d[l_ac].xmdc042,g_xmdc2_d[l_ac].xmdc043, 
                   g_xmdc2_d[l_ac].xmdc044) #自訂欄位頁簽
                WHERE xmdcent = g_enterprise AND xmdcdocno = g_xmda_m.xmdadocno
                  AND xmdcseq = g_xmdc2_d_t.xmdcseq #項次 
                  
               #add-point:單身page2修改中
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmdc_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_xmdc2_d[l_ac].* = g_xmdc2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmdc_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_xmdc2_d[l_ac].* = g_xmdc2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmda_m.xmdadocno
               LET gs_keys_bak[1] = g_xmdadocno_t
               LET gs_keys[2] = g_xmdc2_d[g_detail_idx].xmdcseq
               LET gs_keys_bak[2] = g_xmdc2_d_t.xmdcseq
               CALL axmt500_update_b('xmdc_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL axmt500_xmdc_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_xmdc2_d[g_detail_idx].xmdcseq = g_xmdc2_d_t.xmdcseq 
                  ) THEN
                  LET gs_keys[01] = g_xmda_m.xmdadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_xmdc2_d_t.xmdcseq
                  CALL axmt500_key_update_b(gs_keys,'xmdc_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_xmda_m),util.JSON.stringify(g_xmdc2_d_t)
               LET g_log2 = util.JSON.stringify(g_xmda_m),util.JSON.stringify(g_xmdc2_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD imaa005
            
            #add-point:AFTER FIELD imaa005
            {<point name="input.a.page2.imaa005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD imaa005
            #add-point:BEFORE FIELD imaa005
            {<point name="input.b.page2.imaa005" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE imaa005
            #add-point:ON CHANGE imaa005
            {<point name="input.g.page2.imaa005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD imaa005_desc
            #add-point:BEFORE FIELD imaa005_desc
            {<point name="input.b.page2.imaa005_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD imaa005_desc
            
            #add-point:AFTER FIELD imaa005_desc
            {<point name="input.a.page2.imaa005_desc" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE imaa005_desc
            #add-point:ON CHANGE imaa005_desc
            {<point name="input.g.page2.imaa005_desc" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_pmao0092
            #add-point:BEFORE FIELD l_pmao0092
            {<point name="input.b.page2.l_pmao0092" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_pmao0092
            
            #add-point:AFTER FIELD l_pmao0092
            {<point name="input.a.page2.l_pmao0092" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_pmao0092
            #add-point:ON CHANGE l_pmao0092
            {<point name="input.g.page2.l_pmao0092" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_pmao0102
            #add-point:BEFORE FIELD l_pmao0102
            {<point name="input.b.page2.l_pmao0102" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_pmao0102
            
            #add-point:AFTER FIELD l_pmao0102
            {<point name="input.a.page2.l_pmao0102" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_pmao0102
            #add-point:ON CHANGE l_pmao0102
            {<point name="input.g.page2.l_pmao0102" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc028
            
            #add-point:AFTER FIELD xmdc028
            {<point name="input.a.page2.xmdc028" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc028
            #add-point:BEFORE FIELD xmdc028
            {<point name="input.b.page2.xmdc028" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc028
            #add-point:ON CHANGE xmdc028
            {<point name="input.g.page2.xmdc028" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc029
            
            #add-point:AFTER FIELD xmdc029
            {<point name="input.a.page2.xmdc029" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc029
            #add-point:BEFORE FIELD xmdc029
            {<point name="input.b.page2.xmdc029" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc029
            #add-point:ON CHANGE xmdc029
            {<point name="input.g.page2.xmdc029" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc030
            #add-point:BEFORE FIELD xmdc030
            {<point name="input.b.page2.xmdc030" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc030
            
            #add-point:AFTER FIELD xmdc030
            {<point name="input.a.page2.xmdc030" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc030
            #add-point:ON CHANGE xmdc030
            {<point name="input.g.page2.xmdc030" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc057
            #add-point:BEFORE FIELD xmdc057
            {<point name="input.b.page2.xmdc057" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc057
            
            #add-point:AFTER FIELD xmdc057
            {<point name="input.a.page2.xmdc057" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc057
            #add-point:ON CHANGE xmdc057
            {<point name="input.g.page2.xmdc057" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc025
            
            #add-point:AFTER FIELD xmdc025
            {<point name="input.a.page2.xmdc025" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc025
            #add-point:BEFORE FIELD xmdc025
            {<point name="input.b.page2.xmdc025" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc025
            #add-point:ON CHANGE xmdc025
            {<point name="input.g.page2.xmdc025" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc026
            
            #add-point:AFTER FIELD xmdc026
            {<point name="input.a.page2.xmdc026" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc026
            #add-point:BEFORE FIELD xmdc026
            {<point name="input.b.page2.xmdc026" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc026
            #add-point:ON CHANGE xmdc026
            {<point name="input.g.page2.xmdc026" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc031
            
            #add-point:AFTER FIELD xmdc031
            {<point name="input.a.page2.xmdc031" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc031
            #add-point:BEFORE FIELD xmdc031
            {<point name="input.b.page2.xmdc031" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc031
            #add-point:ON CHANGE xmdc031
            {<point name="input.g.page2.xmdc031" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc032
            #add-point:BEFORE FIELD xmdc032
            {<point name="input.b.page2.xmdc032" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc032
            
            #add-point:AFTER FIELD xmdc032
            {<point name="input.a.page2.xmdc032" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc032
            #add-point:ON CHANGE xmdc032
            {<point name="input.g.page2.xmdc032" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc033
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdc2_d[l_ac].xmdc033,"0.000","1","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD xmdc033
            END IF 
 
 
            #add-point:AFTER FIELD xmdc033
            {<point name="input.a.page2.xmdc033" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc033
            #add-point:BEFORE FIELD xmdc033
            {<point name="input.b.page2.xmdc033" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc033
            #add-point:ON CHANGE xmdc033
            {<point name="input.g.page2.xmdc033" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc003
            
            #add-point:AFTER FIELD xmdc003
            {<point name="input.a.page2.xmdc003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc003
            #add-point:BEFORE FIELD xmdc003
            {<point name="input.b.page2.xmdc003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc003
            #add-point:ON CHANGE xmdc003
            {<point name="input.g.page2.xmdc003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc054
            #add-point:BEFORE FIELD xmdc054
            {<point name="input.b.page2.xmdc054" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc054
            
            #add-point:AFTER FIELD xmdc054
            {<point name="input.a.page2.xmdc054" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc054
            #add-point:ON CHANGE xmdc054
            {<point name="input.g.page2.xmdc054" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc036
            
            #add-point:AFTER FIELD xmdc036
            {<point name="input.a.page2.xmdc036" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc036
            #add-point:BEFORE FIELD xmdc036
            {<point name="input.b.page2.xmdc036" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc036
            #add-point:ON CHANGE xmdc036
            {<point name="input.g.page2.xmdc036" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc037
            
            #add-point:AFTER FIELD xmdc037
            {<point name="input.a.page2.xmdc037" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc037
            #add-point:BEFORE FIELD xmdc037
            {<point name="input.b.page2.xmdc037" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc037
            #add-point:ON CHANGE xmdc037
            {<point name="input.g.page2.xmdc037" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc038
            
            #add-point:AFTER FIELD xmdc038
            {<point name="input.a.page2.xmdc038" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc038
            #add-point:BEFORE FIELD xmdc038
            {<point name="input.b.page2.xmdc038" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc038
            #add-point:ON CHANGE xmdc038
            {<point name="input.g.page2.xmdc038" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdc039
            #add-point:BEFORE FIELD xmdc039
            {<point name="input.b.page2.xmdc039" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdc039
            
            #add-point:AFTER FIELD xmdc039
            {<point name="input.a.page2.xmdc039" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdc039
            #add-point:ON CHANGE xmdc039
            {<point name="input.g.page2.xmdc039" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page2.imaa005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD imaa005
            #add-point:ON ACTION controlp INFIELD imaa005
            {<point name="input.c.page2.imaa005" />}
            #END add-point
 
         #Ctrlp:input.c.page2.imaa005_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD imaa005_desc
            #add-point:ON ACTION controlp INFIELD imaa005_desc
            {<point name="input.c.page2.imaa005_desc" />}
            #END add-point
 
         #Ctrlp:input.c.page2.l_pmao0092
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_pmao0092
            #add-point:ON ACTION controlp INFIELD l_pmao0092
            {<point name="input.c.page2.l_pmao0092" />}
            #END add-point
 
         #Ctrlp:input.c.page2.l_pmao0102
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_pmao0102
            #add-point:ON ACTION controlp INFIELD l_pmao0102
            {<point name="input.c.page2.l_pmao0102" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmdc028
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc028
            #add-point:ON ACTION controlp INFIELD xmdc028
            {<point name="input.c.page2.xmdc028" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmdc029
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc029
            #add-point:ON ACTION controlp INFIELD xmdc029
            {<point name="input.c.page2.xmdc029" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmdc030
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc030
            #add-point:ON ACTION controlp INFIELD xmdc030
            {<point name="input.c.page2.xmdc030" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmdc057
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc057
            #add-point:ON ACTION controlp INFIELD xmdc057
            {<point name="input.c.page2.xmdc057" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmdc025
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc025
            #add-point:ON ACTION controlp INFIELD xmdc025
            {<point name="input.c.page2.xmdc025" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmdc026
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc026
            #add-point:ON ACTION controlp INFIELD xmdc026
            {<point name="input.c.page2.xmdc026" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmdc031
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc031
            #add-point:ON ACTION controlp INFIELD xmdc031
            {<point name="input.c.page2.xmdc031" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmdc032
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc032
            #add-point:ON ACTION controlp INFIELD xmdc032
            {<point name="input.c.page2.xmdc032" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmdc033
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc033
            #add-point:ON ACTION controlp INFIELD xmdc033
            {<point name="input.c.page2.xmdc033" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmdc003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc003
            #add-point:ON ACTION controlp INFIELD xmdc003
            {<point name="input.c.page2.xmdc003" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmdc054
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc054
            #add-point:ON ACTION controlp INFIELD xmdc054
            {<point name="input.c.page2.xmdc054" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmdc036
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc036
            #add-point:ON ACTION controlp INFIELD xmdc036
            {<point name="input.c.page2.xmdc036" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmdc037
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc037
            #add-point:ON ACTION controlp INFIELD xmdc037
            {<point name="input.c.page2.xmdc037" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmdc038
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc038
            #add-point:ON ACTION controlp INFIELD xmdc038
            {<point name="input.c.page2.xmdc038" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmdc039
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdc039
            #add-point:ON ACTION controlp INFIELD xmdc039
            {<point name="input.c.page2.xmdc039" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_xmdc2_d[l_ac].* = g_xmdc2_d_t.*
               END IF
               CLOSE axmt500_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL axmt500_unlock_b("xmdc_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body2.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_xmdc_d[li_reproduce_target].* = g_xmdc_d[li_reproduce].*
               LET g_xmdc2_d[li_reproduce_target].* = g_xmdc2_d[li_reproduce].*
 
               LET g_xmdc2_d[li_reproduce_target].xmdcseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_xmdc2_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_xmdc2_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_xmdc6_d FROM s_detail6.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_6)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body6.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xmdc6_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axmt500_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue(""))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_xmdc6_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body6.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmdc6_d[l_ac].* TO NULL 
            INITIALIZE g_xmdc6_d_t.* TO NULL 
            INITIALIZE g_xmdc6_d_o.* TO NULL 
            #公用欄位給值(單身6)
            
            #自定義預設值(單身6)
            
            #add-point:modify段before備份
            {<point name="input.body6.insert.before_bak"/>}
            #end add-point
            LET g_xmdc6_d_t.* = g_xmdc6_d[l_ac].*     #新輸入資料
            LET g_xmdc6_d_o.* = g_xmdc6_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axmt500_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body6.insert.after_set_entry_b"/>}
            #end add-point
            CALL axmt500_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmdc6_d[li_reproduce_target].* = g_xmdc6_d[li_reproduce].*
 
               LET g_xmdc6_d[li_reproduce_target].xmdsseq = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body6.before_insert"/>}
            #end add-point  
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body6.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 6
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN axmt500_cl USING g_enterprise,g_xmda_m.xmdadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axmt500_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE axmt500_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_xmdc6_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xmdc6_d[l_ac].xmdsseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_xmdc6_d_t.* = g_xmdc6_d[l_ac].*  #BACKUP
               LET g_xmdc6_d_o.* = g_xmdc6_d[l_ac].*  #BACKUP
               CALL axmt500_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body6.after_set_entry_b"/>}
               #end add-point  
               CALL axmt500_set_no_entry_b(l_cmd)
               IF NOT axmt500_lock_b("xmds_t","'6'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axmt500_bcl5 INTO g_xmdc6_d[l_ac].xmdsseq,g_xmdc6_d[l_ac].xmds001,g_xmdc6_d[l_ac].xmds002, 
                      g_xmdc6_d[l_ac].xmds003,g_xmdc6_d[l_ac].xmds004,g_xmdc6_d[l_ac].xmds005,g_xmdc6_d[l_ac].xmds006, 
                      g_xmdc6_d[l_ac].xmdssite
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_xmdc6_d_mask_o[l_ac].* =  g_xmdc6_d[l_ac].*
                  CALL axmt500_xmds_t_mask()
                  LET g_xmdc6_d_mask_n[l_ac].* =  g_xmdc6_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL axmt500_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body6.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body6.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身6刪除前
               {<point name="input.body6.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_xmda_m.xmdadocno
               LET gs_keys[gs_keys.getLength()+1] = g_xmdc6_d_t.xmdsseq
            
               #刪除同層單身
               IF NOT axmt500_delete_b('xmds_t',gs_keys,"'6'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt500_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT axmt500_key_delete_b(gs_keys,'xmds_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt500_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身6刪除中
               {<point name="input.body6.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE axmt500_bcl
               LET g_rec_b = g_rec_b-1
               
               #add-point:單身6刪除後
               {<point name="input.body6.a_delete"/>}
               #end add-point
               LET l_count = g_xmdc_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body6.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_xmdc6_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身6新增前
            {<point name="input.body6.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM xmds_t 
             WHERE xmdsent = g_enterprise AND xmdsdocno = g_xmda_m.xmdadocno
               AND xmdsseq = g_xmdc6_d[l_ac].xmdsseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身6新增前
               {<point name="input.body6.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmda_m.xmdadocno
               LET gs_keys[2] = g_xmdc6_d[g_detail_idx].xmdsseq
               CALL axmt500_insert_b('xmds_t',gs_keys,"'6'")
                           
               #add-point:單身新增後6
               {<point name="input.body6.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_xmdc_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmds_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axmt500_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body6.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_xmdc6_d[l_ac].* = g_xmdc6_d_t.*
               CLOSE axmt500_bcl5
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_xmdc6_d[l_ac].* = g_xmdc6_d_t.*
            ELSE
               #add-point:單身page6修改前
               {<point name="input.body6.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身6)
               
               
               #將遮罩欄位還原
               CALL axmt500_xmds_t_mask_restore('restore_mask_o')
                              
               UPDATE xmds_t SET (xmdsdocno,xmdsseq,xmds001,xmds002,xmds003,xmds004,xmds005,xmds006, 
                   xmdssite) = (g_xmda_m.xmdadocno,g_xmdc6_d[l_ac].xmdsseq,g_xmdc6_d[l_ac].xmds001,g_xmdc6_d[l_ac].xmds002, 
                   g_xmdc6_d[l_ac].xmds003,g_xmdc6_d[l_ac].xmds004,g_xmdc6_d[l_ac].xmds005,g_xmdc6_d[l_ac].xmds006, 
                   g_xmdc6_d[l_ac].xmdssite) #自訂欄位頁簽
                WHERE xmdsent = g_enterprise AND xmdsdocno = g_xmda_m.xmdadocno
                  AND xmdsseq = g_xmdc6_d_t.xmdsseq #項次 
                  
               #add-point:單身page6修改中
               {<point name="input.body6.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmds_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_xmdc6_d[l_ac].* = g_xmdc6_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmds_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_xmdc6_d[l_ac].* = g_xmdc6_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmda_m.xmdadocno
               LET gs_keys_bak[1] = g_xmdadocno_t
               LET gs_keys[2] = g_xmdc6_d[g_detail_idx].xmdsseq
               LET gs_keys_bak[2] = g_xmdc6_d_t.xmdsseq
               CALL axmt500_update_b('xmds_t',gs_keys,gs_keys_bak,"'6'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL axmt500_xmds_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_xmdc6_d[g_detail_idx].xmdsseq = g_xmdc6_d_t.xmdsseq 
                  ) THEN
                  LET gs_keys[01] = g_xmda_m.xmdadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_xmdc6_d_t.xmdsseq
                  CALL axmt500_key_update_b(gs_keys,'xmds_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_xmda_m),util.JSON.stringify(g_xmdc6_d_t)
               LET g_log2 = util.JSON.stringify(g_xmda_m),util.JSON.stringify(g_xmdc6_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page6修改後
               {<point name="input.body6.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmds001
            
            #add-point:AFTER FIELD xmds001
            {<point name="input.a.page6.xmds001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmds001
            #add-point:BEFORE FIELD xmds001
            {<point name="input.b.page6.xmds001" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmds001
            #add-point:ON CHANGE xmds001
            {<point name="input.g.page6.xmds001" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmds002
            
            #add-point:AFTER FIELD xmds002
            {<point name="input.a.page6.xmds002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmds002
            #add-point:BEFORE FIELD xmds002
            {<point name="input.b.page6.xmds002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmds002
            #add-point:ON CHANGE xmds002
            {<point name="input.g.page6.xmds002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmds003
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdc6_d[l_ac].xmds003,"0","0","","","azz-00079",1) THEN
               NEXT FIELD xmds003
            END IF 
 
 
            #add-point:AFTER FIELD xmds003
            {<point name="input.a.page6.xmds003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmds003
            #add-point:BEFORE FIELD xmds003
            {<point name="input.b.page6.xmds003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmds003
            #add-point:ON CHANGE xmds003
            {<point name="input.g.page6.xmds003" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmds004
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdc6_d[l_ac].xmds004,"0","0","","","azz-00079",1) THEN
               NEXT FIELD xmds004
            END IF 
 
 
            #add-point:AFTER FIELD xmds004
            {<point name="input.a.page6.xmds004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmds004
            #add-point:BEFORE FIELD xmds004
            {<point name="input.b.page6.xmds004" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmds004
            #add-point:ON CHANGE xmds004
            {<point name="input.g.page6.xmds004" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmds005
            
            #add-point:AFTER FIELD xmds005
            {<point name="input.a.page6.xmds005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmds005
            #add-point:BEFORE FIELD xmds005
            {<point name="input.b.page6.xmds005" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmds005
            #add-point:ON CHANGE xmds005
            {<point name="input.g.page6.xmds005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmds006
            #add-point:BEFORE FIELD xmds006
            {<point name="input.b.page6.xmds006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmds006
            
            #add-point:AFTER FIELD xmds006
            {<point name="input.a.page6.xmds006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmds006
            #add-point:ON CHANGE xmds006
            {<point name="input.g.page6.xmds006" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page6.xmds001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmds001
            #add-point:ON ACTION controlp INFIELD xmds001
            {<point name="input.c.page6.xmds001" />}
            #END add-point
 
         #Ctrlp:input.c.page6.xmds002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmds002
            #add-point:ON ACTION controlp INFIELD xmds002
            {<point name="input.c.page6.xmds002" />}
            #END add-point
 
         #Ctrlp:input.c.page6.xmds003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmds003
            #add-point:ON ACTION controlp INFIELD xmds003
            {<point name="input.c.page6.xmds003" />}
            #END add-point
 
         #Ctrlp:input.c.page6.xmds004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmds004
            #add-point:ON ACTION controlp INFIELD xmds004
            {<point name="input.c.page6.xmds004" />}
            #END add-point
 
         #Ctrlp:input.c.page6.xmds005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmds005
            #add-point:ON ACTION controlp INFIELD xmds005
            {<point name="input.c.page6.xmds005" />}
            #END add-point
 
         #Ctrlp:input.c.page6.xmds006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmds006
            #add-point:ON ACTION controlp INFIELD xmds006
            {<point name="input.c.page6.xmds006" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page6 after_row
            {<point name="input.body6.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_xmdc6_d[l_ac].* = g_xmdc6_d_t.*
               END IF
               CLOSE axmt500_bcl5
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL axmt500_unlock_b("xmds_t","'6'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page6 after_row2
            {<point name="input.body6.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body6.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_xmdc6_d[li_reproduce_target].* = g_xmdc6_d[li_reproduce].*
 
               LET g_xmdc6_d[li_reproduce_target].xmdsseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_xmdc6_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_xmdc6_d.getLength()+1
            END IF
            
      END INPUT
 
      
 
      DISPLAY ARRAY g_xmdc3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL axmt500_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail3")
            LET g_detail_idx = l_ac
            
            #add-point:page3, before row動作
            {<point name="input.body3.before_row"/>}
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'4',"))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail3")
            CALL axmt500_idx_chk()
            LET g_current_page = 3
      
         #add-point:page3自定義行為
         {<point name="input.body3.action"/>}
         #end add-point
      
      END DISPLAY
      DISPLAY ARRAY g_xmdc4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL axmt500_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail4")
            LET g_detail_idx = l_ac
            
            #add-point:page4, before row動作
            {<point name="input.body4.before_row"/>}
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'5',"))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail4")
            CALL axmt500_idx_chk()
            LET g_current_page = 4
      
         #add-point:page4自定義行為
         {<point name="input.body4.action"/>}
         #end add-point
      
      END DISPLAY
      DISPLAY ARRAY g_xmdc5_d TO s_detail5.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL axmt500_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail5")
            LET g_detail_idx = l_ac
            
            #add-point:page5, before row動作
            {<point name="input.body5.before_row"/>}
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'6',"))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail5")
            CALL axmt500_idx_chk()
            LET g_current_page = 5
      
         #add-point:page5自定義行為
         {<point name="input.body5.action"/>}
         #end add-point
      
      END DISPLAY
 
 
]]>
  </section>
  <section id="axmt500.input.other" ver="17" ch="" status="" src="s" readonly="">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1','2',"))      
         CALL DIALOG.setCurrentRow("s_detail2",g_idx_group.getValue("'3',"))
         CALL DIALOG.setCurrentRow("s_detail3",g_idx_group.getValue("'4',"))
         CALL DIALOG.setCurrentRow("s_detail4",g_idx_group.getValue("'5',"))
         CALL DIALOG.setCurrentRow("s_detail5",g_idx_group.getValue("'6',"))
         CALL DIALOG.setCurrentRow("s_detail6",g_idx_group.getValue(""))
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD xmdadocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xmdcseq
               WHEN "s_detail2"
                  NEXT FIELD xmdcseq_2
               WHEN "s_detail3"
                  NEXT FIELD xmddseq
               WHEN "s_detail4"
                  NEXT FIELD xmdqdocno
               WHEN "s_detail5"
                  NEXT FIELD xmdb001
               WHEN "s_detail6"
                  NEXT FIELD xmdsseq
 
               #add-point:input段modify_detail 
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog
         {<point name="input.after_dialog"/>}
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel
         {<point name="input.cancel"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close
         {<point name="input.close"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit
         {<point name="input.exit"/>}
         #end add-point
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="axmt500.show" ver="51" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION axmt500_show()
   #add-point:show段define(客製用)
   {<point name="show.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="show.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL axmt500_b_fill() #單身填充
      CALL axmt500_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:3)
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:2)
   CALL axmt500_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_xmda_m_mask_o.* =  g_xmda_m.*
   CALL axmt500_xmda_t_mask()
   LET g_xmda_m_mask_n.* =  g_xmda_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xmda_m.xmdadocno,g_xmda_m.xmda001,g_xmda_m.xmdadocno_desc,g_xmda_m.xmdadocdt,g_xmda_m.xmda004, 
       g_xmda_m.xmda004_desc,g_xmda_m.xmda002,g_xmda_m.xmda002_desc,g_xmda_m.xmda003,g_xmda_m.xmda003_desc, 
       g_xmda_m.xmdasite,g_xmda_m.xmdastus,g_xmda_m.xmda005,g_xmda_m.xmda006,g_xmda_m.xmda007,g_xmda_m.xmda008, 
       g_xmda_m.xmda033,g_xmda_m.xmda027,g_xmda_m.xmda027_desc,g_xmda_m.xmda009,g_xmda_m.xmda009_desc, 
       g_xmda_m.xmda010,g_xmda_m.xmda010_desc,g_xmda_m.xmda011,g_xmda_m.xmda011_desc,g_xmda_m.xmda012, 
       g_xmda_m.xmda013,g_xmda_m.xmda035,g_xmda_m.xmda035_desc,g_xmda_m.xmda015,g_xmda_m.xmda015_desc, 
       g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda017_desc,g_xmda_m.xmda018,g_xmda_m.xmda018_desc, 
       g_xmda_m.xmda019,g_xmda_m.xmda023,g_xmda_m.xmda023_desc,g_xmda_m.xmda032,g_xmda_m.xmda032_desc, 
       g_xmda_m.xmda071,g_xmda_m.xmda050,g_xmda_m.xmda021,g_xmda_m.xmda021_desc,g_xmda_m.xmda022,g_xmda_m.xmda022_desc, 
       g_xmda_m.xmda034,g_xmda_m.xmda034_desc,g_xmda_m.xmda203,g_xmda_m.xmda203_desc,g_xmda_m.xmda024, 
       g_xmda_m.xmda024_desc,g_xmda_m.xmda048,g_xmda_m.xmda049,g_xmda_m.xmda044,g_xmda_m.xmda044_desc, 
       g_xmda_m.xmda030,g_xmda_m.xmda031,g_xmda_m.xmda045,g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028, 
       g_xmda_m.xmda043,g_xmda_m.xmda025,g_xmda_m.xmda025_desc,g_xmda_m.oofb0171,g_xmda_m.xmda026,g_xmda_m.xmda026_desc, 
       g_xmda_m.oofb0172,g_xmda_m.xmda020,g_xmda_m.xmda020_desc,g_xmda_m.xmda037,g_xmda_m.xmda037_desc, 
       g_xmda_m.xmda038,g_xmda_m.xmda038_desc,g_xmda_m.xmda036,g_xmda_m.xmda036_desc,g_xmda_m.xmda039, 
       g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdaownid,g_xmda_m.xmdaownid_desc,g_xmda_m.xmdaowndp, 
       g_xmda_m.xmdaowndp_desc,g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtid_desc,g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdp_desc, 
       g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid,g_xmda_m.xmdamodid_desc,g_xmda_m.xmdamoddt,g_xmda_m.xmdacnfid, 
       g_xmda_m.xmdacnfid_desc,g_xmda_m.xmdacnfdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_xmda_m.xmdastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "H"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/hold.png")
         WHEN "UH"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unhold.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_xmdc_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_xmdc2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_xmdc3_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body3.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_xmdc4_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body4.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_xmdc5_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body5.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_xmdc6_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body6.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL axmt500_detail_show()
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="axmt500.detail_show" ver="9" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION axmt500_detail_show()
   #add-point:detail_show段define(客製用)
   {<point name="detail_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="detail_show.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="axmt500.reproduce" ver="39" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION axmt500_reproduce()
   #add-point:reproduce段define(客製用)
   {<point name="reproduce.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE l_newno     LIKE xmda_t.xmdadocno 
   DEFINE l_oldno     LIKE xmda_t.xmdadocno 
 
   DEFINE l_master    RECORD LIKE xmda_t.*
   DEFINE l_detail    RECORD LIKE xmdc_t.*
   DEFINE l_detail2    RECORD LIKE xmdd_t.*
 
   DEFINE l_detail3    RECORD LIKE xmdq_t.*
 
   DEFINE l_detail4    RECORD LIKE xmdb_t.*
 
   DEFINE l_detail5    RECORD LIKE xmds_t.*
 
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="reproduce.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理 
   {<point name="reproduce.pre_function"/>}
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_xmda_m.xmdadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_xmdadocno_t = g_xmda_m.xmdadocno
 
    
   LET g_xmda_m.xmdadocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_xmda_m.xmdaownid = g_user
      LET g_xmda_m.xmdaowndp = g_dept
      LET g_xmda_m.xmdacrtid = g_user
      LET g_xmda_m.xmdacrtdp = g_dept 
      LET g_xmda_m.xmdacrtdt = cl_get_current()
      LET g_xmda_m.xmdamodid = g_user
      LET g_xmda_m.xmdamoddt = cl_get_current()
      LET g_xmda_m.xmdastus = 'N'
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_xmda_m.xmdastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "H"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/hold.png")
         WHEN "UH"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unhold.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #清空key欄位的desc
      LET g_xmda_m.xmdadocno_desc = ''
   DISPLAY BY NAME g_xmda_m.xmdadocno_desc
 
   
   CALL axmt500_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_xmda_m.* TO NULL
      INITIALIZE g_xmdc_d TO NULL
      INITIALIZE g_xmdc2_d TO NULL
      INITIALIZE g_xmdc3_d TO NULL
      INITIALIZE g_xmdc4_d TO NULL
      INITIALIZE g_xmdc5_d TO NULL
      INITIALIZE g_xmdc6_d TO NULL
 
      #add-point:複製取消後
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL axmt500_show()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt500_set_act_visible()   
   CALL axmt500_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_xmdadocno_t = g_xmda_m.xmdadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " xmdaent = '" ||g_enterprise|| "' AND",
                      " xmdadocno = '", g_xmda_m.xmdadocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axmt500_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL axmt500_idx_chk()
   
   #功能已完成,通報訊息中心
   CALL axmt500_msgcentre_notify('reproduce')
 
END FUNCTION
]]>
  </section>
  <section id="axmt500.detail_reproduce" ver="21" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION axmt500_detail_reproduce()
   #add-point:delete段define(客製用)
   {<point name="detail_reproduce.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE xmdc_t.*
   DEFINE l_detail2    RECORD LIKE xmdd_t.*
 
   DEFINE l_detail3    RECORD LIKE xmdq_t.*
 
   DEFINE l_detail4    RECORD LIKE xmdb_t.*
 
   DEFINE l_detail5    RECORD LIKE xmds_t.*
 
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="detail_reproduce.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理 
   {<point name="detail_reproduce.pre_function"/>}
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE axmt500_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xmdc_t
    WHERE xmdcent = g_enterprise AND xmdcdocno = g_xmdadocno_t
 
    INTO TEMP axmt500_detail
 
   #將key修正為調整後   
   UPDATE axmt500_detail 
      #更新key欄位
      SET xmdcdocno = g_xmda_m.xmdadocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO xmdc_t SELECT * FROM axmt500_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmt500_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xmdd_t 
    WHERE xmddent = g_enterprise AND xmdddocno = g_xmdadocno_t
 
    INTO TEMP axmt500_detail
 
   #將key修正為調整後   
   UPDATE axmt500_detail SET xmdddocno = g_xmda_m.xmdadocno
 
  
   #將資料塞回原table   
   INSERT INTO xmdd_t SELECT * FROM axmt500_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmt500_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table3.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xmdq_t 
    WHERE xmdqent = g_enterprise AND xmdqdocno = g_xmdadocno_t
 
    INTO TEMP axmt500_detail
 
   #將key修正為調整後   
   UPDATE axmt500_detail SET xmdqdocno = g_xmda_m.xmdadocno
 
  
   #將資料塞回原table   
   INSERT INTO xmdq_t SELECT * FROM axmt500_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table3.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmt500_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table3.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table4.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xmdb_t 
    WHERE xmdbent = g_enterprise AND xmdbdocno = g_xmdadocno_t
 
    INTO TEMP axmt500_detail
 
   #將key修正為調整後   
   UPDATE axmt500_detail SET xmdbdocno = g_xmda_m.xmdadocno
 
  
   #將資料塞回原table   
   INSERT INTO xmdb_t SELECT * FROM axmt500_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table4.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmt500_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table4.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table5.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xmds_t 
    WHERE xmdsent = g_enterprise AND xmdsdocno = g_xmdadocno_t
 
    INTO TEMP axmt500_detail
 
   #將key修正為調整後   
   UPDATE axmt500_detail SET xmdsdocno = g_xmda_m.xmdadocno
 
  
   #將資料塞回原table   
   INSERT INTO xmds_t SELECT * FROM axmt500_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table5.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmt500_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table5.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_xmdadocno_t = g_xmda_m.xmdadocno
 
   
END FUNCTION
]]>
  </section>
  <section id="axmt500.delete" ver="82" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION axmt500_delete()
   #add-point:delete段define(客製用)
   {<point name="delete.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="delete.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理 
   {<point name="delete.pre_function"/>}
   #end add-point
   
   IF g_xmda_m.xmdadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN axmt500_cl USING g_enterprise,g_xmda_m.xmdadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axmt500_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE axmt500_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axmt500_master_referesh USING g_xmda_m.xmdadocno INTO g_xmda_m.xmdadocno,g_xmda_m.xmda001, 
       g_xmda_m.xmdadocdt,g_xmda_m.xmda004,g_xmda_m.xmda002,g_xmda_m.xmda003,g_xmda_m.xmdasite,g_xmda_m.xmdastus, 
       g_xmda_m.xmda005,g_xmda_m.xmda006,g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda033,g_xmda_m.xmda027, 
       g_xmda_m.xmda009,g_xmda_m.xmda010,g_xmda_m.xmda011,g_xmda_m.xmda012,g_xmda_m.xmda013,g_xmda_m.xmda035, 
       g_xmda_m.xmda015,g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda018,g_xmda_m.xmda019,g_xmda_m.xmda023, 
       g_xmda_m.xmda032,g_xmda_m.xmda071,g_xmda_m.xmda050,g_xmda_m.xmda021,g_xmda_m.xmda022,g_xmda_m.xmda034, 
       g_xmda_m.xmda203,g_xmda_m.xmda024,g_xmda_m.xmda048,g_xmda_m.xmda049,g_xmda_m.xmda044,g_xmda_m.xmda030, 
       g_xmda_m.xmda031,g_xmda_m.xmda045,g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028,g_xmda_m.xmda043, 
       g_xmda_m.xmda025,g_xmda_m.xmda026,g_xmda_m.xmda020,g_xmda_m.xmda037,g_xmda_m.xmda038,g_xmda_m.xmda036, 
       g_xmda_m.xmda039,g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdaownid,g_xmda_m.xmdaowndp,g_xmda_m.xmdacrtid, 
       g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid,g_xmda_m.xmdamoddt,g_xmda_m.xmdacnfid, 
       g_xmda_m.xmdacnfdt,g_xmda_m.xmda004_desc,g_xmda_m.xmda002_desc,g_xmda_m.xmda003_desc,g_xmda_m.xmda009_desc, 
       g_xmda_m.xmda010_desc,g_xmda_m.xmda015_desc,g_xmda_m.xmda017_desc,g_xmda_m.xmda018_desc,g_xmda_m.xmda023_desc, 
       g_xmda_m.xmda032_desc,g_xmda_m.xmda021_desc,g_xmda_m.xmda022_desc,g_xmda_m.xmda034_desc,g_xmda_m.xmda203_desc, 
       g_xmda_m.xmda024_desc,g_xmda_m.xmda044_desc,g_xmda_m.xmda025_desc,g_xmda_m.xmda026_desc,g_xmda_m.xmda020_desc, 
       g_xmda_m.xmda036_desc,g_xmda_m.xmdaownid_desc,g_xmda_m.xmdaowndp_desc,g_xmda_m.xmdacrtid_desc, 
       g_xmda_m.xmdacrtdp_desc,g_xmda_m.xmdamodid_desc,g_xmda_m.xmdacnfid_desc
   
   #檢查是否允許此動作
   IF NOT axmt500_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_xmda_m_mask_o.* =  g_xmda_m.*
   CALL axmt500_xmda_t_mask()
   LET g_xmda_m_mask_n.* =  g_xmda_m.*
   
   CALL axmt500_show()
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL axmt500_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
  
  
      #資料備份
      LET g_xmdadocno_t = g_xmda_m.xmdadocno
 
 
      DELETE FROM xmda_t
       WHERE xmdaent = g_enterprise AND xmdadocno = g_xmda_m.xmdadocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_xmda_m.xmdadocno 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM xmdc_t
       WHERE xmdcent = g_enterprise AND xmdcdocno = g_xmda_m.xmdadocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdc_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM xmdd_t
       WHERE xmddent = g_enterprise AND
             xmdddocno = g_xmda_m.xmdadocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdc_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete3" mark="Y"/>}
      #end add-point
      DELETE FROM xmdq_t
       WHERE xmdqent = g_enterprise AND
             xmdqdocno = g_xmda_m.xmdadocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdd_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete3"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete4" mark="Y"/>}
      #end add-point
      DELETE FROM xmdb_t
       WHERE xmdbent = g_enterprise AND
             xmdbdocno = g_xmda_m.xmdadocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete4"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdq_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete4"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete5" mark="Y"/>}
      #end add-point
      DELETE FROM xmds_t
       WHERE xmdsent = g_enterprise AND
             xmdsdocno = g_xmda_m.xmdadocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete5"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdb_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete5"/>}
      #end add-point
 
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE axmt500_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_xmdc_d.clear() 
      CALL g_xmdc2_d.clear()       
      CALL g_xmdc3_d.clear()       
      CALL g_xmdc4_d.clear()       
      CALL g_xmdc5_d.clear()       
      CALL g_xmdc6_d.clear()       
 
     
      CALL axmt500_ui_browser_refresh()  
      #CALL axmt500_ui_headershow()  
      #CALL axmt500_ui_detailshow()
      
      IF g_browser_cnt > 0 THEN 
         #CALL axmt500_browser_fill("")
         CALL axmt500_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
 
      #add-point:多語言刪除
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
 
      
 
      
 
      
 
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE axmt500_cl
 
   #功能已完成,通報訊息中心
   CALL axmt500_msgcentre_notify('delete')
    
END FUNCTION
]]>
  </section>
  <section id="axmt500.b_fill" ver="80" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION axmt500_b_fill()
   #add-point:b_fill段define(客製用)
   {<point name="b_fill.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="b_fill.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理 
   {<point name="b_fill.pre_function"/>}
   #end add-point
   
   #清空第一階單身
   CALL g_xmdc_d.clear()
   CALL g_xmdc2_d.clear()
   CALL g_xmdc3_d.clear()
   CALL g_xmdc4_d.clear()
   CALL g_xmdc5_d.clear()
   CALL g_xmdc6_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF axmt500_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE xmdcseq,xmdc027,xmdc001,xmdc019,xmdc002,xmdc006,xmdc007,xmdc008, 
             xmdc009,xmdc024,xmdc012,xmdc013,xmdc045,xmdc016,xmdc017,xmdc010,xmdc011,xmdc015,xmdc046, 
             xmdc047,xmdc048,xmdc023,xmdc020,xmdc021,xmdc022,xmdcunit,xmdcorga,xmdc052,xmdc049,xmdc053, 
             xmdc050,xmdcsite,xmdc058,xmdc059,xmdc060,xmdc061,xmdcseq,xmdc028,xmdc029,xmdc030,xmdc057, 
             xmdc025,xmdc026,xmdc031,xmdc032,xmdc033,xmdc003,xmdc054,xmdc036,xmdc037,xmdc038,xmdc039, 
             xmdc035,xmdc040,xmdc041,xmdc042,xmdc043,xmdc044 ,t1.imaal003 ,t2.imaal004 ,t3.oocal003 , 
             t4.oocal003 ,t5.oocal003 ,t6.ooefl003 ,t7.ooefl003 ,t8.oocql004 ,t9.oocql004 ,t10.inayl003 , 
             t11.inab003 ,t12.oocql004 ,t13.imaal003 ,t14.pjabl003 ,t15.pjbbl004 ,t16.pjbml004 FROM xmdc_t", 
                
                     " INNER JOIN xmda_t ON xmdadocno = xmdcdocno ",
 
                     #"",
                     
                     "",
                                    " LEFT JOIN imaal_t t1 ON t1.imaalent='"||g_enterprise||"' AND t1.imaal001=xmdc001 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t2 ON t2.imaalent='"||g_enterprise||"' AND t2.imaal001=xmdc001 AND t2.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t3 ON t3.oocalent='"||g_enterprise||"' AND t3.oocal001=xmdc006 AND t3.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t4 ON t4.oocalent='"||g_enterprise||"' AND t4.oocal001=xmdc008 AND t4.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t5 ON t5.oocalent='"||g_enterprise||"' AND t5.oocal001=xmdc010 AND t5.oocal002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent='"||g_enterprise||"' AND t6.ooefl001=xmdcunit AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent='"||g_enterprise||"' AND t7.ooefl001=xmdcorga AND t7.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t8 ON t8.oocqlent='"||g_enterprise||"' AND t8.oocql001='265' AND t8.oocql002=xmdc049 AND t8.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t9 ON t9.oocqlent='"||g_enterprise||"' AND t9.oocql001='284' AND t9.oocql002=xmdc053 AND t9.oocql003='"||g_dlang||"' ",
               " LEFT JOIN inayl_t t10 ON t10.inaylent='"||g_enterprise||"' AND t10.inayl001=xmdc028 AND t10.inayl002='"||g_dlang||"' ",
               " LEFT JOIN inab_t t11 ON t11.inabent='"||g_enterprise||"' AND t11.inabsite=xmdcsite AND t11.inab001=xmdc028 AND t11.inab002=xmdc029  ",
               " LEFT JOIN oocql_t t12 ON t12.oocqlent='"||g_enterprise||"' AND t12.oocql001='263' AND t12.oocql002=xmdc031 AND t12.oocql003='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t13 ON t13.imaalent='"||g_enterprise||"' AND t13.imaal001=xmdc003 AND t13.imaal002='"||g_dlang||"' ",
               " LEFT JOIN pjabl_t t14 ON t14.pjablent='"||g_enterprise||"' AND t14.pjabl001=xmdc036 AND t14.pjabl002='"||g_dlang||"' ",
               " LEFT JOIN pjbbl_t t15 ON t15.pjbblent='"||g_enterprise||"' AND t15.pjbbl001=xmdc037 AND t15.pjbbl003='"||g_dlang||"' ",
               " LEFT JOIN pjbml_t t16 ON t16.pjbmlent='"||g_enterprise||"' AND t16.pjbml002=xmdc038 AND t16.pjbml003='"||g_dlang||"' ",
 
                     " WHERE xmdcent=? AND xmdcdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xmdc_t.xmdcseq"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axmt500_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR axmt500_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_xmda_m.xmdadocno
                                               
      FOREACH b_fill_cs INTO g_xmdc_d[l_ac].xmdcseq,g_xmdc_d[l_ac].xmdc027,g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc019, 
          g_xmdc_d[l_ac].xmdc002,g_xmdc_d[l_ac].xmdc006,g_xmdc_d[l_ac].xmdc007,g_xmdc_d[l_ac].xmdc008, 
          g_xmdc_d[l_ac].xmdc009,g_xmdc_d[l_ac].xmdc024,g_xmdc_d[l_ac].xmdc012,g_xmdc_d[l_ac].xmdc013, 
          g_xmdc_d[l_ac].xmdc045,g_xmdc_d[l_ac].xmdc016,g_xmdc_d[l_ac].xmdc017,g_xmdc_d[l_ac].xmdc010, 
          g_xmdc_d[l_ac].xmdc011,g_xmdc_d[l_ac].xmdc015,g_xmdc_d[l_ac].xmdc046,g_xmdc_d[l_ac].xmdc047, 
          g_xmdc_d[l_ac].xmdc048,g_xmdc_d[l_ac].xmdc023,g_xmdc_d[l_ac].xmdc020,g_xmdc_d[l_ac].xmdc021, 
          g_xmdc_d[l_ac].xmdc022,g_xmdc_d[l_ac].xmdcunit,g_xmdc_d[l_ac].xmdcorga,g_xmdc_d[l_ac].xmdc052, 
          g_xmdc_d[l_ac].xmdc049,g_xmdc_d[l_ac].xmdc053,g_xmdc_d[l_ac].xmdc050,g_xmdc_d[l_ac].xmdcsite, 
          g_xmdc_d[l_ac].xmdc058,g_xmdc_d[l_ac].xmdc059,g_xmdc_d[l_ac].xmdc060,g_xmdc_d[l_ac].xmdc061, 
          g_xmdc2_d[l_ac].xmdcseq,g_xmdc2_d[l_ac].xmdc028,g_xmdc2_d[l_ac].xmdc029,g_xmdc2_d[l_ac].xmdc030, 
          g_xmdc2_d[l_ac].xmdc057,g_xmdc2_d[l_ac].xmdc025,g_xmdc2_d[l_ac].xmdc026,g_xmdc2_d[l_ac].xmdc031, 
          g_xmdc2_d[l_ac].xmdc032,g_xmdc2_d[l_ac].xmdc033,g_xmdc2_d[l_ac].xmdc003,g_xmdc2_d[l_ac].xmdc054, 
          g_xmdc2_d[l_ac].xmdc036,g_xmdc2_d[l_ac].xmdc037,g_xmdc2_d[l_ac].xmdc038,g_xmdc2_d[l_ac].xmdc039, 
          g_xmdc2_d[l_ac].xmdc035,g_xmdc2_d[l_ac].xmdc040,g_xmdc2_d[l_ac].xmdc041,g_xmdc2_d[l_ac].xmdc042, 
          g_xmdc2_d[l_ac].xmdc043,g_xmdc2_d[l_ac].xmdc044,g_xmdc_d[l_ac].xmdc001_desc,g_xmdc_d[l_ac].xmdc001_desc_desc, 
          g_xmdc_d[l_ac].xmdc006_desc,g_xmdc_d[l_ac].xmdc008_desc,g_xmdc_d[l_ac].xmdc010_desc,g_xmdc_d[l_ac].xmdcunit_desc, 
          g_xmdc_d[l_ac].xmdcorga_desc,g_xmdc_d[l_ac].xmdc049_desc,g_xmdc_d[l_ac].xmdc053_desc,g_xmdc2_d[l_ac].xmdc028_desc, 
          g_xmdc2_d[l_ac].xmdc029_desc,g_xmdc2_d[l_ac].xmdc031_desc,g_xmdc2_d[l_ac].xmdc003_desc,g_xmdc2_d[l_ac].xmdc036_desc, 
          g_xmdc2_d[l_ac].xmdc037_desc,g_xmdc2_d[l_ac].xmdc038_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
   #判斷是否填充
   IF axmt500_fill_chk(2) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE xmddseq,xmddseq1,xmdd003,xmdd001,xmdd002,xmdd004,xmdd005,xmddseq2, 
             xmdd006,xmdd024,xmdd025,xmdd011,xmdd012,xmdd010,xmdd013,xmdd009,xmdd031,xmdd014,xmdd015, 
             xmdd016,xmdd017,xmdd026,xmdd027,xmdd018,xmdd019,xmdd020,xmdd028,xmdd029,xmdd030,xmdd021, 
             xmdd022,xmdd023,xmddsite,xmdd036,xmdd037,xmdd038,xmdd039 ,t17.imaal003 ,t18.imaal004 ,t19.oocal003 , 
             t20.oocal003 ,t21.oocql004 ,t22.oocal003 ,t23.ooag011 FROM xmdd_t",   
                     " INNER JOIN xmda_t ON xmdadocno = xmdddocno ",
 
                     "",
                     
                                    " LEFT JOIN imaal_t t17 ON t17.imaalent='"||g_enterprise||"' AND t17.imaal001=xmdd001 AND t17.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t18 ON t18.imaalent='"||g_enterprise||"' AND t18.imaal001=xmdd001 AND t18.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t19 ON t19.oocalent='"||g_enterprise||"' AND t19.oocal001=xmdd004 AND t19.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t20 ON t20.oocalent='"||g_enterprise||"' AND t20.oocal001=xmdd024 AND t20.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t21 ON t21.oocqlent='"||g_enterprise||"' AND t21.oocql001='274' AND t21.oocql002=xmdd010 AND t21.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t22 ON t22.oocalent='"||g_enterprise||"' AND t22.oocal001=xmdd026 AND t22.oocal002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t23 ON t23.ooagent='"||g_enterprise||"' AND t23.ooag001=xmdd022  ",
 
                     " WHERE xmddent=? AND xmdddocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body2.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xmdd_t.xmddseq,xmdd_t.xmddseq1,xmdd_t.xmddseq2"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql2"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axmt500_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR axmt500_pb2
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_xmda_m.xmdadocno
                                               
      FOREACH b_fill_cs2 INTO g_xmdc3_d[l_ac].xmddseq,g_xmdc3_d[l_ac].xmddseq1,g_xmdc3_d[l_ac].xmdd003, 
          g_xmdc3_d[l_ac].xmdd001,g_xmdc3_d[l_ac].xmdd002,g_xmdc3_d[l_ac].xmdd004,g_xmdc3_d[l_ac].xmdd005, 
          g_xmdc3_d[l_ac].xmddseq2,g_xmdc3_d[l_ac].xmdd006,g_xmdc3_d[l_ac].xmdd024,g_xmdc3_d[l_ac].xmdd025, 
          g_xmdc3_d[l_ac].xmdd011,g_xmdc3_d[l_ac].xmdd012,g_xmdc3_d[l_ac].xmdd010,g_xmdc3_d[l_ac].xmdd013, 
          g_xmdc3_d[l_ac].xmdd009,g_xmdc3_d[l_ac].xmdd031,g_xmdc3_d[l_ac].xmdd014,g_xmdc3_d[l_ac].xmdd015, 
          g_xmdc3_d[l_ac].xmdd016,g_xmdc3_d[l_ac].xmdd017,g_xmdc3_d[l_ac].xmdd026,g_xmdc3_d[l_ac].xmdd027, 
          g_xmdc3_d[l_ac].xmdd018,g_xmdc3_d[l_ac].xmdd019,g_xmdc3_d[l_ac].xmdd020,g_xmdc3_d[l_ac].xmdd028, 
          g_xmdc3_d[l_ac].xmdd029,g_xmdc3_d[l_ac].xmdd030,g_xmdc3_d[l_ac].xmdd021,g_xmdc3_d[l_ac].xmdd022, 
          g_xmdc3_d[l_ac].xmdd023,g_xmdc3_d[l_ac].xmddsite,g_xmdc3_d[l_ac].xmdd036,g_xmdc3_d[l_ac].xmdd037, 
          g_xmdc3_d[l_ac].xmdd038,g_xmdc3_d[l_ac].xmdd039,g_xmdc3_d[l_ac].xmdd001_desc,g_xmdc3_d[l_ac].xmdd001_desc_desc, 
          g_xmdc3_d[l_ac].xmdd004_desc,g_xmdc3_d[l_ac].xmdd024_desc,g_xmdc3_d[l_ac].xmdd010_desc,g_xmdc3_d[l_ac].xmdd026_desc, 
          g_xmdc3_d[l_ac].xmdd022_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF axmt500_fill_chk(3) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE xmdqdocno,xmdqseq,xmdqseq1,xmdq001,xmdq006,xmdq007,xmdq008,xmdq009, 
             xmdq002,xmdq004,xmdq005,xmdqsite ,t24.imaal003 ,t25.imaal004 ,t26.oocal003 ,t27.imaal003 , 
             t28.imaal004 FROM xmdq_t",   
                     " INNER JOIN xmda_t ON xmdadocno = xmdqdocno ",
 
                     "",
                     
                                    " LEFT JOIN imaal_t t24 ON t24.imaalent='"||g_enterprise||"' AND t24.imaal001=xmdq001 AND t24.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t25 ON t25.imaalent='"||g_enterprise||"' AND t25.imaal001=xmdq001 AND t25.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t26 ON t26.oocalent='"||g_enterprise||"' AND t26.oocal001=xmdq008 AND t26.oocal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t27 ON t27.imaalent='"||g_enterprise||"' AND t27.imaal001=xmdq002 AND t27.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t28 ON t28.imaalent='"||g_enterprise||"' AND t28.imaal001=xmdq002 AND t28.imaal002='"||g_dlang||"' ",
 
                     " WHERE xmdqent=? AND xmdqdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body3.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table3) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xmdq_t.xmdqseq,xmdq_t.xmdqseq1"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql3"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axmt500_pb3 FROM g_sql
         DECLARE b_fill_cs3 CURSOR FOR axmt500_pb3
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs3 USING g_enterprise,g_xmda_m.xmdadocno
                                               
      FOREACH b_fill_cs3 INTO g_xmdc4_d[l_ac].xmdqdocno,g_xmdc4_d[l_ac].xmdqseq,g_xmdc4_d[l_ac].xmdqseq1, 
          g_xmdc4_d[l_ac].xmdq001,g_xmdc4_d[l_ac].xmdq006,g_xmdc4_d[l_ac].xmdq007,g_xmdc4_d[l_ac].xmdq008, 
          g_xmdc4_d[l_ac].xmdq009,g_xmdc4_d[l_ac].xmdq002,g_xmdc4_d[l_ac].xmdq004,g_xmdc4_d[l_ac].xmdq005, 
          g_xmdc4_d[l_ac].xmdqsite,g_xmdc4_d[l_ac].xmdq001_desc,g_xmdc4_d[l_ac].xmdq001_desc_desc,g_xmdc4_d[l_ac].xmdq008_desc, 
          g_xmdc4_d[l_ac].xmdq002_desc,g_xmdc4_d[l_ac].xmdq002_desc_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill3.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF axmt500_fill_chk(4) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE xmdb001,xmdb002,xmdb003,xmdb004,xmdb005,xmdb006,xmdb016,xmdb017, 
             xmdb007,xmdb008,xmdb009,xmdbsite ,t29.ooibl004 FROM xmdb_t",   
                     " INNER JOIN xmda_t ON xmdadocno = xmdbdocno ",
 
                     "",
                     
                                    " LEFT JOIN ooibl_t t29 ON t29.ooiblent='"||g_enterprise||"' AND t29.ooibl002=xmdb002 AND t29.ooibl003='"||g_dlang||"' ",
 
                     " WHERE xmdbent=? AND xmdbdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body4.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table4) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table4 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xmdb_t.xmdb001"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql4"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axmt500_pb4 FROM g_sql
         DECLARE b_fill_cs4 CURSOR FOR axmt500_pb4
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs4 USING g_enterprise,g_xmda_m.xmdadocno
                                               
      FOREACH b_fill_cs4 INTO g_xmdc5_d[l_ac].xmdb001,g_xmdc5_d[l_ac].xmdb002,g_xmdc5_d[l_ac].xmdb003, 
          g_xmdc5_d[l_ac].xmdb004,g_xmdc5_d[l_ac].xmdb005,g_xmdc5_d[l_ac].xmdb006,g_xmdc5_d[l_ac].xmdb016, 
          g_xmdc5_d[l_ac].xmdb017,g_xmdc5_d[l_ac].xmdb007,g_xmdc5_d[l_ac].xmdb008,g_xmdc5_d[l_ac].xmdb009, 
          g_xmdc5_d[l_ac].xmdbsite,g_xmdc5_d[l_ac].xmdb002_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill4.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF axmt500_fill_chk(5) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE xmdsseq,xmds001,xmds002,xmds003,xmds004,xmds005,xmds006,xmdssite , 
             t30.imaal003 ,t31.imaal004 ,t32.ooail003 ,t33.pmaal004 FROM xmds_t",   
                     " INNER JOIN xmda_t ON xmdadocno = xmdsdocno ",
 
                     "",
                     
                                    " LEFT JOIN imaal_t t30 ON t30.imaalent='"||g_enterprise||"' AND t30.imaal001=xmds001 AND t30.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t31 ON t31.imaalent='"||g_enterprise||"' AND t31.imaal001=xmds001 AND t31.imaal002='"||g_dlang||"' ",
               " LEFT JOIN ooail_t t32 ON t32.ooailent='"||g_enterprise||"' AND t32.ooail001=xmds002 AND t32.ooail002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t33 ON t33.pmaalent='"||g_enterprise||"' AND t33.pmaal001=xmds005 AND t33.pmaal002='"||g_dlang||"' ",
 
                     " WHERE xmdsent=? AND xmdsdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body5.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table5) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table5 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xmds_t.xmdsseq"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql5"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axmt500_pb5 FROM g_sql
         DECLARE b_fill_cs5 CURSOR FOR axmt500_pb5
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs5 USING g_enterprise,g_xmda_m.xmdadocno
                                               
      FOREACH b_fill_cs5 INTO g_xmdc6_d[l_ac].xmdsseq,g_xmdc6_d[l_ac].xmds001,g_xmdc6_d[l_ac].xmds002, 
          g_xmdc6_d[l_ac].xmds003,g_xmdc6_d[l_ac].xmds004,g_xmdc6_d[l_ac].xmds005,g_xmdc6_d[l_ac].xmds006, 
          g_xmdc6_d[l_ac].xmdssite,g_xmdc6_d[l_ac].xmds001_desc,g_xmdc6_d[l_ac].xmds001_desc_desc,g_xmdc6_d[l_ac].xmds002_desc, 
          g_xmdc6_d[l_ac].xmds005_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill5.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_xmdc_d.deleteElement(g_xmdc_d.getLength())
   CALL g_xmdc2_d.deleteElement(g_xmdc2_d.getLength())
   CALL g_xmdc3_d.deleteElement(g_xmdc3_d.getLength())
   CALL g_xmdc4_d.deleteElement(g_xmdc4_d.getLength())
   CALL g_xmdc5_d.deleteElement(g_xmdc5_d.getLength())
   CALL g_xmdc6_d.deleteElement(g_xmdc6_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE axmt500_pb
   FREE axmt500_pb2
 
   FREE axmt500_pb3
 
   FREE axmt500_pb4
 
   FREE axmt500_pb5
 
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_xmdc_d.getLength()
      LET g_xmdc_d_mask_o[l_ac].* =  g_xmdc_d[l_ac].*
      CALL axmt500_xmdc_t_mask()
      LET g_xmdc_d_mask_n[l_ac].* =  g_xmdc_d[l_ac].*
   END FOR
   
   LET g_xmdc2_d_mask_o.* =  g_xmdc2_d.*
   FOR l_ac = 1 TO g_xmdc2_d.getLength()
      LET g_xmdc2_d_mask_o[l_ac].* =  g_xmdc2_d[l_ac].*
      CALL axmt500_xmdc_t_mask()
      LET g_xmdc2_d_mask_n[l_ac].* =  g_xmdc2_d[l_ac].*
   END FOR
   LET g_xmdc3_d_mask_o.* =  g_xmdc3_d.*
   FOR l_ac = 1 TO g_xmdc3_d.getLength()
      LET g_xmdc3_d_mask_o[l_ac].* =  g_xmdc3_d[l_ac].*
      CALL axmt500_xmdd_t_mask()
      LET g_xmdc3_d_mask_n[l_ac].* =  g_xmdc3_d[l_ac].*
   END FOR
   LET g_xmdc4_d_mask_o.* =  g_xmdc4_d.*
   FOR l_ac = 1 TO g_xmdc4_d.getLength()
      LET g_xmdc4_d_mask_o[l_ac].* =  g_xmdc4_d[l_ac].*
      CALL axmt500_xmdq_t_mask()
      LET g_xmdc4_d_mask_n[l_ac].* =  g_xmdc4_d[l_ac].*
   END FOR
   LET g_xmdc5_d_mask_o.* =  g_xmdc5_d.*
   FOR l_ac = 1 TO g_xmdc5_d.getLength()
      LET g_xmdc5_d_mask_o[l_ac].* =  g_xmdc5_d[l_ac].*
      CALL axmt500_xmdb_t_mask()
      LET g_xmdc5_d_mask_n[l_ac].* =  g_xmdc5_d[l_ac].*
   END FOR
   LET g_xmdc6_d_mask_o.* =  g_xmdc6_d.*
   FOR l_ac = 1 TO g_xmdc6_d.getLength()
      LET g_xmdc6_d_mask_o[l_ac].* =  g_xmdc6_d[l_ac].*
      CALL axmt500_xmds_t_mask()
      LET g_xmdc6_d_mask_n[l_ac].* =  g_xmdc6_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
]]>
  </section>
  <section id="axmt500.delete_b" ver="23" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION axmt500_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用)
   {<point name="delete_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="delete_b.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理 
   {<point name="delete_b.pre_function"/>}
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM xmdc_t
       WHERE xmdcent = g_enterprise AND
         xmdcdocno = ps_keys_bak[1] AND xmdcseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_xmdc_d.deleteElement(li_idx) 
      END IF 
      IF ps_page <> "'2'" THEN 
         CALL g_xmdc2_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM xmdd_t
       WHERE xmddent = g_enterprise AND
             xmdddocno = ps_keys_bak[1] AND xmddseq = ps_keys_bak[2] AND xmddseq1 = ps_keys_bak[3] AND xmddseq2 = ps_keys_bak[4]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdd_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_xmdc3_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete3" mark="Y"/>}
      #end add-point    
      DELETE FROM xmdq_t
       WHERE xmdqent = g_enterprise AND
             xmdqdocno = ps_keys_bak[1] AND xmdqseq = ps_keys_bak[2] AND xmdqseq1 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete3"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdq_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_xmdc4_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete3"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete4" mark="Y"/>}
      #end add-point    
      DELETE FROM xmdb_t
       WHERE xmdbent = g_enterprise AND
             xmdbdocno = ps_keys_bak[1] AND xmdb001 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete4"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdb_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'5'" THEN 
         CALL g_xmdc5_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete4"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'6',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete5" mark="Y"/>}
      #end add-point    
      DELETE FROM xmds_t
       WHERE xmdsent = g_enterprise AND
             xmdsdocno = ps_keys_bak[1] AND xmdsseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete5"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmds_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'6'" THEN 
         CALL g_xmdc6_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete5"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="axmt500.insert_b" ver="39" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION axmt500_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用)
   {<point name="insert_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="insert_b.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理 
   {<point name="insert_b.pre_function"/>}
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO xmdc_t
                  (xmdcent,
                   xmdcdocno,
                   xmdcseq
                   ,xmdc027,xmdc001,xmdc019,xmdc002,xmdc006,xmdc007,xmdc008,xmdc009,xmdc024,xmdc012,xmdc013,xmdc045,xmdc016,xmdc017,xmdc010,xmdc011,xmdc015,xmdc046,xmdc047,xmdc048,xmdc023,xmdc020,xmdc021,xmdc022,xmdcunit,xmdcorga,xmdc052,xmdc049,xmdc053,xmdc050,xmdcsite,xmdc058,xmdc059,xmdc060,xmdc061,xmdc028,xmdc029,xmdc030,xmdc057,xmdc025,xmdc026,xmdc031,xmdc032,xmdc033,xmdc003,xmdc054,xmdc036,xmdc037,xmdc038,xmdc039,xmdc035,xmdc040,xmdc041,xmdc042,xmdc043,xmdc044) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_xmdc_d[g_detail_idx].xmdc027,g_xmdc_d[g_detail_idx].xmdc001,g_xmdc_d[g_detail_idx].xmdc019, 
                       g_xmdc_d[g_detail_idx].xmdc002,g_xmdc_d[g_detail_idx].xmdc006,g_xmdc_d[g_detail_idx].xmdc007, 
                       g_xmdc_d[g_detail_idx].xmdc008,g_xmdc_d[g_detail_idx].xmdc009,g_xmdc_d[g_detail_idx].xmdc024, 
                       g_xmdc_d[g_detail_idx].xmdc012,g_xmdc_d[g_detail_idx].xmdc013,g_xmdc_d[g_detail_idx].xmdc045, 
                       g_xmdc_d[g_detail_idx].xmdc016,g_xmdc_d[g_detail_idx].xmdc017,g_xmdc_d[g_detail_idx].xmdc010, 
                       g_xmdc_d[g_detail_idx].xmdc011,g_xmdc_d[g_detail_idx].xmdc015,g_xmdc_d[g_detail_idx].xmdc046, 
                       g_xmdc_d[g_detail_idx].xmdc047,g_xmdc_d[g_detail_idx].xmdc048,g_xmdc_d[g_detail_idx].xmdc023, 
                       g_xmdc_d[g_detail_idx].xmdc020,g_xmdc_d[g_detail_idx].xmdc021,g_xmdc_d[g_detail_idx].xmdc022, 
                       g_xmdc_d[g_detail_idx].xmdcunit,g_xmdc_d[g_detail_idx].xmdcorga,g_xmdc_d[g_detail_idx].xmdc052, 
                       g_xmdc_d[g_detail_idx].xmdc049,g_xmdc_d[g_detail_idx].xmdc053,g_xmdc_d[g_detail_idx].xmdc050, 
                       g_xmdc_d[g_detail_idx].xmdcsite,g_xmdc_d[g_detail_idx].xmdc058,g_xmdc_d[g_detail_idx].xmdc059, 
                       g_xmdc_d[g_detail_idx].xmdc060,g_xmdc_d[g_detail_idx].xmdc061,g_xmdc2_d[g_detail_idx].xmdc028, 
                       g_xmdc2_d[g_detail_idx].xmdc029,g_xmdc2_d[g_detail_idx].xmdc030,g_xmdc2_d[g_detail_idx].xmdc057, 
                       g_xmdc2_d[g_detail_idx].xmdc025,g_xmdc2_d[g_detail_idx].xmdc026,g_xmdc2_d[g_detail_idx].xmdc031, 
                       g_xmdc2_d[g_detail_idx].xmdc032,g_xmdc2_d[g_detail_idx].xmdc033,g_xmdc2_d[g_detail_idx].xmdc003, 
                       g_xmdc2_d[g_detail_idx].xmdc054,g_xmdc2_d[g_detail_idx].xmdc036,g_xmdc2_d[g_detail_idx].xmdc037, 
                       g_xmdc2_d[g_detail_idx].xmdc038,g_xmdc2_d[g_detail_idx].xmdc039,g_xmdc2_d[g_detail_idx].xmdc035, 
                       g_xmdc2_d[g_detail_idx].xmdc040,g_xmdc2_d[g_detail_idx].xmdc041,g_xmdc2_d[g_detail_idx].xmdc042, 
                       g_xmdc2_d[g_detail_idx].xmdc043,g_xmdc2_d[g_detail_idx].xmdc044)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdc_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_xmdc_d.insertElement(li_idx) 
      END IF 
      IF ps_page <> "'2'" THEN 
         CALL g_xmdc2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO xmdd_t
                  (xmddent,
                   xmdddocno,
                   xmddseq,xmddseq1,xmddseq2
                   ,xmdd003,xmdd001,xmdd002,xmdd004,xmdd005,xmdd006,xmdd024,xmdd025,xmdd011,xmdd012,xmdd010,xmdd013,xmdd009,xmdd031,xmdd014,xmdd015,xmdd016,xmdd017,xmdd026,xmdd027,xmdd018,xmdd019,xmdd020,xmdd028,xmdd029,xmdd030,xmdd021,xmdd022,xmdd023,xmddsite,xmdd036,xmdd037,xmdd038,xmdd039) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
                   ,g_xmdc3_d[g_detail_idx].xmdd003,g_xmdc3_d[g_detail_idx].xmdd001,g_xmdc3_d[g_detail_idx].xmdd002, 
                       g_xmdc3_d[g_detail_idx].xmdd004,g_xmdc3_d[g_detail_idx].xmdd005,g_xmdc3_d[g_detail_idx].xmdd006, 
                       g_xmdc3_d[g_detail_idx].xmdd024,g_xmdc3_d[g_detail_idx].xmdd025,g_xmdc3_d[g_detail_idx].xmdd011, 
                       g_xmdc3_d[g_detail_idx].xmdd012,g_xmdc3_d[g_detail_idx].xmdd010,g_xmdc3_d[g_detail_idx].xmdd013, 
                       g_xmdc3_d[g_detail_idx].xmdd009,g_xmdc3_d[g_detail_idx].xmdd031,g_xmdc3_d[g_detail_idx].xmdd014, 
                       g_xmdc3_d[g_detail_idx].xmdd015,g_xmdc3_d[g_detail_idx].xmdd016,g_xmdc3_d[g_detail_idx].xmdd017, 
                       g_xmdc3_d[g_detail_idx].xmdd026,g_xmdc3_d[g_detail_idx].xmdd027,g_xmdc3_d[g_detail_idx].xmdd018, 
                       g_xmdc3_d[g_detail_idx].xmdd019,g_xmdc3_d[g_detail_idx].xmdd020,g_xmdc3_d[g_detail_idx].xmdd028, 
                       g_xmdc3_d[g_detail_idx].xmdd029,g_xmdc3_d[g_detail_idx].xmdd030,g_xmdc3_d[g_detail_idx].xmdd021, 
                       g_xmdc3_d[g_detail_idx].xmdd022,g_xmdc3_d[g_detail_idx].xmdd023,g_xmdc3_d[g_detail_idx].xmddsite, 
                       g_xmdc3_d[g_detail_idx].xmdd036,g_xmdc3_d[g_detail_idx].xmdd037,g_xmdc3_d[g_detail_idx].xmdd038, 
                       g_xmdc3_d[g_detail_idx].xmdd039)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdd_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_xmdc3_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert3" mark="Y"/>}
      #end add-point 
      INSERT INTO xmdq_t
                  (xmdqent,
                   xmdqdocno,
                   xmdqseq,xmdqseq1
                   ,xmdq001,xmdq006,xmdq007,xmdq008,xmdq009,xmdq002,xmdq004,xmdq005,xmdqsite) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_xmdc4_d[g_detail_idx].xmdq001,g_xmdc4_d[g_detail_idx].xmdq006,g_xmdc4_d[g_detail_idx].xmdq007, 
                       g_xmdc4_d[g_detail_idx].xmdq008,g_xmdc4_d[g_detail_idx].xmdq009,g_xmdc4_d[g_detail_idx].xmdq002, 
                       g_xmdc4_d[g_detail_idx].xmdq004,g_xmdc4_d[g_detail_idx].xmdq005,g_xmdc4_d[g_detail_idx].xmdqsite) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdq_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_xmdc4_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert3"/>}
      #end add-point
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert4" mark="Y"/>}
      #end add-point 
      INSERT INTO xmdb_t
                  (xmdbent,
                   xmdbdocno,
                   xmdb001
                   ,xmdb002,xmdb003,xmdb004,xmdb005,xmdb006,xmdb016,xmdb017,xmdb007,xmdb008,xmdb009,xmdbsite) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_xmdc5_d[g_detail_idx].xmdb002,g_xmdc5_d[g_detail_idx].xmdb003,g_xmdc5_d[g_detail_idx].xmdb004, 
                       g_xmdc5_d[g_detail_idx].xmdb005,g_xmdc5_d[g_detail_idx].xmdb006,g_xmdc5_d[g_detail_idx].xmdb016, 
                       g_xmdc5_d[g_detail_idx].xmdb017,g_xmdc5_d[g_detail_idx].xmdb007,g_xmdc5_d[g_detail_idx].xmdb008, 
                       g_xmdc5_d[g_detail_idx].xmdb009,g_xmdc5_d[g_detail_idx].xmdbsite)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert4"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdb_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'5'" THEN 
         CALL g_xmdc5_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert4"/>}
      #end add-point
   END IF
 
   LET ls_group = "'6',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert5" mark="Y"/>}
      #end add-point 
      INSERT INTO xmds_t
                  (xmdsent,
                   xmdsdocno,
                   xmdsseq
                   ,xmds001,xmds002,xmds003,xmds004,xmds005,xmds006,xmdssite) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_xmdc6_d[g_detail_idx].xmds001,g_xmdc6_d[g_detail_idx].xmds002,g_xmdc6_d[g_detail_idx].xmds003, 
                       g_xmdc6_d[g_detail_idx].xmds004,g_xmdc6_d[g_detail_idx].xmds005,g_xmdc6_d[g_detail_idx].xmds006, 
                       g_xmdc6_d[g_detail_idx].xmdssite)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert5"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmds_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'6'" THEN 
         CALL g_xmdc6_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert5"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="axmt500.update_b" ver="40" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION axmt500_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用)
   {<point name="update_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="update_b.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理 
   {<point name="update_b.pre_function"/>}
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmdc_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL axmt500_xmdc_t_mask_restore('restore_mask_o')
               
      UPDATE xmdc_t 
         SET (xmdcdocno,
              xmdcseq
              ,xmdc027,xmdc001,xmdc019,xmdc002,xmdc006,xmdc007,xmdc008,xmdc009,xmdc024,xmdc012,xmdc013,xmdc045,xmdc016,xmdc017,xmdc010,xmdc011,xmdc015,xmdc046,xmdc047,xmdc048,xmdc023,xmdc020,xmdc021,xmdc022,xmdcunit,xmdcorga,xmdc052,xmdc049,xmdc053,xmdc050,xmdcsite,xmdc058,xmdc059,xmdc060,xmdc061,xmdc028,xmdc029,xmdc030,xmdc057,xmdc025,xmdc026,xmdc031,xmdc032,xmdc033,xmdc003,xmdc054,xmdc036,xmdc037,xmdc038,xmdc039,xmdc035,xmdc040,xmdc041,xmdc042,xmdc043,xmdc044) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_xmdc_d[g_detail_idx].xmdc027,g_xmdc_d[g_detail_idx].xmdc001,g_xmdc_d[g_detail_idx].xmdc019, 
                  g_xmdc_d[g_detail_idx].xmdc002,g_xmdc_d[g_detail_idx].xmdc006,g_xmdc_d[g_detail_idx].xmdc007, 
                  g_xmdc_d[g_detail_idx].xmdc008,g_xmdc_d[g_detail_idx].xmdc009,g_xmdc_d[g_detail_idx].xmdc024, 
                  g_xmdc_d[g_detail_idx].xmdc012,g_xmdc_d[g_detail_idx].xmdc013,g_xmdc_d[g_detail_idx].xmdc045, 
                  g_xmdc_d[g_detail_idx].xmdc016,g_xmdc_d[g_detail_idx].xmdc017,g_xmdc_d[g_detail_idx].xmdc010, 
                  g_xmdc_d[g_detail_idx].xmdc011,g_xmdc_d[g_detail_idx].xmdc015,g_xmdc_d[g_detail_idx].xmdc046, 
                  g_xmdc_d[g_detail_idx].xmdc047,g_xmdc_d[g_detail_idx].xmdc048,g_xmdc_d[g_detail_idx].xmdc023, 
                  g_xmdc_d[g_detail_idx].xmdc020,g_xmdc_d[g_detail_idx].xmdc021,g_xmdc_d[g_detail_idx].xmdc022, 
                  g_xmdc_d[g_detail_idx].xmdcunit,g_xmdc_d[g_detail_idx].xmdcorga,g_xmdc_d[g_detail_idx].xmdc052, 
                  g_xmdc_d[g_detail_idx].xmdc049,g_xmdc_d[g_detail_idx].xmdc053,g_xmdc_d[g_detail_idx].xmdc050, 
                  g_xmdc_d[g_detail_idx].xmdcsite,g_xmdc_d[g_detail_idx].xmdc058,g_xmdc_d[g_detail_idx].xmdc059, 
                  g_xmdc_d[g_detail_idx].xmdc060,g_xmdc_d[g_detail_idx].xmdc061,g_xmdc2_d[g_detail_idx].xmdc028, 
                  g_xmdc2_d[g_detail_idx].xmdc029,g_xmdc2_d[g_detail_idx].xmdc030,g_xmdc2_d[g_detail_idx].xmdc057, 
                  g_xmdc2_d[g_detail_idx].xmdc025,g_xmdc2_d[g_detail_idx].xmdc026,g_xmdc2_d[g_detail_idx].xmdc031, 
                  g_xmdc2_d[g_detail_idx].xmdc032,g_xmdc2_d[g_detail_idx].xmdc033,g_xmdc2_d[g_detail_idx].xmdc003, 
                  g_xmdc2_d[g_detail_idx].xmdc054,g_xmdc2_d[g_detail_idx].xmdc036,g_xmdc2_d[g_detail_idx].xmdc037, 
                  g_xmdc2_d[g_detail_idx].xmdc038,g_xmdc2_d[g_detail_idx].xmdc039,g_xmdc2_d[g_detail_idx].xmdc035, 
                  g_xmdc2_d[g_detail_idx].xmdc040,g_xmdc2_d[g_detail_idx].xmdc041,g_xmdc2_d[g_detail_idx].xmdc042, 
                  g_xmdc2_d[g_detail_idx].xmdc043,g_xmdc2_d[g_detail_idx].xmdc044) 
         WHERE xmdcent = g_enterprise AND xmdcdocno = ps_keys_bak[1] AND xmdcseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmdc_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmdc_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL axmt500_xmdc_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmdd_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL axmt500_xmdd_t_mask_restore('restore_mask_o')
               
      UPDATE xmdd_t 
         SET (xmdddocno,
              xmddseq,xmddseq1,xmddseq2
              ,xmdd003,xmdd001,xmdd002,xmdd004,xmdd005,xmdd006,xmdd024,xmdd025,xmdd011,xmdd012,xmdd010,xmdd013,xmdd009,xmdd031,xmdd014,xmdd015,xmdd016,xmdd017,xmdd026,xmdd027,xmdd018,xmdd019,xmdd020,xmdd028,xmdd029,xmdd030,xmdd021,xmdd022,xmdd023,xmddsite,xmdd036,xmdd037,xmdd038,xmdd039) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
              ,g_xmdc3_d[g_detail_idx].xmdd003,g_xmdc3_d[g_detail_idx].xmdd001,g_xmdc3_d[g_detail_idx].xmdd002, 
                  g_xmdc3_d[g_detail_idx].xmdd004,g_xmdc3_d[g_detail_idx].xmdd005,g_xmdc3_d[g_detail_idx].xmdd006, 
                  g_xmdc3_d[g_detail_idx].xmdd024,g_xmdc3_d[g_detail_idx].xmdd025,g_xmdc3_d[g_detail_idx].xmdd011, 
                  g_xmdc3_d[g_detail_idx].xmdd012,g_xmdc3_d[g_detail_idx].xmdd010,g_xmdc3_d[g_detail_idx].xmdd013, 
                  g_xmdc3_d[g_detail_idx].xmdd009,g_xmdc3_d[g_detail_idx].xmdd031,g_xmdc3_d[g_detail_idx].xmdd014, 
                  g_xmdc3_d[g_detail_idx].xmdd015,g_xmdc3_d[g_detail_idx].xmdd016,g_xmdc3_d[g_detail_idx].xmdd017, 
                  g_xmdc3_d[g_detail_idx].xmdd026,g_xmdc3_d[g_detail_idx].xmdd027,g_xmdc3_d[g_detail_idx].xmdd018, 
                  g_xmdc3_d[g_detail_idx].xmdd019,g_xmdc3_d[g_detail_idx].xmdd020,g_xmdc3_d[g_detail_idx].xmdd028, 
                  g_xmdc3_d[g_detail_idx].xmdd029,g_xmdc3_d[g_detail_idx].xmdd030,g_xmdc3_d[g_detail_idx].xmdd021, 
                  g_xmdc3_d[g_detail_idx].xmdd022,g_xmdc3_d[g_detail_idx].xmdd023,g_xmdc3_d[g_detail_idx].xmddsite, 
                  g_xmdc3_d[g_detail_idx].xmdd036,g_xmdc3_d[g_detail_idx].xmdd037,g_xmdc3_d[g_detail_idx].xmdd038, 
                  g_xmdc3_d[g_detail_idx].xmdd039) 
         WHERE xmddent = g_enterprise AND xmdddocno = ps_keys_bak[1] AND xmddseq = ps_keys_bak[2] AND xmddseq1 = ps_keys_bak[3] AND xmddseq2 = ps_keys_bak[4]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmdd_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmdd_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL axmt500_xmdd_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmdq_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update3" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL axmt500_xmdq_t_mask_restore('restore_mask_o')
               
      UPDATE xmdq_t 
         SET (xmdqdocno,
              xmdqseq,xmdqseq1
              ,xmdq001,xmdq006,xmdq007,xmdq008,xmdq009,xmdq002,xmdq004,xmdq005,xmdqsite) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_xmdc4_d[g_detail_idx].xmdq001,g_xmdc4_d[g_detail_idx].xmdq006,g_xmdc4_d[g_detail_idx].xmdq007, 
                  g_xmdc4_d[g_detail_idx].xmdq008,g_xmdc4_d[g_detail_idx].xmdq009,g_xmdc4_d[g_detail_idx].xmdq002, 
                  g_xmdc4_d[g_detail_idx].xmdq004,g_xmdc4_d[g_detail_idx].xmdq005,g_xmdc4_d[g_detail_idx].xmdqsite)  

         WHERE xmdqent = g_enterprise AND xmdqdocno = ps_keys_bak[1] AND xmdqseq = ps_keys_bak[2] AND xmdqseq1 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update3"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmdq_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmdq_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL axmt500_xmdq_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後
      {<point name="update_b.after_update3"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmdb_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update4" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL axmt500_xmdb_t_mask_restore('restore_mask_o')
               
      UPDATE xmdb_t 
         SET (xmdbdocno,
              xmdb001
              ,xmdb002,xmdb003,xmdb004,xmdb005,xmdb006,xmdb016,xmdb017,xmdb007,xmdb008,xmdb009,xmdbsite) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_xmdc5_d[g_detail_idx].xmdb002,g_xmdc5_d[g_detail_idx].xmdb003,g_xmdc5_d[g_detail_idx].xmdb004, 
                  g_xmdc5_d[g_detail_idx].xmdb005,g_xmdc5_d[g_detail_idx].xmdb006,g_xmdc5_d[g_detail_idx].xmdb016, 
                  g_xmdc5_d[g_detail_idx].xmdb017,g_xmdc5_d[g_detail_idx].xmdb007,g_xmdc5_d[g_detail_idx].xmdb008, 
                  g_xmdc5_d[g_detail_idx].xmdb009,g_xmdc5_d[g_detail_idx].xmdbsite) 
         WHERE xmdbent = g_enterprise AND xmdbdocno = ps_keys_bak[1] AND xmdb001 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update4"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmdb_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmdb_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL axmt500_xmdb_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後
      {<point name="update_b.after_update4"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'6',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmds_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update5" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL axmt500_xmds_t_mask_restore('restore_mask_o')
               
      UPDATE xmds_t 
         SET (xmdsdocno,
              xmdsseq
              ,xmds001,xmds002,xmds003,xmds004,xmds005,xmds006,xmdssite) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_xmdc6_d[g_detail_idx].xmds001,g_xmdc6_d[g_detail_idx].xmds002,g_xmdc6_d[g_detail_idx].xmds003, 
                  g_xmdc6_d[g_detail_idx].xmds004,g_xmdc6_d[g_detail_idx].xmds005,g_xmdc6_d[g_detail_idx].xmds006, 
                  g_xmdc6_d[g_detail_idx].xmdssite) 
         WHERE xmdsent = g_enterprise AND xmdsdocno = ps_keys_bak[1] AND xmdsseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update5"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmds_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmds_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL axmt500_xmds_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後
      {<point name="update_b.after_update5"/>}
      #end add-point  
   END IF
 
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="axmt500.key_update_b" ver="6" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION axmt500_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用)
   {<point name="key_update_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="key_update_b.define"/>} 
   #end add-point
   
   #add-point:Function前置處理 
   {<point name="key_update_b.pre_function"/>}
   #end add-point
   
 
   
END FUNCTION
]]>
  </section>
  <section id="axmt500.key_delete_b" ver="7" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION axmt500_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用)
   {<point name="key_delete_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="key_delete_b.define"/>} 
   #end add-point
   
   #add-point:Function前置處理 
   {<point name="key_delete_b.pre_function"/>}
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="axmt500.lock_b" ver="17" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION axmt500_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用)
   {<point name="lock_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="lock_b.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理 
   {<point name="lock_b.pre_function"/>}
   #end add-point
    
   #先刷新資料
   #CALL axmt500_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1','2',"
   #僅鎖定自身table
   LET ls_group = "xmdc_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN axmt500_bcl USING g_enterprise,
                                       g_xmda_m.xmdadocno,g_xmdc_d[g_detail_idx].xmdcseq     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "axmt500_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "xmdd_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN axmt500_bcl2 USING g_enterprise,
                                             g_xmda_m.xmdadocno,g_xmdc3_d[g_detail_idx].xmddseq,g_xmdc3_d[g_detail_idx].xmddseq1, 
                                                 g_xmdc3_d[g_detail_idx].xmddseq2
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "axmt500_bcl2" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'4',"
   #僅鎖定自身table
   LET ls_group = "xmdq_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN axmt500_bcl3 USING g_enterprise,
                                             g_xmda_m.xmdadocno,g_xmdc4_d[g_detail_idx].xmdqseq,g_xmdc4_d[g_detail_idx].xmdqseq1 

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "axmt500_bcl3" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'5',"
   #僅鎖定自身table
   LET ls_group = "xmdb_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN axmt500_bcl4 USING g_enterprise,
                                             g_xmda_m.xmdadocno,g_xmdc5_d[g_detail_idx].xmdb001
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "axmt500_bcl4" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'6',"
   #僅鎖定自身table
   LET ls_group = "xmds_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN axmt500_bcl5 USING g_enterprise,
                                             g_xmda_m.xmdadocno,g_xmdc6_d[g_detail_idx].xmdsseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "axmt500_bcl5" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="axmt500.unlock_b" ver="11" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION axmt500_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用)
   {<point name="unlock_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="unlock_b.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理 
   {<point name="unlock_b.pre_function"/>}
   #end add-point
    
   LET ls_group = "'1','2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmt500_bcl
   END IF
   
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmt500_bcl2
   END IF
 
   LET ls_group = "'4',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmt500_bcl3
   END IF
 
   LET ls_group = "'5',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmt500_bcl4
   END IF
 
   LET ls_group = "'6',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmt500_bcl5
   END IF
 
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="axmt500.set_entry" ver="10" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION axmt500_set_entry(p_cmd)
   #add-point:set_entry段define(客製用)
   {<point name="set_entry.define_customerization" edit="c" mark="Y"/>}
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="set_entry.define"/>} 
   #end add-point       
   
   #add-point:Function前置處理 
   {<point name="set_entry.pre_function"/>}
   #end add-point
   
   CALL cl_set_comp_entry("xmdadocno",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("xmdadocno",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="axmt500.set_no_entry" ver="13" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION axmt500_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用)
   {<point name="set_no_entry.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="set_no_entry.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理 
   {<point name="set_no_entry.pre_function"/>}
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("xmdadocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("xmdadocno",FALSE)
   END IF 
 
   IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("xmdadocdt",FALSE)
      END IF
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="axmt500.set_entry_b" ver="8" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION axmt500_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用)
   {<point name="set_entry_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="set_entry_b.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理 
   {<point name="set_entry_b.pre_function"/>}
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="axmt500.set_no_entry_b" ver="8" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION axmt500_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用)
   {<point name="set_no_entry_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="set_no_entry_b.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理 
   {<point name="set_no_entry_b.pre_function"/>}
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="axmt500.set_act_visible" ver="5" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限開啟
PRIVATE FUNCTION axmt500_set_act_visible()
   #add-point:set_act_visible段define(客製用)
   {<point name="set_act_visible.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="set_act_visible.define"/>} 
   #end add-point   
   #add-point:set_act_visible段
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="axmt500.set_act_no_visible" ver="5" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限關閉
PRIVATE FUNCTION axmt500_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用)
   {<point name="set_act_no_visible.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="set_act_no_visible.define"/>} 
   #end add-point   
   #add-point:set_act_no_visible段
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="axmt500.set_act_visible_b" ver="5" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限開啟
PRIVATE FUNCTION axmt500_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用)
   {<point name="set_act_visible_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="set_act_visible_b.define"/>} 
   #end add-point   
   #add-point:set_act_visible_b段
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="axmt500.set_act_no_visible_b" ver="5" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限關閉
PRIVATE FUNCTION axmt500_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用)
   {<point name="set_act_no_visible_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="set_act_no_visible_b.define"/>} 
   #end add-point   
   #add-point:set_act_no_visible_b段
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="axmt500.default_search" ver="16" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION axmt500_default_search()
   #add-point:default_search段define(客製用)
   {<point name="default_search.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="default_search.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " xmdadocno = '", g_argv[02], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
         INITIALIZE g_wc2_table2 TO NULL
 
         INITIALIZE g_wc2_table3 TO NULL
 
         INITIALIZE g_wc2_table4 TO NULL
 
         INITIALIZE g_wc2_table5 TO NULL
 
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "xmda_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "xmdc_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "xmdd_t" 
                  LET g_wc2_table2 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "xmdq_t" 
                  LET g_wc2_table3 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "xmdb_t" 
                  LET g_wc2_table4 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "xmds_t" 
                  LET g_wc2_table5 = la_wc[li_idx].wc
 
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
            OR NOT cl_null(g_wc2_table2)
 
            OR NOT cl_null(g_wc2_table3)
 
            OR NOT cl_null(g_wc2_table4)
 
            OR NOT cl_null(g_wc2_table5)
 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
            IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
            END IF
 
            IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
            END IF
 
            IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
            END IF
 
            IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
            END IF
 
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
]]>
  </section>
  <section id="axmt500.state_change" ver="40" ch="" status="" src="s" readonly="">
    <![CDATA[   #應用 a09 樣板自動產生(Version:14)
#+ 確認碼變更 
PRIVATE FUNCTION axmt500_statechange()
   #add-point:statechange段define(客製用)
   {<point name="statechange.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:Function前置處理
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_xmda_m.xmdadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN axmt500_cl USING g_enterprise,g_xmda_m.xmdadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axmt500_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE axmt500_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE axmt500_master_referesh USING g_xmda_m.xmdadocno INTO g_xmda_m.xmdadocno,g_xmda_m.xmda001, 
       g_xmda_m.xmdadocdt,g_xmda_m.xmda004,g_xmda_m.xmda002,g_xmda_m.xmda003,g_xmda_m.xmdasite,g_xmda_m.xmdastus, 
       g_xmda_m.xmda005,g_xmda_m.xmda006,g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda033,g_xmda_m.xmda027, 
       g_xmda_m.xmda009,g_xmda_m.xmda010,g_xmda_m.xmda011,g_xmda_m.xmda012,g_xmda_m.xmda013,g_xmda_m.xmda035, 
       g_xmda_m.xmda015,g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda018,g_xmda_m.xmda019,g_xmda_m.xmda023, 
       g_xmda_m.xmda032,g_xmda_m.xmda071,g_xmda_m.xmda050,g_xmda_m.xmda021,g_xmda_m.xmda022,g_xmda_m.xmda034, 
       g_xmda_m.xmda203,g_xmda_m.xmda024,g_xmda_m.xmda048,g_xmda_m.xmda049,g_xmda_m.xmda044,g_xmda_m.xmda030, 
       g_xmda_m.xmda031,g_xmda_m.xmda045,g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028,g_xmda_m.xmda043, 
       g_xmda_m.xmda025,g_xmda_m.xmda026,g_xmda_m.xmda020,g_xmda_m.xmda037,g_xmda_m.xmda038,g_xmda_m.xmda036, 
       g_xmda_m.xmda039,g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdaownid,g_xmda_m.xmdaowndp,g_xmda_m.xmdacrtid, 
       g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid,g_xmda_m.xmdamoddt,g_xmda_m.xmdacnfid, 
       g_xmda_m.xmdacnfdt,g_xmda_m.xmda004_desc,g_xmda_m.xmda002_desc,g_xmda_m.xmda003_desc,g_xmda_m.xmda009_desc, 
       g_xmda_m.xmda010_desc,g_xmda_m.xmda015_desc,g_xmda_m.xmda017_desc,g_xmda_m.xmda018_desc,g_xmda_m.xmda023_desc, 
       g_xmda_m.xmda032_desc,g_xmda_m.xmda021_desc,g_xmda_m.xmda022_desc,g_xmda_m.xmda034_desc,g_xmda_m.xmda203_desc, 
       g_xmda_m.xmda024_desc,g_xmda_m.xmda044_desc,g_xmda_m.xmda025_desc,g_xmda_m.xmda026_desc,g_xmda_m.xmda020_desc, 
       g_xmda_m.xmda036_desc,g_xmda_m.xmdaownid_desc,g_xmda_m.xmdaowndp_desc,g_xmda_m.xmdacrtid_desc, 
       g_xmda_m.xmdacrtdp_desc,g_xmda_m.xmdamodid_desc,g_xmda_m.xmdacnfid_desc
 
   #檢查是否允許此動作
   IF NOT axmt500_action_chk() THEN
      CLOSE axmt500_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_xmda_m.xmdadocno,g_xmda_m.xmda001,g_xmda_m.xmdadocno_desc,g_xmda_m.xmdadocdt,g_xmda_m.xmda004, 
       g_xmda_m.xmda004_desc,g_xmda_m.xmda002,g_xmda_m.xmda002_desc,g_xmda_m.xmda003,g_xmda_m.xmda003_desc, 
       g_xmda_m.xmdasite,g_xmda_m.xmdastus,g_xmda_m.xmda005,g_xmda_m.xmda006,g_xmda_m.xmda007,g_xmda_m.xmda008, 
       g_xmda_m.xmda033,g_xmda_m.xmda027,g_xmda_m.xmda027_desc,g_xmda_m.xmda009,g_xmda_m.xmda009_desc, 
       g_xmda_m.xmda010,g_xmda_m.xmda010_desc,g_xmda_m.xmda011,g_xmda_m.xmda011_desc,g_xmda_m.xmda012, 
       g_xmda_m.xmda013,g_xmda_m.xmda035,g_xmda_m.xmda035_desc,g_xmda_m.xmda015,g_xmda_m.xmda015_desc, 
       g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda017_desc,g_xmda_m.xmda018,g_xmda_m.xmda018_desc, 
       g_xmda_m.xmda019,g_xmda_m.xmda023,g_xmda_m.xmda023_desc,g_xmda_m.xmda032,g_xmda_m.xmda032_desc, 
       g_xmda_m.xmda071,g_xmda_m.xmda050,g_xmda_m.xmda021,g_xmda_m.xmda021_desc,g_xmda_m.xmda022,g_xmda_m.xmda022_desc, 
       g_xmda_m.xmda034,g_xmda_m.xmda034_desc,g_xmda_m.xmda203,g_xmda_m.xmda203_desc,g_xmda_m.xmda024, 
       g_xmda_m.xmda024_desc,g_xmda_m.xmda048,g_xmda_m.xmda049,g_xmda_m.xmda044,g_xmda_m.xmda044_desc, 
       g_xmda_m.xmda030,g_xmda_m.xmda031,g_xmda_m.xmda045,g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028, 
       g_xmda_m.xmda043,g_xmda_m.xmda025,g_xmda_m.xmda025_desc,g_xmda_m.oofb0171,g_xmda_m.xmda026,g_xmda_m.xmda026_desc, 
       g_xmda_m.oofb0172,g_xmda_m.xmda020,g_xmda_m.xmda020_desc,g_xmda_m.xmda037,g_xmda_m.xmda037_desc, 
       g_xmda_m.xmda038,g_xmda_m.xmda038_desc,g_xmda_m.xmda036,g_xmda_m.xmda036_desc,g_xmda_m.xmda039, 
       g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdaownid,g_xmda_m.xmdaownid_desc,g_xmda_m.xmdaowndp, 
       g_xmda_m.xmdaowndp_desc,g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtid_desc,g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdp_desc, 
       g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid,g_xmda_m.xmdamodid_desc,g_xmda_m.xmdamoddt,g_xmda_m.xmdacnfid, 
       g_xmda_m.xmdacnfid_desc,g_xmda_m.xmdacnfdt
 
   CASE g_xmda_m.xmdastus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "C"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
      WHEN "H"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/hold.png")
      WHEN "UH"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unhold.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_xmda_m.xmdastus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "C"
               HIDE OPTION "closed"
            WHEN "H"
               HIDE OPTION "hold"
            WHEN "UH"
               HIDE OPTION "unhold"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      #應用 a36 樣板自動產生(Version:4)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT axmt500_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE axmt500_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT axmt500_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE axmt500_cl
            RETURN
         END IF
 
 
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制
            {<point name="statechange.unconfirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制
            {<point name="statechange.confirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制
            {<point name="statechange.approved"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制
      #      {<point name="statechange.withdraw"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制
            {<point name="statechange.rejection"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制
      #      {<point name="statechange.signing"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION closed
         IF cl_auth_chk_act("closed") THEN
            LET lc_state = "C"
            #add-point:action控制
            {<point name="statechange.closed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION hold
         IF cl_auth_chk_act("hold") THEN
            LET lc_state = "H"
            #add-point:action控制
            {<point name="statechange.hold"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION unhold
         IF cl_auth_chk_act("unhold") THEN
            LET lc_state = "UH"
            #add-point:action控制
            {<point name="statechange.unhold"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制
            {<point name="statechange.invalid"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "C"
      AND lc_state <> "H"
      AND lc_state <> "UH"
      AND lc_state <> "X"
      ) OR 
      g_xmda_m.xmdastus = lc_state OR cl_null(lc_state) THEN
      CLOSE axmt500_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_xmda_m.xmdamodid = g_user
   LET g_xmda_m.xmdamoddt = cl_get_current()
   LET g_xmda_m.xmdastus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE xmda_t 
      SET (xmdastus,xmdamodid,xmdamoddt) 
        = (g_xmda_m.xmdastus,g_xmda_m.xmdamodid,g_xmda_m.xmdamoddt)     
    WHERE xmdaent = g_enterprise AND xmdadocno = g_xmda_m.xmdadocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "H"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/hold.png")
         WHEN "UH"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unhold.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE axmt500_master_referesh USING g_xmda_m.xmdadocno INTO g_xmda_m.xmdadocno,g_xmda_m.xmda001, 
          g_xmda_m.xmdadocdt,g_xmda_m.xmda004,g_xmda_m.xmda002,g_xmda_m.xmda003,g_xmda_m.xmdasite,g_xmda_m.xmdastus, 
          g_xmda_m.xmda005,g_xmda_m.xmda006,g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda033,g_xmda_m.xmda027, 
          g_xmda_m.xmda009,g_xmda_m.xmda010,g_xmda_m.xmda011,g_xmda_m.xmda012,g_xmda_m.xmda013,g_xmda_m.xmda035, 
          g_xmda_m.xmda015,g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda018,g_xmda_m.xmda019,g_xmda_m.xmda023, 
          g_xmda_m.xmda032,g_xmda_m.xmda071,g_xmda_m.xmda050,g_xmda_m.xmda021,g_xmda_m.xmda022,g_xmda_m.xmda034, 
          g_xmda_m.xmda203,g_xmda_m.xmda024,g_xmda_m.xmda048,g_xmda_m.xmda049,g_xmda_m.xmda044,g_xmda_m.xmda030, 
          g_xmda_m.xmda031,g_xmda_m.xmda045,g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028,g_xmda_m.xmda043, 
          g_xmda_m.xmda025,g_xmda_m.xmda026,g_xmda_m.xmda020,g_xmda_m.xmda037,g_xmda_m.xmda038,g_xmda_m.xmda036, 
          g_xmda_m.xmda039,g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdaownid,g_xmda_m.xmdaowndp,g_xmda_m.xmdacrtid, 
          g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid,g_xmda_m.xmdamoddt,g_xmda_m.xmdacnfid, 
          g_xmda_m.xmdacnfdt,g_xmda_m.xmda004_desc,g_xmda_m.xmda002_desc,g_xmda_m.xmda003_desc,g_xmda_m.xmda009_desc, 
          g_xmda_m.xmda010_desc,g_xmda_m.xmda015_desc,g_xmda_m.xmda017_desc,g_xmda_m.xmda018_desc,g_xmda_m.xmda023_desc, 
          g_xmda_m.xmda032_desc,g_xmda_m.xmda021_desc,g_xmda_m.xmda022_desc,g_xmda_m.xmda034_desc,g_xmda_m.xmda203_desc, 
          g_xmda_m.xmda024_desc,g_xmda_m.xmda044_desc,g_xmda_m.xmda025_desc,g_xmda_m.xmda026_desc,g_xmda_m.xmda020_desc, 
          g_xmda_m.xmda036_desc,g_xmda_m.xmdaownid_desc,g_xmda_m.xmdaowndp_desc,g_xmda_m.xmdacrtid_desc, 
          g_xmda_m.xmdacrtdp_desc,g_xmda_m.xmdamodid_desc,g_xmda_m.xmdacnfid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_xmda_m.xmdadocno,g_xmda_m.xmda001,g_xmda_m.xmdadocno_desc,g_xmda_m.xmdadocdt, 
          g_xmda_m.xmda004,g_xmda_m.xmda004_desc,g_xmda_m.xmda002,g_xmda_m.xmda002_desc,g_xmda_m.xmda003, 
          g_xmda_m.xmda003_desc,g_xmda_m.xmdasite,g_xmda_m.xmdastus,g_xmda_m.xmda005,g_xmda_m.xmda006, 
          g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda033,g_xmda_m.xmda027,g_xmda_m.xmda027_desc, 
          g_xmda_m.xmda009,g_xmda_m.xmda009_desc,g_xmda_m.xmda010,g_xmda_m.xmda010_desc,g_xmda_m.xmda011, 
          g_xmda_m.xmda011_desc,g_xmda_m.xmda012,g_xmda_m.xmda013,g_xmda_m.xmda035,g_xmda_m.xmda035_desc, 
          g_xmda_m.xmda015,g_xmda_m.xmda015_desc,g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda017_desc, 
          g_xmda_m.xmda018,g_xmda_m.xmda018_desc,g_xmda_m.xmda019,g_xmda_m.xmda023,g_xmda_m.xmda023_desc, 
          g_xmda_m.xmda032,g_xmda_m.xmda032_desc,g_xmda_m.xmda071,g_xmda_m.xmda050,g_xmda_m.xmda021, 
          g_xmda_m.xmda021_desc,g_xmda_m.xmda022,g_xmda_m.xmda022_desc,g_xmda_m.xmda034,g_xmda_m.xmda034_desc, 
          g_xmda_m.xmda203,g_xmda_m.xmda203_desc,g_xmda_m.xmda024,g_xmda_m.xmda024_desc,g_xmda_m.xmda048, 
          g_xmda_m.xmda049,g_xmda_m.xmda044,g_xmda_m.xmda044_desc,g_xmda_m.xmda030,g_xmda_m.xmda031, 
          g_xmda_m.xmda045,g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028,g_xmda_m.xmda043,g_xmda_m.xmda025, 
          g_xmda_m.xmda025_desc,g_xmda_m.oofb0171,g_xmda_m.xmda026,g_xmda_m.xmda026_desc,g_xmda_m.oofb0172, 
          g_xmda_m.xmda020,g_xmda_m.xmda020_desc,g_xmda_m.xmda037,g_xmda_m.xmda037_desc,g_xmda_m.xmda038, 
          g_xmda_m.xmda038_desc,g_xmda_m.xmda036,g_xmda_m.xmda036_desc,g_xmda_m.xmda039,g_xmda_m.xmda041, 
          g_xmda_m.xmda042,g_xmda_m.xmdaownid,g_xmda_m.xmdaownid_desc,g_xmda_m.xmdaowndp,g_xmda_m.xmdaowndp_desc, 
          g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtid_desc,g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdp_desc,g_xmda_m.xmdacrtdt, 
          g_xmda_m.xmdamodid,g_xmda_m.xmdamodid_desc,g_xmda_m.xmdamoddt,g_xmda_m.xmdacnfid,g_xmda_m.xmdacnfid_desc, 
          g_xmda_m.xmdacnfdt
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE axmt500_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL axmt500_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
]]>
  </section>
  <section id="axmt500.idx_chk" ver="10" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION axmt500_idx_chk()
   #add-point:idx_chk段define(客製用)
   {<point name="idx_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="idx_chk.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理 
   {<point name="idx_chk.pre_function"/>}
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_xmdc_d.getLength() THEN
         LET g_detail_idx = g_xmdc_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmdc_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmdc_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_xmdc2_d.getLength() THEN
         LET g_detail_idx = g_xmdc2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmdc2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmdc2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_xmdc3_d.getLength() THEN
         LET g_detail_idx = g_xmdc3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmdc3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmdc3_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 4 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail4")
      IF g_detail_idx > g_xmdc4_d.getLength() THEN
         LET g_detail_idx = g_xmdc4_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmdc4_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmdc4_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 5 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail5")
      IF g_detail_idx > g_xmdc5_d.getLength() THEN
         LET g_detail_idx = g_xmdc5_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmdc5_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmdc5_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 6 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail6")
      IF g_detail_idx > g_xmdc6_d.getLength() THEN
         LET g_detail_idx = g_xmdc6_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmdc6_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmdc6_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="axmt500.b_fill2" ver="13" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION axmt500_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用)
   {<point name="b_fill2.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="b_fill2.define"/>} 
   #end add-point
   
   #add-point:Function前置處理 
   {<point name="b_fill2.pre_function"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL axmt500_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
]]>
  </section>
  <section id="axmt500.fill_chk" ver="16" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION axmt500_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用)
   {<point name="fill_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="fill_chk.define"/>} 
   #end add-point
   
   #add-point:Function前置處理
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1')  AND 
      (cl_null(g_wc2_table4) OR g_wc2_table4.trim() = '1=1')  AND 
      (cl_null(g_wc2_table5) OR g_wc2_table5.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="axmt500.status_show" ver="3" ch="" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION axmt500_status_show()
   #add-point:status_show段define(客製用)
   {<point name="status_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="status_show.define"/>} 
   #end add-point
   
   #add-point:status_show段status_show
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="axmt500.mask_functions" ver="1" ch="" status="" src="s" readonly="">
    <![CDATA[&include "erp/axm/axmt500_mask.4gl"
]]>
  </section>
  <section id="axmt500.signature" ver="41" ch="" status="" src="s" readonly="">
    <![CDATA[   #應用 a39 樣板自動產生(Version:9)
#+ BPM提交
PRIVATE FUNCTION axmt500_send()
   #add-point:send段define(客製用)
   {<point name="send.define_customerization" edit="c" mark="Y"/>}
   #end add-point 
   #add-point:send段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="send.define"/>}
   #end add-point 
   
   #add-point:Function前置處理 
   {<point name="send.pre_function"/>}
   #end add-point
   
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
   LET g_wc2_table2 = " 1=1"
   LET g_wc2_table3 = " 1=1"
   LET g_wc2_table4 = " 1=1"
   LET g_wc2_table5 = " 1=1"
 
 
   CALL axmt500_show()
   CALL axmt500_set_pk_array()
   
   #add-point: 初始化的ADP
   {<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_xmda_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_xmdc_d))
   CALL cl_bpm_set_detail_data("s_detail2", util.JSONArray.fromFGL(g_xmdc2_d))
   CALL cl_bpm_set_detail_data("s_detail3", util.JSONArray.fromFGL(g_xmdc3_d))
   CALL cl_bpm_set_detail_data("s_detail4", util.JSONArray.fromFGL(g_xmdc4_d))
   CALL cl_bpm_set_detail_data("s_detail5", util.JSONArray.fromFGL(g_xmdc5_d))
   CALL cl_bpm_set_detail_data("s_detail6", util.JSONArray.fromFGL(g_xmdc6_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP
   {<point name="send.before_cli" />}
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP
   {<point name="send.after_send" />}
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL axmt500_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL axmt500_ui_headershow()
   CALL axmt500_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
#應用 a40 樣板自動產生(Version:7)
#+ BPM抽單
PRIVATE FUNCTION axmt500_draw_out()
   #add-point:draw段define
   {<point name="draw.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:draw段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="draw.define"/>}
   #end add-point
   
   #add-point:Function前置處理 
   {<point name="draw.pre_function"/>}
   #end add-point
   
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_row].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL axmt500_ui_headershow()  
   CALL axmt500_ui_detailshow()
 
   #add-point:Function後置處理 
   {<point name="draw.after_function"/>}
   #end add-point
 
   RETURN TRUE
   
END FUNCTION
 
 
 
]]>
  </section>
  <section id="axmt500.set_pk_array" ver="9" ch="" status="" src="s" readonly="">
    <![CDATA[   #應用 a51 樣板自動產生(Version:7)
#+ 給予pk_array內容
PRIVATE FUNCTION axmt500_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:Function前置處理
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_xmda_m.xmdadocno
   LET g_pk_array[1].column = 'xmdadocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="axmt500.other_dialog" ver="2" ch="" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="axmt500.msgcentre_notify" ver="7" ch="" status="" src="s" readonly="">
    <![CDATA[#應用 a66 樣板自動產生(Version:5)
PRIVATE FUNCTION axmt500_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="msgcentre_notify.define"/>}
   #end add-point
   
   #add-point:Function前置處理 
   {<point name="msgcentre_notify.pre_function"/>}
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL axmt500_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_xmda_m)
 
   #add-point:msgcentre其他通知
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
]]>
  </section>
  <section id="axmt500.action_chk" ver="5" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION axmt500_action_chk()
   #add-point:action_chk段define(客製用)
   {<point name="action_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="action_chk.define"/>} 
   #end add-point
   
   #add-point:action_chk段action_chk
   {<point name="action_chk.action_chk"/>}
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="axmt500.other_function" ver="2" ch="" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
</add_points>
