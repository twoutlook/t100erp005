<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="axmi400" std_prog="axmi400" erpver="1.0" module="AXM" ver="2" env="s" zone="t10dev" booking="N" type="M" identity="s">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="function.axmi400_xmes001_chk" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 版本狀態碼檢查
# Memo...........:
# Usage..........: CALL axmi400_xmes001_chk()
#                  RETURNING r_success
# Input parameter: 
#                : 
# Return code....: r_success      TRUE/FALSE
#                : 
# Date & Author..: 14/06/19 By emma
# Modify.........:
################################################################################
PRIVATE FUNCTION axmi400_xmes001_chk()
DEFINE r_success         LIKE type_t.num5

   LET r_success = TRUE
   
   IF cl_null(g_xmes_m.xmesdocno) AND cl_null(g_xmes_m.xmes001) THEN 
      RETURN r_success
   END IF
   
   #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
   INITIALIZE g_chkparam.* TO NULL
   
   #設定g_chkparam.*的參數
   LET g_chkparam.arg1 = g_xmes_m.xmesdocno
      
   #呼叫檢查存在並帶值的library
   IF NOT cl_chk_exist("v_xmes001") THEN
      #檢查失敗時後續處理
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.axmi400_xmet003_ref" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 抓取部位名稱
# Memo...........:
# Usage..........: CALL axmi400_xmet003_ref()
#                  
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 14/06/19 By emma
# Modify.........:
################################################################################
PRIVATE FUNCTION axmi400_xmet003_ref()
   
   LET g_xmet_d[l_ac].xmet003_desc = ''
   DISPLAY BY NAME g_xmet_d[l_ac].xmet003_desc
   
   IF cl_null(g_xmet_d[l_ac].xmet003) THEN
      RETURN
   END IF
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmet_d[l_ac].xmet003
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='215' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmet_d[l_ac].xmet003_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmet_d[l_ac].xmet003_desc
   
END FUNCTION]]>
  </point>
  <point name="function.axmi400_xmet004_ref" order="3" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 抓取作業名稱
# Memo...........:
# Usage..........: CALL axmi400_xmet004_ref()
#                  
# Input parameter: 
#                :
# Return code....: 
#                : 
# Date & Author..: 14/06/19 By emma
# Modify.........:
################################################################################
PRIVATE FUNCTION axmi400_xmet004_ref()
   
   LET g_xmet_d[l_ac].xmet004_desc = ''
   DISPLAY BY NAME g_xmet_d[l_ac].xmet004_desc
   
   IF cl_null(g_xmet_d[l_ac].xmet004) THEN
      RETURN
   END IF
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmet_d[l_ac].xmet004
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='221' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmet_d[l_ac].xmet004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmet_d[l_ac].xmet004_desc
END FUNCTION]]>
  </point>
  <point name="function.axmi400_xmet005_ref" order="4" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 抓取料號的品名、規格
# Memo...........:
# Usage..........: CALL axmi400_xmet005_ref()
#                  
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 14/06/19 By emma
# Modify.........:
################################################################################
PRIVATE FUNCTION axmi400_xmet005_ref()
   LET g_xmet_d[l_ac].xmet005_desc = ''
   LET g_xmet_d[l_ac].xmet005_desc_desc = ''
   DISPLAY BY NAME g_xmet_d[l_ac].xmet005_desc
   DISPLAY BY NAME g_xmet_d[l_ac].xmet005_desc_desc
   
   IF cl_null(g_xmet_d[l_ac].xmet005) THEN
      RETURN
   END IF
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmet_d[l_ac].xmet005
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmet_d[l_ac].xmet005_desc = '', g_rtn_fields[1] , ''
   LET g_xmet_d[l_ac].xmet005_desc_desc = '', g_rtn_fields[2] , ''
   DISPLAY BY NAME g_xmet_d[l_ac].xmet005_desc
   DISPLAY BY NAME g_xmet_d[l_ac].xmet005_desc_desc
END FUNCTION]]>
  </point>
  <point name="function.axmi400_xmet013_ref" order="5" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 抓取廠商名稱
# Memo...........:
# Usage..........: CALL axmi400_xmet013_ref()
#                  
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 14/06/19 By emma
# Modify.........:
################################################################################
PRIVATE FUNCTION axmi400_xmet013_ref()
   
   LET g_xmet_d[l_ac].xmet013_desc = ''
   DISPLAY BY NAME g_xmet_d[l_ac].xmet013_desc
   
   IF cl_null(g_xmet_d[l_ac].xmet013) THEN
      RETURN
   END IF
   
    INITIALIZE g_ref_fields TO NULL
    LET g_ref_fields[1] = g_xmet_d[l_ac].xmet013
    CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
    LET g_xmet_d[l_ac].xmet013_desc = '', g_rtn_fields[1] , ''
    DISPLAY BY NAME g_xmet_d[l_ac].xmet013_desc
END FUNCTION]]>
  </point>
  <point name="function.axmi400_xmeu002_ref" order="6" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 抓取部位名稱
# Memo...........:
# Usage..........: CALL axmi400_xmeu002_ref()
#                  
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 14/06/19 By emma
# Modify.........:
################################################################################
PRIVATE FUNCTION axmi400_xmeu002_ref()
   
   LET g_xmet2_d[l_ac].xmeu002_desc = ''
   DISPLAY BY NAME g_xmet2_d[l_ac].xmeu002_desc
   
   IF cl_null(g_xmet2_d[l_ac].xmeu002) THEN
      RETURN
   END IF
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmet2_d[l_ac].xmeu002
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='215' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmet2_d[l_ac].xmeu002_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmet2_d[l_ac].xmeu002_desc
END FUNCTION]]>
  </point>
  <point name="function.axmi400_xmeu003_ref" order="7" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 抓取料號品名、規格
# Memo...........:
# Usage..........: CALL axmi400_xmeu003_ref()
#                  
# Input parameter: 
#                : 
# Return code....:
#                : 
# Date & Author..: 14/06/19 By emma
# Modify.........:
################################################################################
PRIVATE FUNCTION axmi400_xmeu003_ref()
   LET g_xmet2_d[l_ac].xmeu003_desc = ''
   LET g_xmet2_d[l_ac].xmeu003_desc_desc = ''
   DISPLAY BY NAME g_xmet2_d[l_ac].xmeu003_desc
   DISPLAY BY NAME g_xmet2_d[l_ac].xmeu003_desc_desc
   
   IF cl_null(g_xmet2_d[l_ac].xmeu003) THEN
      RETURN
   END IF
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmet2_d[l_ac].xmeu003
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmet2_d[l_ac].xmeu003_desc = '', g_rtn_fields[1] , ''
   LET g_xmet2_d[l_ac].xmeu003_desc_desc = '', g_rtn_fields[2] , ''
   DISPLAY BY NAME g_xmet2_d[l_ac].xmeu003_desc
   DISPLAY BY NAME g_xmet2_d[l_ac].xmeu003_desc_desc
END FUNCTION]]>
  </point>
  <point name="function.axmi400_xmeu005_ref" order="8" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 抓取作業名稱
# Memo...........:
# Usage..........: CALL axmi400_xmeu005_ref()
#                 
# Input parameter: 
#                :
# Return code....: 
#                : 
# Date & Author..: 14/06/19 By emma
# Modify.........:
################################################################################
PRIVATE FUNCTION axmi400_xmeu005_ref()
   LET g_xmet2_d[l_ac].xmeu005_desc = ''
   DISPLAY BY NAME g_xmet2_d[l_ac].xmeu005_desc
   
   IF cl_null(g_xmet2_d[l_ac].xmeu005) THEN
      RETURN
   END IF
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmet2_d[l_ac].xmeu005
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='221' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmet2_d[l_ac].xmeu005_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmet2_d[l_ac].xmeu005_desc
END FUNCTION]]>
  </point>
  <point name="function.axmi400_xmeu007_ref" order="9" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 抓取工作站說明
# Memo...........:
# Usage..........: CALL axmi400_xmeu007_ref()
#                  
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 14/06/19 By emma
# Modify.........:
################################################################################
PRIVATE FUNCTION axmi400_xmeu007_ref()
   LET g_xmet2_d[l_ac].xmeu007_desc = ''
   DISPLAY BY NAME g_xmet2_d[l_ac].xmeu007_desc
   
   IF cl_null(g_xmet2_d[l_ac].xmeu007) THEN
      RETURN
   END IF
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmet2_d[l_ac].xmeu007
   CALL ap_ref_array2(g_ref_fields,"SELECT ecaa002 FROM ecaa_t WHERE ecaaent='"||g_enterprise||"' AND ecaasite='" ||g_site|| "' AND ecaa001=? ","") RETURNING g_rtn_fields
   LET g_xmet2_d[l_ac].xmeu007_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmet2_d[l_ac].xmeu007_desc
END FUNCTION]]>
  </point>
  <point name="function.axmi400_xmesdocno_ref" order="10" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 抓取範本說明、助記碼
# Memo...........:
# Usage..........: CALL axmi400_xmesdocno_ref()
#                  
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 14/06/19 By emma
# Modify.........:
################################################################################
PRIVATE FUNCTION axmi400_xmesdocno_ref()
   LET g_xmes_m.xmesl003 = ''
   LET g_xmes_m.xmesl004 = ''
   DISPLAY BY NAME g_xmes_m.xmesl003
   DISPLAY BY NAME g_xmes_m.xmesl004
   
   IF cl_null(g_xmes_m.xmesdocno) THEN
      RETURN
   END IF
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmes_m.xmesdocno
   CALL ap_ref_array2(g_ref_fields," SELECT xmesl003,xmesl004 FROM xmesl_t WHERE xmeslent = '"
       ||g_enterprise||"' AND xmesldocno = ? AND xmesl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmes_m.xmesl003 = '', g_rtn_fields[1] , ''
   LET g_xmes_m.xmesl004 = '', g_rtn_fields[2] , ''
   DISPLAY BY NAME g_xmes_m.xmesl003
   DISPLAY BY NAME g_xmes_m.xmesl004

END FUNCTION]]>
  </point>
  <point name="function.axmi400_xmet008_ref" order="11" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 抓取單位說明
# Memo...........:
# Usage..........: CALL axmi400_xmet008_ref()
#                  
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 14/07/10 By emma
# Modify.........:
################################################################################
PRIVATE FUNCTION axmi400_xmet008_ref()
   LET g_xmet_d[l_ac].xmet008_desc = ''
   DISPLAY BY NAME g_xmet_d[l_ac].xmet008_desc
   
   IF cl_null(g_xmet_d[l_ac].xmet008) THEN
      RETURN
   END IF
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmet_d[l_ac].xmet008
   CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"' ","") RETURNING g_rtn_fields
   LET g_xmet_d[l_ac].xmet008_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmet_d[l_ac].xmet008_desc
END FUNCTION]]>
  </point>
  <point name="function.axmi400_xmet012_ref" order="12" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 抓取幣別說明
# Memo...........:
# Usage..........: CALL axmi400_xmet012_ref()
#                  
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 14/07/10 By emma
# Modify.........:
################################################################################
PRIVATE FUNCTION axmi400_xmet012_ref()
   LET g_xmet_d[l_ac].xmet012_desc = ''
   DISPLAY BY NAME g_xmet_d[l_ac].xmet012_desc
   
   IF cl_null(g_xmet_d[l_ac].xmet012) THEN
      RETURN
   END IF
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmet_d[l_ac].xmet012
   CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"' ","") RETURNING g_rtn_fields
   LET g_xmet_d[l_ac].xmet012_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmet_d[l_ac].xmet012_desc
END FUNCTION]]>
  </point>
  <point name="construct.c.page1.xmet003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '215'
            CALL q_oocq002_5()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmet003  #顯示到畫面上
            NEXT FIELD xmet003                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.xmet004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '221'
            CALL q_oocq002_5()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmet004  #顯示到畫面上
            NEXT FIELD xmet004                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.xmet005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaf001_15()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmet005  #顯示到畫面上
            NEXT FIELD xmet005                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.xmet006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[          ]]>
  </point>
  <point name="construct.c.page1.xmet008" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmet008  #顯示到畫面上
            NEXT FIELD xmet008                     #返回原欄位]]>
  </point>
  <point name="construct.c.page1.xmet012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            CALL q_ooaj002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmet012  #顯示到畫面上
            NEXT FIELD xmet012                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.xmet013" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmet013  #顯示到畫面上
            NEXT FIELD xmet013                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.xmeu002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '215'
            CALL q_oocq002_5()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmeu002  #顯示到畫面上
            NEXT FIELD xmeu002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.xmeu003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaf001_15()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmeu003  #顯示到畫面上
            NEXT FIELD xmeu003                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.xmeu005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '221'
            CALL q_oocq002_5()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmeu005  #顯示到畫面上
            NEXT FIELD xmeu005                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.xmeu007" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ecaa001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmeu007  #顯示到畫面上
            NEXT FIELD xmeu007                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.xmescrtdp" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmescrtdp  #顯示到畫面上
            NEXT FIELD xmescrtdp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.xmescrtid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmescrtid  #顯示到畫面上
            NEXT FIELD xmescrtid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.xmesdocno" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xmesdocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmesdocno  #顯示到畫面上
            NEXT FIELD xmesdocno                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.xmesmodid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmesmodid  #顯示到畫面上
            NEXT FIELD xmesmodid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.xmesowndp" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmesowndp  #顯示到畫面上
            NEXT FIELD xmesowndp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.xmesownid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmesownid  #顯示到畫面上
            NEXT FIELD xmesownid                     #返回原欄位
    

]]>
  </point>
  <point name="input.a.page1.xmet002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            #此段落由子樣板a05產生
            IF  g_xmes_m.xmesdocno IS NOT NULL AND g_xmes_m.xmes001 IS NOT NULL AND g_xmet_d[g_detail_idx].xmet002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmes_m.xmesdocno != g_xmesdocno_t OR g_xmes_m.xmes001 != g_xmes001_t OR g_xmet_d[g_detail_idx].xmet002 != g_xmet_d_t.xmet002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmet_t WHERE "||"xmetent = '" ||g_enterprise|| "' AND xmetsite = '" ||g_site|| "' AND "||"xmetdocno = '"||g_xmes_m.xmesdocno ||"' AND "|| "xmet001 = '"||g_xmes_m.xmes001 ||"' AND "|| "xmet002 = '"||g_xmet_d[g_detail_idx].xmet002 ||"'",'std-00004',0) THEN 
                     LET g_xmet_d[g_detail_idx].xmet002 = g_xmet_d_t.xmet002
                     DISPLAY BY NAME g_xmet_d[g_detail_idx].xmet002 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.xmet003" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #若是空值，則給予一個空白值
            IF g_xmet_d[l_ac].xmet003 IS NULL THEN
               LET g_xmet_d[l_ac].xmet003 = ' '
            END IF
            
            LET g_xmet_d[l_ac].xmet003_desc = ''
            DISPLAY BY NAME g_xmet_d[l_ac].xmet003_desc
            IF NOT cl_null(g_xmet_d[l_ac].xmet003) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmet_d[l_ac].xmet003 != g_xmet_d_t.xmet003 OR g_xmet_d_t.xmet003 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  IF NOT s_azzi650_chk_exist('215',g_xmet_d[l_ac].xmet003) THEN
                     LET g_xmet_d[l_ac].xmet003 = g_xmet_d_t.xmet003
                     DISPLAY BY NAME g_xmet_d[l_ac].xmet003
                     CALL axmi400_xmet003_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL axmi400_xmet003_ref()]]>
  </point>
  <point name="input.a.page1.xmet004" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_xmet_d[l_ac].xmet004_desc = ''
            DISPLAY BY NAME g_xmet_d[l_ac].xmet004_desc
            IF NOT cl_null(g_xmet_d[l_ac].xmet004) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmet_d[l_ac].xmet004 != g_xmet_d_t.xmet004 OR g_xmet_d_t.xmet004 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  IF NOT s_azzi650_chk_exist('221',g_xmet_d[l_ac].xmet004) THEN
                     LET g_xmet_d[l_ac].xmet004 = g_xmet_d_t.xmet004
                     DISPLAY BY NAME g_xmet_d[l_ac].xmet004
                     CALL axmi400_xmet004_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL axmi400_xmet004_ref()
           ]]>
  </point>
  <point name="input.a.page1.xmet005" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_xmet_d[l_ac].xmet005_desc = ''
            LET g_xmet_d[l_ac].xmet005_desc_desc = ''
            DISPLAY BY NAME g_xmet_d[l_ac].xmet005_desc
            DISPLAY BY NAME g_xmet_d[l_ac].xmet005_desc_desc
            IF NOT cl_null(g_xmet_d[l_ac].xmet005) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmet_d[l_ac].xmet005 != g_xmet_d_t.xmet005 OR g_xmet_d_t.xmet005 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmet_d[l_ac].xmet005
                  IF NOT cl_chk_exist("v_imaf001_14") THEN
                     LET g_xmet_d[l_ac].xmet005 = g_xmet_d_t.xmet005
                     DISPLAY BY NAME g_xmet_d[l_ac].xmet005
                     CALL axmi400_xmet005_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL axmi400_xmet005_ref()
            
            #預設[T:料件據點進銷存檔]設置的銷售單位
            #先判斷單位是否有值，沒值才給預設
            IF cl_null(g_xmet_d[l_ac].xmet008) THEN
               SELECT imaf112 INTO g_xmet_d[l_ac].xmet008
                 FROM imaf_t
                WHERE imafent = g_enterprise AND imafsite = g_site AND imaf001 = g_xmet_d[l_ac].xmet005
            END IF
            #當料件有使用產品特徵功能時此欄位才可輸入
            CALL axmi400_set_entry_b(l_cmd)
            CALL axmi400_set_no_entry_b(l_cmd)]]>
  </point>
  <point name="input.a.page1.xmet006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.a.page1.xmet008" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_xmet_d[l_ac].xmet008_desc = ''
            DISPLAY BY NAME g_xmet_d[l_ac].xmet008_desc
            IF NOT cl_null(g_xmet_d[l_ac].xmet008) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmet_d[l_ac].xmet008 != g_xmet_d_t.xmet008 OR g_xmet_d_t.xmet008 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmet_d[l_ac].xmet005
                  LET g_chkparam.arg2 = g_xmet_d[l_ac].xmet008
                  IF NOT cl_chk_exist("v_imao002") THEN
                     LET g_xmet_d[l_ac].xmet008 = g_xmet_d_t.xmet008
                     DISPLAY BY NAME g_xmet_d[l_ac].xmet008
                     CALL axmi400_xmet008_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL axmi400_xmet008_ref()]]>
  </point>
  <point name="input.a.page1.xmet009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.a.page1.xmet010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[       ]]>
  </point>
  <point name="input.a.page1.xmet012" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_xmet_d[l_ac].xmet012_desc = ''
            DISPLAY BY NAME g_xmet_d[l_ac].xmet012_desc
            IF NOT cl_null(g_xmet_d[l_ac].xmet012) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmet_d[l_ac].xmet012 != g_xmet_d_t.xmet012 OR g_xmet_d_t.xmet012 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_site
                  LET g_chkparam.arg2 = g_xmet_d[l_ac].xmet012
                  IF NOT cl_chk_exist("v_ooaj002") THEN
                     LET g_xmet_d[l_ac].xmet012 = g_xmet_d_t.xmet012
                     DISPLAY BY NAME g_xmet_d[l_ac].xmet012
                     CALL axmi400_xmet012_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL axmi400_xmet012_ref()]]>
  </point>
  <point name="input.a.page1.xmet013" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_xmet_d[l_ac].xmet013_desc = ''
            DISPLAY BY NAME g_xmet_d[l_ac].xmet013_desc
            IF NOT cl_null(g_xmet_d[l_ac].xmet013) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmet_d[l_ac].xmet013 != g_xmet_d_t.xmet013 OR g_xmet_d_t.xmet013 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmet_d[l_ac].xmet013
                  IF NOT cl_chk_exist("v_pmaa001_1") THEN
                     LET g_xmet_d[l_ac].xmet013 = g_xmet_d_t.xmet013
                     DISPLAY BY NAME g_xmet_d[l_ac].xmet013
                     CALL axmi400_xmet013_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL axmi400_xmet013_ref()]]>
  </point>
  <point name="input.a.page2.xmeu002" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #如果部位編號為空值，則給一個空格
            IF g_xmet2_d[l_ac].xmeu002 IS NULL THEN
               LET g_xmet2_d[l_ac].xmeu002 = ' '
            END IF
            #重複性檢查
            IF  g_xmes_m.xmesdocno IS NOT NULL AND g_xmes_m.xmes001 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu002 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu003 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu004 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu006 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmes_m.xmesdocno != g_xmesdocno_t OR g_xmes_m.xmes001 != g_xmes001_t OR g_xmet2_d[g_detail_idx].xmeu002 != g_xmet2_d_t.xmeu002 OR g_xmet2_d[g_detail_idx].xmeu003 != g_xmet2_d_t.xmeu003 OR g_xmet2_d[g_detail_idx].xmeu004 != g_xmet2_d_t.xmeu004 OR g_xmet2_d[g_detail_idx].xmeu006 != g_xmet2_d_t.xmeu006)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmeu_t WHERE "||"xmeuent = '" ||g_enterprise|| "' AND xmeusite = '" ||g_site|| "' AND "||"xmeudocno = '"||g_xmes_m.xmesdocno ||"' AND "|| "xmeu001 = '"||g_xmes_m.xmes001 ||"' AND "|| "xmeu002 = '"||g_xmet2_d[g_detail_idx].xmeu002 ||"' AND "|| "xmeu003 = '"||g_xmet2_d[g_detail_idx].xmeu003 ||"' AND "|| "xmeu004 = '"||g_xmet2_d[g_detail_idx].xmeu004 ||"' AND "|| "xmeu006 = '"||g_xmet2_d[g_detail_idx].xmeu006 ||"'",'std-00004',0) THEN 
                     LET g_xmet2_d[l_ac].xmeu002 = g_xmet2_d_t.xmeu002
                     DISPLAY BY NAME g_xmet2_d[l_ac].xmeu002
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            #校驗帶值
            LET g_xmet2_d[l_ac].xmeu002_desc = ''
            DISPLAY BY NAME g_xmet2_d[l_ac].xmeu002_desc
            IF NOT cl_null(g_xmet2_d[l_ac].xmeu002) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmet2_d[l_ac].xmeu002 != g_xmet2_d_t.xmeu002 OR g_xmet2_d_t.xmeu002 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  IF NOT s_azzi650_chk_exist('215',g_xmet2_d[l_ac].xmeu002) THEN
                     LET g_xmet2_d[l_ac].xmeu002 = g_xmet2_d_t.xmeu002
                     DISPLAY BY NAME g_xmet2_d[l_ac].xmeu002
                     CALL axmi400_xmeu002_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL axmi400_xmeu002_ref()
 ]]>
  </point>
  <point name="input.a.page2.xmeu003" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #如果料件編號為空值，則給一個空格
            IF g_xmet2_d[l_ac].xmeu003 IS NULL THEN
               LET g_xmet2_d[l_ac].xmeu003 = ' '
            END IF
            
            #重複性檢查
            IF  g_xmes_m.xmesdocno IS NOT NULL AND g_xmes_m.xmes001 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu002 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu003 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu004 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu006 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmes_m.xmesdocno != g_xmesdocno_t OR g_xmes_m.xmes001 != g_xmes001_t OR g_xmet2_d[g_detail_idx].xmeu002 != g_xmet2_d_t.xmeu002 OR g_xmet2_d[g_detail_idx].xmeu003 != g_xmet2_d_t.xmeu003 OR g_xmet2_d[g_detail_idx].xmeu004 != g_xmet2_d_t.xmeu004 OR g_xmet2_d[g_detail_idx].xmeu006 != g_xmet2_d_t.xmeu006)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmeu_t WHERE "||"xmeuent = '" ||g_enterprise|| "' AND xmeusite = '" ||g_site|| "' AND "||"xmeudocno = '"||g_xmes_m.xmesdocno ||"' AND "|| "xmeu001 = '"||g_xmes_m.xmes001 ||"' AND "|| "xmeu002 = '"||g_xmet2_d[g_detail_idx].xmeu002 ||"' AND "|| "xmeu003 = '"||g_xmet2_d[g_detail_idx].xmeu003 ||"' AND "|| "xmeu004 = '"||g_xmet2_d[g_detail_idx].xmeu004 ||"' AND "|| "xmeu006 = '"||g_xmet2_d[g_detail_idx].xmeu006 ||"'",'std-00004',0) THEN 
                     LET g_xmet2_d[l_ac].xmeu003 = g_xmet2_d_t.xmeu003
                     DISPLAY BY NAME g_xmet2_d[l_ac].xmeu003
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            #校驗帶值
            LET g_xmet2_d[l_ac].xmeu003_desc = ''
            LET g_xmet2_d[l_ac].xmeu003_desc_desc = ''
            DISPLAY BY NAME g_xmet2_d[l_ac].xmeu003_desc
            DISPLAY BY NAME g_xmet2_d[l_ac].xmeu003_desc_desc
            IF NOT cl_null(g_xmet2_d[l_ac].xmeu003) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmet2_d[l_ac].xmeu003 != g_xmet2_d_t.xmeu003 OR g_xmet2_d_t.xmeu003 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmet2_d[l_ac].xmeu003
                  IF NOT cl_chk_exist("v_imaf001_14") THEN
                     LET g_xmet2_d[l_ac].xmeu003 = g_xmet2_d_t.xmeu003
                     DISPLAY BY NAME g_xmet2_d[l_ac].xmeu003
                     CALL axmi400_xmeu003_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL axmi400_xmeu003_ref()]]>
  </point>
  <point name="input.a.page2.xmeu004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF cl_null(g_xmet2_d[l_ac].xmeu004) THEN
               LET g_xmet2_d[l_ac].xmeu004 = ' '
            END IF
            #此段落由子樣板a05產生
            IF  g_xmes_m.xmesdocno IS NOT NULL AND g_xmes_m.xmes001 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu002 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu003 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu004 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu006 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmes_m.xmesdocno != g_xmesdocno_t OR g_xmes_m.xmes001 != g_xmes001_t OR g_xmet2_d[g_detail_idx].xmeu002 != g_xmet2_d_t.xmeu002 OR g_xmet2_d[g_detail_idx].xmeu003 != g_xmet2_d_t.xmeu003 OR g_xmet2_d[g_detail_idx].xmeu004 != g_xmet2_d_t.xmeu004 OR g_xmet2_d[g_detail_idx].xmeu006 != g_xmet2_d_t.xmeu006)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmeu_t WHERE "||"xmeuent = '" ||g_enterprise|| "' AND xmeusite = '" ||g_site|| "' AND "||"xmeudocno = '"||g_xmes_m.xmesdocno ||"' AND "|| "xmeu001 = '"||g_xmes_m.xmes001 ||"' AND "|| "xmeu002 = '"||g_xmet2_d[g_detail_idx].xmeu002 ||"' AND "|| "xmeu003 = '"||g_xmet2_d[g_detail_idx].xmeu003 ||"' AND "|| "xmeu004 = '"||g_xmet2_d[g_detail_idx].xmeu004 ||"' AND "|| "xmeu006 = '"||g_xmet2_d[g_detail_idx].xmeu006 ||"'",'std-00004',0) THEN 
                     LET g_xmet2_d[l_ac].xmeu004 =g_xmet2_d_t.xmeu004
                     DISPLAY BY NAME g_xmet2_d[l_ac].xmeu004
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
]]>
  </point>
  <point name="input.a.page2.xmeu005" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #校驗帶值
            LET g_xmet2_d[l_ac].xmeu005_desc = ''
            DISPLAY BY NAME g_xmet2_d[l_ac].xmeu005_desc
            IF NOT cl_null(g_xmet2_d[l_ac].xmeu005) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmet2_d[l_ac].xmeu005 != g_xmet2_d_t.xmeu005 OR g_xmet2_d_t.xmeu005 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  IF NOT s_azzi650_chk_exist('221',g_xmet2_d[l_ac].xmeu005) THEN
                     LET g_xmet2_d[l_ac].xmeu005 = g_xmet2_d_t.xmeu005
                     DISPLAY BY NAME g_xmet2_d[l_ac].xmeu005
                     CALL axmi400_xmeu005_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL axmi400_xmeu005_ref()
            ]]>
  </point>
  <point name="input.a.page2.xmeu006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF cl_null(g_xmet2_d[l_ac].xmeu006) THEN
               LET g_xmet2_d[l_ac].xmeu006 = ' '
            END IF
            #此段落由子樣板a05產生
            IF  g_xmes_m.xmesdocno IS NOT NULL AND g_xmes_m.xmes001 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu002 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu003 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu004 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu006 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmes_m.xmesdocno != g_xmesdocno_t OR g_xmes_m.xmes001 != g_xmes001_t OR g_xmet2_d[g_detail_idx].xmeu002 != g_xmet2_d_t.xmeu002 OR g_xmet2_d[g_detail_idx].xmeu003 != g_xmet2_d_t.xmeu003 OR g_xmet2_d[g_detail_idx].xmeu004 != g_xmet2_d_t.xmeu004 OR g_xmet2_d[g_detail_idx].xmeu006 != g_xmet2_d_t.xmeu006)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmeu_t WHERE "||"xmeuent = '" ||g_enterprise|| "' AND xmeusite = '" ||g_site|| "' AND "||"xmeudocno = '"||g_xmes_m.xmesdocno ||"' AND "|| "xmeu001 = '"||g_xmes_m.xmes001 ||"' AND "|| "xmeu002 = '"||g_xmet2_d[g_detail_idx].xmeu002 ||"' AND "|| "xmeu003 = '"||g_xmet2_d[g_detail_idx].xmeu003 ||"' AND "|| "xmeu004 = '"||g_xmet2_d[g_detail_idx].xmeu004 ||"' AND "|| "xmeu006 = '"||g_xmet2_d[g_detail_idx].xmeu006 ||"'",'std-00004',0) THEN 
                     LET g_xmet2_d[l_ac].xmeu006 =g_xmet2_d_t.xmeu006
                     DISPLAY BY NAME g_xmet2_d[l_ac].xmeu006
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.xmeu007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #校驗帶值
            LET g_xmet2_d[l_ac].xmeu007_desc = ''
            DISPLAY BY NAME g_xmet2_d[l_ac].xmeu007_desc
            IF NOT cl_null(g_xmet2_d[l_ac].xmeu007) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmet2_d[l_ac].xmeu007 != g_xmet2_d_t.xmeu007 OR g_xmet2_d_t.xmeu007 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmet2_d[l_ac].xmeu007
                  IF NOT cl_chk_exist("v_ecaa001_1") THEN
                     LET g_xmet2_d[l_ac].xmeu007 = g_xmet2_d_t.xmeu007
                     DISPLAY BY NAME g_xmet2_d[l_ac].xmeu007
                     CALL axmi400_xmeu007_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL axmi400_xmeu007_ref()
            ]]>
  </point>
  <point name="input.a.page2.xmeu008" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmet2_d[l_ac].xmeu008) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.xmeu009" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmet2_d[l_ac].xmeu009) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.xmes001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #重複性檢查
            IF NOT cl_null(g_xmes_m.xmesdocno) AND NOT cl_null(g_xmes_m.xmes001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xmes_m.xmesdocno != g_xmesdocno_t  OR g_xmes_m.xmes001 != g_xmes001_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmes_t WHERE "||"xmesent = '" ||g_enterprise|| "' AND xmessite = '" ||g_site|| "' AND "||"xmesdocno = '"||g_xmes_m.xmesdocno ||"' AND "|| "xmes001 = '"||g_xmes_m.xmes001 ||"'",'std-00004',0) THEN 
                     LET g_xmes_m.xmes001 = g_xmes_m_t.xmes001
                     DISPLAY BY NAME g_xmes_m.xmes001 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF   
            #校驗
            IF NOT cl_null(g_xmes_m.xmesdocno) AND NOT cl_null(g_xmes_m.xmes001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xmes_m.xmesdocno != g_xmesdocno_t  OR g_xmes_m.xmes001 != g_xmes001_t )) THEN 
                  IF NOT axmi400_xmes001_chk() THEN
                     LET g_xmes_m.xmes001 = g_xmes_m_t.xmes001
                     DISPLAY BY NAME g_xmes_m.xmes001
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF]]>
  </point>
  <point name="input.a.xmesdocno" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            #校驗
            IF NOT cl_null(g_xmes_m.xmesdocno) AND NOT cl_null(g_xmes_m.xmes001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xmes_m.xmesdocno != g_xmesdocno_t  OR g_xmes_m.xmes001 != g_xmes001_t )) THEN 
                  IF NOT axmi400_xmes001_chk() THEN
                     LET g_xmes_m.xmesdocno = g_xmesdocno_t
                     DISPLAY BY NAME g_xmes_m.xmesdocno
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
]]>
  </point>
  <point name="input.b.page1.xmet002" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.b.page1.xmet006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF l_cmd = 'a' AND NOT cl_null(g_xmet_d[l_ac].xmet005) THEN
               CALL s_feature_single(g_xmet_d[l_ac].xmet005,g_xmet_d[l_ac].xmet006,g_site,g_xmes_m.xmesdocno)
                    RETURNING l_success1,g_xmet_d[l_ac].xmet006
               IF NOT l_success1 THEN
                  LET g_xmet_d[l_ac].xmet006 = g_xmet_d_t.xmet006
                  DISPLAY BY NAME g_xmet_d[l_ac].xmet006
               END IF
            END IF]]>
  </point>
  <point name="input.b.page1.xmet008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.b.page2.xmeu002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.b.page2.xmeu003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET l_success1 = FALSE
   LET g_errshow = 1]]>
  </point>
  <point name="input.body.b_a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #若是空值，則給予一個空白值
            IF g_xmet_d[l_ac].xmet003 IS NULL THEN
               LET g_xmet_d[l_ac].xmet003 = ' '
            END IF]]>
  </point>
  <point name="input.body.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               #若是空值，則給予一個空白值
               IF g_xmet_d[l_ac].xmet003 IS NULL THEN
                  LET g_xmet_d[l_ac].xmet003 = ' '
               END IF]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #項次+1000
            IF cl_null(g_xmet_d[l_ac].xmet002) THEN 
               SELECT MAX(xmet002) INTO g_xmet_d[l_ac].xmet002 FROM xmet_t
                WHERE xmetent = g_enterprise
                  AND xmetsite = g_site
                  AND xmetdocno = g_xmes_m.xmesdocno
                  AND xmet001 = g_xmes_m.xmes001
               IF cl_null(g_xmet_d[l_ac].xmet002) THEN 
                  LET g_xmet_d[l_ac].xmet002 = 1000
               ELSE      
                  LET g_xmet_d[l_ac].xmet002 = g_xmet_d[l_ac].xmet002 + 1000
               END IF              
             END IF ]]>
  </point>
  <point name="input.body2.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.body2.after_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.body2.b_a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #如果部位編號為空值，則給一個空格
            IF g_xmet2_d[l_ac].xmeu002 IS NULL THEN
               LET g_xmet2_d[l_ac].xmeu002 = ' '
            END IF
            #如果料件編號為空值，則給一個空格
            IF g_xmet2_d[l_ac].xmeu003 IS NULL THEN
               LET g_xmet2_d[l_ac].xmeu003 = ' '
            END IF
            #如果製程序為空值，則給一個空格
            IF g_xmet2_d[l_ac].xmeu004 IS NULL THEN
               LET g_xmet2_d[l_ac].xmeu004 = ' '
            END IF
            #如果作業序為空值，則給一個空格
            IF g_xmet2_d[l_ac].xmeu006 IS NULL THEN
               LET g_xmet2_d[l_ac].xmeu006 = ' '
            END IF]]>
  </point>
  <point name="input.body2.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               #如果部位編號為空值，則給一個空格
               IF g_xmet2_d[l_ac].xmeu002 IS NULL THEN
                  LET g_xmet2_d[l_ac].xmeu002 = ' '
               END IF
               #如果料件編號為空值，則給一個空格
               IF g_xmet2_d[l_ac].xmeu003 IS NULL THEN
                  LET g_xmet2_d[l_ac].xmeu003 = ' '
               END IF
               #如果製程序為空值，則給一個空格
               IF g_xmet2_d[l_ac].xmeu004 IS NULL THEN
                  LET g_xmet2_d[l_ac].xmeu004 = ' '
               END IF
               #如果作業序為空值，則給一個空格
               IF g_xmet2_d[l_ac].xmeu006 IS NULL THEN
                  LET g_xmet2_d[l_ac].xmeu006 = ' '
               END IF]]>
  </point>
  <point name="input.body2.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[  ]]>
  </point>
  <point name="input.body2.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.body2.before_row2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[           ]]>
  </point>
  <point name="input.c.page1.xmet003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmet_d[l_ac].xmet003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '215'
            
            CALL q_oocq002_5()                                #呼叫開窗

            LET g_xmet_d[l_ac].xmet003 = g_qryparam.return1              

            DISPLAY g_xmet_d[l_ac].xmet003 TO xmet003             
            CALL axmi400_xmet003_ref()
            NEXT FIELD xmet003                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.xmet004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmet_d[l_ac].xmet004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '221'
            
            CALL q_oocq002_5()                                #呼叫開窗

            LET g_xmet_d[l_ac].xmet004 = g_qryparam.return1              

            DISPLAY g_xmet_d[l_ac].xmet004 TO xmet004            
            CALL axmi400_xmet004_ref()
            NEXT FIELD xmet004                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.xmet005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmet_d[l_ac].xmet005             #給予default值
            
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_imaf001_15()                                #呼叫開窗

            LET g_xmet_d[l_ac].xmet005 = g_qryparam.return1              
            
            DISPLAY g_xmet_d[l_ac].xmet005 TO xmet005  
            CALL axmi400_xmet005_ref()
            NEXT FIELD xmet005                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.xmet006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF l_cmd = 'u' THEN
               CALL s_feature_single(g_xmet_d[l_ac].xmet005,g_xmet_d[l_ac].xmet006,g_site,g_xmes_m.xmesdocno)
                  RETURNING l_success1,g_xmet_d[l_ac].xmet006
               IF NOT l_success1 THEN
                  LET g_xmet_d[l_ac].xmet006 = g_xmet_d_t.xmet006
                  DISPLAY BY NAME g_xmet_d[l_ac].xmet006
               END IF
            END IF
            NEXT FIELD xmet006]]>
  </point>
  <point name="input.c.page1.xmet008" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmet_d[l_ac].xmet008             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_xmet_d[l_ac].xmet005        
            CALL q_imao002()                                #呼叫開窗
            LET g_xmet_d[l_ac].xmet008 = g_qryparam.return1              
            DISPLAY g_xmet_d[l_ac].xmet008 TO xmet008              
            CALL axmi400_xmet008_ref()
            NEXT FIELD xmet008                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.xmet012" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE   
            LET g_qryparam.default1 = g_xmet_d[l_ac].xmet012          
            LET g_qryparam.arg1 = g_site
            CALL q_ooaj002_1()                                #呼叫開窗
            LET g_xmet_d[l_ac].xmet012 = g_qryparam.return1              
            DISPLAY g_xmet_d[l_ac].xmet012 TO xmet012              
            CALL axmi400_xmet012_ref()
            NEXT FIELD xmet012                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.xmet013" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmet_d[l_ac].xmet013             #給予default值
            
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_pmaa001_3()                                #呼叫開窗

            LET g_xmet_d[l_ac].xmet013 = g_qryparam.return1              
           
            DISPLAY g_xmet_d[l_ac].xmet013 TO xmet013   
            CALL axmi400_xmet013_ref()            
            NEXT FIELD xmet013                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.xmeu002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmet2_d[l_ac].xmeu002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '215'
            
            CALL q_oocq002_5()                                #呼叫開窗

            LET g_xmet2_d[l_ac].xmeu002 = g_qryparam.return1              

            DISPLAY g_xmet2_d[l_ac].xmeu002 TO xmeu002              
            CALL axmi400_xmeu002_ref()
            NEXT FIELD xmeu002                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.xmeu003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmet2_d[l_ac].xmeu003             #給予default值
           
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_imaf001_15()                                #呼叫開窗

            LET g_xmet2_d[l_ac].xmeu003 = g_qryparam.return1              
            
            DISPLAY g_xmet2_d[l_ac].xmeu003 TO xmeu003              #
            CALL axmi400_xmeu003_ref()
            NEXT FIELD xmeu003                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.xmeu005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmet2_d[l_ac].xmeu005             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '221'
            
            CALL q_oocq002_5()                                #呼叫開窗

            LET g_xmet2_d[l_ac].xmeu005 = g_qryparam.return1              

            DISPLAY g_xmet2_d[l_ac].xmeu005 TO xmeu005              #
            CALL axmi400_xmeu005_ref()
            NEXT FIELD xmeu005                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.xmeu007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmet2_d[l_ac].xmeu007             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ecaa001_1()                                #呼叫開窗

            LET g_xmet2_d[l_ac].xmeu007 = g_qryparam.return1              

            DISPLAY g_xmet2_d[l_ac].xmeu007 TO xmeu007            
            CALL axmi400_xmeu007_ref()
            NEXT FIELD xmeu007                          #返回原欄位

]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE  l_success1            LIKE type_t.num5]]>
  </point>
  <point name="input.g.page1.xmet005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.master_input.update_item" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_xmes_m.xmesdocno) THEN
                  CALL n_xmesl(g_xmes_m.xmesdocno)
                  CALL axmi400_xmesdocno_ref()
               END IF]]>
  </point>
  <point name="set_entry_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="set_entry_b.set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("xmet006",TRUE)]]>
  </point>
  <point name="set_no_entry_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_xmet006  LIKE xmet_t.xmet006 ]]>
  </point>
  <point name="set_no_entry_b.set_no_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   
   #判斷料件是否存在產品特徵
   IF NOT cl_null(g_detail_idx) AND g_detail_idx > 0 THEN   
      LET l_xmet006 = ''
      SELECT imaa005 INTO l_xmet006
        FROM imaa_t
       WHERE imaaent = g_enterprise AND imaa001 = g_xmet_d[l_ac].xmet005
      IF cl_get_para(g_enterprise,g_site,'S-BAS-0036') = "N" THEN
         LET g_xmet_d[l_ac].xmet006 = ''
         CALL cl_set_comp_entry("xmet006",FALSE)
      ELSE
         IF cl_null(l_xmet006) THEN
            LET g_xmet_d[l_ac].xmet006 = ''
            CALL cl_set_comp_entry("xmet006",FALSE)
         END IF
      END IF
   END IF]]>
  </point>
  <point name="show.body.reference" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="show.body2.reference" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[ ]]>
  </point>
  <point name="show.head.reference" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
   CALL axmi400_xmesdocno_ref()
   ]]>
  </point>
  <point name="statechange.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[  ]]>
  </point>
  <point name="statechange.before_menu" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      #校驗:範本料號+版本只能存在一筆有效資料
      IF NOT cl_null(g_xmes_m.xmesdocno) AND NOT cl_null(g_xmes_m.xmes001) THEN 
         IF g_xmes_m.xmesstus = "N" THEN 
            IF NOT axmi400_xmes001_chk() THEN
               #檢查失敗時後續處理
               RETURN
            END IF
         END IF
      END IF]]>
  </point>
  <point name="statechange.more_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <section id="axmi400.b_fill" ver="15" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION axmi400_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_xmet_d.clear()    #g_xmet_d 單頭及單身 
   CALL g_xmet2_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF axmi400_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE xmet002,xmet003,xmet004,xmet005,xmet006,xmet007,xmet008,xmet009,xmet010, 
          xmet011,xmet012,xmet013,xmet014 ,t1.oocql004 ,t2.oocql004 ,t3.imaal003 ,t4.imaal004 ,t5.oocal003 , 
          t6.ooail003 ,t7.pmaal004 FROM xmet_t",   
                  " INNER JOIN xmes_t ON xmesdocno = xmetdocno ",
                  " AND xmes001 = xmet001 ",
 
                  #"",
                  
                  "",
                                 " LEFT JOIN oocql_t t1 ON t1.oocqlent='"||g_enterprise||"' AND t1.oocql001='215' AND t1.oocql002=xmet003 AND t1.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t2 ON t2.oocqlent='"||g_enterprise||"' AND t2.oocql001='221' AND t2.oocql002=xmet004 AND t2.oocql003='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t3 ON t3.imaalent='"||g_enterprise||"' AND t3.imaal001=xmet005 AND t3.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t4 ON t4.imaalent='"||g_enterprise||"' AND t4.imaal001=xmet005 AND t4.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t5 ON t5.oocalent='"||g_enterprise||"' AND t5.oocal001=xmet008 AND t5.oocal002='"||g_dlang||"' ",
               " LEFT JOIN ooail_t t6 ON t6.ooailent='"||g_enterprise||"' AND t6.ooail001=xmet012 AND t6.ooail002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t7 ON t7.pmaalent='"||g_enterprise||"' AND t7.pmaal001=xmet013 AND t7.pmaal002='"||g_dlang||"' ",
 
                  " WHERE xmetent=? AND xmetsite=? AND xmetdocno=? AND xmet001=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY xmet_t.xmet002"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE axmi400_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR axmi400_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise, g_site,g_xmes_m.xmesdocno,g_xmes_m.xmes001
                                               
      FOREACH b_fill_cs INTO g_xmet_d[l_ac].xmet002,g_xmet_d[l_ac].xmet003,g_xmet_d[l_ac].xmet004,g_xmet_d[l_ac].xmet005, 
          g_xmet_d[l_ac].xmet006,g_xmet_d[l_ac].xmet007,g_xmet_d[l_ac].xmet008,g_xmet_d[l_ac].xmet009, 
          g_xmet_d[l_ac].xmet010,g_xmet_d[l_ac].xmet011,g_xmet_d[l_ac].xmet012,g_xmet_d[l_ac].xmet013, 
          g_xmet_d[l_ac].xmet014,g_xmet_d[l_ac].xmet003_desc,g_xmet_d[l_ac].xmet004_desc,g_xmet_d[l_ac].xmet005_desc, 
          g_xmet_d[l_ac].xmet005_desc_desc,g_xmet_d[l_ac].xmet008_desc,g_xmet_d[l_ac].xmet012_desc,g_xmet_d[l_ac].xmet013_desc 

         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
   #判斷是否填充
   IF axmi400_fill_chk(2) THEN
      LET g_sql = "SELECT  UNIQUE xmeu002,xmeu003,xmeu004,xmeu005,xmeu006,xmeu007,xmeu008,xmeu009,xmeu010, 
          xmeu011 ,t8.oocql004 ,t9.imaal003 ,t10.imaal004 ,t11.oocql004 ,t12.ecaa002 FROM xmeu_t",   
           
                  " INNER JOIN xmes_t ON xmesdocno = xmeudocno ",
                  " AND xmes001 = xmeu001 ",
 
                  "",
                  
                                 " LEFT JOIN oocql_t t8 ON t8.oocqlent='"||g_enterprise||"' AND t8.oocql001='215' AND t8.oocql002=xmeu002 AND t8.oocql003='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t9 ON t9.imaalent='"||g_enterprise||"' AND t9.imaal001=xmeu003 AND t9.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t10 ON t10.imaalent='"||g_enterprise||"' AND t10.imaal001=xmeu003 AND t10.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t11 ON t11.oocqlent='"||g_enterprise||"' AND t11.oocql001='221' AND t11.oocql002=xmeu005 AND t11.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ecaa_t t12 ON t12.ecaaent='"||g_enterprise||"' AND t12.ecaasite=xmeusite AND t12.ecaa001=xmeu007  ",
 
                  " WHERE xmeuent=? AND xmeusite=? AND xmeudocno=? AND xmeu001=?"   
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body2.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table2) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY xmeu_t.xmeu002,xmeu_t.xmeu003,xmeu_t.xmeu004,xmeu_t.xmeu006"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql2"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE axmi400_pb2 FROM g_sql
      DECLARE b_fill_cs2 CURSOR FOR axmi400_pb2
      
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise, g_site,g_xmes_m.xmesdocno,g_xmes_m.xmes001
                                               
      FOREACH b_fill_cs2 INTO g_xmet2_d[l_ac].xmeu002,g_xmet2_d[l_ac].xmeu003,g_xmet2_d[l_ac].xmeu004, 
          g_xmet2_d[l_ac].xmeu005,g_xmet2_d[l_ac].xmeu006,g_xmet2_d[l_ac].xmeu007,g_xmet2_d[l_ac].xmeu008, 
          g_xmet2_d[l_ac].xmeu009,g_xmet2_d[l_ac].xmeu010,g_xmet2_d[l_ac].xmeu011,g_xmet2_d[l_ac].xmeu002_desc, 
          g_xmet2_d[l_ac].xmeu003_desc,g_xmet2_d[l_ac].xmeu003_desc_desc,g_xmet2_d[l_ac].xmeu005_desc, 
          g_xmet2_d[l_ac].xmeu007_desc
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 0 )
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_xmet_d.deleteElement(g_xmet_d.getLength())
   CALL g_xmet2_d.deleteElement(g_xmet2_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE axmi400_pb
   FREE axmi400_pb2
 
 
   
END FUNCTION
]]>
  </section>
  <section id="axmi400.b_fill2" ver="2" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION axmi400_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL axmi400_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="axmi400.browser_fill" ver="6" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION axmi400_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_xmes_m.* TO NULL
   CALL g_xmet_d.clear()        
   CALL g_xmet2_d.clear() 
 
   CALL g_browser.clear()
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "xmesdocno,xmes001"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE xmesdocno,xmes001 ",
                      " FROM xmes_t ",
                      " ",
                      " LEFT JOIN xmet_t ON xmetent = xmesent AND xmetsite = xmessite AND xmesdocno = xmetdocno AND xmes001 = xmet001 ",
                      " LEFT JOIN xmeu_t ON xmeuent = xmesent AND xmeusite = xmessite AND xmesdocno = xmeudocno AND xmes001 = xmeu001", 
 
 
 
                      " LEFT JOIN xmesl_t ON xmesdocno = xmesldocno AND xmesl002 = '",g_lang,"' ", 
                      " ", 
                      " WHERE xmesent = '" ||g_enterprise|| "' AND xmessite = '" ||g_site|| "' AND xmetent = '" ||g_enterprise|| "' AND xmetsite = '" ||g_site|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("xmes_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE xmesdocno,xmes001 ",
                      " FROM xmes_t ", 
                      "  ",
                      "  LEFT JOIN xmesl_t ON xmesdocno = xmesldocno AND xmesl002 = '",g_lang,"' ",
                      " WHERE xmesent = '" ||g_enterprise|| "' AND xmessite = '" ||g_site|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("xmes_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照xmesdocno,'',xmes001 Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT xmesstus,xmesdocno,'',xmes001,t1.xmesl003 ",
               " FROM xmes_t ",
               "  ",
               "  LEFT JOIN xmet_t ON xmetent = xmesent AND xmetsite = xmessite AND xmesdocno = xmetdocno AND xmes001 = xmet001 ",
               "  LEFT JOIN xmeu_t ON xmeuent = xmesent AND xmeusite = xmessite AND xmesdocno = xmeudocno AND xmes001 = xmeu001",
 
 
 
               "  LEFT JOIN xmesl_t ON xmesdocno = xmesldocno AND xmesl002 = '",g_lang,"' ",
               "  ",
                              " LEFT JOIN xmesl_t t1 ON t1.xmeslent='"||g_enterprise||"' AND t1.xmesldocno=xmesdocno AND t1.xmesl002='"||g_lang||"' ",
 
               " WHERE xmesent = '" ||g_enterprise|| "' AND xmessite = '" ||g_site|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("xmes_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_xmesdocno,g_browser[g_cnt].b_xmesdocno_desc, 
       g_browser[g_cnt].b_xmes001,g_browser[g_cnt].b_xmesdocno_desc
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/inactive.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/active.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="axmi400.browser_search" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION axmi400_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY xmesdocno,xmes001"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL axmi400_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="axmi400.construct" ver="11" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION axmi400_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_xmes_m.* TO NULL
   CALL g_xmet_d.clear()        
   CALL g_xmet2_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON xmesdocno,xmesl003,xmesl004,xmes001,xmesstus,xmesownid,xmesowndp,xmescrtid, 
          xmescrtdp,xmescrtdt,xmesmodid,xmesmoddt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<xmescrtdt>>----
         AFTER FIELD xmescrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmesmoddt>>----
         AFTER FIELD xmesmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmescnfdt>>----
         
         #----<<xmespstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.xmesdocno
         ON ACTION controlp INFIELD xmesdocno
            #add-point:ON ACTION controlp INFIELD xmesdocno
            {<point name="construct.c.xmesdocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmesdocno
            #add-point:BEFORE FIELD xmesdocno
            {<point name="construct.b.xmesdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmesdocno
            
            #add-point:AFTER FIELD xmesdocno
            {<point name="construct.a.xmesdocno" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmesl003
            #add-point:BEFORE FIELD xmesl003
            {<point name="construct.b.xmesl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmesl003
            
            #add-point:AFTER FIELD xmesl003
            {<point name="construct.a.xmesl003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmesl003
         ON ACTION controlp INFIELD xmesl003
            #add-point:ON ACTION controlp INFIELD xmesl003
            {<point name="construct.c.xmesl003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmesl004
            #add-point:BEFORE FIELD xmesl004
            {<point name="construct.b.xmesl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmesl004
            
            #add-point:AFTER FIELD xmesl004
            {<point name="construct.a.xmesl004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmesl004
         ON ACTION controlp INFIELD xmesl004
            #add-point:ON ACTION controlp INFIELD xmesl004
            {<point name="construct.c.xmesl004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmes001
            #add-point:BEFORE FIELD xmes001
            {<point name="construct.b.xmes001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmes001
            
            #add-point:AFTER FIELD xmes001
            {<point name="construct.a.xmes001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmes001
         ON ACTION controlp INFIELD xmes001
            #add-point:ON ACTION controlp INFIELD xmes001
            {<point name="construct.c.xmes001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmesstus
            #add-point:BEFORE FIELD xmesstus
            {<point name="construct.b.xmesstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmesstus
            
            #add-point:AFTER FIELD xmesstus
            {<point name="construct.a.xmesstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmesstus
         ON ACTION controlp INFIELD xmesstus
            #add-point:ON ACTION controlp INFIELD xmesstus
            {<point name="construct.c.xmesstus" />}
            #END add-point
 
         #Ctrlp:construct.c.xmesownid
         ON ACTION controlp INFIELD xmesownid
            #add-point:ON ACTION controlp INFIELD xmesownid
            {<point name="construct.c.xmesownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmesownid
            #add-point:BEFORE FIELD xmesownid
            {<point name="construct.b.xmesownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmesownid
            
            #add-point:AFTER FIELD xmesownid
            {<point name="construct.a.xmesownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmesowndp
         ON ACTION controlp INFIELD xmesowndp
            #add-point:ON ACTION controlp INFIELD xmesowndp
            {<point name="construct.c.xmesowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmesowndp
            #add-point:BEFORE FIELD xmesowndp
            {<point name="construct.b.xmesowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmesowndp
            
            #add-point:AFTER FIELD xmesowndp
            {<point name="construct.a.xmesowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmescrtid
         ON ACTION controlp INFIELD xmescrtid
            #add-point:ON ACTION controlp INFIELD xmescrtid
            {<point name="construct.c.xmescrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmescrtid
            #add-point:BEFORE FIELD xmescrtid
            {<point name="construct.b.xmescrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmescrtid
            
            #add-point:AFTER FIELD xmescrtid
            {<point name="construct.a.xmescrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmescrtdp
         ON ACTION controlp INFIELD xmescrtdp
            #add-point:ON ACTION controlp INFIELD xmescrtdp
            {<point name="construct.c.xmescrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmescrtdp
            #add-point:BEFORE FIELD xmescrtdp
            {<point name="construct.b.xmescrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmescrtdp
            
            #add-point:AFTER FIELD xmescrtdp
            {<point name="construct.a.xmescrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmescrtdt
            #add-point:BEFORE FIELD xmescrtdt
            {<point name="construct.b.xmescrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.xmesmodid
         ON ACTION controlp INFIELD xmesmodid
            #add-point:ON ACTION controlp INFIELD xmesmodid
            {<point name="construct.c.xmesmodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmesmodid
            #add-point:BEFORE FIELD xmesmodid
            {<point name="construct.b.xmesmodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmesmodid
            
            #add-point:AFTER FIELD xmesmodid
            {<point name="construct.a.xmesmodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmesmoddt
            #add-point:BEFORE FIELD xmesmoddt
            {<point name="construct.b.xmesmoddt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON xmet002,xmet003,xmet004,xmet005,xmet006,xmet007,xmet008,xmet009,xmet010, 
          xmet011,xmet012,xmet013,xmet014
           FROM s_detail1[1].xmet002,s_detail1[1].xmet003,s_detail1[1].xmet004,s_detail1[1].xmet005, 
               s_detail1[1].xmet006,s_detail1[1].xmet007,s_detail1[1].xmet008,s_detail1[1].xmet009,s_detail1[1].xmet010, 
               s_detail1[1].xmet011,s_detail1[1].xmet012,s_detail1[1].xmet013,s_detail1[1].xmet014
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #此段落由子樣板a01產生
         BEFORE FIELD xmet002
            #add-point:BEFORE FIELD xmet002
            {<point name="construct.b.page1.xmet002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmet002
            
            #add-point:AFTER FIELD xmet002
            {<point name="construct.a.page1.xmet002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmet002
         ON ACTION controlp INFIELD xmet002
            #add-point:ON ACTION controlp INFIELD xmet002
            {<point name="construct.c.page1.xmet002" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xmet003
         ON ACTION controlp INFIELD xmet003
            #add-point:ON ACTION controlp INFIELD xmet003
            {<point name="construct.c.page1.xmet003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmet003
            #add-point:BEFORE FIELD xmet003
            {<point name="construct.b.page1.xmet003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmet003
            
            #add-point:AFTER FIELD xmet003
            {<point name="construct.a.page1.xmet003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmet004
         ON ACTION controlp INFIELD xmet004
            #add-point:ON ACTION controlp INFIELD xmet004
            {<point name="construct.c.page1.xmet004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmet004
            #add-point:BEFORE FIELD xmet004
            {<point name="construct.b.page1.xmet004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmet004
            
            #add-point:AFTER FIELD xmet004
            {<point name="construct.a.page1.xmet004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmet005
         ON ACTION controlp INFIELD xmet005
            #add-point:ON ACTION controlp INFIELD xmet005
            {<point name="construct.c.page1.xmet005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmet005
            #add-point:BEFORE FIELD xmet005
            {<point name="construct.b.page1.xmet005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmet005
            
            #add-point:AFTER FIELD xmet005
            {<point name="construct.a.page1.xmet005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmet006
            #add-point:BEFORE FIELD xmet006
            {<point name="construct.b.page1.xmet006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmet006
            
            #add-point:AFTER FIELD xmet006
            {<point name="construct.a.page1.xmet006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmet006
         ON ACTION controlp INFIELD xmet006
            #add-point:ON ACTION controlp INFIELD xmet006
            {<point name="construct.c.page1.xmet006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmet007
            #add-point:BEFORE FIELD xmet007
            {<point name="construct.b.page1.xmet007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmet007
            
            #add-point:AFTER FIELD xmet007
            {<point name="construct.a.page1.xmet007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmet007
         ON ACTION controlp INFIELD xmet007
            #add-point:ON ACTION controlp INFIELD xmet007
            {<point name="construct.c.page1.xmet007" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xmet008
         ON ACTION controlp INFIELD xmet008
            #add-point:ON ACTION controlp INFIELD xmet008
            {<point name="construct.c.page1.xmet008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmet008
            #add-point:BEFORE FIELD xmet008
            {<point name="construct.b.page1.xmet008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmet008
            
            #add-point:AFTER FIELD xmet008
            {<point name="construct.a.page1.xmet008" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmet009
            #add-point:BEFORE FIELD xmet009
            {<point name="construct.b.page1.xmet009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmet009
            
            #add-point:AFTER FIELD xmet009
            {<point name="construct.a.page1.xmet009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmet009
         ON ACTION controlp INFIELD xmet009
            #add-point:ON ACTION controlp INFIELD xmet009
            {<point name="construct.c.page1.xmet009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmet010
            #add-point:BEFORE FIELD xmet010
            {<point name="construct.b.page1.xmet010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmet010
            
            #add-point:AFTER FIELD xmet010
            {<point name="construct.a.page1.xmet010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmet010
         ON ACTION controlp INFIELD xmet010
            #add-point:ON ACTION controlp INFIELD xmet010
            {<point name="construct.c.page1.xmet010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmet011
            #add-point:BEFORE FIELD xmet011
            {<point name="construct.b.page1.xmet011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmet011
            
            #add-point:AFTER FIELD xmet011
            {<point name="construct.a.page1.xmet011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmet011
         ON ACTION controlp INFIELD xmet011
            #add-point:ON ACTION controlp INFIELD xmet011
            {<point name="construct.c.page1.xmet011" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xmet012
         ON ACTION controlp INFIELD xmet012
            #add-point:ON ACTION controlp INFIELD xmet012
            {<point name="construct.c.page1.xmet012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmet012
            #add-point:BEFORE FIELD xmet012
            {<point name="construct.b.page1.xmet012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmet012
            
            #add-point:AFTER FIELD xmet012
            {<point name="construct.a.page1.xmet012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmet013
         ON ACTION controlp INFIELD xmet013
            #add-point:ON ACTION controlp INFIELD xmet013
            {<point name="construct.c.page1.xmet013" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmet013
            #add-point:BEFORE FIELD xmet013
            {<point name="construct.b.page1.xmet013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmet013
            
            #add-point:AFTER FIELD xmet013
            {<point name="construct.a.page1.xmet013" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmet014
            #add-point:BEFORE FIELD xmet014
            {<point name="construct.b.page1.xmet014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmet014
            
            #add-point:AFTER FIELD xmet014
            {<point name="construct.a.page1.xmet014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmet014
         ON ACTION controlp INFIELD xmet014
            #add-point:ON ACTION controlp INFIELD xmet014
            {<point name="construct.c.page1.xmet014" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON xmeu002,xmeu003,xmeu004,xmeu005,xmeu006,xmeu007,xmeu008,xmeu009,xmeu010, 
          xmeu011
           FROM s_detail2[1].xmeu002,s_detail2[1].xmeu003,s_detail2[1].xmeu004,s_detail2[1].xmeu005, 
               s_detail2[1].xmeu006,s_detail2[1].xmeu007,s_detail2[1].xmeu008,s_detail2[1].xmeu009,s_detail2[1].xmeu010, 
               s_detail2[1].xmeu011
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #Ctrlp:construct.c.page2.xmeu002
         ON ACTION controlp INFIELD xmeu002
            #add-point:ON ACTION controlp INFIELD xmeu002
            {<point name="construct.c.page2.xmeu002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmeu002
            #add-point:BEFORE FIELD xmeu002
            {<point name="construct.b.page2.xmeu002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmeu002
            
            #add-point:AFTER FIELD xmeu002
            {<point name="construct.a.page2.xmeu002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmeu003
         ON ACTION controlp INFIELD xmeu003
            #add-point:ON ACTION controlp INFIELD xmeu003
            {<point name="construct.c.page2.xmeu003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmeu003
            #add-point:BEFORE FIELD xmeu003
            {<point name="construct.b.page2.xmeu003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmeu003
            
            #add-point:AFTER FIELD xmeu003
            {<point name="construct.a.page2.xmeu003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmeu004
            #add-point:BEFORE FIELD xmeu004
            {<point name="construct.b.page2.xmeu004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmeu004
            
            #add-point:AFTER FIELD xmeu004
            {<point name="construct.a.page2.xmeu004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmeu004
         ON ACTION controlp INFIELD xmeu004
            #add-point:ON ACTION controlp INFIELD xmeu004
            {<point name="construct.c.page2.xmeu004" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.xmeu005
         ON ACTION controlp INFIELD xmeu005
            #add-point:ON ACTION controlp INFIELD xmeu005
            {<point name="construct.c.page2.xmeu005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmeu005
            #add-point:BEFORE FIELD xmeu005
            {<point name="construct.b.page2.xmeu005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmeu005
            
            #add-point:AFTER FIELD xmeu005
            {<point name="construct.a.page2.xmeu005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmeu006
            #add-point:BEFORE FIELD xmeu006
            {<point name="construct.b.page2.xmeu006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmeu006
            
            #add-point:AFTER FIELD xmeu006
            {<point name="construct.a.page2.xmeu006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmeu006
         ON ACTION controlp INFIELD xmeu006
            #add-point:ON ACTION controlp INFIELD xmeu006
            {<point name="construct.c.page2.xmeu006" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.xmeu007
         ON ACTION controlp INFIELD xmeu007
            #add-point:ON ACTION controlp INFIELD xmeu007
            {<point name="construct.c.page2.xmeu007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmeu007
            #add-point:BEFORE FIELD xmeu007
            {<point name="construct.b.page2.xmeu007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmeu007
            
            #add-point:AFTER FIELD xmeu007
            {<point name="construct.a.page2.xmeu007" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmeu008
            #add-point:BEFORE FIELD xmeu008
            {<point name="construct.b.page2.xmeu008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmeu008
            
            #add-point:AFTER FIELD xmeu008
            {<point name="construct.a.page2.xmeu008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmeu008
         ON ACTION controlp INFIELD xmeu008
            #add-point:ON ACTION controlp INFIELD xmeu008
            {<point name="construct.c.page2.xmeu008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmeu009
            #add-point:BEFORE FIELD xmeu009
            {<point name="construct.b.page2.xmeu009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmeu009
            
            #add-point:AFTER FIELD xmeu009
            {<point name="construct.a.page2.xmeu009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmeu009
         ON ACTION controlp INFIELD xmeu009
            #add-point:ON ACTION controlp INFIELD xmeu009
            {<point name="construct.c.page2.xmeu009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmeu010
            #add-point:BEFORE FIELD xmeu010
            {<point name="construct.b.page2.xmeu010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmeu010
            
            #add-point:AFTER FIELD xmeu010
            {<point name="construct.a.page2.xmeu010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmeu010
         ON ACTION controlp INFIELD xmeu010
            #add-point:ON ACTION controlp INFIELD xmeu010
            {<point name="construct.c.page2.xmeu010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmeu011
            #add-point:BEFORE FIELD xmeu011
            {<point name="construct.b.page2.xmeu011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmeu011
            
            #add-point:AFTER FIELD xmeu011
            {<point name="construct.a.page2.xmeu011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmeu011
         ON ACTION controlp INFIELD xmeu011
            #add-point:ON ACTION controlp INFIELD xmeu011
            {<point name="construct.c.page2.xmeu011" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="axmi400.default_search" ver="2" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION axmi400_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " xmesdocno = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " xmes001 = '", g_argv[02], "' AND "
   END IF
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="axmi400.delete" ver="5" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION axmi400_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_xmes_m.xmesdocno IS NULL
   OR g_xmes_m.xmes001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   LET g_master_multi_table_t.xmesldocno = g_xmes_m.xmesdocno
LET g_master_multi_table_t.xmesl003 = g_xmes_m.xmesl003
LET g_master_multi_table_t.xmesl004 = g_xmes_m.xmesl004
 
 
   CALL axmi400_show()
   
   CALL s_transaction_begin()
 
   OPEN axmi400_cl USING g_enterprise, g_site,g_xmes_m.xmesdocno,g_xmes_m.xmes001
   IF STATUS THEN
      CALL cl_err("OPEN axmi400_cl:", STATUS, 1)
      CLOSE axmi400_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axmi400_master_referesh USING g_xmes_m.xmesdocno,g_xmes_m.xmes001 INTO g_xmes_m.xmesdocno, 
       g_xmes_m.xmes001,g_xmes_m.xmesstus,g_xmes_m.xmesownid,g_xmes_m.xmesowndp,g_xmes_m.xmescrtid,g_xmes_m.xmescrtdp, 
       g_xmes_m.xmescrtdt,g_xmes_m.xmesmodid,g_xmes_m.xmesmoddt,g_xmes_m.xmesownid_desc,g_xmes_m.xmesowndp_desc, 
       g_xmes_m.xmescrtid_desc,g_xmes_m.xmescrtdp_desc,g_xmes_m.xmesmodid_desc
 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_xmes_m.xmesdocno,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL axmi400_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_xmesdocno_t = g_xmes_m.xmesdocno
      LET g_xmes001_t = g_xmes_m.xmes001
 
 
      DELETE FROM xmes_t
       WHERE xmesent = g_enterprise AND xmessite = g_site AND xmesdocno = g_xmes_m.xmesdocno
         AND xmes001 = g_xmes_m.xmes001
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_xmes_m.xmesdocno,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM xmet_t
       WHERE xmetent = g_enterprise AND xmetsite = g_site AND xmetdocno = g_xmes_m.xmesdocno
         AND xmet001 = g_xmes_m.xmes001
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("xmet_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM xmeu_t
       WHERE xmeuent = g_enterprise AND xmeusite = g_site AND
             xmeudocno = g_xmes_m.xmesdocno AND xmeu001 = g_xmes_m.xmes001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("xmeu_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
 
 
 
                                                               
      CLEAR FORM
      CALL g_xmet_d.clear() 
      CALL g_xmet2_d.clear()       
 
     
      #CALL axmi400_ui_browser_refresh()  
      CALL axmi400_ui_headershow()  
      CALL axmi400_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL axmi400_browser_fill("")
         CALL axmi400_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL axmi400_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_master_multi_table_t.xmesldocno
   LET l_field_keys[01] = 'xmesldocno'
   LET l_var_keys_bak[02] = g_dlang
   LET l_field_keys[02] = 'xmesl002'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'xmesl_t')
 
      
      #單身多語言刪除
      
      
 
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE axmi400_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_xmes_m.xmesdocno,'D')
    
END FUNCTION
]]>
  </section>
  <section id="axmi400.delete_b" ver="1" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION axmi400_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM xmet_t
       WHERE xmetent = g_enterprise AND xmetsite = g_site AND
         xmetdocno = ps_keys_bak[1] AND xmet001 = ps_keys_bak[2] AND xmet002 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM xmeu_t
       WHERE xmeuent = g_enterprise AND xmeusite = g_site AND
         xmeudocno = ps_keys_bak[1] AND xmeu001 = ps_keys_bak[2] AND xmeu002 = ps_keys_bak[3] AND xmeu003 = ps_keys_bak[4] AND xmeu004 = ps_keys_bak[5] AND xmeu006 = ps_keys_bak[6]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("xmeu_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="axmi400.description" ver="1" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000171
#+ 
#+ Filename...: axmi400
#+ Description: 銷售估價BOM維護作業
#+ Creator....: 05293(2014/06/11)
#+ Modifier...: 05293(2014/07/10)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="axmi400.detail_reproduce" ver="1" status="" src="s">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION axmi400_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE xmet_t.*
   DEFINE l_detail2    RECORD LIKE xmeu_t.*
 
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE axmi400_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE axmi400_detail AS ",
                "SELECT * FROM xmet_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO axmi400_detail SELECT * FROM xmet_t 
                                         WHERE xmetent = g_enterprise AND xmetsite = g_site AND xmetdocno = g_xmesdocno_t
                                         AND xmet001 = g_xmes001_t
 
   
   #將key修正為調整後   
   UPDATE axmi400_detail 
      #更新key欄位
      SET xmetdocno = g_xmes_m.xmesdocno
          , xmet001 = g_xmes_m.xmes001
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO xmet_t SELECT * FROM axmi400_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmi400_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE axmi400_detail AS ",
      "SELECT * FROM xmeu_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO axmi400_detail SELECT * FROM xmeu_t
                                         WHERE xmeuent = g_enterprise AND xmeusite = g_site AND xmeudocno = g_xmesdocno_t
                                         AND xmeu001 = g_xmes001_t
 
 
   #將key修正為調整後   
   UPDATE axmi400_detail SET xmeudocno = g_xmes_m.xmesdocno
                                       , xmeu001 = g_xmes_m.xmes001
 
  
   #將資料塞回原table   
   INSERT INTO xmeu_t SELECT * FROM axmi400_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmi400_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_xmesdocno_t = g_xmes_m.xmesdocno
   LET g_xmes001_t = g_xmes_m.xmes001
 
   
   DROP TABLE axmi400_detail
   
END FUNCTION
]]>
  </section>
  <section id="axmi400.detail_show" ver="2" status="" src="s">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION axmi400_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="axmi400.fetch" ver="3" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION axmi400_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_xmes_m.xmesdocno = g_browser[g_current_idx].b_xmesdocno
   LET g_xmes_m.xmes001 = g_browser[g_current_idx].b_xmes001
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE axmi400_master_referesh USING g_xmes_m.xmesdocno,g_xmes_m.xmes001 INTO g_xmes_m.xmesdocno, 
       g_xmes_m.xmes001,g_xmes_m.xmesstus,g_xmes_m.xmesownid,g_xmes_m.xmesowndp,g_xmes_m.xmescrtid,g_xmes_m.xmescrtdp, 
       g_xmes_m.xmescrtdt,g_xmes_m.xmesmodid,g_xmes_m.xmesmoddt,g_xmes_m.xmesownid_desc,g_xmes_m.xmesowndp_desc, 
       g_xmes_m.xmescrtid_desc,g_xmes_m.xmescrtdp_desc,g_xmes_m.xmesmodid_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("xmes_t",SQLCA.sqlcode,1)
      INITIALIZE g_xmes_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_xmes_m_t.* = g_xmes_m.*
   LET g_xmes_m_o.* = g_xmes_m.*
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL axmi400_show()
 
   
 
END FUNCTION
]]>
  </section>
  <section id="axmi400.fill_chk" ver="3" status="" src="s">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION axmi400_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
   IF ps_idx = 2 AND
      ((NOT cl_null(g_wc2_table2) AND g_wc2_table2.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
 
 
 
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
 
   RETURN FALSE
 
END FUNCTION
]]>
  </section>
  <section id="axmi400.filter" ver="1" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION axmi400_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON xmesdocno,xmes001
                          FROM s_browse[1].b_xmesdocno,s_browse[1].b_xmes001
 
         BEFORE CONSTRUCT
               DISPLAY axmi400_filter_parser('xmesdocno') TO s_browse[1].b_xmesdocno
            DISPLAY axmi400_filter_parser('xmes001') TO s_browse[1].b_xmes001
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL axmi400_filter_show('xmesdocno')
   CALL axmi400_filter_show('xmes001')
 
END FUNCTION
]]>
  </section>
  <section id="axmi400.filter_parser" ver="1" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION axmi400_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="axmi400.filter_show" ver="1" status="" src="s">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION axmi400_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = axmi400_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="axmi400.global" ver="14" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_xmes_m        RECORD
       xmesdocno LIKE xmes_t.xmesdocno, 
   xmesl003 LIKE xmesl_t.xmesl003, 
   xmesl004 LIKE xmesl_t.xmesl004, 
   xmes001 LIKE xmes_t.xmes001, 
   xmesstus LIKE xmes_t.xmesstus, 
   xmesownid LIKE xmes_t.xmesownid, 
   xmesownid_desc LIKE type_t.chr80, 
   xmesowndp LIKE xmes_t.xmesowndp, 
   xmesowndp_desc LIKE type_t.chr80, 
   xmescrtid LIKE xmes_t.xmescrtid, 
   xmescrtid_desc LIKE type_t.chr80, 
   xmescrtdp LIKE xmes_t.xmescrtdp, 
   xmescrtdp_desc LIKE type_t.chr80, 
   xmescrtdt DATETIME YEAR TO SECOND, 
   xmesmodid LIKE xmes_t.xmesmodid, 
   xmesmodid_desc LIKE type_t.chr80, 
   xmesmoddt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_xmet_d        RECORD
       xmet002 LIKE xmet_t.xmet002, 
   xmet003 LIKE xmet_t.xmet003, 
   xmet003_desc LIKE type_t.chr500, 
   xmet004 LIKE xmet_t.xmet004, 
   xmet004_desc LIKE type_t.chr500, 
   xmet005 LIKE xmet_t.xmet005, 
   xmet005_desc LIKE type_t.chr500, 
   xmet005_desc_desc LIKE type_t.chr500, 
   xmet006 LIKE xmet_t.xmet006, 
   xmet007 LIKE xmet_t.xmet007, 
   xmet008 LIKE xmet_t.xmet008, 
   xmet008_desc LIKE type_t.chr500, 
   xmet009 LIKE xmet_t.xmet009, 
   xmet010 LIKE xmet_t.xmet010, 
   xmet011 LIKE xmet_t.xmet011, 
   xmet012 LIKE xmet_t.xmet012, 
   xmet012_desc LIKE type_t.chr500, 
   xmet013 LIKE xmet_t.xmet013, 
   xmet013_desc LIKE type_t.chr500, 
   xmet014 LIKE xmet_t.xmet014
       END RECORD
PRIVATE TYPE type_g_xmet2_d RECORD
       xmeu002 LIKE xmeu_t.xmeu002, 
   xmeu002_desc LIKE type_t.chr500, 
   xmeu003 LIKE xmeu_t.xmeu003, 
   xmeu003_desc LIKE type_t.chr500, 
   xmeu003_desc_desc LIKE type_t.chr500, 
   xmeu004 LIKE xmeu_t.xmeu004, 
   xmeu005 LIKE xmeu_t.xmeu005, 
   xmeu005_desc LIKE type_t.chr500, 
   xmeu006 LIKE xmeu_t.xmeu006, 
   xmeu007 LIKE xmeu_t.xmeu007, 
   xmeu007_desc LIKE type_t.chr500, 
   xmeu008 LIKE xmeu_t.xmeu008, 
   xmeu009 LIKE xmeu_t.xmeu009, 
   xmeu010 LIKE xmeu_t.xmeu010, 
   xmeu011 LIKE xmeu_t.xmeu011
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_xmes_m          type_g_xmes_m
DEFINE g_xmes_m_t        type_g_xmes_m
DEFINE g_xmes_m_o        type_g_xmes_m
 
   DEFINE g_xmesdocno_t LIKE xmes_t.xmesdocno
DEFINE g_xmes001_t LIKE xmes_t.xmes001
 
 
DEFINE g_xmet_d          DYNAMIC ARRAY OF type_g_xmet_d
DEFINE g_xmet_d_t        type_g_xmet_d
DEFINE g_xmet_d_o        type_g_xmet_d
DEFINE g_xmet2_d   DYNAMIC ARRAY OF type_g_xmet2_d
DEFINE g_xmet2_d_t type_g_xmet2_d
DEFINE g_xmet2_d_o type_g_xmet2_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_xmesdocno LIKE xmes_t.xmesdocno,
   b_xmesdocno_desc LIKE type_t.chr80,
      b_xmes001 LIKE xmes_t.xmes001
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_xmesdocno LIKE xmes_t.xmesdocno,
   b_xmesdocno_desc LIKE type_t.chr80,
      b_xmes001 LIKE xmes_t.xmes001
      END RECORD 
      
DEFINE g_master_multi_table_t    RECORD
      xmesldocno LIKE xmesl_t.xmesldocno,
      xmesl003 LIKE xmesl_t.xmesl003,
      xmesl004 LIKE xmesl_t.xmesl004
      END RECORD
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="axmi400.idx_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION axmi400_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_xmet_d.getLength() THEN
         LET g_detail_idx = g_xmet_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmet_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmet_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_xmet2_d.getLength() THEN
         LET g_detail_idx = g_xmet2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmet2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmet2_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="axmi400.init" ver="1" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION axmi400_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('xmesstus','17','N,Y')
 
      CALL cl_set_combo_scc('xmeu010','3018') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL axmi400_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="axmi400.input" ver="5" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION axmi400_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT xmet002,xmet003,xmet004,xmet005,xmet006,xmet007,xmet008,xmet009,xmet010, 
       xmet011,xmet012,xmet013,xmet014 FROM xmet_t WHERE xmetent=? AND xmetsite=? AND xmetdocno=? AND  
       xmet001=? AND xmet002=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmi400_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT xmeu002,xmeu003,xmeu004,xmeu005,xmeu006,xmeu007,xmeu008,xmeu009,xmeu010, 
       xmeu011 FROM xmeu_t WHERE xmeuent=? AND xmeusite=? AND xmeudocno=? AND xmeu001=? AND xmeu002=?  
       AND xmeu003=? AND xmeu004=? AND xmeu006=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmi400_bcl2 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL axmi400_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL axmi400_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_xmes_m.xmesdocno,g_xmes_m.xmesl003,g_xmes_m.xmesl004,g_xmes_m.xmes001,g_xmes_m.xmesstus 

   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
  </section>
  <section id="axmi400.input.body" ver="10" status="" src="s">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_xmet_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xmet_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axmi400_b_fill()
            LET g_rec_b = g_xmet_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN axmi400_cl USING g_enterprise, g_site,g_xmes_m.xmesdocno,g_xmes_m.xmes001
            IF STATUS THEN
               CALL cl_err("OPEN axmi400_cl:", STATUS, 1)
               CLOSE axmi400_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_xmet_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xmet_d[l_ac].xmet002 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xmet_d_t.* = g_xmet_d[l_ac].*  #BACKUP
               LET g_xmet_d_o.* = g_xmet_d[l_ac].*  #BACKUP
               CALL axmi400_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL axmi400_set_no_entry_b(l_cmd)
               IF NOT axmi400_lock_b("xmet_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axmi400_bcl INTO g_xmet_d[l_ac].xmet002,g_xmet_d[l_ac].xmet003,g_xmet_d[l_ac].xmet004, 
                      g_xmet_d[l_ac].xmet005,g_xmet_d[l_ac].xmet006,g_xmet_d[l_ac].xmet007,g_xmet_d[l_ac].xmet008, 
                      g_xmet_d[l_ac].xmet009,g_xmet_d[l_ac].xmet010,g_xmet_d[l_ac].xmet011,g_xmet_d[l_ac].xmet012, 
                      g_xmet_d[l_ac].xmet013,g_xmet_d[l_ac].xmet014
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_xmet_d_t.xmet002,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL axmi400_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmet_d[l_ac].* TO NULL 
            INITIALIZE g_xmet_d_t.* TO NULL 
            INITIALIZE g_xmet_d_o.* TO NULL 
                  LET g_xmet_d[l_ac].xmet009 = "1"
      LET g_xmet_d[l_ac].xmet010 = "1"
      LET g_xmet_d[l_ac].xmet011 = "N"
 
            LET g_xmet_d_t.* = g_xmet_d[l_ac].*     #新輸入資料
            LET g_xmet_d_o.* = g_xmet_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axmi400_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL axmi400_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmet_d[li_reproduce_target].* = g_xmet_d[li_reproduce].*
 
               LET g_xmet_d[li_reproduce_target].xmet002 = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM xmet_t 
             WHERE xmetent = g_enterprise AND xmetsite = g_site AND xmetdocno = g_xmes_m.xmesdocno
               AND xmet001 = g_xmes_m.xmes001
 
               AND xmet002 = g_xmet_d[l_ac].xmet002
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmes_m.xmesdocno
               LET gs_keys[2] = g_xmes_m.xmes001
               LET gs_keys[3] = g_xmet_d[g_detail_idx].xmet002
               CALL axmi400_insert_b('xmet_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_xmet_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("xmet_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axmi400_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_xmet_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_xmet_d.deleteElement(l_ac)
               NEXT FIELD xmet002
            END IF
         
            IF g_xmet_d[l_ac].xmet002 IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM xmet_t
                WHERE xmetent = g_enterprise AND xmetsite = g_site AND xmetdocno = g_xmes_m.xmesdocno AND
                                          xmet001 = g_xmes_m.xmes001 AND
 
                      xmet002 = g_xmet_d_t.xmet002
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("xmet_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE axmi400_bcl
               LET l_count = g_xmet_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmes_m.xmesdocno
               LET gs_keys[2] = g_xmes_m.xmes001
               LET gs_keys[3] = g_xmet_d[g_detail_idx].xmet002
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL axmi400_delete_b('xmet_t',gs_keys,"'1'")
 
                  #此段落由子樣板a02產生
         AFTER FIELD xmet002
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_xmet_d[l_ac].xmet002,"1000.000","1","","","azz-00079",1) THEN
               NEXT FIELD xmet002
            END IF
 
 
            #add-point:AFTER FIELD xmet002
            {<point name="input.a.page1.xmet002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmet002
            #add-point:BEFORE FIELD xmet002
            {<point name="input.b.page1.xmet002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmet002
            #add-point:ON CHANGE xmet002
            {<point name="input.g.page1.xmet002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmet003
            
            #add-point:AFTER FIELD xmet003
            {<point name="input.a.page1.xmet003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmet003
            #add-point:BEFORE FIELD xmet003
            {<point name="input.b.page1.xmet003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmet003
            #add-point:ON CHANGE xmet003
            {<point name="input.g.page1.xmet003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmet004
            
            #add-point:AFTER FIELD xmet004
            {<point name="input.a.page1.xmet004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmet004
            #add-point:BEFORE FIELD xmet004
            {<point name="input.b.page1.xmet004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmet004
            #add-point:ON CHANGE xmet004
            {<point name="input.g.page1.xmet004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmet005
            
            #add-point:AFTER FIELD xmet005
            {<point name="input.a.page1.xmet005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmet005
            #add-point:BEFORE FIELD xmet005
            {<point name="input.b.page1.xmet005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmet005
            #add-point:ON CHANGE xmet005
            {<point name="input.g.page1.xmet005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmet006
            #add-point:BEFORE FIELD xmet006
            {<point name="input.b.page1.xmet006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmet006
            
            #add-point:AFTER FIELD xmet006
            {<point name="input.a.page1.xmet006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmet006
            #add-point:ON CHANGE xmet006
            {<point name="input.g.page1.xmet006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmet007
            #add-point:BEFORE FIELD xmet007
            {<point name="input.b.page1.xmet007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmet007
            
            #add-point:AFTER FIELD xmet007
            {<point name="input.a.page1.xmet007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmet007
            #add-point:ON CHANGE xmet007
            {<point name="input.g.page1.xmet007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmet008
            
            #add-point:AFTER FIELD xmet008
            {<point name="input.a.page1.xmet008" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmet008
            #add-point:BEFORE FIELD xmet008
            {<point name="input.b.page1.xmet008" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmet008
            #add-point:ON CHANGE xmet008
            {<point name="input.g.page1.xmet008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmet009
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_xmet_d[l_ac].xmet009,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD xmet009
            END IF
 
 
            #add-point:AFTER FIELD xmet009
            {<point name="input.a.page1.xmet009" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmet009
            #add-point:BEFORE FIELD xmet009
            {<point name="input.b.page1.xmet009" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmet009
            #add-point:ON CHANGE xmet009
            {<point name="input.g.page1.xmet009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmet010
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_xmet_d[l_ac].xmet010,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD xmet010
            END IF
 
 
            #add-point:AFTER FIELD xmet010
            {<point name="input.a.page1.xmet010" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmet010
            #add-point:BEFORE FIELD xmet010
            {<point name="input.b.page1.xmet010" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmet010
            #add-point:ON CHANGE xmet010
            {<point name="input.g.page1.xmet010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmet011
            #add-point:BEFORE FIELD xmet011
            {<point name="input.b.page1.xmet011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmet011
            
            #add-point:AFTER FIELD xmet011
            {<point name="input.a.page1.xmet011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmet011
            #add-point:ON CHANGE xmet011
            {<point name="input.g.page1.xmet011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmet012
            
            #add-point:AFTER FIELD xmet012
            {<point name="input.a.page1.xmet012" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmet012
            #add-point:BEFORE FIELD xmet012
            {<point name="input.b.page1.xmet012" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmet012
            #add-point:ON CHANGE xmet012
            {<point name="input.g.page1.xmet012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmet013
            
            #add-point:AFTER FIELD xmet013
            {<point name="input.a.page1.xmet013" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmet013
            #add-point:BEFORE FIELD xmet013
            {<point name="input.b.page1.xmet013" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmet013
            #add-point:ON CHANGE xmet013
            {<point name="input.g.page1.xmet013" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmet014
            #add-point:BEFORE FIELD xmet014
            {<point name="input.b.page1.xmet014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmet014
            
            #add-point:AFTER FIELD xmet014
            {<point name="input.a.page1.xmet014" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmet014
            #add-point:ON CHANGE xmet014
            {<point name="input.g.page1.xmet014" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.xmet002
         ON ACTION controlp INFIELD xmet002
            #add-point:ON ACTION controlp INFIELD xmet002
            {<point name="input.c.page1.xmet002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmet003
         ON ACTION controlp INFIELD xmet003
            #add-point:ON ACTION controlp INFIELD xmet003
            {<point name="input.c.page1.xmet003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmet004
         ON ACTION controlp INFIELD xmet004
            #add-point:ON ACTION controlp INFIELD xmet004
            {<point name="input.c.page1.xmet004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmet005
         ON ACTION controlp INFIELD xmet005
            #add-point:ON ACTION controlp INFIELD xmet005
            {<point name="input.c.page1.xmet005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmet006
         ON ACTION controlp INFIELD xmet006
            #add-point:ON ACTION controlp INFIELD xmet006
            {<point name="input.c.page1.xmet006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmet007
         ON ACTION controlp INFIELD xmet007
            #add-point:ON ACTION controlp INFIELD xmet007
            {<point name="input.c.page1.xmet007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmet008
         ON ACTION controlp INFIELD xmet008
            #add-point:ON ACTION controlp INFIELD xmet008
            {<point name="input.c.page1.xmet008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmet009
         ON ACTION controlp INFIELD xmet009
            #add-point:ON ACTION controlp INFIELD xmet009
            {<point name="input.c.page1.xmet009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmet010
         ON ACTION controlp INFIELD xmet010
            #add-point:ON ACTION controlp INFIELD xmet010
            {<point name="input.c.page1.xmet010" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmet011
         ON ACTION controlp INFIELD xmet011
            #add-point:ON ACTION controlp INFIELD xmet011
            {<point name="input.c.page1.xmet011" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmet012
         ON ACTION controlp INFIELD xmet012
            #add-point:ON ACTION controlp INFIELD xmet012
            {<point name="input.c.page1.xmet012" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmet013
         ON ACTION controlp INFIELD xmet013
            #add-point:ON ACTION controlp INFIELD xmet013
            {<point name="input.c.page1.xmet013" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmet014
         ON ACTION controlp INFIELD xmet014
            #add-point:ON ACTION controlp INFIELD xmet014
            {<point name="input.c.page1.xmet014" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_xmet_d[l_ac].* = g_xmet_d_t.*
               CLOSE axmi400_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_xmet_d[l_ac].xmet002,-263,1)
               LET g_xmet_d[l_ac].* = g_xmet_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE xmet_t SET (xmetdocno,xmet001,xmet002,xmet003,xmet004,xmet005,xmet006,xmet007, 
                   xmet008,xmet009,xmet010,xmet011,xmet012,xmet013,xmet014) = (g_xmes_m.xmesdocno,g_xmes_m.xmes001, 
                   g_xmet_d[l_ac].xmet002,g_xmet_d[l_ac].xmet003,g_xmet_d[l_ac].xmet004,g_xmet_d[l_ac].xmet005, 
                   g_xmet_d[l_ac].xmet006,g_xmet_d[l_ac].xmet007,g_xmet_d[l_ac].xmet008,g_xmet_d[l_ac].xmet009, 
                   g_xmet_d[l_ac].xmet010,g_xmet_d[l_ac].xmet011,g_xmet_d[l_ac].xmet012,g_xmet_d[l_ac].xmet013, 
                   g_xmet_d[l_ac].xmet014)
                WHERE xmetent = g_enterprise AND xmetsite = g_site AND xmetdocno = g_xmes_m.xmesdocno 
                  AND xmet001 = g_xmes_m.xmes001 
 
                  AND xmet002 = g_xmet_d_t.xmet002 #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("xmet_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_xmet_d[l_ac].* = g_xmet_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("xmet_t",SQLCA.sqlcode,1)
                     LET g_xmet_d[l_ac].* = g_xmet_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmes_m.xmesdocno
               LET gs_keys_bak[1] = g_xmesdocno_t
               LET gs_keys[2] = g_xmes_m.xmes001
               LET gs_keys_bak[2] = g_xmes001_t
               LET gs_keys[3] = g_xmet_d[g_detail_idx].xmet002
               LET gs_keys_bak[3] = g_xmet_d_t.xmet002
               CALL axmi400_update_b('xmet_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
			   #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_xmes_m),util.JSON.stringify(g_xmet_d_t)
               LET g_log2 = util.JSON.stringify(g_xmes_m),util.JSON.stringify(g_xmet_d[l_ac])
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL axmi400_unlock_b("xmet_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_xmet_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_xmet_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_xmet2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xmet2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axmi400_b_fill()
            LET g_rec_b = g_xmet2_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmet2_d[l_ac].* TO NULL 
            INITIALIZE g_xmet2_d_t.* TO NULL 
            INITIALIZE g_xmet2_d_o.* TO NULL 
                  LET g_xmet2_d[l_ac].xmeu008 = "0"
      LET g_xmet2_d[l_ac].xmeu009 = "0"
      LET g_xmet2_d[l_ac].xmeu010 = "1"
 
            LET g_xmet2_d_t.* = g_xmet2_d[l_ac].*     #新輸入資料
            LET g_xmet2_d_o.* = g_xmet2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axmi400_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL axmi400_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmet2_d[li_reproduce_target].* = g_xmet2_d[li_reproduce].*
 
               LET g_xmet2_d[li_reproduce_target].xmeu002 = NULL
               LET g_xmet2_d[li_reproduce_target].xmeu003 = NULL
               LET g_xmet2_d[li_reproduce_target].xmeu004 = NULL
               LET g_xmet2_d[li_reproduce_target].xmeu006 = NULL
            END IF
            #公用欄位給值(單身2)
            
            
            #add-point:modify段before insert
            {<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN axmi400_cl USING g_enterprise, g_site,g_xmes_m.xmesdocno,g_xmes_m.xmes001
            IF STATUS THEN
               CALL cl_err("OPEN axmi400_cl:", STATUS, 1)
               CLOSE axmi400_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_xmet2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xmet2_d[l_ac].xmeu002 IS NOT NULL
               AND g_xmet2_d[l_ac].xmeu003 IS NOT NULL
               AND g_xmet2_d[l_ac].xmeu004 IS NOT NULL
               AND g_xmet2_d[l_ac].xmeu006 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_xmet2_d_t.* = g_xmet2_d[l_ac].*  #BACKUP
               LET g_xmet2_d_o.* = g_xmet2_d[l_ac].*  #BACKUP
               CALL axmi400_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL axmi400_set_no_entry_b(l_cmd)
               IF NOT axmi400_lock_b("xmeu_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axmi400_bcl2 INTO g_xmet2_d[l_ac].xmeu002,g_xmet2_d[l_ac].xmeu003,g_xmet2_d[l_ac].xmeu004, 
                      g_xmet2_d[l_ac].xmeu005,g_xmet2_d[l_ac].xmeu006,g_xmet2_d[l_ac].xmeu007,g_xmet2_d[l_ac].xmeu008, 
                      g_xmet2_d[l_ac].xmeu009,g_xmet2_d[l_ac].xmeu010,g_xmet2_d[l_ac].xmeu011
                  IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL axmi400_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_xmet2_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_xmet2_d.deleteElement(l_ac)
               NEXT FIELD xmeu002
            END IF
         
            IF g_xmet2_d[l_ac].xmeu002 IS NOT NULL
               AND g_xmet2_d_t.xmeu003 IS NOT NULL
               AND g_xmet2_d_t.xmeu004 IS NOT NULL
               AND g_xmet2_d_t.xmeu006 IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM xmeu_t
                WHERE xmeuent = g_enterprise AND xmeusite = g_site AND xmeudocno = g_xmes_m.xmesdocno AND
                                          xmeu001 = g_xmes_m.xmes001 AND
                      xmeu002 = g_xmet2_d_t.xmeu002
                  AND xmeu003 = g_xmet2_d_t.xmeu003
                  AND xmeu004 = g_xmet2_d_t.xmeu004
                  AND xmeu006 = g_xmet2_d_t.xmeu006
                  
               #add-point:單身2刪除中
               {<point name="input.body2.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("xmet_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身2刪除後
                  {<point name="input.body2.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE axmi400_bcl
               LET l_count = g_xmet_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmes_m.xmesdocno
               LET gs_keys[2] = g_xmes_m.xmes001
               LET gs_keys[3] = g_xmet2_d[g_detail_idx].xmeu002
               LET gs_keys[4] = g_xmet2_d[g_detail_idx].xmeu003
               LET gs_keys[5] = g_xmet2_d[g_detail_idx].xmeu004
               LET gs_keys[6] = g_xmet2_d[g_detail_idx].xmeu006
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body2.after_delete"/>}
            #end add-point
                           CALL axmi400_delete_b('xmeu_t',gs_keys,"'2'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM xmeu_t 
             WHERE xmeuent = g_enterprise AND xmeusite = g_site AND xmeudocno = g_xmes_m.xmesdocno
               AND xmeu001 = g_xmes_m.xmes001
               AND xmeu002 = g_xmet2_d[l_ac].xmeu002
               AND xmeu003 = g_xmet2_d[l_ac].xmeu003
               AND xmeu004 = g_xmet2_d[l_ac].xmeu004
               AND xmeu006 = g_xmet2_d[l_ac].xmeu006
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmes_m.xmesdocno
               LET gs_keys[2] = g_xmes_m.xmes001
               LET gs_keys[3] = g_xmet2_d[g_detail_idx].xmeu002
               LET gs_keys[4] = g_xmet2_d[g_detail_idx].xmeu003
               LET gs_keys[5] = g_xmet2_d[g_detail_idx].xmeu004
               LET gs_keys[6] = g_xmet2_d[g_detail_idx].xmeu006
               CALL axmi400_insert_b('xmeu_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_xmet_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("xmeu_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axmi400_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_xmet2_d[l_ac].* = g_xmet2_d_t.*
               CLOSE axmi400_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_xmet2_d[l_ac].* = g_xmet2_d_t.*
            ELSE
               #add-point:單身page2修改前
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               UPDATE xmeu_t SET (xmeudocno,xmeu001,xmeu002,xmeu003,xmeu004,xmeu005,xmeu006,xmeu007, 
                   xmeu008,xmeu009,xmeu010,xmeu011) = (g_xmes_m.xmesdocno,g_xmes_m.xmes001,g_xmet2_d[l_ac].xmeu002, 
                   g_xmet2_d[l_ac].xmeu003,g_xmet2_d[l_ac].xmeu004,g_xmet2_d[l_ac].xmeu005,g_xmet2_d[l_ac].xmeu006, 
                   g_xmet2_d[l_ac].xmeu007,g_xmet2_d[l_ac].xmeu008,g_xmet2_d[l_ac].xmeu009,g_xmet2_d[l_ac].xmeu010, 
                   g_xmet2_d[l_ac].xmeu011) #自訂欄位頁簽
                WHERE xmeuent = g_enterprise AND xmeusite = g_site AND xmeudocno = g_xmes_m.xmesdocno
                  AND xmeu001 = g_xmes_m.xmes001
                  AND xmeu002 = g_xmet2_d_t.xmeu002 #項次 
                  AND xmeu003 = g_xmet2_d_t.xmeu003
                  AND xmeu004 = g_xmet2_d_t.xmeu004
                  AND xmeu006 = g_xmet2_d_t.xmeu006
                  
               #add-point:單身page2修改中
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("xmeu_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_xmet2_d[l_ac].* = g_xmet2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("xmeu_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_xmet2_d[l_ac].* = g_xmet2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmes_m.xmesdocno
               LET gs_keys_bak[1] = g_xmesdocno_t
               LET gs_keys[2] = g_xmes_m.xmes001
               LET gs_keys_bak[2] = g_xmes001_t
               LET gs_keys[3] = g_xmet2_d[g_detail_idx].xmeu002
               LET gs_keys_bak[3] = g_xmet2_d_t.xmeu002
               LET gs_keys[4] = g_xmet2_d[g_detail_idx].xmeu003
               LET gs_keys_bak[4] = g_xmet2_d_t.xmeu003
               LET gs_keys[5] = g_xmet2_d[g_detail_idx].xmeu004
               LET gs_keys_bak[5] = g_xmet2_d_t.xmeu004
               LET gs_keys[6] = g_xmet2_d[g_detail_idx].xmeu006
               LET gs_keys_bak[6] = g_xmet2_d_t.xmeu006
               CALL axmi400_update_b('xmeu_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
			   
               #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_xmes_m),util.JSON.stringify(g_xmet2_d_t)
               LET g_log2 = util.JSON.stringify(g_xmes_m),util.JSON.stringify(g_xmet2_d[l_ac])
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #此段落由子樣板a02產生
         AFTER FIELD xmeu002
            
            #add-point:AFTER FIELD xmeu002
            {<point name="input.a.page2.xmeu002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmeu002
            #add-point:BEFORE FIELD xmeu002
            {<point name="input.b.page2.xmeu002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmeu002
            #add-point:ON CHANGE xmeu002
            {<point name="input.g.page2.xmeu002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmeu003
            
            #add-point:AFTER FIELD xmeu003
            {<point name="input.a.page2.xmeu003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmeu003
            #add-point:BEFORE FIELD xmeu003
            {<point name="input.b.page2.xmeu003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmeu003
            #add-point:ON CHANGE xmeu003
            {<point name="input.g.page2.xmeu003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmeu004
            #add-point:BEFORE FIELD xmeu004
            {<point name="input.b.page2.xmeu004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmeu004
            
            #add-point:AFTER FIELD xmeu004
            {<point name="input.a.page2.xmeu004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmeu004
            #add-point:ON CHANGE xmeu004
            {<point name="input.g.page2.xmeu004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmeu005
            
            #add-point:AFTER FIELD xmeu005
            {<point name="input.a.page2.xmeu005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmeu005
            #add-point:BEFORE FIELD xmeu005
            {<point name="input.b.page2.xmeu005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmeu005
            #add-point:ON CHANGE xmeu005
            {<point name="input.g.page2.xmeu005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmeu006
            #add-point:BEFORE FIELD xmeu006
            {<point name="input.b.page2.xmeu006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmeu006
            
            #add-point:AFTER FIELD xmeu006
            {<point name="input.a.page2.xmeu006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmeu006
            #add-point:ON CHANGE xmeu006
            {<point name="input.g.page2.xmeu006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmeu007
            
            #add-point:AFTER FIELD xmeu007
            {<point name="input.a.page2.xmeu007" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmeu007
            #add-point:BEFORE FIELD xmeu007
            {<point name="input.b.page2.xmeu007" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmeu007
            #add-point:ON CHANGE xmeu007
            {<point name="input.g.page2.xmeu007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmeu008
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_xmet2_d[l_ac].xmeu008,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD xmeu008
            END IF
 
 
            #add-point:AFTER FIELD xmeu008
            {<point name="input.a.page2.xmeu008" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmeu008
            #add-point:BEFORE FIELD xmeu008
            {<point name="input.b.page2.xmeu008" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmeu008
            #add-point:ON CHANGE xmeu008
            {<point name="input.g.page2.xmeu008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmeu009
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_xmet2_d[l_ac].xmeu009,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD xmeu009
            END IF
 
 
            #add-point:AFTER FIELD xmeu009
            {<point name="input.a.page2.xmeu009" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmeu009
            #add-point:BEFORE FIELD xmeu009
            {<point name="input.b.page2.xmeu009" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmeu009
            #add-point:ON CHANGE xmeu009
            {<point name="input.g.page2.xmeu009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmeu010
            #add-point:BEFORE FIELD xmeu010
            {<point name="input.b.page2.xmeu010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmeu010
            
            #add-point:AFTER FIELD xmeu010
            {<point name="input.a.page2.xmeu010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmeu010
            #add-point:ON CHANGE xmeu010
            {<point name="input.g.page2.xmeu010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmeu011
            #add-point:BEFORE FIELD xmeu011
            {<point name="input.b.page2.xmeu011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmeu011
            
            #add-point:AFTER FIELD xmeu011
            {<point name="input.a.page2.xmeu011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmeu011
            #add-point:ON CHANGE xmeu011
            {<point name="input.g.page2.xmeu011" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page2.xmeu002
         ON ACTION controlp INFIELD xmeu002
            #add-point:ON ACTION controlp INFIELD xmeu002
            {<point name="input.c.page2.xmeu002" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmeu003
         ON ACTION controlp INFIELD xmeu003
            #add-point:ON ACTION controlp INFIELD xmeu003
            {<point name="input.c.page2.xmeu003" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmeu004
         ON ACTION controlp INFIELD xmeu004
            #add-point:ON ACTION controlp INFIELD xmeu004
            {<point name="input.c.page2.xmeu004" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmeu005
         ON ACTION controlp INFIELD xmeu005
            #add-point:ON ACTION controlp INFIELD xmeu005
            {<point name="input.c.page2.xmeu005" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmeu006
         ON ACTION controlp INFIELD xmeu006
            #add-point:ON ACTION controlp INFIELD xmeu006
            {<point name="input.c.page2.xmeu006" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmeu007
         ON ACTION controlp INFIELD xmeu007
            #add-point:ON ACTION controlp INFIELD xmeu007
            {<point name="input.c.page2.xmeu007" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmeu008
         ON ACTION controlp INFIELD xmeu008
            #add-point:ON ACTION controlp INFIELD xmeu008
            {<point name="input.c.page2.xmeu008" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmeu009
         ON ACTION controlp INFIELD xmeu009
            #add-point:ON ACTION controlp INFIELD xmeu009
            {<point name="input.c.page2.xmeu009" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmeu010
         ON ACTION controlp INFIELD xmeu010
            #add-point:ON ACTION controlp INFIELD xmeu010
            {<point name="input.c.page2.xmeu010" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmeu011
         ON ACTION controlp INFIELD xmeu011
            #add-point:ON ACTION controlp INFIELD xmeu011
            {<point name="input.c.page2.xmeu011" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_xmet2_d[l_ac].* = g_xmet2_d_t.*
               END IF
               CLOSE axmi400_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL axmi400_unlock_b("xmeu_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body2.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_xmet2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_xmet2_d.getLength()+1
 
      END INPUT
 
      
 
      
 
      
 
      
]]>
  </section>
  <section id="axmi400.input.head" ver="5" status="" src="s">
    <![CDATA[      #單頭段
      INPUT BY NAME g_xmes_m.xmesdocno,g_xmes_m.xmesl003,g_xmes_m.xmesl004,g_xmes_m.xmes001,g_xmes_m.xmesstus  

         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         #+ 此段落由子樣板a43產生
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.master_input.update_item" />}
               #END add-point
            END IF
 
 
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET g_master_multi_table_t.xmesldocno = g_xmes_m.xmesdocno
LET g_master_multi_table_t.xmesl003 = g_xmes_m.xmesl003
LET g_master_multi_table_t.xmesl004 = g_xmes_m.xmesl004
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.xmesldocno = ''
LET g_master_multi_table_t.xmesl003 = ''
LET g_master_multi_table_t.xmesl004 = ''
 
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a01產生
         BEFORE FIELD xmesdocno
            #add-point:BEFORE FIELD xmesdocno
            {<point name="input.b.xmesdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmesdocno
            
            #add-point:AFTER FIELD xmesdocno
            {<point name="input.a.xmesdocno" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmesdocno
            #add-point:ON CHANGE xmesdocno
            {<point name="input.g.xmesdocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmesl003
            #add-point:BEFORE FIELD xmesl003
            {<point name="input.b.xmesl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmesl003
            
            #add-point:AFTER FIELD xmesl003
            {<point name="input.a.xmesl003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmesl003
            #add-point:ON CHANGE xmesl003
            {<point name="input.g.xmesl003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmesl004
            #add-point:BEFORE FIELD xmesl004
            {<point name="input.b.xmesl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmesl004
            
            #add-point:AFTER FIELD xmesl004
            {<point name="input.a.xmesl004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmesl004
            #add-point:ON CHANGE xmesl004
            {<point name="input.g.xmesl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmes001
            
            #add-point:AFTER FIELD xmes001
            {<point name="input.a.xmes001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmes001
            #add-point:BEFORE FIELD xmes001
            {<point name="input.b.xmes001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmes001
            #add-point:ON CHANGE xmes001
            {<point name="input.g.xmes001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmesstus
            #add-point:BEFORE FIELD xmesstus
            {<point name="input.b.xmesstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmesstus
            
            #add-point:AFTER FIELD xmesstus
            {<point name="input.a.xmesstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmesstus
            #add-point:ON CHANGE xmesstus
            {<point name="input.g.xmesstus" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.xmesdocno
         ON ACTION controlp INFIELD xmesdocno
            #add-point:ON ACTION controlp INFIELD xmesdocno
            {<point name="input.c.xmesdocno" />}
            #END add-point
 
         #Ctrlp:input.c.xmesl003
         ON ACTION controlp INFIELD xmesl003
            #add-point:ON ACTION controlp INFIELD xmesl003
            {<point name="input.c.xmesl003" />}
            #END add-point
 
         #Ctrlp:input.c.xmesl004
         ON ACTION controlp INFIELD xmesl004
            #add-point:ON ACTION controlp INFIELD xmesl004
            {<point name="input.c.xmesl004" />}
            #END add-point
 
         #Ctrlp:input.c.xmes001
         ON ACTION controlp INFIELD xmes001
            #add-point:ON ACTION controlp INFIELD xmes001
            {<point name="input.c.xmes001" />}
            #END add-point
 
         #Ctrlp:input.c.xmesstus
         ON ACTION controlp INFIELD xmesstus
            #add-point:ON ACTION controlp INFIELD xmesstus
            {<point name="input.c.xmesstus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_xmes_m.xmesdocno,g_xmes_m.xmes001
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO xmes_t (xmesent, xmessite,xmesdocno,xmes001,xmesstus,xmesownid,xmesowndp, 
                   xmescrtid,xmescrtdp,xmescrtdt)
               VALUES (g_enterprise, g_site,g_xmes_m.xmesdocno,g_xmes_m.xmes001,g_xmes_m.xmesstus,g_xmes_m.xmesownid, 
                   g_xmes_m.xmesowndp,g_xmes_m.xmescrtid,g_xmes_m.xmescrtdp,g_xmes_m.xmescrtdt) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_xmes_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_xmes_m.xmesdocno = g_master_multi_table_t.xmesldocno AND
         g_xmes_m.xmesl003 = g_master_multi_table_t.xmesl003 AND 
         g_xmes_m.xmesl004 = g_master_multi_table_t.xmesl004  THEN
         ELSE 
            LET l_var_keys[01] = g_xmes_m.xmesdocno
            LET l_field_keys[01] = 'xmesldocno'
            LET l_var_keys_bak[01] = g_master_multi_table_t.xmesldocno
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'xmesl002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_xmes_m.xmesl003
            LET l_fields[01] = 'xmesl003'
            LET l_vars[02] = g_xmes_m.xmesl004
            LET l_fields[02] = 'xmesl004'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'xmeslent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'xmesl_t')
         END IF 
 
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL axmi400_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE xmes_t SET (xmesdocno,xmes001,xmesstus,xmesownid,xmesowndp,xmescrtid,xmescrtdp, 
                   xmescrtdt) = (g_xmes_m.xmesdocno,g_xmes_m.xmes001,g_xmes_m.xmesstus,g_xmes_m.xmesownid, 
                   g_xmes_m.xmesowndp,g_xmes_m.xmescrtid,g_xmes_m.xmescrtdp,g_xmes_m.xmescrtdt)
                WHERE xmesent = g_enterprise AND xmessite = g_site AND xmesdocno = g_xmesdocno_t
                  AND xmes001 = g_xmes001_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("xmes_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_xmes_m.xmesdocno = g_master_multi_table_t.xmesldocno AND
         g_xmes_m.xmesl003 = g_master_multi_table_t.xmesl003 AND 
         g_xmes_m.xmesl004 = g_master_multi_table_t.xmesl004  THEN
         ELSE 
            LET l_var_keys[01] = g_xmes_m.xmesdocno
            LET l_field_keys[01] = 'xmesldocno'
            LET l_var_keys_bak[01] = g_master_multi_table_t.xmesldocno
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'xmesl002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_xmes_m.xmesl003
            LET l_fields[01] = 'xmesl003'
            LET l_vars[02] = g_xmes_m.xmesl004
            LET l_fields[02] = 'xmesl004'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'xmeslent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'xmesl_t')
         END IF 
 
               
			   #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_xmes_m_t)
               LET g_log2 = util.JSON.stringify(g_xmes_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_xmesdocno_t = g_xmes_m.xmesdocno
            LET g_xmes001_t = g_xmes_m.xmes001
 
            #controlp
            
      END INPUT
   
]]>
  </section>
  <section id="axmi400.input.other" ver="1" status="" src="s">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD xmesdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xmet002
               WHEN "s_detail2"
                  NEXT FIELD xmeu002
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="axmi400.insert" ver="5" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION axmi400_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_xmet_d.clear()   
   CALL g_xmet2_d.clear()  
 
 
   INITIALIZE g_xmes_m.* LIKE xmes_t.*             #DEFAULT 設定
   
   LET g_xmesdocno_t = NULL
   LET g_xmes001_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_xmes_m.xmesownid = g_user
      LET g_xmes_m.xmesowndp = g_dept
      LET g_xmes_m.xmescrtid = g_user
      LET g_xmes_m.xmescrtdp = g_dept 
      LET g_xmes_m.xmescrtdt = cl_get_current()
      LET g_xmes_m.xmesmodid = ""
      LET g_xmes_m.xmesmoddt = ""
      LET g_xmes_m.xmesstus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_xmes_m.xmes001 = "0"
      LET g_xmes_m.xmesstus = "Y"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL axmi400_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_xmes_m.* = g_xmes_m_t.*
         CALL axmi400_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_xmet_d.clear()
      CALL g_xmet2_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #將新增的資料併入搜尋條件中
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_xmesdocno_t = g_xmes_m.xmesdocno
   LET g_xmes001_t = g_xmes_m.xmes001
 
   
   LET g_wc = "(",g_wc,  
              " OR ( xmesent = '" ||g_enterprise|| "' AND xmessite = '" ||g_site|| "' AND",
              " xmesdocno = '", g_xmes_m.xmesdocno CLIPPED, "' "
              ," AND xmes001 = '", g_xmes_m.xmes001 CLIPPED, "' "
 
              , ")) "
   
   CLOSE axmi400_cl
   
END FUNCTION
]]>
  </section>
  <section id="axmi400.insert_b" ver="1" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION axmi400_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO xmet_t
                  (xmetent, xmetsite,
                   xmetdocno,xmet001,
                   xmet002
                   ,xmet003,xmet004,xmet005,xmet006,xmet007,xmet008,xmet009,xmet010,xmet011,xmet012,xmet013,xmet014) 
            VALUES(g_enterprise, g_site,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_xmet_d[g_detail_idx].xmet003,g_xmet_d[g_detail_idx].xmet004,g_xmet_d[g_detail_idx].xmet005, 
                       g_xmet_d[g_detail_idx].xmet006,g_xmet_d[g_detail_idx].xmet007,g_xmet_d[g_detail_idx].xmet008, 
                       g_xmet_d[g_detail_idx].xmet009,g_xmet_d[g_detail_idx].xmet010,g_xmet_d[g_detail_idx].xmet011, 
                       g_xmet_d[g_detail_idx].xmet012,g_xmet_d[g_detail_idx].xmet013,g_xmet_d[g_detail_idx].xmet014) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("xmet_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO xmeu_t
                  (xmeuent, xmeusite,
                   xmeudocno,xmeu001,
                   xmeu002,xmeu003,xmeu004,xmeu006
                   ,xmeu005,xmeu007,xmeu008,xmeu009,xmeu010,xmeu011) 
            VALUES(g_enterprise, g_site,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5],ps_keys[6]
                   ,g_xmet2_d[g_detail_idx].xmeu005,g_xmet2_d[g_detail_idx].xmeu007,g_xmet2_d[g_detail_idx].xmeu008, 
                       g_xmet2_d[g_detail_idx].xmeu009,g_xmet2_d[g_detail_idx].xmeu010,g_xmet2_d[g_detail_idx].xmeu011) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("xmeu_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="axmi400.lock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION axmi400_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL axmi400_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "xmet_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN axmi400_bcl USING g_enterprise, g_site,
                                       g_xmes_m.xmesdocno,g_xmes_m.xmes001,g_xmet_d[g_detail_idx].xmet002  
                                               
      IF SQLCA.sqlcode THEN
         CALL cl_err("axmi400_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "xmeu_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN axmi400_bcl2 USING g_enterprise, g_site,
                                             g_xmes_m.xmesdocno,g_xmes_m.xmes001,g_xmet2_d[g_detail_idx].xmeu002, 
                                                 g_xmet2_d[g_detail_idx].xmeu003,g_xmet2_d[g_detail_idx].xmeu004, 
                                                 g_xmet2_d[g_detail_idx].xmeu006
      IF SQLCA.sqlcode THEN
         CALL cl_err("axmi400_bcl2",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="axmi400.main" ver="5" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axm","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT xmesdocno,'','',xmes001,xmesstus,xmesownid,'',xmesowndp,'',xmescrtid, 
       '',xmescrtdp,'',xmescrtdt,xmesmodid,'',xmesmoddt", 
                      " FROM xmes_t",
                      " WHERE xmesent= ? AND xmessite= ? AND xmesdocno=? AND xmes001=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmi400_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE xmesdocno,xmes001,xmesstus,xmesownid,xmesowndp,xmescrtid,xmescrtdp,xmescrtdt, 
       xmesmodid,xmesmoddt,t1.ooag011 ,t2.ooefl003 ,t3.ooag011 ,t4.ooefl003 ,t5.ooag011",
               " FROM xmes_t",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent='"||g_enterprise||"' AND t1.ooag001=xmesownid  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=xmesowndp AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent='"||g_enterprise||"' AND t3.ooag001=xmescrtid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=xmescrtdp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent='"||g_enterprise||"' AND t5.ooag001=xmesmodid  ",
 
               " WHERE xmesent = '" ||g_enterprise|| "' AND xmessite = '" ||g_site|| "' AND xmesdocno = ? AND xmes001 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE axmi400_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axmi400 WITH FORM cl_ap_formpath("axm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axmi400_init()   
 
      #進入選單 Menu (="N")
      CALL axmi400_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axmi400
      
   END IF 
   
   CLOSE axmi400_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="axmi400.modify" ver="5" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION axmi400_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_xmes_m.xmesdocno IS NULL
   OR g_xmes_m.xmes001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   ERROR ""
  
   LET g_xmesdocno_t = g_xmes_m.xmesdocno
   LET g_xmes001_t = g_xmes_m.xmes001
 
   CALL s_transaction_begin()
   
   OPEN axmi400_cl USING g_enterprise, g_site,g_xmes_m.xmesdocno,g_xmes_m.xmes001
   IF STATUS THEN
      CALL cl_err("OPEN axmi400_cl:", STATUS, 1)
      CLOSE axmi400_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axmi400_master_referesh USING g_xmes_m.xmesdocno,g_xmes_m.xmes001 INTO g_xmes_m.xmesdocno, 
       g_xmes_m.xmes001,g_xmes_m.xmesstus,g_xmes_m.xmesownid,g_xmes_m.xmesowndp,g_xmes_m.xmescrtid,g_xmes_m.xmescrtdp, 
       g_xmes_m.xmescrtdt,g_xmes_m.xmesmodid,g_xmes_m.xmesmoddt,g_xmes_m.xmesownid_desc,g_xmes_m.xmesowndp_desc, 
       g_xmes_m.xmescrtid_desc,g_xmes_m.xmescrtdp_desc,g_xmes_m.xmesmodid_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_xmes_m.xmesdocno,SQLCA.sqlcode,0)
      CLOSE axmi400_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL axmi400_show()
   WHILE TRUE
      LET g_xmesdocno_t = g_xmes_m.xmesdocno
      LET g_xmes001_t = g_xmes_m.xmes001
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_xmes_m.xmesmodid = g_user 
LET g_xmes_m.xmesmoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL axmi400_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_xmes_m.* = g_xmes_m_t.*
         CALL axmi400_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE xmes_t SET (xmesmodid,xmesmoddt) = (g_xmes_m.xmesmodid,g_xmes_m.xmesmoddt)
       WHERE xmesent = g_enterprise AND xmessite = g_site AND xmesdocno = g_xmesdocno_t
         AND xmes001 = g_xmes001_t
 
                  
      #若單頭key欄位有變更
      IF g_xmes_m.xmesdocno != g_xmesdocno_t 
      OR g_xmes_m.xmes001 != g_xmes001_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE xmet_t SET xmetdocno = g_xmes_m.xmesdocno
                                       ,xmet001 = g_xmes_m.xmes001
 
          WHERE xmetent = g_enterprise AND xmetsite = g_site AND xmetdocno = g_xmesdocno_t
            AND xmet001 = g_xmes001_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("xmet_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("xmet_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         UPDATE xmeu_t
            SET xmeudocno = g_xmes_m.xmesdocno
               ,xmeu001 = g_xmes_m.xmes001
 
          WHERE xmeuent = g_enterprise AND xmeusite = g_site AND
                xmeudocno = g_xmesdocno_t
            AND xmeu001 = g_xmes001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("xmeu_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("xmeu_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_xmes_m.xmesdocno,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE axmi400_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_xmes_m.xmesdocno,'U')
 
END FUNCTION   
]]>
  </section>
  <section id="axmi400.other_dialog" ver="2" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="axmi400.other_function" ver="1" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="axmi400.query" ver="2" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION axmi400_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_xmet_d.clear()
   CALL g_xmet2_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL axmi400_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL axmi400_browser_fill("")
      CALL axmi400_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL axmi400_filter_show('xmesdocno')
   CALL axmi400_filter_show('xmes001')
   CALL axmi400_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL axmi400_fetch("F") 
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="axmi400.reproduce" ver="3" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION axmi400_reproduce()
   DEFINE l_newno     LIKE xmes_t.xmesdocno 
   DEFINE l_oldno     LIKE xmes_t.xmesdocno 
   DEFINE l_newno02     LIKE xmes_t.xmes001 
   DEFINE l_oldno02     LIKE xmes_t.xmes001 
 
   DEFINE l_master    RECORD LIKE xmes_t.*
   DEFINE l_detail    RECORD LIKE xmet_t.*
   DEFINE l_detail2    RECORD LIKE xmeu_t.*
 
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_xmes_m.xmesdocno IS NULL
   OR g_xmes_m.xmes001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_xmesdocno_t = g_xmes_m.xmesdocno
   LET g_xmes001_t = g_xmes_m.xmes001
 
    
   LET g_xmes_m.xmesdocno = ""
   LET g_xmes_m.xmes001 = ""
 
    
   CALL axmi400_set_entry('a')
   CALL axmi400_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_xmes_m.xmesownid = g_user
      LET g_xmes_m.xmesowndp = g_dept
      LET g_xmes_m.xmescrtid = g_user
      LET g_xmes_m.xmescrtdp = g_dept 
      LET g_xmes_m.xmescrtdt = cl_get_current()
      LET g_xmes_m.xmesmodid = ""
      LET g_xmes_m.xmesmoddt = ""
      LET g_xmes_m.xmesstus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL axmi400_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
   
   #將新增的資料併入搜尋條件中
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = "(",g_wc,  
              " OR (",
              " xmesdocno = '", g_xmes_m.xmesdocno CLIPPED, "' "
              ," AND xmes001 = '", g_xmes_m.xmes001 CLIPPED, "' "
 
              , ")) "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="axmi400.set_entry" ver="1" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION axmi400_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("xmesdocno,xmes001",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="axmi400.set_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION axmi400_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="axmi400.set_no_entry" ver="1" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION axmi400_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("xmesdocno,xmes001",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="axmi400.set_no_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION axmi400_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="axmi400.set_pk_array" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION axmi400_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_xmes_m.xmesdocno
   LET g_pk_array[1].column = 'xmesdocno'
   LET g_pk_array[2].values = g_xmes_m.xmes001
   LET g_pk_array[2].column = 'xmes001'
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="axmi400.show" ver="4" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION axmi400_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL axmi400_b_fill() #單身填充
      CALL axmi400_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_xmes_m.xmesownid_desc = cl_get_username(g_xmes_m.xmesownid)
      #LET g_xmes_m.xmesowndp_desc = cl_get_deptname(g_xmes_m.xmesowndp)
      #LET g_xmes_m.xmescrtid_desc = cl_get_username(g_xmes_m.xmescrtid)
      #LET g_xmes_m.xmescrtdp_desc = cl_get_deptname(g_xmes_m.xmescrtdp)
      #LET g_xmes_m.xmesmodid_desc = cl_get_username(g_xmes_m.xmesmodid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL axmi400_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xmes_m.xmesdocno,g_xmes_m.xmesl003,g_xmes_m.xmesl004,g_xmes_m.xmes001,g_xmes_m.xmesstus, 
       g_xmes_m.xmesownid,g_xmes_m.xmesownid_desc,g_xmes_m.xmesowndp,g_xmes_m.xmesowndp_desc,g_xmes_m.xmescrtid, 
       g_xmes_m.xmescrtid_desc,g_xmes_m.xmescrtdp,g_xmes_m.xmescrtdp_desc,g_xmes_m.xmescrtdt,g_xmes_m.xmesmodid, 
       g_xmes_m.xmesmodid_desc,g_xmes_m.xmesmoddt
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_xmes_m.xmesstus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_xmet_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_xmet2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL axmi400_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="axmi400.signature" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="axmi400.state_change" ver="2" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION axmi400_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_xmes_m.xmesdocno IS NULL
      OR g_xmes_m.xmes001 IS NULL
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_xmes_m.xmesstus
            WHEN "N"
               HIDE OPTION "inactive"
            WHEN "Y"
               HIDE OPTION "active"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION inactive
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.inactive"/>}
         #end add-point
         EXIT MENU
      ON ACTION active
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.active"/>}
         #end add-point
         EXIT MENU
      
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE xmes_t SET xmesstus = lc_state 
    WHERE xmesent = g_enterprise AND xmessite = g_site AND xmesdocno = g_xmes_m.xmesdocno
      AND xmes001 = g_xmes_m.xmes001
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
      LET g_xmes_m.xmesstus = lc_state
      DISPLAY BY NAME g_xmes_m.xmesstus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
  </section>
  <section id="axmi400.ui_browser_refresh" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION axmi400_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_xmesdocno = g_xmes_m.xmesdocno 
         AND g_browser[l_i].b_xmes001 = g_xmes_m.xmes001 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
  </section>
  <section id="axmi400.ui_detailshow" ver="1" status="" src="s">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION axmi400_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="axmi400.ui_dialog" ver="2" status="" src="s">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION axmi400_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL axmi400_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL axmi400_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_xmesdocno = g_xmesdocno_t
               AND g_browser[li_idx].b_xmes001 = g_xmes001_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL axmi400_fetch('') # reload data
               LET l_ac = 1
               CALL axmi400_ui_detailshow() #Setting the current row 
      
               CALL axmi400_idx_chk()
               #NEXT FIELD xmet002
         
         END DISPLAY
        
         DISPLAY ARRAY g_xmet_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL axmi400_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL axmi400_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         DISPLAY ARRAY g_xmet2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL axmi400_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               CALL axmi400_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL axmi400_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL axmi400_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL axmi400_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL axmi400_statechange()
            EXIT DIALOG
      
         
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL axmi400_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL axmi400_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL axmi400_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL axmi400_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL axmi400_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmi400_idx_chk()
            
         ON ACTION previous
            CALL axmi400_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmi400_idx_chk()
            
         ON ACTION jump
            CALL axmi400_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmi400_idx_chk()
            
         ON ACTION next
            CALL axmi400_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmi400_idx_chk()
            
         ON ACTION last
            CALL axmi400_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmi400_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD xmet002
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL axmi400_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL axmi400_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL axmi400_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL axmi400_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL axmi400_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL axmi400_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL axmi400_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL axmi400_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL axmi400_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="axmi400.ui_headershow" ver="2" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION axmi400_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_xmes_m.xmesdocno = g_browser[g_current_idx].b_xmesdocno   
   LET g_xmes_m.xmes001 = g_browser[g_current_idx].b_xmes001   
 
   EXECUTE axmi400_master_referesh USING g_xmes_m.xmesdocno,g_xmes_m.xmes001 INTO g_xmes_m.xmesdocno, 
       g_xmes_m.xmes001,g_xmes_m.xmesstus,g_xmes_m.xmesownid,g_xmes_m.xmesowndp,g_xmes_m.xmescrtid,g_xmes_m.xmescrtdp, 
       g_xmes_m.xmescrtdt,g_xmes_m.xmesmodid,g_xmes_m.xmesmoddt,g_xmes_m.xmesownid_desc,g_xmes_m.xmesowndp_desc, 
       g_xmes_m.xmescrtid_desc,g_xmes_m.xmescrtdp_desc,g_xmes_m.xmesmodid_desc
   CALL axmi400_show()
   
END FUNCTION
]]>
  </section>
  <section id="axmi400.unlock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION axmi400_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmi400_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmi400_bcl2
   END IF
 
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="axmi400.update_b" ver="1" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION axmi400_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmet_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE xmet_t 
         SET (xmetdocno,xmet001,
              xmet002
              ,xmet003,xmet004,xmet005,xmet006,xmet007,xmet008,xmet009,xmet010,xmet011,xmet012,xmet013,xmet014) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_xmet_d[g_detail_idx].xmet003,g_xmet_d[g_detail_idx].xmet004,g_xmet_d[g_detail_idx].xmet005, 
                  g_xmet_d[g_detail_idx].xmet006,g_xmet_d[g_detail_idx].xmet007,g_xmet_d[g_detail_idx].xmet008, 
                  g_xmet_d[g_detail_idx].xmet009,g_xmet_d[g_detail_idx].xmet010,g_xmet_d[g_detail_idx].xmet011, 
                  g_xmet_d[g_detail_idx].xmet012,g_xmet_d[g_detail_idx].xmet013,g_xmet_d[g_detail_idx].xmet014)  

         WHERE xmetent = g_enterprise AND xmetsite = g_site AND xmetdocno = ps_keys_bak[1] AND xmet001 = ps_keys_bak[2] AND xmet002 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("xmet_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("xmet_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmeu_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point     
      UPDATE xmeu_t 
         SET (xmeudocno,xmeu001,
              xmeu002,xmeu003,xmeu004,xmeu006
              ,xmeu005,xmeu007,xmeu008,xmeu009,xmeu010,xmeu011) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5],ps_keys[6]
              ,g_xmet2_d[g_detail_idx].xmeu005,g_xmet2_d[g_detail_idx].xmeu007,g_xmet2_d[g_detail_idx].xmeu008, 
                  g_xmet2_d[g_detail_idx].xmeu009,g_xmet2_d[g_detail_idx].xmeu010,g_xmet2_d[g_detail_idx].xmeu011)  

         WHERE xmeuent = g_enterprise AND xmeusite = g_site AND xmeudocno = ps_keys_bak[1] AND xmeu001 = ps_keys_bak[2] AND xmeu002 = ps_keys_bak[3] AND xmeu003 = ps_keys_bak[4] AND xmeu004 = ps_keys_bak[5] AND xmeu006 = ps_keys_bak[6]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("xmeu_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("xmeu_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
