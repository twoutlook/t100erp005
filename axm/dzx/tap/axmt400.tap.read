<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="axmt400" std_prog="axmt400" erpver="1.0" module="AXM" ver="2" env="s" zone="t10dev" booking="N" type="M" identity="s">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="function.axmt400_xmex006_ref" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 工作站說明
# Memo...........:
# Usage..........: CALL axmt400_xmex006_ref()
# Input parameter: no
# Return code....: no
# Date & Author..: 140613 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt400_xmex006_ref()
 
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmew2_d[l_ac].xmex006
   CALL ap_ref_array2(g_ref_fields,"SELECT ecaa002 FROM ecaa_t WHERE ecaaent='"||g_enterprise||"' AND ecaa001=? ","") RETURNING g_rtn_fields
   LET g_xmew2_d[l_ac].xmex006_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmew2_d[l_ac].xmex006_desc

END FUNCTION]]>
  </point>
  <point name="function.axmt400_xmex012" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 工資單價 = 預估工時 * 單位工資率
# Memo...........:
# Usage..........: CALL axmt400_xmex012()
# Input parameter: no
# Return code....: no
# Date & Author..: 140613 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt400_xmex012()

   IF cl_null(g_xmew2_d[l_ac].xmex007) THEN LET g_xmew2_d[l_ac].xmex007 = 0 END IF
   IF cl_null(g_xmew2_d[l_ac].xmex010) THEN LET g_xmew2_d[l_ac].xmex010 = 0 END IF
   LET g_xmew2_d[l_ac].xmex012 = g_xmew2_d[l_ac].xmex007 * g_xmew2_d[l_ac].xmex010
   CALL s_curr_round(g_site,g_xmev_m.xmev006,g_xmew2_d[l_ac].xmex012,'1') RETURNING g_xmew2_d[l_ac].xmex012

END FUNCTION]]>
  </point>
  <point name="function.axmt400_xmex013" order="3" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 費用單價 = 預估機時 * 單位費用率
# Memo...........:
# Usage..........: CALL axmt400_xmex013()
# Input parameter: no
# Return code....: no
# Date & Author..: 140613 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt400_xmex013()

   IF cl_null(g_xmew2_d[l_ac].xmex008) THEN LET g_xmew2_d[l_ac].xmex008 = 0 END IF
   IF cl_null(g_xmew2_d[l_ac].xmex011) THEN LET g_xmew2_d[l_ac].xmex011 = 0 END IF
   LET g_xmew2_d[l_ac].xmex013 = g_xmew2_d[l_ac].xmex008 * g_xmew2_d[l_ac].xmex011
   CALL s_curr_round(g_site,g_xmev_m.xmev006,g_xmew2_d[l_ac].xmex013,'1') RETURNING g_xmew2_d[l_ac].xmex013

END FUNCTION]]>
  </point>
  <point name="function.axmt400_imaa005_exists" order="4" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 特徵類別
# Memo...........:
# Usage..........: CALL axmt400_imaa005_exists()
# Input parameter: no
# Return code....: no
# Date & Author..: 140613 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt400_imaa005_exists()
DEFINE l_imaa005  LIKE imaa_t.imaa005

   IF cl_null(g_xmew_d[l_ac].xmew003) THEN
      RETURN FALSE
   ELSE
      LET l_imaa005 = ''
      SELECT imaa005 INTO l_imaa005
        FROM imaa_t
       WHERE imaaent = g_enterprise
         AND imaa001 =  g_xmew_d[l_ac].xmew003
      IF cl_null(l_imaa005) THEN
         RETURN FALSE
      END IF
   END IF
   RETURN TRUE

END FUNCTION]]>
  </point>
  <point name="function.axmt400_xmew015" order="5" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 材料金額 = 材料單價 * (估價數量 * 組成用量 / 主件底數)
# Memo...........:
# Usage..........: CALL axmt400_xmew015(p_xmew014,p_xmew007,p_xmew008)
# Input parameter: p_xmew014   材料單價
#                : p_xmew007   組成用量
#                : p_xmew008   主件底數
# Return code....: no
# Date & Author..: 140613 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt400_xmew015(p_xmew014,p_xmew007,p_xmew008)
DEFINE p_xmew014  LIKE xmew_t.xmew014
DEFINE p_xmew007  LIKE xmew_t.xmew007
DEFINE p_xmew008  LIKE xmew_t.xmew008
DEFINE r_xmew015  LIKE xmew_t.xmew015

   IF cl_null(p_xmew014) THEN LET p_xmew014 = 0 END IF
   IF cl_null(g_xmev_m.xmev011) THEN LET g_xmev_m.xmev011 = 0 END IF
   IF cl_null(p_xmew007) THEN LET p_xmew007 = 1 END IF
   IF cl_null(p_xmew008) THEN LET p_xmew008 = 1 END IF
   LET r_xmew015 = p_xmew014 * g_xmev_m.xmev011 * p_xmew007 / p_xmew008
   CALL s_curr_round(g_site,g_xmev_m.xmev006,r_xmew015,'2') RETURNING r_xmew015

   RETURN r_xmew015
END FUNCTION]]>
  </point>
  <point name="function.axmt400_xmevdocno_chk" order="6" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 單號檢核
# Memo...........:
# Usage..........: CALL axmt400_xmevdocno_chk()
# Input parameter: no
# Return code....: TRUE OR FALSE
# Date & Author..: 140616 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt400_xmevdocno_chk()
DEFINE l_success  LIKE type_t.num5
DEFINE l_flag     LIKE type_t.num5

   #key值
   IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmev_t WHERE "||"xmevent = '" ||g_enterprise|| "' AND "||"xmevdocno = '"||g_xmev_m.xmevdocno ||"'",'std-00004',0) THEN 
      RETURN FALSE
   END IF
   
   #檢查單別
   IF NOT s_aooi200_chk_slip(g_site,'',g_xmev_m.xmevdocno,g_prog) THEN
      RETURN FALSE
   END IF
            
   #檢核輸入的單據別是否可以被key人員對應的控制組使用,'2' 為銷售控制組類型
   CALL s_control_chk_doc('1',g_xmev_m.xmevdocno,'2',g_user,g_dept,'','') RETURNING l_success,l_flag
   IF l_success THEN
      IF NOT l_flag THEN
         CALL cl_err(g_xmev_m.xmevdocno,'axm-00015',1)
         RETURN FALSE
      END IF
   ELSE
      RETURN FALSE
   END IF

   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.axmt400_xmev004_ref" order="7" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 範本料號說明
# Memo...........:
# Usage..........: CALL axmt400_xmev004_ref()
# Input parameter: no
# Return code....: no
# Date & Author..: 140616 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt400_xmev004_ref()

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmev_m.xmev004
   CALL ap_ref_array2(g_ref_fields,"SELECT xmesl003 FROM xmesl_t WHERE xmeslent='"||g_enterprise||"' AND xmesldocno=? AND xmesl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmev_m.xmev004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmev_m.xmev004_desc

END FUNCTION]]>
  </point>
  <point name="function.axmt400_gen_b" order="8" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 第一次進入單身時若單頭範本產品料號有值時，則依範本資料自動產生單身
# Memo...........:
# Usage..........: CALL axmt400_gen_b(p_ooef016)
# Input parameter: p_ooef016
# Return code....: TRUE OR FALSE
# Date & Author..: 140616 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt400_gen_b(p_ooef016)
DEFINE p_ooef016    LIKE ooef_t.ooef016
DEFINE r_success    LIKE type_t.num5
DEFINE l_xmew   RECORD
   xmewent          LIKE xmew_t.xmewent,
   xmewsite         LIKE xmew_t.xmewsite,
   xmewdocno        LIKE xmew_t.xmewdocno,
   xmewseq          LIKE xmew_t.xmewseq,
   xmew001          LIKE xmew_t.xmew001,
   xmew002          LIKE xmew_t.xmew002,
   xmew003          LIKE xmew_t.xmew003,
   xmew004          LIKE xmew_t.xmew004,
   xmew005          LIKE xmew_t.xmew005,
   xmew006          LIKE xmew_t.xmew006,
   xmew007          LIKE xmew_t.xmew007,
   xmew008          LIKE xmew_t.xmew008,
   xmew009          LIKE xmew_t.xmew009,
   xmew010          LIKE xmew_t.xmew010,
   xmew011          LIKE xmew_t.xmew011,
   xmew012          LIKE xmew_t.xmew012,
   xmew013          LIKE xmew_t.xmew013,
   xmew014          LIKE xmew_t.xmew014,
   xmew015          LIKE xmew_t.xmew015,
   xmew016          LIKE xmew_t.xmew016
                END RECORD
DEFINE l_xmex   RECORD
   xmexent          LIKE xmex_t.xmexent,
   xmexsite         LIKE xmex_t.xmexsite,
   xmexdocno        LIKE xmex_t.xmexdocno,
   xmexseq          LIKE xmex_t.xmexseq,
   xmex001          LIKE xmex_t.xmex001,
   xmex002          LIKE xmex_t.xmex002,
   xmex003          LIKE xmex_t.xmex003,
   xmex004          LIKE xmex_t.xmex004,
   xmex005          LIKE xmex_t.xmex005,
   xmex006          LIKE xmex_t.xmex006,
   xmex007          LIKE xmex_t.xmex007,
   xmex008          LIKE xmex_t.xmex008,
   xmex009          LIKE xmex_t.xmex009,
   xmex010          LIKE xmex_t.xmex010,
   xmex011          LIKE xmex_t.xmex011,
   xmex012          LIKE xmex_t.xmex012,
   xmex013          LIKE xmex_t.xmex013,
   xmex014          LIKE xmex_t.xmex014
                END RECORD
DEFINE l_success    LIKE type_t.num5
DEFINE l_seq        LIKE type_t.num5

   LET r_success = TRUE
   INITIALIZE l_xmew.* TO NULL

   DECLARE gen_b_cur1 CURSOR FOR
      SELECT xmet002,xmet003,xmet004,xmet005,xmet006,xmet007,xmet008,
             xmet009,xmet010,xmet011,xmet012,xmet013,xmet014
        FROM xmes_t,xmet_t
       WHERE xmesent = g_enterprise
         AND xmessite = g_site
         AND xmesdocno = g_xmev_m.xmev004
         AND xmesstus = 'Y'
         AND xmetent = xmesent
         AND xmetsite = xmessite
         AND xmetdocno = xmesdocno
       ORDER BY xmet002
   FOREACH gen_b_cur1 INTO l_xmew.xmewseq,l_xmew.xmew001,l_xmew.xmew002,l_xmew.xmew003,l_xmew.xmew004,
                           l_xmew.xmew005,l_xmew.xmew006,l_xmew.xmew007,l_xmew.xmew008,l_xmew.xmew009,
                           l_xmew.xmew010,l_xmew.xmew013,l_xmew.xmew016
      IF SQLCA.SQLCODE THEN
         LET r_success = FALSE
         EXIT FOREACH
      END IF
      
      LET l_xmew.xmewent = g_enterprise
      LET l_xmew.xmewsite = g_site
      LET l_xmew.xmewdocno = g_xmev_m.xmevdocno
      LET l_xmew.xmew012 = "0"
      IF NOT cl_null(l_xmew.xmew010) THEN
         CALL s_aooi160_get_exrate('1',g_site,g_today,l_xmew.xmew010,p_ooef016,0,'11') RETURNING l_xmew.xmew011
      END IF
      CASE g_xmev_m.xmev005
         WHEN '1'
            CALL s_axmt400_xmev005_1(g_xmev_m.xmevdocdt,l_xmew.xmew003,l_xmew.xmew004,l_xmew.xmew006,g_xmev_m.xmev006)
                 RETURNING l_xmew.xmew014
         WHEN '2'
            CALL s_axmt400_xmev005_2(l_xmew.xmew003,g_xmev_m.xmev006)
                 RETURNING l_success,l_xmew.xmew014
         WHEN '3'
            CALL s_axmt400_xmev005_3(l_xmew.xmew003,l_xmew.xmew004,l_xmew.xmew006,g_xmev_m.xmev006)
                 RETURNING l_success,l_xmew.xmew014
         WHEN '4'
            CALL s_axmt400_xmev005_4(g_xmev_m.xmevdocdt,l_xmew.xmew003,g_xmev_m.xmev006)
                 RETURNING l_success,l_xmew.xmew014
         WHEN '5'
            CALL s_axmt400_xmev005_5(l_xmew.xmew003,g_xmev_m.xmev006)
                 RETURNING l_success,l_xmew.xmew014
         OTHERWISE EXIT CASE
      END CASE
      IF NOT l_success OR cl_null(l_xmew.xmew014) THEN LET l_xmew.xmew014 = 0 END IF
      CALL axmt400_xmew015(l_xmew.xmew014,l_xmew.xmew007,l_xmew.xmew008)
           RETURNING l_xmew.xmew015

      INSERT INTO xmew_t (xmewent,xmewsite,xmewdocno,xmewseq,xmew001,xmew002,xmew003,xmew004,xmew005,xmew006,   
                          xmew007,xmew008 ,xmew009  ,xmew010,xmew011,xmew012,xmew013,xmew014,xmew015,xmew016)
                  VALUES (l_xmew.xmewent,l_xmew.xmewsite,l_xmew.xmewdocno,l_xmew.xmewseq,l_xmew.xmew001,   
                          l_xmew.xmew002,l_xmew.xmew003 ,l_xmew.xmew004  ,l_xmew.xmew005,l_xmew.xmew006,
                          l_xmew.xmew007,l_xmew.xmew008 ,l_xmew.xmew009  ,l_xmew.xmew010,l_xmew.xmew011,
                          l_xmew.xmew012,l_xmew.xmew013 ,l_xmew.xmew014  ,l_xmew.xmew015,l_xmew.xmew016)
      IF SQLCA.sqlcode THEN
         LET r_success = FALSE
         EXIT FOREACH
      END IF
      
      INITIALIZE l_xmew.* TO NULL
   END FOREACH
      
   INITIALIZE l_xmex.* TO NULL
   LET l_seq = 1
   
   DECLARE gen_b_cur2 CURSOR FOR
      SELECT xmeu002,xmeu003,xmeu004,xmeu005,xmeu006,
             xmeu007,xmeu008,xmeu009,xmeu010,xmeu011
        FROM xmes_t,xmeu_t
       WHERE xmesent = g_enterprise
         AND xmessite = g_site
         AND xmesdocno = g_xmev_m.xmev004
         AND xmesstus = 'Y'
         AND xmeuent = xmesent
         AND xmeusite = xmessite
         AND xmeudocno = xmesdocno
   FOREACH gen_b_cur2 INTO l_xmex.xmex001,l_xmex.xmex002,l_xmex.xmex003,l_xmex.xmex004,l_xmex.xmex005,
                           l_xmex.xmex006,l_xmex.xmex007,l_xmex.xmex008,l_xmex.xmex009,l_xmex.xmex014
      IF SQLCA.SQLCODE THEN
         LET r_success = FALSE
         EXIT FOREACH
      END IF

      LET l_xmex.xmexent = g_enterprise
      LET l_xmex.xmexsite = g_site
      LET l_xmex.xmexdocno = g_xmev_m.xmevdocno
      LET l_xmex.xmexseq = l_seq
      LET l_xmex.xmex010 = "0"
      LET l_xmex.xmex011 = "0"
      LET l_xmex.xmex012 = "0"
      LET l_xmex.xmex013 = "0"

      INSERT INTO xmex_t (xmexent,xmexsite,xmexdocno,xmexseq,xmex001,xmex002,xmex003,xmex004,xmex005,
                          xmex006,xmex007 ,xmex008  ,xmex009,xmex010,xmex011,xmex012,xmex013,xmex014)
                  VALUES (l_xmex.xmexent,l_xmex.xmexsite,l_xmex.xmexdocno,l_xmex.xmexseq,l_xmex.xmex001,   
                          l_xmex.xmex002,l_xmex.xmex003 ,l_xmex.xmex004  ,l_xmex.xmex005,l_xmex.xmex006,
                          l_xmex.xmex007,l_xmex.xmex008 ,l_xmex.xmex009  ,l_xmex.xmex010,l_xmex.xmex011,
                          l_xmex.xmex012,l_xmex.xmex013 ,l_xmex.xmex014)
      IF SQLCA.sqlcode THEN
         LET r_success = FALSE
         EXIT FOREACH
      END IF
      
      INITIALIZE l_xmex.* TO NULL
      LET l_seq = l_seq + 1
   END FOREACH

   CALL axmt400_amount()
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.axmt400_amount" order="9" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 材料金額 = 組成明細.材料金額加總
#                  人工金額 = (製程明細.工資單價 * 估價數量) 的加總
#                  製費金額 = (製程明細.製費單價 * 估價數量) 的加總
#                  其他費用 = (費用明細.外加費用金額) 的加總
#                  估價金額 = 材料金額 + 人工金額 + 製費金額 + 其他費用
# Memo...........:
# Usage..........: CALL axmt400_amount()
# Input parameter: no
# Return code....: no
# Date & Author..: 140621 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt400_amount()

   SELECT SUM(xmew015),SUM(xmex012*xmev011),SUM(xmex013*xmev011),SUM(xmey003) 
     INTO g_xmev_m.xmev014,g_xmev_m.xmev015,g_xmev_m.xmev016,g_xmev_m.xmev017
     FROM xmev_t LEFT OUTER JOIN xmew_t ON xmevent = xmewent AND xmevdocno = xmewdocno
                 LEFT OUTER JOIN xmex_t ON xmevent = xmexent AND xmevdocno = xmexdocno
                 LEFT OUTER JOIN xmey_t ON xmevent = xmeyent AND xmevdocno = xmeydocno AND xmey001 = '1'
    WHERE xmevent = g_enterprise
      AND xmevdocno = g_xmev_m.xmevdocno
   IF cl_null(g_xmev_m.xmev014) THEN LET g_xmev_m.xmev014 = 0 END IF
   IF cl_null(g_xmev_m.xmev015) THEN LET g_xmev_m.xmev015 = 0 END IF
   IF cl_null(g_xmev_m.xmev016) THEN LET g_xmev_m.xmev016 = 0 END IF
   IF cl_null(g_xmev_m.xmev017) THEN LET g_xmev_m.xmev017 = 0 END IF
   LET g_xmev_m.xmev018 = g_xmev_m.xmev014 + g_xmev_m.xmev015 + g_xmev_m.xmev016 + g_xmev_m.xmev017
   CALL s_curr_round(g_site,g_xmev_m.xmev006,g_xmev_m.xmev014,'2') RETURNING g_xmev_m.xmev014
   CALL s_curr_round(g_site,g_xmev_m.xmev006,g_xmev_m.xmev015,'2') RETURNING g_xmev_m.xmev015
   CALL s_curr_round(g_site,g_xmev_m.xmev006,g_xmev_m.xmev016,'2') RETURNING g_xmev_m.xmev016
   CALL s_curr_round(g_site,g_xmev_m.xmev006,g_xmev_m.xmev017,'2') RETURNING g_xmev_m.xmev017
   CALL s_curr_round(g_site,g_xmev_m.xmev006,g_xmev_m.xmev018,'2') RETURNING g_xmev_m.xmev018
   UPDATE xmev_t SET xmev014 = g_xmev_m.xmev014,
                     xmev015 = g_xmev_m.xmev015,
                     xmev016 = g_xmev_m.xmev016,
                     xmev017 = g_xmev_m.xmev017,
                     xmev018 = g_xmev_m.xmev018
    WHERE xmevent = g_enterprise
      AND xmevdocno = g_xmev_m.xmevdocno
   DISPLAY BY NAME g_xmev_m.xmev014,g_xmev_m.xmev015,g_xmev_m.xmev016,g_xmev_m.xmev017,g_xmev_m.xmev018

END FUNCTION]]>
  </point>
  <point name="browser_fill.before_foreach" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF cl_null(g_wc) THEN
      LET g_wc = " xmevsite = '",g_site,"' "
   ELSE
      LET g_wc = g_wc," AND xmevsite = '",g_site,"' "
   END IF
   LET l_wc  = g_wc.trim()   ]]>
  </point>
  <point name="construct.c.page1.xmew001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '215'
            CALL q_oocq002_5()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmew001  #顯示到畫面上
            NEXT FIELD xmew001                     #返回原欄位
]]>
  </point>
  <point name="construct.c.page1.xmew002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '221'
            CALL q_oocq002()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmew002  #顯示到畫面上
            NEXT FIELD xmew002                     #返回原欄位
]]>
  </point>
  <point name="construct.c.page1.xmew003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaf001_15()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmew003  #顯示到畫面上
            NEXT FIELD xmew003                     #返回原欄位
]]>
  </point>
  <point name="construct.c.page1.xmew006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_xmew_d[l_ac].xmew003
            CALL q_imao002()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmew006  #顯示到畫面上
            NEXT FIELD xmew006                     #返回原欄位
]]>
  </point>
  <point name="construct.c.page1.xmew010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            CALL q_ooaj002_1()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmew010  #顯示到畫面上
            NEXT FIELD xmew010                     #返回原欄位
]]>
  </point>
  <point name="construct.c.page1.xmew013" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_3()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmew013  #顯示到畫面上
            NEXT FIELD xmew013                     #返回原欄位
]]>
  </point>
  <point name="construct.c.page2.xmex001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "215"
            CALL q_oocq002_5()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmex001  #顯示到畫面上
            NEXT FIELD xmex001                     #返回原欄位
]]>
  </point>
  <point name="construct.c.page2.xmex002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaf001_15()                    #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmex002  #顯示到畫面上
            NEXT FIELD xmex002                     #返回原欄位
]]>
  </point>
  <point name="construct.c.page2.xmex004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '221'
            CALL q_oocq002()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmex004  #顯示到畫面上
            NEXT FIELD xmex004                     #返回原欄位
]]>
  </point>
  <point name="construct.c.page2.xmex006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ecaa001_1()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmex006  #顯示到畫面上
            NEXT FIELD xmex006                     #返回原欄位
]]>
  </point>
  <point name="construct.c.page3.xmey002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "802"
            CALL q_oocq002_5()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmey002  #顯示到畫面上
            NEXT FIELD xmey002                     #返回原欄位
]]>
  </point>
  <point name="construct.c.xmev001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmev001  #顯示到畫面上
            NEXT FIELD xmev001                     #返回原欄位
]]>
  </point>
  <point name="construct.c.xmev002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmev002  #顯示到畫面上
            NEXT FIELD xmev002                     #返回原欄位
]]>
  </point>
  <point name="construct.c.xmev003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_6()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmev003  #顯示到畫面上
            NEXT FIELD xmev003                     #返回原欄位
]]>
  </point>
  <point name="construct.c.xmev004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xmesdocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmev004  #顯示到畫面上
            NEXT FIELD xmev004                     #返回原欄位
]]>
  </point>
  <point name="construct.c.xmev006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            CALL q_ooaj002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmev006  #顯示到畫面上
            NEXT FIELD xmev006                     #返回原欄位
]]>
  </point>
  <point name="construct.c.xmev008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_oodb002_2()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmev008  #顯示到畫面上
            NEXT FIELD xmev008                     #返回原欄位
]]>
  </point>
  <point name="construct.c.xmev012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmev012  #顯示到畫面上
            NEXT FIELD xmev012                     #返回原欄位
]]>
  </point>
  <point name="construct.c.xmevcnfid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmevcnfid  #顯示到畫面上
            NEXT FIELD xmevcnfid                     #返回原欄位
]]>
  </point>
  <point name="construct.c.xmevcrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmevcrtdp  #顯示到畫面上
            NEXT FIELD xmevcrtdp                     #返回原欄位
]]>
  </point>
  <point name="construct.c.xmevcrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmevcrtid  #顯示到畫面上
            NEXT FIELD xmevcrtid                     #返回原欄位
]]>
  </point>
  <point name="construct.c.xmevdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xmevdocno()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmevdocno  #顯示到畫面上
            NEXT FIELD xmevdocno                     #返回原欄位
]]>
  </point>
  <point name="construct.c.xmevmodid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmevmodid  #顯示到畫面上
            NEXT FIELD xmevmodid                     #返回原欄位
]]>
  </point>
  <point name="construct.c.xmevowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmevowndp  #顯示到畫面上
            NEXT FIELD xmevowndp                     #返回原欄位
]]>
  </point>
  <point name="construct.c.xmevownid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmevownid  #顯示到畫面上
            NEXT FIELD xmevownid                     #返回原欄位
]]>
  </point>
  <point name="cs.b_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         LET g_xmew_d[1].xmewseq = ""
         DISPLAY ARRAY g_xmew_d TO s_detail1.*
            BEFORE DISPLAY
               EXIT DISPLAY
         END DISPLAY]]>
  </point>
  <point name="delete.head.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      IF NOT s_aooi200_del_docno(g_xmev_m.xmevdocno,g_xmev_m.xmevdocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF]]>
  </point>
  <point name="fetch.action_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_act_visible("modify,delete,insert,modify_detail",TRUE)
   IF g_xmev_m.xmevstus NOT MATCHES "[NDR]" THEN
      CALL cl_set_act_visible("modify,delete,modify_detail",TRUE)
   END IF]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[DEFINE g_inam  DYNAMIC ARRAY OF RECORD   #記錄產品特徵
   inam001  LIKE inam_t.inam001,
   inam002  LIKE inam_t.inam002,
   inam004  LIKE inam_t.inam004
           END RECORD]]>
  </point>
  <point name="input.a.page1.xmew001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_xmew_d[l_ac].xmew001_desc = ' '
            CALL s_desc_get_acc_desc('215',g_xmew_d[l_ac].xmew001) RETURNING g_xmew_d[l_ac].xmew001_desc
            IF cl_null(g_xmew_d[l_ac].xmew001) THEN
               LET g_xmew_d[l_ac].xmew001 = ' '
            ELSE
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew_d[l_ac].xmew001 != g_xmew_d_t.xmew001 OR g_xmew_d_t.xmew001 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = '215'
                  LET g_chkparam.arg2 = g_xmew_d[l_ac].xmew001
                  IF NOT cl_chk_exist("v_oocq002_1") THEN
                     LET g_xmew_d[l_ac].xmew001 = g_xmew_d_t.xmew001
                     CALL s_desc_get_acc_desc('215',g_xmew_d[l_ac].xmew001) RETURNING g_xmew_d[l_ac].xmew001_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_acc_desc('215',g_xmew_d[l_ac].xmew001) RETURNING g_xmew_d[l_ac].xmew001_desc
]]>
  </point>
  <point name="input.a.page1.xmew002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_xmew_d[l_ac].xmew002_desc = ' '
            CALL s_desc_get_acc_desc('221',g_xmew_d[l_ac].xmew002) RETURNING g_xmew_d[l_ac].xmew002_desc
            IF NOT cl_null(g_xmew_d[l_ac].xmew002) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew_d[l_ac].xmew002 != g_xmew_d_t.xmew002 OR g_xmew_d_t.xmew002 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmew_d[l_ac].xmew002
                  IF NOT cl_chk_exist("v_oocq002_221") THEN
                     LET g_xmew_d[l_ac].xmew002 = g_xmew_d_t.xmew002
                     CALL s_desc_get_acc_desc('221',g_xmew_d[l_ac].xmew002) RETURNING g_xmew_d[l_ac].xmew002_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_acc_desc('221',g_xmew_d[l_ac].xmew002) RETURNING g_xmew_d[l_ac].xmew002_desc
]]>
  </point>
  <point name="input.a.page1.xmew003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_xmew_d[l_ac].xmew003_desc = ' '
            LET g_xmew_d[l_ac].xmew003_desc_desc = ' '
            CALL s_desc_get_item_desc(g_xmew_d[l_ac].xmew003) RETURNING g_xmew_d[l_ac].xmew003_desc,g_xmew_d[l_ac].xmew003_desc_desc
            IF NOT cl_null(g_xmew_d[l_ac].xmew003) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew_d[l_ac].xmew003 != g_xmew_d_t.xmew003 OR g_xmew_d_t.xmew003 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmew_d[l_ac].xmew003
                  IF NOT cl_chk_exist("v_imaf001_14") THEN
                     LET g_xmew_d[l_ac].xmew003 = g_xmew_d_t.xmew003
                     CALL s_desc_get_item_desc(g_xmew_d[l_ac].xmew003) RETURNING g_xmew_d[l_ac].xmew003_desc,g_xmew_d[l_ac].xmew003_desc_desc
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT s_control_check_item(g_xmew_d[l_ac].xmew003,'2',g_site,g_user,g_dept,g_xmev_m.xmevdocno) THEN
                     LET g_xmew_d[l_ac].xmew003 = g_xmew_d_t.xmew003
                     CALL s_desc_get_item_desc(g_xmew_d[l_ac].xmew003) RETURNING g_xmew_d[l_ac].xmew003_desc,g_xmew_d[l_ac].xmew003_desc_desc
                     NEXT FIELD CURRENT
                  END IF
                  #銷售單位
                  SELECT imaf112 INTO g_xmew_d[l_ac].xmew006
                    FROM imaf_t
                   WHERE imafent = g_enterprise
                     AND imafsite = g_site
                     AND imaf001 = g_xmew_d[l_ac].xmew003
               END IF
            END IF
            CALL s_desc_get_item_desc(g_xmew_d[l_ac].xmew003) RETURNING g_xmew_d[l_ac].xmew003_desc,g_xmew_d[l_ac].xmew003_desc_desc
            CALL axmt400_set_entry_b(l_cmd)
            CALL axmt400_set_no_entry_b(l_cmd)
            ]]>
  </point>
  <point name="input.a.page1.xmew004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF cl_null(g_xmew_d[l_ac].xmew004) THEN
               LET g_xmew_d[l_ac].xmew004 = ' '
            END IF]]>
  </point>
  <point name="input.a.page1.xmew006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_xmew_d[l_ac].xmew006_desc = ' '
            CALL s_desc_get_unit_desc(g_xmew_d[l_ac].xmew006) RETURNING g_xmew_d[l_ac].xmew006_desc
            IF NOT cl_null(g_xmew_d[l_ac].xmew006) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew_d[l_ac].xmew006 != g_xmew_d_t.xmew006 OR g_xmew_d_t.xmew006 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmew_d[l_ac].xmew003
                  LET g_chkparam.arg2 = g_xmew_d[l_ac].xmew006
                  IF NOT cl_chk_exist("v_imao002") THEN
                     LET g_xmew_d[l_ac].xmew006 = g_xmew_d_t.xmew006
                     CALL s_desc_get_unit_desc(g_xmew_d[l_ac].xmew006) RETURNING g_xmew_d[l_ac].xmew006_desc
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT cl_null(g_xmew_d[l_ac].xmew007) THEN
                     CALL s_aooi250_take_decimals(g_xmew_d[l_ac].xmew006,g_xmew_d[l_ac].xmew007) RETURNING l_success,g_xmew_d[l_ac].xmew007
                  END IF
               END IF
            END IF
            CALL s_desc_get_unit_desc(g_xmew_d[l_ac].xmew006) RETURNING g_xmew_d[l_ac].xmew006_desc
]]>
  </point>
  <point name="input.a.page1.xmew007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmew_d[l_ac].xmew007) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew_d[l_ac].xmew007 != g_xmew_d_t.xmew007 OR g_xmew_d_t.xmew007 IS NULL )) THEN
                  CALL axmt400_xmew015(g_xmew_d[l_ac].xmew014,g_xmew_d[l_ac].xmew007,g_xmew_d[l_ac].xmew008)
                       RETURNING g_xmew_d[l_ac].xmew015
                  IF NOT cl_null(g_xmew_d[l_ac].xmew006) THEN
                     CALL s_aooi250_take_decimals(g_xmew_d[l_ac].xmew006,g_xmew_d[l_ac].xmew007) RETURNING l_success,g_xmew_d[l_ac].xmew007
                  END IF
               END IF
            END IF
]]>
  </point>
  <point name="input.a.page1.xmew008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmew_d[l_ac].xmew008) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew_d[l_ac].xmew008 != g_xmew_d_t.xmew008 OR g_xmew_d_t.xmew008 IS NULL )) THEN
                  CALL axmt400_xmew015(g_xmew_d[l_ac].xmew014,g_xmew_d[l_ac].xmew007,g_xmew_d[l_ac].xmew008)
                       RETURNING g_xmew_d[l_ac].xmew015
               END IF
            END IF
]]>
  </point>
  <point name="input.a.page1.xmew010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_xmew_d[l_ac].xmew010_desc = ' '
            CALL s_desc_get_currency_desc(g_xmew_d[l_ac].xmew010) RETURNING g_xmew_d[l_ac].xmew010_desc
            IF NOT cl_null(g_xmew_d[l_ac].xmew010) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew_d[l_ac].xmew010 != g_xmew_d_t.xmew010 OR g_xmew_d_t.xmew010 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_site
                  LET g_chkparam.arg2 = g_xmew_d[l_ac].xmew010
                  IF NOT cl_chk_exist("v_ooaj002") THEN
                     LET g_xmew_d[l_ac].xmew010 = g_xmew_d_t.xmew010
                     CALL s_desc_get_currency_desc(g_xmew_d[l_ac].xmew010) RETURNING g_xmew_d[l_ac].xmew010_desc
                     NEXT FIELD CURRENT
                  END IF
                  CALL s_aooi160_get_exrate('1',g_site,g_today,g_xmew_d[l_ac].xmew010,l_ooef016,0,'11') RETURNING g_xmew_d[l_ac].xmew011
               END IF
            END IF
            CALL s_desc_get_currency_desc(g_xmew_d[l_ac].xmew010) RETURNING g_xmew_d[l_ac].xmew010_desc
]]>
  </point>
  <point name="input.a.page1.xmew012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmew_d[l_ac].xmew012) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew_d[l_ac].xmew012 != g_xmew_d_t.xmew012 OR g_xmew_d_t.xmew012 IS NULL )) THEN
                  IF NOT cl_null(g_xmew_d[l_ac].xmew010) AND g_xmev_m.xmev006 <> g_xmew_d[l_ac].xmew010 THEN
                     #依採購幣別與估價幣別之匯率計算
                     CALL s_aooi160_get_exrate('1',g_site,g_today,g_xmew_d[l_ac].xmew010,g_xmev_m.xmev006,0,'11') RETURNING l_rate
                     LET g_xmew_d[l_ac].xmew014 = g_xmew_d[l_ac].xmew012 * l_rate
                  ELSE
                     LET g_xmew_d[l_ac].xmew014 = g_xmew_d[l_ac].xmew012
                  END IF
                  CALL s_curr_round(g_site,g_xmev_m.xmev006,g_xmew_d[l_ac].xmew014,'1') RETURNING g_xmew_d[l_ac].xmew014
                  CALL axmt400_xmew015(g_xmew_d[l_ac].xmew014,g_xmew_d[l_ac].xmew007,g_xmew_d[l_ac].xmew008)
                       RETURNING g_xmew_d[l_ac].xmew015
               END IF
            END IF
]]>
  </point>
  <point name="input.a.page1.xmew013" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_xmew_d[l_ac].xmew013_desc = ' '
            CALL s_desc_get_trading_partner_abbr_desc(g_xmew_d[l_ac].xmew013) RETURNING g_xmew_d[l_ac].xmew013_desc
            IF NOT cl_null(g_xmew_d[l_ac].xmew013) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew_d[l_ac].xmew013 != g_xmew_d_t.xmew013 OR g_xmew_d_t.xmew013 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmew_d[l_ac].xmew013
                  IF NOT cl_chk_exist("v_pmaa001_1") THEN
                     LET g_xmew_d[l_ac].xmew013 = g_xmew_d_t.xmew013
                     CALL s_desc_get_trading_partner_abbr_desc(g_xmew_d[l_ac].xmew013) RETURNING g_xmew_d[l_ac].xmew013_desc
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT s_control_check_customer(g_xmew_d[l_ac].xmew013,'2',g_site,g_user,g_dept,g_xmev_m.xmevdocno) THEN
                     LET g_xmew_d[l_ac].xmew013 = g_xmew_d_t.xmew013
                     CALL s_desc_get_trading_partner_abbr_desc(g_xmew_d[l_ac].xmew013) RETURNING g_xmew_d[l_ac].xmew013_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_trading_partner_abbr_desc(g_xmew_d[l_ac].xmew013) RETURNING g_xmew_d[l_ac].xmew013_desc
]]>
  </point>
  <point name="input.a.page1.xmew014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmew_d[l_ac].xmew014) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew_d[l_ac].xmew014 != g_xmew_d_t.xmew014 OR g_xmew_d_t.xmew014 IS NULL )) THEN
                  CALL axmt400_xmew015(g_xmew_d[l_ac].xmew014,g_xmew_d[l_ac].xmew007,g_xmew_d[l_ac].xmew008)
                       RETURNING g_xmew_d[l_ac].xmew015
               END IF
            END IF]]>
  </point>
  <point name="input.a.page1.xmewseq" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xmev_m.xmevdocno IS NOT NULL AND g_xmew_d[g_detail_idx].xmewsite IS NOT NULL AND g_xmew_d[g_detail_idx].xmewseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmev_m.xmevdocno != g_xmevdocno_t OR g_xmew_d[g_detail_idx].xmewsite != g_xmew_d_t.xmewsite OR g_xmew_d[g_detail_idx].xmewseq != g_xmew_d_t.xmewseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmew_t WHERE "||"xmewent = '" ||g_enterprise|| "' AND "||"xmewdocno = '"||g_xmev_m.xmevdocno ||"' AND "|| "xmewsite = '"||g_xmew_d[g_detail_idx].xmewsite ||"' AND "|| "xmewseq = '"||g_xmew_d[g_detail_idx].xmewseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.xmewsite" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xmev_m.xmevdocno IS NOT NULL AND g_xmew_d[g_detail_idx].xmewsite IS NOT NULL AND g_xmew_d[g_detail_idx].xmewseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmev_m.xmevdocno != g_xmevdocno_t OR g_xmew_d[g_detail_idx].xmewsite != g_xmew_d_t.xmewsite OR g_xmew_d[g_detail_idx].xmewseq != g_xmew_d_t.xmewseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmew_t WHERE "||"xmewent = '" ||g_enterprise|| "' AND "||"xmewdocno = '"||g_xmev_m.xmevdocno ||"' AND "|| "xmewsite = '"||g_xmew_d[g_detail_idx].xmewsite ||"' AND "|| "xmewseq = '"||g_xmew_d[g_detail_idx].xmewseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.xmex001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_xmew2_d[l_ac].xmex001_desc = ' '
            CALL s_desc_get_acc_desc('215',g_xmew2_d[l_ac].xmex001) RETURNING g_xmew2_d[l_ac].xmex001_desc
            IF NOT cl_null(g_xmew2_d[l_ac].xmex001) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew2_d[l_ac].xmex001 != g_xmew2_d_t.xmex001 OR g_xmew2_d_t.xmex001 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = '215'
                  LET g_chkparam.arg2 = g_xmew2_d[l_ac].xmex001
                  IF NOT cl_chk_exist("v_oocq002_1") THEN
                     LET g_xmew2_d[l_ac].xmex001 = g_xmew2_d_t.xmex001
                     CALL s_desc_get_acc_desc('215',g_xmew2_d[l_ac].xmex001) RETURNING g_xmew2_d[l_ac].xmex001_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_acc_desc('215',g_xmew2_d[l_ac].xmex001) RETURNING g_xmew2_d[l_ac].xmex001_desc
]]>
  </point>
  <point name="input.a.page2.xmex002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_xmew2_d[l_ac].xmex002_desc = ' '
            LET g_xmew2_d[l_ac].xmex002_desc_desc = ' '
            CALL s_desc_get_item_desc(g_xmew2_d[l_ac].xmex002) RETURNING g_xmew2_d[l_ac].xmex002_desc,g_xmew2_d[l_ac].xmex002_desc_desc
            IF NOT cl_null(g_xmew2_d[l_ac].xmex002) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew2_d[l_ac].xmex002 != g_xmew2_d_t.xmex002 OR g_xmew2_d_t.xmex002 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmew2_d[l_ac].xmex002
                  IF NOT cl_chk_exist("v_imaf001_14") THEN
                     LET g_xmew2_d[l_ac].xmex002 = g_xmew2_d_t.xmex002
                     CALL s_desc_get_item_desc(g_xmew2_d[l_ac].xmex002) RETURNING g_xmew2_d[l_ac].xmex002_desc,g_xmew2_d[l_ac].xmex002_desc_desc
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT s_control_check_item(g_xmew2_d[l_ac].xmex002,'2',g_site,g_user,g_dept,g_xmev_m.xmevdocno) THEN
                     LET g_xmew2_d[l_ac].xmex002 = g_xmew2_d_t.xmex002
                     CALL s_desc_get_item_desc(g_xmew2_d[l_ac].xmex002) RETURNING g_xmew2_d[l_ac].xmex002_desc,g_xmew2_d[l_ac].xmex002_desc_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_item_desc(g_xmew2_d[l_ac].xmex002) RETURNING g_xmew2_d[l_ac].xmex002_desc,g_xmew2_d[l_ac].xmex002_desc_desc
]]>
  </point>
  <point name="input.a.page2.xmex004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_xmew2_d[l_ac].xmex004_desc = ' '
            CALL s_desc_get_acc_desc('221',g_xmew2_d[l_ac].xmex004) RETURNING g_xmew2_d[l_ac].xmex004_desc
            IF NOT cl_null(g_xmew2_d[l_ac].xmex004) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew2_d[l_ac].xmex004 != g_xmew2_d_t.xmex004 OR g_xmew2_d_t.xmex004 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmew2_d[l_ac].xmex004
                  IF NOT cl_chk_exist("v_oocq002_221") THEN
                     LET g_xmew2_d[l_ac].xmex004 = g_xmew2_d_t.xmex004
                     CALL s_desc_get_acc_desc('221',g_xmew2_d[l_ac].xmex004) RETURNING g_xmew2_d[l_ac].xmex004_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_acc_desc('221',g_xmew2_d[l_ac].xmex004) RETURNING g_xmew2_d[l_ac].xmex004_desc
]]>
  </point>
  <point name="input.a.page2.xmex006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_xmew2_d[l_ac].xmex006_desc = ' '
            CALL axmt400_xmex006_ref()
            IF NOT cl_null(g_xmew2_d[l_ac].xmex006) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew2_d[l_ac].xmex006 != g_xmew2_d_t.xmex006 OR g_xmew2_d_t.xmex006 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmew2_d[l_ac].xmex006
                  IF NOT cl_chk_exist("v_ecaa001_1") THEN
                     LET g_xmew2_d[l_ac].xmex006 = g_xmew2_d_t.xmex006
                     CALL axmt400_xmex006_ref()
                     NEXT FIELD CURRENT
                  END IF
                  LET g_xmew2_d[l_ac].xmex009 = '1'
                  LET g_xmew2_d[l_ac].xmex010 = '0'
                  LET g_xmew2_d[l_ac].xmex011 = '0'
                  SELECT xmer004,xmer005,xmer006
                    INTO g_xmew2_d[l_ac].xmex009,g_xmew2_d[l_ac].xmex010,g_xmew2_d[l_ac].xmex011
                    FROM xmer_t
                   WHERE xmerent = g_enterprise
                     AND xmersite = g_site
                     AND xmerdocdt = g_xmev_m.xmevdocdt
                     AND xmer001 = g_xmev_m.xmev006
                     AND xmer002 = g_xmew2_d[l_ac].xmex004
                     AND xmer003 = g_xmew2_d[l_ac].xmex006
               END IF
            END IF
            CALL axmt400_xmex006_ref()
]]>
  </point>
  <point name="input.a.page2.xmex007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmew2_d[l_ac].xmex007) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew2_d[l_ac].xmex007 != g_xmew2_d_t.xmex007 OR g_xmew2_d_t.xmex007 IS NULL )) THEN
                  CALL axmt400_xmex012()
               END IF
            END IF
]]>
  </point>
  <point name="input.a.page2.xmex008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmew2_d[l_ac].xmex008) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew2_d[l_ac].xmex008 != g_xmew2_d_t.xmex008 OR g_xmew2_d_t.xmex008 IS NULL )) THEN
                  CALL axmt400_xmex013()
               END IF
            END IF
]]>
  </point>
  <point name="input.a.page2.xmex010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmew2_d[l_ac].xmex010) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew2_d[l_ac].xmex010 != g_xmew2_d_t.xmex010 OR g_xmew2_d_t.xmex010 IS NULL )) THEN
                  CALL axmt400_xmex012()
               END IF
            END IF
]]>
  </point>
  <point name="input.a.page2.xmex011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmew2_d[l_ac].xmex011) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew2_d[l_ac].xmex011 != g_xmew2_d_t.xmex011 OR g_xmew2_d_t.xmex011 IS NULL )) THEN
                  CALL axmt400_xmex013()
               END IF
            END IF
]]>
  </point>
  <point name="input.a.page2.xmex012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.a.page2.xmexseq" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xmev_m.xmevdocno IS NOT NULL AND g_xmew2_d[g_detail_idx].xmexsite IS NOT NULL AND g_xmew2_d[g_detail_idx].xmexseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmev_m.xmevdocno != g_xmevdocno_t OR g_xmew2_d[g_detail_idx].xmexsite != g_xmew2_d_t.xmexsite OR g_xmew2_d[g_detail_idx].xmexseq != g_xmew2_d_t.xmexseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmex_t WHERE "||"xmexent = '" ||g_enterprise|| "' AND "||"xmexdocno = '"||g_xmev_m.xmevdocno ||"' AND "|| "xmexsite = '"||g_xmew2_d[g_detail_idx].xmexsite ||"' AND "|| "xmexseq = '"||g_xmew2_d[g_detail_idx].xmexseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.xmexsite" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xmev_m.xmevdocno IS NOT NULL AND g_xmew2_d[g_detail_idx].xmexsite IS NOT NULL AND g_xmew2_d[g_detail_idx].xmexseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmev_m.xmevdocno != g_xmevdocno_t OR g_xmew2_d[g_detail_idx].xmexsite != g_xmew2_d_t.xmexsite OR g_xmew2_d[g_detail_idx].xmexseq != g_xmew2_d_t.xmexseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmex_t WHERE "||"xmexent = '" ||g_enterprise|| "' AND "||"xmexdocno = '"||g_xmev_m.xmevdocno ||"' AND "|| "xmexsite = '"||g_xmew2_d[g_detail_idx].xmexsite ||"' AND "|| "xmexseq = '"||g_xmew2_d[g_detail_idx].xmexseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page3.xmey002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_xmew3_d[l_ac].xmey002_desc = ' '
            CALL s_desc_get_acc_desc('802',g_xmew3_d[l_ac].xmey002) RETURNING g_xmew3_d[l_ac].xmey002_desc
            IF NOT cl_null(g_xmew3_d[l_ac].xmey002) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew3_d[l_ac].xmey002 != g_xmew3_d_t.xmey002 OR g_xmew3_d_t.xmey002 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = '802'
                  LET g_chkparam.arg2 = g_xmew3_d[l_ac].xmey002
                  IF NOT cl_chk_exist("v_oocq002_1") THEN
                     LET g_xmew3_d[l_ac].xmey002 = g_xmew3_d_t.xmey002
                     CALL s_desc_get_acc_desc('802',g_xmew3_d[l_ac].xmey002) RETURNING g_xmew3_d[l_ac].xmey002_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_acc_desc('802',g_xmew3_d[l_ac].xmey002) RETURNING g_xmew3_d[l_ac].xmey002_desc
]]>
  </point>
  <point name="input.a.page3.xmey003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmew3_d[l_ac].xmey003) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew3_d[l_ac].xmey003 != g_xmew3_d_t.xmey003 OR g_xmew3_d_t.xmey003 IS NULL )) THEN
                  CALL s_curr_round(g_site,g_xmev_m.xmev006,g_xmew3_d[l_ac].xmey003,'2') RETURNING g_xmew3_d[l_ac].xmey003
               END IF
            END IF
]]>
  </point>
  <point name="input.a.page3.xmeyseq" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xmev_m.xmevdocno IS NOT NULL AND g_xmew3_d[g_detail_idx].xmeyseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmev_m.xmevdocno != g_xmevdocno_t OR g_xmew3_d[g_detail_idx].xmeyseq != g_xmew3_d_t.xmeyseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmey_t WHERE "||"xmeyent = '" ||g_enterprise|| "' AND "||"xmeydocno = '"||g_xmev_m.xmevdocno ||"' AND "|| "xmeyseq = '"||g_xmew3_d[g_detail_idx].xmeyseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.xmev001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_xmev_m.xmev001_desc = ' '
            CALL s_desc_get_person_desc(g_xmev_m.xmev001) RETURNING g_xmev_m.xmev001_desc
            DISPLAY BY NAME g_xmev_m.xmev001_desc
            IF NOT cl_null(g_xmev_m.xmev001) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmev_m.xmev001 != g_xmev_m_t.xmev001 OR g_xmev_m_t.xmev001 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmev_m.xmev001
                  IF cl_chk_exist("v_ooag001") THEN
                     #歸屬部門
                     SELECT ooag003 INTO g_xmev_m.xmev002 FROM ooag_t
                      WHERE ooagent = g_enterprise AND ooag001 = g_xmev_m.xmev001
                     CALL s_desc_get_department_desc(g_xmev_m.xmev002) RETURNING g_xmev_m.xmev002_desc
                     DISPLAY BY NAME g_xmev_m.xmev002,g_xmev_m.xmev002_desc
                  ELSE
                     LET g_xmev_m.xmev001 = g_xmev_m_t.xmev001
                     CALL s_desc_get_person_desc(g_xmev_m.xmev001) RETURNING g_xmev_m.xmev001_desc
                     DISPLAY BY NAME g_xmev_m.xmev001,g_xmev_m.xmev001_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_person_desc(g_xmev_m.xmev001) RETURNING g_xmev_m.xmev001_desc
            DISPLAY BY NAME g_xmev_m.xmev001_desc
]]>
  </point>
  <point name="input.a.xmev002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_xmev_m.xmev002_desc = ' '
            CALL s_desc_get_department_desc(g_xmev_m.xmev002) RETURNING g_xmev_m.xmev002_desc
            DISPLAY BY NAME g_xmev_m.xmev002_desc
            IF NOT cl_null(g_xmev_m.xmev002) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmev_m.xmev002 != g_xmev_m_t.xmev002 OR g_xmev_m_t.xmev002 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmev_m.xmev002
                  LET g_chkparam.arg2 = g_xmev_m.xmevdocdt
                  IF NOT cl_chk_exist("v_ooeg001") THEN
                     LET g_xmev_m.xmev002 = g_xmev_m_t.xmev002
                     CALL s_desc_get_department_desc(g_xmev_m.xmev002) RETURNING g_xmev_m.xmev002_desc
                     DISPLAY BY NAME g_xmev_m.xmev002,g_xmev_m.xmev002_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_department_desc(g_xmev_m.xmev002) RETURNING g_xmev_m.xmev002_desc
            DISPLAY BY NAME g_xmev_m.xmev002_desc
]]>
  </point>
  <point name="input.a.xmev003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_xmev_m.xmev003_desc = ' '
            CALL s_desc_get_trading_partner_full_desc(g_xmev_m.xmev003) RETURNING g_xmev_m.xmev003_desc
            DISPLAY BY NAME g_xmev_m.xmev003_desc
            IF NOT cl_null(g_xmev_m.xmev003) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmev_m.xmev003 != g_xmev_m_t.xmev003 OR g_xmev_m_t.xmev003 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmev_m.xmev003
                  IF NOT cl_chk_exist("v_pmaa001_3") THEN
                     LET g_xmev_m.xmev003 = g_xmev_m_t.xmev003
                     CALL s_desc_get_trading_partner_full_desc(g_xmev_m.xmev003) RETURNING g_xmev_m.xmev003_desc
                     DISPLAY BY NAME g_xmev_m.xmev003,g_xmev_m.xmev003_desc
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT s_control_check_customer(g_xmev_m.xmev003,'2',g_site,g_user,g_dept,g_xmev_m.xmevdocno) THEN
                     LET g_xmev_m.xmev003 = g_xmev_m_t.xmev003
                     CALL s_desc_get_trading_partner_full_desc(g_xmev_m.xmev003) RETURNING g_xmev_m.xmev003_desc
                     DISPLAY BY NAME g_xmev_m.xmev003,g_xmev_m.xmev003_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_trading_partner_full_desc(g_xmev_m.xmev003) RETURNING g_xmev_m.xmev003_desc
            DISPLAY BY NAME g_xmev_m.xmev003_desc
            #控制組編號
            CALL s_control_get_group('2',g_xmev_m.xmev001,g_xmev_m.xmev002) RETURNING l_success,l_controlno
            IF l_success THEN
               #客戶慣用幣別、稅別
               SELECT xmae003,xmae004 INTO g_xmev_m.xmev006,g_xmev_m.xmev008
                 FROM xmae_t
                WHERE xmaeent = g_enterprise
                  AND xmae001 = g_xmev_m.xmev003
                  AND xmae002 = l_controlno
                  AND xmaestus = 'Y'
               DISPLAY BY NAME g_xmev_m.xmev006,g_xmev_m.xmev008
            END IF
]]>
  </point>
  <point name="input.a.xmev004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_xmev_m.xmev004_desc = ' '
            CALL axmt400_xmev004_ref()
            IF NOT cl_null(g_xmev_m.xmev004) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmev_m.xmev004 != g_xmev_m_t.xmev004 OR g_xmev_m_t.xmev004 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmev_m.xmev004
                  IF NOT cl_chk_exist("v_xmesdocno") THEN
                     LET g_xmev_m.xmev004 = g_xmev_m_t.xmev004
                     DISPLAY BY NAME g_xmev_m.xmev004
                     CALL axmt400_xmev004_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL axmt400_xmev004_ref()
]]>
  </point>
  <point name="input.a.xmev006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_xmev_m.xmev006_desc = ' '
            CALL s_desc_get_currency_desc(g_xmev_m.xmev006) RETURNING g_xmev_m.xmev006_desc
            DISPLAY BY NAME g_xmev_m.xmev006_desc
            IF NOT cl_null(g_xmev_m.xmev006) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmev_m.xmev006 != g_xmev_m_t.xmev006 OR g_xmev_m_t.xmev006 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_site
                  LET g_chkparam.arg2 = g_xmev_m.xmev006
                  IF NOT cl_chk_exist("v_ooaj002") THEN
                     LET g_xmev_m.xmev006 = g_xmev_m_t.xmev006
                     CALL s_desc_get_currency_desc(g_xmev_m.xmev006) RETURNING g_xmev_m.xmev006_desc
                     DISPLAY BY NAME g_xmev_m.xmev006,g_xmev_m.xmev006_desc
                     NEXT FIELD CURRENT
                  END IF
                  CALL s_aooi160_get_exrate('1',g_site,g_today,g_xmev_m.xmev006,l_ooef016,0,'11') RETURNING g_xmev_m.xmev007
                  DISPLAY BY NAME g_xmev_m.xmev007
               END IF
            END IF
            CALL s_desc_get_currency_desc(g_xmev_m.xmev006) RETURNING g_xmev_m.xmev006_desc
            DISPLAY BY NAME g_xmev_m.xmev006_desc
]]>
  </point>
  <point name="input.a.xmev008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_xmev_m.xmev008_desc = ' '
            CALL s_desc_get_tax_desc1(g_site,g_xmev_m.xmev008) RETURNING g_xmev_m.xmev008_desc
            DISPLAY BY NAME g_xmev_m.xmev008_desc
            IF NOT cl_null(g_xmev_m.xmev008) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmev_m.xmev008 != g_xmev_m_t.xmev008 OR g_xmev_m_t.xmev008 IS NULL )) THEN
                  CALL s_tax_chk(g_site,g_xmev_m.xmev008)
                       RETURNING l_success,g_xmev_m.xmev008_desc,g_xmev_m.xmev010,g_xmev_m.xmev009,l_oodb011
                  IF NOT l_success THEN
                     LET g_xmev_m.xmev008 = g_xmev_m_t.xmev008
                     LET g_xmev_m.xmev009 = g_xmev_m_t.xmev009
                     LET g_xmev_m.xmev010 = g_xmev_m_t.xmev010
                     CALL s_desc_get_tax_desc1(g_site,g_xmev_m.xmev008) RETURNING g_xmev_m.xmev008_desc
                     DISPLAY BY NAME g_xmev_m.xmev008,g_xmev_m.xmev009,g_xmev_m.xmev010,g_xmev_m.xmev008_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_tax_desc1(g_site,g_xmev_m.xmev008) RETURNING g_xmev_m.xmev008_desc
            DISPLAY BY NAME g_xmev_m.xmev009,g_xmev_m.xmev010,g_xmev_m.xmev008_desc
]]>
  </point>
  <point name="input.a.xmev011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmev_m.xmev011) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmev_m.xmev011 != g_xmev_m_t.xmev011 OR g_xmev_m_t.xmev011 IS NULL )) THEN
                  IF NOT cl_null(g_xmev_m.xmev012) THEN
                     CALL s_aooi250_take_decimals(g_xmev_m.xmev012,g_xmev_m.xmev011) RETURNING l_success,g_xmev_m.xmev011
                     DISPLAY BY NAME g_xmev_m.xmev011
                  END IF
               END IF
            END IF
]]>
  </point>
  <point name="input.a.xmev012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_xmev_m.xmev012_desc = ' '
            CALL s_desc_get_unit_desc(g_xmev_m.xmev012) RETURNING g_xmev_m.xmev012_desc
            DISPLAY BY NAME g_xmev_m.xmev012_desc
            IF NOT cl_null(g_xmev_m.xmev012) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmev_m.xmev012 != g_xmev_m_t.xmev012 OR g_xmev_m_t.xmev012 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmev_m.xmev012
                  IF NOT cl_chk_exist("v_ooca001") THEN
                     LET g_xmev_m.xmev012 = g_xmev_m_t.xmev012
                     CALL s_desc_get_unit_desc(g_xmev_m.xmev012) RETURNING g_xmev_m.xmev012_desc
                     DISPLAY BY NAME g_xmev_m.xmev012,g_xmev_m.xmev012_desc
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT cl_null(g_xmev_m.xmev011) THEN
                     CALL s_aooi250_take_decimals(g_xmev_m.xmev012,g_xmev_m.xmev011) RETURNING l_success,g_xmev_m.xmev011
                     DISPLAY BY NAME g_xmev_m.xmev011
                  END IF
               END IF
            END IF
            CALL s_desc_get_unit_desc(g_xmev_m.xmev012) RETURNING g_xmev_m.xmev012_desc
            DISPLAY BY NAME g_xmev_m.xmev012_desc
]]>
  </point>
  <point name="input.a.xmevdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_xmev_m.xmevdocno_desc = ' '
            CALL s_aooi200_get_slip_desc(g_xmev_m.xmevdocno) RETURNING g_xmev_m.xmevdocno_desc
            DISPLAY BY NAME g_xmev_m.xmevdocno_desc
            IF  NOT cl_null(g_xmev_m.xmevdocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xmev_m.xmevdocno != g_xmevdocno_t )) THEN 
                  IF NOT axmt400_xmevdocno_chk() THEN 
                     LET g_xmev_m.xmevdocno = g_xmev_m_t.xmevdocno
                     CALL s_aooi200_get_slip_desc(g_xmev_m.xmevdocno) RETURNING g_xmev_m.xmevdocno_desc
                     DISPLAY BY NAME g_xmev_m.xmevdocno,g_xmev_m.xmevdocno_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            ELSE
               CALL cl_err('','sub-00324',1)
               NEXT FIELD CURRENT
            END IF
            CALL s_aooi200_get_slip_desc(g_xmev_m.xmevdocno) RETURNING g_xmev_m.xmevdocno_desc
            DISPLAY BY NAME g_xmev_m.xmevdocno_desc
            CALL axmt400_set_entry(p_cmd)
            CALL axmt400_set_no_entry(p_cmd)
]]>
  </point>
  <point name="input.b.page1.xmew004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF axmt400_imaa005_exists() THEN
               IF l_cmd = 'a' AND cl_null(g_xmew_d[l_ac].xmew004) THEN
                  CALL g_inam.clear()
                  CALL s_feature_multi(g_xmew_d[l_ac].xmew003,'','',g_site,g_xmev_m.xmevdocno) RETURNING l_success,g_inam
                  LET g_xmew_d[l_ac].xmew004 = g_inam[1].inam002
                  LET g_xmew_d[l_ac].xmew007 = g_inam[1].inam004
               END IF
            END IF
            ]]>
  </point>
  <point name="input.body.a_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body.after_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL axmt400_amount()]]>
  </point>
  <point name="input.body.insert.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            #階層項次
            SELECT MAX(xmewseq)+1000 INTO g_xmew_d[l_ac].xmewseq
              FROM xmew_t
             WHERE xmewent = g_enterprise
               AND xmewdocno = g_xmev_m.xmevdocno
            IF cl_null(g_xmew_d[l_ac].xmewseq) OR g_xmew_d[l_ac].xmewseq = 0 THEN
               LET g_xmew_d[l_ac].xmewseq = 1000
            END IF
            
            LET g_xmew_d[l_ac].xmew004 = ' '
            LET g_xmew_d[l_ac].xmewsite = g_site
            LET g_xmew_d_t.* = g_xmew_d[l_ac].*
]]>
  </point>
  <point name="input.body2.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body2.after_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body2.after_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL axmt400_amount()]]>
  </point>
  <point name="input.body2.after_row2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body2.insert.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            #製程項次
            SELECT MAX(xmexseq)+1 INTO g_xmew2_d[l_ac].xmexseq
              FROM xmex_t
             WHERE xmexent = g_enterprise
               AND xmexdocno = g_xmev_m.xmevdocno
            IF cl_null(g_xmew2_d[l_ac].xmexseq) OR g_xmew2_d[l_ac].xmexseq = 0 THEN
               LET g_xmew2_d[l_ac].xmexseq = 1
            END IF
            
            LET g_xmew2_d[l_ac].xmexsite = g_site
            LET g_xmew2_d_t.* = g_xmew2_d[l_ac].*
            ]]>
  </point>
  <point name="input.body3.after_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body3.after_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL axmt400_amount()]]>
  </point>
  <point name="input.body3.after_row2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body3.insert.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            #費用項次
            SELECT MAX(xmeyseq)+1 INTO g_xmew3_d[l_ac].xmeyseq
              FROM xmey_t
             WHERE xmeyent = g_enterprise
               AND xmeydocno = g_xmev_m.xmevdocno
            IF cl_null(g_xmew3_d[l_ac].xmeyseq) OR g_xmew3_d[l_ac].xmeyseq = 0 THEN
               LET g_xmew3_d[l_ac].xmeyseq = 1
            END IF
            
            LET g_xmew3_d[l_ac].xmeysite = g_site
            LET g_xmew3_d_t.* = g_xmew3_d[l_ac].*
            ]]>
  </point>
  <point name="input.c.page1.xmew001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmew_d[l_ac].xmew001  #給予default值
            LET g_qryparam.arg1 = '215'
            CALL q_oocq002_5()                                #呼叫開窗
            LET g_xmew_d[l_ac].xmew001 = g_qryparam.return1              
            DISPLAY g_xmew_d[l_ac].xmew001 TO xmew001
            CALL s_desc_get_acc_desc('215',g_xmew_d[l_ac].xmew001) RETURNING g_xmew_d[l_ac].xmew001_desc
            NEXT FIELD xmew001                                #返回原欄位
]]>
  </point>
  <point name="input.c.page1.xmew002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmew_d[l_ac].xmew002   #給予default值
            LET g_qryparam.arg1 = '221'
            CALL q_oocq002()                                   #呼叫開窗
            LET g_xmew_d[l_ac].xmew002 = g_qryparam.return1              
            DISPLAY g_xmew_d[l_ac].xmew002 TO xmew002
            CALL s_desc_get_acc_desc('221',g_xmew_d[l_ac].xmew002) RETURNING g_xmew_d[l_ac].xmew002_desc
            NEXT FIELD xmew002                                 #返回原欄位
]]>
  </point>
  <point name="input.c.page1.xmew003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmew_d[l_ac].xmew003  #給予default值
            LET g_qryparam.where = "1=1 "
            CALL s_control_get_item_sql('2',g_site,g_user,g_dept,g_xmev_m.xmevdocno) RETURNING l_success,l_where
            IF l_success THEN
               LET g_qryparam.where = g_qryparam.where ," AND ",l_where
            END IF
            CALL q_imaf001_15()                               #呼叫開窗
            LET g_xmew_d[l_ac].xmew003 = g_qryparam.return1              
            DISPLAY g_xmew_d[l_ac].xmew003 TO xmew003
            CALL s_desc_get_item_desc(g_xmew_d[l_ac].xmew003) RETURNING g_xmew_d[l_ac].xmew003_desc,g_xmew_d[l_ac].xmew003_desc_desc
            NEXT FIELD xmew003                                #返回原欄位
]]>
  </point>
  <point name="input.c.page1.xmew004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF axmt400_imaa005_exists() THEN
               IF l_cmd = 'u' OR (l_cmd = 'a' AND NOT cl_null(g_xmew_d[l_ac].xmew004)) THEN
                  CALL s_feature_single(g_xmew_d[l_ac].xmew003,g_xmew_d[l_ac].xmew004,g_site,g_xmev_m.xmevdocno) RETURNING l_success,g_xmew_d[l_ac].xmew004
               END IF
            END IF]]>
  </point>
  <point name="input.c.page1.xmew006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmew_d[l_ac].xmew006  #給予default值
            LET g_qryparam.arg1 = g_xmew_d[l_ac].xmew003
            CALL q_imao002()                                  #呼叫開窗
            LET g_xmew_d[l_ac].xmew006 = g_qryparam.return1              
            DISPLAY g_xmew_d[l_ac].xmew006 TO xmew006
            CALL s_desc_get_unit_desc(g_xmew_d[l_ac].xmew006) RETURNING g_xmew_d[l_ac].xmew006_desc
            NEXT FIELD xmew006                                #返回原欄位
]]>
  </point>
  <point name="input.c.page1.xmew010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmew_d[l_ac].xmew010  #給予default值
            LET g_qryparam.arg1 = g_site
            CALL q_ooaj002_1()                                #呼叫開窗
            LET g_xmew_d[l_ac].xmew010 = g_qryparam.return1              
            DISPLAY g_xmew_d[l_ac].xmew010 TO xmew010
            CALL s_desc_get_currency_desc(g_xmew_d[l_ac].xmew010) RETURNING g_xmew_d[l_ac].xmew010_desc
            NEXT FIELD xmew010                                #返回原欄位
]]>
  </point>
  <point name="input.c.page1.xmew013" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmew_d[l_ac].xmew013  #給予default值
            LET g_qryparam.where = "1=1 "
            CALL s_control_get_customer_sql('2',g_site,g_user,g_dept,g_xmev_m.xmevdocno) RETURNING l_success,l_where
            IF l_success THEN
               LET g_qryparam.where = g_qryparam.where ," AND ",l_where
            END IF
            CALL q_pmaa001_3()                                #呼叫開窗
            LET g_xmew_d[l_ac].xmew013 = g_qryparam.return1              
            DISPLAY g_xmew_d[l_ac].xmew013 TO xmew013
            CALL s_desc_get_trading_partner_abbr_desc(g_xmew_d[l_ac].xmew013) RETURNING g_xmew_d[l_ac].xmew013_desc
            NEXT FIELD xmew013                                #返回原欄位
]]>
  </point>
  <point name="input.c.page2.xmex001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmew2_d[l_ac].xmex001 #給予default值
            LET g_qryparam.arg1 = "215"
            CALL q_oocq002_5()                                #呼叫開窗
            LET g_xmew2_d[l_ac].xmex001 = g_qryparam.return1              
            DISPLAY g_xmew2_d[l_ac].xmex001 TO xmex001
            CALL s_desc_get_acc_desc('215',g_xmew2_d[l_ac].xmex001) RETURNING g_xmew2_d[l_ac].xmex001_desc
            NEXT FIELD xmex001                                #返回原欄位
]]>
  </point>
  <point name="input.c.page2.xmex002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmew2_d[l_ac].xmex002  #給予default值
            LET g_qryparam.where = "1=1 "
            CALL s_control_get_item_sql('2',g_site,g_user,g_dept,g_xmev_m.xmevdocno) RETURNING l_success,l_where
            IF l_success THEN
               LET g_qryparam.where = g_qryparam.where ," AND ",l_where
            END IF
            CALL q_imaf001_15()                                #呼叫開窗
            LET g_xmew2_d[l_ac].xmex002 = g_qryparam.return1              
            DISPLAY g_xmew2_d[l_ac].xmex002 TO xmex002
            CALL s_desc_get_item_desc(g_xmew2_d[l_ac].xmex002) RETURNING g_xmew2_d[l_ac].xmex002_desc,g_xmew2_d[l_ac].xmex002_desc_desc
            NEXT FIELD xmex002                                 #返回原欄位
]]>
  </point>
  <point name="input.c.page2.xmex004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmew2_d[l_ac].xmex004  #給予default值
            LET g_qryparam.arg1 = '221'
            CALL q_oocq002()                                   #呼叫開窗
            LET g_xmew2_d[l_ac].xmex004 = g_qryparam.return1              
            DISPLAY g_xmew2_d[l_ac].xmex004 TO xmex004
            CALL s_desc_get_acc_desc('221',g_xmew2_d[l_ac].xmex004) RETURNING g_xmew2_d[l_ac].xmex004_desc
            NEXT FIELD xmex004                                 #返回原欄位
]]>
  </point>
  <point name="input.c.page2.xmex006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmew2_d[l_ac].xmex006  #給予default值
            CALL q_ecaa001_1()                                 #呼叫開窗
            LET g_xmew2_d[l_ac].xmex006 = g_qryparam.return1              
            DISPLAY g_xmew2_d[l_ac].xmex006 TO xmex006
            CALL axmt400_xmex006_ref()
            NEXT FIELD xmex006                                 #返回原欄位
]]>
  </point>
  <point name="input.c.page3.xmey002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmew3_d[l_ac].xmey002 #給予default值
            LET g_qryparam.arg1 = "802"
            CALL q_oocq002_5()                                #呼叫開窗
            LET g_xmew3_d[l_ac].xmey002 = g_qryparam.return1              
            DISPLAY g_xmew3_d[l_ac].xmey002 TO xmey002
            CALL s_desc_get_acc_desc('802',g_xmew3_d[l_ac].xmey002) RETURNING g_xmew3_d[l_ac].xmey002_desc
            NEXT FIELD xmey002                                #返回原欄位
]]>
  </point>
  <point name="input.c.xmev001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmev_m.xmev001  #給予default值
            CALL q_ooag001()                            #呼叫開窗
            LET g_xmev_m.xmev001 = g_qryparam.return1              
            DISPLAY g_xmev_m.xmev001 TO xmev001
            CALL s_desc_get_person_desc(g_xmev_m.xmev001) RETURNING g_xmev_m.xmev001_desc
            DISPLAY BY NAME g_xmev_m.xmev001_desc
            NEXT FIELD xmev001                          #返回原欄位
]]>
  </point>
  <point name="input.c.xmev002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmev_m.xmev002  #給予default值
            LET g_qryparam.arg1 = g_xmev_m.xmevdocdt
            CALL q_ooeg001()                            #呼叫開窗
            LET g_xmev_m.xmev002 = g_qryparam.return1              
            DISPLAY g_xmev_m.xmev002 TO xmev002
            CALL s_desc_get_department_desc(g_xmev_m.xmev002) RETURNING g_xmev_m.xmev002_desc
            DISPLAY BY NAME g_xmev_m.xmev002_desc
            NEXT FIELD xmev002                          #返回原欄位
]]>
  </point>
  <point name="input.c.xmev003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmev_m.xmev003             #給予default值
            LET g_qryparam.where = "1=1 "
            CALL s_control_get_customer_sql('2',g_site,g_user,g_dept,g_xmev_m.xmevdocno) RETURNING l_success,l_where
            IF l_success THEN
               LET g_qryparam.where = g_qryparam.where ," AND ",l_where
            END IF
            CALL q_pmaa001_6()                                #呼叫開窗
            LET g_xmev_m.xmev003 = g_qryparam.return1              
            DISPLAY g_xmev_m.xmev003 TO xmev003              #
            CALL s_desc_get_trading_partner_full_desc(g_xmev_m.xmev003) RETURNING g_xmev_m.xmev003_desc
            DISPLAY BY NAME g_xmev_m.xmev003_desc
            NEXT FIELD xmev003                          #返回原欄位
]]>
  </point>
  <point name="input.c.xmev004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmev_m.xmev004  #給予default值
            CALL q_xmesdocno()                          #呼叫開窗
            LET g_xmev_m.xmev004 = g_qryparam.return1              
            DISPLAY g_xmev_m.xmev004 TO xmev004
            CALL axmt400_xmev004_ref()
            NEXT FIELD xmev004                          #返回原欄位
]]>
  </point>
  <point name="input.c.xmev006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmev_m.xmev006  #給予default值
            LET g_qryparam.arg1 = g_site
            CALL q_ooaj002_1()                          #呼叫開窗
            LET g_xmev_m.xmev006 = g_qryparam.return1              
            DISPLAY g_xmev_m.xmev006 TO xmev006
            CALL s_desc_get_currency_desc(g_xmev_m.xmev006) RETURNING g_xmev_m.xmev006_desc
            DISPLAY BY NAME g_xmev_m.xmev006_desc
            NEXT FIELD xmev006                          #返回原欄位
]]>
  </point>
  <point name="input.c.xmev008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmev_m.xmev008  #給予default值
            CALL q_oodb002_2()                          #呼叫開窗
            LET g_xmev_m.xmev008 = g_qryparam.return1              
            DISPLAY g_xmev_m.xmev008 TO xmev008
            CALL s_desc_get_tax_desc1(g_site,g_xmev_m.xmev008) RETURNING g_xmev_m.xmev008_desc
            DISPLAY BY NAME g_xmev_m.xmev008_desc
            NEXT FIELD xmev008                          #返回原欄位
]]>
  </point>
  <point name="input.c.xmev012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmev_m.xmev012  #給予default值
            CALL q_ooca001_1()                          #呼叫開窗
            LET g_xmev_m.xmev012 = g_qryparam.return1              
            DISPLAY g_xmev_m.xmev012 TO xmev012
            CALL s_desc_get_unit_desc(g_xmev_m.xmev012) RETURNING g_xmev_m.xmev012_desc
            DISPLAY BY NAME g_xmev_m.xmev012_desc
            NEXT FIELD xmev012                          #返回原欄位
]]>
  </point>
  <point name="input.c.xmevdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmev_m.xmevdocno  #給予default值
            LET g_qryparam.arg1 = l_ooef004
            LET g_qryparam.arg2 = g_prog
            CALL q_ooba002_1()                            #呼叫開窗
            LET g_xmev_m.xmevdocno = g_qryparam.return1              
            DISPLAY g_xmev_m.xmevdocno TO xmevdocno
            CALL s_aooi200_get_slip_desc(g_xmev_m.xmevdocno) RETURNING g_xmev_m.xmevdocno_desc
            DISPLAY BY NAME g_xmev_m.xmevdocno_desc
            NEXT FIELD xmevdocno                          #返回原欄位
]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_success              LIKE type_t.num5
   DEFINE l_slip                 LIKE ooba_t.ooba002
   DEFINE l_rate                 LIKE ooan_t.ooan005
   DEFINE l_controlno            LIKE ooha_t.ooha001
   DEFINE l_ooef004              LIKE ooef_t.ooef004
   DEFINE l_ooef016              LIKE ooef_t.ooef016
   DEFINE l_oodb011              LIKE oodb_t.oodb011
   DEFINE l_where                STRING]]>
  </point>
  <point name="input.head.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL s_aooi200_gen_docno(g_site,g_xmev_m.xmevdocno,g_xmev_m.xmevdocdt,g_prog) RETURNING l_success,g_xmev_m.xmevdocno 
               IF NOT l_success THEN
                  CALL cl_err(g_xmev_m.xmevdocno,'apm-00003',1)
                  CALL s_transaction_end('N','0')
                  NEXT FIELD xmdodocno
               END IF
               DISPLAY BY NAME g_xmev_m.xmevdocno]]>
  </point>
  <point name="input.head.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_xmev_m.xmev004) THEN
                  LET l_cnt = ''
                  SELECT COUNT(*) INTO l_cnt FROM xmes_t,xmet_t
                   WHERE xmesent = xmetent AND xmessite = xmetsite AND xmesdocno = xmetdocno
                     AND xmesent = g_enterprise AND xmessite = g_site AND xmesdocno = g_xmev_m.xmev004
                     AND xmesstus = 'Y'
                  IF cl_null(l_cnt) THEN LET l_cnt = 0 END IF
                  IF l_cnt > 0 THEN
                     IF cl_ask_confirm('axm-00324') THEN   #是否依範本料號自動產生單身？
                        CALL s_transaction_end('Y','0')
                        CALL s_transaction_begin()
                        CALL axmt400_gen_b(l_ooef016) RETURNING l_success
                        IF NOT l_success THEN 
                           CALL s_transaction_end('N','0')
                        END IF
                     END IF
                  END IF
               END IF
]]>
  </point>
  <point name="input.head.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL axmt400_amount()
]]>
  </point>
  <point name="input.m.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #主幣別編號
            LET l_ooef004 = ''
            LET l_ooef016 = ''
            SELECT ooef004,ooef016 INTO l_ooef004,l_ooef016 FROM ooef_t
             WHERE ooefent = g_enterprise AND ooef001 = g_site
]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
      LET g_xmev_m.xmevsite = g_site
      LET g_xmev_m.xmevdocdt = g_today
      LET g_xmev_m.xmev001 = g_user
      CALL s_desc_get_person_desc(g_xmev_m.xmev001) RETURNING g_xmev_m.xmev001_desc
      DISPLAY BY NAME g_xmev_m.xmev001_desc
      LET g_xmev_m.xmev002 = g_dept
      CALL s_desc_get_department_desc(g_xmev_m.xmev002) RETURNING g_xmev_m.xmev002_desc
      DISPLAY BY NAME g_xmev_m.xmev002_desc
      LET g_xmev_m.xmev013 = g_today
      LET g_xmev_m_t.* = g_xmev_m.*]]>
  </point>
  <point name="menu.prog_xmev001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               #+ 此段落由子樣板a45產生
               CALL cl_user_contact("aooi130", "ooag_t", "ooag002", "ooag001",g_xmev_m.xmev001)
]]>
  </point>
  <point name="modify.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      IF g_xmev_m.xmevstus MATCHES "[DR]" THEN
         LET g_xmev_m.xmevstus = "N"
      END IF]]>
  </point>
  <point name="reproduce.head.b_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_xmev_m.xmev001 = g_user
   LET g_xmev_m.xmev002 = g_dept
   LET g_xmev_m.xmevdocdt = g_today
   LET g_xmev_m.xmevcnfid = ""
   LET g_xmev_m.xmevcnfdt = ""   ]]>
  </point>
  <point name="send.before_send" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF NOT s_axmt400_conf_chk(g_xmev_m.xmevdocno) THEN
      CLOSE axmt400_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF]]>
  </point>
  <point name="set_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL cl_set_comp_entry("xmevdocdt",TRUE)]]>
  </point>
  <point name="set_entry_b.set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("xmew004",TRUE)]]>
  </point>
  <point name="set_no_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL cl_set_comp_entry("xmevdocdt",FALSE)]]>
  </point>
  <point name="set_no_entry_b.set_no_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
   #料件主檔無特徵類別，不能維護產品特徵
   IF NOT axmt400_imaa005_exists() THEN
      CALL cl_set_comp_entry("xmew004",FALSE)
   END IF
]]>
  </point>
  <point name="show.body.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            CALL s_desc_get_acc_desc('215',g_xmew_d[l_ac].xmew001) RETURNING g_xmew_d[l_ac].xmew001_desc
            
            CALL s_desc_get_acc_desc('221',g_xmew_d[l_ac].xmew002) RETURNING g_xmew_d[l_ac].xmew002_desc

            CALL s_desc_get_item_desc(g_xmew_d[l_ac].xmew003) RETURNING g_xmew_d[l_ac].xmew003_desc,g_xmew_d[l_ac].xmew003_desc_desc

            CALL s_desc_get_unit_desc(g_xmew_d[l_ac].xmew006) RETURNING g_xmew_d[l_ac].xmew006_desc

            CALL s_desc_get_currency_desc(g_xmew_d[l_ac].xmew010) RETURNING g_xmew_d[l_ac].xmew010_desc
            
            CALL s_desc_get_trading_partner_abbr_desc(g_xmew_d[l_ac].xmew013) RETURNING g_xmew_d[l_ac].xmew013_desc
]]>
  </point>
  <point name="show.body2.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            CALL s_desc_get_acc_desc('215',g_xmew2_d[l_ac].xmex001) RETURNING g_xmew2_d[l_ac].xmex001_desc
            
            CALL s_desc_get_item_desc(g_xmew2_d[l_ac].xmex002) RETURNING g_xmew2_d[l_ac].xmex002_desc,g_xmew2_d[l_ac].xmex002_desc_desc

            CALL s_desc_get_acc_desc('221',g_xmew2_d[l_ac].xmex004) RETURNING g_xmew2_d[l_ac].xmex004_desc

            CALL axmt400_xmex006_ref()
]]>
  </point>
  <point name="show.body3.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL s_desc_get_acc_desc('802',g_xmew3_d[l_ac].xmey002) RETURNING g_xmew3_d[l_ac].xmey002_desc
]]>
  </point>
  <point name="show.head.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            CALL s_aooi200_get_slip_desc(g_xmev_m.xmevdocno) RETURNING g_xmev_m.xmevdocno_desc
            
            CALL s_desc_get_person_desc(g_xmev_m.xmev001) RETURNING g_xmev_m.xmev001_desc
            DISPLAY BY NAME g_xmev_m.xmev001_desc

            CALL s_desc_get_department_desc(g_xmev_m.xmev002) RETURNING g_xmev_m.xmev002_desc
            DISPLAY BY NAME g_xmev_m.xmev002_desc

            CALL s_desc_get_trading_partner_full_desc(g_xmev_m.xmev003) RETURNING g_xmev_m.xmev003_desc
            DISPLAY BY NAME g_xmev_m.xmev003_desc

            CALL axmt400_xmev004_ref()

            CALL s_desc_get_currency_desc(g_xmev_m.xmev006) RETURNING g_xmev_m.xmev006_desc
            DISPLAY BY NAME g_xmev_m.xmev006_desc
            
            CALL s_desc_get_tax_desc1(g_site,g_xmev_m.xmev008) RETURNING g_xmev_m.xmev008_desc
            DISPLAY BY NAME g_xmev_m.xmev008_desc

            CALL s_desc_get_unit_desc(g_xmev_m.xmev012) RETURNING g_xmev_m.xmev012_desc
            DISPLAY BY NAME g_xmev_m.xmev012_desc

            CALL s_desc_get_person_desc(g_xmev_m.xmevownid) RETURNING g_xmev_m.xmevownid_desc
            DISPLAY BY NAME g_xmev_m.xmevownid_desc

            CALL s_desc_get_department_desc(g_xmev_m.xmevowndp) RETURNING g_xmev_m.xmevowndp_desc
            DISPLAY BY NAME g_xmev_m.xmevowndp_desc

            CALL s_desc_get_person_desc(g_xmev_m.xmevcrtid) RETURNING g_xmev_m.xmevcrtid_desc
            DISPLAY BY NAME g_xmev_m.xmevcrtid_desc

            CALL s_desc_get_department_desc(g_xmev_m.xmevcrtdp) RETURNING g_xmev_m.xmevcrtdp_desc
            DISPLAY BY NAME g_xmev_m.xmevcrtdp_desc

            CALL s_desc_get_person_desc(g_xmev_m.xmevmodid) RETURNING g_xmev_m.xmevmodid_desc
            DISPLAY BY NAME g_xmev_m.xmevmodid_desc

            CALL s_desc_get_person_desc(g_xmev_m.xmevcnfid) RETURNING g_xmev_m.xmevcnfid_desc
            DISPLAY BY NAME g_xmev_m.xmevcnfid_desc
]]>
  </point>
  <point name="statechange.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL s_transaction_begin()
   IF lc_state = 'Y' THEN
      CALL s_axmt400_conf_chk(g_xmev_m.xmevdocno) RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         RETURN
      ELSE
         IF NOT cl_ask_confirm('aim-00108') THEN
           CALL s_transaction_end('N','0')
           RETURN
         ELSE
            CALL s_axmt400_conf_upd(g_xmev_m.xmevdocno) RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
               RETURN
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
         END IF
      END IF
   END IF
   IF lc_state = 'N' THEN
      CALL s_axmt400_unconf_chk(g_xmev_m.xmevdocno) RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         RETURN
      ELSE
         IF NOT cl_ask_confirm('aim-00110') THEN
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
            CALL s_axmt400_unconf_upd(g_xmev_m.xmevdocno) RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
               RETURN
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
         END IF
      END IF
   END IF
   IF lc_state = 'X' THEN
      CALL s_axmt400_invalid_chk(g_xmev_m.xmevdocno) RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         RETURN
      ELSE
         IF NOT cl_ask_confirm('aim-00109') THEN
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
            CALL s_axmt400_invalid_upd(g_xmev_m.xmevdocno) RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
               RETURN
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
         END IF
      END IF
   END IF]]>
  </point>
  <point name="statechange.before_menu" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL cl_set_act_visible("unconfirmed,invalid,confirmed",TRUE)
      CALL cl_set_act_visible("closed",FALSE)
      CALL cl_set_act_visible("signing,withdraw",FALSE)
      
      CASE g_xmev_m.xmevstus
         WHEN "N"
            CALL cl_set_act_visible("unconfirmed",FALSE)
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            IF cl_bpm_chk() THEN
               CALL cl_set_act_visible("signing",TRUE)
               CALL cl_set_act_visible("confirmed",FALSE)
            END IF

         #保留修改的功能(如作廢)，隱藏其他應用功能
         WHEN "R"   
            CALL cl_set_act_visible("confirmed,unconfirmed",FALSE)
            
         WHEN "D"  
            CALL cl_set_act_visible("confirmed,unconfirmed",FALSE)
            
         WHEN "X"
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed",FALSE)
            RETURN
            
         WHEN "Y"
            CALL cl_set_act_visible("invalid,confirmed",FALSE)
            
         #送簽中只能顯示抽單;其餘應用功能皆隱藏
         WHEN "W"   
            CALL cl_set_act_visible("withdraw",TRUE)  
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed",FALSE)
            
         #已核准只能顯示確認;其餘應用功能皆隱藏
         WHEN "A"     
            CALL cl_set_act_visible("confirmed ",TRUE)  
            CALL cl_set_act_visible("unconfirmed,invalid",FALSE)         
         
      END CASE]]>
  </point>
  <point name="statechange.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_success LIKE type_t.chr5]]>
  </point>
  <section id="axmt400.b_fill" ver="8" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION axmt400_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_xmew_d.clear()    #g_xmew_d 單頭及單身 
   CALL g_xmew2_d.clear()
   CALL g_xmew3_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF axmt400_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE xmewsite,xmewseq,xmew001,xmew002,xmew003,xmew004,xmew005,xmew006,xmew007, 
          xmew008,xmew009,xmew010,xmew011,xmew012,xmew013,xmew014,xmew015,xmew016 ,t1.oocql004 ,t2.oocql004 , 
          t3.imaal003 ,t4.imaal004 ,t5.oocal003 ,t6.pmaal004 FROM xmew_t",   
                  " INNER JOIN xmev_t ON xmevdocno = xmewdocno ",
 
                  #"",
                  
                  "",
                                 " LEFT JOIN oocql_t t1 ON t1.oocqlent='"||g_enterprise||"' AND t1.oocql001='215' AND t1.oocql002=xmew001 AND t1.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t2 ON t2.oocqlent='"||g_enterprise||"' AND t2.oocql001='221' AND t2.oocql002=xmew002 AND t2.oocql003='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t3 ON t3.imaalent='"||g_enterprise||"' AND t3.imaal001=xmew003 AND t3.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t4 ON t4.imaalent='"||g_enterprise||"' AND t4.imaal001=xmew003 AND t4.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t5 ON t5.oocalent='"||g_enterprise||"' AND t5.oocal001=xmew006 AND t5.oocal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t6 ON t6.pmaalent='"||g_enterprise||"' AND t6.pmaal001=xmew013 AND t6.pmaal002='"||g_dlang||"' ",
 
                  " WHERE xmewent=? AND xmewdocno=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY xmew_t.xmewseq"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE axmt400_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR axmt400_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_xmev_m.xmevdocno
                                               
      FOREACH b_fill_cs INTO g_xmew_d[l_ac].xmewsite,g_xmew_d[l_ac].xmewseq,g_xmew_d[l_ac].xmew001,g_xmew_d[l_ac].xmew002, 
          g_xmew_d[l_ac].xmew003,g_xmew_d[l_ac].xmew004,g_xmew_d[l_ac].xmew005,g_xmew_d[l_ac].xmew006, 
          g_xmew_d[l_ac].xmew007,g_xmew_d[l_ac].xmew008,g_xmew_d[l_ac].xmew009,g_xmew_d[l_ac].xmew010, 
          g_xmew_d[l_ac].xmew011,g_xmew_d[l_ac].xmew012,g_xmew_d[l_ac].xmew013,g_xmew_d[l_ac].xmew014, 
          g_xmew_d[l_ac].xmew015,g_xmew_d[l_ac].xmew016,g_xmew_d[l_ac].xmew001_desc,g_xmew_d[l_ac].xmew002_desc, 
          g_xmew_d[l_ac].xmew003_desc,g_xmew_d[l_ac].xmew003_desc_desc,g_xmew_d[l_ac].xmew006_desc,g_xmew_d[l_ac].xmew013_desc 

         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
   #判斷是否填充
   IF axmt400_fill_chk(2) THEN
      LET g_sql = "SELECT  UNIQUE xmexsite,xmexseq,xmex001,xmex002,xmex003,xmex004,xmex005,xmex006,xmex007, 
          xmex008,xmex009,xmex010,xmex011,xmex012,xmex013,xmex014 ,t7.oocql004 ,t8.imaal003 ,t9.imaal004 , 
          t10.oocql004 ,t11.ecaa002 FROM xmex_t",   
                  " INNER JOIN xmev_t ON xmevdocno = xmexdocno ",
 
                  "",
                  
                                 " LEFT JOIN oocql_t t7 ON t7.oocqlent='"||g_enterprise||"' AND t7.oocql001='215' AND t7.oocql002=xmex001 AND t7.oocql003='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t8 ON t8.imaalent='"||g_enterprise||"' AND t8.imaal001=xmex002 AND t8.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t9 ON t9.imaalent='"||g_enterprise||"' AND t9.imaal001=xmex002 AND t9.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t10 ON t10.oocqlent='"||g_enterprise||"' AND t10.oocql001='221' AND t10.oocql002=xmex004 AND t10.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ecaa_t t11 ON t11.ecaaent='"||g_enterprise||"' AND t11.ecaa001=xmex006  ",
 
                  " WHERE xmexent=? AND xmexdocno=?"   
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body2.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table2) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY xmex_t.xmexseq"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql2"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE axmt400_pb2 FROM g_sql
      DECLARE b_fill_cs2 CURSOR FOR axmt400_pb2
      
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_xmev_m.xmevdocno
                                               
      FOREACH b_fill_cs2 INTO g_xmew2_d[l_ac].xmexsite,g_xmew2_d[l_ac].xmexseq,g_xmew2_d[l_ac].xmex001, 
          g_xmew2_d[l_ac].xmex002,g_xmew2_d[l_ac].xmex003,g_xmew2_d[l_ac].xmex004,g_xmew2_d[l_ac].xmex005, 
          g_xmew2_d[l_ac].xmex006,g_xmew2_d[l_ac].xmex007,g_xmew2_d[l_ac].xmex008,g_xmew2_d[l_ac].xmex009, 
          g_xmew2_d[l_ac].xmex010,g_xmew2_d[l_ac].xmex011,g_xmew2_d[l_ac].xmex012,g_xmew2_d[l_ac].xmex013, 
          g_xmew2_d[l_ac].xmex014,g_xmew2_d[l_ac].xmex001_desc,g_xmew2_d[l_ac].xmex002_desc,g_xmew2_d[l_ac].xmex002_desc_desc, 
          g_xmew2_d[l_ac].xmex004_desc,g_xmew2_d[l_ac].xmex006_desc
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 0 )
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF axmt400_fill_chk(3) THEN
      LET g_sql = "SELECT  UNIQUE xmeysite,xmeyseq,xmey001,xmey002,xmey003 ,t12.oocql004 FROM xmey_t", 
             
                  " INNER JOIN xmev_t ON xmevdocno = xmeydocno ",
 
                  "",
                  
                                 " LEFT JOIN oocql_t t12 ON t12.oocqlent='"||g_enterprise||"' AND t12.oocql001='802' AND t12.oocql002=xmey002 AND t12.oocql003='"||g_dlang||"' ",
 
                  " WHERE xmeyent=? AND xmeydocno=?"   
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body3.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table3) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY xmey_t.xmeyseq"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql3"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE axmt400_pb3 FROM g_sql
      DECLARE b_fill_cs3 CURSOR FOR axmt400_pb3
      
      LET l_ac = 1
      
      OPEN b_fill_cs3 USING g_enterprise,g_xmev_m.xmevdocno
                                               
      FOREACH b_fill_cs3 INTO g_xmew3_d[l_ac].xmeysite,g_xmew3_d[l_ac].xmeyseq,g_xmew3_d[l_ac].xmey001, 
          g_xmew3_d[l_ac].xmey002,g_xmew3_d[l_ac].xmey003,g_xmew3_d[l_ac].xmey002_desc
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill3.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 0 )
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_xmew_d.deleteElement(g_xmew_d.getLength())
   CALL g_xmew2_d.deleteElement(g_xmew2_d.getLength())
   CALL g_xmew3_d.deleteElement(g_xmew3_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE axmt400_pb
   FREE axmt400_pb2
 
   FREE axmt400_pb3
 
 
   
END FUNCTION
]]>
  </section>
  <section id="axmt400.b_fill2" ver="2" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION axmt400_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL axmt400_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="axmt400.browser_fill" ver="5" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION axmt400_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_xmev_m.* TO NULL
   CALL g_xmew_d.clear()        
   CALL g_xmew2_d.clear() 
   CALL g_xmew3_d.clear() 
 
   CALL g_browser.clear()
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "xmevdocno"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE xmevdocno ",
                      " FROM xmev_t ",
                      " ",
                      " LEFT JOIN xmew_t ON xmewent = xmevent AND xmevdocno = xmewdocno ",
                      " LEFT JOIN xmex_t ON xmexent = xmevent AND xmevdocno = xmexdocno", 
 
                      " LEFT JOIN xmey_t ON xmeyent = xmevent AND xmevdocno = xmeydocno", 
 
 
 
                      " ", 
                      " ", 
                      " WHERE xmevent = '" ||g_enterprise|| "' AND xmewent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("xmev_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE xmevdocno ",
                      " FROM xmev_t ", 
                      "  ",
                      "  ",
                      " WHERE xmevent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("xmev_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照xmevdocno,xmevdocdt,xmev001,'',xmev002,'' Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT xmevstus,xmevdocno,xmevdocdt,xmev001,'',xmev002,'',t1.ooag011 ,t2.ooefl003 ", 

               " FROM xmev_t ",
               "  ",
               "  LEFT JOIN xmew_t ON xmewent = xmevent AND xmevdocno = xmewdocno ",
               "  LEFT JOIN xmex_t ON xmexent = xmevent AND xmevdocno = xmexdocno",
 
               "  LEFT JOIN xmey_t ON xmeyent = xmevent AND xmevdocno = xmeydocno",
 
 
 
               "  ",
               "  ",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent='"||g_enterprise||"' AND t1.ooag001=xmev001  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=xmev002 AND t2.ooefl002='"||g_lang||"' ",
 
               " WHERE xmevent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("xmev_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_xmevdocno,g_browser[g_cnt].b_xmevdocdt, 
       g_browser[g_cnt].b_xmev001,g_browser[g_cnt].b_xmev001_desc,g_browser[g_cnt].b_xmev002,g_browser[g_cnt].b_xmev002_desc, 
       g_browser[g_cnt].b_xmev001_desc,g_browser[g_cnt].b_xmev002_desc
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="axmt400.browser_search" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION axmt400_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY xmevdocno"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL axmt400_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="axmt400.construct" ver="6" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION axmt400_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_xmev_m.* TO NULL
   CALL g_xmew_d.clear()        
   CALL g_xmew2_d.clear() 
   CALL g_xmew3_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
   INITIALIZE g_wc2_table3 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON xmevdocno,xmevdocdt,xmevsite,xmev001,xmev002,xmevstus,xmev003,xmev004, 
          xmev019,xmev005,xmev006,xmev007,xmev008,xmev009,xmev010,xmev011,xmev012,xmev013,xmevownid, 
          xmevowndp,xmevcrtid,xmevcrtdp,xmevcrtdt,xmevmodid,xmevmoddt,xmevcnfid,xmevcnfdt,xmev014,xmev015, 
          xmev016,xmev017,xmev018
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<xmevcrtdt>>----
         AFTER FIELD xmevcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmevmoddt>>----
         AFTER FIELD xmevmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmevcnfdt>>----
         AFTER FIELD xmevcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmevpstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.xmevdocno
         ON ACTION controlp INFIELD xmevdocno
            #add-point:ON ACTION controlp INFIELD xmevdocno
            {<point name="construct.c.xmevdocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmevdocno
            #add-point:BEFORE FIELD xmevdocno
            {<point name="construct.b.xmevdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmevdocno
            
            #add-point:AFTER FIELD xmevdocno
            {<point name="construct.a.xmevdocno" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmevdocdt
            #add-point:BEFORE FIELD xmevdocdt
            {<point name="construct.b.xmevdocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmevdocdt
            
            #add-point:AFTER FIELD xmevdocdt
            {<point name="construct.a.xmevdocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmevdocdt
         ON ACTION controlp INFIELD xmevdocdt
            #add-point:ON ACTION controlp INFIELD xmevdocdt
            {<point name="construct.c.xmevdocdt" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmevsite
            #add-point:BEFORE FIELD xmevsite
            {<point name="construct.b.xmevsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmevsite
            
            #add-point:AFTER FIELD xmevsite
            {<point name="construct.a.xmevsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmevsite
         ON ACTION controlp INFIELD xmevsite
            #add-point:ON ACTION controlp INFIELD xmevsite
            {<point name="construct.c.xmevsite" />}
            #END add-point
 
         #Ctrlp:construct.c.xmev001
         ON ACTION controlp INFIELD xmev001
            #add-point:ON ACTION controlp INFIELD xmev001
            {<point name="construct.c.xmev001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmev001
            #add-point:BEFORE FIELD xmev001
            {<point name="construct.b.xmev001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmev001
            
            #add-point:AFTER FIELD xmev001
            {<point name="construct.a.xmev001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmev002
         ON ACTION controlp INFIELD xmev002
            #add-point:ON ACTION controlp INFIELD xmev002
            {<point name="construct.c.xmev002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmev002
            #add-point:BEFORE FIELD xmev002
            {<point name="construct.b.xmev002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmev002
            
            #add-point:AFTER FIELD xmev002
            {<point name="construct.a.xmev002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmevstus
            #add-point:BEFORE FIELD xmevstus
            {<point name="construct.b.xmevstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmevstus
            
            #add-point:AFTER FIELD xmevstus
            {<point name="construct.a.xmevstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmevstus
         ON ACTION controlp INFIELD xmevstus
            #add-point:ON ACTION controlp INFIELD xmevstus
            {<point name="construct.c.xmevstus" />}
            #END add-point
 
         #Ctrlp:construct.c.xmev003
         ON ACTION controlp INFIELD xmev003
            #add-point:ON ACTION controlp INFIELD xmev003
            {<point name="construct.c.xmev003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmev003
            #add-point:BEFORE FIELD xmev003
            {<point name="construct.b.xmev003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmev003
            
            #add-point:AFTER FIELD xmev003
            {<point name="construct.a.xmev003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmev004
         ON ACTION controlp INFIELD xmev004
            #add-point:ON ACTION controlp INFIELD xmev004
            {<point name="construct.c.xmev004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmev004
            #add-point:BEFORE FIELD xmev004
            {<point name="construct.b.xmev004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmev004
            
            #add-point:AFTER FIELD xmev004
            {<point name="construct.a.xmev004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmev019
            #add-point:BEFORE FIELD xmev019
            {<point name="construct.b.xmev019" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmev019
            
            #add-point:AFTER FIELD xmev019
            {<point name="construct.a.xmev019" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmev019
         ON ACTION controlp INFIELD xmev019
            #add-point:ON ACTION controlp INFIELD xmev019
            {<point name="construct.c.xmev019" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmev005
            #add-point:BEFORE FIELD xmev005
            {<point name="construct.b.xmev005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmev005
            
            #add-point:AFTER FIELD xmev005
            {<point name="construct.a.xmev005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmev005
         ON ACTION controlp INFIELD xmev005
            #add-point:ON ACTION controlp INFIELD xmev005
            {<point name="construct.c.xmev005" />}
            #END add-point
 
         #Ctrlp:construct.c.xmev006
         ON ACTION controlp INFIELD xmev006
            #add-point:ON ACTION controlp INFIELD xmev006
            {<point name="construct.c.xmev006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmev006
            #add-point:BEFORE FIELD xmev006
            {<point name="construct.b.xmev006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmev006
            
            #add-point:AFTER FIELD xmev006
            {<point name="construct.a.xmev006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmev007
            #add-point:BEFORE FIELD xmev007
            {<point name="construct.b.xmev007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmev007
            
            #add-point:AFTER FIELD xmev007
            {<point name="construct.a.xmev007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmev007
         ON ACTION controlp INFIELD xmev007
            #add-point:ON ACTION controlp INFIELD xmev007
            {<point name="construct.c.xmev007" />}
            #END add-point
 
         #Ctrlp:construct.c.xmev008
         ON ACTION controlp INFIELD xmev008
            #add-point:ON ACTION controlp INFIELD xmev008
            {<point name="construct.c.xmev008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmev008
            #add-point:BEFORE FIELD xmev008
            {<point name="construct.b.xmev008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmev008
            
            #add-point:AFTER FIELD xmev008
            {<point name="construct.a.xmev008" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmev009
            #add-point:BEFORE FIELD xmev009
            {<point name="construct.b.xmev009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmev009
            
            #add-point:AFTER FIELD xmev009
            {<point name="construct.a.xmev009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmev009
         ON ACTION controlp INFIELD xmev009
            #add-point:ON ACTION controlp INFIELD xmev009
            {<point name="construct.c.xmev009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmev010
            #add-point:BEFORE FIELD xmev010
            {<point name="construct.b.xmev010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmev010
            
            #add-point:AFTER FIELD xmev010
            {<point name="construct.a.xmev010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmev010
         ON ACTION controlp INFIELD xmev010
            #add-point:ON ACTION controlp INFIELD xmev010
            {<point name="construct.c.xmev010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmev011
            #add-point:BEFORE FIELD xmev011
            {<point name="construct.b.xmev011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmev011
            
            #add-point:AFTER FIELD xmev011
            {<point name="construct.a.xmev011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmev011
         ON ACTION controlp INFIELD xmev011
            #add-point:ON ACTION controlp INFIELD xmev011
            {<point name="construct.c.xmev011" />}
            #END add-point
 
         #Ctrlp:construct.c.xmev012
         ON ACTION controlp INFIELD xmev012
            #add-point:ON ACTION controlp INFIELD xmev012
            {<point name="construct.c.xmev012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmev012
            #add-point:BEFORE FIELD xmev012
            {<point name="construct.b.xmev012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmev012
            
            #add-point:AFTER FIELD xmev012
            {<point name="construct.a.xmev012" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmev013
            #add-point:BEFORE FIELD xmev013
            {<point name="construct.b.xmev013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmev013
            
            #add-point:AFTER FIELD xmev013
            {<point name="construct.a.xmev013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmev013
         ON ACTION controlp INFIELD xmev013
            #add-point:ON ACTION controlp INFIELD xmev013
            {<point name="construct.c.xmev013" />}
            #END add-point
 
         #Ctrlp:construct.c.xmevownid
         ON ACTION controlp INFIELD xmevownid
            #add-point:ON ACTION controlp INFIELD xmevownid
            {<point name="construct.c.xmevownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmevownid
            #add-point:BEFORE FIELD xmevownid
            {<point name="construct.b.xmevownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmevownid
            
            #add-point:AFTER FIELD xmevownid
            {<point name="construct.a.xmevownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmevowndp
         ON ACTION controlp INFIELD xmevowndp
            #add-point:ON ACTION controlp INFIELD xmevowndp
            {<point name="construct.c.xmevowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmevowndp
            #add-point:BEFORE FIELD xmevowndp
            {<point name="construct.b.xmevowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmevowndp
            
            #add-point:AFTER FIELD xmevowndp
            {<point name="construct.a.xmevowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmevcrtid
         ON ACTION controlp INFIELD xmevcrtid
            #add-point:ON ACTION controlp INFIELD xmevcrtid
            {<point name="construct.c.xmevcrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmevcrtid
            #add-point:BEFORE FIELD xmevcrtid
            {<point name="construct.b.xmevcrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmevcrtid
            
            #add-point:AFTER FIELD xmevcrtid
            {<point name="construct.a.xmevcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmevcrtdp
         ON ACTION controlp INFIELD xmevcrtdp
            #add-point:ON ACTION controlp INFIELD xmevcrtdp
            {<point name="construct.c.xmevcrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmevcrtdp
            #add-point:BEFORE FIELD xmevcrtdp
            {<point name="construct.b.xmevcrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmevcrtdp
            
            #add-point:AFTER FIELD xmevcrtdp
            {<point name="construct.a.xmevcrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmevcrtdt
            #add-point:BEFORE FIELD xmevcrtdt
            {<point name="construct.b.xmevcrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.xmevmodid
         ON ACTION controlp INFIELD xmevmodid
            #add-point:ON ACTION controlp INFIELD xmevmodid
            {<point name="construct.c.xmevmodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmevmodid
            #add-point:BEFORE FIELD xmevmodid
            {<point name="construct.b.xmevmodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmevmodid
            
            #add-point:AFTER FIELD xmevmodid
            {<point name="construct.a.xmevmodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmevmoddt
            #add-point:BEFORE FIELD xmevmoddt
            {<point name="construct.b.xmevmoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.xmevcnfid
         ON ACTION controlp INFIELD xmevcnfid
            #add-point:ON ACTION controlp INFIELD xmevcnfid
            {<point name="construct.c.xmevcnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmevcnfid
            #add-point:BEFORE FIELD xmevcnfid
            {<point name="construct.b.xmevcnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmevcnfid
            
            #add-point:AFTER FIELD xmevcnfid
            {<point name="construct.a.xmevcnfid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmevcnfdt
            #add-point:BEFORE FIELD xmevcnfdt
            {<point name="construct.b.xmevcnfdt" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmev014
            #add-point:BEFORE FIELD xmev014
            {<point name="construct.b.xmev014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmev014
            
            #add-point:AFTER FIELD xmev014
            {<point name="construct.a.xmev014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmev014
         ON ACTION controlp INFIELD xmev014
            #add-point:ON ACTION controlp INFIELD xmev014
            {<point name="construct.c.xmev014" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmev015
            #add-point:BEFORE FIELD xmev015
            {<point name="construct.b.xmev015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmev015
            
            #add-point:AFTER FIELD xmev015
            {<point name="construct.a.xmev015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmev015
         ON ACTION controlp INFIELD xmev015
            #add-point:ON ACTION controlp INFIELD xmev015
            {<point name="construct.c.xmev015" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmev016
            #add-point:BEFORE FIELD xmev016
            {<point name="construct.b.xmev016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmev016
            
            #add-point:AFTER FIELD xmev016
            {<point name="construct.a.xmev016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmev016
         ON ACTION controlp INFIELD xmev016
            #add-point:ON ACTION controlp INFIELD xmev016
            {<point name="construct.c.xmev016" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmev017
            #add-point:BEFORE FIELD xmev017
            {<point name="construct.b.xmev017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmev017
            
            #add-point:AFTER FIELD xmev017
            {<point name="construct.a.xmev017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmev017
         ON ACTION controlp INFIELD xmev017
            #add-point:ON ACTION controlp INFIELD xmev017
            {<point name="construct.c.xmev017" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmev018
            #add-point:BEFORE FIELD xmev018
            {<point name="construct.b.xmev018" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmev018
            
            #add-point:AFTER FIELD xmev018
            {<point name="construct.a.xmev018" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmev018
         ON ACTION controlp INFIELD xmev018
            #add-point:ON ACTION controlp INFIELD xmev018
            {<point name="construct.c.xmev018" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON xmewsite,xmewseq,xmew001,xmew002,xmew003,xmew004,xmew005,xmew006,xmew007, 
          xmew008,xmew009,xmew010,xmew011,xmew012,xmew013,xmew014,xmew015,xmew016
           FROM s_detail1[1].xmewsite,s_detail1[1].xmewseq,s_detail1[1].xmew001,s_detail1[1].xmew002, 
               s_detail1[1].xmew003,s_detail1[1].xmew004,s_detail1[1].xmew005,s_detail1[1].xmew006,s_detail1[1].xmew007, 
               s_detail1[1].xmew008,s_detail1[1].xmew009,s_detail1[1].xmew010,s_detail1[1].xmew011,s_detail1[1].xmew012, 
               s_detail1[1].xmew013,s_detail1[1].xmew014,s_detail1[1].xmew015,s_detail1[1].xmew016
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #此段落由子樣板a01產生
         BEFORE FIELD xmewsite
            #add-point:BEFORE FIELD xmewsite
            {<point name="construct.b.page1.xmewsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmewsite
            
            #add-point:AFTER FIELD xmewsite
            {<point name="construct.a.page1.xmewsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmewsite
         ON ACTION controlp INFIELD xmewsite
            #add-point:ON ACTION controlp INFIELD xmewsite
            {<point name="construct.c.page1.xmewsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmewseq
            #add-point:BEFORE FIELD xmewseq
            {<point name="construct.b.page1.xmewseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmewseq
            
            #add-point:AFTER FIELD xmewseq
            {<point name="construct.a.page1.xmewseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmewseq
         ON ACTION controlp INFIELD xmewseq
            #add-point:ON ACTION controlp INFIELD xmewseq
            {<point name="construct.c.page1.xmewseq" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xmew001
         ON ACTION controlp INFIELD xmew001
            #add-point:ON ACTION controlp INFIELD xmew001
            {<point name="construct.c.page1.xmew001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmew001
            #add-point:BEFORE FIELD xmew001
            {<point name="construct.b.page1.xmew001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmew001
            
            #add-point:AFTER FIELD xmew001
            {<point name="construct.a.page1.xmew001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmew002
         ON ACTION controlp INFIELD xmew002
            #add-point:ON ACTION controlp INFIELD xmew002
            {<point name="construct.c.page1.xmew002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmew002
            #add-point:BEFORE FIELD xmew002
            {<point name="construct.b.page1.xmew002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmew002
            
            #add-point:AFTER FIELD xmew002
            {<point name="construct.a.page1.xmew002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmew003
         ON ACTION controlp INFIELD xmew003
            #add-point:ON ACTION controlp INFIELD xmew003
            {<point name="construct.c.page1.xmew003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmew003
            #add-point:BEFORE FIELD xmew003
            {<point name="construct.b.page1.xmew003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmew003
            
            #add-point:AFTER FIELD xmew003
            {<point name="construct.a.page1.xmew003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmew004
            #add-point:BEFORE FIELD xmew004
            {<point name="construct.b.page1.xmew004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmew004
            
            #add-point:AFTER FIELD xmew004
            {<point name="construct.a.page1.xmew004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmew004
         ON ACTION controlp INFIELD xmew004
            #add-point:ON ACTION controlp INFIELD xmew004
            {<point name="construct.c.page1.xmew004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmew005
            #add-point:BEFORE FIELD xmew005
            {<point name="construct.b.page1.xmew005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmew005
            
            #add-point:AFTER FIELD xmew005
            {<point name="construct.a.page1.xmew005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmew005
         ON ACTION controlp INFIELD xmew005
            #add-point:ON ACTION controlp INFIELD xmew005
            {<point name="construct.c.page1.xmew005" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xmew006
         ON ACTION controlp INFIELD xmew006
            #add-point:ON ACTION controlp INFIELD xmew006
            {<point name="construct.c.page1.xmew006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmew006
            #add-point:BEFORE FIELD xmew006
            {<point name="construct.b.page1.xmew006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmew006
            
            #add-point:AFTER FIELD xmew006
            {<point name="construct.a.page1.xmew006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmew007
            #add-point:BEFORE FIELD xmew007
            {<point name="construct.b.page1.xmew007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmew007
            
            #add-point:AFTER FIELD xmew007
            {<point name="construct.a.page1.xmew007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmew007
         ON ACTION controlp INFIELD xmew007
            #add-point:ON ACTION controlp INFIELD xmew007
            {<point name="construct.c.page1.xmew007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmew008
            #add-point:BEFORE FIELD xmew008
            {<point name="construct.b.page1.xmew008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmew008
            
            #add-point:AFTER FIELD xmew008
            {<point name="construct.a.page1.xmew008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmew008
         ON ACTION controlp INFIELD xmew008
            #add-point:ON ACTION controlp INFIELD xmew008
            {<point name="construct.c.page1.xmew008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmew009
            #add-point:BEFORE FIELD xmew009
            {<point name="construct.b.page1.xmew009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmew009
            
            #add-point:AFTER FIELD xmew009
            {<point name="construct.a.page1.xmew009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmew009
         ON ACTION controlp INFIELD xmew009
            #add-point:ON ACTION controlp INFIELD xmew009
            {<point name="construct.c.page1.xmew009" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xmew010
         ON ACTION controlp INFIELD xmew010
            #add-point:ON ACTION controlp INFIELD xmew010
            {<point name="construct.c.page1.xmew010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmew010
            #add-point:BEFORE FIELD xmew010
            {<point name="construct.b.page1.xmew010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmew010
            
            #add-point:AFTER FIELD xmew010
            {<point name="construct.a.page1.xmew010" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmew011
            #add-point:BEFORE FIELD xmew011
            {<point name="construct.b.page1.xmew011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmew011
            
            #add-point:AFTER FIELD xmew011
            {<point name="construct.a.page1.xmew011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmew011
         ON ACTION controlp INFIELD xmew011
            #add-point:ON ACTION controlp INFIELD xmew011
            {<point name="construct.c.page1.xmew011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmew012
            #add-point:BEFORE FIELD xmew012
            {<point name="construct.b.page1.xmew012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmew012
            
            #add-point:AFTER FIELD xmew012
            {<point name="construct.a.page1.xmew012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmew012
         ON ACTION controlp INFIELD xmew012
            #add-point:ON ACTION controlp INFIELD xmew012
            {<point name="construct.c.page1.xmew012" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xmew013
         ON ACTION controlp INFIELD xmew013
            #add-point:ON ACTION controlp INFIELD xmew013
            {<point name="construct.c.page1.xmew013" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmew013
            #add-point:BEFORE FIELD xmew013
            {<point name="construct.b.page1.xmew013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmew013
            
            #add-point:AFTER FIELD xmew013
            {<point name="construct.a.page1.xmew013" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmew014
            #add-point:BEFORE FIELD xmew014
            {<point name="construct.b.page1.xmew014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmew014
            
            #add-point:AFTER FIELD xmew014
            {<point name="construct.a.page1.xmew014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmew014
         ON ACTION controlp INFIELD xmew014
            #add-point:ON ACTION controlp INFIELD xmew014
            {<point name="construct.c.page1.xmew014" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmew015
            #add-point:BEFORE FIELD xmew015
            {<point name="construct.b.page1.xmew015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmew015
            
            #add-point:AFTER FIELD xmew015
            {<point name="construct.a.page1.xmew015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmew015
         ON ACTION controlp INFIELD xmew015
            #add-point:ON ACTION controlp INFIELD xmew015
            {<point name="construct.c.page1.xmew015" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmew016
            #add-point:BEFORE FIELD xmew016
            {<point name="construct.b.page1.xmew016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmew016
            
            #add-point:AFTER FIELD xmew016
            {<point name="construct.a.page1.xmew016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmew016
         ON ACTION controlp INFIELD xmew016
            #add-point:ON ACTION controlp INFIELD xmew016
            {<point name="construct.c.page1.xmew016" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON xmexsite,xmexseq,xmex001,xmex002,xmex003,xmex004,xmex005,xmex006,xmex007, 
          xmex008,xmex009,xmex010,xmex011,xmex012,xmex013,xmex014
           FROM s_detail2[1].xmexsite,s_detail2[1].xmexseq,s_detail2[1].xmex001,s_detail2[1].xmex002, 
               s_detail2[1].xmex003,s_detail2[1].xmex004,s_detail2[1].xmex005,s_detail2[1].xmex006,s_detail2[1].xmex007, 
               s_detail2[1].xmex008,s_detail2[1].xmex009,s_detail2[1].xmex010,s_detail2[1].xmex011,s_detail2[1].xmex012, 
               s_detail2[1].xmex013,s_detail2[1].xmex014
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #此段落由子樣板a01產生
         BEFORE FIELD xmexsite
            #add-point:BEFORE FIELD xmexsite
            {<point name="construct.b.page2.xmexsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmexsite
            
            #add-point:AFTER FIELD xmexsite
            {<point name="construct.a.page2.xmexsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmexsite
         ON ACTION controlp INFIELD xmexsite
            #add-point:ON ACTION controlp INFIELD xmexsite
            {<point name="construct.c.page2.xmexsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmexseq
            #add-point:BEFORE FIELD xmexseq
            {<point name="construct.b.page2.xmexseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmexseq
            
            #add-point:AFTER FIELD xmexseq
            {<point name="construct.a.page2.xmexseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmexseq
         ON ACTION controlp INFIELD xmexseq
            #add-point:ON ACTION controlp INFIELD xmexseq
            {<point name="construct.c.page2.xmexseq" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.xmex001
         ON ACTION controlp INFIELD xmex001
            #add-point:ON ACTION controlp INFIELD xmex001
            {<point name="construct.c.page2.xmex001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmex001
            #add-point:BEFORE FIELD xmex001
            {<point name="construct.b.page2.xmex001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmex001
            
            #add-point:AFTER FIELD xmex001
            {<point name="construct.a.page2.xmex001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmex002
         ON ACTION controlp INFIELD xmex002
            #add-point:ON ACTION controlp INFIELD xmex002
            {<point name="construct.c.page2.xmex002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmex002
            #add-point:BEFORE FIELD xmex002
            {<point name="construct.b.page2.xmex002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmex002
            
            #add-point:AFTER FIELD xmex002
            {<point name="construct.a.page2.xmex002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmex003
            #add-point:BEFORE FIELD xmex003
            {<point name="construct.b.page2.xmex003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmex003
            
            #add-point:AFTER FIELD xmex003
            {<point name="construct.a.page2.xmex003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmex003
         ON ACTION controlp INFIELD xmex003
            #add-point:ON ACTION controlp INFIELD xmex003
            {<point name="construct.c.page2.xmex003" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.xmex004
         ON ACTION controlp INFIELD xmex004
            #add-point:ON ACTION controlp INFIELD xmex004
            {<point name="construct.c.page2.xmex004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmex004
            #add-point:BEFORE FIELD xmex004
            {<point name="construct.b.page2.xmex004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmex004
            
            #add-point:AFTER FIELD xmex004
            {<point name="construct.a.page2.xmex004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmex005
            #add-point:BEFORE FIELD xmex005
            {<point name="construct.b.page2.xmex005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmex005
            
            #add-point:AFTER FIELD xmex005
            {<point name="construct.a.page2.xmex005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmex005
         ON ACTION controlp INFIELD xmex005
            #add-point:ON ACTION controlp INFIELD xmex005
            {<point name="construct.c.page2.xmex005" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.xmex006
         ON ACTION controlp INFIELD xmex006
            #add-point:ON ACTION controlp INFIELD xmex006
            {<point name="construct.c.page2.xmex006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmex006
            #add-point:BEFORE FIELD xmex006
            {<point name="construct.b.page2.xmex006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmex006
            
            #add-point:AFTER FIELD xmex006
            {<point name="construct.a.page2.xmex006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmex007
            #add-point:BEFORE FIELD xmex007
            {<point name="construct.b.page2.xmex007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmex007
            
            #add-point:AFTER FIELD xmex007
            {<point name="construct.a.page2.xmex007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmex007
         ON ACTION controlp INFIELD xmex007
            #add-point:ON ACTION controlp INFIELD xmex007
            {<point name="construct.c.page2.xmex007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmex008
            #add-point:BEFORE FIELD xmex008
            {<point name="construct.b.page2.xmex008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmex008
            
            #add-point:AFTER FIELD xmex008
            {<point name="construct.a.page2.xmex008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmex008
         ON ACTION controlp INFIELD xmex008
            #add-point:ON ACTION controlp INFIELD xmex008
            {<point name="construct.c.page2.xmex008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmex009
            #add-point:BEFORE FIELD xmex009
            {<point name="construct.b.page2.xmex009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmex009
            
            #add-point:AFTER FIELD xmex009
            {<point name="construct.a.page2.xmex009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmex009
         ON ACTION controlp INFIELD xmex009
            #add-point:ON ACTION controlp INFIELD xmex009
            {<point name="construct.c.page2.xmex009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmex010
            #add-point:BEFORE FIELD xmex010
            {<point name="construct.b.page2.xmex010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmex010
            
            #add-point:AFTER FIELD xmex010
            {<point name="construct.a.page2.xmex010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmex010
         ON ACTION controlp INFIELD xmex010
            #add-point:ON ACTION controlp INFIELD xmex010
            {<point name="construct.c.page2.xmex010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmex011
            #add-point:BEFORE FIELD xmex011
            {<point name="construct.b.page2.xmex011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmex011
            
            #add-point:AFTER FIELD xmex011
            {<point name="construct.a.page2.xmex011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmex011
         ON ACTION controlp INFIELD xmex011
            #add-point:ON ACTION controlp INFIELD xmex011
            {<point name="construct.c.page2.xmex011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmex012
            #add-point:BEFORE FIELD xmex012
            {<point name="construct.b.page2.xmex012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmex012
            
            #add-point:AFTER FIELD xmex012
            {<point name="construct.a.page2.xmex012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmex012
         ON ACTION controlp INFIELD xmex012
            #add-point:ON ACTION controlp INFIELD xmex012
            {<point name="construct.c.page2.xmex012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmex013
            #add-point:BEFORE FIELD xmex013
            {<point name="construct.b.page2.xmex013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmex013
            
            #add-point:AFTER FIELD xmex013
            {<point name="construct.a.page2.xmex013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmex013
         ON ACTION controlp INFIELD xmex013
            #add-point:ON ACTION controlp INFIELD xmex013
            {<point name="construct.c.page2.xmex013" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmex014
            #add-point:BEFORE FIELD xmex014
            {<point name="construct.b.page2.xmex014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmex014
            
            #add-point:AFTER FIELD xmex014
            {<point name="construct.a.page2.xmex014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmex014
         ON ACTION controlp INFIELD xmex014
            #add-point:ON ACTION controlp INFIELD xmex014
            {<point name="construct.c.page2.xmex014" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON xmeysite,xmeyseq,xmey001,xmey002,xmey003
           FROM s_detail3[1].xmeysite,s_detail3[1].xmeyseq,s_detail3[1].xmey001,s_detail3[1].xmey002, 
               s_detail3[1].xmey003
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body3.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       
       
       #單身一般欄位開窗相關處理       
                #此段落由子樣板a01產生
         BEFORE FIELD xmeysite
            #add-point:BEFORE FIELD xmeysite
            {<point name="construct.b.page3.xmeysite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmeysite
            
            #add-point:AFTER FIELD xmeysite
            {<point name="construct.a.page3.xmeysite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmeysite
         ON ACTION controlp INFIELD xmeysite
            #add-point:ON ACTION controlp INFIELD xmeysite
            {<point name="construct.c.page3.xmeysite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmeyseq
            #add-point:BEFORE FIELD xmeyseq
            {<point name="construct.b.page3.xmeyseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmeyseq
            
            #add-point:AFTER FIELD xmeyseq
            {<point name="construct.a.page3.xmeyseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmeyseq
         ON ACTION controlp INFIELD xmeyseq
            #add-point:ON ACTION controlp INFIELD xmeyseq
            {<point name="construct.c.page3.xmeyseq" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmey001
            #add-point:BEFORE FIELD xmey001
            {<point name="construct.b.page3.xmey001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmey001
            
            #add-point:AFTER FIELD xmey001
            {<point name="construct.a.page3.xmey001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmey001
         ON ACTION controlp INFIELD xmey001
            #add-point:ON ACTION controlp INFIELD xmey001
            {<point name="construct.c.page3.xmey001" />}
            #END add-point
 
         #Ctrlp:construct.c.page3.xmey002
         ON ACTION controlp INFIELD xmey002
            #add-point:ON ACTION controlp INFIELD xmey002
            {<point name="construct.c.page3.xmey002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmey002
            #add-point:BEFORE FIELD xmey002
            {<point name="construct.b.page3.xmey002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmey002
            
            #add-point:AFTER FIELD xmey002
            {<point name="construct.a.page3.xmey002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmey003
            #add-point:BEFORE FIELD xmey003
            {<point name="construct.b.page3.xmey003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmey003
            
            #add-point:AFTER FIELD xmey003
            {<point name="construct.a.page3.xmey003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmey003
         ON ACTION controlp INFIELD xmey003
            #add-point:ON ACTION controlp INFIELD xmey003
            {<point name="construct.c.page3.xmey003" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="axmt400.default_search" ver="2" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION axmt400_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " xmevdocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="axmt400.delete" ver="3" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION axmt400_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_xmev_m.xmevdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   
 
   CALL axmt400_show()
   
   CALL s_transaction_begin()
 
   OPEN axmt400_cl USING g_enterprise,g_xmev_m.xmevdocno
   IF STATUS THEN
      CALL cl_err("OPEN axmt400_cl:", STATUS, 1)
      CLOSE axmt400_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axmt400_master_referesh USING g_xmev_m.xmevdocno INTO g_xmev_m.xmevdocno,g_xmev_m.xmevdocdt, 
       g_xmev_m.xmevsite,g_xmev_m.xmev001,g_xmev_m.xmev002,g_xmev_m.xmevstus,g_xmev_m.xmev003,g_xmev_m.xmev004, 
       g_xmev_m.xmev019,g_xmev_m.xmev005,g_xmev_m.xmev006,g_xmev_m.xmev007,g_xmev_m.xmev008,g_xmev_m.xmev009, 
       g_xmev_m.xmev010,g_xmev_m.xmev011,g_xmev_m.xmev012,g_xmev_m.xmev013,g_xmev_m.xmevownid,g_xmev_m.xmevowndp, 
       g_xmev_m.xmevcrtid,g_xmev_m.xmevcrtdp,g_xmev_m.xmevcrtdt,g_xmev_m.xmevmodid,g_xmev_m.xmevmoddt, 
       g_xmev_m.xmevcnfid,g_xmev_m.xmevcnfdt,g_xmev_m.xmev014,g_xmev_m.xmev015,g_xmev_m.xmev016,g_xmev_m.xmev017, 
       g_xmev_m.xmev018,g_xmev_m.xmev001_desc,g_xmev_m.xmev002_desc,g_xmev_m.xmev003_desc,g_xmev_m.xmev004_desc, 
       g_xmev_m.xmev006_desc,g_xmev_m.xmev012_desc,g_xmev_m.xmevownid_desc,g_xmev_m.xmevowndp_desc,g_xmev_m.xmevcrtid_desc, 
       g_xmev_m.xmevcrtdp_desc,g_xmev_m.xmevmodid_desc,g_xmev_m.xmevcnfid_desc
 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_xmev_m.xmevdocno,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL axmt400_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_xmevdocno_t = g_xmev_m.xmevdocno
 
 
      DELETE FROM xmev_t
       WHERE xmevent = g_enterprise AND xmevdocno = g_xmev_m.xmevdocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_xmev_m.xmevdocno,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM xmew_t
       WHERE xmewent = g_enterprise AND xmewdocno = g_xmev_m.xmevdocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("xmew_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM xmex_t
       WHERE xmexent = g_enterprise AND
             xmexdocno = g_xmev_m.xmevdocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("xmex_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete3" mark="Y"/>}
      #end add-point
      DELETE FROM xmey_t
       WHERE xmeyent = g_enterprise AND
             xmeydocno = g_xmev_m.xmevdocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("xmey_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete3"/>}
      #end add-point
 
 
 
 
                                                               
      CLEAR FORM
      CALL g_xmew_d.clear() 
      CALL g_xmew2_d.clear()       
      CALL g_xmew3_d.clear()       
 
     
      #CALL axmt400_ui_browser_refresh()  
      CALL axmt400_ui_headershow()  
      CALL axmt400_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL axmt400_browser_fill("")
         CALL axmt400_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL axmt400_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
 
      
 
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE axmt400_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_xmev_m.xmevdocno,'D')
    
END FUNCTION
]]>
  </section>
  <section id="axmt400.delete_b" ver="2" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION axmt400_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM xmew_t
       WHERE xmewent = g_enterprise AND
         xmewdocno = ps_keys_bak[1] AND xmewseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM xmex_t
       WHERE xmexent = g_enterprise AND
         xmexdocno = ps_keys_bak[1] AND xmexseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("xmex_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete3" mark="Y"/>}
      #end add-point    
      DELETE FROM xmey_t
       WHERE xmeyent = g_enterprise AND
         xmeydocno = ps_keys_bak[1] AND xmeyseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete3"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("xmey_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete3"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="axmt400.description" ver="1" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000091
#+ 
#+ Filename...: axmt400
#+ Description: 銷售估價單維護作業
#+ Creator....: 04441(2014/06/11)
#+ Modifier...: 04441(2014/06/25)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="axmt400.detail_reproduce" ver="1" status="" src="s">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION axmt400_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE xmew_t.*
   DEFINE l_detail2    RECORD LIKE xmex_t.*
 
   DEFINE l_detail3    RECORD LIKE xmey_t.*
 
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE axmt400_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE axmt400_detail AS ",
                "SELECT * FROM xmew_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO axmt400_detail SELECT * FROM xmew_t 
                                         WHERE xmewent = g_enterprise AND xmewdocno = g_xmevdocno_t
 
   
   #將key修正為調整後   
   UPDATE axmt400_detail 
      #更新key欄位
      SET xmewdocno = g_xmev_m.xmevdocno
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO xmew_t SELECT * FROM axmt400_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmt400_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE axmt400_detail AS ",
      "SELECT * FROM xmex_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO axmt400_detail SELECT * FROM xmex_t
                                         WHERE xmexent = g_enterprise AND xmexdocno = g_xmevdocno_t
 
 
   #將key修正為調整後   
   UPDATE axmt400_detail SET xmexdocno = g_xmev_m.xmevdocno
 
  
   #將資料塞回原table   
   INSERT INTO xmex_t SELECT * FROM axmt400_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmt400_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table3.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE axmt400_detail AS ",
      "SELECT * FROM xmey_t "
   PREPARE repro_tbl3 FROM ls_sql
   EXECUTE repro_tbl3
   FREE repro_tbl3
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO axmt400_detail SELECT * FROM xmey_t
                                         WHERE xmeyent = g_enterprise AND xmeydocno = g_xmevdocno_t
 
 
   #將key修正為調整後   
   UPDATE axmt400_detail SET xmeydocno = g_xmev_m.xmevdocno
 
  
   #將資料塞回原table   
   INSERT INTO xmey_t SELECT * FROM axmt400_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table3.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmt400_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table3.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_xmevdocno_t = g_xmev_m.xmevdocno
 
   
   DROP TABLE axmt400_detail
   
END FUNCTION
]]>
  </section>
  <section id="axmt400.detail_show" ver="2" status="" src="s">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION axmt400_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="axmt400.fetch" ver="3" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION axmt400_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_xmev_m.xmevdocno = g_browser[g_current_idx].b_xmevdocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE axmt400_master_referesh USING g_xmev_m.xmevdocno INTO g_xmev_m.xmevdocno,g_xmev_m.xmevdocdt, 
       g_xmev_m.xmevsite,g_xmev_m.xmev001,g_xmev_m.xmev002,g_xmev_m.xmevstus,g_xmev_m.xmev003,g_xmev_m.xmev004, 
       g_xmev_m.xmev019,g_xmev_m.xmev005,g_xmev_m.xmev006,g_xmev_m.xmev007,g_xmev_m.xmev008,g_xmev_m.xmev009, 
       g_xmev_m.xmev010,g_xmev_m.xmev011,g_xmev_m.xmev012,g_xmev_m.xmev013,g_xmev_m.xmevownid,g_xmev_m.xmevowndp, 
       g_xmev_m.xmevcrtid,g_xmev_m.xmevcrtdp,g_xmev_m.xmevcrtdt,g_xmev_m.xmevmodid,g_xmev_m.xmevmoddt, 
       g_xmev_m.xmevcnfid,g_xmev_m.xmevcnfdt,g_xmev_m.xmev014,g_xmev_m.xmev015,g_xmev_m.xmev016,g_xmev_m.xmev017, 
       g_xmev_m.xmev018,g_xmev_m.xmev001_desc,g_xmev_m.xmev002_desc,g_xmev_m.xmev003_desc,g_xmev_m.xmev004_desc, 
       g_xmev_m.xmev006_desc,g_xmev_m.xmev012_desc,g_xmev_m.xmevownid_desc,g_xmev_m.xmevowndp_desc,g_xmev_m.xmevcrtid_desc, 
       g_xmev_m.xmevcrtdp_desc,g_xmev_m.xmevmodid_desc,g_xmev_m.xmevcnfid_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("xmev_t",SQLCA.sqlcode,1)
      INITIALIZE g_xmev_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_xmev_m_t.* = g_xmev_m.*
   LET g_xmev_m_o.* = g_xmev_m.*
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL axmt400_show()
 
   #+ 此段落由子樣板a56產生
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
END FUNCTION
]]>
  </section>
  <section id="axmt400.fill_chk" ver="3" status="" src="s">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION axmt400_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
   IF ps_idx = 2 AND
      ((NOT cl_null(g_wc2_table2) AND g_wc2_table2.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
   IF ps_idx = 3 AND
      ((NOT cl_null(g_wc2_table3) AND g_wc2_table3.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
 
 
 
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
 
   RETURN FALSE
 
END FUNCTION
]]>
  </section>
  <section id="axmt400.filter" ver="1" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION axmt400_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON xmevdocno,xmevdocdt,xmev001,xmev002
                          FROM s_browse[1].b_xmevdocno,s_browse[1].b_xmevdocdt,s_browse[1].b_xmev001, 
                              s_browse[1].b_xmev002
 
         BEFORE CONSTRUCT
               DISPLAY axmt400_filter_parser('xmevdocno') TO s_browse[1].b_xmevdocno
            DISPLAY axmt400_filter_parser('xmevdocdt') TO s_browse[1].b_xmevdocdt
            DISPLAY axmt400_filter_parser('xmev001') TO s_browse[1].b_xmev001
            DISPLAY axmt400_filter_parser('xmev002') TO s_browse[1].b_xmev002
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL axmt400_filter_show('xmevdocno')
   CALL axmt400_filter_show('xmevdocdt')
   CALL axmt400_filter_show('xmev001')
   CALL axmt400_filter_show('xmev002')
 
END FUNCTION
]]>
  </section>
  <section id="axmt400.filter_parser" ver="1" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION axmt400_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="axmt400.filter_show" ver="1" status="" src="s">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION axmt400_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = axmt400_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="axmt400.global" ver="6" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_xmev_m        RECORD
       xmevdocno LIKE xmev_t.xmevdocno, 
   xmevdocno_desc LIKE type_t.chr80, 
   xmevdocdt LIKE xmev_t.xmevdocdt, 
   xmevsite LIKE xmev_t.xmevsite, 
   xmev001 LIKE xmev_t.xmev001, 
   xmev001_desc LIKE type_t.chr80, 
   xmev002 LIKE xmev_t.xmev002, 
   xmev002_desc LIKE type_t.chr80, 
   xmevstus LIKE xmev_t.xmevstus, 
   xmev003 LIKE xmev_t.xmev003, 
   xmev003_desc LIKE type_t.chr80, 
   xmev004 LIKE xmev_t.xmev004, 
   xmev004_desc LIKE type_t.chr80, 
   xmev019 LIKE xmev_t.xmev019, 
   xmev005 LIKE xmev_t.xmev005, 
   xmev006 LIKE xmev_t.xmev006, 
   xmev006_desc LIKE type_t.chr80, 
   xmev007 LIKE xmev_t.xmev007, 
   xmev008 LIKE xmev_t.xmev008, 
   xmev008_desc LIKE type_t.chr80, 
   xmev009 LIKE xmev_t.xmev009, 
   xmev010 LIKE xmev_t.xmev010, 
   xmev011 LIKE xmev_t.xmev011, 
   xmev012 LIKE xmev_t.xmev012, 
   xmev012_desc LIKE type_t.chr80, 
   xmev013 LIKE xmev_t.xmev013, 
   xmevownid LIKE xmev_t.xmevownid, 
   xmevownid_desc LIKE type_t.chr80, 
   xmevowndp LIKE xmev_t.xmevowndp, 
   xmevowndp_desc LIKE type_t.chr80, 
   xmevcrtid LIKE xmev_t.xmevcrtid, 
   xmevcrtid_desc LIKE type_t.chr80, 
   xmevcrtdp LIKE xmev_t.xmevcrtdp, 
   xmevcrtdp_desc LIKE type_t.chr80, 
   xmevcrtdt DATETIME YEAR TO SECOND, 
   xmevmodid LIKE xmev_t.xmevmodid, 
   xmevmodid_desc LIKE type_t.chr80, 
   xmevmoddt DATETIME YEAR TO SECOND, 
   xmevcnfid LIKE xmev_t.xmevcnfid, 
   xmevcnfid_desc LIKE type_t.chr80, 
   xmevcnfdt DATETIME YEAR TO SECOND, 
   xmev014 LIKE xmev_t.xmev014, 
   xmev015 LIKE xmev_t.xmev015, 
   xmev016 LIKE xmev_t.xmev016, 
   xmev017 LIKE xmev_t.xmev017, 
   xmev018 LIKE xmev_t.xmev018
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_xmew_d        RECORD
       xmewsite LIKE xmew_t.xmewsite, 
   xmewseq LIKE xmew_t.xmewseq, 
   xmew001 LIKE xmew_t.xmew001, 
   xmew001_desc LIKE type_t.chr500, 
   xmew002 LIKE xmew_t.xmew002, 
   xmew002_desc LIKE type_t.chr500, 
   xmew003 LIKE xmew_t.xmew003, 
   xmew003_desc LIKE type_t.chr500, 
   xmew003_desc_desc LIKE type_t.chr500, 
   xmew004 LIKE xmew_t.xmew004, 
   xmew005 LIKE xmew_t.xmew005, 
   xmew006 LIKE xmew_t.xmew006, 
   xmew006_desc LIKE type_t.chr500, 
   xmew007 LIKE xmew_t.xmew007, 
   xmew008 LIKE xmew_t.xmew008, 
   xmew009 LIKE xmew_t.xmew009, 
   xmew010 LIKE xmew_t.xmew010, 
   xmew010_desc LIKE type_t.chr500, 
   xmew011 LIKE xmew_t.xmew011, 
   xmew012 LIKE xmew_t.xmew012, 
   xmew013 LIKE xmew_t.xmew013, 
   xmew013_desc LIKE type_t.chr500, 
   xmew014 LIKE xmew_t.xmew014, 
   xmew015 LIKE xmew_t.xmew015, 
   xmew016 LIKE xmew_t.xmew016
       END RECORD
PRIVATE TYPE type_g_xmew2_d RECORD
       xmexsite LIKE xmex_t.xmexsite, 
   xmexseq LIKE xmex_t.xmexseq, 
   xmex001 LIKE xmex_t.xmex001, 
   xmex001_desc LIKE type_t.chr500, 
   xmex002 LIKE xmex_t.xmex002, 
   xmex002_desc LIKE type_t.chr500, 
   xmex002_desc_desc LIKE type_t.chr500, 
   xmex003 LIKE xmex_t.xmex003, 
   xmex004 LIKE xmex_t.xmex004, 
   xmex004_desc LIKE type_t.chr500, 
   xmex005 LIKE xmex_t.xmex005, 
   xmex006 LIKE xmex_t.xmex006, 
   xmex006_desc LIKE type_t.chr500, 
   xmex007 LIKE xmex_t.xmex007, 
   xmex008 LIKE xmex_t.xmex008, 
   xmex009 LIKE xmex_t.xmex009, 
   xmex010 LIKE xmex_t.xmex010, 
   xmex011 LIKE xmex_t.xmex011, 
   xmex012 LIKE xmex_t.xmex012, 
   xmex013 LIKE xmex_t.xmex013, 
   xmex014 LIKE xmex_t.xmex014
       END RECORD
PRIVATE TYPE type_g_xmew3_d RECORD
       xmeysite LIKE xmey_t.xmeysite, 
   xmeyseq LIKE xmey_t.xmeyseq, 
   xmey001 LIKE xmey_t.xmey001, 
   xmey002 LIKE xmey_t.xmey002, 
   xmey002_desc LIKE type_t.chr500, 
   xmey003 LIKE xmey_t.xmey003
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_xmev_m          type_g_xmev_m
DEFINE g_xmev_m_t        type_g_xmev_m
DEFINE g_xmev_m_o        type_g_xmev_m
 
   DEFINE g_xmevdocno_t LIKE xmev_t.xmevdocno
 
 
DEFINE g_xmew_d          DYNAMIC ARRAY OF type_g_xmew_d
DEFINE g_xmew_d_t        type_g_xmew_d
DEFINE g_xmew_d_o        type_g_xmew_d
DEFINE g_xmew2_d   DYNAMIC ARRAY OF type_g_xmew2_d
DEFINE g_xmew2_d_t type_g_xmew2_d
DEFINE g_xmew2_d_o type_g_xmew2_d
DEFINE g_xmew3_d   DYNAMIC ARRAY OF type_g_xmew3_d
DEFINE g_xmew3_d_t type_g_xmew3_d
DEFINE g_xmew3_d_o type_g_xmew3_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_xmevdocno LIKE xmev_t.xmevdocno,
      b_xmevdocdt LIKE xmev_t.xmevdocdt,
      b_xmev001 LIKE xmev_t.xmev001,
   b_xmev001_desc LIKE type_t.chr80,
      b_xmev002 LIKE xmev_t.xmev002,
   b_xmev002_desc LIKE type_t.chr80
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_xmevdocno LIKE xmev_t.xmevdocno,
      b_xmevdocdt LIKE xmev_t.xmevdocdt,
      b_xmev001 LIKE xmev_t.xmev001,
   b_xmev001_desc LIKE type_t.chr80,
      b_xmev002 LIKE xmev_t.xmev002,
   b_xmev002_desc LIKE type_t.chr80
      END RECORD 
      
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="axmt400.idx_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION axmt400_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_xmew_d.getLength() THEN
         LET g_detail_idx = g_xmew_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmew_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmew_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_xmew2_d.getLength() THEN
         LET g_detail_idx = g_xmew2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmew2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmew2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_xmew3_d.getLength() THEN
         LET g_detail_idx = g_xmew3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmew3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmew3_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="axmt400.init" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION axmt400_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('xmevstus','13','N,X,Y,A,D,R,W')
 
      CALL cl_set_combo_scc('xmev005','3027') 
   CALL cl_set_combo_scc('xmex009','3018') 
   CALL cl_set_combo_scc('xmey001','3028') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL axmt400_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="axmt400.input" ver="6" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION axmt400_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT xmewsite,xmewseq,xmew001,xmew002,xmew003,xmew004,xmew005,xmew006,xmew007, 
       xmew008,xmew009,xmew010,xmew011,xmew012,xmew013,xmew014,xmew015,xmew016 FROM xmew_t WHERE xmewent=?  
       AND xmewdocno=? AND xmewseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt400_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT xmexsite,xmexseq,xmex001,xmex002,xmex003,xmex004,xmex005,xmex006,xmex007, 
       xmex008,xmex009,xmex010,xmex011,xmex012,xmex013,xmex014 FROM xmex_t WHERE xmexent=? AND xmexdocno=?  
       AND xmexseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt400_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql3" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT xmeysite,xmeyseq,xmey001,xmey002,xmey003 FROM xmey_t WHERE xmeyent=? AND  
       xmeydocno=? AND xmeyseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql3"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt400_bcl3 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL axmt400_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL axmt400_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_xmev_m.xmevdocno,g_xmev_m.xmevdocdt,g_xmev_m.xmevsite,g_xmev_m.xmev001,g_xmev_m.xmev002, 
       g_xmev_m.xmevstus,g_xmev_m.xmev003,g_xmev_m.xmev004,g_xmev_m.xmev019,g_xmev_m.xmev005,g_xmev_m.xmev006, 
       g_xmev_m.xmev007,g_xmev_m.xmev008,g_xmev_m.xmev009,g_xmev_m.xmev010,g_xmev_m.xmev011,g_xmev_m.xmev012, 
       g_xmev_m.xmev013
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
  </section>
  <section id="axmt400.input.body" ver="8" status="" src="s">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_xmew_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xmew_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axmt400_b_fill()
            LET g_rec_b = g_xmew_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN axmt400_cl USING g_enterprise,g_xmev_m.xmevdocno
            IF STATUS THEN
               CALL cl_err("OPEN axmt400_cl:", STATUS, 1)
               CLOSE axmt400_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_xmew_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xmew_d[l_ac].xmewseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xmew_d_t.* = g_xmew_d[l_ac].*  #BACKUP
               LET g_xmew_d_o.* = g_xmew_d[l_ac].*  #BACKUP
               CALL axmt400_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL axmt400_set_no_entry_b(l_cmd)
               IF NOT axmt400_lock_b("xmew_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axmt400_bcl INTO g_xmew_d[l_ac].xmewsite,g_xmew_d[l_ac].xmewseq,g_xmew_d[l_ac].xmew001, 
                      g_xmew_d[l_ac].xmew002,g_xmew_d[l_ac].xmew003,g_xmew_d[l_ac].xmew004,g_xmew_d[l_ac].xmew005, 
                      g_xmew_d[l_ac].xmew006,g_xmew_d[l_ac].xmew007,g_xmew_d[l_ac].xmew008,g_xmew_d[l_ac].xmew009, 
                      g_xmew_d[l_ac].xmew010,g_xmew_d[l_ac].xmew011,g_xmew_d[l_ac].xmew012,g_xmew_d[l_ac].xmew013, 
                      g_xmew_d[l_ac].xmew014,g_xmew_d[l_ac].xmew015,g_xmew_d[l_ac].xmew016
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_xmew_d_t.xmewseq,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL axmt400_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmew_d[l_ac].* TO NULL 
            INITIALIZE g_xmew_d_t.* TO NULL 
            INITIALIZE g_xmew_d_o.* TO NULL 
                  LET g_xmew_d[l_ac].xmew007 = "1"
      LET g_xmew_d[l_ac].xmew008 = "1"
      LET g_xmew_d[l_ac].xmew009 = "N"
      LET g_xmew_d[l_ac].xmew012 = "0"
      LET g_xmew_d[l_ac].xmew014 = "0"
      LET g_xmew_d[l_ac].xmew015 = "0"
 
            LET g_xmew_d_t.* = g_xmew_d[l_ac].*     #新輸入資料
            LET g_xmew_d_o.* = g_xmew_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axmt400_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL axmt400_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmew_d[li_reproduce_target].* = g_xmew_d[li_reproduce].*
 
               LET g_xmew_d[li_reproduce_target].xmewseq = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM xmew_t 
             WHERE xmewent = g_enterprise AND xmewdocno = g_xmev_m.xmevdocno
 
               AND xmewseq = g_xmew_d[l_ac].xmewseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmev_m.xmevdocno
               LET gs_keys[2] = g_xmew_d[g_detail_idx].xmewseq
               CALL axmt400_insert_b('xmew_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_xmew_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("xmew_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axmt400_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_xmew_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_xmew_d.deleteElement(l_ac)
               NEXT FIELD xmewseq
            END IF
         
            IF g_xmew_d[l_ac].xmewseq IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM xmew_t
                WHERE xmewent = g_enterprise AND xmewdocno = g_xmev_m.xmevdocno AND
 
                      xmewseq = g_xmew_d_t.xmewseq
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("xmew_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE axmt400_bcl
               LET l_count = g_xmew_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmev_m.xmevdocno
               LET gs_keys[2] = g_xmew_d[g_detail_idx].xmewseq
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL axmt400_delete_b('xmew_t',gs_keys,"'1'")
 
                  #此段落由子樣板a01產生
         BEFORE FIELD xmewsite
            #add-point:BEFORE FIELD xmewsite
            {<point name="input.b.page1.xmewsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmewsite
            
            #add-point:AFTER FIELD xmewsite
            {<point name="input.a.page1.xmewsite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmewsite
            #add-point:ON CHANGE xmewsite
            {<point name="input.g.page1.xmewsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmewseq
            #add-point:BEFORE FIELD xmewseq
            {<point name="input.b.page1.xmewseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmewseq
            
            #add-point:AFTER FIELD xmewseq
            {<point name="input.a.page1.xmewseq" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmewseq
            #add-point:ON CHANGE xmewseq
            {<point name="input.g.page1.xmewseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmew001
            
            #add-point:AFTER FIELD xmew001
            {<point name="input.a.page1.xmew001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmew001
            #add-point:BEFORE FIELD xmew001
            {<point name="input.b.page1.xmew001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmew001
            #add-point:ON CHANGE xmew001
            {<point name="input.g.page1.xmew001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmew002
            
            #add-point:AFTER FIELD xmew002
            {<point name="input.a.page1.xmew002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmew002
            #add-point:BEFORE FIELD xmew002
            {<point name="input.b.page1.xmew002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmew002
            #add-point:ON CHANGE xmew002
            {<point name="input.g.page1.xmew002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmew003
            
            #add-point:AFTER FIELD xmew003
            {<point name="input.a.page1.xmew003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmew003
            #add-point:BEFORE FIELD xmew003
            {<point name="input.b.page1.xmew003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmew003
            #add-point:ON CHANGE xmew003
            {<point name="input.g.page1.xmew003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmew004
            #add-point:BEFORE FIELD xmew004
            {<point name="input.b.page1.xmew004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmew004
            
            #add-point:AFTER FIELD xmew004
            {<point name="input.a.page1.xmew004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmew004
            #add-point:ON CHANGE xmew004
            {<point name="input.g.page1.xmew004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmew005
            #add-point:BEFORE FIELD xmew005
            {<point name="input.b.page1.xmew005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmew005
            
            #add-point:AFTER FIELD xmew005
            {<point name="input.a.page1.xmew005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmew005
            #add-point:ON CHANGE xmew005
            {<point name="input.g.page1.xmew005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmew006
            
            #add-point:AFTER FIELD xmew006
            {<point name="input.a.page1.xmew006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmew006
            #add-point:BEFORE FIELD xmew006
            {<point name="input.b.page1.xmew006" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmew006
            #add-point:ON CHANGE xmew006
            {<point name="input.g.page1.xmew006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmew007
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_xmew_d[l_ac].xmew007,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD xmew007
            END IF
 
 
            #add-point:AFTER FIELD xmew007
            {<point name="input.a.page1.xmew007" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmew007
            #add-point:BEFORE FIELD xmew007
            {<point name="input.b.page1.xmew007" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmew007
            #add-point:ON CHANGE xmew007
            {<point name="input.g.page1.xmew007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmew008
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_xmew_d[l_ac].xmew008,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD xmew008
            END IF
 
 
            #add-point:AFTER FIELD xmew008
            {<point name="input.a.page1.xmew008" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmew008
            #add-point:BEFORE FIELD xmew008
            {<point name="input.b.page1.xmew008" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmew008
            #add-point:ON CHANGE xmew008
            {<point name="input.g.page1.xmew008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmew009
            #add-point:BEFORE FIELD xmew009
            {<point name="input.b.page1.xmew009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmew009
            
            #add-point:AFTER FIELD xmew009
            {<point name="input.a.page1.xmew009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmew009
            #add-point:ON CHANGE xmew009
            {<point name="input.g.page1.xmew009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmew010
            
            #add-point:AFTER FIELD xmew010
            {<point name="input.a.page1.xmew010" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmew010
            #add-point:BEFORE FIELD xmew010
            {<point name="input.b.page1.xmew010" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmew010
            #add-point:ON CHANGE xmew010
            {<point name="input.g.page1.xmew010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmew011
            #add-point:BEFORE FIELD xmew011
            {<point name="input.b.page1.xmew011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmew011
            
            #add-point:AFTER FIELD xmew011
            {<point name="input.a.page1.xmew011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmew011
            #add-point:ON CHANGE xmew011
            {<point name="input.g.page1.xmew011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmew012
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_xmew_d[l_ac].xmew012,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD xmew012
            END IF
 
 
            #add-point:AFTER FIELD xmew012
            {<point name="input.a.page1.xmew012" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmew012
            #add-point:BEFORE FIELD xmew012
            {<point name="input.b.page1.xmew012" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmew012
            #add-point:ON CHANGE xmew012
            {<point name="input.g.page1.xmew012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmew013
            
            #add-point:AFTER FIELD xmew013
            {<point name="input.a.page1.xmew013" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmew013
            #add-point:BEFORE FIELD xmew013
            {<point name="input.b.page1.xmew013" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmew013
            #add-point:ON CHANGE xmew013
            {<point name="input.g.page1.xmew013" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmew014
            #add-point:BEFORE FIELD xmew014
            {<point name="input.b.page1.xmew014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmew014
            
            #add-point:AFTER FIELD xmew014
            {<point name="input.a.page1.xmew014" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmew014
            #add-point:ON CHANGE xmew014
            {<point name="input.g.page1.xmew014" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmew015
            #add-point:BEFORE FIELD xmew015
            {<point name="input.b.page1.xmew015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmew015
            
            #add-point:AFTER FIELD xmew015
            {<point name="input.a.page1.xmew015" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmew015
            #add-point:ON CHANGE xmew015
            {<point name="input.g.page1.xmew015" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmew016
            #add-point:BEFORE FIELD xmew016
            {<point name="input.b.page1.xmew016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmew016
            
            #add-point:AFTER FIELD xmew016
            {<point name="input.a.page1.xmew016" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmew016
            #add-point:ON CHANGE xmew016
            {<point name="input.g.page1.xmew016" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.xmewsite
         ON ACTION controlp INFIELD xmewsite
            #add-point:ON ACTION controlp INFIELD xmewsite
            {<point name="input.c.page1.xmewsite" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmewseq
         ON ACTION controlp INFIELD xmewseq
            #add-point:ON ACTION controlp INFIELD xmewseq
            {<point name="input.c.page1.xmewseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmew001
         ON ACTION controlp INFIELD xmew001
            #add-point:ON ACTION controlp INFIELD xmew001
            {<point name="input.c.page1.xmew001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmew002
         ON ACTION controlp INFIELD xmew002
            #add-point:ON ACTION controlp INFIELD xmew002
            {<point name="input.c.page1.xmew002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmew003
         ON ACTION controlp INFIELD xmew003
            #add-point:ON ACTION controlp INFIELD xmew003
            {<point name="input.c.page1.xmew003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmew004
         ON ACTION controlp INFIELD xmew004
            #add-point:ON ACTION controlp INFIELD xmew004
            {<point name="input.c.page1.xmew004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmew005
         ON ACTION controlp INFIELD xmew005
            #add-point:ON ACTION controlp INFIELD xmew005
            {<point name="input.c.page1.xmew005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmew006
         ON ACTION controlp INFIELD xmew006
            #add-point:ON ACTION controlp INFIELD xmew006
            {<point name="input.c.page1.xmew006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmew007
         ON ACTION controlp INFIELD xmew007
            #add-point:ON ACTION controlp INFIELD xmew007
            {<point name="input.c.page1.xmew007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmew008
         ON ACTION controlp INFIELD xmew008
            #add-point:ON ACTION controlp INFIELD xmew008
            {<point name="input.c.page1.xmew008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmew009
         ON ACTION controlp INFIELD xmew009
            #add-point:ON ACTION controlp INFIELD xmew009
            {<point name="input.c.page1.xmew009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmew010
         ON ACTION controlp INFIELD xmew010
            #add-point:ON ACTION controlp INFIELD xmew010
            {<point name="input.c.page1.xmew010" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmew011
         ON ACTION controlp INFIELD xmew011
            #add-point:ON ACTION controlp INFIELD xmew011
            {<point name="input.c.page1.xmew011" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmew012
         ON ACTION controlp INFIELD xmew012
            #add-point:ON ACTION controlp INFIELD xmew012
            {<point name="input.c.page1.xmew012" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmew013
         ON ACTION controlp INFIELD xmew013
            #add-point:ON ACTION controlp INFIELD xmew013
            {<point name="input.c.page1.xmew013" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmew014
         ON ACTION controlp INFIELD xmew014
            #add-point:ON ACTION controlp INFIELD xmew014
            {<point name="input.c.page1.xmew014" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmew015
         ON ACTION controlp INFIELD xmew015
            #add-point:ON ACTION controlp INFIELD xmew015
            {<point name="input.c.page1.xmew015" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmew016
         ON ACTION controlp INFIELD xmew016
            #add-point:ON ACTION controlp INFIELD xmew016
            {<point name="input.c.page1.xmew016" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_xmew_d[l_ac].* = g_xmew_d_t.*
               CLOSE axmt400_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_xmew_d[l_ac].xmewseq,-263,1)
               LET g_xmew_d[l_ac].* = g_xmew_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE xmew_t SET (xmewdocno,xmewsite,xmewseq,xmew001,xmew002,xmew003,xmew004,xmew005, 
                   xmew006,xmew007,xmew008,xmew009,xmew010,xmew011,xmew012,xmew013,xmew014,xmew015,xmew016) = (g_xmev_m.xmevdocno, 
                   g_xmew_d[l_ac].xmewsite,g_xmew_d[l_ac].xmewseq,g_xmew_d[l_ac].xmew001,g_xmew_d[l_ac].xmew002, 
                   g_xmew_d[l_ac].xmew003,g_xmew_d[l_ac].xmew004,g_xmew_d[l_ac].xmew005,g_xmew_d[l_ac].xmew006, 
                   g_xmew_d[l_ac].xmew007,g_xmew_d[l_ac].xmew008,g_xmew_d[l_ac].xmew009,g_xmew_d[l_ac].xmew010, 
                   g_xmew_d[l_ac].xmew011,g_xmew_d[l_ac].xmew012,g_xmew_d[l_ac].xmew013,g_xmew_d[l_ac].xmew014, 
                   g_xmew_d[l_ac].xmew015,g_xmew_d[l_ac].xmew016)
                WHERE xmewent = g_enterprise AND xmewdocno = g_xmev_m.xmevdocno 
 
                  AND xmewseq = g_xmew_d_t.xmewseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("xmew_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_xmew_d[l_ac].* = g_xmew_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("xmew_t",SQLCA.sqlcode,1)
                     LET g_xmew_d[l_ac].* = g_xmew_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmev_m.xmevdocno
               LET gs_keys_bak[1] = g_xmevdocno_t
               LET gs_keys[2] = g_xmew_d[g_detail_idx].xmewseq
               LET gs_keys_bak[2] = g_xmew_d_t.xmewseq
               CALL axmt400_update_b('xmew_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
			   #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_xmev_m),util.JSON.stringify(g_xmew_d_t)
               LET g_log2 = util.JSON.stringify(g_xmev_m),util.JSON.stringify(g_xmew_d[l_ac])
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL axmt400_unlock_b("xmew_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_xmew_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_xmew_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_xmew2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xmew2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axmt400_b_fill()
            LET g_rec_b = g_xmew2_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmew2_d[l_ac].* TO NULL 
            INITIALIZE g_xmew2_d_t.* TO NULL 
            INITIALIZE g_xmew2_d_o.* TO NULL 
                  LET g_xmew2_d[l_ac].xmex007 = "0"
      LET g_xmew2_d[l_ac].xmex008 = "0"
      LET g_xmew2_d[l_ac].xmex009 = "1"
      LET g_xmew2_d[l_ac].xmex010 = "0"
      LET g_xmew2_d[l_ac].xmex011 = "0"
      LET g_xmew2_d[l_ac].xmex012 = "0"
      LET g_xmew2_d[l_ac].xmex013 = "0"
 
            LET g_xmew2_d_t.* = g_xmew2_d[l_ac].*     #新輸入資料
            LET g_xmew2_d_o.* = g_xmew2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axmt400_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL axmt400_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmew2_d[li_reproduce_target].* = g_xmew2_d[li_reproduce].*
 
               LET g_xmew2_d[li_reproduce_target].xmexseq = NULL
            END IF
            #公用欄位給值(單身2)
            
            
            #add-point:modify段before insert
            {<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN axmt400_cl USING g_enterprise,g_xmev_m.xmevdocno
            IF STATUS THEN
               CALL cl_err("OPEN axmt400_cl:", STATUS, 1)
               CLOSE axmt400_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_xmew2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xmew2_d[l_ac].xmexseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_xmew2_d_t.* = g_xmew2_d[l_ac].*  #BACKUP
               LET g_xmew2_d_o.* = g_xmew2_d[l_ac].*  #BACKUP
               CALL axmt400_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL axmt400_set_no_entry_b(l_cmd)
               IF NOT axmt400_lock_b("xmex_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axmt400_bcl2 INTO g_xmew2_d[l_ac].xmexsite,g_xmew2_d[l_ac].xmexseq,g_xmew2_d[l_ac].xmex001, 
                      g_xmew2_d[l_ac].xmex002,g_xmew2_d[l_ac].xmex003,g_xmew2_d[l_ac].xmex004,g_xmew2_d[l_ac].xmex005, 
                      g_xmew2_d[l_ac].xmex006,g_xmew2_d[l_ac].xmex007,g_xmew2_d[l_ac].xmex008,g_xmew2_d[l_ac].xmex009, 
                      g_xmew2_d[l_ac].xmex010,g_xmew2_d[l_ac].xmex011,g_xmew2_d[l_ac].xmex012,g_xmew2_d[l_ac].xmex013, 
                      g_xmew2_d[l_ac].xmex014
                  IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL axmt400_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_xmew2_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_xmew2_d.deleteElement(l_ac)
               NEXT FIELD xmexseq
            END IF
         
            IF g_xmew2_d[l_ac].xmexseq IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM xmex_t
                WHERE xmexent = g_enterprise AND xmexdocno = g_xmev_m.xmevdocno AND
                      xmexseq = g_xmew2_d_t.xmexseq
                  
               #add-point:單身2刪除中
               {<point name="input.body2.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("xmew_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身2刪除後
                  {<point name="input.body2.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE axmt400_bcl
               LET l_count = g_xmew_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmev_m.xmevdocno
               LET gs_keys[2] = g_xmew2_d[g_detail_idx].xmexseq
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body2.after_delete"/>}
            #end add-point
                           CALL axmt400_delete_b('xmex_t',gs_keys,"'2'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM xmex_t 
             WHERE xmexent = g_enterprise AND xmexdocno = g_xmev_m.xmevdocno
               AND xmexseq = g_xmew2_d[l_ac].xmexseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmev_m.xmevdocno
               LET gs_keys[2] = g_xmew2_d[g_detail_idx].xmexseq
               CALL axmt400_insert_b('xmex_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_xmew_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("xmex_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axmt400_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_xmew2_d[l_ac].* = g_xmew2_d_t.*
               CLOSE axmt400_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_xmew2_d[l_ac].* = g_xmew2_d_t.*
            ELSE
               #add-point:單身page2修改前
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               UPDATE xmex_t SET (xmexdocno,xmexsite,xmexseq,xmex001,xmex002,xmex003,xmex004,xmex005, 
                   xmex006,xmex007,xmex008,xmex009,xmex010,xmex011,xmex012,xmex013,xmex014) = (g_xmev_m.xmevdocno, 
                   g_xmew2_d[l_ac].xmexsite,g_xmew2_d[l_ac].xmexseq,g_xmew2_d[l_ac].xmex001,g_xmew2_d[l_ac].xmex002, 
                   g_xmew2_d[l_ac].xmex003,g_xmew2_d[l_ac].xmex004,g_xmew2_d[l_ac].xmex005,g_xmew2_d[l_ac].xmex006, 
                   g_xmew2_d[l_ac].xmex007,g_xmew2_d[l_ac].xmex008,g_xmew2_d[l_ac].xmex009,g_xmew2_d[l_ac].xmex010, 
                   g_xmew2_d[l_ac].xmex011,g_xmew2_d[l_ac].xmex012,g_xmew2_d[l_ac].xmex013,g_xmew2_d[l_ac].xmex014)  
                   #自訂欄位頁簽
                WHERE xmexent = g_enterprise AND xmexdocno = g_xmev_m.xmevdocno
                  AND xmexseq = g_xmew2_d_t.xmexseq #項次 
                  
               #add-point:單身page2修改中
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("xmex_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_xmew2_d[l_ac].* = g_xmew2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("xmex_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_xmew2_d[l_ac].* = g_xmew2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmev_m.xmevdocno
               LET gs_keys_bak[1] = g_xmevdocno_t
               LET gs_keys[2] = g_xmew2_d[g_detail_idx].xmexseq
               LET gs_keys_bak[2] = g_xmew2_d_t.xmexseq
               CALL axmt400_update_b('xmex_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
			   
               #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_xmev_m),util.JSON.stringify(g_xmew2_d_t)
               LET g_log2 = util.JSON.stringify(g_xmev_m),util.JSON.stringify(g_xmew2_d[l_ac])
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #此段落由子樣板a01產生
         BEFORE FIELD xmexsite
            #add-point:BEFORE FIELD xmexsite
            {<point name="input.b.page2.xmexsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmexsite
            
            #add-point:AFTER FIELD xmexsite
            {<point name="input.a.page2.xmexsite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmexsite
            #add-point:ON CHANGE xmexsite
            {<point name="input.g.page2.xmexsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmexseq
            #add-point:BEFORE FIELD xmexseq
            {<point name="input.b.page2.xmexseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmexseq
            
            #add-point:AFTER FIELD xmexseq
            {<point name="input.a.page2.xmexseq" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmexseq
            #add-point:ON CHANGE xmexseq
            {<point name="input.g.page2.xmexseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmex001
            
            #add-point:AFTER FIELD xmex001
            {<point name="input.a.page2.xmex001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmex001
            #add-point:BEFORE FIELD xmex001
            {<point name="input.b.page2.xmex001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmex001
            #add-point:ON CHANGE xmex001
            {<point name="input.g.page2.xmex001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmex002
            
            #add-point:AFTER FIELD xmex002
            {<point name="input.a.page2.xmex002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmex002
            #add-point:BEFORE FIELD xmex002
            {<point name="input.b.page2.xmex002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmex002
            #add-point:ON CHANGE xmex002
            {<point name="input.g.page2.xmex002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmex003
            #add-point:BEFORE FIELD xmex003
            {<point name="input.b.page2.xmex003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmex003
            
            #add-point:AFTER FIELD xmex003
            {<point name="input.a.page2.xmex003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmex003
            #add-point:ON CHANGE xmex003
            {<point name="input.g.page2.xmex003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmex004
            
            #add-point:AFTER FIELD xmex004
            {<point name="input.a.page2.xmex004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmex004
            #add-point:BEFORE FIELD xmex004
            {<point name="input.b.page2.xmex004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmex004
            #add-point:ON CHANGE xmex004
            {<point name="input.g.page2.xmex004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmex005
            #add-point:BEFORE FIELD xmex005
            {<point name="input.b.page2.xmex005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmex005
            
            #add-point:AFTER FIELD xmex005
            {<point name="input.a.page2.xmex005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmex005
            #add-point:ON CHANGE xmex005
            {<point name="input.g.page2.xmex005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmex006
            
            #add-point:AFTER FIELD xmex006
            {<point name="input.a.page2.xmex006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmex006
            #add-point:BEFORE FIELD xmex006
            {<point name="input.b.page2.xmex006" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmex006
            #add-point:ON CHANGE xmex006
            {<point name="input.g.page2.xmex006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmex007
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_xmew2_d[l_ac].xmex007,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD xmex007
            END IF
 
 
            #add-point:AFTER FIELD xmex007
            {<point name="input.a.page2.xmex007" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmex007
            #add-point:BEFORE FIELD xmex007
            {<point name="input.b.page2.xmex007" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmex007
            #add-point:ON CHANGE xmex007
            {<point name="input.g.page2.xmex007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmex008
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_xmew2_d[l_ac].xmex008,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD xmex008
            END IF
 
 
            #add-point:AFTER FIELD xmex008
            {<point name="input.a.page2.xmex008" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmex008
            #add-point:BEFORE FIELD xmex008
            {<point name="input.b.page2.xmex008" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmex008
            #add-point:ON CHANGE xmex008
            {<point name="input.g.page2.xmex008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmex009
            #add-point:BEFORE FIELD xmex009
            {<point name="input.b.page2.xmex009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmex009
            
            #add-point:AFTER FIELD xmex009
            {<point name="input.a.page2.xmex009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmex009
            #add-point:ON CHANGE xmex009
            {<point name="input.g.page2.xmex009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmex010
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_xmew2_d[l_ac].xmex010,"0.000","1","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD xmex010
            END IF
 
 
            #add-point:AFTER FIELD xmex010
            {<point name="input.a.page2.xmex010" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmex010
            #add-point:BEFORE FIELD xmex010
            {<point name="input.b.page2.xmex010" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmex010
            #add-point:ON CHANGE xmex010
            {<point name="input.g.page2.xmex010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmex011
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_xmew2_d[l_ac].xmex011,"0.000","1","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD xmex011
            END IF
 
 
            #add-point:AFTER FIELD xmex011
            {<point name="input.a.page2.xmex011" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmex011
            #add-point:BEFORE FIELD xmex011
            {<point name="input.b.page2.xmex011" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmex011
            #add-point:ON CHANGE xmex011
            {<point name="input.g.page2.xmex011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmex012
            #add-point:BEFORE FIELD xmex012
            {<point name="input.b.page2.xmex012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmex012
            
            #add-point:AFTER FIELD xmex012
            {<point name="input.a.page2.xmex012" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmex012
            #add-point:ON CHANGE xmex012
            {<point name="input.g.page2.xmex012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmex013
            #add-point:BEFORE FIELD xmex013
            {<point name="input.b.page2.xmex013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmex013
            
            #add-point:AFTER FIELD xmex013
            {<point name="input.a.page2.xmex013" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmex013
            #add-point:ON CHANGE xmex013
            {<point name="input.g.page2.xmex013" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmex014
            #add-point:BEFORE FIELD xmex014
            {<point name="input.b.page2.xmex014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmex014
            
            #add-point:AFTER FIELD xmex014
            {<point name="input.a.page2.xmex014" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmex014
            #add-point:ON CHANGE xmex014
            {<point name="input.g.page2.xmex014" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page2.xmexsite
         ON ACTION controlp INFIELD xmexsite
            #add-point:ON ACTION controlp INFIELD xmexsite
            {<point name="input.c.page2.xmexsite" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmexseq
         ON ACTION controlp INFIELD xmexseq
            #add-point:ON ACTION controlp INFIELD xmexseq
            {<point name="input.c.page2.xmexseq" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmex001
         ON ACTION controlp INFIELD xmex001
            #add-point:ON ACTION controlp INFIELD xmex001
            {<point name="input.c.page2.xmex001" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmex002
         ON ACTION controlp INFIELD xmex002
            #add-point:ON ACTION controlp INFIELD xmex002
            {<point name="input.c.page2.xmex002" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmex003
         ON ACTION controlp INFIELD xmex003
            #add-point:ON ACTION controlp INFIELD xmex003
            {<point name="input.c.page2.xmex003" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmex004
         ON ACTION controlp INFIELD xmex004
            #add-point:ON ACTION controlp INFIELD xmex004
            {<point name="input.c.page2.xmex004" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmex005
         ON ACTION controlp INFIELD xmex005
            #add-point:ON ACTION controlp INFIELD xmex005
            {<point name="input.c.page2.xmex005" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmex006
         ON ACTION controlp INFIELD xmex006
            #add-point:ON ACTION controlp INFIELD xmex006
            {<point name="input.c.page2.xmex006" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmex007
         ON ACTION controlp INFIELD xmex007
            #add-point:ON ACTION controlp INFIELD xmex007
            {<point name="input.c.page2.xmex007" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmex008
         ON ACTION controlp INFIELD xmex008
            #add-point:ON ACTION controlp INFIELD xmex008
            {<point name="input.c.page2.xmex008" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmex009
         ON ACTION controlp INFIELD xmex009
            #add-point:ON ACTION controlp INFIELD xmex009
            {<point name="input.c.page2.xmex009" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmex010
         ON ACTION controlp INFIELD xmex010
            #add-point:ON ACTION controlp INFIELD xmex010
            {<point name="input.c.page2.xmex010" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmex011
         ON ACTION controlp INFIELD xmex011
            #add-point:ON ACTION controlp INFIELD xmex011
            {<point name="input.c.page2.xmex011" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmex012
         ON ACTION controlp INFIELD xmex012
            #add-point:ON ACTION controlp INFIELD xmex012
            {<point name="input.c.page2.xmex012" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmex013
         ON ACTION controlp INFIELD xmex013
            #add-point:ON ACTION controlp INFIELD xmex013
            {<point name="input.c.page2.xmex013" />}
            #END add-point
 
         #Ctrlp:input.c.page2.xmex014
         ON ACTION controlp INFIELD xmex014
            #add-point:ON ACTION controlp INFIELD xmex014
            {<point name="input.c.page2.xmex014" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_xmew2_d[l_ac].* = g_xmew2_d_t.*
               END IF
               CLOSE axmt400_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL axmt400_unlock_b("xmex_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body2.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_xmew2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_xmew2_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_xmew3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_3)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xmew3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axmt400_b_fill()
            LET g_rec_b = g_xmew3_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body3.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmew3_d[l_ac].* TO NULL 
            INITIALIZE g_xmew3_d_t.* TO NULL 
            INITIALIZE g_xmew3_d_o.* TO NULL 
                  LET g_xmew3_d[l_ac].xmey001 = "1"
      LET g_xmew3_d[l_ac].xmey003 = "0"
 
            LET g_xmew3_d_t.* = g_xmew3_d[l_ac].*     #新輸入資料
            LET g_xmew3_d_o.* = g_xmew3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axmt400_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body3.insert.after_set_entry_b"/>}
            #end add-point
            CALL axmt400_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmew3_d[li_reproduce_target].* = g_xmew3_d[li_reproduce].*
 
               LET g_xmew3_d[li_reproduce_target].xmeyseq = NULL
            END IF
            #公用欄位給值(單身3)
            
            
            #add-point:modify段before insert
            {<point name="input.body3.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body3.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN axmt400_cl USING g_enterprise,g_xmev_m.xmevdocno
            IF STATUS THEN
               CALL cl_err("OPEN axmt400_cl:", STATUS, 1)
               CLOSE axmt400_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_xmew3_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xmew3_d[l_ac].xmeyseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_xmew3_d_t.* = g_xmew3_d[l_ac].*  #BACKUP
               LET g_xmew3_d_o.* = g_xmew3_d[l_ac].*  #BACKUP
               CALL axmt400_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body3.after_set_entry_b"/>}
               #end add-point  
               CALL axmt400_set_no_entry_b(l_cmd)
               IF NOT axmt400_lock_b("xmey_t","'3'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axmt400_bcl3 INTO g_xmew3_d[l_ac].xmeysite,g_xmew3_d[l_ac].xmeyseq,g_xmew3_d[l_ac].xmey001, 
                      g_xmew3_d[l_ac].xmey002,g_xmew3_d[l_ac].xmey003
                  IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL axmt400_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body3.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_xmew3_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_xmew3_d.deleteElement(l_ac)
               NEXT FIELD xmeyseq
            END IF
         
            IF g_xmew3_d[l_ac].xmeyseq IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身3刪除前
               {<point name="input.body3.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM xmey_t
                WHERE xmeyent = g_enterprise AND xmeydocno = g_xmev_m.xmevdocno AND
                      xmeyseq = g_xmew3_d_t.xmeyseq
                  
               #add-point:單身3刪除中
               {<point name="input.body3.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("xmew_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身3刪除後
                  {<point name="input.body3.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE axmt400_bcl
               LET l_count = g_xmew_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmev_m.xmevdocno
               LET gs_keys[2] = g_xmew3_d[g_detail_idx].xmeyseq
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body3.after_delete"/>}
            #end add-point
                           CALL axmt400_delete_b('xmey_t',gs_keys,"'3'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身3新增前
            {<point name="input.body3.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM xmey_t 
             WHERE xmeyent = g_enterprise AND xmeydocno = g_xmev_m.xmevdocno
               AND xmeyseq = g_xmew3_d[l_ac].xmeyseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身3新增前
               {<point name="input.body3.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmev_m.xmevdocno
               LET gs_keys[2] = g_xmew3_d[g_detail_idx].xmeyseq
               CALL axmt400_insert_b('xmey_t',gs_keys,"'3'")
                           
               #add-point:單身新增後3
               {<point name="input.body3.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_xmew_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("xmey_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axmt400_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body3.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_xmew3_d[l_ac].* = g_xmew3_d_t.*
               CLOSE axmt400_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_xmew3_d[l_ac].* = g_xmew3_d_t.*
            ELSE
               #add-point:單身page3修改前
               {<point name="input.body3.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身3)
               
               
               UPDATE xmey_t SET (xmeydocno,xmeysite,xmeyseq,xmey001,xmey002,xmey003) = (g_xmev_m.xmevdocno, 
                   g_xmew3_d[l_ac].xmeysite,g_xmew3_d[l_ac].xmeyseq,g_xmew3_d[l_ac].xmey001,g_xmew3_d[l_ac].xmey002, 
                   g_xmew3_d[l_ac].xmey003) #自訂欄位頁簽
                WHERE xmeyent = g_enterprise AND xmeydocno = g_xmev_m.xmevdocno
                  AND xmeyseq = g_xmew3_d_t.xmeyseq #項次 
                  
               #add-point:單身page3修改中
               {<point name="input.body3.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("xmey_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_xmew3_d[l_ac].* = g_xmew3_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("xmey_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_xmew3_d[l_ac].* = g_xmew3_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmev_m.xmevdocno
               LET gs_keys_bak[1] = g_xmevdocno_t
               LET gs_keys[2] = g_xmew3_d[g_detail_idx].xmeyseq
               LET gs_keys_bak[2] = g_xmew3_d_t.xmeyseq
               CALL axmt400_update_b('xmey_t',gs_keys,gs_keys_bak,"'3'")
                     #資料多語言用-增/改
                     
               END CASE
			   
               #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_xmev_m),util.JSON.stringify(g_xmew3_d_t)
               LET g_log2 = util.JSON.stringify(g_xmev_m),util.JSON.stringify(g_xmew3_d[l_ac])
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page3修改後
               {<point name="input.body3.a_update"/>}
               #end add-point
            END IF
         
                  #此段落由子樣板a01產生
         BEFORE FIELD xmeysite
            #add-point:BEFORE FIELD xmeysite
            {<point name="input.b.page3.xmeysite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmeysite
            
            #add-point:AFTER FIELD xmeysite
            {<point name="input.a.page3.xmeysite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmeysite
            #add-point:ON CHANGE xmeysite
            {<point name="input.g.page3.xmeysite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmeyseq
            #add-point:BEFORE FIELD xmeyseq
            {<point name="input.b.page3.xmeyseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmeyseq
            
            #add-point:AFTER FIELD xmeyseq
            {<point name="input.a.page3.xmeyseq" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmeyseq
            #add-point:ON CHANGE xmeyseq
            {<point name="input.g.page3.xmeyseq" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmey001
            #add-point:BEFORE FIELD xmey001
            {<point name="input.b.page3.xmey001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmey001
            
            #add-point:AFTER FIELD xmey001
            {<point name="input.a.page3.xmey001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmey001
            #add-point:ON CHANGE xmey001
            {<point name="input.g.page3.xmey001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmey002
            
            #add-point:AFTER FIELD xmey002
            {<point name="input.a.page3.xmey002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmey002
            #add-point:BEFORE FIELD xmey002
            {<point name="input.b.page3.xmey002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmey002
            #add-point:ON CHANGE xmey002
            {<point name="input.g.page3.xmey002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmey003
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_xmew3_d[l_ac].xmey003,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD xmey003
            END IF
 
 
            #add-point:AFTER FIELD xmey003
            {<point name="input.a.page3.xmey003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmey003
            #add-point:BEFORE FIELD xmey003
            {<point name="input.b.page3.xmey003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmey003
            #add-point:ON CHANGE xmey003
            {<point name="input.g.page3.xmey003" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page3.xmeysite
         ON ACTION controlp INFIELD xmeysite
            #add-point:ON ACTION controlp INFIELD xmeysite
            {<point name="input.c.page3.xmeysite" />}
            #END add-point
 
         #Ctrlp:input.c.page3.xmeyseq
         ON ACTION controlp INFIELD xmeyseq
            #add-point:ON ACTION controlp INFIELD xmeyseq
            {<point name="input.c.page3.xmeyseq" />}
            #END add-point
 
         #Ctrlp:input.c.page3.xmey001
         ON ACTION controlp INFIELD xmey001
            #add-point:ON ACTION controlp INFIELD xmey001
            {<point name="input.c.page3.xmey001" />}
            #END add-point
 
         #Ctrlp:input.c.page3.xmey002
         ON ACTION controlp INFIELD xmey002
            #add-point:ON ACTION controlp INFIELD xmey002
            {<point name="input.c.page3.xmey002" />}
            #END add-point
 
         #Ctrlp:input.c.page3.xmey003
         ON ACTION controlp INFIELD xmey003
            #add-point:ON ACTION controlp INFIELD xmey003
            {<point name="input.c.page3.xmey003" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page3 after_row
            {<point name="input.body3.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_xmew3_d[l_ac].* = g_xmew3_d_t.*
               END IF
               CLOSE axmt400_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL axmt400_unlock_b("xmey_t","'3'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page3 after_row2
            {<point name="input.body3.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body3.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_xmew3_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_xmew3_d.getLength()+1
 
      END INPUT
 
      
 
      
 
      
 
      
]]>
  </section>
  <section id="axmt400.input.head" ver="3" status="" src="s">
    <![CDATA[      #單頭段
      INPUT BY NAME g_xmev_m.xmevdocno,g_xmev_m.xmevdocdt,g_xmev_m.xmevsite,g_xmev_m.xmev001,g_xmev_m.xmev002, 
          g_xmev_m.xmevstus,g_xmev_m.xmev003,g_xmev_m.xmev004,g_xmev_m.xmev019,g_xmev_m.xmev005,g_xmev_m.xmev006, 
          g_xmev_m.xmev007,g_xmev_m.xmev008,g_xmev_m.xmev009,g_xmev_m.xmev010,g_xmev_m.xmev011,g_xmev_m.xmev012, 
          g_xmev_m.xmev013 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a02產生
         AFTER FIELD xmevdocno
            
            #add-point:AFTER FIELD xmevdocno
            {<point name="input.a.xmevdocno" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmevdocno
            #add-point:BEFORE FIELD xmevdocno
            {<point name="input.b.xmevdocno" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmevdocno
            #add-point:ON CHANGE xmevdocno
            {<point name="input.g.xmevdocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmevdocdt
            #add-point:BEFORE FIELD xmevdocdt
            {<point name="input.b.xmevdocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmevdocdt
            
            #add-point:AFTER FIELD xmevdocdt
            {<point name="input.a.xmevdocdt" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmevdocdt
            #add-point:ON CHANGE xmevdocdt
            {<point name="input.g.xmevdocdt" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmevsite
            #add-point:BEFORE FIELD xmevsite
            {<point name="input.b.xmevsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmevsite
            
            #add-point:AFTER FIELD xmevsite
            {<point name="input.a.xmevsite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmevsite
            #add-point:ON CHANGE xmevsite
            {<point name="input.g.xmevsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmev001
            
            #add-point:AFTER FIELD xmev001
            {<point name="input.a.xmev001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmev001
            #add-point:BEFORE FIELD xmev001
            {<point name="input.b.xmev001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmev001
            #add-point:ON CHANGE xmev001
            {<point name="input.g.xmev001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmev002
            
            #add-point:AFTER FIELD xmev002
            {<point name="input.a.xmev002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmev002
            #add-point:BEFORE FIELD xmev002
            {<point name="input.b.xmev002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmev002
            #add-point:ON CHANGE xmev002
            {<point name="input.g.xmev002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmevstus
            #add-point:BEFORE FIELD xmevstus
            {<point name="input.b.xmevstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmevstus
            
            #add-point:AFTER FIELD xmevstus
            {<point name="input.a.xmevstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmevstus
            #add-point:ON CHANGE xmevstus
            {<point name="input.g.xmevstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmev003
            
            #add-point:AFTER FIELD xmev003
            {<point name="input.a.xmev003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmev003
            #add-point:BEFORE FIELD xmev003
            {<point name="input.b.xmev003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmev003
            #add-point:ON CHANGE xmev003
            {<point name="input.g.xmev003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmev004
            
            #add-point:AFTER FIELD xmev004
            {<point name="input.a.xmev004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmev004
            #add-point:BEFORE FIELD xmev004
            {<point name="input.b.xmev004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmev004
            #add-point:ON CHANGE xmev004
            {<point name="input.g.xmev004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmev019
            #add-point:BEFORE FIELD xmev019
            {<point name="input.b.xmev019" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmev019
            
            #add-point:AFTER FIELD xmev019
            {<point name="input.a.xmev019" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmev019
            #add-point:ON CHANGE xmev019
            {<point name="input.g.xmev019" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmev005
            #add-point:BEFORE FIELD xmev005
            {<point name="input.b.xmev005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmev005
            
            #add-point:AFTER FIELD xmev005
            {<point name="input.a.xmev005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmev005
            #add-point:ON CHANGE xmev005
            {<point name="input.g.xmev005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmev006
            
            #add-point:AFTER FIELD xmev006
            {<point name="input.a.xmev006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmev006
            #add-point:BEFORE FIELD xmev006
            {<point name="input.b.xmev006" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmev006
            #add-point:ON CHANGE xmev006
            {<point name="input.g.xmev006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmev007
            #add-point:BEFORE FIELD xmev007
            {<point name="input.b.xmev007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmev007
            
            #add-point:AFTER FIELD xmev007
            {<point name="input.a.xmev007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmev007
            #add-point:ON CHANGE xmev007
            {<point name="input.g.xmev007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmev008
            
            #add-point:AFTER FIELD xmev008
            {<point name="input.a.xmev008" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmev008
            #add-point:BEFORE FIELD xmev008
            {<point name="input.b.xmev008" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmev008
            #add-point:ON CHANGE xmev008
            {<point name="input.g.xmev008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmev009
            #add-point:BEFORE FIELD xmev009
            {<point name="input.b.xmev009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmev009
            
            #add-point:AFTER FIELD xmev009
            {<point name="input.a.xmev009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmev009
            #add-point:ON CHANGE xmev009
            {<point name="input.g.xmev009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmev010
            #add-point:BEFORE FIELD xmev010
            {<point name="input.b.xmev010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmev010
            
            #add-point:AFTER FIELD xmev010
            {<point name="input.a.xmev010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmev010
            #add-point:ON CHANGE xmev010
            {<point name="input.g.xmev010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmev011
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_xmev_m.xmev011,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD xmev011
            END IF
 
 
            #add-point:AFTER FIELD xmev011
            {<point name="input.a.xmev011" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmev011
            #add-point:BEFORE FIELD xmev011
            {<point name="input.b.xmev011" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmev011
            #add-point:ON CHANGE xmev011
            {<point name="input.g.xmev011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmev012
            
            #add-point:AFTER FIELD xmev012
            {<point name="input.a.xmev012" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmev012
            #add-point:BEFORE FIELD xmev012
            {<point name="input.b.xmev012" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xmev012
            #add-point:ON CHANGE xmev012
            {<point name="input.g.xmev012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xmev013
            #add-point:BEFORE FIELD xmev013
            {<point name="input.b.xmev013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xmev013
            
            #add-point:AFTER FIELD xmev013
            {<point name="input.a.xmev013" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xmev013
            #add-point:ON CHANGE xmev013
            {<point name="input.g.xmev013" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.xmevdocno
         ON ACTION controlp INFIELD xmevdocno
            #add-point:ON ACTION controlp INFIELD xmevdocno
            {<point name="input.c.xmevdocno" />}
            #END add-point
 
         #Ctrlp:input.c.xmevdocdt
         ON ACTION controlp INFIELD xmevdocdt
            #add-point:ON ACTION controlp INFIELD xmevdocdt
            {<point name="input.c.xmevdocdt" />}
            #END add-point
 
         #Ctrlp:input.c.xmevsite
         ON ACTION controlp INFIELD xmevsite
            #add-point:ON ACTION controlp INFIELD xmevsite
            {<point name="input.c.xmevsite" />}
            #END add-point
 
         #Ctrlp:input.c.xmev001
         ON ACTION controlp INFIELD xmev001
            #add-point:ON ACTION controlp INFIELD xmev001
            {<point name="input.c.xmev001" />}
            #END add-point
 
         #Ctrlp:input.c.xmev002
         ON ACTION controlp INFIELD xmev002
            #add-point:ON ACTION controlp INFIELD xmev002
            {<point name="input.c.xmev002" />}
            #END add-point
 
         #Ctrlp:input.c.xmevstus
         ON ACTION controlp INFIELD xmevstus
            #add-point:ON ACTION controlp INFIELD xmevstus
            {<point name="input.c.xmevstus" />}
            #END add-point
 
         #Ctrlp:input.c.xmev003
         ON ACTION controlp INFIELD xmev003
            #add-point:ON ACTION controlp INFIELD xmev003
            {<point name="input.c.xmev003" />}
            #END add-point
 
         #Ctrlp:input.c.xmev004
         ON ACTION controlp INFIELD xmev004
            #add-point:ON ACTION controlp INFIELD xmev004
            {<point name="input.c.xmev004" />}
            #END add-point
 
         #Ctrlp:input.c.xmev019
         ON ACTION controlp INFIELD xmev019
            #add-point:ON ACTION controlp INFIELD xmev019
            {<point name="input.c.xmev019" />}
            #END add-point
 
         #Ctrlp:input.c.xmev005
         ON ACTION controlp INFIELD xmev005
            #add-point:ON ACTION controlp INFIELD xmev005
            {<point name="input.c.xmev005" />}
            #END add-point
 
         #Ctrlp:input.c.xmev006
         ON ACTION controlp INFIELD xmev006
            #add-point:ON ACTION controlp INFIELD xmev006
            {<point name="input.c.xmev006" />}
            #END add-point
 
         #Ctrlp:input.c.xmev007
         ON ACTION controlp INFIELD xmev007
            #add-point:ON ACTION controlp INFIELD xmev007
            {<point name="input.c.xmev007" />}
            #END add-point
 
         #Ctrlp:input.c.xmev008
         ON ACTION controlp INFIELD xmev008
            #add-point:ON ACTION controlp INFIELD xmev008
            {<point name="input.c.xmev008" />}
            #END add-point
 
         #Ctrlp:input.c.xmev009
         ON ACTION controlp INFIELD xmev009
            #add-point:ON ACTION controlp INFIELD xmev009
            {<point name="input.c.xmev009" />}
            #END add-point
 
         #Ctrlp:input.c.xmev010
         ON ACTION controlp INFIELD xmev010
            #add-point:ON ACTION controlp INFIELD xmev010
            {<point name="input.c.xmev010" />}
            #END add-point
 
         #Ctrlp:input.c.xmev011
         ON ACTION controlp INFIELD xmev011
            #add-point:ON ACTION controlp INFIELD xmev011
            {<point name="input.c.xmev011" />}
            #END add-point
 
         #Ctrlp:input.c.xmev012
         ON ACTION controlp INFIELD xmev012
            #add-point:ON ACTION controlp INFIELD xmev012
            {<point name="input.c.xmev012" />}
            #END add-point
 
         #Ctrlp:input.c.xmev013
         ON ACTION controlp INFIELD xmev013
            #add-point:ON ACTION controlp INFIELD xmev013
            {<point name="input.c.xmev013" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_xmev_m.xmevdocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO xmev_t (xmevent,xmevdocno,xmevdocdt,xmevsite,xmev001,xmev002,xmevstus,xmev003, 
                   xmev004,xmev019,xmev005,xmev006,xmev007,xmev008,xmev009,xmev010,xmev011,xmev012,xmev013, 
                   xmevownid,xmevowndp,xmevcrtid,xmevcrtdp,xmevcrtdt,xmevcnfid,xmevcnfdt,xmev014,xmev015, 
                   xmev016,xmev017,xmev018)
               VALUES (g_enterprise,g_xmev_m.xmevdocno,g_xmev_m.xmevdocdt,g_xmev_m.xmevsite,g_xmev_m.xmev001, 
                   g_xmev_m.xmev002,g_xmev_m.xmevstus,g_xmev_m.xmev003,g_xmev_m.xmev004,g_xmev_m.xmev019, 
                   g_xmev_m.xmev005,g_xmev_m.xmev006,g_xmev_m.xmev007,g_xmev_m.xmev008,g_xmev_m.xmev009, 
                   g_xmev_m.xmev010,g_xmev_m.xmev011,g_xmev_m.xmev012,g_xmev_m.xmev013,g_xmev_m.xmevownid, 
                   g_xmev_m.xmevowndp,g_xmev_m.xmevcrtid,g_xmev_m.xmevcrtdp,g_xmev_m.xmevcrtdt,g_xmev_m.xmevcnfid, 
                   g_xmev_m.xmevcnfdt,g_xmev_m.xmev014,g_xmev_m.xmev015,g_xmev_m.xmev016,g_xmev_m.xmev017, 
                   g_xmev_m.xmev018) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_xmev_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL axmt400_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE xmev_t SET (xmevdocno,xmevdocdt,xmevsite,xmev001,xmev002,xmevstus,xmev003,xmev004, 
                   xmev019,xmev005,xmev006,xmev007,xmev008,xmev009,xmev010,xmev011,xmev012,xmev013,xmevownid, 
                   xmevowndp,xmevcrtid,xmevcrtdp,xmevcrtdt,xmevcnfid,xmevcnfdt,xmev014,xmev015,xmev016, 
                   xmev017,xmev018) = (g_xmev_m.xmevdocno,g_xmev_m.xmevdocdt,g_xmev_m.xmevsite,g_xmev_m.xmev001, 
                   g_xmev_m.xmev002,g_xmev_m.xmevstus,g_xmev_m.xmev003,g_xmev_m.xmev004,g_xmev_m.xmev019, 
                   g_xmev_m.xmev005,g_xmev_m.xmev006,g_xmev_m.xmev007,g_xmev_m.xmev008,g_xmev_m.xmev009, 
                   g_xmev_m.xmev010,g_xmev_m.xmev011,g_xmev_m.xmev012,g_xmev_m.xmev013,g_xmev_m.xmevownid, 
                   g_xmev_m.xmevowndp,g_xmev_m.xmevcrtid,g_xmev_m.xmevcrtdp,g_xmev_m.xmevcrtdt,g_xmev_m.xmevcnfid, 
                   g_xmev_m.xmevcnfdt,g_xmev_m.xmev014,g_xmev_m.xmev015,g_xmev_m.xmev016,g_xmev_m.xmev017, 
                   g_xmev_m.xmev018)
                WHERE xmevent = g_enterprise AND xmevdocno = g_xmevdocno_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("xmev_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
			   #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_xmev_m_t)
               LET g_log2 = util.JSON.stringify(g_xmev_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_xmevdocno_t = g_xmev_m.xmevdocno
 
            #controlp
            
      END INPUT
   
]]>
  </section>
  <section id="axmt400.input.other" ver="1" status="" src="s">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD xmevdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xmewsite
               WHEN "s_detail2"
                  NEXT FIELD xmexsite
               WHEN "s_detail3"
                  NEXT FIELD xmeysite
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="axmt400.insert" ver="3" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION axmt400_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_xmew_d.clear()   
   CALL g_xmew2_d.clear()  
   CALL g_xmew3_d.clear()  
 
 
   INITIALIZE g_xmev_m.* LIKE xmev_t.*             #DEFAULT 設定
   
   LET g_xmevdocno_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_xmev_m.xmevownid = g_user
      LET g_xmev_m.xmevowndp = g_dept
      LET g_xmev_m.xmevcrtid = g_user
      LET g_xmev_m.xmevcrtdp = g_dept 
      LET g_xmev_m.xmevcrtdt = cl_get_current()
      LET g_xmev_m.xmevmodid = ""
      LET g_xmev_m.xmevmoddt = ""
      LET g_xmev_m.xmevstus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_xmev_m.xmev005 = "1"
      LET g_xmev_m.xmev010 = "N"
      LET g_xmev_m.xmev011 = "0"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL axmt400_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_xmev_m.* = g_xmev_m_t.*
         CALL axmt400_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_xmew_d.clear()
      CALL g_xmew2_d.clear()
      CALL g_xmew3_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #將新增的資料併入搜尋條件中
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_xmevdocno_t = g_xmev_m.xmevdocno
 
   
   LET g_wc = "(",g_wc,  
              " OR ( xmevent = '" ||g_enterprise|| "' AND",
              " xmevdocno = '", g_xmev_m.xmevdocno CLIPPED, "' "
 
              , ")) "
   
   CLOSE axmt400_cl
   
END FUNCTION
]]>
  </section>
  <section id="axmt400.insert_b" ver="2" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION axmt400_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO xmew_t
                  (xmewent,
                   xmewdocno,
                   xmewseq
                   ,xmewsite,xmew001,xmew002,xmew003,xmew004,xmew005,xmew006,xmew007,xmew008,xmew009,xmew010,xmew011,xmew012,xmew013,xmew014,xmew015,xmew016) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_xmew_d[g_detail_idx].xmewsite,g_xmew_d[g_detail_idx].xmew001,g_xmew_d[g_detail_idx].xmew002, 
                       g_xmew_d[g_detail_idx].xmew003,g_xmew_d[g_detail_idx].xmew004,g_xmew_d[g_detail_idx].xmew005, 
                       g_xmew_d[g_detail_idx].xmew006,g_xmew_d[g_detail_idx].xmew007,g_xmew_d[g_detail_idx].xmew008, 
                       g_xmew_d[g_detail_idx].xmew009,g_xmew_d[g_detail_idx].xmew010,g_xmew_d[g_detail_idx].xmew011, 
                       g_xmew_d[g_detail_idx].xmew012,g_xmew_d[g_detail_idx].xmew013,g_xmew_d[g_detail_idx].xmew014, 
                       g_xmew_d[g_detail_idx].xmew015,g_xmew_d[g_detail_idx].xmew016)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("xmew_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO xmex_t
                  (xmexent,
                   xmexdocno,
                   xmexseq
                   ,xmexsite,xmex001,xmex002,xmex003,xmex004,xmex005,xmex006,xmex007,xmex008,xmex009,xmex010,xmex011,xmex012,xmex013,xmex014) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_xmew2_d[g_detail_idx].xmexsite,g_xmew2_d[g_detail_idx].xmex001,g_xmew2_d[g_detail_idx].xmex002, 
                       g_xmew2_d[g_detail_idx].xmex003,g_xmew2_d[g_detail_idx].xmex004,g_xmew2_d[g_detail_idx].xmex005, 
                       g_xmew2_d[g_detail_idx].xmex006,g_xmew2_d[g_detail_idx].xmex007,g_xmew2_d[g_detail_idx].xmex008, 
                       g_xmew2_d[g_detail_idx].xmex009,g_xmew2_d[g_detail_idx].xmex010,g_xmew2_d[g_detail_idx].xmex011, 
                       g_xmew2_d[g_detail_idx].xmex012,g_xmew2_d[g_detail_idx].xmex013,g_xmew2_d[g_detail_idx].xmex014) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("xmex_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert3" mark="Y"/>}
      #end add-point 
      INSERT INTO xmey_t
                  (xmeyent,
                   xmeydocno,
                   xmeyseq
                   ,xmeysite,xmey001,xmey002,xmey003) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_xmew3_d[g_detail_idx].xmeysite,g_xmew3_d[g_detail_idx].xmey001,g_xmew3_d[g_detail_idx].xmey002, 
                       g_xmew3_d[g_detail_idx].xmey003)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("xmey_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert3"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="axmt400.lock_b" ver="2" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION axmt400_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL axmt400_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "xmew_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN axmt400_bcl USING g_enterprise,
                                       g_xmev_m.xmevdocno,g_xmew_d[g_detail_idx].xmewseq     
      IF SQLCA.sqlcode THEN
         CALL cl_err("axmt400_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "xmex_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN axmt400_bcl2 USING g_enterprise,
                                             g_xmev_m.xmevdocno,g_xmew2_d[g_detail_idx].xmexseq
      IF SQLCA.sqlcode THEN
         CALL cl_err("axmt400_bcl2",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "xmey_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN axmt400_bcl3 USING g_enterprise,
                                             g_xmev_m.xmevdocno,g_xmew3_d[g_detail_idx].xmeyseq
      IF SQLCA.sqlcode THEN
         CALL cl_err("axmt400_bcl3",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="axmt400.main" ver="3" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axm","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT xmevdocno,'',xmevdocdt,xmevsite,xmev001,'',xmev002,'',xmevstus,xmev003, 
       '',xmev004,'',xmev019,xmev005,xmev006,'',xmev007,xmev008,'',xmev009,xmev010,xmev011,xmev012,'', 
       xmev013,xmevownid,'',xmevowndp,'',xmevcrtid,'',xmevcrtdp,'',xmevcrtdt,xmevmodid,'',xmevmoddt, 
       xmevcnfid,'',xmevcnfdt,xmev014,xmev015,xmev016,xmev017,xmev018", 
                      " FROM xmev_t",
                      " WHERE xmevent= ? AND xmevdocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt400_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE xmevdocno,xmevdocdt,xmevsite,xmev001,xmev002,xmevstus,xmev003,xmev004, 
       xmev019,xmev005,xmev006,xmev007,xmev008,xmev009,xmev010,xmev011,xmev012,xmev013,xmevownid,xmevowndp, 
       xmevcrtid,xmevcrtdp,xmevcrtdt,xmevmodid,xmevmoddt,xmevcnfid,xmevcnfdt,xmev014,xmev015,xmev016, 
       xmev017,xmev018,t1.ooag011 ,t2.ooefl003 ,t3.pmaal004 ,t4.xmesl003 ,t5.ooail003 ,t6.oocal003 , 
       t7.ooag011 ,t8.ooefl003 ,t9.ooag011 ,t10.ooefl003 ,t11.ooag011 ,t12.ooag011",
               " FROM xmev_t",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent='"||g_enterprise||"' AND t1.ooag001=xmev001  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=xmev002 AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t3 ON t3.pmaalent='"||g_enterprise||"' AND t3.pmaal001=xmev003 AND t3.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN xmesl_t t4 ON t4.xmeslent='"||g_enterprise||"' AND t4.xmesldocno=xmev004 AND t4.xmesl002='"||g_dlang||"' ",
               " LEFT JOIN ooail_t t5 ON t5.ooailent='"||g_enterprise||"' AND t5.ooail001=xmev006 AND t5.ooail002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t6 ON t6.oocalent='"||g_enterprise||"' AND t6.oocal001=xmev012 AND t6.oocal002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent='"||g_enterprise||"' AND t7.ooag001=xmevownid  ",
               " LEFT JOIN ooefl_t t8 ON t8.ooeflent='"||g_enterprise||"' AND t8.ooefl001=xmevowndp AND t8.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t9 ON t9.ooagent='"||g_enterprise||"' AND t9.ooag001=xmevcrtid  ",
               " LEFT JOIN ooefl_t t10 ON t10.ooeflent='"||g_enterprise||"' AND t10.ooefl001=xmevcrtdp AND t10.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t11 ON t11.ooagent='"||g_enterprise||"' AND t11.ooag001=xmevmodid  ",
               " LEFT JOIN ooag_t t12 ON t12.ooagent='"||g_enterprise||"' AND t12.ooag001=xmevcnfid  ",
 
               " WHERE xmevent = '" ||g_enterprise|| "' AND xmevdocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE axmt400_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axmt400 WITH FORM cl_ap_formpath("axm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axmt400_init()   
 
      #進入選單 Menu (="N")
      CALL axmt400_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axmt400
      
   END IF 
   
   CLOSE axmt400_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="axmt400.modify" ver="3" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION axmt400_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_xmev_m.xmevdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   ERROR ""
  
   LET g_xmevdocno_t = g_xmev_m.xmevdocno
 
   CALL s_transaction_begin()
   
   OPEN axmt400_cl USING g_enterprise,g_xmev_m.xmevdocno
   IF STATUS THEN
      CALL cl_err("OPEN axmt400_cl:", STATUS, 1)
      CLOSE axmt400_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axmt400_master_referesh USING g_xmev_m.xmevdocno INTO g_xmev_m.xmevdocno,g_xmev_m.xmevdocdt, 
       g_xmev_m.xmevsite,g_xmev_m.xmev001,g_xmev_m.xmev002,g_xmev_m.xmevstus,g_xmev_m.xmev003,g_xmev_m.xmev004, 
       g_xmev_m.xmev019,g_xmev_m.xmev005,g_xmev_m.xmev006,g_xmev_m.xmev007,g_xmev_m.xmev008,g_xmev_m.xmev009, 
       g_xmev_m.xmev010,g_xmev_m.xmev011,g_xmev_m.xmev012,g_xmev_m.xmev013,g_xmev_m.xmevownid,g_xmev_m.xmevowndp, 
       g_xmev_m.xmevcrtid,g_xmev_m.xmevcrtdp,g_xmev_m.xmevcrtdt,g_xmev_m.xmevmodid,g_xmev_m.xmevmoddt, 
       g_xmev_m.xmevcnfid,g_xmev_m.xmevcnfdt,g_xmev_m.xmev014,g_xmev_m.xmev015,g_xmev_m.xmev016,g_xmev_m.xmev017, 
       g_xmev_m.xmev018,g_xmev_m.xmev001_desc,g_xmev_m.xmev002_desc,g_xmev_m.xmev003_desc,g_xmev_m.xmev004_desc, 
       g_xmev_m.xmev006_desc,g_xmev_m.xmev012_desc,g_xmev_m.xmevownid_desc,g_xmev_m.xmevowndp_desc,g_xmev_m.xmevcrtid_desc, 
       g_xmev_m.xmevcrtdp_desc,g_xmev_m.xmevmodid_desc,g_xmev_m.xmevcnfid_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_xmev_m.xmevdocno,SQLCA.sqlcode,0)
      CLOSE axmt400_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL axmt400_show()
   WHILE TRUE
      LET g_xmevdocno_t = g_xmev_m.xmevdocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_xmev_m.xmevmodid = g_user 
LET g_xmev_m.xmevmoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL axmt400_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_xmev_m.* = g_xmev_m_t.*
         CALL axmt400_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE xmev_t SET (xmevmodid,xmevmoddt) = (g_xmev_m.xmevmodid,g_xmev_m.xmevmoddt)
       WHERE xmevent = g_enterprise AND xmevdocno = g_xmevdocno_t
 
                  
      #若單頭key欄位有變更
      IF g_xmev_m.xmevdocno != g_xmevdocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE xmew_t SET xmewdocno = g_xmev_m.xmevdocno
 
          WHERE xmewent = g_enterprise AND xmewdocno = g_xmevdocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("xmew_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("xmew_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         UPDATE xmex_t
            SET xmexdocno = g_xmev_m.xmevdocno
 
          WHERE xmexent = g_enterprise AND
                xmexdocno = g_xmevdocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("xmex_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("xmex_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update3" mark="Y"/>}
         #end add-point
         UPDATE xmey_t
            SET xmeydocno = g_xmev_m.xmevdocno
 
          WHERE xmeyent = g_enterprise AND
                xmeydocno = g_xmevdocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update3"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("xmey_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("xmey_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update3"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_xmev_m.xmevdocno,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE axmt400_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_xmev_m.xmevdocno,'U')
 
END FUNCTION   
]]>
  </section>
  <section id="axmt400.other_dialog" ver="2" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="axmt400.other_function" ver="1" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="axmt400.query" ver="2" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION axmt400_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_xmew_d.clear()
   CALL g_xmew2_d.clear()
   CALL g_xmew3_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL axmt400_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL axmt400_browser_fill("")
      CALL axmt400_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL axmt400_filter_show('xmevdocno')
   CALL axmt400_filter_show('xmevdocdt')
   CALL axmt400_filter_show('xmev001')
   CALL axmt400_filter_show('xmev002')
   CALL axmt400_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL axmt400_fetch("F") 
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="axmt400.reproduce" ver="3" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION axmt400_reproduce()
   DEFINE l_newno     LIKE xmev_t.xmevdocno 
   DEFINE l_oldno     LIKE xmev_t.xmevdocno 
 
   DEFINE l_master    RECORD LIKE xmev_t.*
   DEFINE l_detail    RECORD LIKE xmew_t.*
   DEFINE l_detail2    RECORD LIKE xmex_t.*
 
   DEFINE l_detail3    RECORD LIKE xmey_t.*
 
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_xmev_m.xmevdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_xmevdocno_t = g_xmev_m.xmevdocno
 
    
   LET g_xmev_m.xmevdocno = ""
 
    
   CALL axmt400_set_entry('a')
   CALL axmt400_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_xmev_m.xmevownid = g_user
      LET g_xmev_m.xmevowndp = g_dept
      LET g_xmev_m.xmevcrtid = g_user
      LET g_xmev_m.xmevcrtdp = g_dept 
      LET g_xmev_m.xmevcrtdt = cl_get_current()
      LET g_xmev_m.xmevmodid = ""
      LET g_xmev_m.xmevmoddt = ""
      LET g_xmev_m.xmevstus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL axmt400_input("r")
   
      LET g_xmev_m.xmevdocno_desc = ''
   DISPLAY BY NAME g_xmev_m.xmevdocno_desc
 
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
   
   #將新增的資料併入搜尋條件中
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = "(",g_wc,  
              " OR (",
              " xmevdocno = '", g_xmev_m.xmevdocno CLIPPED, "' "
 
              , ")) "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="axmt400.set_entry" ver="1" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION axmt400_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("xmevdocno",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="axmt400.set_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION axmt400_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="axmt400.set_no_entry" ver="1" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION axmt400_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("xmevdocno",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="axmt400.set_no_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION axmt400_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="axmt400.set_pk_array" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION axmt400_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_xmev_m.xmevdocno
   LET g_pk_array[1].column = 'xmevdocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="axmt400.show" ver="4" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION axmt400_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL axmt400_b_fill() #單身填充
      CALL axmt400_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_xmev_m.xmevownid_desc = cl_get_username(g_xmev_m.xmevownid)
      #LET g_xmev_m.xmevowndp_desc = cl_get_deptname(g_xmev_m.xmevowndp)
      #LET g_xmev_m.xmevcrtid_desc = cl_get_username(g_xmev_m.xmevcrtid)
      #LET g_xmev_m.xmevcrtdp_desc = cl_get_deptname(g_xmev_m.xmevcrtdp)
      #LET g_xmev_m.xmevmodid_desc = cl_get_username(g_xmev_m.xmevmodid)
      #LET g_xmev_m.xmevcnfid_desc = cl_get_deptname(g_xmev_m.xmevcnfid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL axmt400_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xmev_m.xmevdocno,g_xmev_m.xmevdocno_desc,g_xmev_m.xmevdocdt,g_xmev_m.xmevsite,g_xmev_m.xmev001, 
       g_xmev_m.xmev001_desc,g_xmev_m.xmev002,g_xmev_m.xmev002_desc,g_xmev_m.xmevstus,g_xmev_m.xmev003, 
       g_xmev_m.xmev003_desc,g_xmev_m.xmev004,g_xmev_m.xmev004_desc,g_xmev_m.xmev019,g_xmev_m.xmev005, 
       g_xmev_m.xmev006,g_xmev_m.xmev006_desc,g_xmev_m.xmev007,g_xmev_m.xmev008,g_xmev_m.xmev008_desc, 
       g_xmev_m.xmev009,g_xmev_m.xmev010,g_xmev_m.xmev011,g_xmev_m.xmev012,g_xmev_m.xmev012_desc,g_xmev_m.xmev013, 
       g_xmev_m.xmevownid,g_xmev_m.xmevownid_desc,g_xmev_m.xmevowndp,g_xmev_m.xmevowndp_desc,g_xmev_m.xmevcrtid, 
       g_xmev_m.xmevcrtid_desc,g_xmev_m.xmevcrtdp,g_xmev_m.xmevcrtdp_desc,g_xmev_m.xmevcrtdt,g_xmev_m.xmevmodid, 
       g_xmev_m.xmevmodid_desc,g_xmev_m.xmevmoddt,g_xmev_m.xmevcnfid,g_xmev_m.xmevcnfid_desc,g_xmev_m.xmevcnfdt, 
       g_xmev_m.xmev014,g_xmev_m.xmev015,g_xmev_m.xmev016,g_xmev_m.xmev017,g_xmev_m.xmev018
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_xmev_m.xmevstus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_xmew_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_xmew2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_xmew3_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body3.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL axmt400_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="axmt400.signature" ver="3" status="" src="s">
    <![CDATA[   #此段落由子樣板a39產生
#+ BPM提交
PRIVATE FUNCTION axmt400_send()
 
   #add-point:send段define
   {<point name="send.define"/>}
   #end add-point 
 
   IF g_xmev_m.xmevdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN FALSE
   END IF
 
   #重新取得與顯示完整單據資料(最新單據資料)
   EXECUTE axmt400_master_referesh USING g_xmev_m.xmevdocno INTO g_xmev_m.xmevdocno,g_xmev_m.xmevdocdt, 
       g_xmev_m.xmevsite,g_xmev_m.xmev001,g_xmev_m.xmev002,g_xmev_m.xmevstus,g_xmev_m.xmev003,g_xmev_m.xmev004, 
       g_xmev_m.xmev019,g_xmev_m.xmev005,g_xmev_m.xmev006,g_xmev_m.xmev007,g_xmev_m.xmev008,g_xmev_m.xmev009, 
       g_xmev_m.xmev010,g_xmev_m.xmev011,g_xmev_m.xmev012,g_xmev_m.xmev013,g_xmev_m.xmevownid,g_xmev_m.xmevowndp, 
       g_xmev_m.xmevcrtid,g_xmev_m.xmevcrtdp,g_xmev_m.xmevcrtdt,g_xmev_m.xmevmodid,g_xmev_m.xmevmoddt, 
       g_xmev_m.xmevcnfid,g_xmev_m.xmevcnfdt,g_xmev_m.xmev014,g_xmev_m.xmev015,g_xmev_m.xmev016,g_xmev_m.xmev017, 
       g_xmev_m.xmev018,g_xmev_m.xmev001_desc,g_xmev_m.xmev002_desc,g_xmev_m.xmev003_desc,g_xmev_m.xmev004_desc, 
       g_xmev_m.xmev006_desc,g_xmev_m.xmev012_desc,g_xmev_m.xmevownid_desc,g_xmev_m.xmevowndp_desc,g_xmev_m.xmevcrtid_desc, 
       g_xmev_m.xmevcrtdp_desc,g_xmev_m.xmevmodid_desc,g_xmev_m.xmevcnfid_desc
 
   ERROR ""
   
   CALL s_transaction_begin()
 
   OPEN axmt400_cl USING g_enterprise,g_xmev_m.xmevdocno
   IF STATUS THEN
      CALL cl_err("OPEN axmt400_cl:", STATUS, 1)
      CLOSE axmt400_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #鎖住將被更改的資料
   FETCH axmt400_cl INTO g_xmev_m.xmevdocno,g_xmev_m.xmevdocno_desc,g_xmev_m.xmevdocdt,g_xmev_m.xmevsite, 
       g_xmev_m.xmev001,g_xmev_m.xmev001_desc,g_xmev_m.xmev002,g_xmev_m.xmev002_desc,g_xmev_m.xmevstus, 
       g_xmev_m.xmev003,g_xmev_m.xmev003_desc,g_xmev_m.xmev004,g_xmev_m.xmev004_desc,g_xmev_m.xmev019, 
       g_xmev_m.xmev005,g_xmev_m.xmev006,g_xmev_m.xmev006_desc,g_xmev_m.xmev007,g_xmev_m.xmev008,g_xmev_m.xmev008_desc, 
       g_xmev_m.xmev009,g_xmev_m.xmev010,g_xmev_m.xmev011,g_xmev_m.xmev012,g_xmev_m.xmev012_desc,g_xmev_m.xmev013, 
       g_xmev_m.xmevownid,g_xmev_m.xmevownid_desc,g_xmev_m.xmevowndp,g_xmev_m.xmevowndp_desc,g_xmev_m.xmevcrtid, 
       g_xmev_m.xmevcrtid_desc,g_xmev_m.xmevcrtdp,g_xmev_m.xmevcrtdp_desc,g_xmev_m.xmevcrtdt,g_xmev_m.xmevmodid, 
       g_xmev_m.xmevmodid_desc,g_xmev_m.xmevmoddt,g_xmev_m.xmevcnfid,g_xmev_m.xmevcnfid_desc,g_xmev_m.xmevcnfdt, 
       g_xmev_m.xmev014,g_xmev_m.xmev015,g_xmev_m.xmev016,g_xmev_m.xmev017,g_xmev_m.xmev018
   
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_xmev_m.xmevdocno,SQLCA.sqlcode,0)
      CLOSE axmt400_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
   LET g_wc2_table2 = " 1=1"
   LET g_wc2_table3 = " 1=1"
 
 
   CALL axmt400_show()
   CALL axmt400_set_pk_array()
   
   #add-point: 提交前的ADP
   {<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_xmev_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_xmew_d))
   CALL cl_bpm_set_detail_data("s_detail2", util.JSONArray.fromFGL(g_xmew2_d))   CALL cl_bpm_set_detail_data("s_detail3", util.JSONArray.fromFGL(g_xmew3_d))
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      CLOSE axmt400_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP
   {<point name="send.after_send" />}
   #end add-point
   
   #完成狀態更新
   CLOSE axmt400_cl
   CALL s_transaction_end('Y','0')
             
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL axmt400_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_row].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL axmt400_ui_headershow()
   CALL axmt400_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
#此段落由子樣板a40產生
#+ BPM抽單
PRIVATE FUNCTION axmt400_draw_out()
 
   #add-point:draw段define
   {<point name="draw.define"/>}
   #end add-point
 
   #檢查資料是否存在
   IF g_xmev_m.xmevdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN FALSE
   END IF
 
   #LOCK主檔資料
   CALL s_transaction_begin()
 
   #進行BPM抽單功能
   OPEN axmt400_cl USING g_enterprise,g_xmev_m.xmevdocno
   IF STATUS THEN
      CALL cl_err("OPEN axmt400_cl:", STATUS, 1)
      CLOSE axmt400_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #鎖住將被更改的資料
   FETCH axmt400_cl INTO g_xmev_m.xmevdocno,g_xmev_m.xmevdocno_desc,g_xmev_m.xmevdocdt,g_xmev_m.xmevsite, 
       g_xmev_m.xmev001,g_xmev_m.xmev001_desc,g_xmev_m.xmev002,g_xmev_m.xmev002_desc,g_xmev_m.xmevstus, 
       g_xmev_m.xmev003,g_xmev_m.xmev003_desc,g_xmev_m.xmev004,g_xmev_m.xmev004_desc,g_xmev_m.xmev019, 
       g_xmev_m.xmev005,g_xmev_m.xmev006,g_xmev_m.xmev006_desc,g_xmev_m.xmev007,g_xmev_m.xmev008,g_xmev_m.xmev008_desc, 
       g_xmev_m.xmev009,g_xmev_m.xmev010,g_xmev_m.xmev011,g_xmev_m.xmev012,g_xmev_m.xmev012_desc,g_xmev_m.xmev013, 
       g_xmev_m.xmevownid,g_xmev_m.xmevownid_desc,g_xmev_m.xmevowndp,g_xmev_m.xmevowndp_desc,g_xmev_m.xmevcrtid, 
       g_xmev_m.xmevcrtid_desc,g_xmev_m.xmevcrtdp,g_xmev_m.xmevcrtdp_desc,g_xmev_m.xmevcrtdt,g_xmev_m.xmevmodid, 
       g_xmev_m.xmevmodid_desc,g_xmev_m.xmevmoddt,g_xmev_m.xmevcnfid,g_xmev_m.xmevcnfid_desc,g_xmev_m.xmevcnfdt, 
       g_xmev_m.xmev014,g_xmev_m.xmev015,g_xmev_m.xmev016,g_xmev_m.xmev017,g_xmev_m.xmev018
   
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_xmev_m.xmevdocno,SQLCA.sqlcode,0)
      CLOSE axmt400_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      CLOSE axmt400_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF    
 
   #完成狀態更新
   CLOSE axmt400_cl
   CALL s_transaction_end('Y','0')
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_row].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL axmt400_ui_headershow()  
   CALL axmt400_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
]]>
  </section>
  <section id="axmt400.state_change" ver="3" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION axmt400_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_xmev_m.xmevdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_xmev_m.xmevstus
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "X"
               HIDE OPTION "invalid"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION unconfirmed
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.unconfirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION invalid
         LET lc_state = "X"
         #add-point:action控制
         {<point name="statechange.invalid"/>}
         #end add-point
         EXIT MENU
      ON ACTION confirmed
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.confirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION approved
         LET lc_state = "A"
         #add-point:action控制
         {<point name="statechange.approved"/>}
         #end add-point
         EXIT MENU
      #ON ACTION withdraw
      #   LET lc_state = "D"
      #   #add-point:action控制
      #   {<point name="statechange.withdraw"/>}
      #   #end add-point
      #   EXIT MENU
      ON ACTION rejection
         LET lc_state = "R"
         #add-point:action控制
         {<point name="statechange.rejection"/>}
         #end add-point
         EXIT MENU
      #ON ACTION signing
      #   LET lc_state = "W"
      #   #add-point:action控制
      #   {<point name="statechange.signing"/>}
      #   #end add-point
      #   EXIT MENU
      
      #此段落由子樣板a36產生
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT axmt400_send() THEN
               RETURN
            END IF
         END IF
         LET lc_state = ''   #因為_send()已有執行update動作
 
         EXIT MENU
 
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT axmt400_draw_out() THEN
               RETURN
            END IF
         END IF
         LET lc_state = ''   #因為_draw_out()已有執行update動作
         EXIT MENU
 
 
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "X"
      AND lc_state <> "Y"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE xmev_t SET xmevstus = lc_state 
    WHERE xmevent = g_enterprise AND xmevdocno = g_xmev_m.xmevdocno
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         
      END CASE
      LET g_xmev_m.xmevstus = lc_state
      DISPLAY BY NAME g_xmev_m.xmevstus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
  </section>
  <section id="axmt400.ui_browser_refresh" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION axmt400_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_xmevdocno = g_xmev_m.xmevdocno 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
  </section>
  <section id="axmt400.ui_detailshow" ver="1" status="" src="s">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION axmt400_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="axmt400.ui_dialog" ver="5" status="" src="s">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION axmt400_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL axmt400_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL axmt400_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_xmevdocno = g_xmevdocno_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL axmt400_fetch('') # reload data
               LET l_ac = 1
               CALL axmt400_ui_detailshow() #Setting the current row 
      
               CALL axmt400_idx_chk()
               #NEXT FIELD xmewseq
         
         END DISPLAY
        
         DISPLAY ARRAY g_xmew_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL axmt400_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL axmt400_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         DISPLAY ARRAY g_xmew2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL axmt400_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               CALL axmt400_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
         DISPLAY ARRAY g_xmew3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL axmt400_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               
               #add-point:page3, before row動作
               {<point name="ui_dialog.body3.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
               CALL axmt400_idx_chk()
               #add-point:page3自定義行為
               {<point name="ui_dialog.body3.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為
            {<point name="ui_dialog.body3.action"/>}
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL axmt400_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL axmt400_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL axmt400_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL axmt400_statechange()
            EXIT DIALOG
      
         #此段落由子樣板a32產生
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status
            {<point name="menu.bpm_status" />}
            #END add-point
 
 
 
 
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL axmt400_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL axmt400_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL axmt400_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL axmt400_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL axmt400_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt400_idx_chk()
            
         ON ACTION previous
            CALL axmt400_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt400_idx_chk()
            
         ON ACTION jump
            CALL axmt400_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt400_idx_chk()
            
         ON ACTION next
            CALL axmt400_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt400_idx_chk()
            
         ON ACTION last
            CALL axmt400_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt400_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD xmewseq
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL axmt400_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL axmt400_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL axmt400_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL axmt400_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL axmt400_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL axmt400_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION prog_xmev001
            LET g_action_choice="prog_xmev001"
            IF cl_auth_chk_act("prog_xmev001") THEN
               
               #add-point:ON ACTION prog_xmev001
               {<point name="menu.prog_xmev001" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL axmt400_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL axmt400_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL axmt400_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_xmev_m.xmevdocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="axmt400.ui_headershow" ver="2" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION axmt400_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_xmev_m.xmevdocno = g_browser[g_current_idx].b_xmevdocno   
 
   EXECUTE axmt400_master_referesh USING g_xmev_m.xmevdocno INTO g_xmev_m.xmevdocno,g_xmev_m.xmevdocdt, 
       g_xmev_m.xmevsite,g_xmev_m.xmev001,g_xmev_m.xmev002,g_xmev_m.xmevstus,g_xmev_m.xmev003,g_xmev_m.xmev004, 
       g_xmev_m.xmev019,g_xmev_m.xmev005,g_xmev_m.xmev006,g_xmev_m.xmev007,g_xmev_m.xmev008,g_xmev_m.xmev009, 
       g_xmev_m.xmev010,g_xmev_m.xmev011,g_xmev_m.xmev012,g_xmev_m.xmev013,g_xmev_m.xmevownid,g_xmev_m.xmevowndp, 
       g_xmev_m.xmevcrtid,g_xmev_m.xmevcrtdp,g_xmev_m.xmevcrtdt,g_xmev_m.xmevmodid,g_xmev_m.xmevmoddt, 
       g_xmev_m.xmevcnfid,g_xmev_m.xmevcnfdt,g_xmev_m.xmev014,g_xmev_m.xmev015,g_xmev_m.xmev016,g_xmev_m.xmev017, 
       g_xmev_m.xmev018,g_xmev_m.xmev001_desc,g_xmev_m.xmev002_desc,g_xmev_m.xmev003_desc,g_xmev_m.xmev004_desc, 
       g_xmev_m.xmev006_desc,g_xmev_m.xmev012_desc,g_xmev_m.xmevownid_desc,g_xmev_m.xmevowndp_desc,g_xmev_m.xmevcrtid_desc, 
       g_xmev_m.xmevcrtdp_desc,g_xmev_m.xmevmodid_desc,g_xmev_m.xmevcnfid_desc
   CALL axmt400_show()
   
END FUNCTION
]]>
  </section>
  <section id="axmt400.unlock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION axmt400_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmt400_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmt400_bcl2
   END IF
 
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmt400_bcl3
   END IF
 
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="axmt400.update_b" ver="2" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION axmt400_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmew_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE xmew_t 
         SET (xmewdocno,
              xmewseq
              ,xmewsite,xmew001,xmew002,xmew003,xmew004,xmew005,xmew006,xmew007,xmew008,xmew009,xmew010,xmew011,xmew012,xmew013,xmew014,xmew015,xmew016) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_xmew_d[g_detail_idx].xmewsite,g_xmew_d[g_detail_idx].xmew001,g_xmew_d[g_detail_idx].xmew002, 
                  g_xmew_d[g_detail_idx].xmew003,g_xmew_d[g_detail_idx].xmew004,g_xmew_d[g_detail_idx].xmew005, 
                  g_xmew_d[g_detail_idx].xmew006,g_xmew_d[g_detail_idx].xmew007,g_xmew_d[g_detail_idx].xmew008, 
                  g_xmew_d[g_detail_idx].xmew009,g_xmew_d[g_detail_idx].xmew010,g_xmew_d[g_detail_idx].xmew011, 
                  g_xmew_d[g_detail_idx].xmew012,g_xmew_d[g_detail_idx].xmew013,g_xmew_d[g_detail_idx].xmew014, 
                  g_xmew_d[g_detail_idx].xmew015,g_xmew_d[g_detail_idx].xmew016) 
         WHERE xmewent = g_enterprise AND xmewdocno = ps_keys_bak[1] AND xmewseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("xmew_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("xmew_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmex_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point     
      UPDATE xmex_t 
         SET (xmexdocno,
              xmexseq
              ,xmexsite,xmex001,xmex002,xmex003,xmex004,xmex005,xmex006,xmex007,xmex008,xmex009,xmex010,xmex011,xmex012,xmex013,xmex014) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_xmew2_d[g_detail_idx].xmexsite,g_xmew2_d[g_detail_idx].xmex001,g_xmew2_d[g_detail_idx].xmex002, 
                  g_xmew2_d[g_detail_idx].xmex003,g_xmew2_d[g_detail_idx].xmex004,g_xmew2_d[g_detail_idx].xmex005, 
                  g_xmew2_d[g_detail_idx].xmex006,g_xmew2_d[g_detail_idx].xmex007,g_xmew2_d[g_detail_idx].xmex008, 
                  g_xmew2_d[g_detail_idx].xmex009,g_xmew2_d[g_detail_idx].xmex010,g_xmew2_d[g_detail_idx].xmex011, 
                  g_xmew2_d[g_detail_idx].xmex012,g_xmew2_d[g_detail_idx].xmex013,g_xmew2_d[g_detail_idx].xmex014)  

         WHERE xmexent = g_enterprise AND xmexdocno = ps_keys_bak[1] AND xmexseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("xmex_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("xmex_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmey_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update3" mark="Y"/>}
      #end add-point     
      UPDATE xmey_t 
         SET (xmeydocno,
              xmeyseq
              ,xmeysite,xmey001,xmey002,xmey003) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_xmew3_d[g_detail_idx].xmeysite,g_xmew3_d[g_detail_idx].xmey001,g_xmew3_d[g_detail_idx].xmey002, 
                  g_xmew3_d[g_detail_idx].xmey003) 
         WHERE xmeyent = g_enterprise AND xmeydocno = ps_keys_bak[1] AND xmeyseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update3"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("xmey_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("xmey_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update3"/>}
      #end add-point  
   END IF
 
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
