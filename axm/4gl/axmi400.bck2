#該程式未解開Section, 採用最新樣板產出!
{<section id="axmi400.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0009(2016-03-18 17:22:39), PR版次:0009(2016-05-26 16:13:42)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000227
#+ Filename...: axmi400
#+ Description: 銷售估價BOM維護作業
#+ Creator....: 05293(2014-06-11 10:41:38)
#+ Modifier...: 07024 -SD/PR- 05384
 
{</section>}
 
{<section id="axmi400.global" >}
#應用 t01 樣板自動產生(Version:76)
#add-point:填寫註解說明
#151224-00025#2 15/12/28 By catmoon 手動輸入特徵碼同步新增inam_t[料件產品特徵明細檔]
#160310-00018#1 16/03/18 By dorislai xmeu005變key欄位，在每個xmeu欄位裡的ap_chk_notDup，多加xmeu005
#160318-00025#4 16/04/12 By 07675    將重複內容的錯誤訊息置換為公用錯誤訊息(r.v）
#150810-00021#1 16/05/26 By shiun    aoos020中参数设置不使用产品特征时，请隐藏“已转订单状况”页签中的产品特征相关栏位
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_xmes_m        RECORD
       xmesdocno LIKE xmes_t.xmesdocno, 
   xmesl003 LIKE xmesl_t.xmesl003, 
   xmesl004 LIKE xmesl_t.xmesl004, 
   xmes001 LIKE xmes_t.xmes001, 
   xmesstus LIKE xmes_t.xmesstus, 
   xmesownid LIKE xmes_t.xmesownid, 
   xmesownid_desc LIKE type_t.chr80, 
   xmesowndp LIKE xmes_t.xmesowndp, 
   xmesowndp_desc LIKE type_t.chr80, 
   xmescrtid LIKE xmes_t.xmescrtid, 
   xmescrtid_desc LIKE type_t.chr80, 
   xmescrtdp LIKE xmes_t.xmescrtdp, 
   xmescrtdp_desc LIKE type_t.chr80, 
   xmescrtdt LIKE xmes_t.xmescrtdt, 
   xmesmodid LIKE xmes_t.xmesmodid, 
   xmesmodid_desc LIKE type_t.chr80, 
   xmesmoddt LIKE xmes_t.xmesmoddt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_xmet_d        RECORD
       xmet002 LIKE xmet_t.xmet002, 
   xmet003 LIKE xmet_t.xmet003, 
   xmet003_desc LIKE type_t.chr500, 
   xmet004 LIKE xmet_t.xmet004, 
   xmet004_desc LIKE type_t.chr500, 
   xmet005 LIKE xmet_t.xmet005, 
   xmet005_desc LIKE type_t.chr500, 
   xmet005_desc_desc LIKE type_t.chr500, 
   xmet006 LIKE xmet_t.xmet006, 
   xmet006_desc LIKE type_t.chr500, 
   xmet007 LIKE xmet_t.xmet007, 
   xmet008 LIKE xmet_t.xmet008, 
   xmet008_desc LIKE type_t.chr500, 
   xmet009 LIKE xmet_t.xmet009, 
   xmet010 LIKE xmet_t.xmet010, 
   xmet011 LIKE xmet_t.xmet011, 
   xmet012 LIKE xmet_t.xmet012, 
   xmet012_desc LIKE type_t.chr500, 
   xmet013 LIKE xmet_t.xmet013, 
   xmet013_desc LIKE type_t.chr500, 
   xmet014 LIKE xmet_t.xmet014
       END RECORD
PRIVATE TYPE type_g_xmet2_d RECORD
       xmeu002 LIKE xmeu_t.xmeu002, 
   xmeu002_desc LIKE type_t.chr500, 
   xmeu003 LIKE xmeu_t.xmeu003, 
   xmeu003_desc LIKE type_t.chr500, 
   xmeu003_desc_desc LIKE type_t.chr500, 
   xmeu004 LIKE xmeu_t.xmeu004, 
   xmeu005 LIKE xmeu_t.xmeu005, 
   xmeu005_desc LIKE type_t.chr500, 
   xmeu006 LIKE xmeu_t.xmeu006, 
   xmeu007 LIKE xmeu_t.xmeu007, 
   xmeu007_desc LIKE type_t.chr500, 
   xmeu008 LIKE xmeu_t.xmeu008, 
   xmeu009 LIKE xmeu_t.xmeu009, 
   xmeu010 LIKE xmeu_t.xmeu010, 
   xmeu011 LIKE xmeu_t.xmeu011
       END RECORD
PRIVATE TYPE type_g_xmet3_d RECORD
       xmezseq LIKE xmez_t.xmezseq, 
   xmez002 LIKE xmez_t.xmez002, 
   xmez002_desc LIKE type_t.chr500, 
   xmez002_desc_desc LIKE type_t.chr500, 
   xmez003 LIKE xmez_t.xmez003, 
   xmez003_desc LIKE type_t.chr500, 
   xmez004 LIKE xmez_t.xmez004, 
   xmez005 LIKE xmez_t.xmez005, 
   xmez006 LIKE xmez_t.xmez006, 
   xmez006_desc LIKE type_t.chr500, 
   xmez007 LIKE xmez_t.xmez007
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_xmesdocno LIKE xmes_t.xmesdocno,
   b_xmesdocno_desc LIKE type_t.chr80,
      b_xmes001 LIKE xmes_t.xmes001
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
#add--2015/07/20 By shiun--(S)
DEFINE g_item_ac  LIKE type_t.num5
DEFINE g_bmba     DYNAMIC ARRAY OF RECORD
       bmbaent    LIKE bmba_t.bmbaent,
       bmbasite   LIKE bmba_t.bmbasite,
       bmba001    LIKE bmba_t.bmba001,
       bmba002    LIKE bmba_t.bmba002,
       bmba003    LIKE bmba_t.bmba003,
       bmba004    LIKE bmba_t.bmba004,
       bmba005    DATETIME YEAR TO SECOND,
       bmba007    LIKE bmba_t.bmba007,
       bmba008    LIKE bmba_t.bmba008,
       bmba009    LIKE type_t.chr10,
       bmba010    LIKE bmba_t.bmba010,
       bmba011    LIKE bmba_t.bmba011,
       bmba012    LIKE bmba_t.bmba012,
       bmbc010    LIKE type_t.chr1000,
       ooff013    LIKE type_t.chr1000,
       l_ac       LIKE type_t.num5
END RECORD
#add--2015/07/20 By shiun--(E)
#end add-point
       
#模組變數(Module Variables)
DEFINE g_xmes_m          type_g_xmes_m
DEFINE g_xmes_m_t        type_g_xmes_m
DEFINE g_xmes_m_o        type_g_xmes_m
DEFINE g_xmes_m_mask_o   type_g_xmes_m #轉換遮罩前資料
DEFINE g_xmes_m_mask_n   type_g_xmes_m #轉換遮罩後資料
 
   DEFINE g_xmesdocno_t LIKE xmes_t.xmesdocno
DEFINE g_xmes001_t LIKE xmes_t.xmes001
 
 
DEFINE g_xmet_d          DYNAMIC ARRAY OF type_g_xmet_d
DEFINE g_xmet_d_t        type_g_xmet_d
DEFINE g_xmet_d_o        type_g_xmet_d
DEFINE g_xmet_d_mask_o   DYNAMIC ARRAY OF type_g_xmet_d #轉換遮罩前資料
DEFINE g_xmet_d_mask_n   DYNAMIC ARRAY OF type_g_xmet_d #轉換遮罩後資料
DEFINE g_xmet2_d          DYNAMIC ARRAY OF type_g_xmet2_d
DEFINE g_xmet2_d_t        type_g_xmet2_d
DEFINE g_xmet2_d_o        type_g_xmet2_d
DEFINE g_xmet2_d_mask_o   DYNAMIC ARRAY OF type_g_xmet2_d #轉換遮罩前資料
DEFINE g_xmet2_d_mask_n   DYNAMIC ARRAY OF type_g_xmet2_d #轉換遮罩後資料
DEFINE g_xmet3_d          DYNAMIC ARRAY OF type_g_xmet3_d
DEFINE g_xmet3_d_t        type_g_xmet3_d
DEFINE g_xmet3_d_o        type_g_xmet3_d
DEFINE g_xmet3_d_mask_o   DYNAMIC ARRAY OF type_g_xmet3_d #轉換遮罩前資料
DEFINE g_xmet3_d_mask_n   DYNAMIC ARRAY OF type_g_xmet3_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
DEFINE g_master_multi_table_t    RECORD
      xmesldocno LIKE xmesl_t.xmesldocno,
      xmesl003 LIKE xmesl_t.xmesl003,
      xmesl004 LIKE xmesl_t.xmesl004
      END RECORD
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="axmi400.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axm","")
 
   #add-point:作業初始化 name="main.init"
   
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " SELECT xmesdocno,'','',xmes001,xmesstus,xmesownid,'',xmesowndp,'',xmescrtid, 
       '',xmescrtdp,'',xmescrtdt,xmesmodid,'',xmesmoddt", 
                      " FROM xmes_t",
                      " WHERE xmesent= ? AND xmessite= ? AND xmesdocno=? AND xmes001=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmi400_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.xmesdocno,t0.xmes001,t0.xmesstus,t0.xmesownid,t0.xmesowndp,t0.xmescrtid, 
       t0.xmescrtdp,t0.xmescrtdt,t0.xmesmodid,t0.xmesmoddt,t1.ooag011 ,t2.ooefl003 ,t3.ooag011 ,t4.ooefl003 , 
       t5.ooag011",
               " FROM xmes_t t0",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent="||g_enterprise||" AND t1.ooag001=t0.xmesownid  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=t0.xmesowndp AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent="||g_enterprise||" AND t3.ooag001=t0.xmescrtid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent="||g_enterprise||" AND t4.ooefl001=t0.xmescrtdp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent="||g_enterprise||" AND t5.ooag001=t0.xmesmodid  ",
 
               " WHERE t0.xmesent = " ||g_enterprise|| " AND t0.xmessite = ? AND t0.xmesdocno = ? AND t0.xmes001 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE axmi400_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axmi400 WITH FORM cl_ap_formpath("axm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axmi400_init()   
 
      #進入選單 Menu (="N")
      CALL axmi400_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axmi400
      
   END IF 
   
   CLOSE axmi400_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="axmi400.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION axmi400_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('xmesstus','17','N,Y')
 
      CALL cl_set_combo_scc('xmeu010','3018') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1',","1")
   CALL g_idx_group.addAttribute("'2',","1")
   CALL g_idx_group.addAttribute("'3',","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   #add--150810-00021#1 By shiun--(S)
   #判斷據點參數若不使用產品特徵時，則產品特徵需隱藏不可以維護(據點參數:S-BAS-0036)
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0036') = "N" THEN
      CALL cl_set_comp_visible("xmet006,xmet006_desc",FALSE)
   END IF
   #add--150810-00021#1 By shiun--(E)
   #end add-point
   
   #初始化搜尋條件
   CALL axmi400_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="axmi400.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION axmi400_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL axmi400_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
            
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
      
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_xmes_m.* TO NULL
         CALL g_xmet_d.clear()
         CALL g_xmet2_d.clear()
         CALL g_xmet3_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL axmi400_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL axmi400_fetch('') # reload data
               LET l_ac = 1
               CALL axmi400_ui_detailshow() #Setting the current row 
         
               CALL axmi400_idx_chk()
               #NEXT FIELD xmet002
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_xmet_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axmi400_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL axmi400_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_xmet2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axmi400_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[2] = l_ac
               CALL g_idx_group.addAttribute("'2',",l_ac)
               
               #add-point:page2, before row動作 name="ui_dialog.body2.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL axmi400_idx_chk()
               #add-point:page2自定義行為 name="ui_dialog.body2.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為 name="ui_dialog.body2.action"
            
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_xmet3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axmi400_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[3] = l_ac
               CALL g_idx_group.addAttribute("'3',",l_ac)
               
               #add-point:page3, before row動作 name="ui_dialog.body3.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
               #顯示單身筆數
               CALL axmi400_idx_chk()
               #add-point:page3自定義行為 name="ui_dialog.body3.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為 name="ui_dialog.body3.action"
            
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL axmi400_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL axmi400_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL axmi400_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL axmi400_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL axmi400_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL axmi400_set_act_visible()   
            CALL axmi400_set_act_no_visible()
            IF NOT (g_xmes_m.xmesdocno IS NULL
              OR g_xmes_m.xmes001 IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " xmesent = " ||g_enterprise|| " AND xmessite = '" ||g_site|| "' AND",
                                  " xmesdocno = '", g_xmes_m.xmesdocno, "' "
                                  ," AND xmes001 = '", g_xmes_m.xmes001, "' "
 
               #填到對應位置
               CALL axmi400_browser_fill("")
            END IF
         
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "xmes_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmet_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmeu_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "xmez_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL axmi400_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "xmes_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmet_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmeu_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "xmez_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL axmi400_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL axmi400_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:4)
            #過濾瀏覽頁資料
            ON ACTION filter
               LET g_action_choice = "fetch"
               #add-point:filter action name="ui_dialog.action.filter"
               
               #end add-point
               CALL axmi400_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL axmi400_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmi400_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL axmi400_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmi400_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL axmi400_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmi400_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL axmi400_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmi400_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL axmi400_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmi400_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_xmet_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_xmet2_d)
                  LET g_export_id[2]   = "s_detail2"
                  LET g_export_node[3] = base.typeInfo.create(g_xmet3_d)
                  LET g_export_id[3]   = "s_detail3"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD xmet002
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL axmi400_delete()
               #add-point:ON ACTION delete name="menu.delete"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL axmi400_insert()
               #add-point:ON ACTION insert name="menu.insert"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL axmi400_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
               CALL g_curr_diag.setCurrentRow("s_detail3",1)
 
 
 
 
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL axmi400_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL axmi400_modify()
               #add-point:ON ACTION modify name="menu.modify"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL axmi400_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION axmi400_detail_upd
            LET g_action_choice="axmi400_detail_upd"
            IF cl_auth_chk_act("axmi400_detail_upd") THEN
               
               #add-point:ON ACTION axmi400_detail_upd name="menu.axmi400_detail_upd"
               IF NOT cl_null(g_xmes_m.xmesdocno) THEN
                  CALL axmi400_detail_upd()
               END IF
               #END add-point
               
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL axmi400_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL axmi400_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL axmi400_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow('')
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
 
{</section>}
 
{<section id="axmi400.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION axmi400_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT xmesdocno,xmes001 ",
                      " FROM xmes_t ",
                      " ",
                      " LEFT JOIN xmet_t ON xmetent = xmesent AND xmetsite = xmessite AND xmesdocno = xmetdocno AND xmes001 = xmet001 ", "  ",
                      #add-point:browser_fill段sql(xmet_t1) name="browser_fill.cnt.join.}"
                      
                      #end add-point
                      " LEFT JOIN xmeu_t ON xmeuent = xmesent AND xmeusite = xmessite AND xmesdocno = xmeudocno AND xmes001 = xmeu001", "  ",
                      #add-point:browser_fill段sql(xmeu_t1) name="browser_fill.cnt.join.xmeu_t1"
                      
                      #end add-point
 
                      " LEFT JOIN xmez_t ON xmezent = xmesent AND xmezsite = xmessite AND xmesdocno = xmezdocno AND xmes001 = xmez001", "  ",
                      #add-point:browser_fill段sql(xmez_t1) name="browser_fill.cnt.join.xmez_t1"
                      
                      #end add-point
 
 
 
                      " LEFT JOIN xmesl_t ON xmeslent = "||g_enterprise||" AND xmesdocno = xmesldocno AND xmesl002 = '",g_dlang,"' ", 
                      " ", 
                      " ",                      
 
                      " ",                      
 
 
 
                      " WHERE xmesent = " ||g_enterprise|| " AND xmessite = '" ||g_site|| "' AND xmetent = " ||g_enterprise|| " AND xmetsite = '" ||g_site|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("xmes_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT xmesdocno,xmes001 ",
                      " FROM xmes_t ", 
                      "  ",
                      "  LEFT JOIN xmesl_t ON xmeslent = "||g_enterprise||" AND xmesdocno = xmesldocno AND xmesl002 = '",g_dlang,"' ",
                      " WHERE xmesent = " ||g_enterprise|| " AND xmessite = '" ||g_site|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("xmes_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_xmes_m.* TO NULL
      CALL g_xmet_d.clear()        
      CALL g_xmet2_d.clear() 
      CALL g_xmet3_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.xmesdocno,t0.xmes001 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.xmesstus,t0.xmesdocno,t0.xmes001,t1.xmesl003 ",
                  " FROM xmes_t t0",
                  "  ",
                  "  LEFT JOIN xmet_t ON xmetent = xmesent AND xmetsite = xmessite AND xmesdocno = xmetdocno AND xmes001 = xmet001 ", "  ", 
                  #add-point:browser_fill段sql(xmet_t1) name="browser_fill.join.xmet_t1"
                  
                  #end add-point
                  "  LEFT JOIN xmeu_t ON xmeuent = xmesent AND xmeusite = xmessite AND xmesdocno = xmeudocno AND xmes001 = xmeu001", "  ", 
                  #add-point:browser_fill段sql(xmeu_t1) name="browser_fill.join.xmeu_t1"
                  
                  #end add-point
 
                  "  LEFT JOIN xmez_t ON xmezent = xmesent AND xmezsite = xmessite AND xmesdocno = xmezdocno AND xmes001 = xmez001", "  ", 
                  #add-point:browser_fill段sql(xmez_t1) name="browser_fill.join.xmez_t1"
                  
                  #end add-point
 
 
 
                  " ", 
                  " ",                      
 
                  " ",                      
 
 
 
                                 " LEFT JOIN xmesl_t t1 ON t1.xmeslent="||g_enterprise||" AND t1.xmesldocno=t0.xmesdocno AND t1.xmesl002='"||g_dlang||"' ",
 
                  " WHERE t0.xmesent = " ||g_enterprise|| " AND t0.xmessite = '" ||g_site|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("xmes_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.xmesstus,t0.xmesdocno,t0.xmes001,t1.xmesl003 ",
                  " FROM xmes_t t0",
                  "  ",
                                 " LEFT JOIN xmesl_t t1 ON t1.xmeslent="||g_enterprise||" AND t1.xmesldocno=t0.xmesdocno AND t1.xmesl002='"||g_dlang||"' ",
 
                  " WHERE t0.xmesent = " ||g_enterprise|| " AND t0.xmessite = '" ||g_site|| "' AND ",l_wc, cl_sql_add_filter("xmes_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   
   #end add-point
   LET g_sql = g_sql, " ORDER BY xmesdocno,xmes001 ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
   
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"xmes_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_xmesdocno,g_browser[g_cnt].b_xmes001, 
          g_browser[g_cnt].b_xmesdocno_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
         
         #end add-point
      
         #遮罩相關處理
         CALL axmi400_browser_mask()
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/inactive.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/active.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_xmesdocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   
   #end add-point   
 
END FUNCTION
 
{</section>}
 
{<section id="axmi400.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION axmi400_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_xmes_m.xmesdocno = g_browser[g_current_idx].b_xmesdocno   
   LET g_xmes_m.xmes001 = g_browser[g_current_idx].b_xmes001   
 
   EXECUTE axmi400_master_referesh USING g_site,g_xmes_m.xmesdocno,g_xmes_m.xmes001 INTO g_xmes_m.xmesdocno, 
       g_xmes_m.xmes001,g_xmes_m.xmesstus,g_xmes_m.xmesownid,g_xmes_m.xmesowndp,g_xmes_m.xmescrtid,g_xmes_m.xmescrtdp, 
       g_xmes_m.xmescrtdt,g_xmes_m.xmesmodid,g_xmes_m.xmesmoddt,g_xmes_m.xmesownid_desc,g_xmes_m.xmesowndp_desc, 
       g_xmes_m.xmescrtid_desc,g_xmes_m.xmescrtdp_desc,g_xmes_m.xmesmodid_desc
   
   CALL axmi400_xmes_t_mask()
   CALL axmi400_show()
      
END FUNCTION
 
{</section>}
 
{<section id="axmi400.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION axmi400_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="axmi400.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION axmi400_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_xmesdocno = g_xmes_m.xmesdocno 
         AND g_browser[l_i].b_xmes001 = g_xmes_m.xmes001 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="axmi400.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION axmi400_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_xmes_m.* TO NULL
   CALL g_xmet_d.clear()        
   CALL g_xmet2_d.clear() 
   CALL g_xmet3_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
   INITIALIZE g_wc2_table3 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON xmesdocno,xmesl003,xmesl004,xmes001,xmesstus,xmesownid,xmesowndp,xmescrtid, 
          xmescrtdp,xmescrtdt,xmesmodid,xmesmoddt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<xmescrtdt>>----
         AFTER FIELD xmescrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<xmesmoddt>>----
         AFTER FIELD xmesmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmescnfdt>>----
         
         #----<<xmespstdt>>----
 
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.xmesdocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmesdocno
            #add-point:ON ACTION controlp INFIELD xmesdocno name="construct.c.xmesdocno"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xmesdocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmesdocno  #顯示到畫面上
            NEXT FIELD xmesdocno                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmesdocno
            #add-point:BEFORE FIELD xmesdocno name="construct.b.xmesdocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmesdocno
            
            #add-point:AFTER FIELD xmesdocno name="construct.a.xmesdocno"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmesl003
            #add-point:BEFORE FIELD xmesl003 name="construct.b.xmesl003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmesl003
            
            #add-point:AFTER FIELD xmesl003 name="construct.a.xmesl003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmesl003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmesl003
            #add-point:ON ACTION controlp INFIELD xmesl003 name="construct.c.xmesl003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmesl004
            #add-point:BEFORE FIELD xmesl004 name="construct.b.xmesl004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmesl004
            
            #add-point:AFTER FIELD xmesl004 name="construct.a.xmesl004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmesl004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmesl004
            #add-point:ON ACTION controlp INFIELD xmesl004 name="construct.c.xmesl004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmes001
            #add-point:BEFORE FIELD xmes001 name="construct.b.xmes001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmes001
            
            #add-point:AFTER FIELD xmes001 name="construct.a.xmes001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmes001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmes001
            #add-point:ON ACTION controlp INFIELD xmes001 name="construct.c.xmes001"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmesstus
            #add-point:BEFORE FIELD xmesstus name="construct.b.xmesstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmesstus
            
            #add-point:AFTER FIELD xmesstus name="construct.a.xmesstus"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmesstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmesstus
            #add-point:ON ACTION controlp INFIELD xmesstus name="construct.c.xmesstus"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmesownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmesownid
            #add-point:ON ACTION controlp INFIELD xmesownid name="construct.c.xmesownid"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmesownid  #顯示到畫面上
            NEXT FIELD xmesownid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmesownid
            #add-point:BEFORE FIELD xmesownid name="construct.b.xmesownid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmesownid
            
            #add-point:AFTER FIELD xmesownid name="construct.a.xmesownid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmesowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmesowndp
            #add-point:ON ACTION controlp INFIELD xmesowndp name="construct.c.xmesowndp"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmesowndp  #顯示到畫面上
            NEXT FIELD xmesowndp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmesowndp
            #add-point:BEFORE FIELD xmesowndp name="construct.b.xmesowndp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmesowndp
            
            #add-point:AFTER FIELD xmesowndp name="construct.a.xmesowndp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmescrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmescrtid
            #add-point:ON ACTION controlp INFIELD xmescrtid name="construct.c.xmescrtid"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmescrtid  #顯示到畫面上
            NEXT FIELD xmescrtid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmescrtid
            #add-point:BEFORE FIELD xmescrtid name="construct.b.xmescrtid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmescrtid
            
            #add-point:AFTER FIELD xmescrtid name="construct.a.xmescrtid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmescrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmescrtdp
            #add-point:ON ACTION controlp INFIELD xmescrtdp name="construct.c.xmescrtdp"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmescrtdp  #顯示到畫面上
            NEXT FIELD xmescrtdp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmescrtdp
            #add-point:BEFORE FIELD xmescrtdp name="construct.b.xmescrtdp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmescrtdp
            
            #add-point:AFTER FIELD xmescrtdp name="construct.a.xmescrtdp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmescrtdt
            #add-point:BEFORE FIELD xmescrtdt name="construct.b.xmescrtdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmesmodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmesmodid
            #add-point:ON ACTION controlp INFIELD xmesmodid name="construct.c.xmesmodid"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmesmodid  #顯示到畫面上
            NEXT FIELD xmesmodid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmesmodid
            #add-point:BEFORE FIELD xmesmodid name="construct.b.xmesmodid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmesmodid
            
            #add-point:AFTER FIELD xmesmodid name="construct.a.xmesmodid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmesmoddt
            #add-point:BEFORE FIELD xmesmoddt name="construct.b.xmesmoddt"
            
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON xmet002,xmet003,xmet004,xmet005,xmet006,xmet007,xmet008,xmet009,xmet010, 
          xmet011,xmet012,xmet013,xmet014
           FROM s_detail1[1].xmet002,s_detail1[1].xmet003,s_detail1[1].xmet004,s_detail1[1].xmet005, 
               s_detail1[1].xmet006,s_detail1[1].xmet007,s_detail1[1].xmet008,s_detail1[1].xmet009,s_detail1[1].xmet010, 
               s_detail1[1].xmet011,s_detail1[1].xmet012,s_detail1[1].xmet013,s_detail1[1].xmet014
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmet002
            #add-point:BEFORE FIELD xmet002 name="construct.b.page1.xmet002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmet002
            
            #add-point:AFTER FIELD xmet002 name="construct.a.page1.xmet002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmet002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmet002
            #add-point:ON ACTION controlp INFIELD xmet002 name="construct.c.page1.xmet002"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmet003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmet003
            #add-point:ON ACTION controlp INFIELD xmet003 name="construct.c.page1.xmet003"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '215'
            CALL q_oocq002_5()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmet003  #顯示到畫面上
            NEXT FIELD xmet003                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmet003
            #add-point:BEFORE FIELD xmet003 name="construct.b.page1.xmet003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmet003
            
            #add-point:AFTER FIELD xmet003 name="construct.a.page1.xmet003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmet004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmet004
            #add-point:ON ACTION controlp INFIELD xmet004 name="construct.c.page1.xmet004"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '221'
            CALL q_oocq002_5()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmet004  #顯示到畫面上
            NEXT FIELD xmet004                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmet004
            #add-point:BEFORE FIELD xmet004 name="construct.b.page1.xmet004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmet004
            
            #add-point:AFTER FIELD xmet004 name="construct.a.page1.xmet004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmet005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmet005
            #add-point:ON ACTION controlp INFIELD xmet005 name="construct.c.page1.xmet005"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaf001_15()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmet005  #顯示到畫面上
            NEXT FIELD xmet005                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmet005
            #add-point:BEFORE FIELD xmet005 name="construct.b.page1.xmet005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmet005
            
            #add-point:AFTER FIELD xmet005 name="construct.a.page1.xmet005"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmet006
            #add-point:BEFORE FIELD xmet006 name="construct.b.page1.xmet006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmet006
            
            #add-point:AFTER FIELD xmet006 name="construct.a.page1.xmet006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmet006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmet006
            #add-point:ON ACTION controlp INFIELD xmet006 name="construct.c.page1.xmet006"
          
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmet007
            #add-point:BEFORE FIELD xmet007 name="construct.b.page1.xmet007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmet007
            
            #add-point:AFTER FIELD xmet007 name="construct.a.page1.xmet007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmet007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmet007
            #add-point:ON ACTION controlp INFIELD xmet007 name="construct.c.page1.xmet007"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmet008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmet008
            #add-point:ON ACTION controlp INFIELD xmet008 name="construct.c.page1.xmet008"
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmet008  #顯示到畫面上
            NEXT FIELD xmet008                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmet008
            #add-point:BEFORE FIELD xmet008 name="construct.b.page1.xmet008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmet008
            
            #add-point:AFTER FIELD xmet008 name="construct.a.page1.xmet008"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmet009
            #add-point:BEFORE FIELD xmet009 name="construct.b.page1.xmet009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmet009
            
            #add-point:AFTER FIELD xmet009 name="construct.a.page1.xmet009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmet009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmet009
            #add-point:ON ACTION controlp INFIELD xmet009 name="construct.c.page1.xmet009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmet010
            #add-point:BEFORE FIELD xmet010 name="construct.b.page1.xmet010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmet010
            
            #add-point:AFTER FIELD xmet010 name="construct.a.page1.xmet010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmet010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmet010
            #add-point:ON ACTION controlp INFIELD xmet010 name="construct.c.page1.xmet010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmet011
            #add-point:BEFORE FIELD xmet011 name="construct.b.page1.xmet011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmet011
            
            #add-point:AFTER FIELD xmet011 name="construct.a.page1.xmet011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmet011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmet011
            #add-point:ON ACTION controlp INFIELD xmet011 name="construct.c.page1.xmet011"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmet012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmet012
            #add-point:ON ACTION controlp INFIELD xmet012 name="construct.c.page1.xmet012"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            CALL q_ooaj002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmet012  #顯示到畫面上
            NEXT FIELD xmet012                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmet012
            #add-point:BEFORE FIELD xmet012 name="construct.b.page1.xmet012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmet012
            
            #add-point:AFTER FIELD xmet012 name="construct.a.page1.xmet012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmet013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmet013
            #add-point:ON ACTION controlp INFIELD xmet013 name="construct.c.page1.xmet013"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmet013  #顯示到畫面上
            NEXT FIELD xmet013                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmet013
            #add-point:BEFORE FIELD xmet013 name="construct.b.page1.xmet013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmet013
            
            #add-point:AFTER FIELD xmet013 name="construct.a.page1.xmet013"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmet014
            #add-point:BEFORE FIELD xmet014 name="construct.b.page1.xmet014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmet014
            
            #add-point:AFTER FIELD xmet014 name="construct.a.page1.xmet014"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmet014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmet014
            #add-point:ON ACTION controlp INFIELD xmet014 name="construct.c.page1.xmet014"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON xmeu002,xmeu003,xmeu004,xmeu005,xmeu006,xmeu007,xmeu008,xmeu009,xmeu010, 
          xmeu011
           FROM s_detail2[1].xmeu002,s_detail2[1].xmeu003,s_detail2[1].xmeu004,s_detail2[1].xmeu005, 
               s_detail2[1].xmeu006,s_detail2[1].xmeu007,s_detail2[1].xmeu008,s_detail2[1].xmeu009,s_detail2[1].xmeu010, 
               s_detail2[1].xmeu011
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body2.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #Ctrlp:construct.c.page2.xmeu002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeu002
            #add-point:ON ACTION controlp INFIELD xmeu002 name="construct.c.page2.xmeu002"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '215'
            CALL q_oocq002_5()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmeu002  #顯示到畫面上
            NEXT FIELD xmeu002                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeu002
            #add-point:BEFORE FIELD xmeu002 name="construct.b.page2.xmeu002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeu002
            
            #add-point:AFTER FIELD xmeu002 name="construct.a.page2.xmeu002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmeu003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeu003
            #add-point:ON ACTION controlp INFIELD xmeu003 name="construct.c.page2.xmeu003"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaf001_15()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmeu003  #顯示到畫面上
            NEXT FIELD xmeu003                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeu003
            #add-point:BEFORE FIELD xmeu003 name="construct.b.page2.xmeu003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeu003
            
            #add-point:AFTER FIELD xmeu003 name="construct.a.page2.xmeu003"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeu004
            #add-point:BEFORE FIELD xmeu004 name="construct.b.page2.xmeu004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeu004
            
            #add-point:AFTER FIELD xmeu004 name="construct.a.page2.xmeu004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmeu004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeu004
            #add-point:ON ACTION controlp INFIELD xmeu004 name="construct.c.page2.xmeu004"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.xmeu005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeu005
            #add-point:ON ACTION controlp INFIELD xmeu005 name="construct.c.page2.xmeu005"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '221'
            CALL q_oocq002_5()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmeu005  #顯示到畫面上
            NEXT FIELD xmeu005                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeu005
            #add-point:BEFORE FIELD xmeu005 name="construct.b.page2.xmeu005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeu005
            
            #add-point:AFTER FIELD xmeu005 name="construct.a.page2.xmeu005"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeu006
            #add-point:BEFORE FIELD xmeu006 name="construct.b.page2.xmeu006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeu006
            
            #add-point:AFTER FIELD xmeu006 name="construct.a.page2.xmeu006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmeu006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeu006
            #add-point:ON ACTION controlp INFIELD xmeu006 name="construct.c.page2.xmeu006"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.xmeu007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeu007
            #add-point:ON ACTION controlp INFIELD xmeu007 name="construct.c.page2.xmeu007"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ecaa001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmeu007  #顯示到畫面上
            NEXT FIELD xmeu007                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeu007
            #add-point:BEFORE FIELD xmeu007 name="construct.b.page2.xmeu007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeu007
            
            #add-point:AFTER FIELD xmeu007 name="construct.a.page2.xmeu007"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeu008
            #add-point:BEFORE FIELD xmeu008 name="construct.b.page2.xmeu008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeu008
            
            #add-point:AFTER FIELD xmeu008 name="construct.a.page2.xmeu008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmeu008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeu008
            #add-point:ON ACTION controlp INFIELD xmeu008 name="construct.c.page2.xmeu008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeu009
            #add-point:BEFORE FIELD xmeu009 name="construct.b.page2.xmeu009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeu009
            
            #add-point:AFTER FIELD xmeu009 name="construct.a.page2.xmeu009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmeu009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeu009
            #add-point:ON ACTION controlp INFIELD xmeu009 name="construct.c.page2.xmeu009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeu010
            #add-point:BEFORE FIELD xmeu010 name="construct.b.page2.xmeu010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeu010
            
            #add-point:AFTER FIELD xmeu010 name="construct.a.page2.xmeu010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmeu010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeu010
            #add-point:ON ACTION controlp INFIELD xmeu010 name="construct.c.page2.xmeu010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeu011
            #add-point:BEFORE FIELD xmeu011 name="construct.b.page2.xmeu011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeu011
            
            #add-point:AFTER FIELD xmeu011 name="construct.a.page2.xmeu011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmeu011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeu011
            #add-point:ON ACTION controlp INFIELD xmeu011 name="construct.c.page2.xmeu011"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON xmezseq,xmez002,xmez003,xmez004,xmez005,xmez006,xmez007
           FROM s_detail3[1].xmezseq,s_detail3[1].xmez002,s_detail3[1].xmez003,s_detail3[1].xmez004, 
               s_detail3[1].xmez005,s_detail3[1].xmez006,s_detail3[1].xmez007
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body3.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmezseq
            #add-point:BEFORE FIELD xmezseq name="construct.b.page3.xmezseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmezseq
            
            #add-point:AFTER FIELD xmezseq name="construct.a.page3.xmezseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmezseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmezseq
            #add-point:ON ACTION controlp INFIELD xmezseq name="construct.c.page3.xmezseq"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page3.xmez002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmez002
            #add-point:ON ACTION controlp INFIELD xmez002 name="construct.c.page3.xmez002"
            #應用 a08 樣板自動產生(Version:1)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaf001_17()                    #呼叫開窗 
            DISPLAY g_qryparam.return1 TO xmez002  #顯示到畫面上
            NEXT FIELD xmez002                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmez002
            #add-point:BEFORE FIELD xmez002 name="construct.b.page3.xmez002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmez002
            
            #add-point:AFTER FIELD xmez002 name="construct.a.page3.xmez002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmez003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmez003
            #add-point:ON ACTION controlp INFIELD xmez003 name="construct.c.page3.xmez003"
            #應用 a08 樣板自動產生(Version:1)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooaj002()                       #呼叫開窗 
            DISPLAY g_qryparam.return1 TO xmez003  #顯示到畫面上
            NEXT FIELD xmez003                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmez003
            #add-point:BEFORE FIELD xmez003 name="construct.b.page3.xmez003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmez003
            
            #add-point:AFTER FIELD xmez003 name="construct.a.page3.xmez003"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmez004
            #add-point:BEFORE FIELD xmez004 name="construct.b.page3.xmez004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmez004
            
            #add-point:AFTER FIELD xmez004 name="construct.a.page3.xmez004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmez004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmez004
            #add-point:ON ACTION controlp INFIELD xmez004 name="construct.c.page3.xmez004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmez005
            #add-point:BEFORE FIELD xmez005 name="construct.b.page3.xmez005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmez005
            
            #add-point:AFTER FIELD xmez005 name="construct.a.page3.xmez005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmez005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmez005
            #add-point:ON ACTION controlp INFIELD xmez005 name="construct.c.page3.xmez005"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page3.xmez006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmez006
            #add-point:ON ACTION controlp INFIELD xmez006 name="construct.c.page3.xmez006"
            #應用 a08 樣板自動產生(Version:1)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE 
            
            CALL q_pmaa001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmez006  #顯示到畫面上
            NEXT FIELD xmez006                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmez006
            #add-point:BEFORE FIELD xmez006 name="construct.b.page3.xmez006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmez006
            
            #add-point:AFTER FIELD xmez006 name="construct.a.page3.xmez006"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmez007
            #add-point:BEFORE FIELD xmez007 name="construct.b.page3.xmez007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmez007
            
            #add-point:AFTER FIELD xmez007 name="construct.a.page3.xmez007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmez007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmez007
            #add-point:ON ACTION controlp INFIELD xmez007 name="construct.c.page3.xmez007"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
            INITIALIZE g_wc2_table2 TO NULL
 
            INITIALIZE g_wc2_table3 TO NULL
 
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "xmes_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "xmet_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "xmeu_t" 
                     LET g_wc2_table2 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "xmez_t" 
                     LET g_wc2_table3 = la_wc[li_idx].wc
 
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
 
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="axmi400.filter" >}
#應用 a50 樣板自動產生(Version:8)
#+ filter過濾功能
PRIVATE FUNCTION axmi400_filter()
   #add-point:filter段define name="filter.define_customerization"
   
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="filter.pre_function"
   
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON xmesdocno,xmes001
                          FROM s_browse[1].b_xmesdocno,s_browse[1].b_xmes001
 
         BEFORE CONSTRUCT
               DISPLAY axmi400_filter_parser('xmesdocno') TO s_browse[1].b_xmesdocno
            DISPLAY axmi400_filter_parser('xmes001') TO s_browse[1].b_xmes001
      
         #add-point:filter段cs_ctrl name="filter.cs_ctrl"
         
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL axmi400_filter_show('xmesdocno')
   CALL axmi400_filter_show('xmes001')
 
END FUNCTION
 
{</section>}
 
{<section id="axmi400.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION axmi400_filter_parser(ps_field)
   #add-point:filter段define name="filter_parser.define_customerization"
   
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="axmi400.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION axmi400_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = axmi400_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="axmi400.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION axmi400_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_xmet_d.clear()
   CALL g_xmet2_d.clear()
   CALL g_xmet3_d.clear()
 
   
   #add-point:query段other name="query.other"
   
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL axmi400_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL axmi400_browser_fill("")
      CALL axmi400_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL axmi400_filter_show('xmesdocno')
   CALL axmi400_filter_show('xmes001')
   CALL axmi400_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL axmi400_fetch("F") 
      #顯示單身筆數
      CALL axmi400_idx_chk()
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="axmi400.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION axmi400_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_xmes_m.xmesdocno = g_browser[g_current_idx].b_xmesdocno
   LET g_xmes_m.xmes001 = g_browser[g_current_idx].b_xmes001
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE axmi400_master_referesh USING g_site,g_xmes_m.xmesdocno,g_xmes_m.xmes001 INTO g_xmes_m.xmesdocno, 
       g_xmes_m.xmes001,g_xmes_m.xmesstus,g_xmes_m.xmesownid,g_xmes_m.xmesowndp,g_xmes_m.xmescrtid,g_xmes_m.xmescrtdp, 
       g_xmes_m.xmescrtdt,g_xmes_m.xmesmodid,g_xmes_m.xmesmoddt,g_xmes_m.xmesownid_desc,g_xmes_m.xmesowndp_desc, 
       g_xmes_m.xmescrtid_desc,g_xmes_m.xmescrtdp_desc,g_xmes_m.xmesmodid_desc
   
   #遮罩相關處理
   LET g_xmes_m_mask_o.* =  g_xmes_m.*
   CALL axmi400_xmes_t_mask()
   LET g_xmes_m_mask_n.* =  g_xmes_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmi400_set_act_visible()   
   CALL axmi400_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
   
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   
   #end add-point
   
   #保存單頭舊值
   LET g_xmes_m_t.* = g_xmes_m.*
   LET g_xmes_m_o.* = g_xmes_m.*
   
   LET g_data_owner = g_xmes_m.xmesownid      
   LET g_data_dept  = g_xmes_m.xmesowndp
   
   #重新顯示   
   CALL axmi400_show()
 
   
 
END FUNCTION
 
{</section>}
 
{<section id="axmi400.insert" >}
#+ 資料新增
PRIVATE FUNCTION axmi400_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_xmet_d.clear()   
   CALL g_xmet2_d.clear()  
   CALL g_xmet3_d.clear()  
 
 
   INITIALIZE g_xmes_m.* TO NULL             #DEFAULT 設定
   
   LET g_xmesdocno_t = NULL
   LET g_xmes001_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_xmes_m.xmesownid = g_user
      LET g_xmes_m.xmesowndp = g_dept
      LET g_xmes_m.xmescrtid = g_user
      LET g_xmes_m.xmescrtdp = g_dept 
      LET g_xmes_m.xmescrtdt = cl_get_current()
      LET g_xmes_m.xmesmodid = g_user
      LET g_xmes_m.xmesmoddt = cl_get_current()
      LET g_xmes_m.xmesstus = 'Y'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_xmes_m.xmes001 = "0"
      LET g_xmes_m.xmesstus = "Y"
 
  
      #add-point:單頭預設值 name="insert.default"
      
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_xmes_m_t.* = g_xmes_m.*
      LET g_xmes_m_o.* = g_xmes_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_xmes_m.xmesstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
 
    
      CALL axmi400_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_xmes_m.* TO NULL
         INITIALIZE g_xmet_d TO NULL
         INITIALIZE g_xmet2_d TO NULL
         INITIALIZE g_xmet3_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         
         #end add-point 
         CALL axmi400_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_xmet_d.clear()
      #CALL g_xmet2_d.clear()
      #CALL g_xmet3_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmi400_set_act_visible()   
   CALL axmi400_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_xmesdocno_t = g_xmes_m.xmesdocno
   LET g_xmes001_t = g_xmes_m.xmes001
 
   
   #組合新增資料的條件
   LET g_add_browse = " xmesent = " ||g_enterprise|| " AND xmessite = '" ||g_site|| "' AND",
                      " xmesdocno = '", g_xmes_m.xmesdocno, "' "
                      ," AND xmes001 = '", g_xmes_m.xmes001, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axmi400_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE axmi400_cl
   
   CALL axmi400_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE axmi400_master_referesh USING g_site,g_xmes_m.xmesdocno,g_xmes_m.xmes001 INTO g_xmes_m.xmesdocno, 
       g_xmes_m.xmes001,g_xmes_m.xmesstus,g_xmes_m.xmesownid,g_xmes_m.xmesowndp,g_xmes_m.xmescrtid,g_xmes_m.xmescrtdp, 
       g_xmes_m.xmescrtdt,g_xmes_m.xmesmodid,g_xmes_m.xmesmoddt,g_xmes_m.xmesownid_desc,g_xmes_m.xmesowndp_desc, 
       g_xmes_m.xmescrtid_desc,g_xmes_m.xmescrtdp_desc,g_xmes_m.xmesmodid_desc
   
   
   #遮罩相關處理
   LET g_xmes_m_mask_o.* =  g_xmes_m.*
   CALL axmi400_xmes_t_mask()
   LET g_xmes_m_mask_n.* =  g_xmes_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_xmes_m.xmesdocno,g_xmes_m.xmesl003,g_xmes_m.xmesl004,g_xmes_m.xmes001,g_xmes_m.xmesstus, 
       g_xmes_m.xmesownid,g_xmes_m.xmesownid_desc,g_xmes_m.xmesowndp,g_xmes_m.xmesowndp_desc,g_xmes_m.xmescrtid, 
       g_xmes_m.xmescrtid_desc,g_xmes_m.xmescrtdp,g_xmes_m.xmescrtdp_desc,g_xmes_m.xmescrtdt,g_xmes_m.xmesmodid, 
       g_xmes_m.xmesmodid_desc,g_xmes_m.xmesmoddt
   
   #add-point:新增結束後 name="insert.after"
   
   #end add-point 
   
   LET g_data_owner = g_xmes_m.xmesownid      
   LET g_data_dept  = g_xmes_m.xmesowndp
   
   #功能已完成,通報訊息中心
   CALL axmi400_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="axmi400.modify" >}
#+ 資料修改
PRIVATE FUNCTION axmi400_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING
 
   DEFINE l_wc2_table3   STRING
 
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   #保存單頭舊值
   LET g_xmes_m_t.* = g_xmes_m.*
   LET g_xmes_m_o.* = g_xmes_m.*
   
   IF g_xmes_m.xmesdocno IS NULL
   OR g_xmes_m.xmes001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_xmesdocno_t = g_xmes_m.xmesdocno
   LET g_xmes001_t = g_xmes_m.xmes001
 
   CALL s_transaction_begin()
   
   OPEN axmi400_cl USING g_enterprise, g_site,g_xmes_m.xmesdocno,g_xmes_m.xmes001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axmi400_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE axmi400_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axmi400_master_referesh USING g_site,g_xmes_m.xmesdocno,g_xmes_m.xmes001 INTO g_xmes_m.xmesdocno, 
       g_xmes_m.xmes001,g_xmes_m.xmesstus,g_xmes_m.xmesownid,g_xmes_m.xmesowndp,g_xmes_m.xmescrtid,g_xmes_m.xmescrtdp, 
       g_xmes_m.xmescrtdt,g_xmes_m.xmesmodid,g_xmes_m.xmesmoddt,g_xmes_m.xmesownid_desc,g_xmes_m.xmesowndp_desc, 
       g_xmes_m.xmescrtid_desc,g_xmes_m.xmescrtdp_desc,g_xmes_m.xmesmodid_desc
   
   #檢查是否允許此動作
   IF NOT axmi400_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_xmes_m_mask_o.* =  g_xmes_m.*
   CALL axmi400_xmes_t_mask()
   LET g_xmes_m_mask_n.* =  g_xmes_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
   #LET l_wc2_table3 = g_wc2_table3
   #LET l_wc2_table3 = " 1=1"
 
 
 
   
   CALL axmi400_show()
   #add-point:modify段show之後 name="modify.after_show"
   
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 
 
   #LET  g_wc2_table3 = l_wc2_table3 
 
 
 
    
   WHILE TRUE
      LET g_xmesdocno_t = g_xmes_m.xmesdocno
      LET g_xmes001_t = g_xmes_m.xmes001
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_xmes_m.xmesmodid = g_user 
LET g_xmes_m.xmesmoddt = cl_get_current()
LET g_xmes_m.xmesmodid_desc = cl_get_username(g_xmes_m.xmesmodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL axmi400_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE xmes_t SET (xmesmodid,xmesmoddt) = (g_xmes_m.xmesmodid,g_xmes_m.xmesmoddt)
          WHERE xmesent = g_enterprise AND xmessite = g_site AND xmesdocno = g_xmesdocno_t
            AND xmes001 = g_xmes001_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_xmes_m.* = g_xmes_m_t.*
            CALL axmi400_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_xmes_m.xmesdocno != g_xmes_m_t.xmesdocno
      OR g_xmes_m.xmes001 != g_xmes_m_t.xmes001
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         
         #end add-point
         
         #更新單身key值
         UPDATE xmet_t SET xmetdocno = g_xmes_m.xmesdocno
                                       ,xmet001 = g_xmes_m.xmes001
 
          WHERE xmetent = g_enterprise AND xmetsite = g_site AND xmetdocno = g_xmes_m_t.xmesdocno
            AND xmet001 = g_xmes_m_t.xmes001
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "xmet_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmet_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update2"
         
         #end add-point
         
         UPDATE xmeu_t
            SET xmeudocno = g_xmes_m.xmesdocno
               ,xmeu001 = g_xmes_m.xmes001
 
          WHERE xmeuent = g_enterprise AND xmeusite = g_site AND
                xmeudocno = g_xmesdocno_t
            AND xmeu001 = g_xmes001_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update2"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "xmeu_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmeu_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update2"
         
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update3"
         
         #end add-point
         
         UPDATE xmez_t
            SET xmezdocno = g_xmes_m.xmesdocno
               ,xmez001 = g_xmes_m.xmes001
 
          WHERE xmezent = g_enterprise AND xmezsite = g_site AND
                xmezdocno = g_xmesdocno_t
            AND xmez001 = g_xmes001_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update3"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "xmez_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmez_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update3"
         
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmi400_set_act_visible()   
   CALL axmi400_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " xmesent = " ||g_enterprise|| " AND xmessite = '" ||g_site|| "' AND",
                      " xmesdocno = '", g_xmes_m.xmesdocno, "' "
                      ," AND xmes001 = '", g_xmes_m.xmes001, "' "
 
   #填到對應位置
   CALL axmi400_browser_fill("")
 
   CLOSE axmi400_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL axmi400_msgcentre_notify('modify')
 
END FUNCTION 
 
{</section>}
 
{<section id="axmi400.input" >}
#+ 資料輸入
PRIVATE FUNCTION axmi400_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE  l_success1            LIKE type_t.num5
   DEFINE  l_success             LIKE type_t.num5
   DEFINE  l_len                 LIKE type_t.num5
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xmes_m.xmesdocno,g_xmes_m.xmesl003,g_xmes_m.xmesl004,g_xmes_m.xmes001,g_xmes_m.xmesstus, 
       g_xmes_m.xmesownid,g_xmes_m.xmesownid_desc,g_xmes_m.xmesowndp,g_xmes_m.xmesowndp_desc,g_xmes_m.xmescrtid, 
       g_xmes_m.xmescrtid_desc,g_xmes_m.xmescrtdp,g_xmes_m.xmescrtdp_desc,g_xmes_m.xmescrtdt,g_xmes_m.xmesmodid, 
       g_xmes_m.xmesmodid_desc,g_xmes_m.xmesmoddt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT xmet002,xmet003,xmet004,xmet005,xmet006,xmet007,xmet008,xmet009,xmet010, 
       xmet011,xmet012,xmet013,xmet014 FROM xmet_t WHERE xmetent=? AND xmetsite=? AND xmetdocno=? AND  
       xmet001=? AND xmet002=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmi400_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql name="input.define_sql2"
   
   #end add-point    
   LET g_forupd_sql = "SELECT xmeu002,xmeu003,xmeu004,xmeu005,xmeu006,xmeu007,xmeu008,xmeu009,xmeu010, 
       xmeu011 FROM xmeu_t WHERE xmeuent=? AND xmeusite=? AND xmeudocno=? AND xmeu001=? AND xmeu002=?  
       AND xmeu003=? AND xmeu004=? AND xmeu005=? AND xmeu006=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql2"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmi400_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql3"
   
   #end add-point    
   LET g_forupd_sql = "SELECT xmezseq,xmez002,xmez003,xmez004,xmez005,xmez006,xmez007 FROM xmez_t WHERE  
       xmezent=? AND xmezsite=? AND xmezdocno=? AND xmez001=? AND xmezseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql3"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmi400_bcl3 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql name="input.other_sql"
   
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL axmi400_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   
   #end add-point
   CALL axmi400_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_xmes_m.xmesdocno,g_xmes_m.xmesl003,g_xmes_m.xmesl004,g_xmes_m.xmes001,g_xmes_m.xmesstus 
 
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   LET l_success1 = FALSE
   LET g_errshow = 1
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="axmi400.input.head" >}
      #單頭段
      INPUT BY NAME g_xmes_m.xmesdocno,g_xmes_m.xmesl003,g_xmes_m.xmesl004,g_xmes_m.xmes001,g_xmes_m.xmesstus  
 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item name="input.master_input.update_item"
               IF NOT cl_null(g_xmes_m.xmesdocno) THEN
                  CALL n_xmesl(g_xmes_m.xmesdocno)
                  CALL axmi400_xmesdocno_ref()
               END IF
               #END add-point
            END IF
 
 
 
 
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN axmi400_cl USING g_enterprise, g_site,g_xmes_m.xmesdocno,g_xmes_m.xmes001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axmi400_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE axmi400_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            LET g_master_multi_table_t.xmesldocno = g_xmes_m.xmesdocno
LET g_master_multi_table_t.xmesl003 = g_xmes_m.xmesl003
LET g_master_multi_table_t.xmesl004 = g_xmes_m.xmesl004
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.xmesldocno = ''
LET g_master_multi_table_t.xmesl003 = ''
LET g_master_multi_table_t.xmesl004 = ''
 
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL axmi400_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            
            #end add-point
            CALL axmi400_set_no_entry(p_cmd)
    
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmesdocno
            #add-point:BEFORE FIELD xmesdocno name="input.b.xmesdocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmesdocno
            
            #add-point:AFTER FIELD xmesdocno name="input.a.xmesdocno"
            #此段落由子樣板a05產生
            #ming 20141201 modify -------------------------(S) 
            #LET g_xmes_m.xmesl003 = ''
            #LET g_xmes_m.xmesl004 = ''
            #DISPLAY BY NAME g_xmes_m.xmesl003
            #DISPLAY BY NAME g_xmes_m.xmesl004
            #避免copy時，多語言被清掉   
            IF l_cmd_t != 'r' THEN
               LET g_xmes_m.xmesl003 = ''
               LET g_xmes_m.xmesl004 = ''
               DISPLAY BY NAME g_xmes_m.xmesl003
               DISPLAY BY NAME g_xmes_m.xmesl004
            END IF
            #ming 20141201 modify -------------------------(E) 
            #ming 20141201 modify -------------------------(S) 
            #IF NOT cl_null(g_xmes_m.xmesdocno) AND NOT cl_null(g_xmes_m.xmes001) THEN 
            #   IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xmes_m.xmesdocno != g_xmesdocno_t  OR g_xmes_m.xmes001 != g_xmes001_t )) THEN 
            #      IF NOT axmi400_xmes001_chk() THEN
            #         LET g_xmes_m.xmesdocno = g_xmesdocno_t
            #         DISPLAY BY NAME g_xmes_m.xmesdocno
            #         CALL axmi400_xmesdocno_ref()
            #         NEXT FIELD CURRENT
            #      END IF
            #   END IF
            #END IF
            #修改處理邏輯 
            IF NOT cl_null(g_xmes_m.xmesdocno) THEN
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xmes_m.xmesdocno != g_xmesdocno_t )) THEN
                  LET l_cnt = 0
                  SELECT COUNT(*) INTO l_cnt
                    FROM xmes_t
                   WHERE xmesent = g_enterprise
                     AND xmessite = g_site
                     AND xmesdocno = g_xmes_m.xmesdocno
                  IF l_cnt > 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend = ''
                     LET g_errparam.code   = 'axm-00321'
                     LET g_errparam.popup  = TRUE
                     CALL cl_err()

                     LET g_xmes_m.xmesdocno = g_xmesdocno_t
                     DISPLAY BY NAME g_xmes_m.xmesdocno 
                     CALL axmi400_xmesdocno_ref()
                     NEXT FIELD CURRENT
                  END IF                  
               END IF

               IF NOT cl_null(g_xmes_m.xmes001) THEN
#150424 by whitney mark start
#                  IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xmes_m.xmesdocno != g_xmesdocno_t  OR g_xmes_m.xmes001 != g_xmes001_t )) THEN
#                     IF NOT axmi400_xmes001_chk() THEN
#                        LET g_xmes_m.xmesdocno = g_xmesdocno_t
#                        DISPLAY BY NAME g_xmes_m.xmesdocno
#                        CALL axmi400_xmesdocno_ref()
#                        NEXT FIELD CURRENT
#                     END IF
#                  END IF
#150424 by whitney mark end
                  CALL axmi400_xmesdocno_ref()
               ELSE
                  SELECT MAX(xmes001) + 1 INTO g_xmes_m.xmes001
                    FROM xmes_t
                   WHERE xmesent    = g_enterprise
                     AND xmessite   = g_site
                     AND xmesdocno = g_xmes_m.xmesdocno
                  IF cl_null(g_xmes_m.xmes001) THEN
                     LET g_xmes_m.xmes001 = 0
                  END IF
                  DISPLAY BY NAME g_xmes_m.xmes001

                  LET g_xmes_m_t.xmes001 = g_xmes_m.xmes001
               END IF
            END IF
            #ming 20141201 modify -------------------------(E) 

            #ming 20141201 mark ---------------------------(S) 
            #CALL axmi400_xmesdocno_ref()
            #ming 20141201 mark ---------------------------(E) 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmesdocno
            #add-point:ON CHANGE xmesdocno name="input.g.xmesdocno"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmesl003
            #add-point:BEFORE FIELD xmesl003 name="input.b.xmesl003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmesl003
            
            #add-point:AFTER FIELD xmesl003 name="input.a.xmesl003"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmesl003
            #add-point:ON CHANGE xmesl003 name="input.g.xmesl003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmesl004
            #add-point:BEFORE FIELD xmesl004 name="input.b.xmesl004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmesl004
            
            #add-point:AFTER FIELD xmesl004 name="input.a.xmesl004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmesl004
            #add-point:ON CHANGE xmesl004 name="input.g.xmesl004"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmes001
            
            #add-point:AFTER FIELD xmes001 name="input.a.xmes001"
#150424 by whitney mark start
#            #重複性檢查
#            IF NOT cl_null(g_xmes_m.xmesdocno) AND NOT cl_null(g_xmes_m.xmes001) THEN 
#               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xmes_m.xmesdocno != g_xmesdocno_t  OR g_xmes_m.xmes001 != g_xmes001_t )) THEN 
#                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmes_t WHERE "||"xmesent = '" ||g_enterprise|| "' AND xmessite = '" ||g_site|| "' AND "||"xmesdocno = '"||g_xmes_m.xmesdocno ||"' AND "|| "xmes001 = '"||g_xmes_m.xmes001 ||"'",'std-00004',0) THEN 
#                     LET g_xmes_m.xmes001 = g_xmes_m_t.xmes001
#                     DISPLAY BY NAME g_xmes_m.xmes001 
#                     NEXT FIELD CURRENT
#                  END IF
#               END IF
#            END IF   
#            #校驗
#            IF NOT cl_null(g_xmes_m.xmesdocno) AND NOT cl_null(g_xmes_m.xmes001) THEN 
#               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xmes_m.xmesdocno != g_xmesdocno_t  OR g_xmes_m.xmes001 != g_xmes001_t )) THEN 
#                  IF NOT axmi400_xmes001_chk() THEN
#                     LET g_xmes_m.xmes001 = g_xmes_m_t.xmes001
#                     DISPLAY BY NAME g_xmes_m.xmes001
#                     NEXT FIELD CURRENT
#                  END IF
#               END IF
#            END IF
#150424 by whitney mark end
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmes001
            #add-point:BEFORE FIELD xmes001 name="input.b.xmes001"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmes001
            #add-point:ON CHANGE xmes001 name="input.g.xmes001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmesstus
            #add-point:BEFORE FIELD xmesstus name="input.b.xmesstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmesstus
            
            #add-point:AFTER FIELD xmesstus name="input.a.xmesstus"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmesstus
            #add-point:ON CHANGE xmesstus name="input.g.xmesstus"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.xmesdocno
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmesdocno
            #add-point:ON ACTION controlp INFIELD xmesdocno name="input.c.xmesdocno"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmesl003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmesl003
            #add-point:ON ACTION controlp INFIELD xmesl003 name="input.c.xmesl003"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmesl004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmesl004
            #add-point:ON ACTION controlp INFIELD xmesl004 name="input.c.xmesl004"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmes001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmes001
            #add-point:ON ACTION controlp INFIELD xmes001 name="input.c.xmes001"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmesstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmesstus
            #add-point:ON ACTION controlp INFIELD xmesstus name="input.c.xmesstus"
            
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_xmes_m.xmesdocno,g_xmes_m.xmes001
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
 
               #end add-point
               
               INSERT INTO xmes_t (xmesent, xmessite,xmesdocno,xmes001,xmesstus,xmesownid,xmesowndp, 
                   xmescrtid,xmescrtdp,xmescrtdt,xmesmodid,xmesmoddt)
               VALUES (g_enterprise, g_site,g_xmes_m.xmesdocno,g_xmes_m.xmes001,g_xmes_m.xmesstus,g_xmes_m.xmesownid, 
                   g_xmes_m.xmesowndp,g_xmes_m.xmescrtid,g_xmes_m.xmescrtdp,g_xmes_m.xmescrtdt,g_xmes_m.xmesmodid, 
                   g_xmes_m.xmesmoddt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_xmes_m:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_xmes_m.xmesdocno = g_master_multi_table_t.xmesldocno AND
         g_xmes_m.xmesl003 = g_master_multi_table_t.xmesl003 AND 
         g_xmes_m.xmesl004 = g_master_multi_table_t.xmesl004  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'xmeslent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_xmes_m.xmesdocno
            LET l_field_keys[02] = 'xmesldocno'
            LET l_var_keys_bak[02] = g_master_multi_table_t.xmesldocno
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'xmesl002'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_xmes_m.xmesl003
            LET l_fields[01] = 'xmesl003'
            LET l_vars[02] = g_xmes_m.xmesl004
            LET l_fields[02] = 'xmesl004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'xmesl_t')
         END IF 
 
               
               #add-point:單頭新增後 name="input.head.a_insert"
               #add--2015/07/16 By shiun--(S)
               CALL s_transaction_end('Y','0') #單頭commit
               CALL s_transaction_begin()
               LET l_cnt = 0
               SELECT COUNT(*) INTO l_cnt
                 FROM bmaa_t
                WHERE bmaaent = g_enterprise
                  AND bmaasite = g_site
                  AND bmaa001 = g_xmes_m.xmesdocno
                  AND bmaa002 = ' '
               IF l_cnt > 0 THEN
                  IF cl_ask_confirm('axm-00702') THEN
                     LET g_item_ac = 1
                     INITIALIZE g_bmba TO NULL
                     CALL axmi400_item_bom(g_xmes_m.xmesdocno)
                     IF axmi400_xmet_ins(g_xmes_m.xmesdocno,g_xmes_m.xmes001) THEN
                        IF axmi400_xmeu_ins(g_xmes_m.xmesdocno,g_xmes_m.xmes001) THEN
                           CALL s_transaction_end('Y','0')
                        ELSE
                           CALL s_transaction_end('N','0')
                        END IF
                     ELSE
                        CALL s_transaction_end('N','0')                        
                     END IF                        
                  END IF
               END IF
               CALL axmi400_b_fill()
               #add--2015/07/16 By shiun--(E)
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL axmi400_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL axmi400_b_fill()
                  CALL axmi400_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               
               #end add-point
               
               #將遮罩欄位還原
               CALL axmi400_xmes_t_mask_restore('restore_mask_o')
               
               UPDATE xmes_t SET (xmesdocno,xmes001,xmesstus,xmesownid,xmesowndp,xmescrtid,xmescrtdp, 
                   xmescrtdt,xmesmodid,xmesmoddt) = (g_xmes_m.xmesdocno,g_xmes_m.xmes001,g_xmes_m.xmesstus, 
                   g_xmes_m.xmesownid,g_xmes_m.xmesowndp,g_xmes_m.xmescrtid,g_xmes_m.xmescrtdp,g_xmes_m.xmescrtdt, 
                   g_xmes_m.xmesmodid,g_xmes_m.xmesmoddt)
                WHERE xmesent = g_enterprise AND xmessite = g_site AND xmesdocno = g_xmesdocno_t
                  AND xmes001 = g_xmes001_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "xmes_t:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_xmes_m.xmesdocno = g_master_multi_table_t.xmesldocno AND
         g_xmes_m.xmesl003 = g_master_multi_table_t.xmesl003 AND 
         g_xmes_m.xmesl004 = g_master_multi_table_t.xmesl004  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'xmeslent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_xmes_m.xmesdocno
            LET l_field_keys[02] = 'xmesldocno'
            LET l_var_keys_bak[02] = g_master_multi_table_t.xmesldocno
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'xmesl002'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_xmes_m.xmesl003
            LET l_fields[01] = 'xmesl003'
            LET l_vars[02] = g_xmes_m.xmesl004
            LET l_fields[02] = 'xmesl004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'xmesl_t')
         END IF 
 
               
               #將遮罩欄位進行遮蔽
               CALL axmi400_xmes_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_xmes_m_t)
               LET g_log2 = util.JSON.stringify(g_xmes_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_xmesdocno_t = g_xmes_m.xmesdocno
            LET g_xmes001_t = g_xmes_m.xmes001
 
            
      END INPUT
   
 
{</section>}
 
{<section id="axmi400.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_xmet_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xmet_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axmi400_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_xmet_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN axmi400_cl USING g_enterprise, g_site,g_xmes_m.xmesdocno,g_xmes_m.xmes001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axmi400_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE axmi400_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_xmet_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xmet_d[l_ac].xmet002 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xmet_d_t.* = g_xmet_d[l_ac].*  #BACKUP
               LET g_xmet_d_o.* = g_xmet_d[l_ac].*  #BACKUP
               CALL axmi400_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               
               #end add-point  
               CALL axmi400_set_no_entry_b(l_cmd)
               IF NOT axmi400_lock_b("xmet_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axmi400_bcl INTO g_xmet_d[l_ac].xmet002,g_xmet_d[l_ac].xmet003,g_xmet_d[l_ac].xmet004, 
                      g_xmet_d[l_ac].xmet005,g_xmet_d[l_ac].xmet006,g_xmet_d[l_ac].xmet007,g_xmet_d[l_ac].xmet008, 
                      g_xmet_d[l_ac].xmet009,g_xmet_d[l_ac].xmet010,g_xmet_d[l_ac].xmet011,g_xmet_d[l_ac].xmet012, 
                      g_xmet_d[l_ac].xmet013,g_xmet_d[l_ac].xmet014
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_xmet_d_t.xmet002,":",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_xmet_d_mask_o[l_ac].* =  g_xmet_d[l_ac].*
                  CALL axmi400_xmet_t_mask()
                  LET g_xmet_d_mask_n[l_ac].* =  g_xmet_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL axmi400_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmet_d[l_ac].* TO NULL 
            INITIALIZE g_xmet_d_t.* TO NULL 
            INITIALIZE g_xmet_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_xmet_d[l_ac].xmet009 = "1"
      LET g_xmet_d[l_ac].xmet010 = "1"
      LET g_xmet_d[l_ac].xmet011 = "N"
 
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            
            #end add-point
            LET g_xmet_d_t.* = g_xmet_d[l_ac].*     #新輸入資料
            LET g_xmet_d_o.* = g_xmet_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axmi400_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            
            #end add-point
            CALL axmi400_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmet_d[li_reproduce_target].* = g_xmet_d[li_reproduce].*
 
               LET g_xmet_d[li_reproduce_target].xmet002 = NULL
 
            END IF
            
 
            #add-point:modify段before insert name="input.body.before_insert"
            #項次+1000
            IF cl_null(g_xmet_d[l_ac].xmet002) THEN 
               SELECT MAX(xmet002) INTO g_xmet_d[l_ac].xmet002 FROM xmet_t
                WHERE xmetent = g_enterprise
                  AND xmetsite = g_site
                  AND xmetdocno = g_xmes_m.xmesdocno
                  AND xmet001 = g_xmes_m.xmes001
               IF cl_null(g_xmet_d[l_ac].xmet002) THEN 
                  LET g_xmet_d[l_ac].xmet002 = 1000
               ELSE      
                  LET g_xmet_d[l_ac].xmet002 = g_xmet_d[l_ac].xmet002 + 1000
               END IF              
             END IF 
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            #若是空值，則給予一個空白值
            IF g_xmet_d[l_ac].xmet003 IS NULL THEN
               LET g_xmet_d[l_ac].xmet003 = ' '
            END IF
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM xmet_t 
             WHERE xmetent = g_enterprise AND xmetsite = g_site AND xmetdocno = g_xmes_m.xmesdocno
               AND xmet001 = g_xmes_m.xmes001
 
               AND xmet002 = g_xmet_d[l_ac].xmet002
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmes_m.xmesdocno
               LET gs_keys[2] = g_xmes_m.xmes001
               LET gs_keys[3] = g_xmet_d[g_detail_idx].xmet002
               CALL axmi400_insert_b('xmet_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               INITIALIZE g_xmet_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmet_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axmi400_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_xmes_m.xmesdocno
               LET gs_keys[gs_keys.getLength()+1] = g_xmes_m.xmes001
 
               LET gs_keys[gs_keys.getLength()+1] = g_xmet_d_t.xmet002
 
            
               #刪除同層單身
               IF NOT axmi400_delete_b('xmet_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmi400_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT axmi400_key_delete_b(gs_keys,'xmet_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmi400_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
               
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE axmi400_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
               
               #end add-point
               LET l_count = g_xmet_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_xmet_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmet002
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmet_d[l_ac].xmet002,"1000.000","1","","","azz-00079",1) THEN
               NEXT FIELD xmet002
            END IF 
 
 
 
            #add-point:AFTER FIELD xmet002 name="input.a.page1.xmet002"

            #此段落由子樣板a05產生
            IF  g_xmes_m.xmesdocno IS NOT NULL AND g_xmes_m.xmes001 IS NOT NULL AND g_xmet_d[g_detail_idx].xmet002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmes_m.xmesdocno != g_xmesdocno_t OR g_xmes_m.xmes001 != g_xmes001_t OR g_xmet_d[g_detail_idx].xmet002 != g_xmet_d_t.xmet002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmet_t WHERE "||"xmetent = '" ||g_enterprise|| "' AND xmetsite = '" ||g_site|| "' AND "||"xmetdocno = '"||g_xmes_m.xmesdocno ||"' AND "|| "xmet001 = '"||g_xmes_m.xmes001 ||"' AND "|| "xmet002 = '"||g_xmet_d[g_detail_idx].xmet002 ||"'",'std-00004',0) THEN 
                     LET g_xmet_d[g_detail_idx].xmet002 = g_xmet_d_t.xmet002
                     DISPLAY BY NAME g_xmet_d[g_detail_idx].xmet002 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmet002
            #add-point:BEFORE FIELD xmet002 name="input.b.page1.xmet002"
 
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmet002
            #add-point:ON CHANGE xmet002 name="input.g.page1.xmet002"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmet003
            
            #add-point:AFTER FIELD xmet003 name="input.a.page1.xmet003"
            #若是空值，則給予一個空白值
            IF g_xmet_d[l_ac].xmet003 IS NULL THEN
               LET g_xmet_d[l_ac].xmet003 = ' '
            END IF
            
            LET g_xmet_d[l_ac].xmet003_desc = ''
            DISPLAY BY NAME g_xmet_d[l_ac].xmet003_desc
            IF NOT cl_null(g_xmet_d[l_ac].xmet003) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmet_d[l_ac].xmet003 != g_xmet_d_t.xmet003 OR g_xmet_d_t.xmet003 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  IF NOT s_azzi650_chk_exist('215',g_xmet_d[l_ac].xmet003) THEN
                     LET g_xmet_d[l_ac].xmet003 = g_xmet_d_t.xmet003
                     DISPLAY BY NAME g_xmet_d[l_ac].xmet003
                     CALL axmi400_xmet003_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL axmi400_xmet003_ref()
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmet003
            #add-point:BEFORE FIELD xmet003 name="input.b.page1.xmet003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmet003
            #add-point:ON CHANGE xmet003 name="input.g.page1.xmet003"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmet004
            
            #add-point:AFTER FIELD xmet004 name="input.a.page1.xmet004"
            LET g_xmet_d[l_ac].xmet004_desc = ''
            DISPLAY BY NAME g_xmet_d[l_ac].xmet004_desc
            IF NOT cl_null(g_xmet_d[l_ac].xmet004) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmet_d[l_ac].xmet004 != g_xmet_d_t.xmet004 OR g_xmet_d_t.xmet004 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  IF NOT s_azzi650_chk_exist('221',g_xmet_d[l_ac].xmet004) THEN
                     LET g_xmet_d[l_ac].xmet004 = g_xmet_d_t.xmet004
                     DISPLAY BY NAME g_xmet_d[l_ac].xmet004
                     CALL axmi400_xmet004_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL axmi400_xmet004_ref()
           
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmet004
            #add-point:BEFORE FIELD xmet004 name="input.b.page1.xmet004"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmet004
            #add-point:ON CHANGE xmet004 name="input.g.page1.xmet004"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmet005
            
            #add-point:AFTER FIELD xmet005 name="input.a.page1.xmet005"
            LET g_xmet_d[l_ac].xmet005_desc = ''
            LET g_xmet_d[l_ac].xmet005_desc_desc = ''
            DISPLAY BY NAME g_xmet_d[l_ac].xmet005_desc
            DISPLAY BY NAME g_xmet_d[l_ac].xmet005_desc_desc
            IF NOT cl_null(g_xmet_d[l_ac].xmet005) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmet_d[l_ac].xmet005 != g_xmet_d_t.xmet005 OR g_xmet_d_t.xmet005 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmet_d[l_ac].xmet005
                  IF NOT cl_chk_exist("v_imaf001_14") THEN
                     LET g_xmet_d[l_ac].xmet005 = g_xmet_d_t.xmet005
                     DISPLAY BY NAME g_xmet_d[l_ac].xmet005
                     CALL axmi400_xmet005_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL axmi400_xmet005_ref()
            
            #預設[T:料件據點進銷存檔]設置的銷售單位
            #先判斷單位是否有值，沒值才給預設
            IF cl_null(g_xmet_d[l_ac].xmet008) THEN
               SELECT imaf112 INTO g_xmet_d[l_ac].xmet008
                 FROM imaf_t
                WHERE imafent = g_enterprise AND imafsite = g_site AND imaf001 = g_xmet_d[l_ac].xmet005
            END IF
            #當料件有使用產品特徵功能時此欄位才可輸入
            CALL axmi400_set_entry_b(l_cmd)
            CALL axmi400_set_no_entry_b(l_cmd)
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmet005
            #add-point:BEFORE FIELD xmet005 name="input.b.page1.xmet005"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmet005
            #add-point:ON CHANGE xmet005 name="input.g.page1.xmet005"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmet006
            
            #add-point:AFTER FIELD xmet006 name="input.a.page1.xmet006"
            LET g_xmet_d[l_ac].xmet006_desc = ''
            IF NOT cl_null(g_xmet_d[l_ac].xmet006) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmet_d[l_ac].xmet006 != g_xmet_d_t.xmet006 OR g_xmet_d_t.xmet006 IS NULL )) THEN
                  IF NOT s_feature_check(g_xmet_d[l_ac].xmet005,g_xmet_d[l_ac].xmet006) THEN
                     LET g_xmet_d[l_ac].xmet006 = g_xmet_d_t.xmet006
                     CALL s_feature_description(g_xmet_d[l_ac].xmet005,g_xmet_d[l_ac].xmet006) RETURNING l_success,g_xmet_d[l_ac].xmet006_desc
                     NEXT FIELD CURRENT
                  END IF
                  #151224-00025#2--add--start--
                  IF NOT s_feature_direct_input(g_xmet_d[l_ac].xmet005,g_xmet_d[l_ac].xmet006,g_xmet_d_t.xmet006,'',g_site) THEN
                     NEXT FIELD CURRENT
                  END IF 
                  #151224-00025#2--add--end----
               END IF
            END IF
            CALL s_feature_description(g_xmet_d[l_ac].xmet005,g_xmet_d[l_ac].xmet006) RETURNING l_success,g_xmet_d[l_ac].xmet006_desc
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmet006
            #add-point:BEFORE FIELD xmet006 name="input.b.page1.xmet006"
            IF l_cmd = 'a' AND NOT cl_null(g_xmet_d[l_ac].xmet005) THEN
               CALL s_feature_single(g_xmet_d[l_ac].xmet005,g_xmet_d[l_ac].xmet006,g_site,g_xmes_m.xmesdocno)
                    RETURNING l_success1,g_xmet_d[l_ac].xmet006
               IF NOT l_success1 THEN
                  LET g_xmet_d[l_ac].xmet006 = g_xmet_d_t.xmet006
                  DISPLAY BY NAME g_xmet_d[l_ac].xmet006
               END IF
               CALL s_feature_description(g_xmet_d[l_ac].xmet005,g_xmet_d[l_ac].xmet006) RETURNING l_success,g_xmet_d[l_ac].xmet006_desc
            END IF
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmet006
            #add-point:ON CHANGE xmet006 name="input.g.page1.xmet006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmet007
            #add-point:BEFORE FIELD xmet007 name="input.b.page1.xmet007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmet007
            
            #add-point:AFTER FIELD xmet007 name="input.a.page1.xmet007"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmet007
            #add-point:ON CHANGE xmet007 name="input.g.page1.xmet007"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmet008
            
            #add-point:AFTER FIELD xmet008 name="input.a.page1.xmet008"
            LET g_xmet_d[l_ac].xmet008_desc = ''
            DISPLAY BY NAME g_xmet_d[l_ac].xmet008_desc
            IF NOT cl_null(g_xmet_d[l_ac].xmet008) THEN 
               IF p_cmd = 'a' OR p_cmd = 'u'  THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmet_d[l_ac].xmet005
                  LET g_chkparam.arg2 = g_xmet_d[l_ac].xmet008
                  IF NOT cl_chk_exist("v_imao002") THEN
                     LET g_xmet_d[l_ac].xmet008 = g_xmet_d_t.xmet008
                     DISPLAY BY NAME g_xmet_d[l_ac].xmet008
                     CALL axmi400_xmet008_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL axmi400_xmet008_ref()
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmet008
            #add-point:BEFORE FIELD xmet008 name="input.b.page1.xmet008"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmet008
            #add-point:ON CHANGE xmet008 name="input.g.page1.xmet008"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmet009
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmet_d[l_ac].xmet009,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD xmet009
            END IF 
 
 
 
            #add-point:AFTER FIELD xmet009 name="input.a.page1.xmet009"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmet009
            #add-point:BEFORE FIELD xmet009 name="input.b.page1.xmet009"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmet009
            #add-point:ON CHANGE xmet009 name="input.g.page1.xmet009"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmet010
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmet_d[l_ac].xmet010,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD xmet010
            END IF 
 
 
 
            #add-point:AFTER FIELD xmet010 name="input.a.page1.xmet010"
       
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmet010
            #add-point:BEFORE FIELD xmet010 name="input.b.page1.xmet010"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmet010
            #add-point:ON CHANGE xmet010 name="input.g.page1.xmet010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmet011
            #add-point:BEFORE FIELD xmet011 name="input.b.page1.xmet011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmet011
            
            #add-point:AFTER FIELD xmet011 name="input.a.page1.xmet011"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmet011
            #add-point:ON CHANGE xmet011 name="input.g.page1.xmet011"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmet012
            
            #add-point:AFTER FIELD xmet012 name="input.a.page1.xmet012"
            LET g_xmet_d[l_ac].xmet012_desc = ''
            DISPLAY BY NAME g_xmet_d[l_ac].xmet012_desc
            IF NOT cl_null(g_xmet_d[l_ac].xmet012) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmet_d[l_ac].xmet012 != g_xmet_d_t.xmet012 OR g_xmet_d_t.xmet012 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_site
                  LET g_chkparam.arg2 = g_xmet_d[l_ac].xmet012
                  #160318-00025#4--add--str
                  LET g_errshow = TRUE 
                  LET g_chkparam.err_str[1] = "aoo-00176:sub-01302|aooi150|",cl_get_progname("aooi150",g_lang,"2"),"|:EXEPROGaooi150"
                  #160318-00025#4--add--end
                  IF NOT cl_chk_exist("v_ooaj002") THEN
                     LET g_xmet_d[l_ac].xmet012 = g_xmet_d_t.xmet012
                     DISPLAY BY NAME g_xmet_d[l_ac].xmet012
                     CALL axmi400_xmet012_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL axmi400_xmet012_ref()
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmet012
            #add-point:BEFORE FIELD xmet012 name="input.b.page1.xmet012"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmet012
            #add-point:ON CHANGE xmet012 name="input.g.page1.xmet012"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmet013
            
            #add-point:AFTER FIELD xmet013 name="input.a.page1.xmet013"
            LET g_xmet_d[l_ac].xmet013_desc = ''
            DISPLAY BY NAME g_xmet_d[l_ac].xmet013_desc
            IF NOT cl_null(g_xmet_d[l_ac].xmet013) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmet_d[l_ac].xmet013 != g_xmet_d_t.xmet013 OR g_xmet_d_t.xmet013 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmet_d[l_ac].xmet013
                  IF NOT cl_chk_exist("v_pmaa001_1") THEN
                     LET g_xmet_d[l_ac].xmet013 = g_xmet_d_t.xmet013
                     DISPLAY BY NAME g_xmet_d[l_ac].xmet013
                     CALL axmi400_xmet013_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL axmi400_xmet013_ref()
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmet013
            #add-point:BEFORE FIELD xmet013 name="input.b.page1.xmet013"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmet013
            #add-point:ON CHANGE xmet013 name="input.g.page1.xmet013"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmet014
            #add-point:BEFORE FIELD xmet014 name="input.b.page1.xmet014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmet014
            
            #add-point:AFTER FIELD xmet014 name="input.a.page1.xmet014"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmet014
            #add-point:ON CHANGE xmet014 name="input.g.page1.xmet014"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.xmet002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmet002
            #add-point:ON ACTION controlp INFIELD xmet002 name="input.c.page1.xmet002"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmet003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmet003
            #add-point:ON ACTION controlp INFIELD xmet003 name="input.c.page1.xmet003"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmet_d[l_ac].xmet003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '215'
            
            CALL q_oocq002_5()                                #呼叫開窗

            LET g_xmet_d[l_ac].xmet003 = g_qryparam.return1              

            DISPLAY g_xmet_d[l_ac].xmet003 TO xmet003             
            CALL axmi400_xmet003_ref()
            NEXT FIELD xmet003                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.xmet004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmet004
            #add-point:ON ACTION controlp INFIELD xmet004 name="input.c.page1.xmet004"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmet_d[l_ac].xmet004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '221'
            
            CALL q_oocq002_5()                                #呼叫開窗

            LET g_xmet_d[l_ac].xmet004 = g_qryparam.return1              

            DISPLAY g_xmet_d[l_ac].xmet004 TO xmet004            
            CALL axmi400_xmet004_ref()
            NEXT FIELD xmet004                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.xmet005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmet005
            #add-point:ON ACTION controlp INFIELD xmet005 name="input.c.page1.xmet005"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmet_d[l_ac].xmet005             #給予default值
            
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_imaf001_15()                                #呼叫開窗

            LET g_xmet_d[l_ac].xmet005 = g_qryparam.return1              
            
            DISPLAY g_xmet_d[l_ac].xmet005 TO xmet005  
            CALL axmi400_xmet005_ref()
            NEXT FIELD xmet005                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.xmet006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmet006
            #add-point:ON ACTION controlp INFIELD xmet006 name="input.c.page1.xmet006"
            IF l_cmd = 'u' THEN
               CALL s_feature_single(g_xmet_d[l_ac].xmet005,g_xmet_d[l_ac].xmet006,g_site,g_xmes_m.xmesdocno)
                  RETURNING l_success1,g_xmet_d[l_ac].xmet006
               IF NOT l_success1 THEN
                  LET g_xmet_d[l_ac].xmet006 = g_xmet_d_t.xmet006
                  DISPLAY BY NAME g_xmet_d[l_ac].xmet006
               END IF
               CALL s_feature_description(g_xmet_d[l_ac].xmet005,g_xmet_d[l_ac].xmet006) RETURNING l_success,g_xmet_d[l_ac].xmet006_desc
            END IF
            NEXT FIELD xmet006
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmet007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmet007
            #add-point:ON ACTION controlp INFIELD xmet007 name="input.c.page1.xmet007"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmet008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmet008
            #add-point:ON ACTION controlp INFIELD xmet008 name="input.c.page1.xmet008"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmet_d[l_ac].xmet008             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_xmet_d[l_ac].xmet005        
            CALL q_imao002()                                #呼叫開窗
            LET g_xmet_d[l_ac].xmet008 = g_qryparam.return1              
            DISPLAY g_xmet_d[l_ac].xmet008 TO xmet008              
            CALL axmi400_xmet008_ref()
            NEXT FIELD xmet008                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.xmet009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmet009
            #add-point:ON ACTION controlp INFIELD xmet009 name="input.c.page1.xmet009"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmet010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmet010
            #add-point:ON ACTION controlp INFIELD xmet010 name="input.c.page1.xmet010"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmet011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmet011
            #add-point:ON ACTION controlp INFIELD xmet011 name="input.c.page1.xmet011"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmet012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmet012
            #add-point:ON ACTION controlp INFIELD xmet012 name="input.c.page1.xmet012"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE   
            LET g_qryparam.default1 = g_xmet_d[l_ac].xmet012          
            LET g_qryparam.arg1 = g_site
            CALL q_ooaj002_1()                                #呼叫開窗
            LET g_xmet_d[l_ac].xmet012 = g_qryparam.return1              
            DISPLAY g_xmet_d[l_ac].xmet012 TO xmet012              
            CALL axmi400_xmet012_ref()
            NEXT FIELD xmet012                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.xmet013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmet013
            #add-point:ON ACTION controlp INFIELD xmet013 name="input.c.page1.xmet013"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmet_d[l_ac].xmet013             #給予default值
            
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_pmaa001_3()                                #呼叫開窗

            LET g_xmet_d[l_ac].xmet013 = g_qryparam.return1              
           
            DISPLAY g_xmet_d[l_ac].xmet013 TO xmet013   
            CALL axmi400_xmet013_ref()            
            NEXT FIELD xmet013                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.xmet014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmet014
            #add-point:ON ACTION controlp INFIELD xmet014 name="input.c.page1.xmet014"
            
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_xmet_d[l_ac].* = g_xmet_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE axmi400_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_xmet_d[l_ac].xmet002 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_xmet_d[l_ac].* = g_xmet_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               #若是空值，則給予一個空白值
               IF g_xmet_d[l_ac].xmet003 IS NULL THEN
                  LET g_xmet_d[l_ac].xmet003 = ' '
               END IF
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL axmi400_xmet_t_mask_restore('restore_mask_o')
      
               UPDATE xmet_t SET (xmetdocno,xmet001,xmet002,xmet003,xmet004,xmet005,xmet006,xmet007, 
                   xmet008,xmet009,xmet010,xmet011,xmet012,xmet013,xmet014) = (g_xmes_m.xmesdocno,g_xmes_m.xmes001, 
                   g_xmet_d[l_ac].xmet002,g_xmet_d[l_ac].xmet003,g_xmet_d[l_ac].xmet004,g_xmet_d[l_ac].xmet005, 
                   g_xmet_d[l_ac].xmet006,g_xmet_d[l_ac].xmet007,g_xmet_d[l_ac].xmet008,g_xmet_d[l_ac].xmet009, 
                   g_xmet_d[l_ac].xmet010,g_xmet_d[l_ac].xmet011,g_xmet_d[l_ac].xmet012,g_xmet_d[l_ac].xmet013, 
                   g_xmet_d[l_ac].xmet014)
                WHERE xmetent = g_enterprise AND xmetsite = g_site AND xmetdocno = g_xmes_m.xmesdocno 
                  AND xmet001 = g_xmes_m.xmes001 
 
                  AND xmet002 = g_xmet_d_t.xmet002 #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_xmet_d[l_ac].* = g_xmet_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmet_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     LET g_xmet_d[l_ac].* = g_xmet_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmet_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmes_m.xmesdocno
               LET gs_keys_bak[1] = g_xmesdocno_t
               LET gs_keys[2] = g_xmes_m.xmes001
               LET gs_keys_bak[2] = g_xmes001_t
               LET gs_keys[3] = g_xmet_d[g_detail_idx].xmet002
               LET gs_keys_bak[3] = g_xmet_d_t.xmet002
               CALL axmi400_update_b('xmet_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL axmi400_xmet_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_xmet_d[g_detail_idx].xmet002 = g_xmet_d_t.xmet002 
 
                  ) THEN
                  LET gs_keys[01] = g_xmes_m.xmesdocno
                  LET gs_keys[gs_keys.getLength()+1] = g_xmes_m.xmes001
 
                  LET gs_keys[gs_keys.getLength()+1] = g_xmet_d_t.xmet002
 
                  CALL axmi400_key_update_b(gs_keys,'xmet_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_xmes_m),util.JSON.stringify(g_xmet_d_t)
               LET g_log2 = util.JSON.stringify(g_xmes_m),util.JSON.stringify(g_xmet_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            
            #end add-point
            CALL axmi400_unlock_b("xmet_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
            
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_xmet_d[li_reproduce_target].* = g_xmet_d[li_reproduce].*
 
               LET g_xmet_d[li_reproduce_target].xmet002 = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_xmet_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_xmet_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_xmet2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body2.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xmet2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axmi400_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_xmet2_d.getLength()
            #add-point:資料輸入前 name="input.body2.before_input"
            
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmet2_d[l_ac].* TO NULL 
            INITIALIZE g_xmet2_d_t.* TO NULL 
            INITIALIZE g_xmet2_d_o.* TO NULL 
            #公用欄位給值(單身2)
            
            #自定義預設值(單身2)
                  LET g_xmet2_d[l_ac].xmeu008 = "0"
      LET g_xmet2_d[l_ac].xmeu009 = "0"
      LET g_xmet2_d[l_ac].xmeu010 = "1"
 
            #add-point:modify段before備份 name="input.body2.insert.before_bak"
            
            #end add-point
            LET g_xmet2_d_t.* = g_xmet2_d[l_ac].*     #新輸入資料
            LET g_xmet2_d_o.* = g_xmet2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axmi400_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body2.insert.after_set_entry_b"
            
            #end add-point
            CALL axmi400_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmet2_d[li_reproduce_target].* = g_xmet2_d[li_reproduce].*
 
               LET g_xmet2_d[li_reproduce_target].xmeu002 = NULL
               LET g_xmet2_d[li_reproduce_target].xmeu003 = NULL
               LET g_xmet2_d[li_reproduce_target].xmeu004 = NULL
               LET g_xmet2_d[li_reproduce_target].xmeu005 = NULL
               LET g_xmet2_d[li_reproduce_target].xmeu006 = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body2.before_insert"
  
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body2.before_row2"
           
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[2] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 2
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN axmi400_cl USING g_enterprise, g_site,g_xmes_m.xmesdocno,g_xmes_m.xmes001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axmi400_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE axmi400_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_xmet2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xmet2_d[l_ac].xmeu002 IS NOT NULL
               AND g_xmet2_d[l_ac].xmeu003 IS NOT NULL
               AND g_xmet2_d[l_ac].xmeu004 IS NOT NULL
               AND g_xmet2_d[l_ac].xmeu005 IS NOT NULL
               AND g_xmet2_d[l_ac].xmeu006 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_xmet2_d_t.* = g_xmet2_d[l_ac].*  #BACKUP
               LET g_xmet2_d_o.* = g_xmet2_d[l_ac].*  #BACKUP
               CALL axmi400_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body2.after_set_entry_b"
               
               #end add-point  
               CALL axmi400_set_no_entry_b(l_cmd)
               IF NOT axmi400_lock_b("xmeu_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axmi400_bcl2 INTO g_xmet2_d[l_ac].xmeu002,g_xmet2_d[l_ac].xmeu003,g_xmet2_d[l_ac].xmeu004, 
                      g_xmet2_d[l_ac].xmeu005,g_xmet2_d[l_ac].xmeu006,g_xmet2_d[l_ac].xmeu007,g_xmet2_d[l_ac].xmeu008, 
                      g_xmet2_d[l_ac].xmeu009,g_xmet2_d[l_ac].xmeu010,g_xmet2_d[l_ac].xmeu011
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_xmet2_d_mask_o[l_ac].* =  g_xmet2_d[l_ac].*
                  CALL axmi400_xmeu_t_mask()
                  LET g_xmet2_d_mask_n[l_ac].* =  g_xmet2_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL axmi400_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body2.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body2.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body2.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前 name="input.body2.b_delete"
               
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_xmes_m.xmesdocno
               LET gs_keys[gs_keys.getLength()+1] = g_xmes_m.xmes001
               LET gs_keys[gs_keys.getLength()+1] = g_xmet2_d_t.xmeu002
               LET gs_keys[gs_keys.getLength()+1] = g_xmet2_d_t.xmeu003
               LET gs_keys[gs_keys.getLength()+1] = g_xmet2_d_t.xmeu004
               LET gs_keys[gs_keys.getLength()+1] = g_xmet2_d_t.xmeu005
               LET gs_keys[gs_keys.getLength()+1] = g_xmet2_d_t.xmeu006
            
               #刪除同層單身
               IF NOT axmi400_delete_b('xmeu_t',gs_keys,"'2'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmi400_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT axmi400_key_delete_b(gs_keys,'xmeu_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmi400_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身2刪除中 name="input.body2.m_delete"
               
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE axmi400_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身2刪除後 name="input.body2.a_delete"
               
               #end add-point
               LET l_count = g_xmet_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body2.after_delete"
               
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_xmet2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前 name="input.body2.b_a_insert"
            #如果部位編號為空值，則給一個空格
            IF g_xmet2_d[l_ac].xmeu002 IS NULL THEN
               LET g_xmet2_d[l_ac].xmeu002 = ' '
            END IF
            #如果料件編號為空值，則給一個空格
            IF g_xmet2_d[l_ac].xmeu003 IS NULL THEN
               LET g_xmet2_d[l_ac].xmeu003 = ' '
            END IF
            #如果製程序為空值，則給一個空格
            IF g_xmet2_d[l_ac].xmeu004 IS NULL THEN
               LET g_xmet2_d[l_ac].xmeu004 = ' '
            END IF
            #如果作業序為空值，則給一個空格
            IF g_xmet2_d[l_ac].xmeu006 IS NULL THEN
               LET g_xmet2_d[l_ac].xmeu006 = ' '
            END IF
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM xmeu_t 
             WHERE xmeuent = g_enterprise AND xmeusite = g_site AND xmeudocno = g_xmes_m.xmesdocno
               AND xmeu001 = g_xmes_m.xmes001
               AND xmeu002 = g_xmet2_d[l_ac].xmeu002
               AND xmeu003 = g_xmet2_d[l_ac].xmeu003
               AND xmeu004 = g_xmet2_d[l_ac].xmeu004
               AND xmeu005 = g_xmet2_d[l_ac].xmeu005
               AND xmeu006 = g_xmet2_d[l_ac].xmeu006
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前 name="input.body2.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmes_m.xmesdocno
               LET gs_keys[2] = g_xmes_m.xmes001
               LET gs_keys[3] = g_xmet2_d[g_detail_idx].xmeu002
               LET gs_keys[4] = g_xmet2_d[g_detail_idx].xmeu003
               LET gs_keys[5] = g_xmet2_d[g_detail_idx].xmeu004
               LET gs_keys[6] = g_xmet2_d[g_detail_idx].xmeu005
               LET gs_keys[7] = g_xmet2_d[g_detail_idx].xmeu006
               CALL axmi400_insert_b('xmeu_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2 name="input.body2.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_xmet_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmeu_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axmi400_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body2.after_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_xmet2_d[l_ac].* = g_xmet2_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE axmi400_bcl2
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_xmet2_d[l_ac].* = g_xmet2_d_t.*
            ELSE
               #add-point:單身page2修改前 name="input.body2.b_update"
               #如果部位編號為空值，則給一個空格
               IF g_xmet2_d[l_ac].xmeu002 IS NULL THEN
                  LET g_xmet2_d[l_ac].xmeu002 = ' '
               END IF
               #如果料件編號為空值，則給一個空格
               IF g_xmet2_d[l_ac].xmeu003 IS NULL THEN
                  LET g_xmet2_d[l_ac].xmeu003 = ' '
               END IF
               #如果製程序為空值，則給一個空格
               IF g_xmet2_d[l_ac].xmeu004 IS NULL THEN
                  LET g_xmet2_d[l_ac].xmeu004 = ' '
               END IF
               #如果作業序為空值，則給一個空格
               IF g_xmet2_d[l_ac].xmeu006 IS NULL THEN
                  LET g_xmet2_d[l_ac].xmeu006 = ' '
               END IF
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               #將遮罩欄位還原
               CALL axmi400_xmeu_t_mask_restore('restore_mask_o')
                              
               UPDATE xmeu_t SET (xmeudocno,xmeu001,xmeu002,xmeu003,xmeu004,xmeu005,xmeu006,xmeu007, 
                   xmeu008,xmeu009,xmeu010,xmeu011) = (g_xmes_m.xmesdocno,g_xmes_m.xmes001,g_xmet2_d[l_ac].xmeu002, 
                   g_xmet2_d[l_ac].xmeu003,g_xmet2_d[l_ac].xmeu004,g_xmet2_d[l_ac].xmeu005,g_xmet2_d[l_ac].xmeu006, 
                   g_xmet2_d[l_ac].xmeu007,g_xmet2_d[l_ac].xmeu008,g_xmet2_d[l_ac].xmeu009,g_xmet2_d[l_ac].xmeu010, 
                   g_xmet2_d[l_ac].xmeu011) #自訂欄位頁簽
                WHERE xmeuent = g_enterprise AND xmeusite = g_site AND xmeudocno = g_xmes_m.xmesdocno
                  AND xmeu001 = g_xmes_m.xmes001
                  AND xmeu002 = g_xmet2_d_t.xmeu002 #項次 
                  AND xmeu003 = g_xmet2_d_t.xmeu003
                  AND xmeu004 = g_xmet2_d_t.xmeu004
                  AND xmeu005 = g_xmet2_d_t.xmeu005
                  AND xmeu006 = g_xmet2_d_t.xmeu006
                  
               #add-point:單身page2修改中 name="input.body2.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_xmet2_d[l_ac].* = g_xmet2_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmeu_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     LET g_xmet2_d[l_ac].* = g_xmet2_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmeu_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmes_m.xmesdocno
               LET gs_keys_bak[1] = g_xmesdocno_t
               LET gs_keys[2] = g_xmes_m.xmes001
               LET gs_keys_bak[2] = g_xmes001_t
               LET gs_keys[3] = g_xmet2_d[g_detail_idx].xmeu002
               LET gs_keys_bak[3] = g_xmet2_d_t.xmeu002
               LET gs_keys[4] = g_xmet2_d[g_detail_idx].xmeu003
               LET gs_keys_bak[4] = g_xmet2_d_t.xmeu003
               LET gs_keys[5] = g_xmet2_d[g_detail_idx].xmeu004
               LET gs_keys_bak[5] = g_xmet2_d_t.xmeu004
               LET gs_keys[6] = g_xmet2_d[g_detail_idx].xmeu005
               LET gs_keys_bak[6] = g_xmet2_d_t.xmeu005
               LET gs_keys[7] = g_xmet2_d[g_detail_idx].xmeu006
               LET gs_keys_bak[7] = g_xmet2_d_t.xmeu006
               CALL axmi400_update_b('xmeu_t',gs_keys,gs_keys_bak,"'2'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL axmi400_xmeu_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_xmet2_d[g_detail_idx].xmeu002 = g_xmet2_d_t.xmeu002 
                  AND g_xmet2_d[g_detail_idx].xmeu003 = g_xmet2_d_t.xmeu003 
                  AND g_xmet2_d[g_detail_idx].xmeu004 = g_xmet2_d_t.xmeu004 
                  AND g_xmet2_d[g_detail_idx].xmeu005 = g_xmet2_d_t.xmeu005 
                  AND g_xmet2_d[g_detail_idx].xmeu006 = g_xmet2_d_t.xmeu006 
                  ) THEN
                  LET gs_keys[01] = g_xmes_m.xmesdocno
                  LET gs_keys[gs_keys.getLength()+1] = g_xmes_m.xmes001
                  LET gs_keys[gs_keys.getLength()+1] = g_xmet2_d_t.xmeu002
                  LET gs_keys[gs_keys.getLength()+1] = g_xmet2_d_t.xmeu003
                  LET gs_keys[gs_keys.getLength()+1] = g_xmet2_d_t.xmeu004
                  LET gs_keys[gs_keys.getLength()+1] = g_xmet2_d_t.xmeu005
                  LET gs_keys[gs_keys.getLength()+1] = g_xmet2_d_t.xmeu006
                  CALL axmi400_key_update_b(gs_keys,'xmeu_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_xmes_m),util.JSON.stringify(g_xmet2_d_t)
               LET g_log2 = util.JSON.stringify(g_xmes_m),util.JSON.stringify(g_xmet2_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後 name="input.body2.a_update"
               
               #end add-point
            END IF
         
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeu002
            
            #add-point:AFTER FIELD xmeu002 name="input.a.page2.xmeu002"
            #如果部位編號為空值，則給一個空格
            IF g_xmet2_d[l_ac].xmeu002 IS NULL THEN
               LET g_xmet2_d[l_ac].xmeu002 = ' '
            END IF
            #重複性檢查
            #160310-00018#1-mod-(S)
#            IF  g_xmes_m.xmesdocno IS NOT NULL AND g_xmes_m.xmes001 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu002 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu003 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu004 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu006 IS NOT NULL THEN 
#               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmes_m.xmesdocno != g_xmesdocno_t OR g_xmes_m.xmes001 != g_xmes001_t OR g_xmet2_d[g_detail_idx].xmeu002 != g_xmet2_d_t.xmeu002 OR g_xmet2_d[g_detail_idx].xmeu003 != g_xmet2_d_t.xmeu003 OR g_xmet2_d[g_detail_idx].xmeu004 != g_xmet2_d_t.xmeu004 OR g_xmet2_d[g_detail_idx].xmeu006 != g_xmet2_d_t.xmeu006)) THEN 
#                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmeu_t WHERE "||"xmeuent = '" ||g_enterprise|| "' AND xmeusite = '" ||g_site|| "' AND "||"xmeudocno = '"||g_xmes_m.xmesdocno ||"' AND "|| "xmeu001 = '"||g_xmes_m.xmes001 ||"' AND "|| "xmeu002 = '"||g_xmet2_d[g_detail_idx].xmeu002 ||"' AND "|| "xmeu003 = '"||g_xmet2_d[g_detail_idx].xmeu003 ||"' AND "|| "xmeu004 = '"||g_xmet2_d[g_detail_idx].xmeu004 ||"' AND "|| "xmeu006 = '"||g_xmet2_d[g_detail_idx].xmeu006 ||"'",'std-00004',0) THEN 
#                     LET g_xmet2_d[l_ac].xmeu002 = g_xmet2_d_t.xmeu002
#                     DISPLAY BY NAME g_xmet2_d[l_ac].xmeu002
#                     NEXT FIELD CURRENT
#                  END IF
#               END IF
#            END IF
            IF g_xmes_m.xmesdocno IS NOT NULL AND g_xmes_m.xmes001 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu002 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu003 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu004 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu005 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu006 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmes_m.xmesdocno != g_xmesdocno_t OR g_xmes_m.xmes001 != g_xmes001_t OR g_xmet2_d[g_detail_idx].xmeu002 != g_xmet2_d_t.xmeu002 OR g_xmet2_d[g_detail_idx].xmeu003 != g_xmet2_d_t.xmeu003 OR g_xmet2_d[g_detail_idx].xmeu004 != g_xmet2_d_t.xmeu004 OR g_xmet2_d[g_detail_idx].xmeu005 != g_xmet2_d_t.xmeu005 OR g_xmet2_d[g_detail_idx].xmeu006 != g_xmet2_d_t.xmeu006)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmeu_t WHERE "||"xmeuent = '" ||g_enterprise|| "' AND xmeusite = '" ||g_site|| "' AND "||"xmeudocno = '"||g_xmes_m.xmesdocno ||"' AND "|| "xmeu001 = '"||g_xmes_m.xmes001 ||"' AND "|| "xmeu002 = '"||g_xmet2_d[g_detail_idx].xmeu002 ||"' AND "|| "xmeu003 = '"||g_xmet2_d[g_detail_idx].xmeu003 ||"' AND "|| "xmeu004 = '"||g_xmet2_d[g_detail_idx].xmeu004 ||"' AND "||"xmeu005 = '"||g_xmet2_d[g_detail_idx].xmeu005||"' AND "|| "xmeu006 = '"||g_xmet2_d[g_detail_idx].xmeu006 ||"'",'std-00004',0) THEN 
                     LET g_xmet2_d[l_ac].xmeu002 = g_xmet2_d_t.xmeu002
                     DISPLAY BY NAME g_xmet2_d[l_ac].xmeu002
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            #160310-00018#1-mod-(E)
            #校驗帶值
            LET g_xmet2_d[l_ac].xmeu002_desc = ''
            DISPLAY BY NAME g_xmet2_d[l_ac].xmeu002_desc
            IF NOT cl_null(g_xmet2_d[l_ac].xmeu002) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmet2_d[l_ac].xmeu002 != g_xmet2_d_t.xmeu002 OR g_xmet2_d_t.xmeu002 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  IF NOT s_azzi650_chk_exist('215',g_xmet2_d[l_ac].xmeu002) THEN
                     LET g_xmet2_d[l_ac].xmeu002 = g_xmet2_d_t.xmeu002
                     DISPLAY BY NAME g_xmet2_d[l_ac].xmeu002
                     CALL axmi400_xmeu002_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL axmi400_xmeu002_ref()
 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeu002
            #add-point:BEFORE FIELD xmeu002 name="input.b.page2.xmeu002"
 
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmeu002
            #add-point:ON CHANGE xmeu002 name="input.g.page2.xmeu002"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeu003
            
            #add-point:AFTER FIELD xmeu003 name="input.a.page2.xmeu003"
            #如果料件編號為空值，則給一個空格
            IF g_xmet2_d[l_ac].xmeu003 IS NULL THEN
               LET g_xmet2_d[l_ac].xmeu003 = ' '
            END IF
            
            #重複性檢查
            #160310-00018#1-mod-(S)
#            IF  g_xmes_m.xmesdocno IS NOT NULL AND g_xmes_m.xmes001 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu002 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu003 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu004 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu006 IS NOT NULL THEN 
#               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmes_m.xmesdocno != g_xmesdocno_t OR g_xmes_m.xmes001 != g_xmes001_t OR g_xmet2_d[g_detail_idx].xmeu002 != g_xmet2_d_t.xmeu002 OR g_xmet2_d[g_detail_idx].xmeu003 != g_xmet2_d_t.xmeu003 OR g_xmet2_d[g_detail_idx].xmeu004 != g_xmet2_d_t.xmeu004 OR g_xmet2_d[g_detail_idx].xmeu006 != g_xmet2_d_t.xmeu006)) THEN 
#                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmeu_t WHERE "||"xmeuent = '" ||g_enterprise|| "' AND xmeusite = '" ||g_site|| "' AND "||"xmeudocno = '"||g_xmes_m.xmesdocno ||"' AND "|| "xmeu001 = '"||g_xmes_m.xmes001 ||"' AND "|| "xmeu002 = '"||g_xmet2_d[g_detail_idx].xmeu002 ||"' AND "|| "xmeu003 = '"||g_xmet2_d[g_detail_idx].xmeu003 ||"' AND "|| "xmeu004 = '"||g_xmet2_d[g_detail_idx].xmeu004 ||"' AND "|| "xmeu006 = '"||g_xmet2_d[g_detail_idx].xmeu006 ||"'",'std-00004',0) THEN 
#                     LET g_xmet2_d[l_ac].xmeu003 = g_xmet2_d_t.xmeu003
#                     DISPLAY BY NAME g_xmet2_d[l_ac].xmeu003
#                     NEXT FIELD CURRENT
#                  END IF
#               END IF
#            END IF
            IF g_xmes_m.xmesdocno IS NOT NULL AND g_xmes_m.xmes001 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu002 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu003 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu004 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu005 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu006 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmes_m.xmesdocno != g_xmesdocno_t OR g_xmes_m.xmes001 != g_xmes001_t OR g_xmet2_d[g_detail_idx].xmeu002 != g_xmet2_d_t.xmeu002 OR g_xmet2_d[g_detail_idx].xmeu003 != g_xmet2_d_t.xmeu003 OR g_xmet2_d[g_detail_idx].xmeu004 != g_xmet2_d_t.xmeu004 OR g_xmet2_d[g_detail_idx].xmeu005 != g_xmet2_d_t.xmeu005 OR g_xmet2_d[g_detail_idx].xmeu006 != g_xmet2_d_t.xmeu006)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmeu_t WHERE "||"xmeuent = '" ||g_enterprise|| "' AND xmeusite = '" ||g_site|| "' AND "||"xmeudocno = '"||g_xmes_m.xmesdocno ||"' AND "|| "xmeu001 = '"||g_xmes_m.xmes001 ||"' AND "|| "xmeu002 = '"||g_xmet2_d[g_detail_idx].xmeu002 ||"' AND "|| "xmeu003 = '"||g_xmet2_d[g_detail_idx].xmeu003 ||"' AND "|| "xmeu004 = '"||g_xmet2_d[g_detail_idx].xmeu004 ||"' AND "||"xmeu005 = '"||g_xmet2_d[g_detail_idx].xmeu005||"' AND "|| "xmeu006 = '"||g_xmet2_d[g_detail_idx].xmeu006 ||"'",'std-00004',0) THEN 
                     LET g_xmet2_d[l_ac].xmeu003 = g_xmet2_d_t.xmeu003
                     DISPLAY BY NAME g_xmet2_d[l_ac].xmeu003
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            #160310-00018#1-mod-(E)
            #校驗帶值
            LET g_xmet2_d[l_ac].xmeu003_desc = ''
            LET g_xmet2_d[l_ac].xmeu003_desc_desc = ''
            DISPLAY BY NAME g_xmet2_d[l_ac].xmeu003_desc
            DISPLAY BY NAME g_xmet2_d[l_ac].xmeu003_desc_desc
            IF NOT cl_null(g_xmet2_d[l_ac].xmeu003) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmet2_d[l_ac].xmeu003 != g_xmet2_d_t.xmeu003 OR g_xmet2_d_t.xmeu003 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmet2_d[l_ac].xmeu003
                  IF NOT cl_chk_exist("v_imaf001_14") THEN
                     LET g_xmet2_d[l_ac].xmeu003 = g_xmet2_d_t.xmeu003
                     DISPLAY BY NAME g_xmet2_d[l_ac].xmeu003
                     CALL axmi400_xmeu003_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL axmi400_xmeu003_ref()
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeu003
            #add-point:BEFORE FIELD xmeu003 name="input.b.page2.xmeu003"
 
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmeu003
            #add-point:ON CHANGE xmeu003 name="input.g.page2.xmeu003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeu004
            #add-point:BEFORE FIELD xmeu004 name="input.b.page2.xmeu004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeu004
            
            #add-point:AFTER FIELD xmeu004 name="input.a.page2.xmeu004"
            IF cl_null(g_xmet2_d[l_ac].xmeu004) THEN
               LET g_xmet2_d[l_ac].xmeu004 = ' '
            END IF
            #此段落由子樣板a05產生
            #160310-00018#1-mod-(S)
#            IF  g_xmes_m.xmesdocno IS NOT NULL AND g_xmes_m.xmes001 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu002 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu003 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu004 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu006 IS NOT NULL THEN 
#               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmes_m.xmesdocno != g_xmesdocno_t OR g_xmes_m.xmes001 != g_xmes001_t OR g_xmet2_d[g_detail_idx].xmeu002 != g_xmet2_d_t.xmeu002 OR g_xmet2_d[g_detail_idx].xmeu003 != g_xmet2_d_t.xmeu003 OR g_xmet2_d[g_detail_idx].xmeu004 != g_xmet2_d_t.xmeu004 OR g_xmet2_d[g_detail_idx].xmeu006 != g_xmet2_d_t.xmeu006)) THEN 
#                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmeu_t WHERE "||"xmeuent = '" ||g_enterprise|| "' AND xmeusite = '" ||g_site|| "' AND "||"xmeudocno = '"||g_xmes_m.xmesdocno ||"' AND "|| "xmeu001 = '"||g_xmes_m.xmes001 ||"' AND "|| "xmeu002 = '"||g_xmet2_d[g_detail_idx].xmeu002 ||"' AND "|| "xmeu003 = '"||g_xmet2_d[g_detail_idx].xmeu003 ||"' AND "|| "xmeu004 = '"||g_xmet2_d[g_detail_idx].xmeu004 ||"' AND "|| "xmeu006 = '"||g_xmet2_d[g_detail_idx].xmeu006 ||"'",'std-00004',0) THEN 
#                     LET g_xmet2_d[l_ac].xmeu004 =g_xmet2_d_t.xmeu004
#                     DISPLAY BY NAME g_xmet2_d[l_ac].xmeu004
#                     NEXT FIELD CURRENT
#                  END IF
#               END IF
#            END IF
            IF g_xmes_m.xmesdocno IS NOT NULL AND g_xmes_m.xmes001 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu002 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu003 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu004 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu005 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu006 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmes_m.xmesdocno != g_xmesdocno_t OR g_xmes_m.xmes001 != g_xmes001_t OR g_xmet2_d[g_detail_idx].xmeu002 != g_xmet2_d_t.xmeu002 OR g_xmet2_d[g_detail_idx].xmeu003 != g_xmet2_d_t.xmeu003 OR g_xmet2_d[g_detail_idx].xmeu004 != g_xmet2_d_t.xmeu004 OR g_xmet2_d[g_detail_idx].xmeu005 != g_xmet2_d_t.xmeu005 OR g_xmet2_d[g_detail_idx].xmeu006 != g_xmet2_d_t.xmeu006)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmeu_t WHERE "||"xmeuent = '" ||g_enterprise|| "' AND xmeusite = '" ||g_site|| "' AND "||"xmeudocno = '"||g_xmes_m.xmesdocno ||"' AND "|| "xmeu001 = '"||g_xmes_m.xmes001 ||"' AND "|| "xmeu002 = '"||g_xmet2_d[g_detail_idx].xmeu002 ||"' AND "|| "xmeu003 = '"||g_xmet2_d[g_detail_idx].xmeu003 ||"' AND "|| "xmeu004 = '"||g_xmet2_d[g_detail_idx].xmeu004 ||"' AND "||"xmeu005 = '"||g_xmet2_d[g_detail_idx].xmeu005||"' AND "|| "xmeu006 = '"||g_xmet2_d[g_detail_idx].xmeu006 ||"'",'std-00004',0) THEN 
                     LET g_xmet2_d[l_ac].xmeu004 =g_xmet2_d_t.xmeu004
                     DISPLAY BY NAME g_xmet2_d[l_ac].xmeu004
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            #160310-00018#1-mod-(E)
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmeu004
            #add-point:ON CHANGE xmeu004 name="input.g.page2.xmeu004"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeu005
            
            #add-point:AFTER FIELD xmeu005 name="input.a.page2.xmeu005"
            #校驗帶值
            LET g_xmet2_d[l_ac].xmeu005_desc = ''
            DISPLAY BY NAME g_xmet2_d[l_ac].xmeu005_desc
            IF NOT cl_null(g_xmet2_d[l_ac].xmeu005) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmet2_d[l_ac].xmeu005 != g_xmet2_d_t.xmeu005 OR g_xmet2_d_t.xmeu005 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  IF NOT s_azzi650_chk_exist('221',g_xmet2_d[l_ac].xmeu005) THEN
                     LET g_xmet2_d[l_ac].xmeu005 = g_xmet2_d_t.xmeu005
                     DISPLAY BY NAME g_xmet2_d[l_ac].xmeu005
                     CALL axmi400_xmeu005_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            #160310-00018#1-add-(S)
            #重複性檢查
            IF  g_xmes_m.xmesdocno IS NOT NULL AND g_xmes_m.xmes001 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu002 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu003 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu004 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu005 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu006 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmes_m.xmesdocno != g_xmesdocno_t OR g_xmes_m.xmes001 != g_xmes001_t OR g_xmet2_d[g_detail_idx].xmeu002 != g_xmet2_d_t.xmeu002 OR g_xmet2_d[g_detail_idx].xmeu003 != g_xmet2_d_t.xmeu003 OR g_xmet2_d[g_detail_idx].xmeu004 != g_xmet2_d_t.xmeu004 OR g_xmet2_d[g_detail_idx].xmeu005 != g_xmet2_d_t.xmeu005 OR g_xmet2_d[g_detail_idx].xmeu006 != g_xmet2_d_t.xmeu006)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmeu_t WHERE "||"xmeuent = '" ||g_enterprise|| "' AND xmeusite = '" ||g_site|| "' AND "||"xmeudocno = '"||g_xmes_m.xmesdocno ||"' AND "|| "xmeu001 = '"||g_xmes_m.xmes001 ||"' AND "|| "xmeu002 = '"||g_xmet2_d[g_detail_idx].xmeu002 ||"' AND "|| "xmeu003 = '"||g_xmet2_d[g_detail_idx].xmeu003 ||"' AND "|| "xmeu004 = '"||g_xmet2_d[g_detail_idx].xmeu004 ||"' AND "||"xmeu005 = '"||g_xmet2_d[g_detail_idx].xmeu005||"' AND "|| "xmeu006 = '"||g_xmet2_d[g_detail_idx].xmeu006 ||"'",'std-00004',0) THEN 
                     LET g_xmet2_d[l_ac].xmeu005 = g_xmet2_d_t.xmeu005
                     DISPLAY BY NAME g_xmet2_d[l_ac].xmeu005
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            #160310-00018#1-add-(E)
            
            CALL axmi400_xmeu005_ref()
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeu005
            #add-point:BEFORE FIELD xmeu005 name="input.b.page2.xmeu005"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmeu005
            #add-point:ON CHANGE xmeu005 name="input.g.page2.xmeu005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeu006
            #add-point:BEFORE FIELD xmeu006 name="input.b.page2.xmeu006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeu006
            
            #add-point:AFTER FIELD xmeu006 name="input.a.page2.xmeu006"
            IF cl_null(g_xmet2_d[l_ac].xmeu006) THEN
               LET g_xmet2_d[l_ac].xmeu006 = ' '
            END IF
            #此段落由子樣板a05產生
            #160310-00018#1-mod-(S)
#            IF  g_xmes_m.xmesdocno IS NOT NULL AND g_xmes_m.xmes001 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu002 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu003 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu004 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu006 IS NOT NULL THEN 
#               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmes_m.xmesdocno != g_xmesdocno_t OR g_xmes_m.xmes001 != g_xmes001_t OR g_xmet2_d[g_detail_idx].xmeu002 != g_xmet2_d_t.xmeu002 OR g_xmet2_d[g_detail_idx].xmeu003 != g_xmet2_d_t.xmeu003 OR g_xmet2_d[g_detail_idx].xmeu004 != g_xmet2_d_t.xmeu004 OR g_xmet2_d[g_detail_idx].xmeu006 != g_xmet2_d_t.xmeu006)) THEN 
#                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmeu_t WHERE "||"xmeuent = '" ||g_enterprise|| "' AND xmeusite = '" ||g_site|| "' AND "||"xmeudocno = '"||g_xmes_m.xmesdocno ||"' AND "|| "xmeu001 = '"||g_xmes_m.xmes001 ||"' AND "|| "xmeu002 = '"||g_xmet2_d[g_detail_idx].xmeu002 ||"' AND "|| "xmeu003 = '"||g_xmet2_d[g_detail_idx].xmeu003 ||"' AND "|| "xmeu004 = '"||g_xmet2_d[g_detail_idx].xmeu004 ||"' AND "|| "xmeu006 = '"||g_xmet2_d[g_detail_idx].xmeu006 ||"'",'std-00004',0) THEN 
#                     LET g_xmet2_d[l_ac].xmeu006 =g_xmet2_d_t.xmeu006
#                     DISPLAY BY NAME g_xmet2_d[l_ac].xmeu006
#                     NEXT FIELD CURRENT
#                  END IF
#               END IF
#            END IF
            IF  g_xmes_m.xmesdocno IS NOT NULL AND g_xmes_m.xmes001 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu002 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu003 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu004 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu005 IS NOT NULL AND g_xmet2_d[g_detail_idx].xmeu006 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmes_m.xmesdocno != g_xmesdocno_t OR g_xmes_m.xmes001 != g_xmes001_t OR g_xmet2_d[g_detail_idx].xmeu002 != g_xmet2_d_t.xmeu002 OR g_xmet2_d[g_detail_idx].xmeu003 != g_xmet2_d_t.xmeu003 OR g_xmet2_d[g_detail_idx].xmeu004 != g_xmet2_d_t.xmeu004 OR g_xmet2_d[g_detail_idx].xmeu005 != g_xmet2_d_t.xmeu005 OR g_xmet2_d[g_detail_idx].xmeu006 != g_xmet2_d_t.xmeu006)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmeu_t WHERE "||"xmeuent = '" ||g_enterprise|| "' AND xmeusite = '" ||g_site|| "' AND "||"xmeudocno = '"||g_xmes_m.xmesdocno ||"' AND "|| "xmeu001 = '"||g_xmes_m.xmes001 ||"' AND "|| "xmeu002 = '"||g_xmet2_d[g_detail_idx].xmeu002 ||"' AND "|| "xmeu003 = '"||g_xmet2_d[g_detail_idx].xmeu003 ||"' AND "|| "xmeu004 = '"||g_xmet2_d[g_detail_idx].xmeu004 ||"' AND "||"xmeu005 = '"||g_xmet2_d[g_detail_idx].xmeu005||"' AND "|| "xmeu006 = '"||g_xmet2_d[g_detail_idx].xmeu006 ||"'",'std-00004',0) THEN 
                     LET g_xmet2_d[l_ac].xmeu006 =g_xmet2_d_t.xmeu006
                     DISPLAY BY NAME g_xmet2_d[l_ac].xmeu006
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            #160310-00018#1-mod-(E)

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmeu006
            #add-point:ON CHANGE xmeu006 name="input.g.page2.xmeu006"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeu007
            
            #add-point:AFTER FIELD xmeu007 name="input.a.page2.xmeu007"
            #校驗帶值
            LET g_xmet2_d[l_ac].xmeu007_desc = ''
            DISPLAY BY NAME g_xmet2_d[l_ac].xmeu007_desc
            IF NOT cl_null(g_xmet2_d[l_ac].xmeu007) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmet2_d[l_ac].xmeu007 != g_xmet2_d_t.xmeu007 OR g_xmet2_d_t.xmeu007 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmet2_d[l_ac].xmeu007
                  #160318-00025#3--add--str
                  LET g_errshow = TRUE 
                  LET g_chkparam.err_str[1] = "aec-00010:sub-01302|aeci001|",cl_get_progname("aeci001",g_lang,"2"),"|:EXEPROGaeci001"
                  #160318-00025#3--add--end
                  IF NOT cl_chk_exist("v_ecaa001_1") THEN
                     LET g_xmet2_d[l_ac].xmeu007 = g_xmet2_d_t.xmeu007
                     DISPLAY BY NAME g_xmet2_d[l_ac].xmeu007
                     CALL axmi400_xmeu007_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL axmi400_xmeu007_ref()
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeu007
            #add-point:BEFORE FIELD xmeu007 name="input.b.page2.xmeu007"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmeu007
            #add-point:ON CHANGE xmeu007 name="input.g.page2.xmeu007"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeu008
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmet2_d[l_ac].xmeu008,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD xmeu008
            END IF 
 
 
 
            #add-point:AFTER FIELD xmeu008 name="input.a.page2.xmeu008"
            IF NOT cl_null(g_xmet2_d[l_ac].xmeu008) THEN 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeu008
            #add-point:BEFORE FIELD xmeu008 name="input.b.page2.xmeu008"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmeu008
            #add-point:ON CHANGE xmeu008 name="input.g.page2.xmeu008"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeu009
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmet2_d[l_ac].xmeu009,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD xmeu009
            END IF 
 
 
 
            #add-point:AFTER FIELD xmeu009 name="input.a.page2.xmeu009"
            IF NOT cl_null(g_xmet2_d[l_ac].xmeu009) THEN 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeu009
            #add-point:BEFORE FIELD xmeu009 name="input.b.page2.xmeu009"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmeu009
            #add-point:ON CHANGE xmeu009 name="input.g.page2.xmeu009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeu010
            #add-point:BEFORE FIELD xmeu010 name="input.b.page2.xmeu010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeu010
            
            #add-point:AFTER FIELD xmeu010 name="input.a.page2.xmeu010"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmeu010
            #add-point:ON CHANGE xmeu010 name="input.g.page2.xmeu010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeu011
            #add-point:BEFORE FIELD xmeu011 name="input.b.page2.xmeu011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeu011
            
            #add-point:AFTER FIELD xmeu011 name="input.a.page2.xmeu011"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmeu011
            #add-point:ON CHANGE xmeu011 name="input.g.page2.xmeu011"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page2.xmeu002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeu002
            #add-point:ON ACTION controlp INFIELD xmeu002 name="input.c.page2.xmeu002"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmet2_d[l_ac].xmeu002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '215'
            
            CALL q_oocq002_5()                                #呼叫開窗

            LET g_xmet2_d[l_ac].xmeu002 = g_qryparam.return1              

            DISPLAY g_xmet2_d[l_ac].xmeu002 TO xmeu002              
            CALL axmi400_xmeu002_ref()
            NEXT FIELD xmeu002                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page2.xmeu003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeu003
            #add-point:ON ACTION controlp INFIELD xmeu003 name="input.c.page2.xmeu003"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmet2_d[l_ac].xmeu003             #給予default值
           
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_imaf001_15()                                #呼叫開窗

            LET g_xmet2_d[l_ac].xmeu003 = g_qryparam.return1              
            
            DISPLAY g_xmet2_d[l_ac].xmeu003 TO xmeu003              #
            CALL axmi400_xmeu003_ref()
            NEXT FIELD xmeu003                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page2.xmeu004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeu004
            #add-point:ON ACTION controlp INFIELD xmeu004 name="input.c.page2.xmeu004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.xmeu005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeu005
            #add-point:ON ACTION controlp INFIELD xmeu005 name="input.c.page2.xmeu005"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmet2_d[l_ac].xmeu005             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '221'
            
            CALL q_oocq002_5()                                #呼叫開窗

            LET g_xmet2_d[l_ac].xmeu005 = g_qryparam.return1              

            DISPLAY g_xmet2_d[l_ac].xmeu005 TO xmeu005              #
            CALL axmi400_xmeu005_ref()
            NEXT FIELD xmeu005                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page2.xmeu006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeu006
            #add-point:ON ACTION controlp INFIELD xmeu006 name="input.c.page2.xmeu006"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.xmeu007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeu007
            #add-point:ON ACTION controlp INFIELD xmeu007 name="input.c.page2.xmeu007"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmet2_d[l_ac].xmeu007             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ecaa001_1()                                #呼叫開窗

            LET g_xmet2_d[l_ac].xmeu007 = g_qryparam.return1              

            DISPLAY g_xmet2_d[l_ac].xmeu007 TO xmeu007            
            CALL axmi400_xmeu007_ref()
            NEXT FIELD xmeu007                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page2.xmeu008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeu008
            #add-point:ON ACTION controlp INFIELD xmeu008 name="input.c.page2.xmeu008"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.xmeu009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeu009
            #add-point:ON ACTION controlp INFIELD xmeu009 name="input.c.page2.xmeu009"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.xmeu010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeu010
            #add-point:ON ACTION controlp INFIELD xmeu010 name="input.c.page2.xmeu010"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.xmeu011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeu011
            #add-point:ON ACTION controlp INFIELD xmeu011 name="input.c.page2.xmeu011"
            
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row name="input.body2.after_row"
            
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_xmet2_d[l_ac].* = g_xmet2_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE axmi400_bcl2
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL axmi400_unlock_b("xmeu_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2 name="input.body2.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body2.after_input"
            
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_xmet2_d[li_reproduce_target].* = g_xmet2_d[li_reproduce].*
 
               LET g_xmet2_d[li_reproduce_target].xmeu002 = NULL
               LET g_xmet2_d[li_reproduce_target].xmeu003 = NULL
               LET g_xmet2_d[li_reproduce_target].xmeu004 = NULL
               LET g_xmet2_d[li_reproduce_target].xmeu005 = NULL
               LET g_xmet2_d[li_reproduce_target].xmeu006 = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_xmet2_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_xmet2_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_xmet3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_3)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body3.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xmet3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axmi400_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_xmet3_d.getLength()
            #add-point:資料輸入前 name="input.body3.before_input"
            
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmet3_d[l_ac].* TO NULL 
            INITIALIZE g_xmet3_d_t.* TO NULL 
            INITIALIZE g_xmet3_d_o.* TO NULL 
            #公用欄位給值(單身3)
            
            #自定義預設值(單身3)
            
            #add-point:modify段before備份 name="input.body3.insert.before_bak"
            
            #end add-point
            LET g_xmet3_d_t.* = g_xmet3_d[l_ac].*     #新輸入資料
            LET g_xmet3_d_o.* = g_xmet3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axmi400_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body3.insert.after_set_entry_b"
            
            #end add-point
            CALL axmi400_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmet3_d[li_reproduce_target].* = g_xmet3_d[li_reproduce].*
 
               LET g_xmet3_d[li_reproduce_target].xmezseq = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body3.before_insert"
            #LET g_xmet3_d[l_ac].xmezsite = g_site   #ming 先mark 

            SELECT MAX(xmezseq) + 1 INTO g_xmet3_d[l_ac].xmezseq
              FROM xmez_t
             WHERE xmezent = g_enterprise
               AND xmezsite = g_site
               AND xmezdocno = g_xmes_m.xmesdocno
            IF cl_null(g_xmet3_d[l_ac].xmezseq) OR g_xmet3_d[l_ac].xmezseq = 0 THEN
               LET g_xmet3_d[l_ac].xmezseq = 1
            END IF
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body3.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[3] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 3
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN axmi400_cl USING g_enterprise, g_site,g_xmes_m.xmesdocno,g_xmes_m.xmes001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axmi400_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE axmi400_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_xmet3_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xmet3_d[l_ac].xmezseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_xmet3_d_t.* = g_xmet3_d[l_ac].*  #BACKUP
               LET g_xmet3_d_o.* = g_xmet3_d[l_ac].*  #BACKUP
               CALL axmi400_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body3.after_set_entry_b"
               
               #end add-point  
               CALL axmi400_set_no_entry_b(l_cmd)
               IF NOT axmi400_lock_b("xmez_t","'3'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axmi400_bcl3 INTO g_xmet3_d[l_ac].xmezseq,g_xmet3_d[l_ac].xmez002,g_xmet3_d[l_ac].xmez003, 
                      g_xmet3_d[l_ac].xmez004,g_xmet3_d[l_ac].xmez005,g_xmet3_d[l_ac].xmez006,g_xmet3_d[l_ac].xmez007 
 
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_xmet3_d_mask_o[l_ac].* =  g_xmet3_d[l_ac].*
                  CALL axmi400_xmez_t_mask()
                  LET g_xmet3_d_mask_n[l_ac].* =  g_xmet3_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL axmi400_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body3.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body3.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body3.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身3刪除前 name="input.body3.b_delete"
               
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_xmes_m.xmesdocno
               LET gs_keys[gs_keys.getLength()+1] = g_xmes_m.xmes001
               LET gs_keys[gs_keys.getLength()+1] = g_xmet3_d_t.xmezseq
            
               #刪除同層單身
               IF NOT axmi400_delete_b('xmez_t',gs_keys,"'3'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmi400_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT axmi400_key_delete_b(gs_keys,'xmez_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmi400_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身3刪除中 name="input.body3.m_delete"
               
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE axmi400_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身3刪除後 name="input.body3.a_delete"
               
               #end add-point
               LET l_count = g_xmet_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body3.after_delete"
               
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_xmet3_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身3新增前 name="input.body3.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM xmez_t 
             WHERE xmezent = g_enterprise AND xmezsite = g_site AND xmezdocno = g_xmes_m.xmesdocno
               AND xmez001 = g_xmes_m.xmes001
               AND xmezseq = g_xmet3_d[l_ac].xmezseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身3新增前 name="input.body3.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmes_m.xmesdocno
               LET gs_keys[2] = g_xmes_m.xmes001
               LET gs_keys[3] = g_xmet3_d[g_detail_idx].xmezseq
               CALL axmi400_insert_b('xmez_t',gs_keys,"'3'")
                           
               #add-point:單身新增後3 name="input.body3.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_xmet_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmez_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axmi400_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body3.after_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_xmet3_d[l_ac].* = g_xmet3_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE axmi400_bcl3
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_xmet3_d[l_ac].* = g_xmet3_d_t.*
            ELSE
               #add-point:單身page3修改前 name="input.body3.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身3)
               
               
               #將遮罩欄位還原
               CALL axmi400_xmez_t_mask_restore('restore_mask_o')
                              
               UPDATE xmez_t SET (xmezdocno,xmez001,xmezseq,xmez002,xmez003,xmez004,xmez005,xmez006, 
                   xmez007) = (g_xmes_m.xmesdocno,g_xmes_m.xmes001,g_xmet3_d[l_ac].xmezseq,g_xmet3_d[l_ac].xmez002, 
                   g_xmet3_d[l_ac].xmez003,g_xmet3_d[l_ac].xmez004,g_xmet3_d[l_ac].xmez005,g_xmet3_d[l_ac].xmez006, 
                   g_xmet3_d[l_ac].xmez007) #自訂欄位頁簽
                WHERE xmezent = g_enterprise AND xmezsite = g_site AND xmezdocno = g_xmes_m.xmesdocno
                  AND xmez001 = g_xmes_m.xmes001
                  AND xmezseq = g_xmet3_d_t.xmezseq #項次 
                  
               #add-point:單身page3修改中 name="input.body3.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_xmet3_d[l_ac].* = g_xmet3_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmez_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     LET g_xmet3_d[l_ac].* = g_xmet3_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmez_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmes_m.xmesdocno
               LET gs_keys_bak[1] = g_xmesdocno_t
               LET gs_keys[2] = g_xmes_m.xmes001
               LET gs_keys_bak[2] = g_xmes001_t
               LET gs_keys[3] = g_xmet3_d[g_detail_idx].xmezseq
               LET gs_keys_bak[3] = g_xmet3_d_t.xmezseq
               CALL axmi400_update_b('xmez_t',gs_keys,gs_keys_bak,"'3'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL axmi400_xmez_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_xmet3_d[g_detail_idx].xmezseq = g_xmet3_d_t.xmezseq 
                  ) THEN
                  LET gs_keys[01] = g_xmes_m.xmesdocno
                  LET gs_keys[gs_keys.getLength()+1] = g_xmes_m.xmes001
                  LET gs_keys[gs_keys.getLength()+1] = g_xmet3_d_t.xmezseq
                  CALL axmi400_key_update_b(gs_keys,'xmez_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_xmes_m),util.JSON.stringify(g_xmet3_d_t)
               LET g_log2 = util.JSON.stringify(g_xmes_m),util.JSON.stringify(g_xmet3_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page3修改後 name="input.body3.a_update"
               
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmezseq
            #add-point:BEFORE FIELD xmezseq name="input.b.page3.xmezseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmezseq
            
            #add-point:AFTER FIELD xmezseq name="input.a.page3.xmezseq"
            #應用 a05 樣板自動產生(Version:1)
            #確認資料無重複
            IF g_xmes_m.xmesdocno IS NOT NULL AND g_xmes_m.xmes001 IS NOT NULL AND g_xmet3_d[g_detail_idx].xmezseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmes_m.xmesdocno != g_xmesdocno_t OR g_xmes_m.xmes001 != g_xmes001_t OR g_xmet3_d[g_detail_idx].xmezseq != g_xmet3_d_t.xmezseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmez_t WHERE "||"xmezent = '" ||g_enterprise|| "' AND "||"xmezdocno = '"||g_xmes_m.xmesdocno ||"' AND "|| "xmezseq = '"||g_xmes_m.xmes001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmezseq
            #add-point:ON CHANGE xmezseq name="input.g.page3.xmezseq"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmez002
            
            #add-point:AFTER FIELD xmez002 name="input.a.page3.xmez002"
            IF NOT cl_null(g_xmet3_d[l_ac].xmez002) THEN 
               #應用 a19 樣板自動產生(Version:1)
               #校驗代值
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmet3_d[l_ac].xmez002

               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_imaf001_16") THEN
                  LET g_xmet3_d[l_ac].xmez002 = g_xmet3_d_o.xmez002
                  CALL s_desc_get_item_desc(g_xmet3_d[l_ac].xmez002)
                       RETURNING g_xmet3_d[l_ac].xmez002_desc,
                                 g_xmet3_d[l_ac].xmez002_desc_desc
                  NEXT FIELD CURRENT
               END IF
            END IF 
            
            CALL s_desc_get_item_desc(g_xmet3_d[l_ac].xmez002)
                 RETURNING g_xmet3_d[l_ac].xmez002_desc,
                           g_xmet3_d[l_ac].xmez002_desc_desc

            LET g_xmet3_d_o.xmez002 = g_xmet3_d[l_ac].xmez002
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmez002
            #add-point:BEFORE FIELD xmez002 name="input.b.page3.xmez002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmez002
            #add-point:ON CHANGE xmez002 name="input.g.page3.xmez002"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmez003
            
            #add-point:AFTER FIELD xmez003 name="input.a.page3.xmez003"
            IF NOT cl_null(g_xmet3_d[l_ac].xmez003) THEN 
               #應用 a19 樣板自動產生(Version:1)
               #校驗代值
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_site
               LET g_chkparam.arg2 = g_xmet3_d[l_ac].xmez003
               #160318-00025#4--add--str
               LET g_errshow = TRUE 
               LET g_chkparam.err_str[1] = "aoo-00176:sub-01302|aooi150|",cl_get_progname("aooi150",g_lang,"2"),"|:EXEPROGaooi150"
               #160318-00025#4--add--end
               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_ooaj002") THEN
                  LET g_xmet3_d[l_ac].xmez003 = g_xmet3_d_o.xmez003
                  CALL s_desc_get_currency_desc(g_xmet3_d[l_ac].xmez003)
                       RETURNING g_xmet3_d[l_ac].xmez003_desc
                  NEXT FIELD CURRENT
               END IF

               #取匯率 
               CALL axmi400_get_xmez004(g_xmet3_d[l_ac].xmez003)
                    RETURNING g_xmet3_d[l_ac].xmez004

            END IF 
            
            CALL s_desc_get_currency_desc(g_xmet3_d[l_ac].xmez003)
                 RETURNING g_xmet3_d[l_ac].xmez003_desc

            LET g_xmet3_d_o.xmez003 = g_xmet3_d[l_ac].xmez003

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmez003
            #add-point:BEFORE FIELD xmez003 name="input.b.page3.xmez003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmez003
            #add-point:ON CHANGE xmez003 name="input.g.page3.xmez003"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmez004
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmet3_d[l_ac].xmez004,"0","0","","","azz-00079",1) THEN
               NEXT FIELD xmez004
            END IF 
 
 
 
            #add-point:AFTER FIELD xmez004 name="input.a.page3.xmez004"
            IF NOT cl_null(g_xmet3_d[l_ac].xmez004) THEN 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmez004
            #add-point:BEFORE FIELD xmez004 name="input.b.page3.xmez004"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmez004
            #add-point:ON CHANGE xmez004 name="input.g.page3.xmez004"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmez005
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmet3_d[l_ac].xmez005,"0","0","","","azz-00079",1) THEN
               NEXT FIELD xmez005
            END IF 
 
 
 
            #add-point:AFTER FIELD xmez005 name="input.a.page3.xmez005"
            IF NOT cl_null(g_xmet3_d[l_ac].xmez005) THEN             

            END IF 

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmez005
            #add-point:BEFORE FIELD xmez005 name="input.b.page3.xmez005"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmez005
            #add-point:ON CHANGE xmez005 name="input.g.page3.xmez005"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmez006
            
            #add-point:AFTER FIELD xmez006 name="input.a.page3.xmez006"
            IF NOT cl_null(g_xmet3_d[l_ac].xmez006) THEN 
               #應用 a19 樣板自動產生(Version:1)
               #校驗代值
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmet3_d[l_ac].xmez006
               LET g_chkparam.arg2 = g_site

               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_pmaa001_1") THEN
                  LET g_xmet3_d[l_ac].xmez006 = g_xmet3_d[l_ac].xmez006
                  CALL s_desc_get_trading_partner_full_desc(g_xmet3_d[l_ac].xmez006)
                       RETURNING g_xmet3_d[l_ac].xmez006_desc
                  NEXT FIELD CURRENT
               END IF
            END IF 
            CALL s_desc_get_trading_partner_full_desc(g_xmet3_d[l_ac].xmez006)
                 RETURNING g_xmet3_d[l_ac].xmez006_desc
            LET g_xmet3_d_o.xmez006 = g_xmet3_d[l_ac].xmez006

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmez006
            #add-point:BEFORE FIELD xmez006 name="input.b.page3.xmez006"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmez006
            #add-point:ON CHANGE xmez006 name="input.g.page3.xmez006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmez007
            #add-point:BEFORE FIELD xmez007 name="input.b.page3.xmez007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmez007
            
            #add-point:AFTER FIELD xmez007 name="input.a.page3.xmez007"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmez007
            #add-point:ON CHANGE xmez007 name="input.g.page3.xmez007"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page3.xmezseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmezseq
            #add-point:ON ACTION controlp INFIELD xmezseq name="input.c.page3.xmezseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.xmez002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmez002
            #add-point:ON ACTION controlp INFIELD xmez002 name="input.c.page3.xmez002"
            #應用 a07 樣板自動產生(Version:1)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmet3_d[l_ac].xmez002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s

            
            CALL q_imaf001_17()

            LET g_xmet3_d[l_ac].xmez002 = g_qryparam.return1              

            DISPLAY g_xmet3_d[l_ac].xmez002 TO xmez002              #
            CALL s_desc_get_item_desc(g_xmet3_d[l_ac].xmez002)
                 RETURNING g_xmet3_d[l_ac].xmez002_desc,
                           g_xmet3_d[l_ac].xmez002_desc_desc
            DISPLAY BY NAME g_xmet3_d[l_ac].xmez002_desc,g_xmet3_d[l_ac].xmez002_desc_desc
            NEXT FIELD xmez002                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page3.xmez003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmez003
            #add-point:ON ACTION controlp INFIELD xmez003 name="input.c.page3.xmez003"
            #應用 a07 樣板自動產生(Version:1)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmet3_d[l_ac].xmez003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_site

            
            CALL q_ooaj002_1()                                #呼叫開窗

            LET g_xmet3_d[l_ac].xmez003 = g_qryparam.return1              

            DISPLAY g_xmet3_d[l_ac].xmez003 TO xmez003              #
            CALL s_desc_get_currency_desc(g_xmet3_d[l_ac].xmez003)
                 RETURNING g_xmet3_d[l_ac].xmez003_desc
            DISPLAY BY NAME g_xmet3_d[l_ac].xmez003_desc
            NEXT FIELD xmez003                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page3.xmez004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmez004
            #add-point:ON ACTION controlp INFIELD xmez004 name="input.c.page3.xmez004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.xmez005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmez005
            #add-point:ON ACTION controlp INFIELD xmez005 name="input.c.page3.xmez005"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.xmez006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmez006
            #add-point:ON ACTION controlp INFIELD xmez006 name="input.c.page3.xmez006"
            #應用 a07 樣板自動產生(Version:1)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmet3_d[l_ac].xmez006             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '' 

            
            CALL q_pmaa001_3()                                #呼叫開窗

            LET g_xmet3_d[l_ac].xmez006 = g_qryparam.return1              

            DISPLAY g_xmet3_d[l_ac].xmez006 TO xmez006              #
            CALL s_desc_get_trading_partner_full_desc(g_xmet3_d[l_ac].xmez006)
                 RETURNING g_xmet3_d[l_ac].xmez006_desc
            DISPLAY BY NAME g_xmet3_d[l_ac].xmez006_desc
            NEXT FIELD xmez006                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page3.xmez007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmez007
            #add-point:ON ACTION controlp INFIELD xmez007 name="input.c.page3.xmez007"
            
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page3 after_row name="input.body3.after_row"
            
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_xmet3_d[l_ac].* = g_xmet3_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE axmi400_bcl3
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL axmi400_unlock_b("xmez_t","'3'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page3 after_row2 name="input.body3.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body3.after_input"
            
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_xmet3_d[li_reproduce_target].* = g_xmet3_d[li_reproduce].*
 
               LET g_xmet3_d[li_reproduce_target].xmezseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_xmet3_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_xmet3_d.getLength()+1
            END IF
            
      END INPUT
 
      
 
 
 
 
{</section>}
 
{<section id="axmi400.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1',"))      
         CALL DIALOG.setCurrentRow("s_detail2",g_idx_group.getValue("'2',"))
         CALL DIALOG.setCurrentRow("s_detail3",g_idx_group.getValue("'3',"))
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            
            #end add-point  
            NEXT FIELD xmesdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xmet002
               WHEN "s_detail2"
                  NEXT FIELD xmeu002
               WHEN "s_detail3"
                  NEXT FIELD xmezseq
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   
   #end add-point    
 
END FUNCTION
 
{</section>}
 
{<section id="axmi400.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION axmi400_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   DEFINE l_success LIKE type_t.num5
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL axmi400_b_fill() #單身填充
      CALL axmi400_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL axmi400_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"

   CALL axmi400_xmesdocno_ref()
   
   #end add-point
   
   #遮罩相關處理
   LET g_xmes_m_mask_o.* =  g_xmes_m.*
   CALL axmi400_xmes_t_mask()
   LET g_xmes_m_mask_n.* =  g_xmes_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xmes_m.xmesdocno,g_xmes_m.xmesl003,g_xmes_m.xmesl004,g_xmes_m.xmes001,g_xmes_m.xmesstus, 
       g_xmes_m.xmesownid,g_xmes_m.xmesownid_desc,g_xmes_m.xmesowndp,g_xmes_m.xmesowndp_desc,g_xmes_m.xmescrtid, 
       g_xmes_m.xmescrtid_desc,g_xmes_m.xmescrtdp,g_xmes_m.xmescrtdp_desc,g_xmes_m.xmescrtdt,g_xmes_m.xmesmodid, 
       g_xmes_m.xmesmodid_desc,g_xmes_m.xmesmoddt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_xmes_m.xmesstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_xmet_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
      CALL s_feature_description(g_xmet_d[l_ac].xmet005,g_xmet_d[l_ac].xmet006) RETURNING l_success,g_xmet_d[l_ac].xmet006_desc

      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_xmet2_d.getLength()
      #add-point:show段單身reference name="show.body2.reference"
 
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_xmet3_d.getLength()
      #add-point:show段單身reference name="show.body3.reference"
      #取品名 規格 
      CALL s_desc_get_item_desc(g_xmet3_d[l_ac].xmez002)
           RETURNING g_xmet3_d[l_ac].xmez002_desc,
                     g_xmet3_d[l_ac].xmez002_desc_desc

      #取幣別說明 
      CALL s_desc_get_currency_desc(g_xmet3_d[l_ac].xmez003)
           RETURNING g_xmet3_d[l_ac].xmez003_desc

      #取得廠商說明 
      CALL s_desc_get_trading_partner_full_desc(g_xmet3_d[l_ac].xmez006)
           RETURNING g_xmet3_d[l_ac].xmez006_desc
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other name="show.other"
   
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL axmi400_detail_show()
 
   #add-point:show段之後 name="show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="axmi400.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION axmi400_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
   
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="axmi400.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION axmi400_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   
   #end add-point   
   DEFINE l_newno     LIKE xmes_t.xmesdocno 
   DEFINE l_oldno     LIKE xmes_t.xmesdocno 
   DEFINE l_newno02     LIKE xmes_t.xmes001 
   DEFINE l_oldno02     LIKE xmes_t.xmes001 
 
   DEFINE l_master    RECORD LIKE xmes_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE xmet_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE xmeu_t.* #此變數樣板目前無使用
 
   DEFINE l_detail3    RECORD LIKE xmez_t.* #此變數樣板目前無使用
 
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_xmes_m.xmesdocno IS NULL
   OR g_xmes_m.xmes001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_xmesdocno_t = g_xmes_m.xmesdocno
   LET g_xmes001_t = g_xmes_m.xmes001
 
    
   LET g_xmes_m.xmesdocno = ""
   LET g_xmes_m.xmes001 = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_xmes_m.xmesownid = g_user
      LET g_xmes_m.xmesowndp = g_dept
      LET g_xmes_m.xmescrtid = g_user
      LET g_xmes_m.xmescrtdp = g_dept 
      LET g_xmes_m.xmescrtdt = cl_get_current()
      LET g_xmes_m.xmesmodid = g_user
      LET g_xmes_m.xmesmoddt = cl_get_current()
      LET g_xmes_m.xmesstus = 'Y'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   #ming 20141201 add --------------------(S)  
   LET g_xmes_m.xmesstus = 'Y' 
   #ming 20141201 add --------------------(E) 
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_xmes_m.xmesstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
   
   
   CALL axmi400_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_xmes_m.* TO NULL
      INITIALIZE g_xmet_d TO NULL
      INITIALIZE g_xmet2_d TO NULL
      INITIALIZE g_xmet3_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      
      #end add-point
      CALL axmi400_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmi400_set_act_visible()   
   CALL axmi400_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_xmesdocno_t = g_xmes_m.xmesdocno
   LET g_xmes001_t = g_xmes_m.xmes001
 
   
   #組合新增資料的條件
   LET g_add_browse = " xmesent = " ||g_enterprise|| " AND xmessite = '" ||g_site|| "' AND",
                      " xmesdocno = '", g_xmes_m.xmesdocno, "' "
                      ," AND xmes001 = '", g_xmes_m.xmes001, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axmi400_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   CALL axmi400_idx_chk()
   
   LET g_data_owner = g_xmes_m.xmesownid      
   LET g_data_dept  = g_xmes_m.xmesowndp
   
   #功能已完成,通報訊息中心
   CALL axmi400_msgcentre_notify('reproduce')
 
END FUNCTION
 
{</section>}
 
{<section id="axmi400.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION axmi400_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE xmet_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE xmeu_t.* #此變數樣板目前無使用
 
   DEFINE l_detail3    RECORD LIKE xmez_t.* #此變數樣板目前無使用
 
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE axmi400_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xmet_t
    WHERE xmetent = g_enterprise AND xmetsite = g_site AND xmetdocno = g_xmesdocno_t
     AND xmet001 = g_xmes001_t
 
    INTO TEMP axmi400_detail
 
   #將key修正為調整後   
   UPDATE axmi400_detail 
      #更新key欄位
      SET xmetdocno = g_xmes_m.xmesdocno
          , xmet001 = g_xmes_m.xmes001
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO xmet_t SELECT * FROM axmi400_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmi400_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table2.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xmeu_t 
    WHERE xmeuent = g_enterprise AND xmeusite = g_site AND xmeudocno = g_xmesdocno_t
      AND xmeu001 = g_xmes001_t   
 
    INTO TEMP axmi400_detail
 
   #將key修正為調整後   
   UPDATE axmi400_detail SET xmeudocno = g_xmes_m.xmesdocno
                                       , xmeu001 = g_xmes_m.xmes001
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table2.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO xmeu_t SELECT * FROM axmi400_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table2.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmi400_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table2.a_insert"
   
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table3.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xmez_t 
    WHERE xmezent = g_enterprise AND xmezsite = g_site AND xmezdocno = g_xmesdocno_t
      AND xmez001 = g_xmes001_t   
 
    INTO TEMP axmi400_detail
 
   #將key修正為調整後   
   UPDATE axmi400_detail SET xmezdocno = g_xmes_m.xmesdocno
                                       , xmez001 = g_xmes_m.xmes001
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table3.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO xmez_t SELECT * FROM axmi400_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table3.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmi400_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table3.a_insert"
   
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_xmesdocno_t = g_xmes_m.xmesdocno
   LET g_xmes001_t = g_xmes_m.xmes001
 
   
END FUNCTION
 
{</section>}
 
{<section id="axmi400.delete" >}
#+ 資料刪除
PRIVATE FUNCTION axmi400_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   DEFINE  l_multi_cnt     LIKE type_t.num5 
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_xmes_m.xmesdocno IS NULL
   OR g_xmes_m.xmes001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   LET g_master_multi_table_t.xmesldocno = g_xmes_m.xmesdocno
LET g_master_multi_table_t.xmesl003 = g_xmes_m.xmesl003
LET g_master_multi_table_t.xmesl004 = g_xmes_m.xmesl004
 
   
   CALL s_transaction_begin()
 
   OPEN axmi400_cl USING g_enterprise, g_site,g_xmes_m.xmesdocno,g_xmes_m.xmes001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axmi400_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE axmi400_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axmi400_master_referesh USING g_site,g_xmes_m.xmesdocno,g_xmes_m.xmes001 INTO g_xmes_m.xmesdocno, 
       g_xmes_m.xmes001,g_xmes_m.xmesstus,g_xmes_m.xmesownid,g_xmes_m.xmesowndp,g_xmes_m.xmescrtid,g_xmes_m.xmescrtdp, 
       g_xmes_m.xmescrtdt,g_xmes_m.xmesmodid,g_xmes_m.xmesmoddt,g_xmes_m.xmesownid_desc,g_xmes_m.xmesowndp_desc, 
       g_xmes_m.xmescrtid_desc,g_xmes_m.xmescrtdp_desc,g_xmes_m.xmesmodid_desc
   
   
   #檢查是否允許此動作
   IF NOT axmi400_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_xmes_m_mask_o.* =  g_xmes_m.*
   CALL axmi400_xmes_t_mask()
   LET g_xmes_m_mask_n.* =  g_xmes_m.*
   
   CALL axmi400_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
      
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL axmi400_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_xmesdocno_t = g_xmes_m.xmesdocno
      LET g_xmes001_t = g_xmes_m.xmes001
 
 
      DELETE FROM xmes_t
       WHERE xmesent = g_enterprise AND xmessite = g_site AND xmesdocno = g_xmes_m.xmesdocno
         AND xmes001 = g_xmes_m.xmes001
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
      
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_xmes_m.xmesdocno,":",SQLERRMESSAGE  
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      
      #end add-point
      
      DELETE FROM xmet_t
       WHERE xmetent = g_enterprise AND xmetsite = g_site AND xmetdocno = g_xmes_m.xmesdocno
         AND xmet001 = g_xmes_m.xmes001
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
      
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmet_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      
      #end add-point
      
            
                                                               
      #add-point:單身刪除前 name="delete.body.b_delete2"
      
      #end add-point
      DELETE FROM xmeu_t
       WHERE xmeuent = g_enterprise AND xmeusite = g_site AND
             xmeudocno = g_xmes_m.xmesdocno AND xmeu001 = g_xmes_m.xmes001
      #add-point:單身刪除中 name="delete.body.m_delete2"
      
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmeu_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete2"
      
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete3"
      
      #end add-point
      DELETE FROM xmez_t
       WHERE xmezent = g_enterprise AND xmezsite = g_site AND
             xmezdocno = g_xmes_m.xmesdocno AND xmez001 = g_xmes_m.xmes001
      #add-point:單身刪除中 name="delete.body.m_delete3"
      
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmez_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete3"
      
      #end add-point
 
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE axmi400_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_xmet_d.clear() 
      CALL g_xmet2_d.clear()       
      CALL g_xmet3_d.clear()       
 
     
      CALL axmi400_ui_browser_refresh()  
      #CALL axmi400_ui_headershow()  
      #CALL axmi400_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      SELECT COUNT(xmesdocno) INTO l_multi_cnt
        FROM xmes_t
       WHERE xmesent = g_enterprise
         AND xmesdocno = g_master_multi_table_t.xmesldocno

      IF (l_multi_cnt + 1) > 1 THEN
         CALL s_transaction_end('Y','0')   
         CLOSE axmi400_cl
         RETURN
      END IF
      #end add-point
      
      #單頭多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_enterprise
   LET l_field_keys[01] = 'xmeslent'
   LET l_var_keys_bak[02] = g_master_multi_table_t.xmesldocno
   LET l_field_keys[02] = 'xmesldocno'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'xmesl_t')
 
      
      #單身多語言刪除
      
      
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL axmi400_browser_fill("")
         CALL axmi400_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE axmi400_cl
 
   #功能已完成,通報訊息中心
   CALL axmi400_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="axmi400.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION axmi400_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #清空第一階單身
   CALL g_xmet_d.clear()
   CALL g_xmet2_d.clear()
   CALL g_xmet3_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   
   #end add-point
   
   #判斷是否填充
   IF axmi400_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT xmet002,xmet003,xmet004,xmet005,xmet006,xmet007,xmet008,xmet009, 
             xmet010,xmet011,xmet012,xmet013,xmet014 ,t1.oocql004 ,t2.oocql004 ,t3.imaal003 ,t4.imaal004 , 
             t5.oocal003 ,t6.ooail003 ,t7.pmaal004 FROM xmet_t",   
                     " INNER JOIN xmes_t ON xmesent = " ||g_enterprise|| " AND xmessite = '" ||g_site|| "' AND xmesdocno = xmetdocno ",
                     " AND xmes001 = xmet001 ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
 
                                    " LEFT JOIN oocql_t t1 ON t1.oocqlent="||g_enterprise||" AND t1.oocql001='215' AND t1.oocql002=xmet003 AND t1.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t2 ON t2.oocqlent="||g_enterprise||" AND t2.oocql001='221' AND t2.oocql002=xmet004 AND t2.oocql003='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t3 ON t3.imaalent="||g_enterprise||" AND t3.imaal001=xmet005 AND t3.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t4 ON t4.imaalent="||g_enterprise||" AND t4.imaal001=xmet005 AND t4.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t5 ON t5.oocalent="||g_enterprise||" AND t5.oocal001=xmet008 AND t5.oocal002='"||g_dlang||"' ",
               " LEFT JOIN ooail_t t6 ON t6.ooailent="||g_enterprise||" AND t6.ooail001=xmet012 AND t6.ooail002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t7 ON t7.pmaalent="||g_enterprise||" AND t7.pmaal001=xmet013 AND t7.pmaal002='"||g_dlang||"' ",
 
                     " WHERE xmetent=? AND xmetsite=? AND xmetdocno=? AND xmet001=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xmet_t.xmet002"
         
         #add-point:單身填充控制 name="b_fill.sql"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axmi400_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR axmi400_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise, g_site,g_xmes_m.xmesdocno,g_xmes_m.xmes001
                                               
      FOREACH b_fill_cs INTO g_xmet_d[l_ac].xmet002,g_xmet_d[l_ac].xmet003,g_xmet_d[l_ac].xmet004,g_xmet_d[l_ac].xmet005, 
          g_xmet_d[l_ac].xmet006,g_xmet_d[l_ac].xmet007,g_xmet_d[l_ac].xmet008,g_xmet_d[l_ac].xmet009, 
          g_xmet_d[l_ac].xmet010,g_xmet_d[l_ac].xmet011,g_xmet_d[l_ac].xmet012,g_xmet_d[l_ac].xmet013, 
          g_xmet_d[l_ac].xmet014,g_xmet_d[l_ac].xmet003_desc,g_xmet_d[l_ac].xmet004_desc,g_xmet_d[l_ac].xmet005_desc, 
          g_xmet_d[l_ac].xmet005_desc_desc,g_xmet_d[l_ac].xmet008_desc,g_xmet_d[l_ac].xmet012_desc,g_xmet_d[l_ac].xmet013_desc 
 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
   #判斷是否填充
   IF axmi400_fill_chk(2) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body2.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT xmeu002,xmeu003,xmeu004,xmeu005,xmeu006,xmeu007,xmeu008,xmeu009, 
             xmeu010,xmeu011 ,t8.oocql004 ,t9.imaal003 ,t10.imaal004 ,t11.oocql004 ,t12.ecaa002 FROM xmeu_t", 
                
                     " INNER JOIN  xmes_t ON xmesent = " ||g_enterprise|| " AND xmessite = '" ||g_site|| "' AND xmesdocno = xmeudocno ",
                     " AND xmes001 = xmeu001 ",
 
                     "",
                     
                                    " LEFT JOIN oocql_t t8 ON t8.oocqlent="||g_enterprise||" AND t8.oocql001='215' AND t8.oocql002=xmeu002 AND t8.oocql003='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t9 ON t9.imaalent="||g_enterprise||" AND t9.imaal001=xmeu003 AND t9.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t10 ON t10.imaalent="||g_enterprise||" AND t10.imaal001=xmeu003 AND t10.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t11 ON t11.oocqlent="||g_enterprise||" AND t11.oocql001='221' AND t11.oocql002=xmeu005 AND t11.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ecaa_t t12 ON t12.ecaaent="||g_enterprise||" AND t12.ecaasite=xmeusite AND t12.ecaa001=xmeu007  ",
 
                     " WHERE xmeuent=? AND xmeusite=? AND xmeudocno=? AND xmeu001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body2.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xmeu_t.xmeu002,xmeu_t.xmeu003,xmeu_t.xmeu004,xmeu_t.xmeu005,xmeu_t.xmeu006"
         
         #add-point:單身填充控制 name="b_fill.sql2"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axmi400_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR axmi400_pb2
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise, g_site,g_xmes_m.xmesdocno,g_xmes_m.xmes001
                                               
      FOREACH b_fill_cs2 INTO g_xmet2_d[l_ac].xmeu002,g_xmet2_d[l_ac].xmeu003,g_xmet2_d[l_ac].xmeu004, 
          g_xmet2_d[l_ac].xmeu005,g_xmet2_d[l_ac].xmeu006,g_xmet2_d[l_ac].xmeu007,g_xmet2_d[l_ac].xmeu008, 
          g_xmet2_d[l_ac].xmeu009,g_xmet2_d[l_ac].xmeu010,g_xmet2_d[l_ac].xmeu011,g_xmet2_d[l_ac].xmeu002_desc, 
          g_xmet2_d[l_ac].xmeu003_desc,g_xmet2_d[l_ac].xmeu003_desc_desc,g_xmet2_d[l_ac].xmeu005_desc, 
          g_xmet2_d[l_ac].xmeu007_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill2.fill"
         
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF axmi400_fill_chk(3) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body3.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT xmezseq,xmez002,xmez003,xmez004,xmez005,xmez006,xmez007 ,t13.imaal003 , 
             t14.imaal004 ,t15.ooial003 ,t16.pmaal003 FROM xmez_t",   
                     " INNER JOIN  xmes_t ON xmesent = " ||g_enterprise|| " AND xmessite = '" ||g_site|| "' AND xmesdocno = xmezdocno ",
                     " AND xmes001 = xmez001 ",
 
                     "",
                     
                                    " LEFT JOIN imaal_t t13 ON t13.imaalent="||g_enterprise||" AND t13.imaal001=xmez002 AND t13.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t14 ON t14.imaalent="||g_enterprise||" AND t14.imaal001=xmez002 AND t14.imaal002='"||g_dlang||"' ",
               " LEFT JOIN ooial_t t15 ON t15.ooialent="||g_enterprise||" AND t15.ooial001=xmez003 AND t15.ooial002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t16 ON t16.pmaalent="||g_enterprise||" AND t16.pmaal001=xmez006 AND t16.pmaal002='"||g_dlang||"' ",
 
                     " WHERE xmezent=? AND xmezsite=? AND xmezdocno=? AND xmez001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body3.fill_sql"
         LET g_sql = "SELECT UNIQUE xmezseq,xmez002,xmez003,xmez004,xmez005,xmez006,xmez007,xmezsite , ",
                     "              t13.imaal003 ,t14.imaal004 ,t15.ooial003 ,t16.pmaal003 ",
                     "  FROM xmez_t INNER JOIN xmes_t ON xmesdocno = xmezdocno AND xmes001 = xmez001 ", 
                     "               LEFT JOIN imaal_t t13 ON t13.imaalent='"||g_enterprise||"' AND t13.imaal001=xmez002 AND t13.imaal002='"||g_dlang||"' ",
                     "               LEFT JOIN imaal_t t14 ON t14.imaalent='"||g_enterprise||"' AND t14.imaal001=xmez002 AND t14.imaal002='"||g_dlang||"' ",
                     "               LEFT JOIN ooial_t t15 ON t15.ooialent='"||g_enterprise||"' AND t15.ooial001=xmez003 AND t15.ooial002='"||g_dlang||"' ",
                     "               LEFT JOIN pmaal_t t16 ON t16.pmaalent='"||g_enterprise||"' AND t16.pmaal001=xmez006 AND t16.pmaal002='"||g_dlang||"' ",
                     " WHERE xmezent=? AND xmezsite = ? AND xmezdocno=? AND xmez001=? " 
         #end add-point
         IF NOT cl_null(g_wc2_table3) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xmez_t.xmezseq"
         
         #add-point:單身填充控制 name="b_fill.sql3"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axmi400_pb3 FROM g_sql
         DECLARE b_fill_cs3 CURSOR FOR axmi400_pb3
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs3 USING g_enterprise, g_site,g_xmes_m.xmesdocno,g_xmes_m.xmes001
                                               
      FOREACH b_fill_cs3 INTO g_xmet3_d[l_ac].xmezseq,g_xmet3_d[l_ac].xmez002,g_xmet3_d[l_ac].xmez003, 
          g_xmet3_d[l_ac].xmez004,g_xmet3_d[l_ac].xmez005,g_xmet3_d[l_ac].xmez006,g_xmet3_d[l_ac].xmez007, 
          g_xmet3_d[l_ac].xmez002_desc,g_xmet3_d[l_ac].xmez002_desc_desc,g_xmet3_d[l_ac].xmez003_desc, 
          g_xmet3_d[l_ac].xmez006_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill3.fill"
         
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   
   #end add-point
   
   CALL g_xmet_d.deleteElement(g_xmet_d.getLength())
   CALL g_xmet2_d.deleteElement(g_xmet2_d.getLength())
   CALL g_xmet3_d.deleteElement(g_xmet3_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE axmi400_pb
   FREE axmi400_pb2
 
   FREE axmi400_pb3
 
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_xmet_d.getLength()
      LET g_xmet_d_mask_o[l_ac].* =  g_xmet_d[l_ac].*
      CALL axmi400_xmet_t_mask()
      LET g_xmet_d_mask_n[l_ac].* =  g_xmet_d[l_ac].*
   END FOR
   
   LET g_xmet2_d_mask_o.* =  g_xmet2_d.*
   FOR l_ac = 1 TO g_xmet2_d.getLength()
      LET g_xmet2_d_mask_o[l_ac].* =  g_xmet2_d[l_ac].*
      CALL axmi400_xmeu_t_mask()
      LET g_xmet2_d_mask_n[l_ac].* =  g_xmet2_d[l_ac].*
   END FOR
   LET g_xmet3_d_mask_o.* =  g_xmet3_d.*
   FOR l_ac = 1 TO g_xmet3_d.getLength()
      LET g_xmet3_d_mask_o[l_ac].* =  g_xmet3_d[l_ac].*
      CALL axmi400_xmez_t_mask()
      LET g_xmet3_d_mask_n[l_ac].* =  g_xmet3_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
 
{</section>}
 
{<section id="axmi400.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION axmi400_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      
      #end add-point    
      DELETE FROM xmet_t
       WHERE xmetent = g_enterprise AND xmetsite = g_site AND
         xmetdocno = ps_keys_bak[1] AND xmet001 = ps_keys_bak[2] AND xmet002 = ps_keys_bak[3]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_xmet_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete2"
      
      #end add-point    
      DELETE FROM xmeu_t
       WHERE xmeuent = g_enterprise AND xmeusite = g_site AND
             xmeudocno = ps_keys_bak[1] AND xmeu001 = ps_keys_bak[2] AND xmeu002 = ps_keys_bak[3] AND xmeu003 = ps_keys_bak[4] AND xmeu004 = ps_keys_bak[5] AND xmeu005 = ps_keys_bak[6] AND xmeu006 = ps_keys_bak[7]
      #add-point:delete_b段刪除中 name="delete_b.m_delete2"
      
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmeu_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_xmet2_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete2"
      
      #end add-point    
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete3"
      
      #end add-point    
      DELETE FROM xmez_t
       WHERE xmezent = g_enterprise AND xmezsite = g_site AND
             xmezdocno = ps_keys_bak[1] AND xmez001 = ps_keys_bak[2] AND xmezseq = ps_keys_bak[3]
      #add-point:delete_b段刪除中 name="delete_b.m_delete3"
      
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmez_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_xmet3_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete3"
      
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other name="delete_b.other"
   
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="axmi400.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION axmi400_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      
      #end add-point 
      INSERT INTO xmet_t
                  (xmetent, xmetsite,
                   xmetdocno,xmet001,
                   xmet002
                   ,xmet003,xmet004,xmet005,xmet006,xmet007,xmet008,xmet009,xmet010,xmet011,xmet012,xmet013,xmet014) 
            VALUES(g_enterprise, g_site,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_xmet_d[g_detail_idx].xmet003,g_xmet_d[g_detail_idx].xmet004,g_xmet_d[g_detail_idx].xmet005, 
                       g_xmet_d[g_detail_idx].xmet006,g_xmet_d[g_detail_idx].xmet007,g_xmet_d[g_detail_idx].xmet008, 
                       g_xmet_d[g_detail_idx].xmet009,g_xmet_d[g_detail_idx].xmet010,g_xmet_d[g_detail_idx].xmet011, 
                       g_xmet_d[g_detail_idx].xmet012,g_xmet_d[g_detail_idx].xmet013,g_xmet_d[g_detail_idx].xmet014) 
 
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmet_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_xmet_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
      
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert2"
      
      #end add-point 
      INSERT INTO xmeu_t
                  (xmeuent, xmeusite,
                   xmeudocno,xmeu001,
                   xmeu002,xmeu003,xmeu004,xmeu005,xmeu006
                   ,xmeu007,xmeu008,xmeu009,xmeu010,xmeu011) 
            VALUES(g_enterprise, g_site,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5],ps_keys[6],ps_keys[7]
                   ,g_xmet2_d[g_detail_idx].xmeu007,g_xmet2_d[g_detail_idx].xmeu008,g_xmet2_d[g_detail_idx].xmeu009, 
                       g_xmet2_d[g_detail_idx].xmeu010,g_xmet2_d[g_detail_idx].xmeu011)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert2"
      
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmeu_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_xmet2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert2"
      
      #end add-point
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert3"
      
      #end add-point 
      INSERT INTO xmez_t
                  (xmezent, xmezsite,
                   xmezdocno,xmez001,
                   xmezseq
                   ,xmez002,xmez003,xmez004,xmez005,xmez006,xmez007) 
            VALUES(g_enterprise, g_site,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_xmet3_d[g_detail_idx].xmez002,g_xmet3_d[g_detail_idx].xmez003,g_xmet3_d[g_detail_idx].xmez004, 
                       g_xmet3_d[g_detail_idx].xmez005,g_xmet3_d[g_detail_idx].xmez006,g_xmet3_d[g_detail_idx].xmez007) 
 
      #add-point:insert_b段資料新增中 name="insert_b.m_insert3"
      
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmez_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_xmet3_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert3"
      
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other name="insert_b.other"
   
   #end add-point     
   
END FUNCTION
 
{</section>}
 
{<section id="axmi400.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION axmi400_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmet_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      
      #end add-point 
      
      #將遮罩欄位還原
      CALL axmi400_xmet_t_mask_restore('restore_mask_o')
               
      UPDATE xmet_t 
         SET (xmetdocno,xmet001,
              xmet002
              ,xmet003,xmet004,xmet005,xmet006,xmet007,xmet008,xmet009,xmet010,xmet011,xmet012,xmet013,xmet014) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_xmet_d[g_detail_idx].xmet003,g_xmet_d[g_detail_idx].xmet004,g_xmet_d[g_detail_idx].xmet005, 
                  g_xmet_d[g_detail_idx].xmet006,g_xmet_d[g_detail_idx].xmet007,g_xmet_d[g_detail_idx].xmet008, 
                  g_xmet_d[g_detail_idx].xmet009,g_xmet_d[g_detail_idx].xmet010,g_xmet_d[g_detail_idx].xmet011, 
                  g_xmet_d[g_detail_idx].xmet012,g_xmet_d[g_detail_idx].xmet013,g_xmet_d[g_detail_idx].xmet014)  
 
         WHERE xmetent = g_enterprise AND xmetsite = g_site AND xmetdocno = ps_keys_bak[1] AND xmet001 = ps_keys_bak[2] AND xmet002 = ps_keys_bak[3]
      #add-point:update_b段修改中 name="update_b.m_update"
      
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmet_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmet_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL axmi400_xmet_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmeu_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update2"
      
      #end add-point  
      
      #將遮罩欄位還原
      CALL axmi400_xmeu_t_mask_restore('restore_mask_o')
               
      UPDATE xmeu_t 
         SET (xmeudocno,xmeu001,
              xmeu002,xmeu003,xmeu004,xmeu005,xmeu006
              ,xmeu007,xmeu008,xmeu009,xmeu010,xmeu011) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5],ps_keys[6],ps_keys[7]
              ,g_xmet2_d[g_detail_idx].xmeu007,g_xmet2_d[g_detail_idx].xmeu008,g_xmet2_d[g_detail_idx].xmeu009, 
                  g_xmet2_d[g_detail_idx].xmeu010,g_xmet2_d[g_detail_idx].xmeu011) 
         WHERE xmeuent = g_enterprise AND xmeusite = g_site AND xmeudocno = ps_keys_bak[1] AND xmeu001 = ps_keys_bak[2] AND xmeu002 = ps_keys_bak[3] AND xmeu003 = ps_keys_bak[4] AND xmeu004 = ps_keys_bak[5] AND xmeu005 = ps_keys_bak[6] AND xmeu006 = ps_keys_bak[7]
      #add-point:update_b段修改中 name="update_b.m_update2"
      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmeu_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmeu_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL axmi400_xmeu_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update2"
      
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmez_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update3"
      
      #end add-point  
      
      #將遮罩欄位還原
      CALL axmi400_xmez_t_mask_restore('restore_mask_o')
               
      UPDATE xmez_t 
         SET (xmezdocno,xmez001,
              xmezseq
              ,xmez002,xmez003,xmez004,xmez005,xmez006,xmez007) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_xmet3_d[g_detail_idx].xmez002,g_xmet3_d[g_detail_idx].xmez003,g_xmet3_d[g_detail_idx].xmez004, 
                  g_xmet3_d[g_detail_idx].xmez005,g_xmet3_d[g_detail_idx].xmez006,g_xmet3_d[g_detail_idx].xmez007)  
 
         WHERE xmezent = g_enterprise AND xmezsite = g_site AND xmezdocno = ps_keys_bak[1] AND xmez001 = ps_keys_bak[2] AND xmezseq = ps_keys_bak[3]
      #add-point:update_b段修改中 name="update_b.m_update3"
      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmez_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmez_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL axmi400_xmez_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update3"
      
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
 
   
 
   
   #add-point:update_b段other name="update_b.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axmi400.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION axmi400_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="axmi400.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION axmi400_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="axmi400.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION axmi400_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
    
   #先刷新資料
   #CALL axmi400_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "xmet_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN axmi400_bcl USING g_enterprise, g_site,
                                       g_xmes_m.xmesdocno,g_xmes_m.xmes001,g_xmet_d[g_detail_idx].xmet002  
                                               
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "axmi400_bcl:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "xmeu_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN axmi400_bcl2 USING g_enterprise, g_site,
                                             g_xmes_m.xmesdocno,g_xmes_m.xmes001,g_xmet2_d[g_detail_idx].xmeu002, 
                                                 g_xmet2_d[g_detail_idx].xmeu003,g_xmet2_d[g_detail_idx].xmeu004, 
                                                 g_xmet2_d[g_detail_idx].xmeu005,g_xmet2_d[g_detail_idx].xmeu006 
 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "axmi400_bcl2:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "xmez_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN axmi400_bcl3 USING g_enterprise, g_site,
                                             g_xmes_m.xmesdocno,g_xmes_m.xmes001,g_xmet3_d[g_detail_idx].xmezseq 
 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "axmi400_bcl3:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other name="lock_b.other"
   
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axmi400.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION axmi400_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmi400_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmi400_bcl2
   END IF
 
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmi400_bcl3
   END IF
 
 
   
 
 
   #add-point:unlock_b段other name="unlock_b.other"
   
   #end add-point  
 
END FUNCTION
 
{</section>}
 
{<section id="axmi400.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION axmi400_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   CALL cl_set_comp_entry("xmesdocno",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("xmesdocno,xmes001",TRUE)
      CALL cl_set_comp_entry("",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="axmi400.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION axmi400_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("xmesdocno,xmes001",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("xmesdocno",FALSE)
   END IF 
 
   IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("",FALSE)
      END IF
   END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="axmi400.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION axmi400_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
 
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   CALL cl_set_comp_entry("xmet006",TRUE)
   #end add-point  
END FUNCTION
 
{</section>}
 
{<section id="axmi400.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION axmi400_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   DEFINE l_xmet006  LIKE xmet_t.xmet006 
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   
   #判斷料件是否存在產品特徵
   IF NOT cl_null(g_detail_idx) AND g_detail_idx > 0 THEN   
      LET l_xmet006 = ''
      SELECT imaa005 INTO l_xmet006
        FROM imaa_t
       WHERE imaaent = g_enterprise AND imaa001 = g_xmet_d[l_ac].xmet005
      IF cl_get_para(g_enterprise,g_site,'S-BAS-0036') = "N" THEN
         LET g_xmet_d[l_ac].xmet006 = ''
         CALL cl_set_comp_entry("xmet006",FALSE)
      ELSE
         IF cl_null(l_xmet006) THEN
            LET g_xmet_d[l_ac].xmet006 = ''
            CALL cl_set_comp_entry("xmet006",FALSE)
         END IF
      END IF
   END IF
   #end add-point     
END FUNCTION
 
{</section>}
 
{<section id="axmi400.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION axmi400_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   CALL cl_set_act_visible("axmi400_detail_upd",TRUE)   #add--2015/07/16 By shiun
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="axmi400.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION axmi400_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   DEFINE l_cnt   LIKE type_t.num5   #add--2015/07/16 By shiun
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   #add--2015/07/16 By shiun--(S)
   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt
     FROM bmaa_t
    WHERE bmaaent = g_enterprise
      AND bmaasite = g_site
      AND bmaa001 = g_xmes_m.xmesdocno
      AND bmaa002 = ' '
   IF l_cnt = 0 THEN
      CALL cl_set_act_visible("axmi400_detail_upd",FALSE)
   END IF
   #add--2015/07/16 By shiun--(E)
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="axmi400.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION axmi400_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="axmi400.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION axmi400_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="axmi400.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION axmi400_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
   
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " xmesdocno = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " xmes001 = '", g_argv[02], "' AND "
   END IF
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
         INITIALIZE g_wc2_table2 TO NULL
 
         INITIALIZE g_wc2_table3 TO NULL
 
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "xmes_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "xmet_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "xmeu_t" 
                  LET g_wc2_table2 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "xmez_t" 
                  LET g_wc2_table3 = la_wc[li_idx].wc
 
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
            OR NOT cl_null(g_wc2_table2)
 
            OR NOT cl_null(g_wc2_table3)
 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
            IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
            END IF
 
            IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
            END IF
 
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
 
{</section>}
 
{<section id="axmi400.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION axmi400_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_xmes_m.xmesdocno IS NULL
      OR g_xmes_m.xmes001 IS NULL
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN axmi400_cl USING g_enterprise, g_site,g_xmes_m.xmesdocno,g_xmes_m.xmes001
   IF STATUS THEN
      CLOSE axmi400_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axmi400_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE axmi400_master_referesh USING g_site,g_xmes_m.xmesdocno,g_xmes_m.xmes001 INTO g_xmes_m.xmesdocno, 
       g_xmes_m.xmes001,g_xmes_m.xmesstus,g_xmes_m.xmesownid,g_xmes_m.xmesowndp,g_xmes_m.xmescrtid,g_xmes_m.xmescrtdp, 
       g_xmes_m.xmescrtdt,g_xmes_m.xmesmodid,g_xmes_m.xmesmoddt,g_xmes_m.xmesownid_desc,g_xmes_m.xmesowndp_desc, 
       g_xmes_m.xmescrtid_desc,g_xmes_m.xmescrtdp_desc,g_xmes_m.xmesmodid_desc
   
 
   #檢查是否允許此動作
   IF NOT axmi400_action_chk() THEN
      CLOSE axmi400_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_xmes_m.xmesdocno,g_xmes_m.xmesl003,g_xmes_m.xmesl004,g_xmes_m.xmes001,g_xmes_m.xmesstus, 
       g_xmes_m.xmesownid,g_xmes_m.xmesownid_desc,g_xmes_m.xmesowndp,g_xmes_m.xmesowndp_desc,g_xmes_m.xmescrtid, 
       g_xmes_m.xmescrtid_desc,g_xmes_m.xmescrtdp,g_xmes_m.xmescrtdp_desc,g_xmes_m.xmescrtdt,g_xmes_m.xmesmodid, 
       g_xmes_m.xmesmodid_desc,g_xmes_m.xmesmoddt
 
   CASE g_xmes_m.xmesstus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_xmes_m.xmesstus
            
            WHEN "N"
               HIDE OPTION "inactive"
            WHEN "Y"
               HIDE OPTION "active"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
#150424 by whitney mark start
#      #校驗:範本料號+版本只能存在一筆有效資料
#      IF NOT cl_null(g_xmes_m.xmesdocno) AND NOT cl_null(g_xmes_m.xmes001) THEN 
#         IF g_xmes_m.xmesstus = "N" THEN 
#            IF NOT axmi400_xmes001_chk() THEN
#               #檢查失敗時後續處理
#               RETURN
#            END IF
#         END IF
#      END IF
#150424 by whitney mark end
      #end add-point
      
      
	  
      ON ACTION inactive
         IF cl_auth_chk_act("inactive") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.inactive"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION active
         IF cl_auth_chk_act("active") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.active"
            
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      ) OR 
      g_xmes_m.xmesstus = lc_state OR cl_null(lc_state) THEN
      CLOSE axmi400_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
  
   #end add-point
   
   LET g_xmes_m.xmesmodid = g_user
   LET g_xmes_m.xmesmoddt = cl_get_current()
   LET g_xmes_m.xmesstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE xmes_t 
      SET (xmesstus,xmesmodid,xmesmoddt) 
        = (g_xmes_m.xmesstus,g_xmes_m.xmesmodid,g_xmes_m.xmesmoddt)     
    WHERE xmesent = g_enterprise AND xmessite = g_site AND xmesdocno = g_xmes_m.xmesdocno
      AND xmes001 = g_xmes_m.xmes001
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE axmi400_master_referesh USING g_site,g_xmes_m.xmesdocno,g_xmes_m.xmes001 INTO g_xmes_m.xmesdocno, 
          g_xmes_m.xmes001,g_xmes_m.xmesstus,g_xmes_m.xmesownid,g_xmes_m.xmesowndp,g_xmes_m.xmescrtid, 
          g_xmes_m.xmescrtdp,g_xmes_m.xmescrtdt,g_xmes_m.xmesmodid,g_xmes_m.xmesmoddt,g_xmes_m.xmesownid_desc, 
          g_xmes_m.xmesowndp_desc,g_xmes_m.xmescrtid_desc,g_xmes_m.xmescrtdp_desc,g_xmes_m.xmesmodid_desc 
 
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_xmes_m.xmesdocno,g_xmes_m.xmesl003,g_xmes_m.xmesl004,g_xmes_m.xmes001,g_xmes_m.xmesstus, 
          g_xmes_m.xmesownid,g_xmes_m.xmesownid_desc,g_xmes_m.xmesowndp,g_xmes_m.xmesowndp_desc,g_xmes_m.xmescrtid, 
          g_xmes_m.xmescrtid_desc,g_xmes_m.xmescrtdp,g_xmes_m.xmescrtdp_desc,g_xmes_m.xmescrtdt,g_xmes_m.xmesmodid, 
          g_xmes_m.xmesmodid_desc,g_xmes_m.xmesmoddt
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   
   #end add-point  
 
   CLOSE axmi400_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL axmi400_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axmi400.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION axmi400_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_xmet_d.getLength() THEN
         LET g_detail_idx = g_xmet_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmet_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmet_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_xmet2_d.getLength() THEN
         LET g_detail_idx = g_xmet2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmet2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmet2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_xmet3_d.getLength() THEN
         LET g_detail_idx = g_xmet3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmet3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmet3_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axmi400.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION axmi400_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   
   #end add-point
    
   LET l_ac = li_ac
   
   CALL axmi400_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
 
{</section>}
 
{<section id="axmi400.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION axmi400_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axmi400.status_show" >}
PRIVATE FUNCTION axmi400_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="axmi400.mask_functions" >}
&include "erp/axm/axmi400_mask.4gl"
 
{</section>}
 
{<section id="axmi400.signature" >}
   
 
{</section>}
 
{<section id="axmi400.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION axmi400_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_xmes_m.xmesdocno
   LET g_pk_array[1].column = 'xmesdocno'
   LET g_pk_array[2].values = g_xmes_m.xmes001
   LET g_pk_array[2].column = 'xmes001'
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axmi400.other_dialog" readonly="Y" >}
   
 
{</section>}
 
{<section id="axmi400.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION axmi400_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL axmi400_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_xmes_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axmi400.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION axmi400_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="axmi400.other_function" readonly="Y" >}

################################################################################
# Descriptions...: 版本狀態碼檢查
# Memo...........:
# Usage..........: CALL axmi400_xmes001_chk()
#                  RETURNING r_success
# Input parameter: 
#                : 
# Return code....: r_success      TRUE/FALSE
#                : 
# Date & Author..: 14/06/19 By emma
# Modify.........:
################################################################################
PRIVATE FUNCTION axmi400_xmes001_chk()
DEFINE r_success         LIKE type_t.num5

   LET r_success = TRUE
   
   IF cl_null(g_xmes_m.xmesdocno) AND cl_null(g_xmes_m.xmes001) THEN 
      RETURN r_success
   END IF
   
   #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
   INITIALIZE g_chkparam.* TO NULL
   
   #設定g_chkparam.*的參數
   LET g_chkparam.arg1 = g_xmes_m.xmesdocno
      
   #呼叫檢查存在並帶值的library
   IF NOT cl_chk_exist("v_xmes001") THEN
      #檢查失敗時後續處理
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 抓取部位名稱
# Memo...........:
# Usage..........: CALL axmi400_xmet003_ref()
#                  
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 14/06/19 By emma
# Modify.........:
################################################################################
PRIVATE FUNCTION axmi400_xmet003_ref()
   
   LET g_xmet_d[l_ac].xmet003_desc = ''
   DISPLAY BY NAME g_xmet_d[l_ac].xmet003_desc
   
   IF cl_null(g_xmet_d[l_ac].xmet003) THEN
      RETURN
   END IF
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmet_d[l_ac].xmet003
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='215' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmet_d[l_ac].xmet003_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmet_d[l_ac].xmet003_desc
   
END FUNCTION

################################################################################
# Descriptions...: 抓取作業名稱
# Memo...........:
# Usage..........: CALL axmi400_xmet004_ref()
#                  
# Input parameter: 
#                :
# Return code....: 
#                : 
# Date & Author..: 14/06/19 By emma
# Modify.........:
################################################################################
PRIVATE FUNCTION axmi400_xmet004_ref()
   
   LET g_xmet_d[l_ac].xmet004_desc = ''
   DISPLAY BY NAME g_xmet_d[l_ac].xmet004_desc
   
   IF cl_null(g_xmet_d[l_ac].xmet004) THEN
      RETURN
   END IF
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmet_d[l_ac].xmet004
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='221' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmet_d[l_ac].xmet004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmet_d[l_ac].xmet004_desc
END FUNCTION

################################################################################
# Descriptions...: 抓取料號的品名、規格
# Memo...........:
# Usage..........: CALL axmi400_xmet005_ref()
#                  
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 14/06/19 By emma
# Modify.........:
################################################################################
PRIVATE FUNCTION axmi400_xmet005_ref()
   LET g_xmet_d[l_ac].xmet005_desc = ''
   LET g_xmet_d[l_ac].xmet005_desc_desc = ''
   DISPLAY BY NAME g_xmet_d[l_ac].xmet005_desc
   DISPLAY BY NAME g_xmet_d[l_ac].xmet005_desc_desc
   
   IF cl_null(g_xmet_d[l_ac].xmet005) THEN
      RETURN
   END IF
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmet_d[l_ac].xmet005
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmet_d[l_ac].xmet005_desc = '', g_rtn_fields[1] , ''
   LET g_xmet_d[l_ac].xmet005_desc_desc = '', g_rtn_fields[2] , ''
   DISPLAY BY NAME g_xmet_d[l_ac].xmet005_desc
   DISPLAY BY NAME g_xmet_d[l_ac].xmet005_desc_desc
END FUNCTION

################################################################################
# Descriptions...: 抓取廠商名稱
# Memo...........:
# Usage..........: CALL axmi400_xmet013_ref()
#                  
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 14/06/19 By emma
# Modify.........:
################################################################################
PRIVATE FUNCTION axmi400_xmet013_ref()
   
   LET g_xmet_d[l_ac].xmet013_desc = ''
   DISPLAY BY NAME g_xmet_d[l_ac].xmet013_desc
   
   IF cl_null(g_xmet_d[l_ac].xmet013) THEN
      RETURN
   END IF
   
    INITIALIZE g_ref_fields TO NULL
    LET g_ref_fields[1] = g_xmet_d[l_ac].xmet013
    CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
    LET g_xmet_d[l_ac].xmet013_desc = '', g_rtn_fields[1] , ''
    DISPLAY BY NAME g_xmet_d[l_ac].xmet013_desc
END FUNCTION

################################################################################
# Descriptions...: 抓取部位名稱
# Memo...........:
# Usage..........: CALL axmi400_xmeu002_ref()
#                  
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 14/06/19 By emma
# Modify.........:
################################################################################
PRIVATE FUNCTION axmi400_xmeu002_ref()
   
   LET g_xmet2_d[l_ac].xmeu002_desc = ''
   DISPLAY BY NAME g_xmet2_d[l_ac].xmeu002_desc
   
   IF cl_null(g_xmet2_d[l_ac].xmeu002) THEN
      RETURN
   END IF
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmet2_d[l_ac].xmeu002
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='215' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmet2_d[l_ac].xmeu002_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmet2_d[l_ac].xmeu002_desc
END FUNCTION

################################################################################
# Descriptions...: 抓取料號品名、規格
# Memo...........:
# Usage..........: CALL axmi400_xmeu003_ref()
#                  
# Input parameter: 
#                : 
# Return code....:
#                : 
# Date & Author..: 14/06/19 By emma
# Modify.........:
################################################################################
PRIVATE FUNCTION axmi400_xmeu003_ref()
   LET g_xmet2_d[l_ac].xmeu003_desc = ''
   LET g_xmet2_d[l_ac].xmeu003_desc_desc = ''
   DISPLAY BY NAME g_xmet2_d[l_ac].xmeu003_desc
   DISPLAY BY NAME g_xmet2_d[l_ac].xmeu003_desc_desc
   
   IF cl_null(g_xmet2_d[l_ac].xmeu003) THEN
      RETURN
   END IF
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmet2_d[l_ac].xmeu003
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmet2_d[l_ac].xmeu003_desc = '', g_rtn_fields[1] , ''
   LET g_xmet2_d[l_ac].xmeu003_desc_desc = '', g_rtn_fields[2] , ''
   DISPLAY BY NAME g_xmet2_d[l_ac].xmeu003_desc
   DISPLAY BY NAME g_xmet2_d[l_ac].xmeu003_desc_desc
END FUNCTION

################################################################################
# Descriptions...: 抓取作業名稱
# Memo...........:
# Usage..........: CALL axmi400_xmeu005_ref()
#                 
# Input parameter: 
#                :
# Return code....: 
#                : 
# Date & Author..: 14/06/19 By emma
# Modify.........:
################################################################################
PRIVATE FUNCTION axmi400_xmeu005_ref()
   LET g_xmet2_d[l_ac].xmeu005_desc = ''
   DISPLAY BY NAME g_xmet2_d[l_ac].xmeu005_desc
   
   IF cl_null(g_xmet2_d[l_ac].xmeu005) THEN
      RETURN
   END IF
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmet2_d[l_ac].xmeu005
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='221' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmet2_d[l_ac].xmeu005_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmet2_d[l_ac].xmeu005_desc
END FUNCTION

################################################################################
# Descriptions...: 抓取工作站說明
# Memo...........:
# Usage..........: CALL axmi400_xmeu007_ref()
#                  
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 14/06/19 By emma
# Modify.........:
################################################################################
PRIVATE FUNCTION axmi400_xmeu007_ref()
   LET g_xmet2_d[l_ac].xmeu007_desc = ''
   DISPLAY BY NAME g_xmet2_d[l_ac].xmeu007_desc
   
   IF cl_null(g_xmet2_d[l_ac].xmeu007) THEN
      RETURN
   END IF
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmet2_d[l_ac].xmeu007
   CALL ap_ref_array2(g_ref_fields,"SELECT ecaa002 FROM ecaa_t WHERE ecaaent='"||g_enterprise||"' AND ecaasite='" ||g_site|| "' AND ecaa001=? ","") RETURNING g_rtn_fields
   LET g_xmet2_d[l_ac].xmeu007_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmet2_d[l_ac].xmeu007_desc
END FUNCTION

################################################################################
# Descriptions...: 抓取範本說明、助記碼
# Memo...........:
# Usage..........: CALL axmi400_xmesdocno_ref()
#                  
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 14/06/19 By emma
# Modify.........:
################################################################################
PRIVATE FUNCTION axmi400_xmesdocno_ref()
   LET g_xmes_m.xmesl003 = ''
   LET g_xmes_m.xmesl004 = ''
   DISPLAY BY NAME g_xmes_m.xmesl003
   DISPLAY BY NAME g_xmes_m.xmesl004
   
   IF cl_null(g_xmes_m.xmesdocno) THEN
      RETURN
   END IF
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmes_m.xmesdocno
   CALL ap_ref_array2(g_ref_fields," SELECT xmesl003,xmesl004 FROM xmesl_t WHERE xmeslent = '"
       ||g_enterprise||"' AND xmesldocno = ? AND xmesl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmes_m.xmesl003 = '', g_rtn_fields[1] , ''
   LET g_xmes_m.xmesl004 = '', g_rtn_fields[2] , ''
   DISPLAY BY NAME g_xmes_m.xmesl003
   DISPLAY BY NAME g_xmes_m.xmesl004

END FUNCTION

################################################################################
# Descriptions...: 抓取單位說明
# Memo...........:
# Usage..........: CALL axmi400_xmet008_ref()
#                  
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 14/07/10 By emma
# Modify.........:
################################################################################
PRIVATE FUNCTION axmi400_xmet008_ref()
   LET g_xmet_d[l_ac].xmet008_desc = ''
   DISPLAY BY NAME g_xmet_d[l_ac].xmet008_desc
   
   IF cl_null(g_xmet_d[l_ac].xmet008) THEN
      RETURN
   END IF
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmet_d[l_ac].xmet008
   CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"' ","") RETURNING g_rtn_fields
   LET g_xmet_d[l_ac].xmet008_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmet_d[l_ac].xmet008_desc
END FUNCTION

################################################################################
# Descriptions...: 抓取幣別說明
# Memo...........:
# Usage..........: CALL axmi400_xmet012_ref()
#                  
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 14/07/10 By emma
# Modify.........:
################################################################################
PRIVATE FUNCTION axmi400_xmet012_ref()
   LET g_xmet_d[l_ac].xmet012_desc = ''
   DISPLAY BY NAME g_xmet_d[l_ac].xmet012_desc
   
   IF cl_null(g_xmet_d[l_ac].xmet012) THEN
      RETURN
   END IF
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmet_d[l_ac].xmet012
   CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"' ","") RETURNING g_rtn_fields
   LET g_xmet_d[l_ac].xmet012_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmet_d[l_ac].xmet012_desc
END FUNCTION

################################################################################
# Descriptions...: 取匯率
# Memo...........:
# Usage..........: CALL axmi400_get_xmez004(p_xmez003)
# Input parameter: p_xmez003：幣別
# Return code....: r_xmez004：匯率
# Date & Author..: 2014/12/01 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION axmi400_get_xmez004(p_xmez003)
   DEFINE p_xmez003     LIKE xmez_t.xmez003
   DEFINE r_xmez004     LIKE xmez_t.xmez004
   DEFINE l_ooab002     LIKE ooab_t.ooab002
   DEFINE l_ooef016     LIKE ooef_t.ooef016

   LET r_xmez004 = 0

   IF NOT cl_null(p_xmez003) THEN
      LET l_ooef016 = ''
      SELECT ooef016 INTO l_ooef016
        FROM ooef_t
       WHERE ooefent  = g_enterprise
         AND ooef001 = g_site

      CALL cl_get_para(g_enterprise,g_site,'S-BAS-0010') RETURNING l_ooab002
      CALL s_aooi160_get_exrate('1',g_site,g_today,p_xmez003,l_ooef016,0,l_ooab002)
           RETURNING r_xmez004
   END IF

   RETURN r_xmez004
END FUNCTION

################################################################################
# Descriptions...: 展BOM
# Memo...........:
# Usage..........: CALL axmi400_item_bom(p_item)
# Input parameter: p_item   展BOM料號
# Date & Author..: 2015/07/16 By shiun
# Modify.........:
################################################################################
PRIVATE FUNCTION axmi400_item_bom(p_item)
DEFINE p_item     LIKE bmaa_t.bmaa001
DEFINE l_sql      STRING
DEFINE l_sql_2    STRING
DEFINE l_ac       LIKE type_t.num5
DEFINE l_count    LIKE type_t.num5
DEFINE l_bmbalen  LIKE type_t.num5
DEFINE l_bmba     DYNAMIC ARRAY OF RECORD
       bmbaent    LIKE bmba_t.bmbaent,
       bmbasite   LIKE bmba_t.bmbasite,
       bmba001    LIKE bmba_t.bmba001,
       bmba002    LIKE bmba_t.bmba002,
       bmba003    LIKE bmba_t.bmba003,
       bmba004    LIKE bmba_t.bmba004,
       bmba005    DATETIME YEAR TO SECOND,
       bmba007    LIKE bmba_t.bmba007,
       bmba008    LIKE bmba_t.bmba008,
       bmba009    LIKE type_t.chr10,
       bmba010    LIKE bmba_t.bmba010,
       bmba011    LIKE bmba_t.bmba011,
       bmba012    LIKE bmba_t.bmba012,
       bmbc010    LIKE type_t.chr1000,
       ooff013    LIKE type_t.chr1000,
       l_ac       LIKE type_t.num5
END RECORD
DEFINE l_bmba005  DATETIME YEAR TO SECOND     #有效日期
   
   LET l_bmba005 = cl_get_current()
   LET l_sql = " SELECT bmbaent,bmbasite,bmba001,bmba002,bmba003,bmba004,bmba005,bmba007,bmba008,bmba009,bmba010,bmba011,bmba012",
               "   FROM bmba_t ",
               "  WHERE bmbaent = ",g_enterprise,
               "    AND bmbasite = '",g_site,"'",
               "    AND bmba001 = '",p_item,"'",
               "    AND bmba002 = ' '",
               "    AND to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') < '",l_bmba005,"'",
               "    AND (to_char(bmba006,'yyyy-mm-dd hh24:mi:ss') >= '",l_bmba005,"' OR bmba006 IS NULL)",
               "  ORDER BY bmba009"
     PREPARE axmi400_prepare_bom FROM l_sql
     DECLARE axmi400_bom CURSOR FOR axmi400_prepare_bom
     LET l_ac = l_ac + 1
     FOREACH axmi400_bom INTO l_bmba[l_ac].*
        IF STATUS THEN
           INITIALIZE g_errparam TO NULL
           LET g_errparam.extend = 'foreach:'
           LET g_errparam.code   = STATUS
           LET g_errparam.popup  = TRUE
           CALL cl_err()
           EXIT FOREACH
        END IF
        LET l_ac = l_ac + 1
     END FOREACH
     
     LET l_bmbalen = l_bmba.getLength() - 1
     IF l_bmbalen < 0 THEN
        LET l_bmbalen = 0
     END IF
     
     FOR l_ac = 1 TO l_bmbalen        
         LET l_sql_2 = " SELECT COUNT(*) ",
                       "   FROM bmba_t ",
                       " WHERE bmbaent = '",l_bmba[l_ac].bmbaent,"' ",
                       " AND bmbasite = '",l_bmba[l_ac].bmbasite,"' ",
                       " AND bmba001 = '",l_bmba[l_ac].bmba003,"' ",
                       " AND bmba002 = '",l_bmba[l_ac].bmba002,"' ",
                       " AND to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') < '",l_bmba005,"'",
                       " AND (to_char(bmba006,'yyyy-mm-dd hh24:mi:ss') >= '",l_bmba005,"' OR bmba006 IS NULL)"
         PREPARE axmi400_count FROM l_sql_2
         EXECUTE axmi400_count INTO l_count
         IF NOT l_count THEN
            LET g_bmba[g_item_ac].* = l_bmba[l_ac].*
            LET g_item_ac = g_item_ac + 1
         END IF         
         
         IF NOT cl_null(l_bmba[l_ac].bmba003) THEN
             CALL axmi400_item_bom(l_bmba[l_ac].bmba003)
         END IF
     END FOR
END FUNCTION

################################################################################
# Descriptions...: bom資料寫入單身
# Memo...........:
# Usage..........: CALL axmi400_xmet_ins(p_xmesdocno,p_xmes001)
# Input parameter: p_xmesdocno   料號
#                : p_xmes001     版次
# Return code....: r_success     成功否
# Date & Author..: 2015/07/16 By shiun
# Modify.........:
################################################################################
PRIVATE FUNCTION axmi400_xmet_ins(p_xmesdocno,p_xmes001)
DEFINE p_xmesdocno   LIKE xmes_t.xmesdocno
DEFINE p_xmes001     LIKE xmes_t.xmes001
DEFINE r_success     LIKE type_t.num5
DEFINE l_sql         STRING
DEFINE l_bmbalen     LIKE type_t.num5
DEFINE l_ac          LIKE type_t.num5
DEFINE l_count       LIKE type_t.num5
DEFINE l_seq         LIKE type_t.num5
   
   LET r_success = TRUE
   DELETE FROM xmet_t
    WHERE xmetent = g_enterprise
      AND xmetsite = g_site
      AND xmetdocno = p_xmesdocno
      AND xmet001 = g_xmes_m.xmes001
      
   LET l_bmbalen = g_bmba.getLength()
   IF l_bmbalen < 0 THEN
      LET l_bmbalen = 0
   END IF
   
   LET l_sql = " INSERT INTO xmet_t(xmetent,xmetsite,xmetdocno,xmet001,xmet002,xmet003,",
                  "                    xmet004,xmet005,xmet008,xmet009,xmet010,xmet011)",
                  "             VALUES(?,?,?,?,?, ?,?,?,?,?, ?,?) "
   PREPARE insert_xmet FROM l_sql
   
   FOR l_ac = 1 TO l_bmbalen
      LET l_seq = l_ac * 1000
      
      EXECUTE insert_xmet USING g_enterprise,g_site,p_xmesdocno,p_xmes001,l_seq,g_bmba[l_ac].bmba004,g_bmba[l_ac].bmba007,
                                g_bmba[l_ac].bmba003,g_bmba[l_ac].bmba010,g_bmba[l_ac].bmba011,g_bmba[l_ac].bmba012,'N'
      IF SQLCA.sqlcode THEN
         LET g_errno = SQLCA.sqlcode
         LET r_success = FALSE
         EXIT FOR
      END IF
   END FOR
   
   RETURN r_success
END FUNCTION
################################################################################
# Descriptions...: 製程資料寫入單身
# Memo...........:
# Usage..........: CALL axmi400_xmeu_ins(p_xmesdocno,p_xmes001)
# Input parameter: p_xmesdocno   料號
#                : p_xmes001     版次
# Return code....: r_success     成功否
# Date & Author..: 2015/07/16 By shiun
# Modify.........:
################################################################################
PRIVATE FUNCTION axmi400_xmeu_ins(p_xmesdocno,p_xmes001)
DEFINE p_xmesdocno   LIKE xmes_t.xmesdocno
DEFINE p_xmes001     LIKE xmes_t.xmes001
DEFINE r_success     LIKE type_t.num5
DEFINE l_sql         STRING
DEFINE l_sql_ins     STRING
DEFINE l_imae032     LIKE imae_t.imae032
DEFINE l_imae033     LIKE imae_t.imae033
DEFINE l_ecbb        RECORD LIKE ecbb_t.*
DEFINE l_ooff013     LIKE ooff_t.ooff013
DEFINE l_success     LIKE type_t.num5

   LET r_success = TRUE
   
   DELETE FROM xmeu_t
    WHERE xmeuent = g_enterprise
      AND xmeusite = g_site
      AND xmeudocno = p_xmesdocno
      AND xmeu001 = g_xmes_m.xmes001
   
   SELECT imae032,imae033 INTO l_imae032,l_imae033
     FROM imae_t
    WHERE imaeent = g_enterprise
      AND imaesite = g_site
      AND imae001 = p_xmesdocno
      
   IF NOT cl_null(l_imae032) AND NOT cl_null(l_imae033) THEN
      LET l_sql = " SELECT * ",
                  "   FROM ecbb_t ",
                  "  WHERE ecbbent = ",g_enterprise,
                  "   AND ecbbsite = '",g_site,"' ",
                  "   AND ecbb001 = '",l_imae032,"' ",
                  "   AND ecbb002 = '",l_imae033,"' "
   
      PREPARE axmi400_eccb FROM l_sql
      DECLARE axmi400_ins CURSOR FOR axmi400_eccb
      
      LET l_sql_ins = " INSERT INTO xmeu_t(xmeuent,xmeusite,xmeudocno,xmeu001,xmeu002,xmeu003,xmeu004, ",
                         "                 xmeu005,xmeu006,xmeu007,xmeu008,xmeu009,xmeu010,xmeu011)",
                         "             VALUES(?,?,?,?,?, ?,?,?,?,?, ?,?,?,?) "
      PREPARE insert_xmeu FROM l_sql_ins
      FOREACH axmi400_ins INTO l_ecbb.*
         CALL s_aooi360_sel('7',g_site,l_imae032,l_imae033,l_ecbb.ecbb003,'','','','','','','4') RETURNING l_success,l_ooff013
         EXECUTE insert_xmeu USING g_enterprise,g_site,p_xmesdocno,p_xmes001,' ',' ',l_ecbb.ecbb003,l_ecbb.ecbb004,
                                   l_ecbb.ecbb005,l_ecbb.ecbb012,l_ecbb.ecbb025,l_ecbb.ecbb027,'1',l_ooff013
         IF SQLCA.sqlcode THEN
            LET g_errno = SQLCA.sqlcode
            LET r_success = FALSE
            EXIT FOREACH
         END IF
      END FOREACH
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 單身更新(action)
# Memo...........:
# Usage..........: CALL axmi400_detail_upd()
# Date & Author..: 2015/07/16 By shiun
# Modify.........:
################################################################################
PRIVATE FUNCTION axmi400_detail_upd()

   CALL s_transaction_begin()
   OPEN axmi400_cl USING g_enterprise, g_site,g_xmes_m.xmesdocno,g_xmes_m.xmes001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axmi400_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE axmi400_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   IF cl_ask_confirm('axm-00702') THEN
      LET g_item_ac = 1
      INITIALIZE g_bmba TO NULL
      CALL axmi400_item_bom(g_xmes_m.xmesdocno)
      IF axmi400_xmet_ins(g_xmes_m.xmesdocno,g_xmes_m.xmes001) THEN
         IF axmi400_xmeu_ins(g_xmes_m.xmesdocno,g_xmes_m.xmes001) THEN
            CALL s_transaction_end('Y','0')
         ELSE
            CALL s_transaction_end('N','0')
         END IF
      ELSE
         CALL s_transaction_end('N','0')                        
      END IF                        
   END IF
   
   CALL axmi400_b_fill()
END FUNCTION

 
{</section>}
 
