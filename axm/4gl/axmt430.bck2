#該程式未解開Section, 採用最新樣板產出!
{<section id="axmt430.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0010(2016-07-15 11:15:08), PR版次:0010(2016-08-26 10:39:36)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000058
#+ Filename...: axmt430
#+ Description: 銷售折扣合約維護作業
#+ Creator....: 01588(2015-06-01 11:59:16)
#+ Modifier...: 06814 -SD/PR- 08734
 
{</section>}
 
{<section id="axmt430.global" >}
#應用 t01 樣板自動產生(Version:76)
#add-point:填寫註解說明
#151224-00025#5   2015/12/28  By dorishsu 產品特徵欄位若無開窗輸入反而自行手動輸入時,則無法新增至inam_t
#160314-00009#13  2016/03/29  By xujing   产品特征自动开窗增加参数判断
#160318-00025#38  2016/04/21  By pengxin  將重複內容的錯誤訊息置換為公用錯誤訊息(r.v)
#160608-00005#1   2016/06/16  By dorislai 修正無法列印問題
#160711-00003#1   2016/07/21  By 03079    產品特徵控制 
#160818-00017#42 2016-08-23 By 08734 删除修改未重新判断状态码
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"
GLOBALS "../../../com/sub/4gl/s_apmm101.inc"
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_xmfj_m        RECORD
       xmfjdocno LIKE xmfj_t.xmfjdocno, 
   xmfjdocno_desc LIKE type_t.chr80, 
   xmfjdocdt LIKE xmfj_t.xmfjdocdt, 
   xmfj003 LIKE xmfj_t.xmfj003, 
   xmfj003_desc LIKE type_t.chr80, 
   xmfj001 LIKE xmfj_t.xmfj001, 
   xmfj001_desc LIKE type_t.chr80, 
   xmfj002 LIKE xmfj_t.xmfj002, 
   xmfj002_desc LIKE type_t.chr80, 
   xmfjstus LIKE xmfj_t.xmfjstus, 
   xmfj004 LIKE xmfj_t.xmfj004, 
   xmfj004_desc LIKE type_t.chr80, 
   xmfj005 LIKE xmfj_t.xmfj005, 
   xmfj005_desc LIKE type_t.chr80, 
   xmfj006 LIKE xmfj_t.xmfj006, 
   xmfj007 LIKE xmfj_t.xmfj007, 
   xmfj008 LIKE xmfj_t.xmfj008, 
   xmfj008_desc LIKE type_t.chr80, 
   xmfj009 LIKE xmfj_t.xmfj009, 
   xmfj009_desc LIKE type_t.chr80, 
   xmfj010 LIKE xmfj_t.xmfj010, 
   xmfj010_desc LIKE type_t.chr80, 
   xmfj013 LIKE xmfj_t.xmfj013, 
   xmfj014 LIKE xmfj_t.xmfj014, 
   xmfj015 LIKE xmfj_t.xmfj015, 
   xmfj016 LIKE xmfj_t.xmfj016, 
   xmfj017 LIKE xmfj_t.xmfj017, 
   xmfj018 LIKE xmfj_t.xmfj018, 
   xmfj019 LIKE xmfj_t.xmfj019, 
   xmfj011 LIKE xmfj_t.xmfj011, 
   xmfj012 LIKE xmfj_t.xmfj012, 
   xmfjsite LIKE xmfj_t.xmfjsite, 
   xmfj020 LIKE xmfj_t.xmfj020, 
   xmfj020_desc LIKE type_t.chr80, 
   xmfj030 LIKE xmfj_t.xmfj030, 
   xmfjownid LIKE xmfj_t.xmfjownid, 
   xmfjownid_desc LIKE type_t.chr80, 
   xmfjowndp LIKE xmfj_t.xmfjowndp, 
   xmfjowndp_desc LIKE type_t.chr80, 
   xmfjcrtid LIKE xmfj_t.xmfjcrtid, 
   xmfjcrtid_desc LIKE type_t.chr80, 
   xmfjcrtdp LIKE xmfj_t.xmfjcrtdp, 
   xmfjcrtdp_desc LIKE type_t.chr80, 
   xmfjcrtdt LIKE xmfj_t.xmfjcrtdt, 
   xmfjmodid LIKE xmfj_t.xmfjmodid, 
   xmfjmodid_desc LIKE type_t.chr80, 
   xmfjmoddt LIKE xmfj_t.xmfjmoddt, 
   xmfjcnfid LIKE xmfj_t.xmfjcnfid, 
   xmfjcnfid_desc LIKE type_t.chr80, 
   xmfjcnfdt LIKE xmfj_t.xmfjcnfdt, 
   xmfjpstid LIKE xmfj_t.xmfjpstid, 
   xmfjpstid_desc LIKE type_t.chr80, 
   xmfjpstdt LIKE xmfj_t.xmfjpstdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_xmfl_d        RECORD
       xmflseq LIKE xmfl_t.xmflseq, 
   xmflsite LIKE xmfl_t.xmflsite, 
   xmfl001 LIKE xmfl_t.xmfl001, 
   xmfl002 LIKE xmfl_t.xmfl002, 
   xmfl002_desc LIKE type_t.chr500, 
   xmfl002_desc1 LIKE type_t.chr500, 
   xmfl003 LIKE xmfl_t.xmfl003, 
   xmfl003_desc LIKE type_t.chr500, 
   xmfl005 LIKE xmfl_t.xmfl005, 
   xmfl007 LIKE xmfl_t.xmfl007, 
   xmfl006 LIKE xmfl_t.xmfl006, 
   xmfl006_desc LIKE type_t.chr500, 
   xmfl008 LIKE xmfl_t.xmfl008, 
   xmfl009 LIKE xmfl_t.xmfl009, 
   xmfl010 LIKE xmfl_t.xmfl010, 
   xmfl011 LIKE xmfl_t.xmfl011, 
   xmfl012 LIKE xmfl_t.xmfl012
       END RECORD
PRIVATE TYPE type_g_xmfl2_d RECORD
       xmfmseq LIKE xmfm_t.xmfmseq, 
   xmfm001 LIKE xmfm_t.xmfm001, 
   xmfm002 LIKE xmfm_t.xmfm002, 
   xmfm003 LIKE xmfm_t.xmfm003, 
   xmfm004 LIKE xmfm_t.xmfm004
       END RECORD
PRIVATE TYPE type_g_xmfl3_d RECORD
       xmfkseq LIKE xmfk_t.xmfkseq, 
   xmfk001 LIKE xmfk_t.xmfk001, 
   xmfk001_desc LIKE type_t.chr500, 
   xmfk002 LIKE xmfk_t.xmfk002, 
   xmfk002_desc LIKE type_t.chr500, 
   xmfksite LIKE xmfk_t.xmfksite
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_xmfjdocno LIKE xmfj_t.xmfjdocno,
      b_xmfjdocdt LIKE xmfj_t.xmfjdocdt,
      b_xmfj001 LIKE xmfj_t.xmfj001,
   b_xmfj001_desc LIKE type_t.chr80,
      b_xmfj002 LIKE xmfj_t.xmfj002,
   b_xmfj002_desc LIKE type_t.chr80,
      b_xmfj003 LIKE xmfj_t.xmfj003,
   b_xmfj003_desc LIKE type_t.chr80,
      b_xmfj004 LIKE xmfj_t.xmfj004,
   b_xmfj004_desc LIKE type_t.chr80,
      b_xmfj011 LIKE xmfj_t.xmfj011,
      b_xmfj012 LIKE xmfj_t.xmfj012
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE g_ooef004             LIKE ooef_t.ooef004           #據點的單據別參照表號
#end add-point
       
#模組變數(Module Variables)
DEFINE g_xmfj_m          type_g_xmfj_m
DEFINE g_xmfj_m_t        type_g_xmfj_m
DEFINE g_xmfj_m_o        type_g_xmfj_m
DEFINE g_xmfj_m_mask_o   type_g_xmfj_m #轉換遮罩前資料
DEFINE g_xmfj_m_mask_n   type_g_xmfj_m #轉換遮罩後資料
 
   DEFINE g_xmfjdocno_t LIKE xmfj_t.xmfjdocno
 
 
DEFINE g_xmfl_d          DYNAMIC ARRAY OF type_g_xmfl_d
DEFINE g_xmfl_d_t        type_g_xmfl_d
DEFINE g_xmfl_d_o        type_g_xmfl_d
DEFINE g_xmfl_d_mask_o   DYNAMIC ARRAY OF type_g_xmfl_d #轉換遮罩前資料
DEFINE g_xmfl_d_mask_n   DYNAMIC ARRAY OF type_g_xmfl_d #轉換遮罩後資料
DEFINE g_xmfl2_d          DYNAMIC ARRAY OF type_g_xmfl2_d
DEFINE g_xmfl2_d_t        type_g_xmfl2_d
DEFINE g_xmfl2_d_o        type_g_xmfl2_d
DEFINE g_xmfl2_d_mask_o   DYNAMIC ARRAY OF type_g_xmfl2_d #轉換遮罩前資料
DEFINE g_xmfl2_d_mask_n   DYNAMIC ARRAY OF type_g_xmfl2_d #轉換遮罩後資料
DEFINE g_xmfl3_d          DYNAMIC ARRAY OF type_g_xmfl3_d
DEFINE g_xmfl3_d_t        type_g_xmfl3_d
DEFINE g_xmfl3_d_o        type_g_xmfl3_d
DEFINE g_xmfl3_d_mask_o   DYNAMIC ARRAY OF type_g_xmfl3_d #轉換遮罩前資料
DEFINE g_xmfl3_d_mask_n   DYNAMIC ARRAY OF type_g_xmfl3_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="axmt430.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axm","")
 
   #add-point:作業初始化 name="main.init"
   
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " SELECT xmfjdocno,'',xmfjdocdt,xmfj003,'',xmfj001,'',xmfj002,'',xmfjstus,xmfj004, 
       '',xmfj005,'',xmfj006,xmfj007,xmfj008,'',xmfj009,'',xmfj010,'',xmfj013,xmfj014,xmfj015,xmfj016, 
       xmfj017,xmfj018,xmfj019,xmfj011,xmfj012,xmfjsite,xmfj020,'',xmfj030,xmfjownid,'',xmfjowndp,'', 
       xmfjcrtid,'',xmfjcrtdp,'',xmfjcrtdt,xmfjmodid,'',xmfjmoddt,xmfjcnfid,'',xmfjcnfdt,xmfjpstid,'', 
       xmfjpstdt", 
                      " FROM xmfj_t",
                      " WHERE xmfjent= ? AND xmfjdocno=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt430_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.xmfjdocno,t0.xmfjdocdt,t0.xmfj003,t0.xmfj001,t0.xmfj002,t0.xmfjstus, 
       t0.xmfj004,t0.xmfj005,t0.xmfj006,t0.xmfj007,t0.xmfj008,t0.xmfj009,t0.xmfj010,t0.xmfj013,t0.xmfj014, 
       t0.xmfj015,t0.xmfj016,t0.xmfj017,t0.xmfj018,t0.xmfj019,t0.xmfj011,t0.xmfj012,t0.xmfjsite,t0.xmfj020, 
       t0.xmfj030,t0.xmfjownid,t0.xmfjowndp,t0.xmfjcrtid,t0.xmfjcrtdp,t0.xmfjcrtdt,t0.xmfjmodid,t0.xmfjmoddt, 
       t0.xmfjcnfid,t0.xmfjcnfdt,t0.xmfjpstid,t0.xmfjpstdt,t1.pmaal004 ,t2.ooag011 ,t3.ooefl003 ,t4.ooail003 , 
       t5.ooibl004 ,t6.oocql004 ,t7.oojdl003 ,t8.ooibl004 ,t9.ooag011 ,t10.ooefl003 ,t11.ooag011 ,t12.ooefl003 , 
       t13.ooag011 ,t14.ooag011 ,t15.ooag011",
               " FROM xmfj_t t0",
                              " LEFT JOIN pmaal_t t1 ON t1.pmaalent="||g_enterprise||" AND t1.pmaal001=t0.xmfj003 AND t1.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent="||g_enterprise||" AND t2.ooag001=t0.xmfj001  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent="||g_enterprise||" AND t3.ooefl001=t0.xmfj002 AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooail_t t4 ON t4.ooailent="||g_enterprise||" AND t4.ooail001=t0.xmfj004 AND t4.ooail002='"||g_dlang||"' ",
               " LEFT JOIN ooibl_t t5 ON t5.ooiblent="||g_enterprise||" AND t5.ooibl002=t0.xmfj008 AND t5.ooibl003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t6 ON t6.oocqlent="||g_enterprise||" AND t6.oocql001='238' AND t6.oocql002=t0.xmfj009 AND t6.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oojdl_t t7 ON t7.oojdlent="||g_enterprise||" AND t7.oojdl001=t0.xmfj010 AND t7.oojdl002='"||g_dlang||"' ",
               " LEFT JOIN ooibl_t t8 ON t8.ooiblent="||g_enterprise||" AND t8.ooibl002=t0.xmfj020 AND t8.ooibl003='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t9 ON t9.ooagent="||g_enterprise||" AND t9.ooag001=t0.xmfjownid  ",
               " LEFT JOIN ooefl_t t10 ON t10.ooeflent="||g_enterprise||" AND t10.ooefl001=t0.xmfjowndp AND t10.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t11 ON t11.ooagent="||g_enterprise||" AND t11.ooag001=t0.xmfjcrtid  ",
               " LEFT JOIN ooefl_t t12 ON t12.ooeflent="||g_enterprise||" AND t12.ooefl001=t0.xmfjcrtdp AND t12.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t13 ON t13.ooagent="||g_enterprise||" AND t13.ooag001=t0.xmfjmodid  ",
               " LEFT JOIN ooag_t t14 ON t14.ooagent="||g_enterprise||" AND t14.ooag001=t0.xmfjcnfid  ",
               " LEFT JOIN ooag_t t15 ON t15.ooagent="||g_enterprise||" AND t15.ooag001=t0.xmfjpstid  ",
 
               " WHERE t0.xmfjent = " ||g_enterprise|| " AND t0.xmfjdocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE axmt430_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axmt430 WITH FORM cl_ap_formpath("axm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axmt430_init()   
 
      #進入選單 Menu (="N")
      CALL axmt430_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axmt430
      
   END IF 
   
   CLOSE axmt430_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="axmt430.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION axmt430_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   DEFINE l_bas0036     LIKE type_t.chr1   #160711-00003#1 20160721 
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('xmfjstus','13','A,D,N,R,W,Y,C,X')
 
      CALL cl_set_combo_scc('xmfj019','2103') 
   CALL cl_set_combo_scc('xmfl001','2104') 
   CALL cl_set_combo_scc('xmfl005','2105') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1',","1")
   CALL g_idx_group.addAttribute("'2',","1")
   CALL g_idx_group.addAttribute("'3',","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   #160711-00003#1 20160721 -----(S) 
   CALL cl_get_para(g_enterprise,g_site,'S-BAS-0036') RETURNING l_bas0036
   IF l_bas0036 = 'N' OR cl_null(l_bas0036) THEN
      CALL cl_set_comp_visible("xmfl003,xmfl003_desc",FALSE)
   END IF
   #160711-00003#1 20160721 -----(E) 
   #end add-point
   
   #初始化搜尋條件
   CALL axmt430_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="axmt430.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION axmt430_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   DEFINE l_cnt      LIKE type_t.num5
   DEFINE l_xmfl009  LIKE xmfl_t.xmfl009
   DEFINE l_success  LIKE type_t.num5  #160324-00037#8-dorislai-add
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL axmt430_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
            
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
      
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_xmfj_m.* TO NULL
         CALL g_xmfl_d.clear()
         CALL g_xmfl2_d.clear()
         CALL g_xmfl3_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL axmt430_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL axmt430_fetch('') # reload data
               LET l_ac = 1
               CALL axmt430_ui_detailshow() #Setting the current row 
         
               CALL axmt430_idx_chk()
               #NEXT FIELD xmflseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_xmfl_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axmt430_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               CALL axmt430_set_act_visible_b()
               CALL axmt430_set_act_no_visible_b()
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL axmt430_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_axmt430_01
            LET g_action_choice="open_axmt430_01"
            IF cl_auth_chk_act("open_axmt430_01") THEN
               
               #add-point:ON ACTION open_axmt430_01 name="menu.detail_show.page1.open_axmt430_01"
               #先取得正確的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               IF NOT cl_null(l_ac) AND l_ac > 0 THEN
                  IF NOT cl_null(g_xmfj_m.xmfjdocno) AND NOT cl_null(g_xmfl_d[l_ac].xmflseq) THEN
                     CALL s_transaction_begin()
                     OPEN axmt430_cl USING g_enterprise,g_xmfj_m.xmfjdocno
                     IF STATUS THEN
                        INITIALIZE g_errparam TO NULL 
                        LET g_errparam.extend = "OPEN axmt430_cl:" 
                        LET g_errparam.code   = STATUS 
                        LET g_errparam.popup  = TRUE 
                        CALL cl_err()
                        CLOSE axmt430_cl
                        CALL s_transaction_end('N','0')
                     ELSE
                        #分段折扣
                        CALL axmt430_01(g_xmfj_m.xmfjdocno,g_xmfl_d[l_ac].xmflseq,g_xmfl_d[l_ac].xmfl001,
                                        g_xmfl_d[l_ac].xmfl002,g_xmfl_d[l_ac].xmfl005,g_xmfl_d[l_ac].xmfl006)
                        
                        #若有分段折扣，自動將單身的分段折扣否(xmfl009)更新成Y
                        LET l_cnt = 0
                        SELECT COUNT(*) INTO l_cnt
                          FROM xmfm_t
                         WHERE xmfment = g_enterprise
                           AND xmfmdocno = g_xmfj_m.xmfjdocno
                           AND xmfmseq = g_xmfl_d[l_ac].xmflseq
                        IF NOT cl_null(l_cnt) AND l_cnt > 0 THEN
                           LET l_xmfl009 = 'Y'
                        ELSE
                           LET l_xmfl009 = 'N'
                        END IF
                        UPDATE xmfl_t SET xmfl009 = l_xmfl009
                         WHERE xmflent = g_enterprise
                           AND xmfldocno = g_xmfj_m.xmfjdocno
                           AND xmflseq = g_xmfl_d[l_ac].xmflseq
                        IF SQLCA.sqlcode OR SQLCA.sqlerrd[3] = 0 THEN
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.extend = 'UPDATE xmfl009'
                           LET g_errparam.code = SQLCA.sqlcode
                           LET g_errparam.popup = TRUE
                           
                           CALL cl_err()
                           CALL s_transaction_end('N','0')
                        END IF
                     END IF
                     CLOSE axmt430_cl
                     CALL s_transaction_end('Y','0')
                  END IF
               END IF
               CALL axmt430_show()
               #END add-point
               
            END IF
 
 
 
 
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_xmfl2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axmt430_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[2] = l_ac
               CALL g_idx_group.addAttribute("'2',",l_ac)
               
               #add-point:page2, before row動作 name="ui_dialog.body2.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL axmt430_idx_chk()
               #add-point:page2自定義行為 name="ui_dialog.body2.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為 name="ui_dialog.body2.action"
            
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_xmfl3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axmt430_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[3] = l_ac
               CALL g_idx_group.addAttribute("'3',",l_ac)
               
               #add-point:page3, before row動作 name="ui_dialog.body3.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
               #顯示單身筆數
               CALL axmt430_idx_chk()
               #add-point:page3自定義行為 name="ui_dialog.body3.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為 name="ui_dialog.body3.action"
            
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL axmt430_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL axmt430_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL axmt430_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL axmt430_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD xmflseq
            END IF
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL axmt430_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL axmt430_set_act_visible()   
            CALL axmt430_set_act_no_visible()
            IF NOT (g_xmfj_m.xmfjdocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " xmfjent = " ||g_enterprise|| " AND",
                                  " xmfjdocno = '", g_xmfj_m.xmfjdocno, "' "
 
               #填到對應位置
               CALL axmt430_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:3)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status name="menu.bpm_status"
            
            #END add-point
 
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "xmfj_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmfl_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmfm_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "xmfk_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL axmt430_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "xmfj_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmfl_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmfm_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "xmfk_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL axmt430_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL axmt430_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:4)
            #過濾瀏覽頁資料
            ON ACTION filter
               LET g_action_choice = "fetch"
               #add-point:filter action name="ui_dialog.action.filter"
               
               #end add-point
               CALL axmt430_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL axmt430_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt430_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL axmt430_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt430_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL axmt430_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt430_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL axmt430_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt430_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL axmt430_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt430_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_xmfl_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_xmfl2_d)
                  LET g_export_id[2]   = "s_detail2"
                  LET g_export_node[3] = base.typeInfo.create(g_xmfl3_d)
                  LET g_export_id[3]   = "s_detail3"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD xmflseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL axmt430_modify()
               #add-point:ON ACTION modify name="menu.modify"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL axmt430_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION stus_closed
            LET g_action_choice="stus_closed"
            IF cl_auth_chk_act("stus_closed") THEN
               
               #add-point:ON ACTION stus_closed name="menu.stus_closed"
               #160324-00037#8-add-(S)
               CALL s_transaction_begin()

               IF g_xmfj_m.xmfjstus = 'C' THEN
                  CALL s_axmt430_unclosed_chk(g_xmfj_m.xmfjdocno)
                       RETURNING l_success
                  IF NOT l_success THEN
                     CALL s_transaction_end('N','0')
                  ELSE
                     IF NOT cl_ask_confirm('lib-004') THEN
                        CALL s_transaction_end('N','0')
                     ELSE
                        CALL s_axmt430_unclosed_upd(g_xmfj_m.xmfjdocno)
                             RETURNING l_success
                        IF l_success THEN
                           CALL s_transaction_end('Y','0')
                        ELSE
                           CALL s_transaction_end('N','0')
                        END IF
                     END IF
                  END IF
               ELSE
                  CALL s_axmt430_closed_chk(g_xmfj_m.xmfjdocno)
                       RETURNING l_success
                  IF NOT l_success THEN
                     CALL s_transaction_end('N','0')
                  ELSE
                     IF NOT cl_ask_confirm('lib-003') THEN
                        CALL s_transaction_end('N','0')
                     ELSE 
                        CALL s_axmt430_closed_upd(g_xmfj_m.xmfjdocno)
                             RETURNING l_success
                        IF l_success THEN
                           CALL s_transaction_end('Y','0')
                        ELSE
                           CALL s_transaction_end('N','0')
                        END IF
                     END IF
                  END IF
               END IF

               SELECT xmfjstus INTO g_xmfj_m.xmfjstus
                 FROM xmfj_t
                WHERE xmfjent   = g_enterprise
                  AND xmfjdocno = g_xmfj_m.xmfjdocno
               CALL axmt430_show()
               CALL axmt430_set_act_visible()   
               CALL axmt430_set_act_no_visible()
               #160324-00037#8-add-(E)
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION change_xmfj012
            LET g_action_choice="change_xmfj012"
            IF cl_auth_chk_act("change_xmfj012") THEN
               
               #add-point:ON ACTION change_xmfj012 name="menu.change_xmfj012"
               #160324-00037#8-dorislai-add-(S)
               CALL s_transaction_begin()
               CALL axmt430_change_xmfj012() RETURNING l_success

               IF l_success THEN
                  CALL s_transaction_end('Y','0')
               ELSE
                  CALL s_transaction_end('N','0')
               END IF
               CALL axmt430_set_act_visible()   
               CALL axmt430_set_act_no_visible()
               #160324-00037#8-dorislai-add-(E)
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL axmt430_delete()
               #add-point:ON ACTION delete name="menu.delete"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL axmt430_insert()
               #add-point:ON ACTION insert name="menu.insert"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               LET g_rep_wc = "xmfjent = ",g_enterprise," AND xmfjsite = '",g_site,"' AND xmfjdocno = '",g_xmfj_m.xmfjdocno,"'"  #160608-00005#1-add
               #END add-point
               &include "erp/axm/axmt430_rep.4gl"
               #add-point:ON ACTION output.after
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL axmt430_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL axmt430_query()
               #add-point:ON ACTION query name="menu.query"
 
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
               CALL g_curr_diag.setCurrentRow("s_detail3",1)
 
 
 
 
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL axmt430_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL axmt430_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL axmt430_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow(g_xmfj_m.xmfjdocdt)
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
 
{</section>}
 
{<section id="axmt430.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION axmt430_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   LET l_wc = l_wc CLIPPED," AND xmfjsite = '",g_site,"'"
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT xmfjdocno ",
                      " FROM xmfj_t ",
                      " ",
                      " LEFT JOIN xmfl_t ON xmflent = xmfjent AND xmfjdocno = xmfldocno ", "  ",
                      #add-point:browser_fill段sql(xmfl_t1) name="browser_fill.cnt.join.}"
                      
                      #end add-point
                      " LEFT JOIN xmfm_t ON xmfment = xmfjent AND xmfjdocno = xmfmdocno", "  AND xmflseq=xmfmseq ",
                      #add-point:browser_fill段sql(xmfm_t1) name="browser_fill.cnt.join.xmfm_t1"
                      
                      #end add-point
 
                      " LEFT JOIN xmfk_t ON xmfkent = xmfjent AND xmfjdocno = xmfkdocno", "  ",
                      #add-point:browser_fill段sql(xmfk_t1) name="browser_fill.cnt.join.xmfk_t1"
                      
                      #end add-point
 
 
 
                      " ", 
                      " ", 
                      " ",                      
 
                      " ",                      
 
 
 
                      " WHERE xmfjent = " ||g_enterprise|| " AND xmflent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("xmfj_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT xmfjdocno ",
                      " FROM xmfj_t ", 
                      "  ",
                      "  ",
                      " WHERE xmfjent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("xmfj_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_xmfj_m.* TO NULL
      CALL g_xmfl_d.clear()        
      CALL g_xmfl2_d.clear() 
      CALL g_xmfl3_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.xmfjdocno,t0.xmfjdocdt,t0.xmfj001,t0.xmfj002,t0.xmfj003,t0.xmfj004,t0.xmfj011,t0.xmfj012 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.xmfjstus,t0.xmfjdocno,t0.xmfjdocdt,t0.xmfj001,t0.xmfj002,t0.xmfj003, 
          t0.xmfj004,t0.xmfj011,t0.xmfj012,t1.ooag011 ,t2.ooefl003 ,t3.pmaal004 ,t4.ooail003 ",
                  " FROM xmfj_t t0",
                  "  ",
                  "  LEFT JOIN xmfl_t ON xmflent = xmfjent AND xmfjdocno = xmfldocno ", "  ", 
                  #add-point:browser_fill段sql(xmfl_t1) name="browser_fill.join.xmfl_t1"
                  
                  #end add-point
                  "  LEFT JOIN xmfm_t ON xmfment = xmfjent AND xmfjdocno = xmfmdocno", "  AND xmflseq=xmfmseq ", 
                  #add-point:browser_fill段sql(xmfm_t1) name="browser_fill.join.xmfm_t1"
                  
                  #end add-point
 
                  "  LEFT JOIN xmfk_t ON xmfkent = xmfjent AND xmfjdocno = xmfkdocno", "  ", 
                  #add-point:browser_fill段sql(xmfk_t1) name="browser_fill.join.xmfk_t1"
                  
                  #end add-point
 
 
 
                  " ", 
                  " ",                      
 
                  " ",                      
 
 
 
                                 " LEFT JOIN ooag_t t1 ON t1.ooagent="||g_enterprise||" AND t1.ooag001=t0.xmfj001  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=t0.xmfj002 AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t3 ON t3.pmaalent="||g_enterprise||" AND t3.pmaal001=t0.xmfj003 AND t3.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN ooail_t t4 ON t4.ooailent="||g_enterprise||" AND t4.ooail001=t0.xmfj004 AND t4.ooail002='"||g_dlang||"' ",
 
                  " WHERE t0.xmfjent = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("xmfj_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.xmfjstus,t0.xmfjdocno,t0.xmfjdocdt,t0.xmfj001,t0.xmfj002,t0.xmfj003, 
          t0.xmfj004,t0.xmfj011,t0.xmfj012,t1.ooag011 ,t2.ooefl003 ,t3.pmaal004 ,t4.ooail003 ",
                  " FROM xmfj_t t0",
                  "  ",
                                 " LEFT JOIN ooag_t t1 ON t1.ooagent="||g_enterprise||" AND t1.ooag001=t0.xmfj001  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=t0.xmfj002 AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t3 ON t3.pmaalent="||g_enterprise||" AND t3.pmaal001=t0.xmfj003 AND t3.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN ooail_t t4 ON t4.ooailent="||g_enterprise||" AND t4.ooail001=t0.xmfj004 AND t4.ooail002='"||g_dlang||"' ",
 
                  " WHERE t0.xmfjent = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("xmfj_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   
   #end add-point
   LET g_sql = g_sql, " ORDER BY xmfjdocno ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
   
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"xmfj_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_xmfjdocno,g_browser[g_cnt].b_xmfjdocdt, 
          g_browser[g_cnt].b_xmfj001,g_browser[g_cnt].b_xmfj002,g_browser[g_cnt].b_xmfj003,g_browser[g_cnt].b_xmfj004, 
          g_browser[g_cnt].b_xmfj011,g_browser[g_cnt].b_xmfj012,g_browser[g_cnt].b_xmfj001_desc,g_browser[g_cnt].b_xmfj002_desc, 
          g_browser[g_cnt].b_xmfj003_desc,g_browser[g_cnt].b_xmfj004_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
         
         #end add-point
      
         #遮罩相關處理
         CALL axmt430_browser_mask()
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "C"
            LET g_browser[g_cnt].b_statepic = "stus/16/closed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_xmfjdocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   CALL axmt430_set_act_visible_b()
   CALL axmt430_set_act_no_visible_b()
   #end add-point   
 
END FUNCTION
 
{</section>}
 
{<section id="axmt430.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION axmt430_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_xmfj_m.xmfjdocno = g_browser[g_current_idx].b_xmfjdocno   
 
   EXECUTE axmt430_master_referesh USING g_xmfj_m.xmfjdocno INTO g_xmfj_m.xmfjdocno,g_xmfj_m.xmfjdocdt, 
       g_xmfj_m.xmfj003,g_xmfj_m.xmfj001,g_xmfj_m.xmfj002,g_xmfj_m.xmfjstus,g_xmfj_m.xmfj004,g_xmfj_m.xmfj005, 
       g_xmfj_m.xmfj006,g_xmfj_m.xmfj007,g_xmfj_m.xmfj008,g_xmfj_m.xmfj009,g_xmfj_m.xmfj010,g_xmfj_m.xmfj013, 
       g_xmfj_m.xmfj014,g_xmfj_m.xmfj015,g_xmfj_m.xmfj016,g_xmfj_m.xmfj017,g_xmfj_m.xmfj018,g_xmfj_m.xmfj019, 
       g_xmfj_m.xmfj011,g_xmfj_m.xmfj012,g_xmfj_m.xmfjsite,g_xmfj_m.xmfj020,g_xmfj_m.xmfj030,g_xmfj_m.xmfjownid, 
       g_xmfj_m.xmfjowndp,g_xmfj_m.xmfjcrtid,g_xmfj_m.xmfjcrtdp,g_xmfj_m.xmfjcrtdt,g_xmfj_m.xmfjmodid, 
       g_xmfj_m.xmfjmoddt,g_xmfj_m.xmfjcnfid,g_xmfj_m.xmfjcnfdt,g_xmfj_m.xmfjpstid,g_xmfj_m.xmfjpstdt, 
       g_xmfj_m.xmfj003_desc,g_xmfj_m.xmfj001_desc,g_xmfj_m.xmfj002_desc,g_xmfj_m.xmfj004_desc,g_xmfj_m.xmfj008_desc, 
       g_xmfj_m.xmfj009_desc,g_xmfj_m.xmfj010_desc,g_xmfj_m.xmfj020_desc,g_xmfj_m.xmfjownid_desc,g_xmfj_m.xmfjowndp_desc, 
       g_xmfj_m.xmfjcrtid_desc,g_xmfj_m.xmfjcrtdp_desc,g_xmfj_m.xmfjmodid_desc,g_xmfj_m.xmfjcnfid_desc, 
       g_xmfj_m.xmfjpstid_desc
   
   CALL axmt430_xmfj_t_mask()
   CALL axmt430_show()
      
END FUNCTION
 
{</section>}
 
{<section id="axmt430.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION axmt430_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="axmt430.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION axmt430_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_xmfjdocno = g_xmfj_m.xmfjdocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="axmt430.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION axmt430_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_xmfj_m.* TO NULL
   CALL g_xmfl_d.clear()        
   CALL g_xmfl2_d.clear() 
   CALL g_xmfl3_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
   INITIALIZE g_wc2_table3 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON xmfjdocno,xmfjdocno_desc,xmfjdocdt,xmfj003,xmfj001,xmfj002,xmfjstus, 
          xmfj004,xmfj005,xmfj005_desc,xmfj006,xmfj007,xmfj008,xmfj009,xmfj010,xmfj013,xmfj014,xmfj015, 
          xmfj016,xmfj017,xmfj018,xmfj019,xmfj011,xmfj012,xmfjsite,xmfj020,xmfj030,xmfjownid,xmfjowndp, 
          xmfjcrtid,xmfjcrtdp,xmfjcrtdt,xmfjmodid,xmfjmoddt,xmfjcnfid,xmfjcnfdt,xmfjpstid,xmfjpstdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<xmfjcrtdt>>----
         AFTER FIELD xmfjcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<xmfjmoddt>>----
         AFTER FIELD xmfjmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmfjcnfdt>>----
         AFTER FIELD xmfjcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmfjpstdt>>----
         AFTER FIELD xmfjpstdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.xmfjdocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfjdocno
            #add-point:ON ACTION controlp INFIELD xmfjdocno name="construct.c.xmfjdocno"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_xmfjdocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfjdocno  #顯示到畫面上
            NEXT FIELD xmfjdocno                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfjdocno
            #add-point:BEFORE FIELD xmfjdocno name="construct.b.xmfjdocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfjdocno
            
            #add-point:AFTER FIELD xmfjdocno name="construct.a.xmfjdocno"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfjdocno_desc
            #add-point:BEFORE FIELD xmfjdocno_desc name="construct.b.xmfjdocno_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfjdocno_desc
            
            #add-point:AFTER FIELD xmfjdocno_desc name="construct.a.xmfjdocno_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfjdocno_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfjdocno_desc
            #add-point:ON ACTION controlp INFIELD xmfjdocno_desc name="construct.c.xmfjdocno_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfjdocdt
            #add-point:BEFORE FIELD xmfjdocdt name="construct.b.xmfjdocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfjdocdt
            
            #add-point:AFTER FIELD xmfjdocdt name="construct.a.xmfjdocdt"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfjdocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfjdocdt
            #add-point:ON ACTION controlp INFIELD xmfjdocdt name="construct.c.xmfjdocdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmfj003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj003
            #add-point:ON ACTION controlp INFIELD xmfj003 name="construct.c.xmfj003"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            CALL q_pmaa001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfj003  #顯示到畫面上
            NEXT FIELD xmfj003                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj003
            #add-point:BEFORE FIELD xmfj003 name="construct.b.xmfj003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj003
            
            #add-point:AFTER FIELD xmfj003 name="construct.a.xmfj003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfj001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj001
            #add-point:ON ACTION controlp INFIELD xmfj001 name="construct.c.xmfj001"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfj001  #顯示到畫面上
            NEXT FIELD xmfj001                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj001
            #add-point:BEFORE FIELD xmfj001 name="construct.b.xmfj001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj001
            
            #add-point:AFTER FIELD xmfj001 name="construct.a.xmfj001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfj002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj002
            #add-point:ON ACTION controlp INFIELD xmfj002 name="construct.c.xmfj002"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfj002  #顯示到畫面上
            NEXT FIELD xmfj002                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj002
            #add-point:BEFORE FIELD xmfj002 name="construct.b.xmfj002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj002
            
            #add-point:AFTER FIELD xmfj002 name="construct.a.xmfj002"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfjstus
            #add-point:BEFORE FIELD xmfjstus name="construct.b.xmfjstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfjstus
            
            #add-point:AFTER FIELD xmfjstus name="construct.a.xmfjstus"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfjstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfjstus
            #add-point:ON ACTION controlp INFIELD xmfjstus name="construct.c.xmfjstus"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmfj004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj004
            #add-point:ON ACTION controlp INFIELD xmfj004 name="construct.c.xmfj004"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            CALL q_ooaj002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfj004  #顯示到畫面上
            NEXT FIELD xmfj004                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj004
            #add-point:BEFORE FIELD xmfj004 name="construct.b.xmfj004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj004
            
            #add-point:AFTER FIELD xmfj004 name="construct.a.xmfj004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfj005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj005
            #add-point:ON ACTION controlp INFIELD xmfj005 name="construct.c.xmfj005"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_oodb002_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfj005  #顯示到畫面上
            NEXT FIELD xmfj005                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj005
            #add-point:BEFORE FIELD xmfj005 name="construct.b.xmfj005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj005
            
            #add-point:AFTER FIELD xmfj005 name="construct.a.xmfj005"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj005_desc
            #add-point:BEFORE FIELD xmfj005_desc name="construct.b.xmfj005_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj005_desc
            
            #add-point:AFTER FIELD xmfj005_desc name="construct.a.xmfj005_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfj005_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj005_desc
            #add-point:ON ACTION controlp INFIELD xmfj005_desc name="construct.c.xmfj005_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj006
            #add-point:BEFORE FIELD xmfj006 name="construct.b.xmfj006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj006
            
            #add-point:AFTER FIELD xmfj006 name="construct.a.xmfj006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfj006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj006
            #add-point:ON ACTION controlp INFIELD xmfj006 name="construct.c.xmfj006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj007
            #add-point:BEFORE FIELD xmfj007 name="construct.b.xmfj007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj007
            
            #add-point:AFTER FIELD xmfj007 name="construct.a.xmfj007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfj007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj007
            #add-point:ON ACTION controlp INFIELD xmfj007 name="construct.c.xmfj007"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmfj008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj008
            #add-point:ON ACTION controlp INFIELD xmfj008 name="construct.c.xmfj008"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooib002_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfj008  #顯示到畫面上
            NEXT FIELD xmfj008                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj008
            #add-point:BEFORE FIELD xmfj008 name="construct.b.xmfj008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj008
            
            #add-point:AFTER FIELD xmfj008 name="construct.a.xmfj008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfj009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj009
            #add-point:ON ACTION controlp INFIELD xmfj009 name="construct.c.xmfj009"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '238'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfj009  #顯示到畫面上
            NEXT FIELD xmfj009                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj009
            #add-point:BEFORE FIELD xmfj009 name="construct.b.xmfj009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj009
            
            #add-point:AFTER FIELD xmfj009 name="construct.a.xmfj009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfj010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj010
            #add-point:ON ACTION controlp INFIELD xmfj010 name="construct.c.xmfj010"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            #160621-00003#3 20160627 modify by beckxie---S
			   #LET g_qryparam.arg1 = "275"
            #CALL q_oocq002()                           #呼叫開窗
            LET g_qryparam.arg1 = '1'
            CALL q_oojd001_1()
            #160621-00003#3 20160627 modify by beckxie---E
            DISPLAY g_qryparam.return1 TO xmfj010  #顯示到畫面上
            NEXT FIELD xmfj010                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj010
            #add-point:BEFORE FIELD xmfj010 name="construct.b.xmfj010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj010
            
            #add-point:AFTER FIELD xmfj010 name="construct.a.xmfj010"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj013
            #add-point:BEFORE FIELD xmfj013 name="construct.b.xmfj013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj013
            
            #add-point:AFTER FIELD xmfj013 name="construct.a.xmfj013"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfj013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj013
            #add-point:ON ACTION controlp INFIELD xmfj013 name="construct.c.xmfj013"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj014
            #add-point:BEFORE FIELD xmfj014 name="construct.b.xmfj014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj014
            
            #add-point:AFTER FIELD xmfj014 name="construct.a.xmfj014"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfj014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj014
            #add-point:ON ACTION controlp INFIELD xmfj014 name="construct.c.xmfj014"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj015
            #add-point:BEFORE FIELD xmfj015 name="construct.b.xmfj015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj015
            
            #add-point:AFTER FIELD xmfj015 name="construct.a.xmfj015"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfj015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj015
            #add-point:ON ACTION controlp INFIELD xmfj015 name="construct.c.xmfj015"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj016
            #add-point:BEFORE FIELD xmfj016 name="construct.b.xmfj016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj016
            
            #add-point:AFTER FIELD xmfj016 name="construct.a.xmfj016"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfj016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj016
            #add-point:ON ACTION controlp INFIELD xmfj016 name="construct.c.xmfj016"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj017
            #add-point:BEFORE FIELD xmfj017 name="construct.b.xmfj017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj017
            
            #add-point:AFTER FIELD xmfj017 name="construct.a.xmfj017"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfj017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj017
            #add-point:ON ACTION controlp INFIELD xmfj017 name="construct.c.xmfj017"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj018
            #add-point:BEFORE FIELD xmfj018 name="construct.b.xmfj018"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj018
            
            #add-point:AFTER FIELD xmfj018 name="construct.a.xmfj018"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfj018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj018
            #add-point:ON ACTION controlp INFIELD xmfj018 name="construct.c.xmfj018"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj019
            #add-point:BEFORE FIELD xmfj019 name="construct.b.xmfj019"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj019
            
            #add-point:AFTER FIELD xmfj019 name="construct.a.xmfj019"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfj019
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj019
            #add-point:ON ACTION controlp INFIELD xmfj019 name="construct.c.xmfj019"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj011
            #add-point:BEFORE FIELD xmfj011 name="construct.b.xmfj011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj011
            
            #add-point:AFTER FIELD xmfj011 name="construct.a.xmfj011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfj011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj011
            #add-point:ON ACTION controlp INFIELD xmfj011 name="construct.c.xmfj011"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj012
            #add-point:BEFORE FIELD xmfj012 name="construct.b.xmfj012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj012
            
            #add-point:AFTER FIELD xmfj012 name="construct.a.xmfj012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfj012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj012
            #add-point:ON ACTION controlp INFIELD xmfj012 name="construct.c.xmfj012"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfjsite
            #add-point:BEFORE FIELD xmfjsite name="construct.b.xmfjsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfjsite
            
            #add-point:AFTER FIELD xmfjsite name="construct.a.xmfjsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfjsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfjsite
            #add-point:ON ACTION controlp INFIELD xmfjsite name="construct.c.xmfjsite"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmfj020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj020
            #add-point:ON ACTION controlp INFIELD xmfj020 name="construct.c.xmfj020"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooib002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfj020  #顯示到畫面上
            NEXT FIELD xmfj020                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj020
            #add-point:BEFORE FIELD xmfj020 name="construct.b.xmfj020"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj020
            
            #add-point:AFTER FIELD xmfj020 name="construct.a.xmfj020"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj030
            #add-point:BEFORE FIELD xmfj030 name="construct.b.xmfj030"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj030
            
            #add-point:AFTER FIELD xmfj030 name="construct.a.xmfj030"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfj030
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj030
            #add-point:ON ACTION controlp INFIELD xmfj030 name="construct.c.xmfj030"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmfjownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfjownid
            #add-point:ON ACTION controlp INFIELD xmfjownid name="construct.c.xmfjownid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfjownid  #顯示到畫面上
            NEXT FIELD xmfjownid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfjownid
            #add-point:BEFORE FIELD xmfjownid name="construct.b.xmfjownid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfjownid
            
            #add-point:AFTER FIELD xmfjownid name="construct.a.xmfjownid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfjowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfjowndp
            #add-point:ON ACTION controlp INFIELD xmfjowndp name="construct.c.xmfjowndp"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfjowndp  #顯示到畫面上
            NEXT FIELD xmfjowndp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfjowndp
            #add-point:BEFORE FIELD xmfjowndp name="construct.b.xmfjowndp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfjowndp
            
            #add-point:AFTER FIELD xmfjowndp name="construct.a.xmfjowndp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfjcrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfjcrtid
            #add-point:ON ACTION controlp INFIELD xmfjcrtid name="construct.c.xmfjcrtid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfjcrtid  #顯示到畫面上
            NEXT FIELD xmfjcrtid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfjcrtid
            #add-point:BEFORE FIELD xmfjcrtid name="construct.b.xmfjcrtid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfjcrtid
            
            #add-point:AFTER FIELD xmfjcrtid name="construct.a.xmfjcrtid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfjcrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfjcrtdp
            #add-point:ON ACTION controlp INFIELD xmfjcrtdp name="construct.c.xmfjcrtdp"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfjcrtdp  #顯示到畫面上
            NEXT FIELD xmfjcrtdp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfjcrtdp
            #add-point:BEFORE FIELD xmfjcrtdp name="construct.b.xmfjcrtdp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfjcrtdp
            
            #add-point:AFTER FIELD xmfjcrtdp name="construct.a.xmfjcrtdp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfjcrtdt
            #add-point:BEFORE FIELD xmfjcrtdt name="construct.b.xmfjcrtdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmfjmodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfjmodid
            #add-point:ON ACTION controlp INFIELD xmfjmodid name="construct.c.xmfjmodid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfjmodid  #顯示到畫面上
            NEXT FIELD xmfjmodid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfjmodid
            #add-point:BEFORE FIELD xmfjmodid name="construct.b.xmfjmodid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfjmodid
            
            #add-point:AFTER FIELD xmfjmodid name="construct.a.xmfjmodid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfjmoddt
            #add-point:BEFORE FIELD xmfjmoddt name="construct.b.xmfjmoddt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmfjcnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfjcnfid
            #add-point:ON ACTION controlp INFIELD xmfjcnfid name="construct.c.xmfjcnfid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfjcnfid  #顯示到畫面上
            NEXT FIELD xmfjcnfid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfjcnfid
            #add-point:BEFORE FIELD xmfjcnfid name="construct.b.xmfjcnfid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfjcnfid
            
            #add-point:AFTER FIELD xmfjcnfid name="construct.a.xmfjcnfid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfjcnfdt
            #add-point:BEFORE FIELD xmfjcnfdt name="construct.b.xmfjcnfdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmfjpstid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfjpstid
            #add-point:ON ACTION controlp INFIELD xmfjpstid name="construct.c.xmfjpstid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfjpstid  #顯示到畫面上
            NEXT FIELD xmfjpstid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfjpstid
            #add-point:BEFORE FIELD xmfjpstid name="construct.b.xmfjpstid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfjpstid
            
            #add-point:AFTER FIELD xmfjpstid name="construct.a.xmfjpstid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfjpstdt
            #add-point:BEFORE FIELD xmfjpstdt name="construct.b.xmfjpstdt"
            
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON xmflseq,xmflsite,xmfl001,xmfl002,xmfl002_desc,xmfl002_desc1,xmfl003, 
          xmfl003_desc,xmfl005,xmfl007,xmfl006,xmfl008,xmfl009,xmfl010,xmfl011,xmfl012
           FROM s_detail1[1].xmflseq,s_detail1[1].xmflsite,s_detail1[1].xmfl001,s_detail1[1].xmfl002, 
               s_detail1[1].xmfl002_desc,s_detail1[1].xmfl002_desc1,s_detail1[1].xmfl003,s_detail1[1].xmfl003_desc, 
               s_detail1[1].xmfl005,s_detail1[1].xmfl007,s_detail1[1].xmfl006,s_detail1[1].xmfl008,s_detail1[1].xmfl009, 
               s_detail1[1].xmfl010,s_detail1[1].xmfl011,s_detail1[1].xmfl012
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmflseq
            #add-point:BEFORE FIELD xmflseq name="construct.b.page1.xmflseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmflseq
            
            #add-point:AFTER FIELD xmflseq name="construct.a.page1.xmflseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmflseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmflseq
            #add-point:ON ACTION controlp INFIELD xmflseq name="construct.c.page1.xmflseq"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmflsite
            #add-point:BEFORE FIELD xmflsite name="construct.b.page1.xmflsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmflsite
            
            #add-point:AFTER FIELD xmflsite name="construct.a.page1.xmflsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmflsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmflsite
            #add-point:ON ACTION controlp INFIELD xmflsite name="construct.c.page1.xmflsite"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfl001
            #add-point:BEFORE FIELD xmfl001 name="construct.b.page1.xmfl001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfl001
            
            #add-point:AFTER FIELD xmfl001 name="construct.a.page1.xmfl001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmfl001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfl001
            #add-point:ON ACTION controlp INFIELD xmfl001 name="construct.c.page1.xmfl001"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmfl002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfl002
            #add-point:ON ACTION controlp INFIELD xmfl002 name="construct.c.page1.xmfl002"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_xmfl002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfl002  #顯示到畫面上
            NEXT FIELD xmfl002                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfl002
            #add-point:BEFORE FIELD xmfl002 name="construct.b.page1.xmfl002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfl002
            
            #add-point:AFTER FIELD xmfl002 name="construct.a.page1.xmfl002"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfl002_desc
            #add-point:BEFORE FIELD xmfl002_desc name="construct.b.page1.xmfl002_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfl002_desc
            
            #add-point:AFTER FIELD xmfl002_desc name="construct.a.page1.xmfl002_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmfl002_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfl002_desc
            #add-point:ON ACTION controlp INFIELD xmfl002_desc name="construct.c.page1.xmfl002_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfl002_desc1
            #add-point:BEFORE FIELD xmfl002_desc1 name="construct.b.page1.xmfl002_desc1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfl002_desc1
            
            #add-point:AFTER FIELD xmfl002_desc1 name="construct.a.page1.xmfl002_desc1"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmfl002_desc1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfl002_desc1
            #add-point:ON ACTION controlp INFIELD xmfl002_desc1 name="construct.c.page1.xmfl002_desc1"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfl003
            #add-point:BEFORE FIELD xmfl003 name="construct.b.page1.xmfl003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfl003
            
            #add-point:AFTER FIELD xmfl003 name="construct.a.page1.xmfl003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmfl003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfl003
            #add-point:ON ACTION controlp INFIELD xmfl003 name="construct.c.page1.xmfl003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfl003_desc
            #add-point:BEFORE FIELD xmfl003_desc name="construct.b.page1.xmfl003_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfl003_desc
            
            #add-point:AFTER FIELD xmfl003_desc name="construct.a.page1.xmfl003_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmfl003_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfl003_desc
            #add-point:ON ACTION controlp INFIELD xmfl003_desc name="construct.c.page1.xmfl003_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfl005
            #add-point:BEFORE FIELD xmfl005 name="construct.b.page1.xmfl005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfl005
            
            #add-point:AFTER FIELD xmfl005 name="construct.a.page1.xmfl005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmfl005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfl005
            #add-point:ON ACTION controlp INFIELD xmfl005 name="construct.c.page1.xmfl005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfl007
            #add-point:BEFORE FIELD xmfl007 name="construct.b.page1.xmfl007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfl007
            
            #add-point:AFTER FIELD xmfl007 name="construct.a.page1.xmfl007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmfl007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfl007
            #add-point:ON ACTION controlp INFIELD xmfl007 name="construct.c.page1.xmfl007"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmfl006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfl006
            #add-point:ON ACTION controlp INFIELD xmfl006 name="construct.c.page1.xmfl006"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfl006  #顯示到畫面上
            NEXT FIELD xmfl006                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfl006
            #add-point:BEFORE FIELD xmfl006 name="construct.b.page1.xmfl006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfl006
            
            #add-point:AFTER FIELD xmfl006 name="construct.a.page1.xmfl006"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfl008
            #add-point:BEFORE FIELD xmfl008 name="construct.b.page1.xmfl008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfl008
            
            #add-point:AFTER FIELD xmfl008 name="construct.a.page1.xmfl008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmfl008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfl008
            #add-point:ON ACTION controlp INFIELD xmfl008 name="construct.c.page1.xmfl008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfl009
            #add-point:BEFORE FIELD xmfl009 name="construct.b.page1.xmfl009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfl009
            
            #add-point:AFTER FIELD xmfl009 name="construct.a.page1.xmfl009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmfl009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfl009
            #add-point:ON ACTION controlp INFIELD xmfl009 name="construct.c.page1.xmfl009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfl010
            #add-point:BEFORE FIELD xmfl010 name="construct.b.page1.xmfl010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfl010
            
            #add-point:AFTER FIELD xmfl010 name="construct.a.page1.xmfl010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmfl010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfl010
            #add-point:ON ACTION controlp INFIELD xmfl010 name="construct.c.page1.xmfl010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfl011
            #add-point:BEFORE FIELD xmfl011 name="construct.b.page1.xmfl011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfl011
            
            #add-point:AFTER FIELD xmfl011 name="construct.a.page1.xmfl011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmfl011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfl011
            #add-point:ON ACTION controlp INFIELD xmfl011 name="construct.c.page1.xmfl011"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfl012
            #add-point:BEFORE FIELD xmfl012 name="construct.b.page1.xmfl012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfl012
            
            #add-point:AFTER FIELD xmfl012 name="construct.a.page1.xmfl012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmfl012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfl012
            #add-point:ON ACTION controlp INFIELD xmfl012 name="construct.c.page1.xmfl012"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON xmfmseq,xmfm001,xmfm002,xmfm003,xmfm004
           FROM s_detail2[1].xmfmseq,s_detail2[1].xmfm001,s_detail2[1].xmfm002,s_detail2[1].xmfm003, 
               s_detail2[1].xmfm004
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body2.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfmseq
            #add-point:BEFORE FIELD xmfmseq name="construct.b.page2.xmfmseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfmseq
            
            #add-point:AFTER FIELD xmfmseq name="construct.a.page2.xmfmseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmfmseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfmseq
            #add-point:ON ACTION controlp INFIELD xmfmseq name="construct.c.page2.xmfmseq"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfm001
            #add-point:BEFORE FIELD xmfm001 name="construct.b.page2.xmfm001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfm001
            
            #add-point:AFTER FIELD xmfm001 name="construct.a.page2.xmfm001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmfm001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfm001
            #add-point:ON ACTION controlp INFIELD xmfm001 name="construct.c.page2.xmfm001"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfm002
            #add-point:BEFORE FIELD xmfm002 name="construct.b.page2.xmfm002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfm002
            
            #add-point:AFTER FIELD xmfm002 name="construct.a.page2.xmfm002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmfm002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfm002
            #add-point:ON ACTION controlp INFIELD xmfm002 name="construct.c.page2.xmfm002"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfm003
            #add-point:BEFORE FIELD xmfm003 name="construct.b.page2.xmfm003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfm003
            
            #add-point:AFTER FIELD xmfm003 name="construct.a.page2.xmfm003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmfm003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfm003
            #add-point:ON ACTION controlp INFIELD xmfm003 name="construct.c.page2.xmfm003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfm004
            #add-point:BEFORE FIELD xmfm004 name="construct.b.page2.xmfm004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfm004
            
            #add-point:AFTER FIELD xmfm004 name="construct.a.page2.xmfm004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmfm004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfm004
            #add-point:ON ACTION controlp INFIELD xmfm004 name="construct.c.page2.xmfm004"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON xmfkseq,xmfk001,xmfk002,xmfksite
           FROM s_detail3[1].xmfkseq,s_detail3[1].xmfk001,s_detail3[1].xmfk002,s_detail3[1].xmfksite
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body3.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfkseq
            #add-point:BEFORE FIELD xmfkseq name="construct.b.page3.xmfkseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfkseq
            
            #add-point:AFTER FIELD xmfkseq name="construct.a.page3.xmfkseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmfkseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfkseq
            #add-point:ON ACTION controlp INFIELD xmfkseq name="construct.c.page3.xmfkseq"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page3.xmfk001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfk001
            #add-point:ON ACTION controlp INFIELD xmfk001 name="construct.c.page3.xmfk001"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            CALL q_pmaa001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfk001  #顯示到畫面上
            NEXT FIELD xmfk001                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfk001
            #add-point:BEFORE FIELD xmfk001 name="construct.b.page3.xmfk001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfk001
            
            #add-point:AFTER FIELD xmfk001 name="construct.a.page3.xmfk001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmfk002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfk002
            #add-point:ON ACTION controlp INFIELD xmfk002 name="construct.c.page3.xmfk002"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            CALL q_pmaa001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfk002  #顯示到畫面上
            NEXT FIELD xmfk002                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfk002
            #add-point:BEFORE FIELD xmfk002 name="construct.b.page3.xmfk002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfk002
            
            #add-point:AFTER FIELD xmfk002 name="construct.a.page3.xmfk002"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfksite
            #add-point:BEFORE FIELD xmfksite name="construct.b.page3.xmfksite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfksite
            
            #add-point:AFTER FIELD xmfksite name="construct.a.page3.xmfksite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmfksite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfksite
            #add-point:ON ACTION controlp INFIELD xmfksite name="construct.c.page3.xmfksite"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
            INITIALIZE g_wc2_table2 TO NULL
 
            INITIALIZE g_wc2_table3 TO NULL
 
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "xmfj_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "xmfl_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "xmfm_t" 
                     LET g_wc2_table2 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "xmfk_t" 
                     LET g_wc2_table3 = la_wc[li_idx].wc
 
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
 
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="axmt430.filter" >}
#應用 a50 樣板自動產生(Version:8)
#+ filter過濾功能
PRIVATE FUNCTION axmt430_filter()
   #add-point:filter段define name="filter.define_customerization"
   
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="filter.pre_function"
   
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON xmfjdocno,xmfjdocdt,xmfj001,xmfj002,xmfj003,xmfj004,xmfj011,xmfj012
                          FROM s_browse[1].b_xmfjdocno,s_browse[1].b_xmfjdocdt,s_browse[1].b_xmfj001, 
                              s_browse[1].b_xmfj002,s_browse[1].b_xmfj003,s_browse[1].b_xmfj004,s_browse[1].b_xmfj011, 
                              s_browse[1].b_xmfj012
 
         BEFORE CONSTRUCT
               DISPLAY axmt430_filter_parser('xmfjdocno') TO s_browse[1].b_xmfjdocno
            DISPLAY axmt430_filter_parser('xmfjdocdt') TO s_browse[1].b_xmfjdocdt
            DISPLAY axmt430_filter_parser('xmfj001') TO s_browse[1].b_xmfj001
            DISPLAY axmt430_filter_parser('xmfj002') TO s_browse[1].b_xmfj002
            DISPLAY axmt430_filter_parser('xmfj003') TO s_browse[1].b_xmfj003
            DISPLAY axmt430_filter_parser('xmfj004') TO s_browse[1].b_xmfj004
            DISPLAY axmt430_filter_parser('xmfj011') TO s_browse[1].b_xmfj011
            DISPLAY axmt430_filter_parser('xmfj012') TO s_browse[1].b_xmfj012
      
         #add-point:filter段cs_ctrl name="filter.cs_ctrl"
         
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL axmt430_filter_show('xmfjdocno')
   CALL axmt430_filter_show('xmfjdocdt')
   CALL axmt430_filter_show('xmfj001')
   CALL axmt430_filter_show('xmfj002')
   CALL axmt430_filter_show('xmfj003')
   CALL axmt430_filter_show('xmfj004')
   CALL axmt430_filter_show('xmfj011')
   CALL axmt430_filter_show('xmfj012')
 
END FUNCTION
 
{</section>}
 
{<section id="axmt430.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION axmt430_filter_parser(ps_field)
   #add-point:filter段define name="filter_parser.define_customerization"
   
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="axmt430.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION axmt430_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = axmt430_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="axmt430.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION axmt430_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_xmfl_d.clear()
   CALL g_xmfl2_d.clear()
   CALL g_xmfl3_d.clear()
 
   
   #add-point:query段other name="query.other"
   
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL axmt430_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL axmt430_browser_fill("")
      CALL axmt430_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL axmt430_filter_show('xmfjdocno')
   CALL axmt430_filter_show('xmfjdocdt')
   CALL axmt430_filter_show('xmfj001')
   CALL axmt430_filter_show('xmfj002')
   CALL axmt430_filter_show('xmfj003')
   CALL axmt430_filter_show('xmfj004')
   CALL axmt430_filter_show('xmfj011')
   CALL axmt430_filter_show('xmfj012')
   CALL axmt430_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL axmt430_fetch("F") 
      #顯示單身筆數
      CALL axmt430_idx_chk()
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="axmt430.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION axmt430_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_xmfj_m.xmfjdocno = g_browser[g_current_idx].b_xmfjdocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE axmt430_master_referesh USING g_xmfj_m.xmfjdocno INTO g_xmfj_m.xmfjdocno,g_xmfj_m.xmfjdocdt, 
       g_xmfj_m.xmfj003,g_xmfj_m.xmfj001,g_xmfj_m.xmfj002,g_xmfj_m.xmfjstus,g_xmfj_m.xmfj004,g_xmfj_m.xmfj005, 
       g_xmfj_m.xmfj006,g_xmfj_m.xmfj007,g_xmfj_m.xmfj008,g_xmfj_m.xmfj009,g_xmfj_m.xmfj010,g_xmfj_m.xmfj013, 
       g_xmfj_m.xmfj014,g_xmfj_m.xmfj015,g_xmfj_m.xmfj016,g_xmfj_m.xmfj017,g_xmfj_m.xmfj018,g_xmfj_m.xmfj019, 
       g_xmfj_m.xmfj011,g_xmfj_m.xmfj012,g_xmfj_m.xmfjsite,g_xmfj_m.xmfj020,g_xmfj_m.xmfj030,g_xmfj_m.xmfjownid, 
       g_xmfj_m.xmfjowndp,g_xmfj_m.xmfjcrtid,g_xmfj_m.xmfjcrtdp,g_xmfj_m.xmfjcrtdt,g_xmfj_m.xmfjmodid, 
       g_xmfj_m.xmfjmoddt,g_xmfj_m.xmfjcnfid,g_xmfj_m.xmfjcnfdt,g_xmfj_m.xmfjpstid,g_xmfj_m.xmfjpstdt, 
       g_xmfj_m.xmfj003_desc,g_xmfj_m.xmfj001_desc,g_xmfj_m.xmfj002_desc,g_xmfj_m.xmfj004_desc,g_xmfj_m.xmfj008_desc, 
       g_xmfj_m.xmfj009_desc,g_xmfj_m.xmfj010_desc,g_xmfj_m.xmfj020_desc,g_xmfj_m.xmfjownid_desc,g_xmfj_m.xmfjowndp_desc, 
       g_xmfj_m.xmfjcrtid_desc,g_xmfj_m.xmfjcrtdp_desc,g_xmfj_m.xmfjmodid_desc,g_xmfj_m.xmfjcnfid_desc, 
       g_xmfj_m.xmfjpstid_desc
   
   #遮罩相關處理
   LET g_xmfj_m_mask_o.* =  g_xmfj_m.*
   CALL axmt430_xmfj_t_mask()
   LET g_xmfj_m_mask_n.* =  g_xmfj_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt430_set_act_visible()   
   CALL axmt430_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
 
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   
   #end add-point
   
   #保存單頭舊值
   LET g_xmfj_m_t.* = g_xmfj_m.*
   LET g_xmfj_m_o.* = g_xmfj_m.*
   
   LET g_data_owner = g_xmfj_m.xmfjownid      
   LET g_data_dept  = g_xmfj_m.xmfjowndp
   
   #重新顯示   
   CALL axmt430_show()
 
   #應用 a56 樣板自動產生(Version:3)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
 
END FUNCTION
 
{</section>}
 
{<section id="axmt430.insert" >}
#+ 資料新增
PRIVATE FUNCTION axmt430_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_xmfl_d.clear()   
   CALL g_xmfl2_d.clear()  
   CALL g_xmfl3_d.clear()  
 
 
   INITIALIZE g_xmfj_m.* TO NULL             #DEFAULT 設定
   
   LET g_xmfjdocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_xmfj_m.xmfjownid = g_user
      LET g_xmfj_m.xmfjowndp = g_dept
      LET g_xmfj_m.xmfjcrtid = g_user
      LET g_xmfj_m.xmfjcrtdp = g_dept 
      LET g_xmfj_m.xmfjcrtdt = cl_get_current()
      LET g_xmfj_m.xmfjmodid = g_user
      LET g_xmfj_m.xmfjmoddt = cl_get_current()
      LET g_xmfj_m.xmfjstus = 'N'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_xmfj_m.xmfj007 = "N"
      LET g_xmfj_m.xmfj013 = "Y"
      LET g_xmfj_m.xmfj014 = "Y"
      LET g_xmfj_m.xmfj015 = "N"
      LET g_xmfj_m.xmfj016 = "N"
      LET g_xmfj_m.xmfj017 = "N"
      LET g_xmfj_m.xmfj018 = "Y"
      LET g_xmfj_m.xmfj019 = "1"
 
  
      #add-point:單頭預設值 name="insert.default"
      LET g_xmfj_m.xmfjdocdt = g_today  #合約日期
      LET g_xmfj_m.xmfj001 = g_user     #銷售人員
      LET g_xmfj_m.xmfj002 = g_dept     #銷售部門
      LET g_xmfj_m.xmfj011 = g_today    #生效日期
      LET g_xmfj_m.xmfjsite = g_site    #營運據點
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_xmfj_m_t.* = g_xmfj_m.*
      LET g_xmfj_m_o.* = g_xmfj_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_xmfj_m.xmfjstus 
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
    
      CALL axmt430_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_xmfj_m.* TO NULL
         INITIALIZE g_xmfl_d TO NULL
         INITIALIZE g_xmfl2_d TO NULL
         INITIALIZE g_xmfl3_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         
         #end add-point 
         CALL axmt430_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_xmfl_d.clear()
      #CALL g_xmfl2_d.clear()
      #CALL g_xmfl3_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt430_set_act_visible()   
   CALL axmt430_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_xmfjdocno_t = g_xmfj_m.xmfjdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " xmfjent = " ||g_enterprise|| " AND",
                      " xmfjdocno = '", g_xmfj_m.xmfjdocno, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axmt430_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE axmt430_cl
   
   CALL axmt430_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE axmt430_master_referesh USING g_xmfj_m.xmfjdocno INTO g_xmfj_m.xmfjdocno,g_xmfj_m.xmfjdocdt, 
       g_xmfj_m.xmfj003,g_xmfj_m.xmfj001,g_xmfj_m.xmfj002,g_xmfj_m.xmfjstus,g_xmfj_m.xmfj004,g_xmfj_m.xmfj005, 
       g_xmfj_m.xmfj006,g_xmfj_m.xmfj007,g_xmfj_m.xmfj008,g_xmfj_m.xmfj009,g_xmfj_m.xmfj010,g_xmfj_m.xmfj013, 
       g_xmfj_m.xmfj014,g_xmfj_m.xmfj015,g_xmfj_m.xmfj016,g_xmfj_m.xmfj017,g_xmfj_m.xmfj018,g_xmfj_m.xmfj019, 
       g_xmfj_m.xmfj011,g_xmfj_m.xmfj012,g_xmfj_m.xmfjsite,g_xmfj_m.xmfj020,g_xmfj_m.xmfj030,g_xmfj_m.xmfjownid, 
       g_xmfj_m.xmfjowndp,g_xmfj_m.xmfjcrtid,g_xmfj_m.xmfjcrtdp,g_xmfj_m.xmfjcrtdt,g_xmfj_m.xmfjmodid, 
       g_xmfj_m.xmfjmoddt,g_xmfj_m.xmfjcnfid,g_xmfj_m.xmfjcnfdt,g_xmfj_m.xmfjpstid,g_xmfj_m.xmfjpstdt, 
       g_xmfj_m.xmfj003_desc,g_xmfj_m.xmfj001_desc,g_xmfj_m.xmfj002_desc,g_xmfj_m.xmfj004_desc,g_xmfj_m.xmfj008_desc, 
       g_xmfj_m.xmfj009_desc,g_xmfj_m.xmfj010_desc,g_xmfj_m.xmfj020_desc,g_xmfj_m.xmfjownid_desc,g_xmfj_m.xmfjowndp_desc, 
       g_xmfj_m.xmfjcrtid_desc,g_xmfj_m.xmfjcrtdp_desc,g_xmfj_m.xmfjmodid_desc,g_xmfj_m.xmfjcnfid_desc, 
       g_xmfj_m.xmfjpstid_desc
   
   
   #遮罩相關處理
   LET g_xmfj_m_mask_o.* =  g_xmfj_m.*
   CALL axmt430_xmfj_t_mask()
   LET g_xmfj_m_mask_n.* =  g_xmfj_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_xmfj_m.xmfjdocno,g_xmfj_m.xmfjdocno_desc,g_xmfj_m.xmfjdocdt,g_xmfj_m.xmfj003,g_xmfj_m.xmfj003_desc, 
       g_xmfj_m.xmfj001,g_xmfj_m.xmfj001_desc,g_xmfj_m.xmfj002,g_xmfj_m.xmfj002_desc,g_xmfj_m.xmfjstus, 
       g_xmfj_m.xmfj004,g_xmfj_m.xmfj004_desc,g_xmfj_m.xmfj005,g_xmfj_m.xmfj005_desc,g_xmfj_m.xmfj006, 
       g_xmfj_m.xmfj007,g_xmfj_m.xmfj008,g_xmfj_m.xmfj008_desc,g_xmfj_m.xmfj009,g_xmfj_m.xmfj009_desc, 
       g_xmfj_m.xmfj010,g_xmfj_m.xmfj010_desc,g_xmfj_m.xmfj013,g_xmfj_m.xmfj014,g_xmfj_m.xmfj015,g_xmfj_m.xmfj016, 
       g_xmfj_m.xmfj017,g_xmfj_m.xmfj018,g_xmfj_m.xmfj019,g_xmfj_m.xmfj011,g_xmfj_m.xmfj012,g_xmfj_m.xmfjsite, 
       g_xmfj_m.xmfj020,g_xmfj_m.xmfj020_desc,g_xmfj_m.xmfj030,g_xmfj_m.xmfjownid,g_xmfj_m.xmfjownid_desc, 
       g_xmfj_m.xmfjowndp,g_xmfj_m.xmfjowndp_desc,g_xmfj_m.xmfjcrtid,g_xmfj_m.xmfjcrtid_desc,g_xmfj_m.xmfjcrtdp, 
       g_xmfj_m.xmfjcrtdp_desc,g_xmfj_m.xmfjcrtdt,g_xmfj_m.xmfjmodid,g_xmfj_m.xmfjmodid_desc,g_xmfj_m.xmfjmoddt, 
       g_xmfj_m.xmfjcnfid,g_xmfj_m.xmfjcnfid_desc,g_xmfj_m.xmfjcnfdt,g_xmfj_m.xmfjpstid,g_xmfj_m.xmfjpstid_desc, 
       g_xmfj_m.xmfjpstdt
   
   #add-point:新增結束後 name="insert.after"
   
   #end add-point 
   
   LET g_data_owner = g_xmfj_m.xmfjownid      
   LET g_data_dept  = g_xmfj_m.xmfjowndp
   
   #功能已完成,通報訊息中心
   CALL axmt430_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="axmt430.modify" >}
#+ 資料修改
PRIVATE FUNCTION axmt430_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING
 
   DEFINE l_wc2_table3   STRING
 
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   #保存單頭舊值
   LET g_xmfj_m_t.* = g_xmfj_m.*
   LET g_xmfj_m_o.* = g_xmfj_m.*
   
   IF g_xmfj_m.xmfjdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_xmfjdocno_t = g_xmfj_m.xmfjdocno
 
   CALL s_transaction_begin()
   
   OPEN axmt430_cl USING g_enterprise,g_xmfj_m.xmfjdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axmt430_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE axmt430_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axmt430_master_referesh USING g_xmfj_m.xmfjdocno INTO g_xmfj_m.xmfjdocno,g_xmfj_m.xmfjdocdt, 
       g_xmfj_m.xmfj003,g_xmfj_m.xmfj001,g_xmfj_m.xmfj002,g_xmfj_m.xmfjstus,g_xmfj_m.xmfj004,g_xmfj_m.xmfj005, 
       g_xmfj_m.xmfj006,g_xmfj_m.xmfj007,g_xmfj_m.xmfj008,g_xmfj_m.xmfj009,g_xmfj_m.xmfj010,g_xmfj_m.xmfj013, 
       g_xmfj_m.xmfj014,g_xmfj_m.xmfj015,g_xmfj_m.xmfj016,g_xmfj_m.xmfj017,g_xmfj_m.xmfj018,g_xmfj_m.xmfj019, 
       g_xmfj_m.xmfj011,g_xmfj_m.xmfj012,g_xmfj_m.xmfjsite,g_xmfj_m.xmfj020,g_xmfj_m.xmfj030,g_xmfj_m.xmfjownid, 
       g_xmfj_m.xmfjowndp,g_xmfj_m.xmfjcrtid,g_xmfj_m.xmfjcrtdp,g_xmfj_m.xmfjcrtdt,g_xmfj_m.xmfjmodid, 
       g_xmfj_m.xmfjmoddt,g_xmfj_m.xmfjcnfid,g_xmfj_m.xmfjcnfdt,g_xmfj_m.xmfjpstid,g_xmfj_m.xmfjpstdt, 
       g_xmfj_m.xmfj003_desc,g_xmfj_m.xmfj001_desc,g_xmfj_m.xmfj002_desc,g_xmfj_m.xmfj004_desc,g_xmfj_m.xmfj008_desc, 
       g_xmfj_m.xmfj009_desc,g_xmfj_m.xmfj010_desc,g_xmfj_m.xmfj020_desc,g_xmfj_m.xmfjownid_desc,g_xmfj_m.xmfjowndp_desc, 
       g_xmfj_m.xmfjcrtid_desc,g_xmfj_m.xmfjcrtdp_desc,g_xmfj_m.xmfjmodid_desc,g_xmfj_m.xmfjcnfid_desc, 
       g_xmfj_m.xmfjpstid_desc
   
   #檢查是否允許此動作
   IF NOT axmt430_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_xmfj_m_mask_o.* =  g_xmfj_m.*
   CALL axmt430_xmfj_t_mask()
   LET g_xmfj_m_mask_n.* =  g_xmfj_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
   #LET l_wc2_table3 = g_wc2_table3
   #LET l_wc2_table3 = " 1=1"
 
 
 
   
   CALL axmt430_show()
   #add-point:modify段show之後 name="modify.after_show"
   
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 
 
   #LET  g_wc2_table3 = l_wc2_table3 
 
 
 
    
   WHILE TRUE
      LET g_xmfjdocno_t = g_xmfj_m.xmfjdocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_xmfj_m.xmfjmodid = g_user 
LET g_xmfj_m.xmfjmoddt = cl_get_current()
LET g_xmfj_m.xmfjmodid_desc = cl_get_username(g_xmfj_m.xmfjmodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL axmt430_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE xmfj_t SET (xmfjmodid,xmfjmoddt) = (g_xmfj_m.xmfjmodid,g_xmfj_m.xmfjmoddt)
          WHERE xmfjent = g_enterprise AND xmfjdocno = g_xmfjdocno_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_xmfj_m.* = g_xmfj_m_t.*
            CALL axmt430_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_xmfj_m.xmfjdocno != g_xmfj_m_t.xmfjdocno
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         
         #end add-point
         
         #更新單身key值
         UPDATE xmfl_t SET xmfldocno = g_xmfj_m.xmfjdocno
 
          WHERE xmflent = g_enterprise AND xmfldocno = g_xmfj_m_t.xmfjdocno
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "xmfl_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmfl_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update2"
         
         #end add-point
         
         UPDATE xmfm_t
            SET xmfmdocno = g_xmfj_m.xmfjdocno
 
          WHERE xmfment = g_enterprise AND
                xmfmdocno = g_xmfjdocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update2"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "xmfm_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmfm_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update2"
         
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update3"
         
         #end add-point
         
         UPDATE xmfk_t
            SET xmfkdocno = g_xmfj_m.xmfjdocno
 
          WHERE xmfkent = g_enterprise AND
                xmfkdocno = g_xmfjdocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update3"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "xmfk_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmfk_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update3"
         
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt430_set_act_visible()   
   CALL axmt430_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " xmfjent = " ||g_enterprise|| " AND",
                      " xmfjdocno = '", g_xmfj_m.xmfjdocno, "' "
 
   #填到對應位置
   CALL axmt430_browser_fill("")
 
   CLOSE axmt430_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL axmt430_msgcentre_notify('modify')
 
END FUNCTION 
 
{</section>}
 
{<section id="axmt430.input" >}
#+ 資料輸入
PRIVATE FUNCTION axmt430_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE  l_success             LIKE type_t.num5
   DEFINE  l_extra_where         STRING   #開窗的額外條件
   DEFINE  l_cnt1                LIKE type_t.num5
   DEFINE  l_xmflseq             LIKE xmfl_t.xmflseq
   DEFINE  l_first_insert        LIKE type_t.num5
   DEFINE  l_msg1                LIKE gzze_t.gzze003   #160621-00003#3 20160629 add by beckxie
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   #160621-00003#3 20160629 add by beckxie---S
   LET l_msg1 = ''
   SELECT gzze003 INTO l_msg1 FROM gzze_t WHERE gzze001 = 'aoo-00708' AND gzze002 = g_dlang 
   #160621-00003#3 20160629 add by beckxie---E
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xmfj_m.xmfjdocno,g_xmfj_m.xmfjdocno_desc,g_xmfj_m.xmfjdocdt,g_xmfj_m.xmfj003,g_xmfj_m.xmfj003_desc, 
       g_xmfj_m.xmfj001,g_xmfj_m.xmfj001_desc,g_xmfj_m.xmfj002,g_xmfj_m.xmfj002_desc,g_xmfj_m.xmfjstus, 
       g_xmfj_m.xmfj004,g_xmfj_m.xmfj004_desc,g_xmfj_m.xmfj005,g_xmfj_m.xmfj005_desc,g_xmfj_m.xmfj006, 
       g_xmfj_m.xmfj007,g_xmfj_m.xmfj008,g_xmfj_m.xmfj008_desc,g_xmfj_m.xmfj009,g_xmfj_m.xmfj009_desc, 
       g_xmfj_m.xmfj010,g_xmfj_m.xmfj010_desc,g_xmfj_m.xmfj013,g_xmfj_m.xmfj014,g_xmfj_m.xmfj015,g_xmfj_m.xmfj016, 
       g_xmfj_m.xmfj017,g_xmfj_m.xmfj018,g_xmfj_m.xmfj019,g_xmfj_m.xmfj011,g_xmfj_m.xmfj012,g_xmfj_m.xmfjsite, 
       g_xmfj_m.xmfj020,g_xmfj_m.xmfj020_desc,g_xmfj_m.xmfj030,g_xmfj_m.xmfjownid,g_xmfj_m.xmfjownid_desc, 
       g_xmfj_m.xmfjowndp,g_xmfj_m.xmfjowndp_desc,g_xmfj_m.xmfjcrtid,g_xmfj_m.xmfjcrtid_desc,g_xmfj_m.xmfjcrtdp, 
       g_xmfj_m.xmfjcrtdp_desc,g_xmfj_m.xmfjcrtdt,g_xmfj_m.xmfjmodid,g_xmfj_m.xmfjmodid_desc,g_xmfj_m.xmfjmoddt, 
       g_xmfj_m.xmfjcnfid,g_xmfj_m.xmfjcnfid_desc,g_xmfj_m.xmfjcnfdt,g_xmfj_m.xmfjpstid,g_xmfj_m.xmfjpstid_desc, 
       g_xmfj_m.xmfjpstdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT xmflseq,xmflsite,xmfl001,xmfl002,xmfl003,xmfl005,xmfl007,xmfl006,xmfl008, 
       xmfl009,xmfl010,xmfl011,xmfl012 FROM xmfl_t WHERE xmflent=? AND xmfldocno=? AND xmflseq=? FOR  
       UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt430_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql name="input.define_sql2"
   
   #end add-point    
   LET g_forupd_sql = "SELECT xmfmseq,xmfm001,xmfm002,xmfm003,xmfm004 FROM xmfm_t WHERE xmfment=? AND  
       xmfmdocno=? AND xmfmseq=? AND xmfm001=? AND xmfm002=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql2"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt430_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql3"
   
   #end add-point    
   LET g_forupd_sql = "SELECT xmfkseq,xmfk001,xmfk002,xmfksite FROM xmfk_t WHERE xmfkent=? AND xmfkdocno=?  
       AND xmfkseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql3"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt430_bcl3 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql name="input.other_sql"
   
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL axmt430_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   
   #end add-point
   CALL axmt430_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_xmfj_m.xmfjdocno,g_xmfj_m.xmfjdocdt,g_xmfj_m.xmfj003,g_xmfj_m.xmfj001,g_xmfj_m.xmfj002, 
       g_xmfj_m.xmfjstus,g_xmfj_m.xmfj004,g_xmfj_m.xmfj005,g_xmfj_m.xmfj006,g_xmfj_m.xmfj007,g_xmfj_m.xmfj008, 
       g_xmfj_m.xmfj009,g_xmfj_m.xmfj010,g_xmfj_m.xmfj013,g_xmfj_m.xmfj014,g_xmfj_m.xmfj015,g_xmfj_m.xmfj016, 
       g_xmfj_m.xmfj017,g_xmfj_m.xmfj018,g_xmfj_m.xmfj019,g_xmfj_m.xmfj011,g_xmfj_m.xmfj012,g_xmfj_m.xmfjsite, 
       g_xmfj_m.xmfj020,g_xmfj_m.xmfj030
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   #抓取據點的單據別參照表號
   LET g_ooef004 = ''
   SELECT ooef004 INTO g_ooef004
     FROM ooef_t
    WHERE ooefent = g_enterprise
      AND ooef001 = g_site
      
   #讓校驗的錯誤訊息跳出視窗
   LET g_errshow = 1
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="axmt430.input.head" >}
      #單頭段
      INPUT BY NAME g_xmfj_m.xmfjdocno,g_xmfj_m.xmfjdocdt,g_xmfj_m.xmfj003,g_xmfj_m.xmfj001,g_xmfj_m.xmfj002, 
          g_xmfj_m.xmfjstus,g_xmfj_m.xmfj004,g_xmfj_m.xmfj005,g_xmfj_m.xmfj006,g_xmfj_m.xmfj007,g_xmfj_m.xmfj008, 
          g_xmfj_m.xmfj009,g_xmfj_m.xmfj010,g_xmfj_m.xmfj013,g_xmfj_m.xmfj014,g_xmfj_m.xmfj015,g_xmfj_m.xmfj016, 
          g_xmfj_m.xmfj017,g_xmfj_m.xmfj018,g_xmfj_m.xmfj019,g_xmfj_m.xmfj011,g_xmfj_m.xmfj012,g_xmfj_m.xmfjsite, 
          g_xmfj_m.xmfj020,g_xmfj_m.xmfj030 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN axmt430_cl USING g_enterprise,g_xmfj_m.xmfjdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axmt430_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE axmt430_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL axmt430_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            
            #end add-point
            CALL axmt430_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfjdocno
            
            #add-point:AFTER FIELD xmfjdocno name="input.a.xmfjdocno"
            LET g_xmfj_m.xmfjdocno_desc = ''
            DISPLAY BY NAME g_xmfj_m.xmfjdocno_desc
            
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF NOT cl_null(g_xmfj_m.xmfjdocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xmfj_m.xmfjdocno != g_xmfjdocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmfj_t WHERE "||"xmfjent = '" ||g_enterprise|| "' AND "||"xmfjdocno = '"||g_xmfj_m.xmfjdocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
                  
                  #單別檢查
                  IF NOT axmt430_xmfjdocno_chk(g_xmfj_m.xmfjdocno) THEN
                     LET g_xmfj_m.xmfjdocno = g_xmfj_m_t.xmfjdocno
                     CALL s_aooi200_get_slip_desc(g_xmfj_m.xmfjdocno) RETURNING g_xmfj_m.xmfjdocno_desc
                     DISPLAY BY NAME g_xmfj_m.xmfjdocno,g_xmfj_m.xmfjdocno_desc
                     
                     NEXT FIELD CURRENT
                  END IF
                  
                  #抓取單別的預設欄位頁籤資料，帶到單頭每個欄位
                  CALL axmt430_xmfjdocno_default(g_xmfj_m.xmfjdocno)
               END IF
               
               #單別說明
               CALL s_aooi200_get_slip_desc(g_xmfj_m.xmfjdocno) RETURNING g_xmfj_m.xmfjdocno_desc
               DISPLAY BY NAME g_xmfj_m.xmfjdocno_desc
            ELSE
               NEXT FIELD CURRENT
            END IF
            CALL axmt430_set_entry(p_cmd)
            CALL axmt430_set_no_entry(p_cmd)
            NEXT FIELD xmfjdocdt
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfjdocno
            #add-point:BEFORE FIELD xmfjdocno name="input.b.xmfjdocno"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfjdocno
            #add-point:ON CHANGE xmfjdocno name="input.g.xmfjdocno"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfjdocdt
            #add-point:BEFORE FIELD xmfjdocdt name="input.b.xmfjdocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfjdocdt
            
            #add-point:AFTER FIELD xmfjdocdt name="input.a.xmfjdocdt"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfjdocdt
            #add-point:ON CHANGE xmfjdocdt name="input.g.xmfjdocdt"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj003
            
            #add-point:AFTER FIELD xmfj003 name="input.a.xmfj003"
            LET g_xmfj_m.xmfj003_desc = ''
            DISPLAY BY NAME g_xmfj_m.xmfj003_desc
            
            IF NOT cl_null(g_xmfj_m.xmfj003) THEN 
               IF cl_null(g_xmfj_m_o.xmfj003) OR g_xmfj_m.xmfj003 != g_xmfj_m_o.xmfj003 THEN
                  #帳款客戶的檢查
                  IF NOT axmt430_customer_chk(g_xmfj_m.xmfj003) THEN
                     LET g_xmfj_m.xmfj003 = g_xmfj_m_o.xmfj003
                     CALL s_desc_get_trading_partner_abbr_desc(g_xmfj_m.xmfj003) RETURNING g_xmfj_m.xmfj003_desc
                     DISPLAY BY NAME g_xmfj_m.xmfj003,g_xmfj_m.xmfj003_desc
                     
                     NEXT FIELD CURRENT
                  END IF

                  #根據控制組或客戶據點資料帶出其它欄位的預設值
                  CALL axmt430_xmfj003_default(g_xmfj_m.xmfj003)
               END IF
               
               #客戶說明
               CALL s_desc_get_trading_partner_abbr_desc(g_xmfj_m.xmfj003) RETURNING g_xmfj_m.xmfj003_desc
               DISPLAY BY NAME g_xmfj_m.xmfj003_desc
            END IF 
            LET g_xmfj_m_o.xmfj003 = g_xmfj_m.xmfj003
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj003
            #add-point:BEFORE FIELD xmfj003 name="input.b.xmfj003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfj003
            #add-point:ON CHANGE xmfj003 name="input.g.xmfj003"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj001
            
            #add-point:AFTER FIELD xmfj001 name="input.a.xmfj001"
            LET g_xmfj_m.xmfj001_desc = ''
            DISPLAY BY NAME g_xmfj_m.xmfj001_desc
            
            IF NOT cl_null(g_xmfj_m.xmfj001) THEN 
               IF cl_null(g_xmfj_m_o.xmfj001) OR g_xmfj_m.xmfj001 != g_xmfj_m_o.xmfj001 THEN
                  IF NOT s_axmt430_xmfj001_chk(g_xmfj_m.xmfj001) THEN
                     LET g_xmfj_m.xmfj001 = g_xmfj_m_o.xmfj001
                     CALL s_desc_get_person_desc(g_xmfj_m.xmfj001) RETURNING g_xmfj_m.xmfj001_desc
                     DISPLAY BY NAME g_xmfj_m.xmfj001,g_xmfj_m.xmfj001_desc
                     
                     NEXT FIELD CURRENT
                  END IF
                  
                  #由人員預設其他欄位
                  CALL axmt430_xmfj001_default(g_xmfj_m.xmfj001)
               END IF

               #人員姓名
               CALL s_desc_get_person_desc(g_xmfj_m.xmfj001) RETURNING g_xmfj_m.xmfj001_desc
               DISPLAY BY NAME g_xmfj_m.xmfj001_desc
            END IF 
            LET g_xmfj_m_o.xmfj001 = g_xmfj_m.xmfj001
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj001
            #add-point:BEFORE FIELD xmfj001 name="input.b.xmfj001"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfj001
            #add-point:ON CHANGE xmfj001 name="input.g.xmfj001"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj002
            
            #add-point:AFTER FIELD xmfj002 name="input.a.xmfj002"
            LET g_xmfj_m.xmfj002_desc = ''
            DISPLAY BY NAME g_xmfj_m.xmfj002_desc
            
            IF NOT cl_null(g_xmfj_m.xmfj002) THEN 
               IF cl_null(g_xmfj_m_t.xmfj002) OR g_xmfj_m.xmfj002 != g_xmfj_m_t.xmfj002 THEN
                  #部門檢查
                  IF NOT s_axmt430_xmfj002_chk(g_xmfj_m.xmfj002,g_xmfj_m.xmfjdocdt) THEN
                     LET g_xmfj_m.xmfj002 = g_xmfj_m_t.xmfj002
                     CALL s_desc_get_department_desc(g_xmfj_m.xmfj002) RETURNING g_xmfj_m.xmfj002_desc
                     DISPLAY BY NAME g_xmfj_m.xmfj002,g_xmfj_m.xmfj002_desc
                     
                     NEXT FIELD CURRENT
                  END IF

               END IF
               
               CALL s_desc_get_department_desc(g_xmfj_m.xmfj002) RETURNING g_xmfj_m.xmfj002_desc
               DISPLAY BY NAME g_xmfj_m.xmfj002_desc
            END IF 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj002
            #add-point:BEFORE FIELD xmfj002 name="input.b.xmfj002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfj002
            #add-point:ON CHANGE xmfj002 name="input.g.xmfj002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfjstus
            #add-point:BEFORE FIELD xmfjstus name="input.b.xmfjstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfjstus
            
            #add-point:AFTER FIELD xmfjstus name="input.a.xmfjstus"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfjstus
            #add-point:ON CHANGE xmfjstus name="input.g.xmfjstus"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj004
            
            #add-point:AFTER FIELD xmfj004 name="input.a.xmfj004"
            LET g_xmfj_m.xmfj004_desc = ''
            DISPLAY BY NAME g_xmfj_m.xmfj004_desc
            
            IF NOT cl_null(g_xmfj_m.xmfj004) THEN 
               IF cl_null(g_xmfj_m_t.xmfj004) OR g_xmfj_m.xmfj004 != g_xmfj_m_t.xmfj004 THEN
                  #幣別檢查
                  IF NOT axmt430_xmfj004_chk(g_xmfj_m.xmfj004) THEN
                     LET g_xmfj_m.xmfj004 = g_xmfj_m_t.xmfj004
                     CALL s_desc_get_currency_desc(g_xmfj_m.xmfj004) RETURNING g_xmfj_m.xmfj004_desc
                     DISPLAY BY NAME g_xmfj_m.xmfj004,g_xmfj_m.xmfj004_desc
                     
                     NEXT FIELD CURRENT
                  END IF
               END IF

               CALL s_desc_get_currency_desc(g_xmfj_m.xmfj004) RETURNING g_xmfj_m.xmfj004_desc
               DISPLAY BY NAME g_xmfj_m.xmfj004_desc
            END IF 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj004
            #add-point:BEFORE FIELD xmfj004 name="input.b.xmfj004"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfj004
            #add-point:ON CHANGE xmfj004 name="input.g.xmfj004"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj005
            
            #add-point:AFTER FIELD xmfj005 name="input.a.xmfj005"
            LET g_xmfj_m.xmfj005_desc = ''
            DISPLAY BY NAME g_xmfj_m.xmfj005_desc
            
            IF NOT cl_null(g_xmfj_m.xmfj005) THEN
               IF cl_null(g_xmfj_m_o.xmfj005) OR g_xmfj_m.xmfj005 != g_xmfj_m_o.xmfj005 THEN
                  #稅別檢查
                  IF NOT axmt430_xmfj005_chk(g_xmfj_m.xmfj005) THEN
                     LET g_xmfj_m.xmfj005 = g_xmfj_m_o.xmfj005
                     CALL s_desc_get_tax_desc1(g_site,g_xmfj_m.xmfj005) RETURNING g_xmfj_m.xmfj005_desc
                     DISPLAY BY NAME g_xmfj_m.xmfj005,g_xmfj_m.xmfj005_desc
                     
                     NEXT FIELD CURRENT
                  END IF
               END IF
               
               CALL s_desc_get_tax_desc1(g_site,g_xmfj_m.xmfj005) RETURNING g_xmfj_m.xmfj005_desc
               DISPLAY BY NAME g_xmfj_m.xmfj005_desc
            END IF
            LET g_xmfj_m_o.xmfj005 = g_xmfj_m.xmfj005
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj005
            #add-point:BEFORE FIELD xmfj005 name="input.b.xmfj005"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfj005
            #add-point:ON CHANGE xmfj005 name="input.g.xmfj005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj006
            #add-point:BEFORE FIELD xmfj006 name="input.b.xmfj006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj006
            
            #add-point:AFTER FIELD xmfj006 name="input.a.xmfj006"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfj006
            #add-point:ON CHANGE xmfj006 name="input.g.xmfj006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj007
            #add-point:BEFORE FIELD xmfj007 name="input.b.xmfj007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj007
            
            #add-point:AFTER FIELD xmfj007 name="input.a.xmfj007"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfj007
            #add-point:ON CHANGE xmfj007 name="input.g.xmfj007"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj008
            
            #add-point:AFTER FIELD xmfj008 name="input.a.xmfj008"
            LET g_xmfj_m.xmfj008_desc = ''
            DISPLAY BY NAME g_xmfj_m.xmfj008_desc
            
            IF NOT cl_null(g_xmfj_m.xmfj008) THEN 
               IF cl_null(g_xmfj_m_t.xmfj008) OR g_xmfj_m.xmfj008 <> g_xmfj_m_t.xmfj008 THEN
                  #收款條件檢查
                  IF NOT axmt430_xmfj008_chk(g_xmfj_m.xmfj008) THEN
                     LET g_xmfj_m.xmfj008 = g_xmfj_m_t.xmfj008
                     CALL s_desc_get_ooib002_desc(g_xmfj_m.xmfj008) RETURNING g_xmfj_m.xmfj008_desc
                     DISPLAY BY NAME g_xmfj_m.xmfj008,g_xmfj_m.xmfj008_desc
                     
                     NEXT FIELD CURRENT
                  END IF
               END IF
               
               CALL s_desc_get_ooib002_desc(g_xmfj_m.xmfj008) RETURNING g_xmfj_m.xmfj008_desc
               DISPLAY BY NAME g_xmfj_m.xmfj008_desc

            END IF 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj008
            #add-point:BEFORE FIELD xmfj008 name="input.b.xmfj008"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfj008
            #add-point:ON CHANGE xmfj008 name="input.g.xmfj008"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj009
            
            #add-point:AFTER FIELD xmfj009 name="input.a.xmfj009"
            LET g_xmfj_m.xmfj009_desc = ''
            DISPLAY BY NAME g_xmfj_m.xmfj009_desc
            
            IF NOT cl_null(g_xmfj_m.xmfj009) THEN
               IF cl_null(g_xmfj_m_t.xmfj009) OR g_xmfj_m.xmfj009 != g_xmfj_m_t.xmfj009 THEN
                  #交易條件檢查
                  IF NOT s_azzi650_chk_exist('238',g_xmfj_m.xmfj009) THEN
                     LET g_xmfj_m.xmfj009 = g_xmfj_m_t.xmfj009
                     CALL s_desc_get_acc_desc('238',g_xmfj_m.xmfj009) RETURNING g_xmfj_m.xmfj009_desc
                     DISPLAY BY NAME g_xmfj_m.xmfj009,g_xmfj_m.xmfj009_desc
                     
                     NEXT FIELD CURRENT
                  END IF
               END IF
               
               CALL s_desc_get_acc_desc('238',g_xmfj_m.xmfj009) RETURNING g_xmfj_m.xmfj009_desc
               DISPLAY BY NAME g_xmfj_m.xmfj009_desc
            END IF
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj009
            #add-point:BEFORE FIELD xmfj009 name="input.b.xmfj009"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfj009
            #add-point:ON CHANGE xmfj009 name="input.g.xmfj009"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj010
            
            #add-point:AFTER FIELD xmfj010 name="input.a.xmfj010"
            LET g_xmfj_m.xmfj010_desc = ''
            DISPLAY BY NAME g_xmfj_m.xmfj010_desc
            
            IF NOT cl_null(g_xmfj_m.xmfj010) THEN
               IF cl_null(g_xmfj_m_t.xmfj010) OR g_xmfj_m.xmfj010 != g_xmfj_m_t.xmfj010 THEN
                  #160621-00003#3 20160627 modify by beckxie---S
                  #IF NOT s_azzi650_chk_exist('275',g_xmfj_m.xmfj010) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmfj_m.xmfj010
                  LET g_chkparam.arg2 = '1'
                  LET g_chkparam.err_str[1] = "aoo-00299|",l_msg1
                  IF NOT cl_chk_exist("v_oojd001") THEN
                  #160621-00003#3 20160627 modify by beckxie---E
               
                     LET g_xmfj_m.xmfj010 = g_xmfj_m_t.xmfj010
                     #160621-00003#3 20160629 modify by beckxie---S
                     #CALL s_desc_get_acc_desc('275',g_xmfj_m.xmfj010) RETURNING g_xmfj_m.xmfj010_desc
                     CALL s_desc_get_oojdl003_desc(g_xmfj_m.xmfj010) RETURNING g_xmfj_m.xmfj010_desc
                     #160621-00003#3 20160629 modify by beckxie---E
                     DISPLAY BY NAME g_xmfj_m.xmfj010,g_xmfj_m.xmfj010_desc
                     
                     NEXT FIELD CURRENT
                  END IF
               END IF
               
               #160621-00003#3 20160629 modify by beckxie---S
               #CALL s_desc_get_acc_desc('275',g_xmfj_m.xmfj010) RETURNING g_xmfj_m.xmfj010_desc
               CALL s_desc_get_oojdl003_desc(g_xmfj_m.xmfj010) RETURNING g_xmfj_m.xmfj010_desc
               #160621-00003#3 20160629 modify by beckxie---E
               DISPLAY BY NAME g_xmfj_m.xmfj010_desc
            END IF
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj010
            #add-point:BEFORE FIELD xmfj010 name="input.b.xmfj010"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfj010
            #add-point:ON CHANGE xmfj010 name="input.g.xmfj010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj013
            #add-point:BEFORE FIELD xmfj013 name="input.b.xmfj013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj013
            
            #add-point:AFTER FIELD xmfj013 name="input.a.xmfj013"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfj013
            #add-point:ON CHANGE xmfj013 name="input.g.xmfj013"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj014
            #add-point:BEFORE FIELD xmfj014 name="input.b.xmfj014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj014
            
            #add-point:AFTER FIELD xmfj014 name="input.a.xmfj014"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfj014
            #add-point:ON CHANGE xmfj014 name="input.g.xmfj014"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj015
            #add-point:BEFORE FIELD xmfj015 name="input.b.xmfj015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj015
            
            #add-point:AFTER FIELD xmfj015 name="input.a.xmfj015"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfj015
            #add-point:ON CHANGE xmfj015 name="input.g.xmfj015"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj016
            #add-point:BEFORE FIELD xmfj016 name="input.b.xmfj016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj016
            
            #add-point:AFTER FIELD xmfj016 name="input.a.xmfj016"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfj016
            #add-point:ON CHANGE xmfj016 name="input.g.xmfj016"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj017
            #add-point:BEFORE FIELD xmfj017 name="input.b.xmfj017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj017
            
            #add-point:AFTER FIELD xmfj017 name="input.a.xmfj017"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfj017
            #add-point:ON CHANGE xmfj017 name="input.g.xmfj017"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj018
            #add-point:BEFORE FIELD xmfj018 name="input.b.xmfj018"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj018
            
            #add-point:AFTER FIELD xmfj018 name="input.a.xmfj018"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfj018
            #add-point:ON CHANGE xmfj018 name="input.g.xmfj018"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj019
            #add-point:BEFORE FIELD xmfj019 name="input.b.xmfj019"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj019
            
            #add-point:AFTER FIELD xmfj019 name="input.a.xmfj019"
            IF NOT cl_null(g_xmfj_m.xmfj019) THEN
               IF g_xmfj_m.xmfj019 = '1' THEN
                  #檢查銷售折扣結算對象檔(xmfk_t)是否有資料
                  LET l_cnt1 = 0
                  SELECT COUNT(*) INTO l_cnt1
                    FROM xmfk_t
                   WHERE xmfkent = g_enterprise
                     AND xmfkdocno = g_xmfj_m.xmfjdocno
                  IF NOT cl_null(l_cnt1) AND l_cnt1 > 0 THEN
                     IF cl_ask_confirm('axm-00655') THEN
                        DELETE FROM xmfk_t 
                         WHERE xmfkent = g_enterprise
                           AND xmfkdocno = g_xmfj_m.xmfjdocno
                     ELSE
                        LET g_xmfj_m.xmfj019 = g_xmfj_m_t.xmfj019
                        DISPLAY BY NAME g_xmfj_m.xmfj019
                        
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF
            CALL axmt430_set_entry(p_cmd)
            CALL axmt430_set_no_entry(p_cmd)
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfj019
            #add-point:ON CHANGE xmfj019 name="input.g.xmfj019"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj011
            #add-point:BEFORE FIELD xmfj011 name="input.b.xmfj011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj011
            
            #add-point:AFTER FIELD xmfj011 name="input.a.xmfj011"
            IF NOT cl_null(g_xmfj_m.xmfj011) THEN
               IF cl_null(g_xmfj_m_o.xmfj011) OR g_xmfj_m.xmfj011 != g_xmfj_m_o.xmfj011 THEN
                  #預設失效日期
                  CALL axmt430_xmfj011_default(g_xmfj_m.xmfj011)
               
                  IF NOT cl_null(g_xmfj_m.xmfj012) THEN
                     IF g_xmfj_m.xmfj011 >= g_xmfj_m.xmfj012 THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'aoo-00122'
                        LET g_errparam.extend = g_xmfj_m.xmfj011," >= ",g_xmfj_m.xmfj012
                        LET g_errparam.popup = TRUE
                        
                        CALL cl_err()
                        LET g_xmfj_m.xmfj011 = g_xmfj_m_o.xmfj011
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF
            LET g_xmfj_m_o.xmfj011 = g_xmfj_m.xmfj011
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfj011
            #add-point:ON CHANGE xmfj011 name="input.g.xmfj011"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj012
            #add-point:BEFORE FIELD xmfj012 name="input.b.xmfj012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj012
            
            #add-point:AFTER FIELD xmfj012 name="input.a.xmfj012"
            IF NOT cl_null(g_xmfj_m.xmfj012) THEN
               IF cl_null(g_xmfj_m_o.xmfj012) OR g_xmfj_m.xmfj012 != g_xmfj_m_o.xmfj012 THEN
                  IF NOT cl_null(g_xmfj_m.xmfj011) THEN
                     IF g_xmfj_m.xmfj011 >= g_xmfj_m.xmfj012 THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'aoo-00122'
                        LET g_errparam.extend = g_xmfj_m.xmfj011," >= ",g_xmfj_m.xmfj012
                        LET g_errparam.popup = TRUE
                        
                        CALL cl_err()
                        LET g_xmfj_m.xmfj012 = g_xmfj_m_o.xmfj012
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF
            LET g_xmfj_m_o.xmfj012 = g_xmfj_m.xmfj012
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfj012
            #add-point:ON CHANGE xmfj012 name="input.g.xmfj012"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfjsite
            #add-point:BEFORE FIELD xmfjsite name="input.b.xmfjsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfjsite
            
            #add-point:AFTER FIELD xmfjsite name="input.a.xmfjsite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfjsite
            #add-point:ON CHANGE xmfjsite name="input.g.xmfjsite"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj020
            
            #add-point:AFTER FIELD xmfj020 name="input.a.xmfj020"
            LET g_xmfj_m.xmfj020_desc = ''
            DISPLAY BY NAME g_xmfj_m.xmfj002_desc
            
            IF NOT cl_null(g_xmfj_m.xmfj020) THEN 
               IF NOT axmt430_xmfj020_chk(g_xmfj_m.xmfj020) THEN
                  LET g_xmfj_m.xmfj020 = g_xmfj_m_t.xmfj020
                  CALL s_desc_get_ooib002_desc(g_xmfj_m.xmfj020) RETURNING g_xmfj_m.xmfj020_desc
                  DISPLAY BY NAME g_xmfj_m.xmfj020,g_xmfj_m.xmfj020_desc
                  NEXT FIELD CURRENT
               END IF
               
               CALL s_desc_get_ooib002_desc(g_xmfj_m.xmfj020) RETURNING g_xmfj_m.xmfj020_desc
               DISPLAY BY NAME g_xmfj_m.xmfj020_desc
            END IF
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj020
            #add-point:BEFORE FIELD xmfj020 name="input.b.xmfj020"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfj020
            #add-point:ON CHANGE xmfj020 name="input.g.xmfj020"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfj030
            #add-point:BEFORE FIELD xmfj030 name="input.b.xmfj030"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfj030
            
            #add-point:AFTER FIELD xmfj030 name="input.a.xmfj030"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfj030
            #add-point:ON CHANGE xmfj030 name="input.g.xmfj030"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.xmfjdocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfjdocno
            #add-point:ON ACTION controlp INFIELD xmfjdocno name="input.c.xmfjdocno"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfj_m.xmfjdocno             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef004   #單據別參照表
            LET g_qryparam.arg2 = g_prog      #作業編號

            CALL q_ooba002_1()                                #呼叫開窗

            LET g_xmfj_m.xmfjdocno = g_qryparam.return1              

            DISPLAY g_xmfj_m.xmfjdocno TO xmfjdocno              #
            
            #單別說明
            CALL s_aooi200_get_slip_desc(g_xmfj_m.xmfjdocno) RETURNING g_xmfj_m.xmfjdocno_desc
            DISPLAY g_xmfj_m.xmfjdocno_desc TO xmfjdocno_desc

            NEXT FIELD xmfjdocno                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmfjdocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfjdocdt
            #add-point:ON ACTION controlp INFIELD xmfjdocdt name="input.c.xmfjdocdt"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmfj003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj003
            #add-point:ON ACTION controlp INFIELD xmfj003 name="input.c.xmfj003"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfj_m.xmfj003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_site   #營運據點
            LET g_qryparam.where = " 1=1"
            LET l_extra_where = ''
            CALL s_control_get_customer_sql('2',g_site,g_user,g_dept,g_xmfj_m.xmfjdocno)
                 RETURNING l_success,l_extra_where
            IF NOT cl_null(l_extra_where) THEN
               LET g_qryparam.where = g_qryparam.where," AND ",l_extra_where
            END IF

            CALL q_pmaa001_6()                                #呼叫開窗

            LET g_xmfj_m.xmfj003 = g_qryparam.return1              

            DISPLAY g_xmfj_m.xmfj003 TO xmfj003              #
            
            #客戶說明
            CALL s_desc_get_trading_partner_abbr_desc(g_xmfj_m.xmfj003) RETURNING g_xmfj_m.xmfj003_desc
            DISPLAY BY NAME g_xmfj_m.xmfj003_desc

            NEXT FIELD xmfj003                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmfj001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj001
            #add-point:ON ACTION controlp INFIELD xmfj001 name="input.c.xmfj001"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfj_m.xmfj001             #給予default值

            #給予arg

            CALL q_ooag001()                                #呼叫開窗

            LET g_xmfj_m.xmfj001 = g_qryparam.return1              

            DISPLAY g_xmfj_m.xmfj001 TO xmfj001              #
            
            #人員姓名
            CALL s_desc_get_person_desc(g_xmfj_m.xmfj001) RETURNING g_xmfj_m.xmfj001_desc
            DISPLAY BY NAME g_xmfj_m.xmfj001_desc

            NEXT FIELD xmfj001                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmfj002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj002
            #add-point:ON ACTION controlp INFIELD xmfj002 name="input.c.xmfj002"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfj_m.xmfj002             #給予default值
            LET g_qryparam.default2 = g_xmfj_m.xmfj002_desc
            #給予arg
            LET g_qryparam.arg1 = g_xmfj_m.xmfjdocdt


            CALL q_ooeg001()                                #呼叫開窗

            LET g_xmfj_m.xmfj002 = g_qryparam.return1              
            LET g_xmfj_m.xmfj002_desc = g_qryparam.return2
            DISPLAY g_xmfj_m.xmfj002 TO xmfj002              #
            DISPLAY g_xmfj_m.xmfj002_desc TO xmfj002_desc
            NEXT FIELD xmfj002                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmfjstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfjstus
            #add-point:ON ACTION controlp INFIELD xmfjstus name="input.c.xmfjstus"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmfj004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj004
            #add-point:ON ACTION controlp INFIELD xmfj004 name="input.c.xmfj004"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfj_m.xmfj004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_site


            CALL q_ooaj002_1()                                #呼叫開窗

            LET g_xmfj_m.xmfj004 = g_qryparam.return1              

            DISPLAY g_xmfj_m.xmfj004 TO xmfj004              #
            
            #幣別說明
            CALL s_desc_get_currency_desc(g_xmfj_m.xmfj004) RETURNING g_xmfj_m.xmfj004_desc
            DISPLAY BY NAME g_xmfj_m.xmfj004_desc

            NEXT FIELD xmfj004                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmfj005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj005
            #add-point:ON ACTION controlp INFIELD xmfj005 name="input.c.xmfj005"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfj_m.xmfj005             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_oodb002_2()                                #呼叫開窗

            LET g_xmfj_m.xmfj005 = g_qryparam.return1              

            DISPLAY g_xmfj_m.xmfj005 TO xmfj005              #
            
            #稅別說明
            CALL s_desc_get_tax_desc1(g_site,g_xmfj_m.xmfj005) RETURNING g_xmfj_m.xmfj005_desc
            DISPLAY BY NAME g_xmfj_m.xmfj005_desc

            NEXT FIELD xmfj005                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmfj006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj006
            #add-point:ON ACTION controlp INFIELD xmfj006 name="input.c.xmfj006"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmfj007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj007
            #add-point:ON ACTION controlp INFIELD xmfj007 name="input.c.xmfj007"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmfj008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj008
            #add-point:ON ACTION controlp INFIELD xmfj008 name="input.c.xmfj008"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfj_m.xmfj008             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_xmfj_m.xmfj003

            CALL q_pmad002_3()                                #呼叫開窗

            LET g_xmfj_m.xmfj008 = g_qryparam.return1              

            DISPLAY g_xmfj_m.xmfj008 TO xmfj008              #
            
            #收款條件說明
            CALL s_desc_get_ooib002_desc(g_xmfj_m.xmfj008) RETURNING g_xmfj_m.xmfj008_desc
            DISPLAY BY NAME g_xmfj_m.xmfj008_desc

            NEXT FIELD xmfj008                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmfj009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj009
            #add-point:ON ACTION controlp INFIELD xmfj009 name="input.c.xmfj009"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfj_m.xmfj009             #給予default值
            LET g_qryparam.default2 = g_xmfj_m.xmfj009_desc        #說明
            #給予arg
            LET g_qryparam.arg1 = '238'

            CALL q_oocq002()                                #呼叫開窗

            LET g_xmfj_m.xmfj009 = g_qryparam.return1              
            LET g_xmfj_m.xmfj009_desc = g_qryparam.return2
            DISPLAY g_xmfj_m.xmfj009 TO xmfj009              #
            DISPLAY g_xmfj_m.xmfj009_desc TO xmfj009_desc
            NEXT FIELD xmfj009                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmfj010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj010
            #add-point:ON ACTION controlp INFIELD xmfj010 name="input.c.xmfj010"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfj_m.xmfj010             #給予default值
            LET g_qryparam.default2 = g_xmfj_m.xmfj010_desc        #說明
            #給予arg
            #160621-00003#3 20160627 modify by beckxie---S
			   #LET g_qryparam.arg1 = "275"
            #CALL q_oocq002()                           #呼叫開窗
            LET g_qryparam.arg1 = '1'
            CALL q_oojd001_1()
            #160621-00003#3 20160627 modify by beckxie---E

            LET g_xmfj_m.xmfj010 = g_qryparam.return1              
            #160621-00003#3 20160627 modify by beckxie---S
           # LET g_xmfj_m.xmfj010_desc = g_qryparam.return1
            CALL s_desc_get_oojdl003_desc(g_xmfj_m.xmfj010) RETURNING g_xmfj_m.xmfj010_desc   
            #160621-00003#3 20160627 modify by beckxie---E
            DISPLAY g_xmfj_m.xmfj010 TO xmfj010              #
            DISPLAY g_xmfj_m.xmfj010_desc TO xmfj010_desc
            NEXT FIELD xmfj010                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmfj013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj013
            #add-point:ON ACTION controlp INFIELD xmfj013 name="input.c.xmfj013"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmfj014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj014
            #add-point:ON ACTION controlp INFIELD xmfj014 name="input.c.xmfj014"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmfj015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj015
            #add-point:ON ACTION controlp INFIELD xmfj015 name="input.c.xmfj015"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmfj016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj016
            #add-point:ON ACTION controlp INFIELD xmfj016 name="input.c.xmfj016"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmfj017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj017
            #add-point:ON ACTION controlp INFIELD xmfj017 name="input.c.xmfj017"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmfj018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj018
            #add-point:ON ACTION controlp INFIELD xmfj018 name="input.c.xmfj018"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmfj019
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj019
            #add-point:ON ACTION controlp INFIELD xmfj019 name="input.c.xmfj019"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmfj011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj011
            #add-point:ON ACTION controlp INFIELD xmfj011 name="input.c.xmfj011"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmfj012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj012
            #add-point:ON ACTION controlp INFIELD xmfj012 name="input.c.xmfj012"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmfjsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfjsite
            #add-point:ON ACTION controlp INFIELD xmfjsite name="input.c.xmfjsite"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmfj020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj020
            #add-point:ON ACTION controlp INFIELD xmfj020 name="input.c.xmfj020"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfj_m.xmfj020             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_ooib002_1()                                #呼叫開窗

            LET g_xmfj_m.xmfj020 = g_qryparam.return1              

            DISPLAY g_xmfj_m.xmfj020 TO xmfj020   #
            
            #付款條件說明
            CALL s_desc_get_ooib002_desc(g_xmfj_m.xmfj020) RETURNING g_xmfj_m.xmfj020_desc
            DISPLAY BY NAME g_xmfj_m.xmfj020_desc

            NEXT FIELD xmfj020                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmfj030
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfj030
            #add-point:ON ACTION controlp INFIELD xmfj030 name="input.c.xmfj030"
            
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_xmfj_m.xmfjdocno
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
               #合約單號自動編碼
               CALL s_aooi200_gen_docno(g_site,g_xmfj_m.xmfjdocno,g_xmfj_m.xmfjdocdt,g_prog) 
                    RETURNING l_success,g_xmfj_m.xmfjdocno
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apm-00003'
                  LET g_errparam.extend = g_xmfj_m.xmfjdocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  NEXT FIELD xmfjdocno
               END IF
               DISPLAY BY NAME g_xmfj_m.xmfjdocno
               #end add-point
               
               INSERT INTO xmfj_t (xmfjent,xmfjdocno,xmfjdocdt,xmfj003,xmfj001,xmfj002,xmfjstus,xmfj004, 
                   xmfj005,xmfj006,xmfj007,xmfj008,xmfj009,xmfj010,xmfj013,xmfj014,xmfj015,xmfj016,xmfj017, 
                   xmfj018,xmfj019,xmfj011,xmfj012,xmfjsite,xmfj020,xmfj030,xmfjownid,xmfjowndp,xmfjcrtid, 
                   xmfjcrtdp,xmfjcrtdt,xmfjmodid,xmfjmoddt,xmfjcnfid,xmfjcnfdt,xmfjpstid,xmfjpstdt)
               VALUES (g_enterprise,g_xmfj_m.xmfjdocno,g_xmfj_m.xmfjdocdt,g_xmfj_m.xmfj003,g_xmfj_m.xmfj001, 
                   g_xmfj_m.xmfj002,g_xmfj_m.xmfjstus,g_xmfj_m.xmfj004,g_xmfj_m.xmfj005,g_xmfj_m.xmfj006, 
                   g_xmfj_m.xmfj007,g_xmfj_m.xmfj008,g_xmfj_m.xmfj009,g_xmfj_m.xmfj010,g_xmfj_m.xmfj013, 
                   g_xmfj_m.xmfj014,g_xmfj_m.xmfj015,g_xmfj_m.xmfj016,g_xmfj_m.xmfj017,g_xmfj_m.xmfj018, 
                   g_xmfj_m.xmfj019,g_xmfj_m.xmfj011,g_xmfj_m.xmfj012,g_xmfj_m.xmfjsite,g_xmfj_m.xmfj020, 
                   g_xmfj_m.xmfj030,g_xmfj_m.xmfjownid,g_xmfj_m.xmfjowndp,g_xmfj_m.xmfjcrtid,g_xmfj_m.xmfjcrtdp, 
                   g_xmfj_m.xmfjcrtdt,g_xmfj_m.xmfjmodid,g_xmfj_m.xmfjmoddt,g_xmfj_m.xmfjcnfid,g_xmfj_m.xmfjcnfdt, 
                   g_xmfj_m.xmfjpstid,g_xmfj_m.xmfjpstdt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_xmfj_m:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               
               #end add-point
               
               
               
               
               #add-point:單頭新增後 name="input.head.a_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL axmt430_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL axmt430_b_fill()
                  CALL axmt430_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               
               #end add-point
               
               #將遮罩欄位還原
               CALL axmt430_xmfj_t_mask_restore('restore_mask_o')
               
               UPDATE xmfj_t SET (xmfjdocno,xmfjdocdt,xmfj003,xmfj001,xmfj002,xmfjstus,xmfj004,xmfj005, 
                   xmfj006,xmfj007,xmfj008,xmfj009,xmfj010,xmfj013,xmfj014,xmfj015,xmfj016,xmfj017,xmfj018, 
                   xmfj019,xmfj011,xmfj012,xmfjsite,xmfj020,xmfj030,xmfjownid,xmfjowndp,xmfjcrtid,xmfjcrtdp, 
                   xmfjcrtdt,xmfjmodid,xmfjmoddt,xmfjcnfid,xmfjcnfdt,xmfjpstid,xmfjpstdt) = (g_xmfj_m.xmfjdocno, 
                   g_xmfj_m.xmfjdocdt,g_xmfj_m.xmfj003,g_xmfj_m.xmfj001,g_xmfj_m.xmfj002,g_xmfj_m.xmfjstus, 
                   g_xmfj_m.xmfj004,g_xmfj_m.xmfj005,g_xmfj_m.xmfj006,g_xmfj_m.xmfj007,g_xmfj_m.xmfj008, 
                   g_xmfj_m.xmfj009,g_xmfj_m.xmfj010,g_xmfj_m.xmfj013,g_xmfj_m.xmfj014,g_xmfj_m.xmfj015, 
                   g_xmfj_m.xmfj016,g_xmfj_m.xmfj017,g_xmfj_m.xmfj018,g_xmfj_m.xmfj019,g_xmfj_m.xmfj011, 
                   g_xmfj_m.xmfj012,g_xmfj_m.xmfjsite,g_xmfj_m.xmfj020,g_xmfj_m.xmfj030,g_xmfj_m.xmfjownid, 
                   g_xmfj_m.xmfjowndp,g_xmfj_m.xmfjcrtid,g_xmfj_m.xmfjcrtdp,g_xmfj_m.xmfjcrtdt,g_xmfj_m.xmfjmodid, 
                   g_xmfj_m.xmfjmoddt,g_xmfj_m.xmfjcnfid,g_xmfj_m.xmfjcnfdt,g_xmfj_m.xmfjpstid,g_xmfj_m.xmfjpstdt) 
 
                WHERE xmfjent = g_enterprise AND xmfjdocno = g_xmfjdocno_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "xmfj_t:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL axmt430_xmfj_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_xmfj_m_t)
               LET g_log2 = util.JSON.stringify(g_xmfj_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_xmfjdocno_t = g_xmfj_m.xmfjdocno
 
            
      END INPUT
   
 
{</section>}
 
{<section id="axmt430.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_xmfl_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_axmt430_01
            LET g_action_choice="open_axmt430_01"
            IF cl_auth_chk_act("open_axmt430_01") THEN
               
               #add-point:ON ACTION open_axmt430_01 name="input.detail_input.page1.open_axmt430_01"
               #分段折扣
               IF NOT cl_null(g_xmfj_m.xmfjdocno) AND 
                  ((NOT cl_null(g_xmfl_d[l_ac].xmflseq) AND l_cmd = 'a') OR 
                  (NOT cl_null(g_xmfl_d_t.xmflseq) AND l_cmd = 'u')) AND
                  NOT cl_null(g_xmfl_d[l_ac].xmfl001) AND NOT cl_null(g_xmfl_d[l_ac].xmfl002) AND 
                  NOT cl_null(g_xmfl_d[l_ac].xmfl005) AND NOT cl_null(g_xmfl_d[l_ac].xmfl006) THEN
                  
                  IF l_cmd = 'a' THEN
                     LET l_xmflseq = g_xmfl_d[l_ac].xmflseq
                  ELSE
                     LET l_xmflseq = g_xmfl_d_t.xmflseq
                  END IF
                  
                  CALL axmt430_01(g_xmfj_m.xmfjdocno,l_xmflseq,g_xmfl_d[l_ac].xmfl001,
                                  g_xmfl_d[l_ac].xmfl002,g_xmfl_d[l_ac].xmfl005,g_xmfl_d[l_ac].xmfl006)
                        
                  #若有分段折扣，自動將單身的分段折扣否(xmfl009)更新成Y
                  LET l_cnt1 = 0
                  SELECT COUNT(*) INTO l_cnt1
                    FROM xmfm_t
                   WHERE xmfment = g_enterprise
                     AND xmfmdocno = g_xmfj_m.xmfjdocno
                     AND xmfmseq = l_xmflseq
                  IF NOT cl_null(l_cnt1) AND l_cnt1 > 0 THEN
                     LET g_xmfl_d[l_ac].xmfl009 = 'Y'
                  ELSE
                     LET g_xmfl_d[l_ac].xmfl009 = 'N'
                  END IF
                  DISPLAY BY NAME g_xmfl_d[l_ac].xmfl009
               END IF
               #END add-point
            END IF
 
 
 
 
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xmfl_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axmt430_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_xmfl_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN axmt430_cl USING g_enterprise,g_xmfj_m.xmfjdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axmt430_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE axmt430_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_xmfl_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xmfl_d[l_ac].xmflseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xmfl_d_t.* = g_xmfl_d[l_ac].*  #BACKUP
               LET g_xmfl_d_o.* = g_xmfl_d[l_ac].*  #BACKUP
               CALL axmt430_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               CALL axmt430_set_no_required_b(l_cmd)
               CALL axmt430_set_required_b(l_cmd)
               #end add-point  
               CALL axmt430_set_no_entry_b(l_cmd)
               IF NOT axmt430_lock_b("xmfl_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axmt430_bcl INTO g_xmfl_d[l_ac].xmflseq,g_xmfl_d[l_ac].xmflsite,g_xmfl_d[l_ac].xmfl001, 
                      g_xmfl_d[l_ac].xmfl002,g_xmfl_d[l_ac].xmfl003,g_xmfl_d[l_ac].xmfl005,g_xmfl_d[l_ac].xmfl007, 
                      g_xmfl_d[l_ac].xmfl006,g_xmfl_d[l_ac].xmfl008,g_xmfl_d[l_ac].xmfl009,g_xmfl_d[l_ac].xmfl010, 
                      g_xmfl_d[l_ac].xmfl011,g_xmfl_d[l_ac].xmfl012
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_xmfl_d_t.xmflseq,":",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_xmfl_d_mask_o[l_ac].* =  g_xmfl_d[l_ac].*
                  CALL axmt430_xmfl_t_mask()
                  LET g_xmfl_d_mask_n[l_ac].* =  g_xmfl_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL axmt430_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmfl_d[l_ac].* TO NULL 
            INITIALIZE g_xmfl_d_t.* TO NULL 
            INITIALIZE g_xmfl_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_xmfl_d[l_ac].xmfl001 = "1"
      LET g_xmfl_d[l_ac].xmfl005 = "1"
      LET g_xmfl_d[l_ac].xmfl009 = "N"
 
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            LET g_xmfl_d[l_ac].xmflsite = g_xmfj_m.xmfjsite
            
            #若非第一筆資料，則預設上一筆的資料
            IF l_ac > 1 THEN
               LET g_xmfl_d[l_ac].xmfl001 = g_xmfl_d[l_ac-1].xmfl001
               LET g_xmfl_d[l_ac].xmfl005 = g_xmfl_d[l_ac-1].xmfl005
               LET g_xmfl_d[l_ac].xmfl006 = g_xmfl_d[l_ac-1].xmfl006
               LET g_xmfl_d[l_ac].xmfl007 = g_xmfl_d[l_ac-1].xmfl007
               LET g_xmfl_d[l_ac].xmfl008 = g_xmfl_d[l_ac-1].xmfl008
               LET g_xmfl_d[l_ac].xmfl009 = g_xmfl_d[l_ac-1].xmfl009
            END IF
            #end add-point
            LET g_xmfl_d_t.* = g_xmfl_d[l_ac].*     #新輸入資料
            LET g_xmfl_d_o.* = g_xmfl_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axmt430_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            CALL axmt430_set_no_required_b(l_cmd)
            CALL axmt430_set_required_b(l_cmd)
            #end add-point
            CALL axmt430_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmfl_d[li_reproduce_target].* = g_xmfl_d[li_reproduce].*
 
               LET g_xmfl_d[li_reproduce_target].xmflseq = NULL
 
            END IF
            
 
            #add-point:modify段before insert name="input.body.before_insert"
            #最大值+1
            SELECT MAX(xmflseq)+1 INTO g_xmfl_d[l_ac].xmflseq
              FROM xmfl_t
             WHERE xmflent = g_enterprise
               AND xmfldocno = g_xmfj_m.xmfjdocno
            IF cl_null(g_xmfl_d[l_ac].xmflseq) THEN
               LET g_xmfl_d[l_ac].xmflseq = 1
            END IF
            IF l_ac > 1 AND g_xmfl_d[l_ac].xmfl009 = 'Y' THEN
               INSERT INTO xmfm_t (xmfment,xmfmdocno,xmfmsite,xmfmseq,
                                   xmfm001,xmfm002,xmfm003,xmfm004)
                  SELECT xmfment,xmfmdocno,xmfmsite,g_xmfl_d[l_ac].xmflseq,
                         xmfm001,xmfm002,xmfm003,xmfm004
                    FROM xmfm_t
                   WHERE xmfment = g_enterprise
                     AND xmfmdocno = g_xmfj_m.xmfjdocno
                     AND xmfmseq = g_xmfl_d[l_ac-1].xmflseq
            END IF
            LET g_xmfl_d_t.* = g_xmfl_d[l_ac].*     #新輸入資料
            LET g_xmfl_d_o.* = g_xmfl_d[l_ac].*     #新輸入資料
            LET l_first_insert = TRUE
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM xmfl_t 
             WHERE xmflent = g_enterprise AND xmfldocno = g_xmfj_m.xmfjdocno
 
               AND xmflseq = g_xmfl_d[l_ac].xmflseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmfj_m.xmfjdocno
               LET gs_keys[2] = g_xmfl_d[g_detail_idx].xmflseq
               CALL axmt430_insert_b('xmfl_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               INITIALIZE g_xmfl_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmfl_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axmt430_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_xmfj_m.xmfjdocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_xmfl_d_t.xmflseq
 
            
               #刪除同層單身
               IF NOT axmt430_delete_b('xmfl_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt430_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT axmt430_key_delete_b(gs_keys,'xmfl_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt430_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
               
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE axmt430_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
               
               #end add-point
               LET l_count = g_xmfl_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_xmfl_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmflseq
            #add-point:BEFORE FIELD xmflseq name="input.b.page1.xmflseq"
            IF cl_null(g_xmfl_d[l_ac].xmflseq) THEN
               #最大值+1
               SELECT MAX(xmflseq)+1 INTO g_xmfl_d[l_ac].xmflseq
                 FROM xmfl_t
                WHERE xmflent = g_enterprise
                  AND xmfldocno = g_xmfj_m.xmfjdocno
               IF cl_null(g_xmfl_d[l_ac].xmflseq) THEN
                  LET g_xmfl_d[l_ac].xmflseq = 1
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmflseq
            
            #add-point:AFTER FIELD xmflseq name="input.a.page1.xmflseq"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_xmfj_m.xmfjdocno IS NOT NULL AND g_xmfl_d[g_detail_idx].xmflseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmfj_m.xmfjdocno != g_xmfjdocno_t OR g_xmfl_d[g_detail_idx].xmflseq != g_xmfl_d_t.xmflseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmfl_t WHERE "||"xmflent = '" ||g_enterprise|| "' AND "||"xmfldocno = '"||g_xmfj_m.xmfjdocno ||"' AND "|| "xmflseq = '"||g_xmfl_d[g_detail_idx].xmflseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF NOT cl_null(g_xmfl_d[l_ac].xmflseq) THEN
               IF cl_null(g_xmfl_d_o.xmflseq) OR g_xmfl_d[l_ac].xmflseq != g_xmfl_d_o.xmflseq THEN
                  IF l_cmd = 'a' THEN
                     IF g_xmfl_d[l_ac].xmfl009 = 'Y' THEN
                        UPDATE xmfm_t SET xmfmseq = g_xmfl_d[l_ac].xmflseq
                         WHERE xmfment = g_enterprise
                           AND xmfmdocno = g_xmfj_m.xmfjdocno
                           AND xmfmseq = g_xmfl_d_o.xmflseq
                     END IF
                  END IF
               END IF
               LET g_xmfl_d_o.xmflseq = g_xmfl_d[l_ac].xmflseq
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmflseq
            #add-point:ON CHANGE xmflseq name="input.g.page1.xmflseq"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmflsite
            #add-point:BEFORE FIELD xmflsite name="input.b.page1.xmflsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmflsite
            
            #add-point:AFTER FIELD xmflsite name="input.a.page1.xmflsite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmflsite
            #add-point:ON CHANGE xmflsite name="input.g.page1.xmflsite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfl001
            #add-point:BEFORE FIELD xmfl001 name="input.b.page1.xmfl001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfl001
            
            #add-point:AFTER FIELD xmfl001 name="input.a.page1.xmfl001"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfl001
            #add-point:ON CHANGE xmfl001 name="input.g.page1.xmfl001"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfl002
            
            #add-point:AFTER FIELD xmfl002 name="input.a.page1.xmfl002"
            LET g_xmfl_d[l_ac].xmfl002_desc = ''
            LET g_xmfl_d[l_ac].xmfl002_desc1= ''
            DISPLAY BY NAME g_xmfl_d[l_ac].xmfl002_desc,g_xmfl_d[l_ac].xmfl002_desc1
            
            IF NOT cl_null(g_xmfl_d[l_ac].xmfl002) THEN
               IF cl_null(g_xmfl_d_o.xmfl002) OR g_xmfl_d[l_ac].xmfl002 != g_xmfl_d_o.xmfl002 THEN
                  #資料編號的檢查
                  IF NOT axmt430_xmfl002_chk(g_xmfl_d[l_ac].xmfl001,g_xmfl_d[l_ac].xmfl002) THEN
                     LET g_xmfl_d[l_ac].xmfl002 = g_xmfl_d_o.xmfl002
                     CALL axmt430_xmfl002_desc(g_xmfl_d[l_ac].xmfl001,g_xmfl_d[l_ac].xmfl002) 
                          RETURNING g_xmfl_d[l_ac].xmfl002_desc,g_xmfl_d[l_ac].xmfl002_desc1
                     DISPLAY BY NAME g_xmfl_d[l_ac].xmfl002_desc,g_xmfl_d[l_ac].xmfl002_desc1
                     
                     NEXT FIELD CURRENT
                  END IF
                  
                  #資料編號帶出預設值
                  CALL axmt430_xmfl002_default(g_xmfl_d[l_ac].xmfl001,g_xmfl_d[l_ac].xmfl002)
               END IF
               
               #資料編號的說明
               CALL axmt430_xmfl002_desc(g_xmfl_d[l_ac].xmfl001,g_xmfl_d[l_ac].xmfl002) 
                    RETURNING g_xmfl_d[l_ac].xmfl002_desc,g_xmfl_d[l_ac].xmfl002_desc1
               DISPLAY BY NAME g_xmfl_d[l_ac].xmfl002_desc,g_xmfl_d[l_ac].xmfl002_desc1
            END IF
            LET g_xmfl_d_o.xmfl002 = g_xmfl_d[l_ac].xmfl002
            CALL axmt430_set_entry_b(l_cmd)
            CALL axmt430_set_no_required_b(l_cmd)
            CALL axmt430_set_required_b(l_cmd)
            CALL axmt430_set_no_entry_b(l_cmd)
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfl002
            #add-point:BEFORE FIELD xmfl002 name="input.b.page1.xmfl002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfl002
            #add-point:ON CHANGE xmfl002 name="input.g.page1.xmfl002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfl002_desc
            #add-point:BEFORE FIELD xmfl002_desc name="input.b.page1.xmfl002_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfl002_desc
            
            #add-point:AFTER FIELD xmfl002_desc name="input.a.page1.xmfl002_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfl002_desc
            #add-point:ON CHANGE xmfl002_desc name="input.g.page1.xmfl002_desc"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfl002_desc1
            #add-point:BEFORE FIELD xmfl002_desc1 name="input.b.page1.xmfl002_desc1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfl002_desc1
            
            #add-point:AFTER FIELD xmfl002_desc1 name="input.a.page1.xmfl002_desc1"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfl002_desc1
            #add-point:ON CHANGE xmfl002_desc1 name="input.g.page1.xmfl002_desc1"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfl003
            
            #add-point:AFTER FIELD xmfl003 name="input.a.page1.xmfl003"
            LET g_xmfl_d[l_ac].xmfl003_desc = ''
            DISPLAY BY NAME g_xmfl_d[l_ac].xmfl003_desc
            
            IF NOT cl_null(g_xmfl_d[l_ac].xmfl003) THEN
               IF cl_null(g_xmfl_d_t.xmfl003) OR g_xmfl_d[l_ac].xmfl003 != g_xmfl_d_t.xmfl003 THEN
                  IF NOT s_feature_check(g_xmfl_d[l_ac].xmfl002,g_xmfl_d[l_ac].xmfl003) THEN
                     LET g_xmfl_d[l_ac].xmfl003 = g_xmfl_d_t.xmfl003
                     CALL s_feature_description(g_xmfl_d[l_ac].xmfl002,g_xmfl_d[l_ac].xmfl003)
                          RETURNING l_success,g_xmfl_d[l_ac].xmfl003_desc
                     DISPLAY BY NAME g_xmfl_d[l_ac].xmfl003,g_xmfl_d[l_ac].xmfl003_desc
                     
                     NEXT FIELD CURRENT
                  END IF
                  #151224-00025#5---dorishsu---151228---add--
                  IF NOT s_feature_direct_input(g_xmfl_d[l_ac].xmfl002,g_xmfl_d[l_ac].xmfl003,g_xmfl_d_t.xmfl003,g_xmfj_m.xmfjdocno,g_xmfj_m.xmfjsite) THEN
                     NEXT FIELD CURRENT
                  END IF
                  #151224-00025#5---dorishsu---151228---end--
                  
                  CALL s_feature_description(g_xmfl_d[l_ac].xmfl002,g_xmfl_d[l_ac].xmfl003)
                       RETURNING l_success,g_xmfl_d[l_ac].xmfl003_desc
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfl003
            #add-point:BEFORE FIELD xmfl003 name="input.b.page1.xmfl003"
            #160314-00009#13 add(s)
            IF s_feature_auto_chk(g_xmfl_d[l_ac].xmfl002) AND cl_null(g_xmfl_d[l_ac].xmfl003) THEN 
               CALL s_feature_single(g_xmfl_d[l_ac].xmfl002,g_xmfl_d[l_ac].xmfl003,g_site,g_xmfj_m.xmfjdocno)
                    RETURNING l_success,g_xmfl_d[l_ac].xmfl003
               DISPLAY BY NAME g_xmfl_d[l_ac].xmfl003
               
               #產品特徵說明
               CALL s_feature_description(g_xmfl_d[l_ac].xmfl002,g_xmfl_d[l_ac].xmfl003)
                    RETURNING l_success,g_xmfl_d[l_ac].xmfl003_desc
               DISPLAY BY NAME g_xmfl_d[l_ac].xmfl003_desc
            END IF
            #160314-00009#13 add(e)
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfl003
            #add-point:ON CHANGE xmfl003 name="input.g.page1.xmfl003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfl003_desc
            #add-point:BEFORE FIELD xmfl003_desc name="input.b.page1.xmfl003_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfl003_desc
            
            #add-point:AFTER FIELD xmfl003_desc name="input.a.page1.xmfl003_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfl003_desc
            #add-point:ON CHANGE xmfl003_desc name="input.g.page1.xmfl003_desc"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfl005
            #add-point:BEFORE FIELD xmfl005 name="input.b.page1.xmfl005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfl005
            
            #add-point:AFTER FIELD xmfl005 name="input.a.page1.xmfl005"
            IF l_cmd = 'a' THEN
               LET l_xmflseq = g_xmfl_d[l_ac].xmflseq
            ELSE
               LET l_xmflseq = g_xmfl_d_t.xmflseq
            END IF
            
            IF NOT cl_null(g_xmfl_d[l_ac].xmfl005) THEN
               IF cl_null(g_xmfl_d_o.xmfl005) OR g_xmfl_d[l_ac].xmfl005 != g_xmfl_d_o.xmfl005 THEN
                  #折扣方式有變更時，須檢查是否有分段折扣
                  LET l_cnt1 = 0
                  SELECT COUNT(*) INTO l_cnt1
                    FROM xmfm_t
                   WHERE xmfment = g_enterprise
                     AND xmfmdocno = g_xmfj_m.xmfjdocno
                     AND xmfmseq = l_xmflseq
                  IF NOT cl_null(l_cnt1) AND l_cnt1 > 0 THEN
                     IF l_first_insert THEN
                        DELETE FROM xmfm_t
                         WHERE xmfment = g_enterprise
                           AND xmfmdocno = g_xmfj_m.xmfjdocno
                           AND xmfmseq = l_xmflseq
                        LET g_xmfl_d[l_ac].xmfl009 = 'N'
                        DISPLAY BY NAME g_xmfl_d[l_ac].xmfl009
                     ELSE
                        IF cl_ask_confirm('axm-00660') THEN
                           DELETE FROM xmfm_t
                            WHERE xmfment = g_enterprise
                              AND xmfmdocno = g_xmfj_m.xmfjdocno
                              AND xmfmseq = l_xmflseq
                           LET g_xmfl_d[l_ac].xmfl009 = 'N'
                           DISPLAY BY NAME g_xmfl_d[l_ac].xmfl009
                        ELSE
                           LET g_xmfl_d[l_ac].xmfl005 = g_xmfl_d_o.xmfl005
                           DISPLAY BY NAME g_xmfl_d[l_ac].xmfl005
                           
                           NEXT FIELD CURRENT
                        END IF
                     END IF
                  END IF
               END IF
            END IF
            LET l_first_insert = FALSE
            LET g_xmfl_d_o.xmfl005 = g_xmfl_d[l_ac].xmfl005
            CALL axmt430_set_entry_b(l_cmd)
            CALL axmt430_set_no_required_b(l_cmd)
            CALL axmt430_set_required_b(l_cmd)
            CALL axmt430_set_no_entry_b(l_cmd)
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfl005
            #add-point:ON CHANGE xmfl005 name="input.g.page1.xmfl005"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfl007
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmfl_d[l_ac].xmfl007,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD xmfl007
            END IF 
 
 
 
            #add-point:AFTER FIELD xmfl007 name="input.a.page1.xmfl007"
            IF NOT cl_null(g_xmfl_d[l_ac].xmfl007) THEN 
               #單價取位
               CALL s_curr_round(g_site,g_xmfj_m.xmfj004,g_xmfl_d[l_ac].xmfl007,'1')
                    RETURNING g_xmfl_d[l_ac].xmfl007
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfl007
            #add-point:BEFORE FIELD xmfl007 name="input.b.page1.xmfl007"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfl007
            #add-point:ON CHANGE xmfl007 name="input.g.page1.xmfl007"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfl006
            
            #add-point:AFTER FIELD xmfl006 name="input.a.page1.xmfl006"
            LET g_xmfl_d[l_ac].xmfl006_desc = ''
            DISPLAY BY NAME g_xmfl_d[l_ac].xmfl006_desc
            
            IF NOT cl_null(g_xmfl_d[l_ac].xmfl006) THEN
               IF cl_null(g_xmfl_d_t.xmfl006) OR g_xmfl_d[l_ac].xmfl006 != g_xmfl_d_t.xmfl006 THEN
                  IF NOT axmt430_xmfl006_chk(g_xmfl_d[l_ac].xmfl001,g_xmfl_d[l_ac].xmfl002,g_xmfl_d[l_ac].xmfl006) THEN
                     LET g_xmfl_d[l_ac].xmfl006 = g_xmfl_d_t.xmfl006
                     CALL s_desc_get_unit_desc(g_xmfl_d[l_ac].xmfl006) RETURNING g_xmfl_d[l_ac].xmfl006_desc
                     DISPLAY BY NAME g_xmfl_d[l_ac].xmfl006,g_xmfl_d[l_ac].xmfl006_desc
                     
                     NEXT FIELD CURRENT
                  END IF
               END IF
               
               #單位說明
               CALL s_desc_get_unit_desc(g_xmfl_d[l_ac].xmfl006) RETURNING g_xmfl_d[l_ac].xmfl006_desc
               DISPLAY BY NAME g_xmfl_d[l_ac].xmfl006_desc
            END IF
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfl006
            #add-point:BEFORE FIELD xmfl006 name="input.b.page1.xmfl006"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfl006
            #add-point:ON CHANGE xmfl006 name="input.g.page1.xmfl006"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfl008
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmfl_d[l_ac].xmfl008,"0.000","1","100.000","1","azz-00087",1) THEN 
 
               NEXT FIELD xmfl008
            END IF 
 
 
 
            #add-point:AFTER FIELD xmfl008 name="input.a.page1.xmfl008"
            IF NOT cl_null(g_xmfl_d[l_ac].xmfl008) THEN 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfl008
            #add-point:BEFORE FIELD xmfl008 name="input.b.page1.xmfl008"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfl008
            #add-point:ON CHANGE xmfl008 name="input.g.page1.xmfl008"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfl009
            #add-point:BEFORE FIELD xmfl009 name="input.b.page1.xmfl009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfl009
            
            #add-point:AFTER FIELD xmfl009 name="input.a.page1.xmfl009"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfl009
            #add-point:ON CHANGE xmfl009 name="input.g.page1.xmfl009"
            IF l_cmd = 'a' THEN
               LET l_xmflseq = g_xmfl_d[l_ac].xmflseq
            ELSE
               LET l_xmflseq = g_xmfl_d_t.xmflseq
            END IF
            IF g_xmfl_d[l_ac].xmfl009 = 'Y' THEN
               CALL axmt430_01(g_xmfj_m.xmfjdocno,l_xmflseq,g_xmfl_d[l_ac].xmfl001,
                               g_xmfl_d[l_ac].xmfl002,g_xmfl_d[l_ac].xmfl005,g_xmfl_d[l_ac].xmfl006)
               LET l_cnt1 = 0
               SELECT COUNT(*) INTO l_cnt1
                 FROM xmfm_t
                WHERE xmfment = g_enterprise
                  AND xmfmdocno = g_xmfj_m.xmfjdocno
                  AND xmfmseq = l_xmflseq
               IF NOT cl_null(l_cnt1) AND l_cnt1 > 0 THEN
                  LET g_xmfl_d[l_ac].xmfl009 = 'Y'
               ELSE
                  LET g_xmfl_d[l_ac].xmfl009 = 'N'
               END IF
            ELSE
               LET l_cnt1 = 0
               SELECT COUNT(*) INTO l_cnt1
                 FROM xmfm_t
                WHERE xmfment = g_enterprise
                  AND xmfmdocno = g_xmfj_m.xmfjdocno
                  AND xmfmseq = l_xmflseq
               IF NOT cl_null(l_cnt1) AND l_cnt1 > 0 THEN
                  IF cl_ask_confirm('axm-00661') THEN
                     DELETE FROM xmfm_t
                      WHERE xmfment = g_enterprise
                        AND xmfmdocno = g_xmfj_m.xmfjdocno
                        AND xmfmseq = l_xmflseq
                  ELSE
                     LET g_xmfl_d[l_ac].xmfl009 = 'Y'
                     DISPLAY BY NAME g_xmfl_d[l_ac].xmfl009
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL axmt430_set_entry_b(l_cmd)
            CALL axmt430_set_no_required_b(l_cmd)
            CALL axmt430_set_required_b(l_cmd)
            CALL axmt430_set_no_entry_b(l_cmd)
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfl010
            #add-point:BEFORE FIELD xmfl010 name="input.b.page1.xmfl010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfl010
            
            #add-point:AFTER FIELD xmfl010 name="input.a.page1.xmfl010"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfl010
            #add-point:ON CHANGE xmfl010 name="input.g.page1.xmfl010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfl011
            #add-point:BEFORE FIELD xmfl011 name="input.b.page1.xmfl011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfl011
            
            #add-point:AFTER FIELD xmfl011 name="input.a.page1.xmfl011"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfl011
            #add-point:ON CHANGE xmfl011 name="input.g.page1.xmfl011"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfl012
            #add-point:BEFORE FIELD xmfl012 name="input.b.page1.xmfl012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfl012
            
            #add-point:AFTER FIELD xmfl012 name="input.a.page1.xmfl012"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfl012
            #add-point:ON CHANGE xmfl012 name="input.g.page1.xmfl012"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.xmflseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmflseq
            #add-point:ON ACTION controlp INFIELD xmflseq name="input.c.page1.xmflseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmflsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmflsite
            #add-point:ON ACTION controlp INFIELD xmflsite name="input.c.page1.xmflsite"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmfl001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfl001
            #add-point:ON ACTION controlp INFIELD xmfl001 name="input.c.page1.xmfl001"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmfl002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfl002
            #add-point:ON ACTION controlp INFIELD xmfl002 name="input.c.page1.xmfl002"
            #資料編號的開窗
            CALL axmt430_xmfl002_controlp(g_xmfl_d[l_ac].xmfl001,g_xmfl_d[l_ac].xmfl002)
                 RETURNING g_xmfl_d[l_ac].xmfl002
            DISPLAY BY NAME g_xmfl_d[l_ac].xmfl002
            
            #帶出資料編號的說明
            CALL axmt430_xmfl002_desc(g_xmfl_d[l_ac].xmfl001,g_xmfl_d[l_ac].xmfl002)
                 RETURNING g_xmfl_d[l_ac].xmfl002_desc,g_xmfl_d[l_ac].xmfl002_desc1
            DISPLAY BY NAME g_xmfl_d[l_ac].xmfl002_desc,g_xmfl_d[l_ac].xmfl002_desc1
            
            NEXT FIELD xmfl002
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmfl002_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfl002_desc
            #add-point:ON ACTION controlp INFIELD xmfl002_desc name="input.c.page1.xmfl002_desc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmfl002_desc1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfl002_desc1
            #add-point:ON ACTION controlp INFIELD xmfl002_desc1 name="input.c.page1.xmfl002_desc1"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmfl003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfl003
            #add-point:ON ACTION controlp INFIELD xmfl003 name="input.c.page1.xmfl003"
            #產品特徵
            CALL s_feature_single(g_xmfl_d[l_ac].xmfl002,g_xmfl_d[l_ac].xmfl003,g_site,g_xmfj_m.xmfjdocno)
                 RETURNING l_success,g_xmfl_d[l_ac].xmfl003
            DISPLAY BY NAME g_xmfl_d[l_ac].xmfl003
            
            #產品特徵說明
            CALL s_feature_description(g_xmfl_d[l_ac].xmfl002,g_xmfl_d[l_ac].xmfl003)
                 RETURNING l_success,g_xmfl_d[l_ac].xmfl003_desc
            DISPLAY BY NAME g_xmfl_d[l_ac].xmfl003_desc
            
            NEXT FIELD xmfl003
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmfl003_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfl003_desc
            #add-point:ON ACTION controlp INFIELD xmfl003_desc name="input.c.page1.xmfl003_desc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmfl005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfl005
            #add-point:ON ACTION controlp INFIELD xmfl005 name="input.c.page1.xmfl005"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmfl007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfl007
            #add-point:ON ACTION controlp INFIELD xmfl007 name="input.c.page1.xmfl007"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmfl006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfl006
            #add-point:ON ACTION controlp INFIELD xmfl006 name="input.c.page1.xmfl006"
            #計價單位開窗
            CALL axmt430_xmfl006_controlp(g_xmfl_d[l_ac].xmfl001,g_xmfl_d[l_ac].xmfl002,g_xmfl_d[l_ac].xmfl006)
                 RETURNING g_xmfl_d[l_ac].xmfl006
            DISPLAY BY NAME g_xmfl_d[l_ac].xmfl006

            #計價單位說明
            CALL s_desc_get_unit_desc(g_xmfl_d[l_ac].xmfl006) RETURNING g_xmfl_d[l_ac].xmfl006_desc
            DISPLAY BY NAME g_xmfl_d[l_ac].xmfl006_desc
            
            NEXT FIELD xmfl006
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmfl008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfl008
            #add-point:ON ACTION controlp INFIELD xmfl008 name="input.c.page1.xmfl008"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmfl009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfl009
            #add-point:ON ACTION controlp INFIELD xmfl009 name="input.c.page1.xmfl009"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmfl010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfl010
            #add-point:ON ACTION controlp INFIELD xmfl010 name="input.c.page1.xmfl010"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmfl011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfl011
            #add-point:ON ACTION controlp INFIELD xmfl011 name="input.c.page1.xmfl011"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmfl012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfl012
            #add-point:ON ACTION controlp INFIELD xmfl012 name="input.c.page1.xmfl012"
            
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_xmfl_d[l_ac].* = g_xmfl_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE axmt430_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_xmfl_d[l_ac].xmflseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_xmfl_d[l_ac].* = g_xmfl_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL axmt430_xmfl_t_mask_restore('restore_mask_o')
      
               UPDATE xmfl_t SET (xmfldocno,xmflseq,xmflsite,xmfl001,xmfl002,xmfl003,xmfl005,xmfl007, 
                   xmfl006,xmfl008,xmfl009,xmfl010,xmfl011,xmfl012) = (g_xmfj_m.xmfjdocno,g_xmfl_d[l_ac].xmflseq, 
                   g_xmfl_d[l_ac].xmflsite,g_xmfl_d[l_ac].xmfl001,g_xmfl_d[l_ac].xmfl002,g_xmfl_d[l_ac].xmfl003, 
                   g_xmfl_d[l_ac].xmfl005,g_xmfl_d[l_ac].xmfl007,g_xmfl_d[l_ac].xmfl006,g_xmfl_d[l_ac].xmfl008, 
                   g_xmfl_d[l_ac].xmfl009,g_xmfl_d[l_ac].xmfl010,g_xmfl_d[l_ac].xmfl011,g_xmfl_d[l_ac].xmfl012) 
 
                WHERE xmflent = g_enterprise AND xmfldocno = g_xmfj_m.xmfjdocno 
 
                  AND xmflseq = g_xmfl_d_t.xmflseq #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_xmfl_d[l_ac].* = g_xmfl_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmfl_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     LET g_xmfl_d[l_ac].* = g_xmfl_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmfl_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmfj_m.xmfjdocno
               LET gs_keys_bak[1] = g_xmfjdocno_t
               LET gs_keys[2] = g_xmfl_d[g_detail_idx].xmflseq
               LET gs_keys_bak[2] = g_xmfl_d_t.xmflseq
               CALL axmt430_update_b('xmfl_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL axmt430_xmfl_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_xmfl_d[g_detail_idx].xmflseq = g_xmfl_d_t.xmflseq 
 
                  ) THEN
                  LET gs_keys[01] = g_xmfj_m.xmfjdocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_xmfl_d_t.xmflseq
 
                  CALL axmt430_key_update_b(gs_keys,'xmfl_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_xmfj_m),util.JSON.stringify(g_xmfl_d_t)
               LET g_log2 = util.JSON.stringify(g_xmfj_m),util.JSON.stringify(g_xmfl_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            
            #end add-point
            CALL axmt430_unlock_b("xmfl_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
            
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_xmfl_d[li_reproduce_target].* = g_xmfl_d[li_reproduce].*
 
               LET g_xmfl_d[li_reproduce_target].xmflseq = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_xmfl_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_xmfl_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_xmfl3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_3)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body3.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xmfl3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axmt430_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_xmfl3_d.getLength()
            #add-point:資料輸入前 name="input.body3.before_input"
            IF g_xmfj_m.xmfj019 = '1' THEN
               NEXT FIELD xmflseq
            END IF
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmfl3_d[l_ac].* TO NULL 
            INITIALIZE g_xmfl3_d_t.* TO NULL 
            INITIALIZE g_xmfl3_d_o.* TO NULL 
            #公用欄位給值(單身3)
            
            #自定義預設值(單身3)
            
            #add-point:modify段before備份 name="input.body3.insert.before_bak"
            LET g_xmfl3_d[l_ac].xmfksite = g_xmfj_m.xmfjsite
            #end add-point
            LET g_xmfl3_d_t.* = g_xmfl3_d[l_ac].*     #新輸入資料
            LET g_xmfl3_d_o.* = g_xmfl3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axmt430_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body3.insert.after_set_entry_b"
 
            #end add-point
            CALL axmt430_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmfl3_d[li_reproduce_target].* = g_xmfl3_d[li_reproduce].*
 
               LET g_xmfl3_d[li_reproduce_target].xmfkseq = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body3.before_insert"
            #最大值+1
            SELECT MAX(xmfkseq)+1 INTO g_xmfl3_d[l_ac].xmfkseq
              FROM xmfk_t
             WHERE xmfkent = g_enterprise
               AND xmfkdocno = g_xmfj_m.xmfjdocno
            IF cl_null(g_xmfl3_d[l_ac].xmfkseq) THEN
               LET g_xmfl3_d[l_ac].xmfkseq = 1
            END IF
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body3.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[3] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 3
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN axmt430_cl USING g_enterprise,g_xmfj_m.xmfjdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axmt430_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE axmt430_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_xmfl3_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xmfl3_d[l_ac].xmfkseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_xmfl3_d_t.* = g_xmfl3_d[l_ac].*  #BACKUP
               LET g_xmfl3_d_o.* = g_xmfl3_d[l_ac].*  #BACKUP
               CALL axmt430_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body3.after_set_entry_b"
               
               #end add-point  
               CALL axmt430_set_no_entry_b(l_cmd)
               IF NOT axmt430_lock_b("xmfk_t","'3'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axmt430_bcl3 INTO g_xmfl3_d[l_ac].xmfkseq,g_xmfl3_d[l_ac].xmfk001,g_xmfl3_d[l_ac].xmfk002, 
                      g_xmfl3_d[l_ac].xmfksite
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_xmfl3_d_mask_o[l_ac].* =  g_xmfl3_d[l_ac].*
                  CALL axmt430_xmfk_t_mask()
                  LET g_xmfl3_d_mask_n[l_ac].* =  g_xmfl3_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL axmt430_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body3.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body3.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body3.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身3刪除前 name="input.body3.b_delete"
               
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_xmfj_m.xmfjdocno
               LET gs_keys[gs_keys.getLength()+1] = g_xmfl3_d_t.xmfkseq
            
               #刪除同層單身
               IF NOT axmt430_delete_b('xmfk_t',gs_keys,"'3'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt430_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT axmt430_key_delete_b(gs_keys,'xmfk_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt430_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身3刪除中 name="input.body3.m_delete"
               
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE axmt430_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身3刪除後 name="input.body3.a_delete"
               
               #end add-point
               LET l_count = g_xmfl_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body3.after_delete"
               
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_xmfl3_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身3新增前 name="input.body3.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM xmfk_t 
             WHERE xmfkent = g_enterprise AND xmfkdocno = g_xmfj_m.xmfjdocno
               AND xmfkseq = g_xmfl3_d[l_ac].xmfkseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身3新增前 name="input.body3.b_insert"
               IF cl_null(g_xmfl3_d[l_ac].xmfk001) AND cl_null(g_xmfl3_d[l_ac].xmfk002) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'axm-00658'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = FALSE
                  
                  CALL cl_err()
                  CANCEL INSERT
               END IF
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmfj_m.xmfjdocno
               LET gs_keys[2] = g_xmfl3_d[g_detail_idx].xmfkseq
               CALL axmt430_insert_b('xmfk_t',gs_keys,"'3'")
                           
               #add-point:單身新增後3 name="input.body3.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_xmfl_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmfk_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axmt430_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body3.after_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_xmfl3_d[l_ac].* = g_xmfl3_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE axmt430_bcl3
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_xmfl3_d[l_ac].* = g_xmfl3_d_t.*
            ELSE
               #add-point:單身page3修改前 name="input.body3.b_update"
               IF cl_null(g_xmfl3_d[l_ac].xmfk001) AND cl_null(g_xmfl3_d[l_ac].xmfk002) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'axm-00658'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = FALSE
                  
                  CALL cl_err()
                  NEXT FIELD xmfk001
               END IF
               #end add-point
               
               #寫入修改者/修改日期資訊(單身3)
               
               
               #將遮罩欄位還原
               CALL axmt430_xmfk_t_mask_restore('restore_mask_o')
                              
               UPDATE xmfk_t SET (xmfkdocno,xmfkseq,xmfk001,xmfk002,xmfksite) = (g_xmfj_m.xmfjdocno, 
                   g_xmfl3_d[l_ac].xmfkseq,g_xmfl3_d[l_ac].xmfk001,g_xmfl3_d[l_ac].xmfk002,g_xmfl3_d[l_ac].xmfksite)  
                   #自訂欄位頁簽
                WHERE xmfkent = g_enterprise AND xmfkdocno = g_xmfj_m.xmfjdocno
                  AND xmfkseq = g_xmfl3_d_t.xmfkseq #項次 
                  
               #add-point:單身page3修改中 name="input.body3.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_xmfl3_d[l_ac].* = g_xmfl3_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmfk_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     LET g_xmfl3_d[l_ac].* = g_xmfl3_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmfk_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmfj_m.xmfjdocno
               LET gs_keys_bak[1] = g_xmfjdocno_t
               LET gs_keys[2] = g_xmfl3_d[g_detail_idx].xmfkseq
               LET gs_keys_bak[2] = g_xmfl3_d_t.xmfkseq
               CALL axmt430_update_b('xmfk_t',gs_keys,gs_keys_bak,"'3'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL axmt430_xmfk_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_xmfl3_d[g_detail_idx].xmfkseq = g_xmfl3_d_t.xmfkseq 
                  ) THEN
                  LET gs_keys[01] = g_xmfj_m.xmfjdocno
                  LET gs_keys[gs_keys.getLength()+1] = g_xmfl3_d_t.xmfkseq
                  CALL axmt430_key_update_b(gs_keys,'xmfk_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_xmfj_m),util.JSON.stringify(g_xmfl3_d_t)
               LET g_log2 = util.JSON.stringify(g_xmfj_m),util.JSON.stringify(g_xmfl3_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page3修改後 name="input.body3.a_update"
               
               #end add-point
            END IF
         
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfkseq
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmfl3_d[l_ac].xmfkseq,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD xmfkseq
            END IF 
 
 
 
            #add-point:AFTER FIELD xmfkseq name="input.a.page3.xmfkseq"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_xmfj_m.xmfjdocno IS NOT NULL AND g_xmfl3_d[g_detail_idx].xmfkseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmfj_m.xmfjdocno != g_xmfjdocno_t OR g_xmfl3_d[g_detail_idx].xmfkseq != g_xmfl3_d_t.xmfkseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmfk_t WHERE "||"xmfkent = '" ||g_enterprise|| "' AND "||"xmfkdocno = '"||g_xmfj_m.xmfjdocno ||"' AND "|| "xmfkseq = '"||g_xmfl3_d[g_detail_idx].xmfkseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            IF NOT cl_null(g_xmfl3_d[l_ac].xmfkseq) THEN 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfkseq
            #add-point:BEFORE FIELD xmfkseq name="input.b.page3.xmfkseq"
            IF cl_null(g_xmfl3_d[l_ac].xmfkseq) THEN
               #最大值+1
               SELECT MAX(xmfkseq)+1 INTO g_xmfl3_d[l_ac].xmfkseq
                 FROM xmfk_t
                WHERE xmfkent = g_enterprise
                  AND xmfkdocno = g_xmfj_m.xmfjdocno
               IF cl_null(g_xmfl3_d[l_ac].xmfkseq) THEN
                  LET g_xmfl3_d[l_ac].xmfkseq = 1
               END IF
            END IF
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfkseq
            #add-point:ON CHANGE xmfkseq name="input.g.page3.xmfkseq"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfk001
            
            #add-point:AFTER FIELD xmfk001 name="input.a.page3.xmfk001"
            LET g_xmfl3_d[l_ac].xmfk001_desc = ''
            DISPLAY BY NAME g_xmfl3_d[l_ac].xmfk001_desc
            
            IF NOT cl_null(g_xmfl3_d[l_ac].xmfk001) THEN 
               IF cl_null(g_xmfl3_d_t.xmfk001) OR g_xmfl3_d[l_ac].xmfk001 != g_xmfl3_d_t.xmfk001 THEN
                  #訂單客戶的檢查
                  IF NOT axmt430_customer_chk(g_xmfl3_d[l_ac].xmfk001) THEN
                     LET g_xmfl3_d[l_ac].xmfk001 = g_xmfl3_d_t.xmfk001
                     CALL s_desc_get_trading_partner_abbr_desc(g_xmfl3_d[l_ac].xmfk001) RETURNING g_xmfl3_d[l_ac].xmfk001_desc
                     DISPLAY BY NAME g_xmfl3_d[l_ac].xmfk001,g_xmfl3_d[l_ac].xmfk001_desc
                     
                     NEXT FIELD CURRENT
                  END IF
               END IF
               
               CALL s_desc_get_trading_partner_abbr_desc(g_xmfl3_d[l_ac].xmfk001) RETURNING g_xmfl3_d[l_ac].xmfk001_desc
               DISPLAY BY NAME g_xmfl3_d[l_ac].xmfk001_desc
            END IF
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfk001
            #add-point:BEFORE FIELD xmfk001 name="input.b.page3.xmfk001"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfk001
            #add-point:ON CHANGE xmfk001 name="input.g.page3.xmfk001"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfk002
            
            #add-point:AFTER FIELD xmfk002 name="input.a.page3.xmfk002"
            LET g_xmfl3_d[l_ac].xmfk002_desc = ''
            DISPLAY BY NAME g_xmfl3_d[l_ac].xmfk002_desc
            
            IF NOT cl_null(g_xmfl3_d[l_ac].xmfk002) THEN 
               IF cl_null(g_xmfl3_d_t.xmfk002) OR g_xmfl3_d[l_ac].xmfk002 != g_xmfl3_d_t.xmfk002 THEN
                  #最終客戶的檢查
                  IF NOT axmt430_customer_chk(g_xmfl3_d[l_ac].xmfk002) THEN
                     LET g_xmfl3_d[l_ac].xmfk002 = g_xmfl3_d_t.xmfk002
                     CALL s_desc_get_trading_partner_abbr_desc(g_xmfl3_d[l_ac].xmfk002) RETURNING g_xmfl3_d[l_ac].xmfk002_desc
                     DISPLAY BY NAME g_xmfl3_d[l_ac].xmfk002,g_xmfl3_d[l_ac].xmfk002_desc
                     
                     NEXT FIELD CURRENT
                  END IF
               END IF
               
               CALL s_desc_get_trading_partner_abbr_desc(g_xmfl3_d[l_ac].xmfk002) RETURNING g_xmfl3_d[l_ac].xmfk002_desc
               DISPLAY BY NAME g_xmfl3_d[l_ac].xmfk002_desc
            END IF
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfk002
            #add-point:BEFORE FIELD xmfk002 name="input.b.page3.xmfk002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfk002
            #add-point:ON CHANGE xmfk002 name="input.g.page3.xmfk002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfksite
            #add-point:BEFORE FIELD xmfksite name="input.b.page3.xmfksite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfksite
            
            #add-point:AFTER FIELD xmfksite name="input.a.page3.xmfksite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfksite
            #add-point:ON CHANGE xmfksite name="input.g.page3.xmfksite"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page3.xmfkseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfkseq
            #add-point:ON ACTION controlp INFIELD xmfkseq name="input.c.page3.xmfkseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.xmfk001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfk001
            #add-point:ON ACTION controlp INFIELD xmfk001 name="input.c.page3.xmfk001"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfl3_d[l_ac].xmfk001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_site
            LET g_qryparam.where = " 1=1"
            LET l_extra_where = ''
            CALL s_control_get_customer_sql('2',g_site,g_user,g_dept,g_xmfj_m.xmfjdocno)
                 RETURNING l_success,l_extra_where
            IF NOT cl_null(l_extra_where) THEN
               LET g_qryparam.where = g_qryparam.where," AND ",l_extra_where
            END IF

            CALL q_pmaa001_6()                                #呼叫開窗

            LET g_xmfl3_d[l_ac].xmfk001 = g_qryparam.return1              

            DISPLAY g_xmfl3_d[l_ac].xmfk001 TO xmfk001              #
            
            #訂單客戶說明
            CALL s_desc_get_trading_partner_abbr_desc(g_xmfl3_d[l_ac].xmfk001) RETURNING g_xmfl3_d[l_ac].xmfk001_desc
            DISPLAY BY NAME g_xmfl3_d[l_ac].xmfk001_desc

            NEXT FIELD xmfk001                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page3.xmfk002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfk002
            #add-point:ON ACTION controlp INFIELD xmfk002 name="input.c.page3.xmfk002"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfl3_d[l_ac].xmfk002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_site
            LET g_qryparam.where = " 1=1"
            LET l_extra_where = ''
            CALL s_control_get_customer_sql('2',g_site,g_user,g_dept,g_xmfj_m.xmfjdocno)
                 RETURNING l_success,l_extra_where
            IF NOT cl_null(l_extra_where) THEN
               LET g_qryparam.where = g_qryparam.where," AND ",l_extra_where
            END IF

            CALL q_pmaa001_6()                                #呼叫開窗

            LET g_xmfl3_d[l_ac].xmfk002 = g_qryparam.return1              

            DISPLAY g_xmfl3_d[l_ac].xmfk002 TO xmfk002              #
            
            #最終客戶說明
            CALL s_desc_get_trading_partner_abbr_desc(g_xmfl3_d[l_ac].xmfk002) RETURNING g_xmfl3_d[l_ac].xmfk002_desc
            DISPLAY BY NAME g_xmfl3_d[l_ac].xmfk002_desc

            NEXT FIELD xmfk002                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page3.xmfksite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfksite
            #add-point:ON ACTION controlp INFIELD xmfksite name="input.c.page3.xmfksite"
            
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page3 after_row name="input.body3.after_row"
            
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_xmfl3_d[l_ac].* = g_xmfl3_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE axmt430_bcl3
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL axmt430_unlock_b("xmfk_t","'3'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page3 after_row2 name="input.body3.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body3.after_input"
            
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_xmfl3_d[li_reproduce_target].* = g_xmfl3_d[li_reproduce].*
 
               LET g_xmfl3_d[li_reproduce_target].xmfkseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_xmfl3_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_xmfl3_d.getLength()+1
            END IF
            
      END INPUT
 
      
 
      DISPLAY ARRAY g_xmfl2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL axmt430_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail2")
            LET g_detail_idx = l_ac
            
            #add-point:page2, before row動作 name="input.body2.before_row"
            
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail2")
            CALL axmt430_idx_chk()
            LET g_current_page = 2
      
         #add-point:page2自定義行為 name="input.body2.action"
         
         #end add-point
      
      END DISPLAY
 
 
 
{</section>}
 
{<section id="axmt430.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1',"))      
         CALL DIALOG.setCurrentRow("s_detail2",g_idx_group.getValue("'2',"))
         CALL DIALOG.setCurrentRow("s_detail3",g_idx_group.getValue("'3',"))
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            
            #end add-point  
            NEXT FIELD xmfjdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xmflseq
               WHEN "s_detail2"
                  NEXT FIELD xmfmseq
               WHEN "s_detail3"
                  NEXT FIELD xmfkseq
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   CALL axmt430_show()
   #end add-point    
 
END FUNCTION
 
{</section>}
 
{<section id="axmt430.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION axmt430_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   DEFINE l_success      LIKE type_t.num5
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL axmt430_b_fill() #單身填充
      CALL axmt430_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL axmt430_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
   #稅別說明
   CALL s_desc_get_tax_desc1(g_site,g_xmfj_m.xmfj005) RETURNING g_xmfj_m.xmfj005_desc
   #end add-point
   
   #遮罩相關處理
   LET g_xmfj_m_mask_o.* =  g_xmfj_m.*
   CALL axmt430_xmfj_t_mask()
   LET g_xmfj_m_mask_n.* =  g_xmfj_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xmfj_m.xmfjdocno,g_xmfj_m.xmfjdocno_desc,g_xmfj_m.xmfjdocdt,g_xmfj_m.xmfj003,g_xmfj_m.xmfj003_desc, 
       g_xmfj_m.xmfj001,g_xmfj_m.xmfj001_desc,g_xmfj_m.xmfj002,g_xmfj_m.xmfj002_desc,g_xmfj_m.xmfjstus, 
       g_xmfj_m.xmfj004,g_xmfj_m.xmfj004_desc,g_xmfj_m.xmfj005,g_xmfj_m.xmfj005_desc,g_xmfj_m.xmfj006, 
       g_xmfj_m.xmfj007,g_xmfj_m.xmfj008,g_xmfj_m.xmfj008_desc,g_xmfj_m.xmfj009,g_xmfj_m.xmfj009_desc, 
       g_xmfj_m.xmfj010,g_xmfj_m.xmfj010_desc,g_xmfj_m.xmfj013,g_xmfj_m.xmfj014,g_xmfj_m.xmfj015,g_xmfj_m.xmfj016, 
       g_xmfj_m.xmfj017,g_xmfj_m.xmfj018,g_xmfj_m.xmfj019,g_xmfj_m.xmfj011,g_xmfj_m.xmfj012,g_xmfj_m.xmfjsite, 
       g_xmfj_m.xmfj020,g_xmfj_m.xmfj020_desc,g_xmfj_m.xmfj030,g_xmfj_m.xmfjownid,g_xmfj_m.xmfjownid_desc, 
       g_xmfj_m.xmfjowndp,g_xmfj_m.xmfjowndp_desc,g_xmfj_m.xmfjcrtid,g_xmfj_m.xmfjcrtid_desc,g_xmfj_m.xmfjcrtdp, 
       g_xmfj_m.xmfjcrtdp_desc,g_xmfj_m.xmfjcrtdt,g_xmfj_m.xmfjmodid,g_xmfj_m.xmfjmodid_desc,g_xmfj_m.xmfjmoddt, 
       g_xmfj_m.xmfjcnfid,g_xmfj_m.xmfjcnfid_desc,g_xmfj_m.xmfjcnfdt,g_xmfj_m.xmfjpstid,g_xmfj_m.xmfjpstid_desc, 
       g_xmfj_m.xmfjpstdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_xmfj_m.xmfjstus 
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_xmfl_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
      #資料編號說明
      CALL axmt430_xmfl002_desc(g_xmfl_d[l_ac].xmfl001,g_xmfl_d[l_ac].xmfl002)
           RETURNING g_xmfl_d[l_ac].xmfl002_desc,g_xmfl_d[l_ac].xmfl002_desc1
      
      #產品特徵說明
      CALL s_feature_description(g_xmfl_d[l_ac].xmfl002,g_xmfl_d[l_ac].xmfl003)
           RETURNING l_success,g_xmfl_d[l_ac].xmfl003_desc
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_xmfl2_d.getLength()
      #add-point:show段單身reference name="show.body2.reference"
      
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_xmfl3_d.getLength()
      #add-point:show段單身reference name="show.body3.reference"
      
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other name="show.other"
   
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL axmt430_detail_show()
 
   #add-point:show段之後 name="show.after"
   CALL axmt430_set_act_visible_b()
   CALL axmt430_set_act_no_visible_b()
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="axmt430.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION axmt430_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
   
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="axmt430.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION axmt430_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   
   #end add-point   
   DEFINE l_newno     LIKE xmfj_t.xmfjdocno 
   DEFINE l_oldno     LIKE xmfj_t.xmfjdocno 
 
   DEFINE l_master    RECORD LIKE xmfj_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE xmfl_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE xmfm_t.* #此變數樣板目前無使用
 
   DEFINE l_detail3    RECORD LIKE xmfk_t.* #此變數樣板目前無使用
 
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_xmfj_m.xmfjdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_xmfjdocno_t = g_xmfj_m.xmfjdocno
 
    
   LET g_xmfj_m.xmfjdocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_xmfj_m.xmfjownid = g_user
      LET g_xmfj_m.xmfjowndp = g_dept
      LET g_xmfj_m.xmfjcrtid = g_user
      LET g_xmfj_m.xmfjcrtdp = g_dept 
      LET g_xmfj_m.xmfjcrtdt = cl_get_current()
      LET g_xmfj_m.xmfjmodid = g_user
      LET g_xmfj_m.xmfjmoddt = cl_get_current()
      LET g_xmfj_m.xmfjstus = 'N'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_xmfj_m.xmfjstus 
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
      LET g_xmfj_m.xmfjdocno_desc = ''
   DISPLAY BY NAME g_xmfj_m.xmfjdocno_desc
 
   
   CALL axmt430_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_xmfj_m.* TO NULL
      INITIALIZE g_xmfl_d TO NULL
      INITIALIZE g_xmfl2_d TO NULL
      INITIALIZE g_xmfl3_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      
      #end add-point
      CALL axmt430_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt430_set_act_visible()   
   CALL axmt430_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_xmfjdocno_t = g_xmfj_m.xmfjdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " xmfjent = " ||g_enterprise|| " AND",
                      " xmfjdocno = '", g_xmfj_m.xmfjdocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axmt430_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   CALL axmt430_idx_chk()
   
   LET g_data_owner = g_xmfj_m.xmfjownid      
   LET g_data_dept  = g_xmfj_m.xmfjowndp
   
   #功能已完成,通報訊息中心
   CALL axmt430_msgcentre_notify('reproduce')
 
END FUNCTION
 
{</section>}
 
{<section id="axmt430.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION axmt430_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE xmfl_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE xmfm_t.* #此變數樣板目前無使用
 
   DEFINE l_detail3    RECORD LIKE xmfk_t.* #此變數樣板目前無使用
 
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE axmt430_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xmfl_t
    WHERE xmflent = g_enterprise AND xmfldocno = g_xmfjdocno_t
 
    INTO TEMP axmt430_detail
 
   #將key修正為調整後   
   UPDATE axmt430_detail 
      #更新key欄位
      SET xmfldocno = g_xmfj_m.xmfjdocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO xmfl_t SELECT * FROM axmt430_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmt430_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table2.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xmfm_t 
    WHERE xmfment = g_enterprise AND xmfmdocno = g_xmfjdocno_t
 
    INTO TEMP axmt430_detail
 
   #將key修正為調整後   
   UPDATE axmt430_detail SET xmfmdocno = g_xmfj_m.xmfjdocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table2.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO xmfm_t SELECT * FROM axmt430_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table2.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmt430_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table2.a_insert"
   
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table3.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xmfk_t 
    WHERE xmfkent = g_enterprise AND xmfkdocno = g_xmfjdocno_t
 
    INTO TEMP axmt430_detail
 
   #將key修正為調整後   
   UPDATE axmt430_detail SET xmfkdocno = g_xmfj_m.xmfjdocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table3.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO xmfk_t SELECT * FROM axmt430_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table3.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmt430_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table3.a_insert"
   
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_xmfjdocno_t = g_xmfj_m.xmfjdocno
 
   
END FUNCTION
 
{</section>}
 
{<section id="axmt430.delete" >}
#+ 資料刪除
PRIVATE FUNCTION axmt430_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_xmfj_m.xmfjdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN axmt430_cl USING g_enterprise,g_xmfj_m.xmfjdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axmt430_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE axmt430_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axmt430_master_referesh USING g_xmfj_m.xmfjdocno INTO g_xmfj_m.xmfjdocno,g_xmfj_m.xmfjdocdt, 
       g_xmfj_m.xmfj003,g_xmfj_m.xmfj001,g_xmfj_m.xmfj002,g_xmfj_m.xmfjstus,g_xmfj_m.xmfj004,g_xmfj_m.xmfj005, 
       g_xmfj_m.xmfj006,g_xmfj_m.xmfj007,g_xmfj_m.xmfj008,g_xmfj_m.xmfj009,g_xmfj_m.xmfj010,g_xmfj_m.xmfj013, 
       g_xmfj_m.xmfj014,g_xmfj_m.xmfj015,g_xmfj_m.xmfj016,g_xmfj_m.xmfj017,g_xmfj_m.xmfj018,g_xmfj_m.xmfj019, 
       g_xmfj_m.xmfj011,g_xmfj_m.xmfj012,g_xmfj_m.xmfjsite,g_xmfj_m.xmfj020,g_xmfj_m.xmfj030,g_xmfj_m.xmfjownid, 
       g_xmfj_m.xmfjowndp,g_xmfj_m.xmfjcrtid,g_xmfj_m.xmfjcrtdp,g_xmfj_m.xmfjcrtdt,g_xmfj_m.xmfjmodid, 
       g_xmfj_m.xmfjmoddt,g_xmfj_m.xmfjcnfid,g_xmfj_m.xmfjcnfdt,g_xmfj_m.xmfjpstid,g_xmfj_m.xmfjpstdt, 
       g_xmfj_m.xmfj003_desc,g_xmfj_m.xmfj001_desc,g_xmfj_m.xmfj002_desc,g_xmfj_m.xmfj004_desc,g_xmfj_m.xmfj008_desc, 
       g_xmfj_m.xmfj009_desc,g_xmfj_m.xmfj010_desc,g_xmfj_m.xmfj020_desc,g_xmfj_m.xmfjownid_desc,g_xmfj_m.xmfjowndp_desc, 
       g_xmfj_m.xmfjcrtid_desc,g_xmfj_m.xmfjcrtdp_desc,g_xmfj_m.xmfjmodid_desc,g_xmfj_m.xmfjcnfid_desc, 
       g_xmfj_m.xmfjpstid_desc
   
   
   #檢查是否允許此動作
   IF NOT axmt430_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_xmfj_m_mask_o.* =  g_xmfj_m.*
   CALL axmt430_xmfj_t_mask()
   LET g_xmfj_m_mask_n.* =  g_xmfj_m.*
   
   CALL axmt430_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
      
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL axmt430_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_xmfjdocno_t = g_xmfj_m.xmfjdocno
 
 
      DELETE FROM xmfj_t
       WHERE xmfjent = g_enterprise AND xmfjdocno = g_xmfj_m.xmfjdocno
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
      
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_xmfj_m.xmfjdocno,":",SQLERRMESSAGE  
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      
      #end add-point
      
      DELETE FROM xmfl_t
       WHERE xmflent = g_enterprise AND xmfldocno = g_xmfj_m.xmfjdocno
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
      
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmfl_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      
      #end add-point
      
            
                                                               
      #add-point:單身刪除前 name="delete.body.b_delete2"
      
      #end add-point
      DELETE FROM xmfm_t
       WHERE xmfment = g_enterprise AND
             xmfmdocno = g_xmfj_m.xmfjdocno
      #add-point:單身刪除中 name="delete.body.m_delete2"
      
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmfm_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete2"
      
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete3"
      
      #end add-point
      DELETE FROM xmfk_t
       WHERE xmfkent = g_enterprise AND
             xmfkdocno = g_xmfj_m.xmfjdocno
      #add-point:單身刪除中 name="delete.body.m_delete3"
      
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmfk_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete3"
      IF NOT s_aooi200_del_docno(g_xmfj_m.xmfjdocno,g_xmfj_m.xmfjdocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      #end add-point
 
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE axmt430_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_xmfl_d.clear() 
      CALL g_xmfl2_d.clear()       
      CALL g_xmfl3_d.clear()       
 
     
      CALL axmt430_ui_browser_refresh()  
      #CALL axmt430_ui_headershow()  
      #CALL axmt430_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL axmt430_browser_fill("")
         CALL axmt430_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE axmt430_cl
 
   #功能已完成,通報訊息中心
   CALL axmt430_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="axmt430.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION axmt430_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #清空第一階單身
   CALL g_xmfl_d.clear()
   CALL g_xmfl2_d.clear()
   CALL g_xmfl3_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   
   #end add-point
   
   #判斷是否填充
   IF axmt430_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT xmflseq,xmflsite,xmfl001,xmfl002,xmfl003,xmfl005,xmfl007,xmfl006, 
             xmfl008,xmfl009,xmfl010,xmfl011,xmfl012 ,t1.oocal003 FROM xmfl_t",   
                     " INNER JOIN xmfj_t ON xmfjent = " ||g_enterprise|| " AND xmfjdocno = xmfldocno ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
 
                                    " LEFT JOIN oocal_t t1 ON t1.oocalent="||g_enterprise||" AND t1.oocal001=xmfl006 AND t1.oocal002='"||g_dlang||"' ",
 
                     " WHERE xmflent=? AND xmfldocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xmfl_t.xmflseq"
         
         #add-point:單身填充控制 name="b_fill.sql"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axmt430_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR axmt430_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_xmfj_m.xmfjdocno
                                               
      FOREACH b_fill_cs INTO g_xmfl_d[l_ac].xmflseq,g_xmfl_d[l_ac].xmflsite,g_xmfl_d[l_ac].xmfl001,g_xmfl_d[l_ac].xmfl002, 
          g_xmfl_d[l_ac].xmfl003,g_xmfl_d[l_ac].xmfl005,g_xmfl_d[l_ac].xmfl007,g_xmfl_d[l_ac].xmfl006, 
          g_xmfl_d[l_ac].xmfl008,g_xmfl_d[l_ac].xmfl009,g_xmfl_d[l_ac].xmfl010,g_xmfl_d[l_ac].xmfl011, 
          g_xmfl_d[l_ac].xmfl012,g_xmfl_d[l_ac].xmfl006_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
   #判斷是否填充
   IF axmt430_fill_chk(2) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body2.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT xmfmseq,xmfm001,xmfm002,xmfm003,xmfm004  FROM xmfm_t",   
                     " INNER JOIN  xmfj_t ON xmfjent = " ||g_enterprise|| " AND xmfjdocno = xmfmdocno ",
 
                     "",
                     
                     
                     " WHERE xmfment=? AND xmfmdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body2.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xmfm_t.xmfmseq,xmfm_t.xmfm001,xmfm_t.xmfm002"
         
         #add-point:單身填充控制 name="b_fill.sql2"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axmt430_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR axmt430_pb2
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_xmfj_m.xmfjdocno
                                               
      FOREACH b_fill_cs2 INTO g_xmfl2_d[l_ac].xmfmseq,g_xmfl2_d[l_ac].xmfm001,g_xmfl2_d[l_ac].xmfm002, 
          g_xmfl2_d[l_ac].xmfm003,g_xmfl2_d[l_ac].xmfm004
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill2.fill"
         
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF axmt430_fill_chk(3) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body3.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT xmfkseq,xmfk001,xmfk002,xmfksite ,t2.pmaal004 ,t3.pmaal004 FROM xmfk_t", 
                
                     " INNER JOIN  xmfj_t ON xmfjent = " ||g_enterprise|| " AND xmfjdocno = xmfkdocno ",
 
                     "",
                     
                                    " LEFT JOIN pmaal_t t2 ON t2.pmaalent="||g_enterprise||" AND t2.pmaal001=xmfk001 AND t2.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t3 ON t3.pmaalent="||g_enterprise||" AND t3.pmaal001=xmfk002 AND t3.pmaal002='"||g_dlang||"' ",
 
                     " WHERE xmfkent=? AND xmfkdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body3.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table3) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xmfk_t.xmfkseq"
         
         #add-point:單身填充控制 name="b_fill.sql3"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axmt430_pb3 FROM g_sql
         DECLARE b_fill_cs3 CURSOR FOR axmt430_pb3
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs3 USING g_enterprise,g_xmfj_m.xmfjdocno
                                               
      FOREACH b_fill_cs3 INTO g_xmfl3_d[l_ac].xmfkseq,g_xmfl3_d[l_ac].xmfk001,g_xmfl3_d[l_ac].xmfk002, 
          g_xmfl3_d[l_ac].xmfksite,g_xmfl3_d[l_ac].xmfk001_desc,g_xmfl3_d[l_ac].xmfk002_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill3.fill"
         
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   
   #end add-point
   
   CALL g_xmfl_d.deleteElement(g_xmfl_d.getLength())
   CALL g_xmfl2_d.deleteElement(g_xmfl2_d.getLength())
   CALL g_xmfl3_d.deleteElement(g_xmfl3_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE axmt430_pb
   FREE axmt430_pb2
 
   FREE axmt430_pb3
 
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_xmfl_d.getLength()
      LET g_xmfl_d_mask_o[l_ac].* =  g_xmfl_d[l_ac].*
      CALL axmt430_xmfl_t_mask()
      LET g_xmfl_d_mask_n[l_ac].* =  g_xmfl_d[l_ac].*
   END FOR
   
   LET g_xmfl2_d_mask_o.* =  g_xmfl2_d.*
   FOR l_ac = 1 TO g_xmfl2_d.getLength()
      LET g_xmfl2_d_mask_o[l_ac].* =  g_xmfl2_d[l_ac].*
      CALL axmt430_xmfm_t_mask()
      LET g_xmfl2_d_mask_n[l_ac].* =  g_xmfl2_d[l_ac].*
   END FOR
   LET g_xmfl3_d_mask_o.* =  g_xmfl3_d.*
   FOR l_ac = 1 TO g_xmfl3_d.getLength()
      LET g_xmfl3_d_mask_o[l_ac].* =  g_xmfl3_d[l_ac].*
      CALL axmt430_xmfk_t_mask()
      LET g_xmfl3_d_mask_n[l_ac].* =  g_xmfl3_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
 
{</section>}
 
{<section id="axmt430.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION axmt430_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      
      #end add-point    
      DELETE FROM xmfl_t
       WHERE xmflent = g_enterprise AND
         xmfldocno = ps_keys_bak[1] AND xmflseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_xmfl_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete2"
      
      #end add-point    
      DELETE FROM xmfm_t
       WHERE xmfment = g_enterprise AND
             xmfmdocno = ps_keys_bak[1] AND xmfmseq = ps_keys_bak[2] AND xmfm001 = ps_keys_bak[3] AND xmfm002 = ps_keys_bak[4]
      #add-point:delete_b段刪除中 name="delete_b.m_delete2"
      
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmfm_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_xmfl2_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete2"
      
      #end add-point    
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete3"
      
      #end add-point    
      DELETE FROM xmfk_t
       WHERE xmfkent = g_enterprise AND
             xmfkdocno = ps_keys_bak[1] AND xmfkseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete3"
      
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmfk_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_xmfl3_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete3"
      
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other name="delete_b.other"
   
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="axmt430.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION axmt430_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      
      #end add-point 
      INSERT INTO xmfl_t
                  (xmflent,
                   xmfldocno,
                   xmflseq
                   ,xmflsite,xmfl001,xmfl002,xmfl003,xmfl005,xmfl007,xmfl006,xmfl008,xmfl009,xmfl010,xmfl011,xmfl012) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_xmfl_d[g_detail_idx].xmflsite,g_xmfl_d[g_detail_idx].xmfl001,g_xmfl_d[g_detail_idx].xmfl002, 
                       g_xmfl_d[g_detail_idx].xmfl003,g_xmfl_d[g_detail_idx].xmfl005,g_xmfl_d[g_detail_idx].xmfl007, 
                       g_xmfl_d[g_detail_idx].xmfl006,g_xmfl_d[g_detail_idx].xmfl008,g_xmfl_d[g_detail_idx].xmfl009, 
                       g_xmfl_d[g_detail_idx].xmfl010,g_xmfl_d[g_detail_idx].xmfl011,g_xmfl_d[g_detail_idx].xmfl012) 
 
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmfl_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_xmfl_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
      
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert2"
      
      #end add-point 
      INSERT INTO xmfm_t
                  (xmfment,
                   xmfmdocno,
                   xmfmseq,xmfm001,xmfm002
                   ,xmfm003,xmfm004) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
                   ,g_xmfl2_d[g_detail_idx].xmfm003,g_xmfl2_d[g_detail_idx].xmfm004)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert2"
      
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmfm_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_xmfl2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert2"
      
      #end add-point
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert3"
      
      #end add-point 
      INSERT INTO xmfk_t
                  (xmfkent,
                   xmfkdocno,
                   xmfkseq
                   ,xmfk001,xmfk002,xmfksite) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_xmfl3_d[g_detail_idx].xmfk001,g_xmfl3_d[g_detail_idx].xmfk002,g_xmfl3_d[g_detail_idx].xmfksite) 
 
      #add-point:insert_b段資料新增中 name="insert_b.m_insert3"
      
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmfk_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_xmfl3_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert3"
      
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other name="insert_b.other"
   
   #end add-point     
   
END FUNCTION
 
{</section>}
 
{<section id="axmt430.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION axmt430_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmfl_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      
      #end add-point 
      
      #將遮罩欄位還原
      CALL axmt430_xmfl_t_mask_restore('restore_mask_o')
               
      UPDATE xmfl_t 
         SET (xmfldocno,
              xmflseq
              ,xmflsite,xmfl001,xmfl002,xmfl003,xmfl005,xmfl007,xmfl006,xmfl008,xmfl009,xmfl010,xmfl011,xmfl012) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_xmfl_d[g_detail_idx].xmflsite,g_xmfl_d[g_detail_idx].xmfl001,g_xmfl_d[g_detail_idx].xmfl002, 
                  g_xmfl_d[g_detail_idx].xmfl003,g_xmfl_d[g_detail_idx].xmfl005,g_xmfl_d[g_detail_idx].xmfl007, 
                  g_xmfl_d[g_detail_idx].xmfl006,g_xmfl_d[g_detail_idx].xmfl008,g_xmfl_d[g_detail_idx].xmfl009, 
                  g_xmfl_d[g_detail_idx].xmfl010,g_xmfl_d[g_detail_idx].xmfl011,g_xmfl_d[g_detail_idx].xmfl012)  
 
         WHERE xmflent = g_enterprise AND xmfldocno = ps_keys_bak[1] AND xmflseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update"
      
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmfl_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmfl_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL axmt430_xmfl_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmfm_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update2"
      
      #end add-point  
      
      #將遮罩欄位還原
      CALL axmt430_xmfm_t_mask_restore('restore_mask_o')
               
      UPDATE xmfm_t 
         SET (xmfmdocno,
              xmfmseq,xmfm001,xmfm002
              ,xmfm003,xmfm004) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
              ,g_xmfl2_d[g_detail_idx].xmfm003,g_xmfl2_d[g_detail_idx].xmfm004) 
         WHERE xmfment = g_enterprise AND xmfmdocno = ps_keys_bak[1] AND xmfmseq = ps_keys_bak[2] AND xmfm001 = ps_keys_bak[3] AND xmfm002 = ps_keys_bak[4]
      #add-point:update_b段修改中 name="update_b.m_update2"
      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmfm_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmfm_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL axmt430_xmfm_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update2"
      
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmfk_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update3"
      
      #end add-point  
      
      #將遮罩欄位還原
      CALL axmt430_xmfk_t_mask_restore('restore_mask_o')
               
      UPDATE xmfk_t 
         SET (xmfkdocno,
              xmfkseq
              ,xmfk001,xmfk002,xmfksite) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_xmfl3_d[g_detail_idx].xmfk001,g_xmfl3_d[g_detail_idx].xmfk002,g_xmfl3_d[g_detail_idx].xmfksite)  
 
         WHERE xmfkent = g_enterprise AND xmfkdocno = ps_keys_bak[1] AND xmfkseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update3"
      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmfk_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmfk_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL axmt430_xmfk_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update3"
      
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
 
   
 
   
   #add-point:update_b段other name="update_b.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axmt430.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION axmt430_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="axmt430.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION axmt430_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="axmt430.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION axmt430_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
    
   #先刷新資料
   #CALL axmt430_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "xmfl_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN axmt430_bcl USING g_enterprise,
                                       g_xmfj_m.xmfjdocno,g_xmfl_d[g_detail_idx].xmflseq     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "axmt430_bcl:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "xmfm_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN axmt430_bcl2 USING g_enterprise,
                                             g_xmfj_m.xmfjdocno,g_xmfl2_d[g_detail_idx].xmfmseq,g_xmfl2_d[g_detail_idx].xmfm001, 
                                                 g_xmfl2_d[g_detail_idx].xmfm002
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "axmt430_bcl2:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "xmfk_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN axmt430_bcl3 USING g_enterprise,
                                             g_xmfj_m.xmfjdocno,g_xmfl3_d[g_detail_idx].xmfkseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "axmt430_bcl3:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other name="lock_b.other"
   
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axmt430.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION axmt430_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmt430_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmt430_bcl2
   END IF
 
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmt430_bcl3
   END IF
 
 
   
 
 
   #add-point:unlock_b段other name="unlock_b.other"
   
   #end add-point  
 
END FUNCTION
 
{</section>}
 
{<section id="axmt430.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION axmt430_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   CALL cl_set_comp_entry("xmfjdocno",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("xmfjdocno",TRUE)
      CALL cl_set_comp_entry("xmfjdocdt",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      CALL cl_set_comp_entry("xmfjdocdt",TRUE)
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   #先針對可以輸入的欄位都開放輸入，之後呼叫set_no_entry進行單別控制
   #注意：欄位隱藏/不可編輯，則不可將欄位開啟/關閉，不然會頁籤切換會有問題
   CALL cl_set_comp_entry("xmfj001,xmfj002,xmfj003,xmfj004,xmfj005",TRUE)
   CALL cl_set_comp_entry("xmfj008,xmfj009,xmfj010",TRUE)
   CALL cl_set_comp_entry("xmfj011,xmfj012,xmfj013,xmfj014,xmfj015",TRUE)
   CALL cl_set_comp_entry("xmfj016,xmfj017,xmfj018,xmfj019,xmfj020",TRUE)
   CALL cl_set_comp_entry("xmfj030",TRUE)
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="axmt430.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION axmt430_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   DEFINE l_fields       STRING   #須要關閉欄位的欄位字串
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("xmfjdocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      CALL cl_set_comp_entry("xmfjdocdt",FALSE)
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("xmfjdocno",FALSE)
   END IF 
 
   IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("xmfjdocdt",FALSE)
      END IF
   END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   #根據單別設定判斷單頭哪些欄位需要做輸入控制
   IF NOT cl_null(g_xmfj_m.xmfjdocno) THEN
      LET l_fields = ''
      CALL s_aooi200_get_doc_fields(g_site,'1',g_xmfj_m.xmfjdocno) RETURNING l_fields
      CALL cl_set_comp_entry(l_fields,FALSE)
   END IF
   
   #帳款產生方式=1.銷退折讓時，限定幣別(xmfj013)、限定稅別(xmfj014)、付款條件(xmfj020)不可輸入，
   #且預設為'Y'
   IF NOT cl_null(g_xmfj_m.xmfj019) AND g_xmfj_m.xmfj019 = '1' THEN
      CALL cl_set_comp_entry("xmfj013,xmfj014,xmfj020",FALSE)
      LET g_xmfj_m.xmfj013 = 'Y'
      LET g_xmfj_m.xmfj014 = 'Y'
      LET g_xmfj_m.xmfj020 = ''
      LET g_xmfj_m.xmfj020_desc = ''
      DISPLAY BY NAME g_xmfj_m.xmfj013,g_xmfj_m.xmfj014,g_xmfj_m.xmfj020,
                      g_xmfj_m.xmfj020_desc
   END IF
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="axmt430.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION axmt430_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   CALL cl_set_comp_entry("xmfl003",TRUE)   #產品特徵
   CALL cl_set_comp_entry("xmfl007",TRUE)   #折扣單價
   CALL cl_set_comp_entry("xmfl008",TRUE)   #折扣率
   #end add-point  
END FUNCTION
 
{</section>}
 
{<section id="axmt430.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION axmt430_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   DEFINE l_imaa005      LIKE imaa_t.imaa005
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   #當資料類型為1.料件時，檢查料件是否有產品特徵(imaa005 is not null)，有的話，產品特徵(xmfl003)才開放輸入。
   IF g_xmfl_d[l_ac].xmfl001 = '1' THEN
      LET l_imaa005 = ''
      SELECT imaa005 INTO l_imaa005 
        FROM imaa_t
       WHERE imaaent = g_enterprise
         AND imaa001 = g_xmfl_d[l_ac].xmfl002
      IF cl_null(l_imaa005) THEN
         CALL cl_set_comp_entry("xmfl003",FALSE)
         LET g_xmfl_d[l_ac].xmfl003 = ''
         LET g_xmfl_d[l_ac].xmfl003_desc = ''
         DISPLAY BY NAME g_xmfl_d[l_ac].xmfl003,g_xmfl_d[l_ac].xmfl003_desc
      END IF
   ELSE
      CALL cl_set_comp_entry("xmfl003",FALSE)
      LET g_xmfl_d[l_ac].xmfl003 = ''
      LET g_xmfl_d[l_ac].xmfl003_desc = ''
      DISPLAY BY NAME g_xmfl_d[l_ac].xmfl003,g_xmfl_d[l_ac].xmfl003_desc
   END IF
   
   CASE g_xmfl_d[l_ac].xmfl005
      WHEN '1'   #單價折扣
           #折扣率不可輸入
           CALL cl_set_comp_entry("xmfl008",FALSE)
           LET g_xmfl_d[l_ac].xmfl008 = ''
           DISPLAY BY NAME g_xmfl_d[l_ac].xmfl008
      WHEN '2'   #金額百分比折扣
           #折扣單價不可輸入
           CALL cl_set_comp_entry("xmfl007",FALSE)
           LET g_xmfl_d[l_ac].xmfl007 = ''
           DISPLAY BY NAME g_xmfl_d[l_ac].xmfl007
      WHEN '3'   #單價百分比折扣
           #折扣單價不可輸入
           CALL cl_set_comp_entry("xmfl007",FALSE)
           LET g_xmfl_d[l_ac].xmfl007 = ''
           DISPLAY BY NAME g_xmfl_d[l_ac].xmfl007
   END CASE
   #end add-point     
END FUNCTION
 
{</section>}
 
{<section id="axmt430.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION axmt430_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
      
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   CALL cl_set_act_visible("change_xmfj012",TRUE) #160324-00037#8-add
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="axmt430.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION axmt430_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   #應用 a63 樣板自動產生(Version:1)
   IF g_xmfj_m.xmfjstus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF

   #160324-00037#8-add-(S)
   IF g_xmfj_m.xmfjstus <> 'Y' THEN
      CALL cl_set_act_visible("change_xmfj012",FALSE)
   END IF
   #160324-00037#8-add-(E)

   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="axmt430.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION axmt430_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   CALL cl_set_act_visible("open_axmt430_01",TRUE)
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="axmt430.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION axmt430_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   #160324-00037#8-mod-(S)
#   IF g_xmfl_d.getLength() = 0 OR g_xmfj_m.xmfjstus <> 'N' THEN
#      CALL cl_set_act_visible("open_axmt430_01",FALSE)
#   END IF
   IF g_xmfl_d.getLength() = 0 OR g_xmfj_m.xmfjstus NOT MATCHES "[NC]" THEN
      CALL cl_set_act_visible("open_axmt430_01",FALSE)
   END IF
   #160324-00037#8-mod-(E)
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="axmt430.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION axmt430_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
   
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " xmfjdocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
         INITIALIZE g_wc2_table2 TO NULL
 
         INITIALIZE g_wc2_table3 TO NULL
 
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "xmfj_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "xmfl_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "xmfm_t" 
                  LET g_wc2_table2 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "xmfk_t" 
                  LET g_wc2_table3 = la_wc[li_idx].wc
 
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
            OR NOT cl_null(g_wc2_table2)
 
            OR NOT cl_null(g_wc2_table3)
 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
            IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
            END IF
 
            IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
            END IF
 
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
 
{</section>}
 
{<section id="axmt430.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION axmt430_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   DEFINE l_success      LIKE type_t.num5
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   #作廢
   IF g_xmfj_m.xmfjstus = 'X' THEN
      RETURN
   END IF
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_xmfj_m.xmfjdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN axmt430_cl USING g_enterprise,g_xmfj_m.xmfjdocno
   IF STATUS THEN
      CLOSE axmt430_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axmt430_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE axmt430_master_referesh USING g_xmfj_m.xmfjdocno INTO g_xmfj_m.xmfjdocno,g_xmfj_m.xmfjdocdt, 
       g_xmfj_m.xmfj003,g_xmfj_m.xmfj001,g_xmfj_m.xmfj002,g_xmfj_m.xmfjstus,g_xmfj_m.xmfj004,g_xmfj_m.xmfj005, 
       g_xmfj_m.xmfj006,g_xmfj_m.xmfj007,g_xmfj_m.xmfj008,g_xmfj_m.xmfj009,g_xmfj_m.xmfj010,g_xmfj_m.xmfj013, 
       g_xmfj_m.xmfj014,g_xmfj_m.xmfj015,g_xmfj_m.xmfj016,g_xmfj_m.xmfj017,g_xmfj_m.xmfj018,g_xmfj_m.xmfj019, 
       g_xmfj_m.xmfj011,g_xmfj_m.xmfj012,g_xmfj_m.xmfjsite,g_xmfj_m.xmfj020,g_xmfj_m.xmfj030,g_xmfj_m.xmfjownid, 
       g_xmfj_m.xmfjowndp,g_xmfj_m.xmfjcrtid,g_xmfj_m.xmfjcrtdp,g_xmfj_m.xmfjcrtdt,g_xmfj_m.xmfjmodid, 
       g_xmfj_m.xmfjmoddt,g_xmfj_m.xmfjcnfid,g_xmfj_m.xmfjcnfdt,g_xmfj_m.xmfjpstid,g_xmfj_m.xmfjpstdt, 
       g_xmfj_m.xmfj003_desc,g_xmfj_m.xmfj001_desc,g_xmfj_m.xmfj002_desc,g_xmfj_m.xmfj004_desc,g_xmfj_m.xmfj008_desc, 
       g_xmfj_m.xmfj009_desc,g_xmfj_m.xmfj010_desc,g_xmfj_m.xmfj020_desc,g_xmfj_m.xmfjownid_desc,g_xmfj_m.xmfjowndp_desc, 
       g_xmfj_m.xmfjcrtid_desc,g_xmfj_m.xmfjcrtdp_desc,g_xmfj_m.xmfjmodid_desc,g_xmfj_m.xmfjcnfid_desc, 
       g_xmfj_m.xmfjpstid_desc
   
 
   #檢查是否允許此動作
   IF NOT axmt430_action_chk() THEN
      CLOSE axmt430_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_xmfj_m.xmfjdocno,g_xmfj_m.xmfjdocno_desc,g_xmfj_m.xmfjdocdt,g_xmfj_m.xmfj003,g_xmfj_m.xmfj003_desc, 
       g_xmfj_m.xmfj001,g_xmfj_m.xmfj001_desc,g_xmfj_m.xmfj002,g_xmfj_m.xmfj002_desc,g_xmfj_m.xmfjstus, 
       g_xmfj_m.xmfj004,g_xmfj_m.xmfj004_desc,g_xmfj_m.xmfj005,g_xmfj_m.xmfj005_desc,g_xmfj_m.xmfj006, 
       g_xmfj_m.xmfj007,g_xmfj_m.xmfj008,g_xmfj_m.xmfj008_desc,g_xmfj_m.xmfj009,g_xmfj_m.xmfj009_desc, 
       g_xmfj_m.xmfj010,g_xmfj_m.xmfj010_desc,g_xmfj_m.xmfj013,g_xmfj_m.xmfj014,g_xmfj_m.xmfj015,g_xmfj_m.xmfj016, 
       g_xmfj_m.xmfj017,g_xmfj_m.xmfj018,g_xmfj_m.xmfj019,g_xmfj_m.xmfj011,g_xmfj_m.xmfj012,g_xmfj_m.xmfjsite, 
       g_xmfj_m.xmfj020,g_xmfj_m.xmfj020_desc,g_xmfj_m.xmfj030,g_xmfj_m.xmfjownid,g_xmfj_m.xmfjownid_desc, 
       g_xmfj_m.xmfjowndp,g_xmfj_m.xmfjowndp_desc,g_xmfj_m.xmfjcrtid,g_xmfj_m.xmfjcrtid_desc,g_xmfj_m.xmfjcrtdp, 
       g_xmfj_m.xmfjcrtdp_desc,g_xmfj_m.xmfjcrtdt,g_xmfj_m.xmfjmodid,g_xmfj_m.xmfjmodid_desc,g_xmfj_m.xmfjmoddt, 
       g_xmfj_m.xmfjcnfid,g_xmfj_m.xmfjcnfid_desc,g_xmfj_m.xmfjcnfdt,g_xmfj_m.xmfjpstid,g_xmfj_m.xmfjpstid_desc, 
       g_xmfj_m.xmfjpstdt
 
   CASE g_xmfj_m.xmfjstus
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "C"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_xmfj_m.xmfjstus
            
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "C"
               HIDE OPTION "closed"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      CALL cl_set_act_visible("unconfirmed,invalid,confirmed",TRUE)
      CALL cl_set_act_visible("signing,withdraw",FALSE)
      
      CASE g_xmfj_m.xmfjstus
         WHEN "N"
            CALL cl_set_act_visible("unconfirmed,closed,unclosed",FALSE) #160324-00037#8-add-closed,unclosed

            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            IF cl_bpm_chk() THEN
                CALL cl_set_act_visible("signing",TRUE)
                CALL cl_set_act_visible("confirmed",FALSE)
            END IF
            
         WHEN "R"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,closed,unclosed",FALSE) #160324-00037#8-add-closed,unclosed

         WHEN "D"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,closed,unclosed",FALSE) #160324-00037#8-add-closed,unclosed
   

         WHEN "X"
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed,closed,unclosed",FALSE) #160324-00037#8-add-closed,unclosed

         WHEN "Y"
            CALL cl_set_act_visible("invalid,confirmed,closed,unclosed",FALSE) #160324-00037#8-add-closed,unclosed

         WHEN "W"    #只能顯示抽單;其餘應用功能皆隱藏
             CALL cl_set_act_visible("withdraw",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,confirmed,closed,unclosed",FALSE) #160324-00037#8-add-closed,unclosed
         
         WHEN "A"     #只能顯示確認; 其餘應用功能皆隱藏
             CALL cl_set_act_visible("confirmed ",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,closed,unclosed",FALSE) #160324-00037#8-add-closed,unclosed
         #160324-00037#8-add-(S)
         WHEN "C"     #結案
             EXIT MENU
         #160324-00037#8-add-(E)

      END CASE
      #end add-point
      
      #應用 a36 樣板自動產生(Version:5)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT axmt430_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE axmt430_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT axmt430_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE axmt430_cl
            RETURN
         END IF
 
 
 
	  
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制 name="statechange.approved"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制 name="statechange.withdraw"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.unconfirmed"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制 name="statechange.rejection"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制 name="statechange.signing"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.confirmed"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION closed
         IF cl_auth_chk_act("closed") THEN
            LET lc_state = "C"
            #add-point:action控制 name="statechange.closed"
 
            #end add-point
         END IF
         EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.invalid"
            
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      #160324-00037#8-add-(S)
      ON ACTION unclosed
         IF cl_auth_chk_act("unclosed") THEN
            LET lc_state = "Y"
            
         END IF
         EXIT MENU
      #160324-00037#8-add-(E)   
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "A" 
      AND lc_state <> "D"
      AND lc_state <> "N"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "Y"
      AND lc_state <> "C"
      AND lc_state <> "X"
      ) OR 
      g_xmfj_m.xmfjstus = lc_state OR cl_null(lc_state) THEN
      CLOSE axmt430_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   CALL cl_err_collect_init()
   LET l_success = TRUE
   IF lc_state = 'Y' THEN
      CALL s_axmt430_conf_chk(g_xmfj_m.xmfjdocno) RETURNING l_success
      IF l_success THEN
         IF cl_ask_confirm('aim-00108') THEN
            CALL s_axmt430_conf_upd(g_xmfj_m.xmfjdocno) RETURNING l_success
         ELSE
            LET l_success = FALSE
         END IF
      END IF
   END IF
   IF lc_state = 'N' THEN
      CALL s_axmt430_unconf_chk(g_xmfj_m.xmfjdocno) RETURNING l_success
      IF l_success THEN
         IF cl_ask_confirm('aim-00110') THEN
            CALL s_axmt430_unconf_upd(g_xmfj_m.xmfjdocno) RETURNING l_success
         ELSE
            LET l_success = FALSE
         END IF
      END IF
   END IF
   IF lc_state = 'X' THEN
      CALL s_axmt430_invalid_chk(g_xmfj_m.xmfjdocno) RETURNING l_success
      IF l_success THEN
         IF cl_ask_confirm('aim-00109') THEN
            CALL s_axmt430_invalid_upd(g_xmfj_m.xmfjdocno) RETURNING l_success
         ELSE
            LET l_success = FALSE
         END IF
      END IF
   END IF
   
   CALL cl_err_collect_show()
   IF NOT l_success THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   #end add-point
   
   LET g_xmfj_m.xmfjmodid = g_user
   LET g_xmfj_m.xmfjmoddt = cl_get_current()
   LET g_xmfj_m.xmfjstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE xmfj_t 
      SET (xmfjstus,xmfjmodid,xmfjmoddt) 
        = (g_xmfj_m.xmfjstus,g_xmfj_m.xmfjmodid,g_xmfj_m.xmfjmoddt)     
    WHERE xmfjent = g_enterprise AND xmfjdocno = g_xmfj_m.xmfjdocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE axmt430_master_referesh USING g_xmfj_m.xmfjdocno INTO g_xmfj_m.xmfjdocno,g_xmfj_m.xmfjdocdt, 
          g_xmfj_m.xmfj003,g_xmfj_m.xmfj001,g_xmfj_m.xmfj002,g_xmfj_m.xmfjstus,g_xmfj_m.xmfj004,g_xmfj_m.xmfj005, 
          g_xmfj_m.xmfj006,g_xmfj_m.xmfj007,g_xmfj_m.xmfj008,g_xmfj_m.xmfj009,g_xmfj_m.xmfj010,g_xmfj_m.xmfj013, 
          g_xmfj_m.xmfj014,g_xmfj_m.xmfj015,g_xmfj_m.xmfj016,g_xmfj_m.xmfj017,g_xmfj_m.xmfj018,g_xmfj_m.xmfj019, 
          g_xmfj_m.xmfj011,g_xmfj_m.xmfj012,g_xmfj_m.xmfjsite,g_xmfj_m.xmfj020,g_xmfj_m.xmfj030,g_xmfj_m.xmfjownid, 
          g_xmfj_m.xmfjowndp,g_xmfj_m.xmfjcrtid,g_xmfj_m.xmfjcrtdp,g_xmfj_m.xmfjcrtdt,g_xmfj_m.xmfjmodid, 
          g_xmfj_m.xmfjmoddt,g_xmfj_m.xmfjcnfid,g_xmfj_m.xmfjcnfdt,g_xmfj_m.xmfjpstid,g_xmfj_m.xmfjpstdt, 
          g_xmfj_m.xmfj003_desc,g_xmfj_m.xmfj001_desc,g_xmfj_m.xmfj002_desc,g_xmfj_m.xmfj004_desc,g_xmfj_m.xmfj008_desc, 
          g_xmfj_m.xmfj009_desc,g_xmfj_m.xmfj010_desc,g_xmfj_m.xmfj020_desc,g_xmfj_m.xmfjownid_desc, 
          g_xmfj_m.xmfjowndp_desc,g_xmfj_m.xmfjcrtid_desc,g_xmfj_m.xmfjcrtdp_desc,g_xmfj_m.xmfjmodid_desc, 
          g_xmfj_m.xmfjcnfid_desc,g_xmfj_m.xmfjpstid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_xmfj_m.xmfjdocno,g_xmfj_m.xmfjdocno_desc,g_xmfj_m.xmfjdocdt,g_xmfj_m.xmfj003, 
          g_xmfj_m.xmfj003_desc,g_xmfj_m.xmfj001,g_xmfj_m.xmfj001_desc,g_xmfj_m.xmfj002,g_xmfj_m.xmfj002_desc, 
          g_xmfj_m.xmfjstus,g_xmfj_m.xmfj004,g_xmfj_m.xmfj004_desc,g_xmfj_m.xmfj005,g_xmfj_m.xmfj005_desc, 
          g_xmfj_m.xmfj006,g_xmfj_m.xmfj007,g_xmfj_m.xmfj008,g_xmfj_m.xmfj008_desc,g_xmfj_m.xmfj009, 
          g_xmfj_m.xmfj009_desc,g_xmfj_m.xmfj010,g_xmfj_m.xmfj010_desc,g_xmfj_m.xmfj013,g_xmfj_m.xmfj014, 
          g_xmfj_m.xmfj015,g_xmfj_m.xmfj016,g_xmfj_m.xmfj017,g_xmfj_m.xmfj018,g_xmfj_m.xmfj019,g_xmfj_m.xmfj011, 
          g_xmfj_m.xmfj012,g_xmfj_m.xmfjsite,g_xmfj_m.xmfj020,g_xmfj_m.xmfj020_desc,g_xmfj_m.xmfj030, 
          g_xmfj_m.xmfjownid,g_xmfj_m.xmfjownid_desc,g_xmfj_m.xmfjowndp,g_xmfj_m.xmfjowndp_desc,g_xmfj_m.xmfjcrtid, 
          g_xmfj_m.xmfjcrtid_desc,g_xmfj_m.xmfjcrtdp,g_xmfj_m.xmfjcrtdp_desc,g_xmfj_m.xmfjcrtdt,g_xmfj_m.xmfjmodid, 
          g_xmfj_m.xmfjmodid_desc,g_xmfj_m.xmfjmoddt,g_xmfj_m.xmfjcnfid,g_xmfj_m.xmfjcnfid_desc,g_xmfj_m.xmfjcnfdt, 
          g_xmfj_m.xmfjpstid,g_xmfj_m.xmfjpstid_desc,g_xmfj_m.xmfjpstdt
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   
   #end add-point  
 
   CLOSE axmt430_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL axmt430_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axmt430.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION axmt430_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_xmfl_d.getLength() THEN
         LET g_detail_idx = g_xmfl_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmfl_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmfl_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_xmfl2_d.getLength() THEN
         LET g_detail_idx = g_xmfl2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmfl2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmfl2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_xmfl3_d.getLength() THEN
         LET g_detail_idx = g_xmfl3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmfl3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmfl3_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axmt430.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION axmt430_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   
   #end add-point
    
   LET l_ac = li_ac
   
   CALL axmt430_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
 
{</section>}
 
{<section id="axmt430.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION axmt430_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axmt430.status_show" >}
PRIVATE FUNCTION axmt430_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="axmt430.mask_functions" >}
&include "erp/axm/axmt430_mask.4gl"
 
{</section>}
 
{<section id="axmt430.signature" >}
   #應用 a39 樣板自動產生(Version:10)
#+ BPM提交
PRIVATE FUNCTION axmt430_send()
   #add-point:send段define(客製用) name="send.define_customerization"
   
   #end add-point 
   #add-point:send段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="send.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="send.pre_function"
   
   #end add-point
   
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
   LET g_wc2_table2 = " 1=1"
   LET g_wc2_table3 = " 1=1"
 
 
   CALL axmt430_show()
   CALL axmt430_set_pk_array()
   
   #add-point: 初始化的ADP name="send.before_send"
   
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_xmfj_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_xmfl_d))
   CALL cl_bpm_set_detail_data("s_detail2", util.JSONArray.fromFGL(g_xmfl2_d))
   CALL cl_bpm_set_detail_data("s_detail3", util.JSONArray.fromFGL(g_xmfl3_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP name="send.before_cli"
   
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP name="send.after_send"
   
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL axmt430_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL axmt430_ui_headershow()
   CALL axmt430_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
#應用 a40 樣板自動產生(Version:9)
#+ BPM抽單
PRIVATE FUNCTION axmt430_draw_out()
   #add-point:draw段define name="draw.define_customerization"
   
   #end add-point
   #add-point:draw段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="draw.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="draw.pre_function"
   
   #end add-point
   
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_idx].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL axmt430_ui_headershow()  
   CALL axmt430_ui_detailshow()
 
   #add-point:Function後置處理  name="draw.after_function"
   
   #end add-point
 
   RETURN TRUE
   
END FUNCTION
 
 
 
 
 
{</section>}
 
{<section id="axmt430.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION axmt430_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_xmfj_m.xmfjdocno
   LET g_pk_array[1].column = 'xmfjdocno'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axmt430.other_dialog" readonly="Y" >}
   
 
{</section>}
 
{<section id="axmt430.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION axmt430_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL axmt430_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_xmfj_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axmt430.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION axmt430_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   #160818-00017#42 add-S
   SELECT xmfjstus  INTO g_xmfj_m.xmfjstus
     FROM xmfj_t
    WHERE xmfjent = g_enterprise
      AND xmfjdocno = g_xmfj_m.xmfjdocno

   IF (g_action_choice="modify" OR g_action_choice="delete" OR g_action_choice="modify_detail")  THEN
     LET g_errno = NULL
     CASE g_xmfj_m.xmfjstus
        WHEN 'C'
           LET g_errno = 'ain-00197'
        WHEN 'W'
           LET g_errno = 'sub-00180'
        WHEN 'X'
           LET g_errno = 'sub-00229'
        WHEN 'Y'
           LET g_errno = 'sub-00178'
        WHEN 'S'
           LET g_errno = 'sub-00230'
     END CASE

     IF NOT cl_null(g_errno) THEN
        INITIALIZE g_errparam TO NULL
        LET g_errparam.code = g_errno
        LET g_errparam.extend = g_xmfj_m.xmfjdocno
        LET g_errparam.popup = TRUE
        CALL cl_err()
        LET g_errno = NULL
        CALL axmt430_set_act_visible()
        CALL axmt430_set_act_no_visible()
        CALL axmt430_show()
        RETURN FALSE
     END IF
   END IF
   #160818-00017#42 add-E
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="axmt430.other_function" readonly="Y" >}

################################################################################
# Descriptions...: 單別檢查
# Memo...........:
# Usage..........: CALL axmt430_xmfjdocno_chk(p_xmfjdocno)
#                  RETURNING r_success
# Input parameter: p_xmfjdocno    單別
# Return code....: r_success      TRUE/FALSE
# Date & Author..: 2015/06/04 By stellar
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt430_xmfjdocno_chk(p_xmfjdocno)
DEFINE p_xmfjdocno       LIKE xmfj_t.xmfjdocno
DEFINE r_success         LIKE type_t.num5
DEFINE l_success1        LIKE type_t.num5
DEFINE l_exist           LIKE type_t.num5

   LET r_success = TRUE
   
   IF cl_null(p_xmfjdocno) THEN
      RETURN r_success
   END IF
   
   #檢查單別是否正確
   CALL s_aooi200_chk_slip(g_site,'',p_xmfjdocno,g_prog) RETURNING l_success1
   IF NOT l_success1 THEN
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   #檢查該單別可否被key人員對應的控制組使用
   CALL s_control_chk_doc('1',p_xmfjdocno,'2',g_user,g_dept,'','') RETURNING l_success1,l_exist
   IF l_success1 THEN
      IF NOT l_exist THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'axm-00015'
         LET g_errparam.extend = p_xmfjdocno
         LET g_errparam.popup = TRUE
         CALL cl_err()
         
         LET r_success = FALSE
         RETURN r_success
      END IF
   ELSE
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 抓取單別的預設欄位頁籤資料，帶到單頭每個欄位
# Memo...........:
# Usage..........: CALL axmt430_xmfjdocno_default(p_xmfjdocno)
#                  RETURNING 回传参数
# Input parameter: p_xmfjdocno    單別
# Return code....: 
# Date & Author..: 2015/06/04 By stellar
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt430_xmfjdocno_default(p_xmfjdocno)
DEFINE p_xmfjdocno       LIKE xmfj_t.xmfjdocno
DEFINE l_success         LIKE type_t.num5
DEFINE l_slip            LIKE xmfj_t.xmfjdocno

   IF cl_null(p_xmfjdocno) THEN
      RETURN 
   END IF
   
   #擷取單別
   CALL s_aooi200_get_slip(p_xmfjdocno) RETURNING l_success,l_slip
   IF NOT l_success THEN
      RETURN
   END IF
   
   #預設單頭欄位
   LET g_xmfj_m.xmfj001 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmfj001',g_xmfj_m.xmfj001)   #銷售人員
   LET g_xmfj_m.xmfj002 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmfj002',g_xmfj_m.xmfj002)   #銷售部門
   LET g_xmfj_m.xmfj003 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmfj003',g_xmfj_m.xmfj003)   #帳款客戶
   LET g_xmfj_m.xmfj004 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmfj004',g_xmfj_m.xmfj004)   #幣別
   LET g_xmfj_m.xmfj005 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmfj005',g_xmfj_m.xmfj005)   #稅別
   LET g_xmfj_m.xmfj006 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmfj006',g_xmfj_m.xmfj006)   #稅率
   LET g_xmfj_m.xmfj007 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmfj007',g_xmfj_m.xmfj007)   #單價含稅否
   LET g_xmfj_m.xmfj008 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmfj008',g_xmfj_m.xmfj008)   #收款條件
   LET g_xmfj_m.xmfj009 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmfj009',g_xmfj_m.xmfj009)   #交易條件
   LET g_xmfj_m.xmfj010 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmfj010',g_xmfj_m.xmfj010)   #銷售通路
   LET g_xmfj_m.xmfj011 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmfj011',g_xmfj_m.xmfj011)   #生效日期
   LET g_xmfj_m.xmfj012 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmfj012',g_xmfj_m.xmfj012)   #失效日期
   LET g_xmfj_m.xmfj013 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmfj013',g_xmfj_m.xmfj013)   #限定幣別
   LET g_xmfj_m.xmfj014 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmfj014',g_xmfj_m.xmfj014)   #限定稅別
   LET g_xmfj_m.xmfj015 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmfj015',g_xmfj_m.xmfj015)   #限定收款條件否
   LET g_xmfj_m.xmfj016 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmfj016',g_xmfj_m.xmfj016)   #限定交易條件否
   LET g_xmfj_m.xmfj017 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmfj017',g_xmfj_m.xmfj017)   #限定銷售通路
   LET g_xmfj_m.xmfj018 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmfj018',g_xmfj_m.xmfj018)   #銷退是否納入計算
   LET g_xmfj_m.xmfj019 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmfj019',g_xmfj_m.xmfj019)   #帳款產生方式
   LET g_xmfj_m.xmfj020 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmfj020',g_xmfj_m.xmfj020)   #付款條件
   LET g_xmfj_m.xmfj030 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmfj030',g_xmfj_m.xmfj030)   #備註
   
   IF cl_null(g_xmfj_m.xmfj012) THEN
      CALL axmt430_xmfj011_default(g_xmfj_m.xmfj011)   #失效日期
   END IF
   
   DISPLAY BY NAME g_xmfj_m.xmfj001,g_xmfj_m.xmfj002,g_xmfj_m.xmfj003,g_xmfj_m.xmfj004,g_xmfj_m.xmfj005,
                   g_xmfj_m.xmfj006,g_xmfj_m.xmfj007,g_xmfj_m.xmfj008,g_xmfj_m.xmfj009,g_xmfj_m.xmfj010,
                   g_xmfj_m.xmfj011,g_xmfj_m.xmfj012,g_xmfj_m.xmfj013,g_xmfj_m.xmfj014,g_xmfj_m.xmfj015,
                   g_xmfj_m.xmfj016,g_xmfj_m.xmfj017,g_xmfj_m.xmfj018,g_xmfj_m.xmfj019,g_xmfj_m.xmfj020,
                   g_xmfj_m.xmfj030
                   
   #顯示單頭欄位的說明
   CALL axmt430_head_fields_desc()
   
   LET g_xmfj_m_o.* = g_xmfj_m.*
END FUNCTION

################################################################################
# Descriptions...: 客戶檢查
# Memo...........:
# Usage..........: CALL axmt430_customer_chk(p_customer)
#                  RETURNING r_success
# Input parameter: p_customer     客戶編號  
# Return code....: r_success      TRUE/FALSE
# Date & Author..: 2015/06/04 By stellar
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt430_customer_chk(p_customer)
DEFINE p_customer        LIKE pmaa_t.pmaa001
DEFINE r_success         LIKE type_t.num5

   LET r_success = TRUE
   
   IF cl_null(p_customer) THEN
      RETURN r_success
   END IF
   
   #校驗
   INITIALIZE g_chkparam.* TO NULL
   LET g_chkparam.arg1 = p_customer
   LET g_chkparam.arg2 = g_site
   #160318-00025#38  2016/04/21  by pengxin  add(S)
   LET g_errshow = TRUE #是否開窗 
   LET g_chkparam.err_str[1] = "apm-00201:sub-01302|axmm200|",cl_get_progname("axmm200",g_lang,"2"),"|:EXEPROGaxmm200"
   #160318-00025#38  2016/04/21  by pengxin  add(E)
   IF cl_chk_exist("v_pmaa001_3") THEN
   ELSE
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   #檢查輸入的客戶在控制組與單據別控制內是否可使用
   IF NOT s_control_check_customer(p_customer,'2',g_site,g_user,g_dept,g_xmfj_m.xmfjdocno) THEN
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 從控制組或客戶據點資料帶出預設值
# Memo...........:
# Usage..........: CALL axmt430_xmfj003_default(p_xmfj003)
#                  
# Input parameter: p_xmfj003      帳款客戶
# Return code....: 
# Date & Author..: 2015/06/04 By stellar
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt430_xmfj003_default(p_xmfj003)
DEFINE p_xmfj003         LIKE xmfj_t.xmfj003
DEFINE l_success         LIKE type_t.num5
DEFINE l_controlno       LIKE ooha_t.ooha001   #控制組
DEFINE l_slip            LIKE xmfj_t.xmfjdocno
DEFINE l_pmaa096         LIKE pmaa_t.pmaa096   #集團級的預設業務人員
DEFINE l_pmaa097         LIKE pmaa_t.pmaa097   #集團級的預設業務部門

   IF cl_null(p_xmfj003) THEN
      RETURN
   END IF
   
   #取得控制組
   CALL s_control_get_group('2',g_user,g_dept) RETURNING l_success,l_controlno
   IF NOT l_success THEN
      RETURN
   END IF
   
   #取出控制組或客戶據點的預設資料
   INITIALIZE g_pmab.* TO NULL
   CALL s_apmm101_default_pmab('2',l_controlno,g_site,p_xmfj003) RETURNING g_pmab.*
   
   #先判斷欄位是否在單據別設定的預設欄位中，如果存在，則不重新帶值，不存在，則根據供應商帶預設值
   #擷取單別
   CALL s_aooi200_get_slip(g_xmfj_m.xmfjdocno) RETURNING l_success,l_slip
   IF NOT l_success THEN
      RETURN
   END IF
   
   #銷售人員
   IF NOT s_aooi200_chk_doc_fields(g_site,'1',l_slip,'xmfj001') THEN
      IF NOT cl_null(g_pmab.pmab031) THEN
         LET g_xmfj_m.xmfj001 = g_pmab.pmab031
      ELSE
         LET l_pmaa096 = ''
         LET l_pmaa097 = ''
         SELECT pmaa096,pmaa097 INTO l_pmaa096,l_pmaa097
           FROM pmaa_t
          WHERE pmaaent = g_enterprise
            AND pmaa001 = p_xmfj003
         IF NOT cl_null(l_pmaa096) THEN
            LET g_xmfj_m.xmfj001 = l_pmaa096
         ELSE
            LET g_xmfj_m.xmfj001 = g_user
         END IF
      END IF
   END IF
   
   #銷售部門
   IF NOT s_aooi200_chk_doc_fields(g_site,'1',l_slip,'xmfj002') THEN
      IF NOT cl_null(g_pmab.pmab059) AND NOT cl_null(g_pmab.pmab059) THEN
         LET g_xmfj_m.xmfj002 = g_pmab.pmab059
      ELSE
         IF NOT cl_null(l_pmaa096) AND NOT cl_null(l_pmaa097) THEN
            LET g_xmfj_m.xmfj002 = l_pmaa097
         ELSE
            #從員工檔帶出歸屬部門
            CALL axmt430_xmfj001_default(g_xmfj_m.xmfj001)
         END IF
      END IF
   END IF
   
   #幣別
   IF NOT s_aooi200_chk_doc_fields(g_site,'1',l_slip,'xmfj004') THEN
      LET g_xmfj_m.xmfj004 = g_pmab.pmab033
   END IF
   
   #稅別
   IF NOT s_aooi200_chk_doc_fields(g_site,'1',l_slip,'xmfj005') THEN
      LET g_xmfj_m.xmfj005 = g_pmab.pmab034
   END IF
   
   #收款條件
   IF NOT s_aooi200_chk_doc_fields(g_site,'1',l_slip,'xmfj008') THEN
      LET g_xmfj_m.xmfj008 = g_pmab.pmab037
   END IF
   
   #交易條件
   IF NOT s_aooi200_chk_doc_fields(g_site,'1',l_slip,'xmfj009') THEN
      LET g_xmfj_m.xmfj009 = g_pmab.pmab053
   END IF
   
   #銷售通路
   IF NOT s_aooi200_chk_doc_fields(g_site,'1',l_slip,'xmfj010') THEN
      LET g_xmfj_m.xmfj010 = g_pmab.pmab038
   END IF
   
   #顯示單頭欄位的說明
   CALL axmt430_head_fields_desc()
   
   LET g_xmfj_m_o.* = g_xmfj_m.*
END FUNCTION

################################################################################
# Descriptions...: 單頭欄位抓取說明顯示
# Memo...........:
# Usage..........: CALL axmt430_head_fields_desc()
#                  
# Input parameter: 
# Return code....: 
# Date & Author..: 2015/06/04 By stellar
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt430_head_fields_desc()
DEFINE l_success         LIKE type_t.num5
DEFINE l_oodb011         LIKE oodb_t.oodb011   #稅別應用

   #銷售人員姓名
   IF NOT cl_null(g_xmfj_m.xmfj001) THEN
      CALL s_desc_get_person_desc(g_xmfj_m.xmfj001) RETURNING g_xmfj_m.xmfj001_desc
      DISPLAY BY NAME g_xmfj_m.xmfj001_desc
   END IF
   
   #銷售部門說明
   IF NOT cl_null(g_xmfj_m.xmfj002) THEN
      CALL s_desc_get_department_desc(g_xmfj_m.xmfj002) RETURNING g_xmfj_m.xmfj002_desc
      DISPLAY BY NAME g_xmfj_m.xmfj002_desc
   END IF
   
   #帳款客戶說明
   IF NOT cl_null(g_xmfj_m.xmfj003) THEN
      CALL s_desc_get_trading_partner_abbr_desc(g_xmfj_m.xmfj003) RETURNING g_xmfj_m.xmfj003_desc
      DISPLAY BY NAME g_xmfj_m.xmfj003_desc
   END IF
   
   #幣別說明
   IF NOT cl_null(g_xmfj_m.xmfj004) THEN
      CALL s_desc_get_currency_desc(g_xmfj_m.xmfj004) RETURNING g_xmfj_m.xmfj004_desc
      DISPLAY BY NAME g_xmfj_m.xmfj004_desc
   END IF
   
   #稅別說明、單價含稅否、稅率
   IF NOT cl_null(g_xmfj_m.xmfj005) THEN
      CALL s_tax_chk(g_site,g_xmfj_m.xmfj005) RETURNING l_success,g_xmfj_m.xmfj005_desc,g_xmfj_m.xmfj007,
                                                        g_xmfj_m.xmfj006,l_oodb011
      DISPLAY BY NAME g_xmfj_m.xmfj005_desc,g_xmfj_m.xmfj007,g_xmfj_m.xmfj006
   END IF
   
   #收款條件說明
   IF NOT cl_null(g_xmfj_m.xmfj008) THEN
      CALL s_desc_get_ooib002_desc(g_xmfj_m.xmfj008) RETURNING g_xmfj_m.xmfj008_desc
      DISPLAY BY NAME g_xmfj_m.xmfj008_desc
   END IF
   
   #交易條件說明
   IF NOT cl_null(g_xmfj_m.xmfj009) THEN
      CALL s_desc_get_acc_desc('238',g_xmfj_m.xmfj009) RETURNING g_xmfj_m.xmfj009_desc
      DISPLAY BY NAME g_xmfj_m.xmfj009_desc
   END IF
   
   #銷售通路說明
   IF NOT cl_null(g_xmfj_m.xmfj010) THEN
      #160621-00003#3 20160629 modify by beckxie---S
      #CALL s_desc_get_acc_desc('275',g_xmfj_m.xmfj010) RETURNING g_xmfj_m.xmfj010_desc
      CALL s_desc_get_oojdl003_desc(g_xmfj_m.xmfj010) RETURNING g_xmfj_m.xmfj010_desc
      #160621-00003#3 20160629 modify by beckxie---E
      DISPLAY BY NAME g_xmfj_m.xmfj010_desc
   END IF
END FUNCTION

################################################################################
# Descriptions...: 銷售人員帶出預設值
# Memo...........:
# Usage..........: CALL axmt430_xmfj001_default(p_xmfj001)
#                  
# Input parameter: p_xmfj001      銷售人員
# Return code....: 
# Date & Author..: 2015/06/04 By stellar
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt430_xmfj001_default(p_xmfj001)
DEFINE p_xmfj001         LIKE xmfj_t.xmfj001

   IF cl_null(p_xmfj001) THEN
      RETURN
   END IF
   
   #帶出歸屬部門預設給銷售部門
   SELECT ooag003 INTO g_xmfj_m.xmfj002 
     FROM ooag_t
    WHERE ooagent = g_enterprise
      AND ooag001 = p_xmfj001
   
   #部門說明
   CALL s_desc_get_department_desc(g_xmfj_m.xmfj002) RETURNING g_xmfj_m.xmfj002_desc
   DISPLAY BY NAME g_xmfj_m.xmfj002,g_xmfj_m.xmfj002_desc
   
   LET g_xmfj_m_o.xmfj002 = g_xmfj_m.xmfj002
      
END FUNCTION

################################################################################
# Descriptions...: 幣別檢查
# Memo...........:
# Usage..........: CALL axmt430_xmfj004_chk(p_xmfj004)
#                  RETURNING r_success
# Input parameter: p_xmfj004      幣別編號
# Return code....: r_success      TRUE/FALSE
# Date & Author..: 2015/06/05 By stellar
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt430_xmfj004_chk(p_xmfj004)
DEFINE p_xmfj004         LIKE xmfj_t.xmfj004
DEFINE r_success         LIKE type_t.num5

   LET r_success = TRUE
   
   IF cl_null(p_xmfj004) THEN
      RETURN r_success
   END IF
   
   #校驗
   INITIALIZE g_chkparam.* TO NULL
   LET g_chkparam.arg1 = g_site
   LET g_chkparam.arg2 = p_xmfj004
   #160318-00025#38  2016/04/21  by pengxin  add(S)
   LET g_errshow = TRUE #是否開窗 
   LET g_chkparam.err_str[1] = "aoo-00176:sub-01302|aooi150|",cl_get_progname("aooi150",g_lang,"2"),"|:EXEPROGaooi150"
   #160318-00025#38  2016/04/21  by pengxin  add(E)
   IF cl_chk_exist("v_ooaj002") THEN
   ELSE
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 稅別檢查
# Memo...........:
# Usage..........: CALL axmt430_xmfj005_chk(p_xmfj005)
#                  RETURNING r_success
# Input parameter: p_xmfj005      稅別
# Return code....: r_success      TRUE/FALSE
# Date & Author..: 2015/06/05 By stellar
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt430_xmfj005_chk(p_xmfj005)
DEFINE p_xmfj005         LIKE xmfj_t.xmfj005
DEFINE r_success         LIKE type_t.num5
DEFINE l_success1        LIKE type_t.num5
DEFINE l_xmfj005_desc    LIKE type_t.chr80
DEFINE l_xmfj006         LIKE xmfj_t.xmfj006
DEFINE l_xmfj007         LIKE xmfj_t.xmfj007
DEFINE l_oodb011         LIKE oodb_t.oodb011

   LET r_success = TRUE
   
   IF cl_null(p_xmfj005) THEN
      RETURN r_success
   END IF
   
   #檢查稅別並帶出相關資料
   CALL s_tax_chk(g_site,p_xmfj005) RETURNING l_success1,l_xmfj005_desc,l_xmfj007,l_xmfj006,l_oodb011
   IF NOT l_success1 THEN
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   LET g_xmfj_m.xmfj005_desc = l_xmfj005_desc
   LET g_xmfj_m.xmfj006 = l_xmfj006
   LET g_xmfj_m.xmfj007 = l_xmfj007
   
   DISPLAY BY NAME g_xmfj_m.xmfj005_desc,g_xmfj_m.xmfj006,g_xmfj_m.xmfj007
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 收款條件檢查
# Memo...........:
# Usage..........: CALL axmt430_xmfj008_chk(p_xmfj008)
#                  RETURNING r_success
# Input parameter: p_xmfj008      收款條件
# Return code....: r_success      TRUE/FALSE
# Date & Author..: 2015/06/05 By stellar
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt430_xmfj008_chk(p_xmfj008)
DEFINE p_xmfj008         LIKE xmfj_t.xmfj008
DEFINE r_success         LIKE type_t.num5

   LET r_success = TRUE
   
   IF cl_null(p_xmfj008) THEN
      RETURN r_success
   END IF
   
   #校驗
   INITIALIZE g_chkparam.* TO NULL
   LET g_chkparam.arg1 = g_xmfj_m.xmfj003
   LET g_chkparam.arg2 = p_xmfj008
   IF cl_chk_exist("v_pmad002_2") THEN
   ELSE
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 若單據別參數有設置有效期限時，則在修改生效日期時，需自動依據有效日期+有效期限推算失效日期
# Memo...........:
# Usage..........: CALL axmt430_xmfj011_default(p_xmfj011)
#                  
# Input parameter: p_xmfj011      生效日期
# Return code....: 
# Date & Author..: 2015/06/05 By stellar
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt430_xmfj011_default(p_xmfj011)
DEFINE p_xmfj011         LIKE xmfj_t.xmfj011
DEFINE l_success         LIKE type_t.num5
DEFINE l_slip            LIKE xmfj_t.xmfjdocno
DEFINE l_month           LIKE type_t.num5

   IF cl_null(p_xmfj011) THEN
      RETURN
   END IF

   #擷取單別
   CALL s_aooi200_get_slip(g_xmfj_m.xmfjdocno) RETURNING l_success,l_slip
   
   CALL cl_get_doc_para(g_enterprise,g_site,l_slip,'D-BAS-0080') RETURNING l_month
   IF cl_null(l_month) OR l_month <= 0 THEN
      RETURN
   END IF
   
   #預設失效日期
   CALL s_date_get_date(p_xmfj011,l_month,0) RETURNING g_xmfj_m.xmfj012
   DISPLAY BY NAME g_xmfj_m.xmfj012
   
   LET g_xmfj_m_o.xmfj012 = g_xmfj_m.xmfj012
END FUNCTION

################################################################################
# Descriptions...: 資料編號開窗
# Memo...........:
# Usage..........: CALL axmt430_xmfl002_controlp(p_xmfl001,p_xmfl002)
#                  RETURING r_xmfl002
# Input parameter: p_xmfl001      資料類型
#                : p_xmfl002      資料編號
# Return code....: r_xmfl002      開窗選擇的資料編號
# Date & Author..: 2015/06/08 By stellar
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt430_xmfl002_controlp(p_xmfl001,p_xmfl002)
DEFINE p_xmfl001         LIKE xmfl_t.xmfl001
DEFINE p_xmfl002         LIKE xmfl_t.xmfl002
DEFINE r_xmfl002         LIKE xmfl_t.xmfl002
DEFINE l_extra_where     STRING
DEFINE l_success         LIKE type_t.num5

   LET r_xmfl002 = ''
   
   IF cl_null(p_xmfl001) THEN
      RETURN r_xmfl002
   END IF

   INITIALIZE g_qryparam.* TO NULL
   LET g_qryparam.state = 'i'
   LET g_qryparam.reqry = FALSE
   LET g_qryparam.default1 = p_xmfl002
   
   CASE p_xmfl001
      WHEN '1'   #料件
           LET g_qryparam.where = " 1=1"
           LET l_extra_where = ''
           CALL s_control_get_item_sql('2',g_site,g_user,g_dept,g_xmfj_m.xmfjdocno)
                RETURNING l_success,l_extra_where
           IF NOT cl_null(l_extra_where) THEN
              LET g_qryparam.where = g_qryparam.where," AND ",l_extra_where
           END IF
           
           CALL q_imaf001_15()
           LET r_xmfl002 = g_qryparam.return1
      WHEN '2'   #產品分類
           CALL q_rtax001()
           LET r_xmfl002 = g_qryparam.return1
      WHEN '3'   #系列號
           LET g_qryparam.arg1 = '2003'
           CALL q_oocq002()
           LET r_xmfl002 = g_qryparam.return1
   END CASE
   
   RETURN r_xmfl002
END FUNCTION

################################################################################
# Descriptions...: 資料編號的說明
# Memo...........:
# Usage..........: CALL axmt430_xmfl002_desc(p_xmfl001,p_xmfl002)
#                  RETURNING r_xmfl002_desc,r_xmfl002_desc1
# Input parameter: p_xmfl001       資料類型
#                : p_xmfl002       資料編號
# Return code....: p_xmfl002_desc  資料說明1
#                : p_xmfl002_desc1 資料說明2
# Date & Author..: 2015/06/08 By stellar
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt430_xmfl002_desc(p_xmfl001,p_xmfl002)
DEFINE p_xmfl001         LIKE xmfl_t.xmfl001
DEFINE p_xmfl002         LIKE xmfl_t.xmfl002
DEFINE r_xmfl002_desc    LIKE type_t.chr80
DEFINE r_xmfl002_desc1   LIKE type_t.chr80

   LET r_xmfl002_desc = ''
   LET r_xmfl002_desc1= ''
   
   IF cl_null(p_xmfl001) OR cl_null(p_xmfl002) THEN
      RETURN r_xmfl002_desc,r_xmfl002_desc1
   END IF
   
   CASE p_xmfl001
      WHEN '1'   #料件
           CALL s_desc_get_item_desc(p_xmfl002) RETURNING r_xmfl002_desc,r_xmfl002_desc1
      WHEN '2'   #產品分類
           CALL s_desc_get_rtaxl003_desc(p_xmfl002) RETURNING r_xmfl002_desc
      WHEN '3'   #系列號
           CALL s_desc_get_acc_desc('2003',p_xmfl002) RETURNING r_xmfl002_desc
   END CASE
   
   RETURN r_xmfl002_desc,r_xmfl002_desc1
END FUNCTION

################################################################################
# Descriptions...: 資料編號檢查
# Memo...........:
# Usage..........: CALL axmt430_xmfl002_chk(p_xmfl001,p_xmfl002)
#                  RETURNING r_success
# Input parameter: p_xmfl001      資料類型
#                : p_xmfl002      資料編號
# Return code....: r_success      TRUE/FALSE
# Date & Author..: 2015/06/08 By stellar
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt430_xmfl002_chk(p_xmfl001,p_xmfl002)
DEFINE p_xmfl001         LIKE xmfl_t.xmfl001
DEFINE p_xmfl002         LIKE xmfl_t.xmfl002
DEFINE r_success         LIKE type_t.num5

   LET r_success = TRUE
   
   IF cl_null(p_xmfl001) OR cl_null(p_xmfl002) THEN
      RETURN r_success
   END IF
   
   CASE p_xmfl001
      WHEN '1'   #料件
           #校驗
           INITIALIZE g_chkparam.* TO NULL
           LET g_chkparam.arg1 = p_xmfl002
           IF cl_chk_exist("v_imaf001_14") THEN
           ELSE
              LET r_success = FALSE
              RETURN r_success
           END IF
           
           #檢查輸入的料件在控制組與單據別控制內是否可使用
           IF NOT s_control_check_item(p_xmfl002,'2',g_site,g_user,g_dept,g_xmfj_m.xmfjdocno) THEN
              LET r_success = FALSE
              RETURN r_success
           END IF
      WHEN '2'   #產品分類
           #校驗
           INITIALIZE g_chkparam.* TO NULL
           LET g_chkparam.arg1 = p_xmfl002
           #160318-00025#38  2016/04/21  by pengxin  add(S)
           LET g_errshow = TRUE #是否開窗 
           LET g_chkparam.err_str[1] = "anm-00081:sub-01302|aimi010|",cl_get_progname("aimi010",g_lang,"2"),"|:EXEPROGaimi010"
           #160318-00025#38  2016/04/21  by pengxin  add(E)
           IF cl_chk_exist("v_rtax001") THEN
           ELSE
              LET r_success = FALSE
              RETURN r_success
           END IF
      WHEN '3'   #系列號
           IF NOT s_azzi650_chk_exist('2003',p_xmfl002) THEN
              LET r_success = FALSE
              RETURN r_success
           END IF
   END CASE
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 資料編號帶出預設值
# Memo...........:
# Usage..........: CALL axmt430_xmfl002_default(p_xmfl001,p_xmfl002)
#                  
# Input parameter: p_xmfl001      資料類型
#                : p_xmfl002      資料編號
# Return code....: 
# Date & Author..: 2015/06/08 By stellar
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt430_xmfl002_default(p_xmfl001,p_xmfl002)
DEFINE p_xmfl001         LIKE xmfl_t.xmfl001
DEFINE p_xmfl002         LIKE xmfl_t.xmfl002
DEFINE l_imaf112         LIKE imaf_t.imaf112   #銷售計價單位
DEFINE l_imaf113         LIKE imaf_t.imaf113   #銷售單位

   IF cl_null(p_xmfl001) OR cl_null(p_xmfl002) THEN
      RETURN
   END IF
   
   CASE p_xmfl001
      WHEN '1'   #料件
           #抓取銷售計價單位(imaf113)，若無值則改抓銷售單位(imaf112)預設到計價單位(xmfl006)
           LET l_imaf112 = ''
           LET l_imaf113 = ''
           SELECT imaf112,imaf113 INTO l_imaf112,l_imaf113
             FROM imaf_t
            WHERE imafent = g_enterprise
              AND imafsite= g_site
              AND imaf001 = p_xmfl002
           IF cl_null(l_imaf113) THEN
              LET g_xmfl_d[l_ac].xmfl006 = l_imaf112
           ELSE
              LET g_xmfl_d[l_ac].xmfl006 = l_imaf113
           END IF
           DISPLAY BY NAME g_xmfl_d[l_ac].xmfl006
           
           CALL s_desc_get_unit_desc(g_xmfl_d[l_ac].xmfl006) RETURNING g_xmfl_d[l_ac].xmfl006_desc
           DISPLAY BY NAME g_xmfl_d[l_ac].xmfl006_desc
      WHEN '2'   #產品分類
      WHEN '3'   #系列號
   END CASE
   
END FUNCTION

################################################################################
# Descriptions...: 計價單位開窗
# Memo...........:
# Usage..........: CALL axmt430_xmfl006_controlp(p_xmfl001,p_xmfl002,p_xmfl006)
#                  RETURNING r_xmfl006
# Input parameter: p_xmfl001      資料類型
#                : p_xmfl002      資料編號
#                : p_xmfl006      計價單位
# Return code....: r_xmfl006      開窗選擇的計價單位
# Date & Author..: 2015/06/08 By stellar
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt430_xmfl006_controlp(p_xmfl001,p_xmfl002,p_xmfl006)
DEFINE p_xmfl001         LIKE xmfl_t.xmfl001
DEFINE p_xmfl002         LIKE xmfl_t.xmfl002
DEFINE p_xmfl006         LIKE xmfl_t.xmfl006
DEFINE r_xmfl006         LIKE xmfl_t.xmfl006

   LET r_xmfl006 = ''
   
   IF cl_null(p_xmfl001) OR cl_null(p_xmfl002) THEN
      RETURN r_xmfl006
   END IF
   
   INITIALIZE g_qryparam.* TO NULL
   LET g_qryparam.state = 'i'
   LET g_qryparam.reqry = FALSE
   LET g_qryparam.default1 = p_xmfl006
   
   CASE p_xmfl001
      WHEN '1'   #料件
           LET g_qryparam.arg1 = p_xmfl002
           CALL q_imao002()
           LET r_xmfl006 = g_qryparam.return1
      WHEN '2'   #產品分類
           LET g_qryparam.where = " imao001 IN (SELECT imaa001 FROM imaa_t ",
                                  "              WHERE imaaent = g_enterprise AND imaa009 = '",p_xmfl002,"')"
           CALL q_imao002_01()
           LET r_xmfl006 = g_qryparam.return1
      WHEN '3'   #系列號
           LET g_qryparam.where = " imao001 IN (SELECT imaa001 FROM imaa_t ",
                                  "              WHERE imaaent = g_enterprise AND imaa127 = '",p_xmfl002,"')"
           CALL q_imao002_01()
           LET r_xmfl006 = g_qryparam.return1
   END CASE
   
   RETURN r_xmfl006
END FUNCTION

################################################################################
# Descriptions...: 計價單位檢查
# Memo...........:
# Usage..........: CALL axmt430_xmfl006_chk(p_xmfl001,p_xmfl002,p_xmfl006)
#                  RETURNING r_success
# Input parameter: p_xmfl001      資料類型
#                : p_xmfl002      資料編號
#                : p_xmfl006      計價單位
# Return code....: r_success      TRUE/FALSE
# Date & Author..: 2015/06/08 By stellar
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt430_xmfl006_chk(p_xmfl001,p_xmfl002,p_xmfl006)
DEFINE p_xmfl001         LIKE xmfl_t.xmfl001
DEFINE p_xmfl002         LIKE xmfl_t.xmfl002
DEFINE p_xmfl006         LIKE xmfl_t.xmfl006
DEFINE r_success         LIKE type_t.num5
DEFINE l_cnt             LIKE type_t.num5

   LET r_success = TRUE
   
   IF cl_null(p_xmfl001) OR cl_null(p_xmfl002) OR cl_null(p_xmfl006) THEN
      RETURN r_success
   END IF
   
   CASE p_xmfl001
      WHEN '1'   #料件
           INITIALIZE g_chkparam.* TO NULL
           LET g_chkparam.arg1 = p_xmfl002
           LET g_chkparam.arg2 = p_xmfl006
           IF cl_chk_exist("v_imao002") THEN
           ELSE
              LET r_success = FALSE
              RETURN r_success
           END IF
      WHEN '2'   #產品分類
           LET l_cnt = 0
           SELECT COUNT(*) INTO l_cnt
             FROM imaa_t,imao_t
            WHERE imaaent = imaoent
              AND imaa001 = imao001
              AND imaa009 = p_xmfl002
              AND imao002 = p_xmfl006
           IF cl_null(l_cnt) OR l_cnt <= 0 THEN
              INITIALIZE g_errparam TO NULL
              LET g_errparam.code = 'aim-00212'
              LET g_errparam.extend = p_xmfl006
              LET g_errparam.popup = TRUE
              
              CALL cl_err()
              LET r_success = FALSE
              RETURN r_success 
           END IF 
      WHEN '3'   #系列號
           LET l_cnt = 0
           SELECT COUNT(*) INTO l_cnt
             FROM imaa_t,imao_t
            WHERE imaaent = imaoent
              AND imaa001 = imao001
              AND imaa127 = p_xmfl002
              AND imao002 = p_xmfl006
           IF cl_null(l_cnt) OR l_cnt <= 0 THEN
              INITIALIZE g_errparam TO NULL
              LET g_errparam.code = 'aim-00212'
              LET g_errparam.extend = p_xmfl006
              LET g_errparam.popup = TRUE
              
              CALL cl_err()
              LET r_success = FALSE
              RETURN r_success 
           END IF 
   END CASE
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 檢查付款條件
# Memo...........:
# Usage..........: CALL axmt430_xmfj020_chk(p_xmfj020)
#                  RETURNING r_success
# Input parameter: p_xmfj020      付款條件
# Return code....: r_success      TRUE/FALSE
# Date & Author..: 2015/06/18 By stellar
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt430_xmfj020_chk(p_xmfj020)
DEFINE p_xmfj020         LIKE xmfj_t.xmfj020
DEFINE r_success         LIKE type_t.num5

   LET r_success = TRUE
   
   IF cl_null(p_xmfj020) THEN
      RETURN r_success
   END IF
   
   #校驗
   INITIALIZE g_chkparam.* TO NULL
   LET g_chkparam.arg1 = p_xmfj020
   #160318-00025#38  2016/04/21  by pengxin  add(S)
   LET g_errshow = TRUE #是否開窗 
   LET g_chkparam.err_str[1] = "apm-00186:sub-01302|aooi716|",cl_get_progname("aooi716",g_lang,"2"),"|:EXEPROGaooi716"
   #160318-00025#38  2016/04/21  by pengxin  add(E)
   IF cl_chk_exist("v_ooib002") THEN
   ELSE
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 單身欄位必輸
# Memo...........:
# Usage..........: CALL axmt430_set_required_b(p_cmd)
#                  
# Input parameter: p_cmd          a.新增 u.修改
# Return code....: 
# Date & Author..: 2015/08/04 By stellar
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt430_set_required_b(p_cmd)
DEFINE p_cmd             LIKE type_t.chr1

#   IF g_xmfl_d[l_ac].xmfl009 = 'N' THEN #160608-00008#1-mark
      IF g_xmfl_d[l_ac].xmfl005 = '1' THEN
         CALL cl_set_comp_required('xmfl007',TRUE)
      ELSE
         CALL cl_set_comp_required('xmfl008',TRUE)
      END IF
#   END IF  #160608-00008#1-mark
END FUNCTION

################################################################################
# Descriptions...: 單身欄位非必輸
# Memo...........:
# Usage..........: CALL axmt430_set_no_required_b(p_cmd)
#                  
# Input parameter: p_cmd          a.新增 u.修改
# Date & Author..: 2015/08/04 By stellar
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt430_set_no_required_b(p_cmd)
DEFINE p_cmd             LIKE type_t.chr1

   CALL cl_set_comp_required('xmfl007,xmfl008',FALSE)
   
END FUNCTION

################################################################################
# Descriptions...: 修改失效日期
# Memo...........:
# Usage..........: CALL axmt430_change_xmfj012()
#                  RETURNING r_success
# Return code....: r_success
# Date & Author..: 2016/04/28 By dorislai (#160324-00037#8)
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt430_change_xmfj012()
   DEFINE r_success     LIKE type_t.num5

   LET r_success = TRUE

   OPEN axmt430_cl USING g_enterprise,g_xmfj_m.xmfjdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'OPEN axmt430_cl:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()

      CLOSE axmt430_cl
      LET r_success = FALSE
      RETURN r_success
   END IF

   CALL axmt430_show()
   LET g_xmfjdocno_t = g_xmfj_m.xmfjdocno

   INPUT BY NAME g_xmfj_m.xmfj012 ATTRIBUTE(WITHOUT DEFAULTS)
      BEFORE INPUT 
         LET g_xmfj_m_t.* = g_xmfj_m.* 
         LET g_xmfj_m_o.* = g_xmfj_m.* 

      AFTER FIELD xmfj012
         IF NOT cl_null(g_xmfj_m.xmfj012) AND (g_xmfj_m_o.xmfj012 IS NULL OR
                                               g_xmfj_m_o.xmfj012 <> g_xmfj_m.xmfj012) THEN
            IF g_xmfj_m.xmfj012 < g_xmfj_m.xmfj011 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.extend = g_xmfj_m.xmfj011
               LET g_errparam.code   = 'ais-00048' 
               LET g_errparam.popup  = TRUE
               CALL cl_err()

               LET g_xmfj_m.xmfj012 = g_xmfj_m_o.xmfj012
               NEXT FIELD CURRENT
            END IF
         END IF

         LET g_xmfj_m_o.xmfj012 = g_xmfj_m.xmfj012

      AFTER INPUT
         IF INT_FLAG THEN
            EXIT INPUT
         END IF

      ON ACTION accept
         ACCEPT INPUT

      ON ACTION cancel
         LET INT_FLAG = TRUE
         EXIT INPUT

      ON ACTION exit
         LET INT_FLAG = TRUE
         EXIT INPUT

      ON ACTION close
         LET INT_FLAG =TRUE 
         EXIT INPUT

   END INPUT

   IF INT_FLAG THEN
      LET INT_FLAG = FALSE
      LET g_xmfj_m.* = g_xmfj_m_t.*
      CALL axmt430_show()

      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = ''
      LET g_errparam.code   = 9001
      LET g_errparam.popup  = TRUE
      CALL cl_err()

      CLOSE axmt430_cl
      LET r_success = FALSE
      RETURN r_success
   END IF

   UPDATE xmfj_t SET xmfj012 = g_xmfj_m.xmfj012
    WHERE xmfjent   = g_enterprise
      AND xmfjdocno = g_xmfjdocno_t
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'upd xmfj_t'
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.popup  = TRUE 
      CALL cl_err()

      CLOSE axmt430_cl
      LET r_success = FALSE
      RETURN r_success
   END IF

   CLOSE axmt430_cl

   RETURN r_success 
END FUNCTION

 
{</section>}
 
