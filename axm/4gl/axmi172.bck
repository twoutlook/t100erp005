#該程式未解開Section, 採用最新樣板產出!
{<section id="axmi172.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0006(2016-07-15 11:11:10), PR版次:0006(2016-10-18 15:00:20)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000274
#+ Filename...: axmi172
#+ Description: 集團銷售預測分配比率設定作業
#+ Creator....: 02295(2014-03-04 14:41:29)
#+ Modifier...: 06814 -SD/PR- 05384
 
{</section>}
 
{<section id="axmi172.global" >}
#應用 i07 樣板自動產生(Version:46)
#add-point:填寫註解說明
#+ Modifier...:   No.160318-00025#35   2016/04/15 BY pengxin  將重複內容的錯誤訊息置換為公用錯誤訊息(r.v)
#+ Modifier...:   No.161013-00051#1    2016/10/18 By shiun    整批調整據點組織開窗
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_xmie_m        RECORD
       xmie001 LIKE xmie_t.xmie001, 
   xmie001_desc LIKE type_t.chr80
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_xmie_d        RECORD
       xmieseq LIKE xmie_t.xmieseq, 
   xmie002 LIKE xmie_t.xmie002, 
   xmie002_desc LIKE type_t.chr500, 
   xmie003 LIKE xmie_t.xmie003, 
   xmie003_desc LIKE type_t.chr500, 
   xmie003_desc1 LIKE type_t.chr500, 
   xmie008 LIKE xmie_t.xmie008, 
   xmie008_desc LIKE type_t.chr500, 
   xmie004 LIKE xmie_t.xmie004, 
   xmie004_desc LIKE type_t.chr500, 
   xmie005 LIKE xmie_t.xmie005, 
   xmie005_desc LIKE type_t.chr500, 
   xmie006 LIKE xmie_t.xmie006, 
   xmie006_desc LIKE type_t.chr500, 
   xmie007 LIKE xmie_t.xmie007, 
   xmie007_desc LIKE type_t.chr500
       END RECORD
 
 
#add-point:自定義模組變數(Module Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
#單身 type 宣告
 TYPE type_g_xmif_d        RECORD
   xmif009 LIKE xmif_t.xmif009, 
   xmif009_desc LIKE type_t.chr500, 
   xmif010 LIKE xmif_t.xmif010, 
   xmif011 LIKE xmif_t.xmif011, 
   xmif012 LIKE xmif_t.xmif012, 
   xmif013 LIKE xmif_t.xmif013, 
   xmif014 LIKE xmif_t.xmif014
       END RECORD
DEFINE g_xmif_d          DYNAMIC ARRAY OF type_g_xmif_d
DEFINE g_xmif_d_t        type_g_xmif_d       
DEFINE g_wc2_table2          STRING
DEFINE g_rec_b2              LIKE type_t.num5
DEFINE g_wc3                 STRING 
DEFINE g_auto            LIKE type_t.chr1
#end add-point
 
 
#模組變數(Module Variables)
DEFINE g_xmie_m          type_g_xmie_m
DEFINE g_xmie_m_t        type_g_xmie_m
DEFINE g_xmie_m_o        type_g_xmie_m
DEFINE g_xmie_m_mask_o   type_g_xmie_m #轉換遮罩前資料
DEFINE g_xmie_m_mask_n   type_g_xmie_m #轉換遮罩後資料
 
   DEFINE g_xmie001_t LIKE xmie_t.xmie001
 
 
DEFINE g_xmie_d          DYNAMIC ARRAY OF type_g_xmie_d
DEFINE g_xmie_d_t        type_g_xmie_d
DEFINE g_xmie_d_o        type_g_xmie_d
DEFINE g_xmie_d_mask_o   DYNAMIC ARRAY OF type_g_xmie_d #轉換遮罩前資料
DEFINE g_xmie_d_mask_n   DYNAMIC ARRAY OF type_g_xmie_d #轉換遮罩後資料
 
 
DEFINE g_browser      DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位  
       b_statepic     LIKE type_t.chr50,
          b_xmie001 LIKE xmie_t.xmie001
       #,rank           LIKE type_t.num10
      END RECORD 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING 
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
 
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
 
DEFINE g_detail_cnt          LIKE type_t.num10             #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10             #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10             #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10             #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10             #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10             #Browser目前所在筆數(暫存用)
DEFINE g_current_page        LIKE type_t.num10             #目前所在頁數
DEFINE g_order               STRING                        #查詢排序欄位
DEFINE g_state               STRING                        
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page                    
DEFINE g_current_row         LIKE type_t.num10             #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入(僅用於三階)
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="axmi172.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
         
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axm","")
 
   #add-point:作業初始化 name="main.init"
         
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
         
   #end add-point
   LET g_forupd_sql = " SELECT xmie001,''", 
                      " FROM xmie_t",
                      " WHERE xmieent= ? AND xmie001=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
         
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmi172_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.xmie001,t1.xmial003",
               " FROM xmie_t t0",
                              " LEFT JOIN xmial_t t1 ON t1.xmialent="||g_enterprise||" AND t1.xmial001=t0.xmie001 AND t1.xmial002='"||g_dlang||"' ",
 
               " WHERE t0.xmieent = " ||g_enterprise|| " AND t0.xmie001 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE axmi172_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
                  
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axmi172 WITH FORM cl_ap_formpath("axm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axmi172_init()   
 
      #進入選單 Menu (="N")
      CALL axmi172_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
                  
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axmi172
      
   END IF 
   
   CLOSE axmi172_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
         
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="axmi172.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION axmi172_init()
   #add-point:init段define name="init.define_customerization"
   
   #end add-point   
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
         
   #end add-point
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill = "Y"
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   
   LET g_error_show = 1
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #add-point:畫面資料初始化 name="init.init"
         
   #end add-point
   
   CALL axmi172_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="axmi172.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION axmi172_ui_dialog()
   #add-point:ui_dialog段define name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE la_param  RECORD
          prog                  STRING,
          actionid              STRING,
          background            LIKE type_t.chr1,
          param                 DYNAMIC ARRAY OF STRING
                                END RECORD
   DEFINE ls_js                 STRING
   DEFINE li_idx                LIKE type_t.num10
   DEFINE ls_wc                 STRING
   DEFINE lb_first              BOOLEAN
   DEFINE l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
         
   #end add-point  
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   LET lb_first = TRUE
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
         
   #end add-point
   
   WHILE TRUE
      
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_xmie_m.* TO NULL
         CALL g_xmie_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL axmi172_init()
      END IF
 
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
        
         DISPLAY ARRAY g_xmie_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               #顯示單身筆數
               CALL axmi172_idx_chk()
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               CALL axmi172_ui_detailshow()
               
               #add-point:page1自定義行為 name="ui_dialog.body.before_row"
               IF NOT cl_null(g_detail_idx) AND g_detail_idx <> 0 THEN   
                  CALL axmi172_b2_fill()  
               END IF
               CALL axmi172_ref_show()               
               #end add-point
            
            BEFORE DISPLAY 
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
    
               #控制stus哪個按鈕可以按
               
               
            
 
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
               DISPLAY g_rec_b TO FORMONLY.cnt                        
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         DISPLAY ARRAY g_xmif_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b2) #page2  
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.idx
               #CALL axmi172_ui_detailshow()
               
               #add-point:page1自定義行為
               
               #end add-point
            
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               DISPLAY g_rec_b2 TO FORMONLY.cnt  
            #add-point:page1自定義行為
            
            #end add-point
               
         END DISPLAY         
         #end add-point
         
         
         BEFORE DIALOG
            #先填充browser資料
            CALL axmi172_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL g_curr_diag.setSelectionMode("s_detail1",1)         
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LET g_current_idx = g_browser.getLength()
            END IF 
            
            IF g_current_idx = 0 AND g_browser.getLength() > 0 THEN
               LET g_current_idx = 1 
            END IF
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL axmi172_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL axmi172_ui_detailshow() #Setting the current row 
            
            #add-point:ui_dialog段before dialog2 name="ui_dialog.before_dialog2"
                                    
            #end add-point
 
         
    
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL axmi172_fetch('F')
            LET g_current_row = g_current_idx         
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmi172_idx_chk()
            LET g_action_choice = ""
          
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL axmi172_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmi172_idx_chk()
            LET g_action_choice = ""
          
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL axmi172_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmi172_idx_chk()
            LET g_action_choice = ""
        
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL axmi172_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmi172_idx_chk()
            LET g_action_choice = ""
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL axmi172_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmi172_idx_chk()
            LET g_action_choice = ""
            
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_xmie_d)
                  LET g_export_id[1]   = "s_detail1"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  LET g_export_node[2] = base.typeInfo.create(g_xmif_d)
                  LET g_export_id[2]   = "s_detail2"

                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
          
         ON ACTION close
            LET INT_FLAG=FALSE        
            LET g_action_choice = "exit"
            EXIT DIALOG     
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
          
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
                CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD xmieseq
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
            
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL axmi172_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL axmi172_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = "-100" 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CLEAR FORM
               ELSE
                  CALL axmi172_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
               
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL axmi172_modify()
               #add-point:ON ACTION modify name="menu.modify"
                                             
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL axmi172_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
                                             
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL axmi172_delete()
               #add-point:ON ACTION delete name="menu.delete"
                                             
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL axmi172_insert()
               #add-point:ON ACTION insert name="menu.insert"
                                             
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
                                             
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL axmi172_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
                                             
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL axmi172_query()
               #add-point:ON ACTION query name="menu.query"
                                             
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
 
 
 
 
            END IF
 
 
 
 
         
         
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL axmi172_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL axmi172_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL axmi172_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow('')
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
         CONTINUE DIALOG
            
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
   
   CALL cl_set_act_visible("accept,cancel", TRUE)
   
END FUNCTION
 
{</section>}
 
{<section id="axmi172.browser_search" >}
#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION axmi172_browser_search(p_type)
   #add-point:browser_search段define name="browser_search.define_customerization"
   
   #end add-point   
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_search.define"
         
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axmi172.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION axmi172_browser_fill(ps_page_action)
   #add-point:browser_fill段define name="browser_fill.define_customerization"
   
   #end add-point   
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   DEFINE l_wc3            STRING         
   #end add-point
   
   #add-point:Function前置處理  name="browser_fill.before_browser_fill"
         
   #end add-point    
 
   LET l_searchcol = "xmie001"
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      LET l_wc = " 1=1"
   END IF
   IF cl_null(l_wc2) THEN  #p_wc 查詢條件
      LET l_wc2 = " 1=1"
   END IF
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT xmie001 ",
 
                      " FROM xmie_t ",
                      " ",
                      " ", 
 
 
 
                      " WHERE xmieent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("xmie_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT xmie001 ",
 
                      " FROM xmie_t ",
                      " ",
                      " ", 
 
 
                      " WHERE xmieent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("xmie_t")
   END IF 
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
 
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   IF g_wc2 <> " 1=1" OR NOT cl_null(g_wc2) THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE xmie001 ",
                      " FROM xmie_t ",
                      "  LEFT OUTER JOIN xmif_t ON xmieent=xmifent AND xmie001=xmif001 AND xmie002=xmif002 AND xmie003=xmif003",
                      "                            AND xmie004=xmif004 AND xmie005=xmif005 AND xmie006=xmif006 ",
                      "                            AND xmie007=xmif007 AND xmie008=xmif008 ",
                      " WHERE xmieent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2 
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE xmie001 ",
 
                      " FROM xmie_t ",
                      "  LEFT OUTER JOIN xmif_t ON xmieent=xmifent AND xmie001=xmif001 AND xmie002=xmif002 AND xmie003=xmif003",
                      "                            AND xmie004=xmif004 AND xmie005=xmif005 AND xmie006=xmif006 ",
                      "                            AND xmie007=xmif007 AND xmie008=xmif008 ",
                      " WHERE xmieent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED
 
   END IF 
   LET l_wc3 = g_wc3.trim() 
   IF g_wc3 <> " 1=1" OR NOT cl_null(g_wc3) THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = l_sub_sql, " AND ", l_wc3 
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = l_sub_sql
   END IF    
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
   
   #若超過最大顯示筆數
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt 
         LET g_errparam.code   = 9035
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   LET g_error_show = 0
 
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_xmie_m.* TO NULL
      CALL g_xmie_d.clear()        
 
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.xmie001 Browser欄位定義(取代原本bs_sql功能)
   LET g_sql  = "SELECT DISTINCT t0.xmie001",
                " FROM xmie_t t0",
                #" ",
                " ",
 
 
 
                
                " WHERE t0.xmieent = " ||g_enterprise|| " AND ", l_wc," AND ",l_wc2, cl_sql_add_filter("xmie_t")
 
   #add-point:browser_fill,sql_rank前 name="browser_fill.before_sql_rank"
   
   #end add-point
    
   #定義browser_fill sql
   LET g_sql= g_sql, " ORDER BY ",l_searchcol, " ", g_order
                
   #add-point:browser_fill,pre前 name="browser_fill.before_pre"
   
   #end add-point
   
   #LET g_sql = cl_sql_add_tabid(g_sql,"xmie_t")             #WC重組
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_xmie001 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
         
         
         #add-point:browser_fill段reference name="browser_fill.reference"
                  
         #end add-point  
      
         
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
      END FOREACH
      FREE browse_pre
   END IF
 
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_xmie001) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   IF g_browser.getLength() = 0 AND l_wc THEN
      INITIALIZE g_xmie_m.* TO NULL
      CALL g_xmie_d.clear()
 
      #add-point:browser_fill段after_clear name="browser_fill.after_clear"
      
      #end add-point 
      CLEAR FORM
   END IF
   
   LET g_header_cnt = g_browser.getLength()
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   LET g_browser_cnt = g_browser.getLength()
   CALL axmi172_fetch('')
   
   #筆數顯示
   LET g_browser_idx = g_current_idx 
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
 
   #add-point:browser_fill段結束前 name="browser_fill.after"
   
   #end add-point   
   
END FUNCTION
 
{</section>}
 
{<section id="axmi172.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION axmi172_ui_headershow()
   #add-point:ui_headershow段define name="ui_headershow.define_customerization"
   
   #end add-point    
   #add-point:ui_headershow段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
         
   #end add-point  
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_xmie_m.xmie001 = g_browser[g_current_idx].b_xmie001   
 
   EXECUTE axmi172_master_referesh USING g_xmie_m.xmie001 INTO g_xmie_m.xmie001,g_xmie_m.xmie001_desc 
 
   CALL axmi172_show()
   
END FUNCTION
 
{</section>}
 
{<section id="axmi172.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION axmi172_ui_detailshow()
   #add-point:ui_detailshow段define name="ui_detailshow.define_customerization"
   
   #end add-point
   #add-point:ui_detailshow段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
         
   #end add-point    
   
   #add-point:Function前置處理  name="ui_detailshow.before"
         
   #end add-point  
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
      #add-point:ui_detailshow段more name="ui_detailshow.more"
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx2) 
      #end add-point 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
  
   #end add-point 
   
END FUNCTION
 
{</section>}
 
{<section id="axmi172.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION axmi172_ui_browser_refresh()
   #add-point:ui_browser_refresh段define name="ui_browser_refresh.define_customerization"
   
   #end add-point   
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
         
   #end add-point 
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_xmie001 = g_xmie_m.xmie001 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數的顯示
   
END FUNCTION
 
{</section>}
 
{<section id="axmi172.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION axmi172_construct()
   #add-point:cs段define name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
         
   #end add-point 
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
   
   #清除畫面上相關資料
   CLEAR FORM                 
   INITIALIZE g_xmie_m.* TO NULL
   CALL g_xmie_d.clear()
 
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   LET g_action_choice = ""
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段construct外 name="cs.head.before"
         
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON xmie001
 
         BEFORE CONSTRUCT
            #add-point:cs段more_construct name="cs.head.before_construct"
                                    
            #end add-point 
            
                 #Ctrlp:construct.c.xmie001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmie001
            #add-point:ON ACTION controlp INFIELD xmie001 name="construct.c.xmie001"
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_xmia001_1()                                #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmie001              #顯示到畫面上
            NEXT FIELD xmie001                          #返回原欄位                                      
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmie001
            #add-point:BEFORE FIELD xmie001 name="construct.b.xmie001"
                                    
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmie001
            
            #add-point:AFTER FIELD xmie001 name="construct.a.xmie001"
                                    
            #END add-point
            
 
 
 
         
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table1 ON xmieseq,xmie002,xmie003,xmie008,xmie004,xmie005,xmie006,xmie007
           FROM s_detail1[1].xmieseq,s_detail1[1].xmie002,s_detail1[1].xmie003,s_detail1[1].xmie008, 
               s_detail1[1].xmie004,s_detail1[1].xmie005,s_detail1[1].xmie006,s_detail1[1].xmie007
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct name="cs.body.before_construct"
                                    
            #end add-point 
            
         #單身公用欄位開窗相關處理
         
           
         #單身一般欄位開窗相關處理
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmieseq
            #add-point:BEFORE FIELD xmieseq name="construct.b.page1.xmieseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmieseq
            
            #add-point:AFTER FIELD xmieseq name="construct.a.page1.xmieseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmieseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmieseq
            #add-point:ON ACTION controlp INFIELD xmieseq name="construct.c.page1.xmieseq"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmie002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmie002
            #add-point:ON ACTION controlp INFIELD xmie002 name="construct.c.page1.xmie002"
                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_rtax001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmie002  #顯示到畫面上

            NEXT FIELD xmie002                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmie002
            #add-point:BEFORE FIELD xmie002 name="construct.b.page1.xmie002"
                                    
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmie002
            
            #add-point:AFTER FIELD xmie002 name="construct.a.page1.xmie002"
                                    
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmie003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmie003
            #add-point:ON ACTION controlp INFIELD xmie003 name="construct.c.page1.xmie003"
                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmie003  #顯示到畫面上

            NEXT FIELD xmie003                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmie003
            #add-point:BEFORE FIELD xmie003 name="construct.b.page1.xmie003"
                                    
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmie003
            
            #add-point:AFTER FIELD xmie003 name="construct.a.page1.xmie003"
                                    
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmie008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmie008
            #add-point:ON ACTION controlp INFIELD xmie008 name="construct.c.page1.xmie008"
                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            #mod--161013-00051#1 By shiun--(S)
#            CALL q_ooef001_12()                           #呼叫開窗
            CALL q_ooef001_1()
            #mod--161013-00051#1 By shiun--(E)
            DISPLAY g_qryparam.return1 TO xmie008  #顯示到畫面上

            NEXT FIELD xmie008                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmie008
            #add-point:BEFORE FIELD xmie008 name="construct.b.page1.xmie008"
                                    
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmie008
            
            #add-point:AFTER FIELD xmie008 name="construct.a.page1.xmie008"
                                    
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmie004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmie004
            #add-point:ON ACTION controlp INFIELD xmie004 name="construct.c.page1.xmie004"
                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_xmij001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmie004  #顯示到畫面上

            NEXT FIELD xmie004                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmie004
            #add-point:BEFORE FIELD xmie004 name="construct.b.page1.xmie004"
                                    
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmie004
            
            #add-point:AFTER FIELD xmie004 name="construct.a.page1.xmie004"
                                    
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmie005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmie005
            #add-point:ON ACTION controlp INFIELD xmie005 name="construct.c.page1.xmie005"
                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_13()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmie005  #顯示到畫面上

            NEXT FIELD xmie005                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmie005
            #add-point:BEFORE FIELD xmie005 name="construct.b.page1.xmie005"
                                    
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmie005
            
            #add-point:AFTER FIELD xmie005 name="construct.a.page1.xmie005"
                                    
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmie006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmie006
            #add-point:ON ACTION controlp INFIELD xmie006 name="construct.c.page1.xmie006"
                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			   #160621-00003#3 20160627 modify by beckxie---S
			   #LET g_qryparam.arg1 = "275"
            #CALL q_oocq002()                           #呼叫開窗
            LET g_qryparam.arg1 = "1"
            CALL q_oojd001_1()
            #160621-00003#3 20160627 modify by beckxie---E
            DISPLAY g_qryparam.return1 TO xmie006  #顯示到畫面上

            NEXT FIELD xmie006                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmie006
            #add-point:BEFORE FIELD xmie006 name="construct.b.page1.xmie006"
                                    
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmie006
            
            #add-point:AFTER FIELD xmie006 name="construct.a.page1.xmie006"
                                    
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmie007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmie007
            #add-point:ON ACTION controlp INFIELD xmie007 name="construct.c.page1.xmie007"
                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmie007  #顯示到畫面上

            NEXT FIELD xmie007                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmie007
            #add-point:BEFORE FIELD xmie007 name="construct.b.page1.xmie007"
                                    
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmie007
            
            #add-point:AFTER FIELD xmie007 name="construct.a.page1.xmie007"
                                    
            #END add-point
            
 
 
   
       
      END CONSTRUCT
  
 
  
      #add-point:cs段more_construct name="cs.more_construct"
      CONSTRUCT g_wc2_table2 ON xmif009,xmif010,xmif011,xmif012,xmif013,xmif014
           FROM s_detail2[1].xmif009,s_detail2[1].xmif010,s_detail2[1].xmif011,s_detail2[1].xmif012, 
               s_detail2[1].xmif013,s_detail2[1].xmif014
          ON ACTION controlp INFIELD xmif009    
             #開窗c段
 		     INITIALIZE g_qryparam.* TO NULL
             LET g_qryparam.state = 'c'
 			 LET g_qryparam.reqry = FALSE
             #mod--161013-00051#1 By shiun--(S)
#             CALL q_ooef001_12()                           #呼叫開窗
             CALL q_ooef001_1()
             #mod--161013-00051#1 By shiun--(E)
             DISPLAY g_qryparam.return1 TO xmif009  #顯示到畫面上
             NEXT FIELD xmif009                     #返回原欄位

      END CONSTRUCT                  
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:ui_dialog段b_dialog name="cs.before_dialog"
                           
         #end add-point
      
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
   
   #add-point:cs段after_construct name="cs.after_construct"
   LET g_wc3 = g_wc2_table2      
   #end add-point
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   LET g_current_row = 1
 
   IF INT_FLAG THEN
      RETURN
   END IF
   
   LET g_wc_filter = ""
 
END FUNCTION
 
{</section>}
 
{<section id="axmi172.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION axmi172_query()
   #add-point:query段define name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
         
   #end add-point
   
   #add-point:Function前置處理  name="query.befroe_query"
         
   #end add-point 
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
   
   LET ls_wc = g_wc
 
   LET INT_FLAG = 0    
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_xmie_d.clear()
 
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL axmi172_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL axmi172_browser_fill(g_wc)
      CALL axmi172_fetch("")
      RETURN
   END IF
   
   LET l_ac = 1
   LET g_detail_cnt = 0
   LET g_current_idx = 0
   LET g_current_row = 0
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   LET g_error_show = 1
   CALL axmi172_browser_fill("F")
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||")")
   
   #備份搜尋條件
   LET ls_wc = g_wc
   
   IF g_browser.getLength() = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL axmi172_fetch("F") 
   END IF
   
   CALL axmi172_idx_chk()
   
   LET g_wc_filter = ""
   
END FUNCTION
 
{</section>}
 
{<section id="axmi172.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION axmi172_fetch(p_flag)
   #add-point:fetch段define name="fetch.define_customerization"
   
   #end add-point   
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
         
   #end add-point
   
   #add-point:Function前置處理  name="fetch.before_fetch"
         
   #end add-point    
 
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L' 
         LET g_current_idx = g_header_cnt
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,': ' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF
            
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
            LET g_current_idx = g_jump
         END IF
 
         LET g_no_ask = FALSE  
   END CASE    
   
   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   #CALL axmi172_browser_fill(p_flag)
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身筆數顯示
   DISPLAY g_detail_cnt TO FORMONLY.cnt                      #設定page 總筆數 
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart + g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數
   
   CALL cl_navigator_setting(g_current_idx,g_detail_cnt)
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_xmie_m.xmie001 = g_browser[g_current_idx].b_xmie001
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE axmi172_master_referesh USING g_xmie_m.xmie001 INTO g_xmie_m.xmie001,g_xmie_m.xmie001_desc 
 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "xmie_t:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      INITIALIZE g_xmie_m.* TO NULL
      RETURN
   END IF
 
   #遮罩相關處理
   LET g_xmie_m_mask_o.* =  g_xmie_m.*
   CALL axmi172_xmie_t_mask()
   LET g_xmie_m_mask_n.* =  g_xmie_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL axmi172_set_act_visible()
   CALL axmi172_set_act_no_visible()
 
   #add-point:fetch結束前 name="fetch.after"
   
   #end add-point
 
   #保存單頭舊值
   LET g_xmie_m_t.* = g_xmie_m.*
   LET g_xmie_m_o.* = g_xmie_m.*
   
   #重新顯示   
   CALL axmi172_show()
 
   
 
END FUNCTION
 
{</section>}
 
{<section id="axmi172.insert" >}
#+ 資料新增
PRIVATE FUNCTION axmi172_insert()
   #add-point:insert段define name="insert.define_customerization"
   
   #end add-point   
   #add-point:insert段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
         
   #end add-point
   
   #add-point:Function前置處理  name="insert.before"
   CALL g_xmif_d.clear()      
   #end add-point    
   
   #清除相關資料
   CLEAR FORM                    
   CALL g_xmie_d.clear()
 
 
   INITIALIZE g_xmie_m.* LIKE xmie_t.*             #DEFAULT 設定
   LET g_xmie001_t = NULL
 
   LET g_master_insert = FALSE
   CALL s_transaction_begin()
   WHILE TRUE
     
      #單頭預設值
      
     
      #add-point:單頭預設值 name="insert.default"
      LET g_auto = 'N' 
      LET g_xmie_m_t.* = g_xmie_m.*
      #end add-point 
 
      CALL axmi172_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
                  
      #end add-point
      
      IF INT_FLAG AND NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_xmie_m.* TO NULL
         INITIALIZE g_xmie_d TO NULL
 
         CALL axmi172_show()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         LET g_xmie_m.* = g_xmie_m_t.*
         CALL axmi172_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN
      END IF
    
      #CALL g_xmie_d.clear()
 
      
      #add-point:單頭輸入後2 name="insert.after_insert2"
                  
      #end add-point
 
      LET g_rec_b = 0
      EXIT WHILE
      
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL axmi172_set_act_visible()
   CALL axmi172_set_act_no_visible()
 
   #將新增的資料併入搜尋條件中
   LET g_state = "insert"
   
   LET g_xmie001_t = g_xmie_m.xmie001
 
   
   #組合新增資料的條件
   LET g_add_browse = " xmieent = " ||g_enterprise|| " AND",
                      " xmie001 = '", g_xmie_m.xmie001, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axmi172_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CALL axmi172_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE axmi172_master_referesh USING g_xmie_m.xmie001 INTO g_xmie_m.xmie001,g_xmie_m.xmie001_desc 
 
   
   #遮罩相關處理
   LET g_xmie_m_mask_o.* =  g_xmie_m.*
   CALL axmi172_xmie_t_mask()
   LET g_xmie_m_mask_n.* =  g_xmie_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_xmie_m.xmie001,g_xmie_m.xmie001_desc
   
   #功能已完成,通報訊息中心
   CALL axmi172_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="axmi172.modify" >}
#+ 資料修改
PRIVATE FUNCTION axmi172_modify()
   #add-point:modify段define name="modify.define_customerization"
   
   #end add-point    
   #add-point:modify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
         
   #end add-point  
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   IF g_xmie_m.xmie001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL  
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
   LET g_xmie001_t = g_xmie_m.xmie001
 
   CALL s_transaction_begin()
   
   OPEN axmi172_cl USING g_enterprise,g_xmie_m.xmie001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axmi172_cl:" 
      LET g_errparam.code   =  STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE axmi172_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axmi172_master_referesh USING g_xmie_m.xmie001 INTO g_xmie_m.xmie001,g_xmie_m.xmie001_desc 
 
   
   #遮罩相關處理
   LET g_xmie_m_mask_o.* =  g_xmie_m.*
   CALL axmi172_xmie_t_mask()
   LET g_xmie_m_mask_n.* =  g_xmie_m.*
   
   CALL s_transaction_end('Y','0')
 
   CALL axmi172_show()
   WHILE TRUE
      LET g_xmie001_t = g_xmie_m.xmie001
 
 
      #add-point:modify段修改前 name="modify.before_input"
                  
      #end add-point
      
      CALL axmi172_input("u")     #欄位更改
      
      #add-point:modify段修改後 name="modify.after_input"
                  
      #end add-point
      
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         LET g_xmie_m.* = g_xmie_m_t.*
         CALL axmi172_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更(更新單身table的key欄位值)
      IF g_xmie_m.xmie001 != g_xmie001_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單頭(偽)修改前 name="modify.b_key_update"
                           
         #end add-point
         
         #add-point:單頭(偽)修改中 name="modify.m_key_update"
                           
         #end add-point
         
 
         
         #add-point:單頭(偽)修改後 name="modify.a_key_update"
                           
         #end add-point
         
      END IF
      
      EXIT WHILE
      
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL axmi172_set_act_visible()
   CALL axmi172_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " xmieent = " ||g_enterprise|| " AND",
                      " xmie001 = '", g_xmie_m.xmie001, "' "
 
   #填到對應位置
   CALL axmi172_browser_fill("")
 
   CALL axmi172_idx_chk()
 
   CLOSE axmi172_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL axmi172_msgcentre_notify('modify')
   
END FUNCTION   
 
{</section>}
 
{<section id="axmi172.input" >}
#+ 資料輸入
PRIVATE FUNCTION axmi172_input(p_cmd)
   #add-point:input段define name="input.define_customerization"
   
   #end add-point   
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num10               #未取消的ARRAY CNT 
   DEFINE  l_n                   LIKE type_t.num10               #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10               #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE l_sum                  LIKE xmif_t.xmif010   
   DEFINE l_msg1                 LIKE gzze_t.gzze003   #160621-00003#3 20160629 add by beckxie
   #end add-point
   
   #add-point:Function前置處理  name="input.pre_function"
   #160621-00003#3 20160629 add by beckxie---S
   LET l_msg1 = ''
   SELECT gzze003 INTO l_msg1 FROM gzze_t WHERE gzze001 = 'aoo-00708' AND gzze002 = g_dlang 
   #160621-00003#3 20160629 add by beckxie---E
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xmie_m.xmie001,g_xmie_m.xmie001_desc
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF  
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
         LET g_forupd_sql = "SELECT xmif009,'',xmif010,xmif011,xmif012,xmif013,xmif014 FROM  
       xmif_t WHERE xmifent=? AND xmif001=? AND xmifseq=? AND xmif009 = ? FOR UPDATE"
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE axmi172_bcl2 CURSOR FROM g_forupd_sql      # LOCK CURSOR   
   #end add-point 
   LET g_forupd_sql = "SELECT xmieseq,xmie002,xmie003,xmie008,xmie004,xmie005,xmie006,xmie007 FROM xmie_t  
       WHERE xmieent=? AND xmie001=? AND xmieseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
         
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmi172_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
 
 
   
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL axmi172_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
         
   #end add-point
   CALL axmi172_set_no_entry(p_cmd)
   #add-point:set_no_entry後 name="input.after_set_no_entry"
         
   #end add-point
 
   DISPLAY BY NAME g_xmie_m.xmie001
   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:進入修改段前 name="input.before_input"
   LET g_errshow = 1       
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="axmi172.input.head" >}
   
      #單頭段
      INPUT BY NAME g_xmie_m.xmie001 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂單頭ACTION
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION auto_detail
            LET g_action_choice="auto_detail"
            IF cl_auth_chk_act("auto_detail") THEN
               
               #add-point:ON ACTION auto_detail name="input.master_input.auto_detail"
               LET g_auto = 'Y'
               CALL axmi172_auto_detail()
               IF g_auto = 'Y' THEN
                  NEXT FIELD xmie002
               END IF   
               #END add-point
            END IF
 
 
 
 
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:單頭input前 name="input.head.b_input"
                                    
            #end add-point
          
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmie001
            
            #add-point:AFTER FIELD xmie001 name="input.a.xmie001"
            
            CALL axmi172_xmie001_desc()            
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xmie_m.xmie001) THEN 
               IF (p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xmie_m.xmie001 != g_xmie001_t ))) AND g_auto = 'N' THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmie_t WHERE "||"xmieent = '" ||g_enterprise|| "' AND "||"xmie001 = '"||g_xmie_m.xmie001 ||"'",'std-00004',0) THEN 
                     LET g_xmie_m.xmie001 = g_xmie_m_t.xmie001
                     NEXT FIELD CURRENT
                  END IF
               END IF
               
            END IF
            IF NOT cl_null(g_xmie_m.xmie001) THEN 
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmie_m.xmie001

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_xmia001_1") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_xmie_m.xmie001 = g_xmie_m_t.xmie001 
                  NEXT FIELD CURRENT
               END IF
            END IF            



            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmie001
            #add-point:BEFORE FIELD xmie001 name="input.b.xmie001"
            CALL axmi172_xmie001_desc()                         
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmie001
            #add-point:ON CHANGE xmie001 name="input.g.xmie001"
                                    
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.xmie001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmie001
            #add-point:ON ACTION controlp INFIELD xmie001 name="input.c.xmie001"
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmie_m.xmie001             #給予default值

            #給予arg

            CALL q_xmia001_1()                                #呼叫開窗

            LET g_xmie_m.xmie001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmie_m.xmie001 TO xmie001              #顯示到畫面上

            NEXT FIELD xmie001                          #返回原欄位                                    
            #END add-point
 
 
 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            
            IF s_transaction_chk("N",0) THEN
                CALL s_transaction_begin()
            END IF
            
            #錯誤訊息統整顯示
            #CALL cl_err_collect_show()
            #CALL cl_showmsg()
            DISPLAY BY NAME g_xmie_m.xmie001             
 
 
            #add-point:單頭修改前 name="input.head.b_after_input"
            
            #end add-point
 
            IF p_cmd = 'u' THEN
               #add-point:單頭修改前 name="input.head.b_update"
                                             
               #end add-point
            
               #將遮罩欄位還原
               CALL axmi172_xmie_t_mask_restore('restore_mask_o')
            
               UPDATE xmie_t SET (xmie001) = (g_xmie_m.xmie001)
                WHERE xmieent = g_enterprise AND xmie001 = g_xmie001_t
 
               #add-point:單頭修改中 name="input.head.m_update"
                                             
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL s_transaction_end('N','0')
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmie_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmie_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmie_m.xmie001
               LET gs_keys_bak[1] = g_xmie001_t
               LET gs_keys[2] = g_xmie_d[g_detail_idx].xmieseq
               LET gs_keys_bak[2] = g_xmie_d_t.xmieseq
               CALL axmi172_update_b('xmie_t',gs_keys,gs_keys_bak,"'1'")
                     
 
                     #add-point:單頭修改後 name="input.head.a_update"
                                                               
                     #end add-point
    
                     #頭先不紀錄
                     #LET g_log1 = util.JSON.stringify(g_xmie_m_t)
                     #LET g_log2 = util.JSON.stringify(g_xmie_m)
                     #IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                     #   CALL s_transaction_end('N','0')
                     #ELSE
                        CALL s_transaction_end('Y','0')
                     #END IF
               END CASE
            
               #將遮罩欄位進行遮蔽
               CALL axmi172_xmie_t_mask_restore('restore_mask_n')
            
            ELSE    
               #add-point:單頭新增 name="input.head.a_insert"
                                             
               #end add-point
               
               #多語言處理
               
                         
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL axmi172_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            END IF
 
           LET g_xmie001_t = g_xmie_m.xmie001
 
           
           IF g_xmie_d.getLength() = 0 THEN
              NEXT FIELD xmieseq
           END IF
 
      END INPUT
 
{</section>}
 
{<section id="axmi172.input.body" >}
      #Page1 預設值產生於此處
      INPUT ARRAY g_xmie_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂單身ACTION
         
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION auto_detail
            LET g_action_choice="auto_detail"
            IF cl_auth_chk_act("auto_detail") THEN
               
               #add-point:ON ACTION auto_detail name="input.detail_input.page1.auto_detail"
               CALL axmi172_auto_detail()
               CALL axmi172_b_fill(g_wc2)
               CALL axmi172_ref_show()
               LET l_ac = 1
               LET g_detail_idx = l_ac
               CALL fgl_set_arr_curr(l_ac)
               LET g_xmie_d_t.* = g_xmie_d[l_ac].*
               CALL axmi172_b2_fill()
               CALL axmi172_ref_show()
               #END add-point
            END IF
 
 
 
 
 
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xmie_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axmi172_b_fill(g_wc2) #test 
            #如果一直都在單頭則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm' 
            #add-point:資料輸入前 name="input.body.before_input"
                                    
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmi172_idx_chk()
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN axmi172_cl USING g_enterprise,g_xmie_m.xmie001                          
               IF STATUS THEN
                  CLOSE axmi172_cl
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN axmi172_cl:" 
                  LET g_errparam.code   = STATUS 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            IF g_rec_b >= l_ac 
               AND g_xmie_d[l_ac].xmieseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xmie_d_t.* = g_xmie_d[l_ac].*  #BACKUP
               LET g_xmie_d_o.* = g_xmie_d[l_ac].*  #BACKUP
               CALL axmi172_set_entry_b(l_cmd)
               #add-point:set_entry_b後 name="input.body.before_row.set_entry_b"
               
               #end add-point
               CALL axmi172_set_no_entry_b(l_cmd)
               OPEN axmi172_bcl USING g_enterprise,g_xmie_m.xmie001,
 
                                                g_xmie_d_t.xmieseq
 
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN axmi172_bcl:" 
                  LET g_errparam.code   =  STATUS 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axmi172_bcl INTO g_xmie_d[l_ac].xmieseq,g_xmie_d[l_ac].xmie002,g_xmie_d[l_ac].xmie003, 
                      g_xmie_d[l_ac].xmie008,g_xmie_d[l_ac].xmie004,g_xmie_d[l_ac].xmie005,g_xmie_d[l_ac].xmie006, 
                      g_xmie_d[l_ac].xmie007
                  IF SQLCA.sqlcode THEN
                      INITIALIZE g_errparam TO NULL 
                      LET g_errparam.extend = g_xmie_d_t.xmieseq,":",SQLERRMESSAGE 
                      LET g_errparam.code   = SQLCA.sqlcode 
                      LET g_errparam.popup  = TRUE 
                      CALL cl_err()
                      LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_xmie_d_mask_o[l_ac].* =  g_xmie_d[l_ac].*
                  CALL axmi172_xmie_t_mask()
                  LET g_xmie_d_mask_n[l_ac].* =  g_xmie_d[l_ac].*
                  
                  CALL axmi172_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            IF NOT cl_null(l_ac) AND l_ac <> 0 THEN   
               CALL axmi172_b2_fill() 
               CALL axmi172_ref_show()
            END IF                                     
            #end add-point  
            
 
        
         BEFORE INSERT
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            INITIALIZE g_xmie_d_t.* TO NULL
            INITIALIZE g_xmie_d_o.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmie_d[l_ac].* TO NULL
            #公用欄位預設值
              
            #一般欄位預設值
            
            
            #add-point:modify段before備份 name="input.body.before_insert.before_bak"
            
            #end add-point
            LET g_xmie_d_t.* = g_xmie_d[l_ac].*     #新輸入資料
            LET g_xmie_d_o.* = g_xmie_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axmi172_set_entry_b(l_cmd)
            #add-point:set_entry_b後 name="input.body.before_insert.set_entry_b"
            
            #end add-point
            CALL axmi172_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmie_d[li_reproduce_target].* = g_xmie_d[li_reproduce].*
 
               LET g_xmie_d[g_xmie_d.getLength()].xmieseq = NULL
 
            END IF
            
 
            #add-point:modify段before insert name="input.body.before_insert"
            LET g_xmie_d[l_ac]. xmie003 = ' '
            LET g_xmie_d[l_ac]. xmie004 = ' '
            LET g_xmie_d[l_ac]. xmie005 = ' '
            LET g_xmie_d[l_ac]. xmie006 = ' '
            LET g_xmie_d[l_ac]. xmie007 = ' '
            LET g_xmie_d[l_ac]. xmie008 = ' '
            IF cl_null(g_xmie_d[l_ac].xmieseq) THEN
               SELECT MAX(xmieseq) INTO g_xmie_d[l_ac].xmieseq
                 FROM xmie_t
                WHERE xmieent = g_enterprise
                  AND xmie001 = g_xmie_m.xmie001
               IF cl_null(g_xmie_d[l_ac].xmieseq) THEN
                  LET g_xmie_d[l_ac].xmieseq = 1
               ELSE
                  LET g_xmie_d[l_ac].xmieseq = g_xmie_d[l_ac].xmieseq + 1
               END IF
            END IF            
            LET g_xmie_d_t.* = g_xmie_d[l_ac].*
            #end add-point  
 
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM xmie_t 
             WHERE xmieent = g_enterprise AND xmie001 = g_xmie_m.xmie001
 
               AND xmieseq = g_xmie_d[l_ac].xmieseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               CALL s_transaction_begin()
               #add-point:單身新增前 name="input.body.b_insert"
               IF cl_null(g_xmie_d[l_ac].xmie002) AND cl_null(g_xmie_d[l_ac].xmie003) 
                  AND cl_null(g_xmie_d[l_ac].xmie004) AND cl_null(g_xmie_d[l_ac].xmie005)
                  AND cl_null(g_xmie_d[l_ac].xmie006) AND cl_null(g_xmie_d[l_ac].xmie007)
                  AND cl_null(g_xmie_d[l_ac].xmie008) THEN
                  CANCEL INSERT
               END IF                                              
               #end add-point
               INSERT INTO xmie_t
                           (xmieent,
                            xmie001,
                            xmieseq
                            ,xmie002,xmie003,xmie008,xmie004,xmie005,xmie006,xmie007) 
                     VALUES(g_enterprise,
                            g_xmie_m.xmie001,
                            g_xmie_d[l_ac].xmieseq
                            ,g_xmie_d[l_ac].xmie002,g_xmie_d[l_ac].xmie003,g_xmie_d[l_ac].xmie008,g_xmie_d[l_ac].xmie004, 
                                g_xmie_d[l_ac].xmie005,g_xmie_d[l_ac].xmie006,g_xmie_d[l_ac].xmie007) 
 
               #add-point:單身新增中 name="input.body.m_insert"
                                             
               #end add-point
               LET p_cmd = 'u'
               LET g_master_insert = TRUE
            ELSE    
               INITIALIZE g_xmie_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmie_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert"
                                             
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b=g_rec_b+1
               DISPLAY g_rec_b TO FORMONLY.cnt
            END IF
            
            #add-point:單身新增後 name="input.body.after_insert"
                                    
            #end add-point
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete"
                                             
               #end add-point
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   =  -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               IF axmi172_before_delete() THEN 
                  
 
 
                  #取得該筆資料key值
                  INITIALIZE gs_keys TO NULL
                  LET gs_keys[01] = g_xmie_m.xmie001
 
                  LET gs_keys[gs_keys.getLength()+1] = g_xmie_d_t.xmieseq
 
 
                  #刪除下層單身
                  IF NOT axmi172_key_delete_b(gs_keys,'xmie_t') THEN
                     CALL s_transaction_end('N','0')
                     CLOSE axmi172_bcl
                     CANCEL DELETE
                  END IF
                  CALL s_transaction_end('Y','0')
               ELSE 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF 
               CLOSE axmi172_bcl
               LET l_count = g_xmie_d.getLength()
            END IF 
            
            #add-point:單身刪除後 name="input.body.a_delete"
                                    
            #end add-point
              
         AFTER DELETE 
            IF l_cmd <> 'd' THEN
               #add-point:單身AFTER DELETE  name="input.body.after_delete"
                                    
               #end add-point
            END IF
            #如果是最後一筆
            IF l_ac = (g_xmie_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
            
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmieseq
            #add-point:BEFORE FIELD xmieseq name="input.b.page1.xmieseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmieseq
            
            #add-point:AFTER FIELD xmieseq name="input.a.page1.xmieseq"
            #此段落由子樣板a05產生
            IF  g_xmie_m.xmie001 IS NOT NULL AND g_xmie_d[g_detail_idx].xmieseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmie_m.xmie001 != g_xmie001_t OR g_xmie_d[g_detail_idx].xmieseq != g_xmie_d_t.xmieseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmie_t WHERE "||"xmieent = '" ||g_enterprise|| "' AND "||"xmie001 = '"||g_xmie_m.xmie001 ||"' AND "|| "xmieseq = '"||g_xmie_d[g_detail_idx].xmieseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmieseq
            #add-point:ON CHANGE xmieseq name="input.g.page1.xmieseq"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmie002
            
            #add-point:AFTER FIELD xmie002 name="input.a.page1.xmie002"
                
            CALL axmi172_xmie002_desc()  
            #此段落由子樣板a05產生
            IF  g_xmie_m.xmie001 IS NOT NULL AND NOT cl_null(g_xmie_d[g_detail_idx].xmie002) AND g_xmie_d[g_detail_idx].xmie003 IS NOT NULL AND g_xmie_d[g_detail_idx].xmie004 IS NOT NULL AND g_xmie_d[g_detail_idx].xmie005 IS NOT NULL AND g_xmie_d[g_detail_idx].xmie006 IS NOT NULL AND g_xmie_d[g_detail_idx].xmie007 IS NOT NULL AND g_xmie_d[g_detail_idx].xmie008 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmie_m.xmie001 != g_xmie001_t OR g_xmie_d[g_detail_idx].xmie002 != g_xmie_d_t.xmie002 OR g_xmie_d[g_detail_idx].xmie003 != g_xmie_d_t.xmie003 OR g_xmie_d[g_detail_idx].xmie004 != g_xmie_d_t.xmie004 OR g_xmie_d[g_detail_idx].xmie005 != g_xmie_d_t.xmie005 OR g_xmie_d[g_detail_idx].xmie006 != g_xmie_d_t.xmie006 OR g_xmie_d[g_detail_idx].xmie007 != g_xmie_d_t.xmie007 OR g_xmie_d[g_detail_idx].xmie008 != g_xmie_d_t.xmie008)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmie_t WHERE "||"xmieent = '" ||g_enterprise|| "' AND "||"xmie001 = '"||g_xmie_m.xmie001 ||"' AND "|| "xmie002 = '"||g_xmie_d[g_detail_idx].xmie002 ||"' AND "|| "xmie003 = '"||g_xmie_d[g_detail_idx].xmie003 ||"' AND "|| "xmie004 = '"||g_xmie_d[g_detail_idx].xmie004 ||"' AND "|| "xmie005 = '"||g_xmie_d[g_detail_idx].xmie005 ||"' AND "|| "xmie006 = '"||g_xmie_d[g_detail_idx].xmie006 ||"' AND "|| "xmie007 = '"||g_xmie_d[g_detail_idx].xmie007 ||"' AND "|| "xmie008 = '"||g_xmie_d[g_detail_idx].xmie008 ||"'",'std-00004',0) THEN 
                     LET g_xmie_d[l_ac].xmie002 = g_xmie_d_t.xmie002 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            IF NOT cl_null(g_xmie_d[l_ac].xmie002) AND g_xmie_d[l_ac].xmie002 <> 'ALL' THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmie_d[l_ac].xmie002
               #160318-00025#35  2016/05/15  by pengxin  add(S)
               LET g_errshow = TRUE #是否開窗 
               LET g_chkparam.err_str[1] = "anm-00081:sub-01302|aimi010|",cl_get_progname("aimi010",g_lang,"2"),"|:EXEPROGaimi010"
               #160318-00025#35  2016/05/15  by pengxin  add(E)
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_rtax001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_xmie_d[l_ac].xmie002 = g_xmie_d_t.xmie002 
                  NEXT FIELD CURRENT
               END IF
            ELSE
               IF cl_null(g_xmie_d[l_ac].xmie002) THEN 
                  LET g_xmie_d[l_ac].xmie002 = 'ALL'
               END IF   
            END IF 





            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmie002
            #add-point:BEFORE FIELD xmie002 name="input.b.page1.xmie002"
            CALL axmi172_xmie002_desc()                        
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmie002
            #add-point:ON CHANGE xmie002 name="input.g.page1.xmie002"
                                    
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmie003
            
            #add-point:AFTER FIELD xmie003 name="input.a.page1.xmie003"
                
            CALL axmi172_xmie003_desc()                
            IF NOT cl_null(g_xmie_d[l_ac].xmie003) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmie_d[l_ac].xmie003

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_imaa001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_xmie_d[l_ac].xmie003 = g_xmie_d_t.xmie003 
                  NEXT FIELD CURRENT
               END IF
            ELSE
               LET g_xmie_d[l_ac].xmie003 = ' '            
            END IF 


            #此段落由子樣板a05產生
            IF  g_xmie_m.xmie001 IS NOT NULL AND NOT cl_null(g_xmie_d[g_detail_idx].xmie002) AND g_xmie_d[g_detail_idx].xmie003 IS NOT NULL AND g_xmie_d[g_detail_idx].xmie004 IS NOT NULL AND g_xmie_d[g_detail_idx].xmie005 IS NOT NULL AND g_xmie_d[g_detail_idx].xmie006 IS NOT NULL AND g_xmie_d[g_detail_idx].xmie007 IS NOT NULL AND g_xmie_d[g_detail_idx].xmie008 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmie_m.xmie001 != g_xmie001_t OR g_xmie_d[g_detail_idx].xmie002 != g_xmie_d_t.xmie002 OR g_xmie_d[g_detail_idx].xmie003 != g_xmie_d_t.xmie003 OR g_xmie_d[g_detail_idx].xmie004 != g_xmie_d_t.xmie004 OR g_xmie_d[g_detail_idx].xmie005 != g_xmie_d_t.xmie005 OR g_xmie_d[g_detail_idx].xmie006 != g_xmie_d_t.xmie006 OR g_xmie_d[g_detail_idx].xmie007 != g_xmie_d_t.xmie007 OR g_xmie_d[g_detail_idx].xmie008 != g_xmie_d_t.xmie008)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmie_t WHERE "||"xmieent = '" ||g_enterprise|| "' AND "||"xmie001 = '"||g_xmie_m.xmie001 ||"' AND "|| "xmie002 = '"||g_xmie_d[g_detail_idx].xmie002 ||"' AND "|| "xmie003 = '"||g_xmie_d[g_detail_idx].xmie003 ||"' AND "|| "xmie004 = '"||g_xmie_d[g_detail_idx].xmie004 ||"' AND "|| "xmie005 = '"||g_xmie_d[g_detail_idx].xmie005 ||"' AND "|| "xmie006 = '"||g_xmie_d[g_detail_idx].xmie006 ||"' AND "|| "xmie007 = '"||g_xmie_d[g_detail_idx].xmie007 ||"' AND "|| "xmie008 = '"||g_xmie_d[g_detail_idx].xmie008 ||"'",'std-00004',0) THEN 
                     LET g_xmie_d[l_ac].xmie003 = g_xmie_d_t.xmie003 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmie003
            #add-point:BEFORE FIELD xmie003 name="input.b.page1.xmie003"
            CALL axmi172_xmie003_desc()                        
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmie003
            #add-point:ON CHANGE xmie003 name="input.g.page1.xmie003"
                                    
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmie008
            
            #add-point:AFTER FIELD xmie008 name="input.a.page1.xmie008"
            CALL axmi172_xmie008_desc()                       
            IF NOT cl_null(g_xmie_d[l_ac].xmie008) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmie_d[l_ac].xmie008
               #160318-00025#35  2016/05/15  by pengxin  add(S)
               LET g_errshow = TRUE #是否開窗 
               LET g_chkparam.err_str[1] = "aoo-00095:sub-01302|aooi125|",cl_get_progname("aooi125",g_lang,"2"),"|:EXEPROGaooi125"
               #160318-00025#35  2016/05/15  by pengxin  add(E)
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooef001_13") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_xmie_d[l_ac].xmie008 = g_xmie_d_t.xmie008
                  NEXT FIELD CURRENT
               END IF
            ELSE
               LET g_xmie_d[l_ac].xmie008 = ' '            
            END IF 

            #此段落由子樣板a05產生
            IF  g_xmie_m.xmie001 IS NOT NULL AND NOT cl_null(g_xmie_d[g_detail_idx].xmie002) AND g_xmie_d[g_detail_idx].xmie003 IS NOT NULL AND g_xmie_d[g_detail_idx].xmie004 IS NOT NULL AND g_xmie_d[g_detail_idx].xmie005 IS NOT NULL AND g_xmie_d[g_detail_idx].xmie006 IS NOT NULL AND g_xmie_d[g_detail_idx].xmie007 IS NOT NULL AND g_xmie_d[g_detail_idx].xmie008 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmie_m.xmie001 != g_xmie001_t OR g_xmie_d[g_detail_idx].xmie002 != g_xmie_d_t.xmie002 OR g_xmie_d[g_detail_idx].xmie003 != g_xmie_d_t.xmie003 OR g_xmie_d[g_detail_idx].xmie004 != g_xmie_d_t.xmie004 OR g_xmie_d[g_detail_idx].xmie005 != g_xmie_d_t.xmie005 OR g_xmie_d[g_detail_idx].xmie006 != g_xmie_d_t.xmie006 OR g_xmie_d[g_detail_idx].xmie007 != g_xmie_d_t.xmie007 OR g_xmie_d[g_detail_idx].xmie008 != g_xmie_d_t.xmie008)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmie_t WHERE "||"xmieent = '" ||g_enterprise|| "' AND "||"xmie001 = '"||g_xmie_m.xmie001 ||"' AND "|| "xmie002 = '"||g_xmie_d[g_detail_idx].xmie002 ||"' AND "|| "xmie003 = '"||g_xmie_d[g_detail_idx].xmie003 ||"' AND "|| "xmie004 = '"||g_xmie_d[g_detail_idx].xmie004 ||"' AND "|| "xmie005 = '"||g_xmie_d[g_detail_idx].xmie005 ||"' AND "|| "xmie006 = '"||g_xmie_d[g_detail_idx].xmie006 ||"' AND "|| "xmie007 = '"||g_xmie_d[g_detail_idx].xmie007 ||"' AND "|| "xmie008 = '"||g_xmie_d[g_detail_idx].xmie008 ||"'",'std-00004',0) THEN 
                     LET g_xmie_d[l_ac].xmie008 = g_xmie_d_t.xmie008
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmie008
            #add-point:BEFORE FIELD xmie008 name="input.b.page1.xmie008"
            CALL axmi172_xmie008_desc()                        
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmie008
            #add-point:ON CHANGE xmie008 name="input.g.page1.xmie008"
                                    
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmie004
            
            #add-point:AFTER FIELD xmie004 name="input.a.page1.xmie004"
            CALL axmi172_xmie004_desc()                        
            IF NOT cl_null(g_xmie_d[l_ac].xmie004) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmie_d[l_ac].xmie004
               #160318-00025#35  2016/05/15  by pengxin  add(S)
               LET g_errshow = TRUE #是否開窗 
               LET g_chkparam.err_str[1] = "axm-00105:sub-01302|aimi171|",cl_get_progname("axmi171",g_lang,"2"),"|:EXEPROGaxmi171"
               #160318-00025#35  2016/05/15  by pengxin  add(E)
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_xmij001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_xmie_d[l_ac].xmie004 = g_xmie_d_t.xmie004
                  NEXT FIELD CURRENT
               END IF
            ELSE
               LET g_xmie_d[l_ac].xmie004 = ' '
            END IF 

            #此段落由子樣板a05產生
            IF  g_xmie_m.xmie001 IS NOT NULL AND NOT cl_null(g_xmie_d[g_detail_idx].xmie002) AND g_xmie_d[g_detail_idx].xmie003 IS NOT NULL AND g_xmie_d[g_detail_idx].xmie004 IS NOT NULL AND g_xmie_d[g_detail_idx].xmie005 IS NOT NULL AND g_xmie_d[g_detail_idx].xmie006 IS NOT NULL AND g_xmie_d[g_detail_idx].xmie007 IS NOT NULL AND g_xmie_d[g_detail_idx].xmie008 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmie_m.xmie001 != g_xmie001_t OR g_xmie_d[g_detail_idx].xmie002 != g_xmie_d_t.xmie002 OR g_xmie_d[g_detail_idx].xmie003 != g_xmie_d_t.xmie003 OR g_xmie_d[g_detail_idx].xmie004 != g_xmie_d_t.xmie004 OR g_xmie_d[g_detail_idx].xmie005 != g_xmie_d_t.xmie005 OR g_xmie_d[g_detail_idx].xmie006 != g_xmie_d_t.xmie006 OR g_xmie_d[g_detail_idx].xmie007 != g_xmie_d_t.xmie007 OR g_xmie_d[g_detail_idx].xmie008 != g_xmie_d_t.xmie008)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmie_t WHERE "||"xmieent = '" ||g_enterprise|| "' AND "||"xmie001 = '"||g_xmie_m.xmie001 ||"' AND "|| "xmie002 = '"||g_xmie_d[g_detail_idx].xmie002 ||"' AND "|| "xmie003 = '"||g_xmie_d[g_detail_idx].xmie003 ||"' AND "|| "xmie004 = '"||g_xmie_d[g_detail_idx].xmie004 ||"' AND "|| "xmie005 = '"||g_xmie_d[g_detail_idx].xmie005 ||"' AND "|| "xmie006 = '"||g_xmie_d[g_detail_idx].xmie006 ||"' AND "|| "xmie007 = '"||g_xmie_d[g_detail_idx].xmie007 ||"' AND "|| "xmie008 = '"||g_xmie_d[g_detail_idx].xmie008 ||"'",'std-00004',0) THEN 
                     LET g_xmie_d[l_ac].xmie004 = g_xmie_d_t.xmie004
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmie004
            #add-point:BEFORE FIELD xmie004 name="input.b.page1.xmie004"
            CALL axmi172_xmie004_desc()                        
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmie004
            #add-point:ON CHANGE xmie004 name="input.g.page1.xmie004"
                                    
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmie005
            
            #add-point:AFTER FIELD xmie005 name="input.a.page1.xmie005"
            CALL axmi172_xmie005_desc()                       
            IF NOT cl_null(g_xmie_d[l_ac].xmie005) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmie_d[l_ac].xmie005
               LET g_chkparam.arg2 = g_site
               #160318-00025#35  2016/05/15  by pengxin  add(S)
               LET g_errshow = TRUE #是否開窗 
               LET g_chkparam.err_str[1] = "apm-00201:sub-01302|axmm200|",cl_get_progname("axmm200",g_lang,"2"),"|:EXEPROGaxmm200"
               #160318-00025#35  2016/05/15  by pengxin  add(E)
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_pmaa001_3") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_xmie_d[l_ac].xmie005 = g_xmie_d_t.xmie005
                  NEXT FIELD CURRENT
               END IF
            ELSE
               LET g_xmie_d[l_ac].xmie005 = ' '
            END IF 

            #此段落由子樣板a05產生
            IF  g_xmie_m.xmie001 IS NOT NULL AND NOT cl_null(g_xmie_d[g_detail_idx].xmie002) AND g_xmie_d[g_detail_idx].xmie003 IS NOT NULL AND g_xmie_d[g_detail_idx].xmie004 IS NOT NULL AND g_xmie_d[g_detail_idx].xmie005 IS NOT NULL AND g_xmie_d[g_detail_idx].xmie006 IS NOT NULL AND g_xmie_d[g_detail_idx].xmie007 IS NOT NULL AND g_xmie_d[g_detail_idx].xmie008 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmie_m.xmie001 != g_xmie001_t OR g_xmie_d[g_detail_idx].xmie002 != g_xmie_d_t.xmie002 OR g_xmie_d[g_detail_idx].xmie003 != g_xmie_d_t.xmie003 OR g_xmie_d[g_detail_idx].xmie004 != g_xmie_d_t.xmie004 OR g_xmie_d[g_detail_idx].xmie005 != g_xmie_d_t.xmie005 OR g_xmie_d[g_detail_idx].xmie006 != g_xmie_d_t.xmie006 OR g_xmie_d[g_detail_idx].xmie007 != g_xmie_d_t.xmie007 OR g_xmie_d[g_detail_idx].xmie008 != g_xmie_d_t.xmie008)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmie_t WHERE "||"xmieent = '" ||g_enterprise|| "' AND "||"xmie001 = '"||g_xmie_m.xmie001 ||"' AND "|| "xmie002 = '"||g_xmie_d[g_detail_idx].xmie002 ||"' AND "|| "xmie003 = '"||g_xmie_d[g_detail_idx].xmie003 ||"' AND "|| "xmie004 = '"||g_xmie_d[g_detail_idx].xmie004 ||"' AND "|| "xmie005 = '"||g_xmie_d[g_detail_idx].xmie005 ||"' AND "|| "xmie006 = '"||g_xmie_d[g_detail_idx].xmie006 ||"' AND "|| "xmie007 = '"||g_xmie_d[g_detail_idx].xmie007 ||"' AND "|| "xmie008 = '"||g_xmie_d[g_detail_idx].xmie008 ||"'",'std-00004',0) THEN 
                     LET g_xmie_d[l_ac].xmie005 = g_xmie_d_t.xmie005
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmie005
            #add-point:BEFORE FIELD xmie005 name="input.b.page1.xmie005"
            CALL axmi172_xmie005_desc()                        
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmie005
            #add-point:ON CHANGE xmie005 name="input.g.page1.xmie005"
                                    
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmie006
            
            #add-point:AFTER FIELD xmie006 name="input.a.page1.xmie006"
            CALL axmi172_xmie006_desc()                                    
                                                #此段落由子樣板a05產生
            IF  g_xmie_m.xmie001 IS NOT NULL AND NOT cl_null(g_xmie_d[g_detail_idx].xmie002) AND g_xmie_d[g_detail_idx].xmie003 IS NOT NULL AND g_xmie_d[g_detail_idx].xmie004 IS NOT NULL AND g_xmie_d[g_detail_idx].xmie005 IS NOT NULL AND g_xmie_d[g_detail_idx].xmie006 IS NOT NULL AND g_xmie_d[g_detail_idx].xmie007 IS NOT NULL AND g_xmie_d[g_detail_idx].xmie008 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmie_m.xmie001 != g_xmie001_t OR g_xmie_d[g_detail_idx].xmie002 != g_xmie_d_t.xmie002 OR g_xmie_d[g_detail_idx].xmie003 != g_xmie_d_t.xmie003 OR g_xmie_d[g_detail_idx].xmie004 != g_xmie_d_t.xmie004 OR g_xmie_d[g_detail_idx].xmie005 != g_xmie_d_t.xmie005 OR g_xmie_d[g_detail_idx].xmie006 != g_xmie_d_t.xmie006 OR g_xmie_d[g_detail_idx].xmie007 != g_xmie_d_t.xmie007 OR g_xmie_d[g_detail_idx].xmie008 != g_xmie_d_t.xmie008)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmie_t WHERE "||"xmieent = '" ||g_enterprise|| "' AND "||"xmie001 = '"||g_xmie_m.xmie001 ||"' AND "|| "xmie002 = '"||g_xmie_d[g_detail_idx].xmie002 ||"' AND "|| "xmie003 = '"||g_xmie_d[g_detail_idx].xmie003 ||"' AND "|| "xmie004 = '"||g_xmie_d[g_detail_idx].xmie004 ||"' AND "|| "xmie005 = '"||g_xmie_d[g_detail_idx].xmie005 ||"' AND "|| "xmie006 = '"||g_xmie_d[g_detail_idx].xmie006 ||"' AND "|| "xmie007 = '"||g_xmie_d[g_detail_idx].xmie007 ||"' AND "|| "xmie008 = '"||g_xmie_d[g_detail_idx].xmie008 ||"'",'std-00004',0) THEN 
                     LET g_xmie_d[l_ac].xmie006 = g_xmie_d_t.xmie006
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF NOT cl_null(g_xmie_d[l_ac].xmie006) THEN
               
               #160621-00003#3 20160627 modify by beckxie---S
               #IF NOT s_azzi650_chk_exist('275',g_xmie_d[l_ac].xmie006) THEN
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_xmie_d[l_ac].xmie006
               LET g_chkparam.arg2 = '1'
               LET g_chkparam.err_str[1] = "aoo-00299|",l_msg1
               IF NOT cl_chk_exist("v_oojd001") THEN
               #160621-00003#3 20160627 modify by beckxie---E
                  LET g_xmie_d[l_ac].xmie006 = g_xmie_d_t.xmie006
                  NEXT FIELD CURRENT
               END IF         
            ELSE
               LET g_xmie_d[l_ac].xmie006 = ' '
            END IF

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmie006
            #add-point:BEFORE FIELD xmie006 name="input.b.page1.xmie006"
            CALL axmi172_xmie006_desc()                        
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmie006
            #add-point:ON CHANGE xmie006 name="input.g.page1.xmie006"
                                    
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmie007
            
            #add-point:AFTER FIELD xmie007 name="input.a.page1.xmie007"
            CALL axmi172_xmie007_desc()                        
            IF NOT cl_null(g_xmie_d[l_ac].xmie007) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmie_d[l_ac].xmie007
               #160318-00025#35  2016/05/15  by pengxin  add(S)
               LET g_errshow = TRUE #是否開窗 
               LET g_chkparam.err_str[1] = "aim-00070:sub-01302|aooi130|",cl_get_progname("aooi130",g_lang,"2"),"|:EXEPROGaooi130"
               #160318-00025#35  2016/05/15  by pengxin  add(E)
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooag001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_xmie_d[l_ac].xmie007 = g_xmie_d_t.xmie007
                  NEXT FIELD CURRENT
               END IF
            ELSE
               LET g_xmie_d[l_ac].xmie007 = ' '
            END IF 

            #此段落由子樣板a05產生
            IF  g_xmie_m.xmie001 IS NOT NULL AND NOT cl_null(g_xmie_d[g_detail_idx].xmie002) AND g_xmie_d[g_detail_idx].xmie003 IS NOT NULL AND g_xmie_d[g_detail_idx].xmie004 IS NOT NULL AND g_xmie_d[g_detail_idx].xmie005 IS NOT NULL AND g_xmie_d[g_detail_idx].xmie006 IS NOT NULL AND g_xmie_d[g_detail_idx].xmie007 IS NOT NULL AND g_xmie_d[g_detail_idx].xmie008 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmie_m.xmie001 != g_xmie001_t OR g_xmie_d[g_detail_idx].xmie002 != g_xmie_d_t.xmie002 OR g_xmie_d[g_detail_idx].xmie003 != g_xmie_d_t.xmie003 OR g_xmie_d[g_detail_idx].xmie004 != g_xmie_d_t.xmie004 OR g_xmie_d[g_detail_idx].xmie005 != g_xmie_d_t.xmie005 OR g_xmie_d[g_detail_idx].xmie006 != g_xmie_d_t.xmie006 OR g_xmie_d[g_detail_idx].xmie007 != g_xmie_d_t.xmie007 OR g_xmie_d[g_detail_idx].xmie008 != g_xmie_d_t.xmie008)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmie_t WHERE "||"xmieent = '" ||g_enterprise|| "' AND "||"xmie001 = '"||g_xmie_m.xmie001 ||"' AND "|| "xmie002 = '"||g_xmie_d[g_detail_idx].xmie002 ||"' AND "|| "xmie003 = '"||g_xmie_d[g_detail_idx].xmie003 ||"' AND "|| "xmie004 = '"||g_xmie_d[g_detail_idx].xmie004 ||"' AND "|| "xmie005 = '"||g_xmie_d[g_detail_idx].xmie005 ||"' AND "|| "xmie006 = '"||g_xmie_d[g_detail_idx].xmie006 ||"' AND "|| "xmie007 = '"||g_xmie_d[g_detail_idx].xmie007 ||"' AND "|| "xmie008 = '"||g_xmie_d[g_detail_idx].xmie008 ||"'",'std-00004',0) THEN 
                     LET g_xmie_d[l_ac].xmie007 = g_xmie_d_t.xmie007
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmie007
            #add-point:BEFORE FIELD xmie007 name="input.b.page1.xmie007"
            CALL axmi172_xmie007_desc()                        
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmie007
            #add-point:ON CHANGE xmie007 name="input.g.page1.xmie007"
                                    
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.xmieseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmieseq
            #add-point:ON ACTION controlp INFIELD xmieseq name="input.c.page1.xmieseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmie002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmie002
            #add-point:ON ACTION controlp INFIELD xmie002 name="input.c.page1.xmie002"
                                    #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmie_d[l_ac].xmie002             #給予default值

            #給予arg

            CALL q_rtax001_1()                                #呼叫開窗

            LET g_xmie_d[l_ac].xmie002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmie_d[l_ac].xmie002 TO xmie002              #顯示到畫面上

            NEXT FIELD xmie002                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.xmie003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmie003
            #add-point:ON ACTION controlp INFIELD xmie003 name="input.c.page1.xmie003"
                                    #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmie_d[l_ac].xmie003             #給予default值

            #給予arg

            CALL q_imaa001()                                #呼叫開窗

            LET g_xmie_d[l_ac].xmie003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmie_d[l_ac].xmie003 TO xmie003              #顯示到畫面上

            NEXT FIELD xmie003                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.xmie008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmie008
            #add-point:ON ACTION controlp INFIELD xmie008 name="input.c.page1.xmie008"
                                    #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmie_d[l_ac].xmie008             #給予default值

            #給予arg

            #mod--161013-00051#1 By shiun--(S)
#            CALL q_ooef001_12()                                #呼叫開窗
            CALL q_ooef001_1()
            #mod--161013-00051#1 By shiun--(E)

            LET g_xmie_d[l_ac].xmie008 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmie_d[l_ac].xmie008 TO xmie008              #顯示到畫面上

            NEXT FIELD xmie008                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.xmie004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmie004
            #add-point:ON ACTION controlp INFIELD xmie004 name="input.c.page1.xmie004"
                                    #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmie_d[l_ac].xmie004             #給予default值

            #給予arg

            CALL q_xmij001()                                #呼叫開窗

            LET g_xmie_d[l_ac].xmie004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmie_d[l_ac].xmie004 TO xmie004              #顯示到畫面上

            NEXT FIELD xmie004                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.xmie005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmie005
            #add-point:ON ACTION controlp INFIELD xmie005 name="input.c.page1.xmie005"
                                    #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmie_d[l_ac].xmie005             #給予default值

            #給予arg

            CALL q_pmaa001_13()                                #呼叫開窗

            LET g_xmie_d[l_ac].xmie005 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmie_d[l_ac].xmie005 TO xmie005              #顯示到畫面上

            NEXT FIELD xmie005                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.xmie006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmie006
            #add-point:ON ACTION controlp INFIELD xmie006 name="input.c.page1.xmie006"
                                    #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmie_d[l_ac].xmie006             #給予default值

            #給予arg
            #160621-00003#3 20160627 modify by beckxie---S
			   #LET g_qryparam.arg1 = "275"
            #CALL q_oocq002()                           #呼叫開窗
            LET g_qryparam.arg1 = "1"
            CALL q_oojd001_1()
            #160621-00003#3 20160627 modify by beckxie---E

            LET g_xmie_d[l_ac].xmie006 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmie_d[l_ac].xmie006 TO xmie006              #顯示到畫面上

            NEXT FIELD xmie006                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.xmie007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmie007
            #add-point:ON ACTION controlp INFIELD xmie007 name="input.c.page1.xmie007"
                                    #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmie_d[l_ac].xmie007             #給予default值

            #給予arg

            CALL q_ooag001()                                #呼叫開窗

            LET g_xmie_d[l_ac].xmie007 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmie_d[l_ac].xmie007 TO xmie007              #顯示到畫面上

            NEXT FIELD xmie007                          #返回原欄位


            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_xmie_d[l_ac].* = g_xmie_d_t.*
               CLOSE axmi172_bcl
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_xmie_d[l_ac].xmieseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_xmie_d[l_ac].* = g_xmie_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               
            
               #add-point:單身修改前 name="input.body.b_update"
                                             
               #end add-point
         
               #將遮罩欄位還原
               CALL axmi172_xmie_t_mask_restore('restore_mask_o')
         
               UPDATE xmie_t SET (xmie001,xmieseq,xmie002,xmie003,xmie008,xmie004,xmie005,xmie006,xmie007) = (g_xmie_m.xmie001, 
                   g_xmie_d[l_ac].xmieseq,g_xmie_d[l_ac].xmie002,g_xmie_d[l_ac].xmie003,g_xmie_d[l_ac].xmie008, 
                   g_xmie_d[l_ac].xmie004,g_xmie_d[l_ac].xmie005,g_xmie_d[l_ac].xmie006,g_xmie_d[l_ac].xmie007) 
 
                WHERE xmieent = g_enterprise AND xmie001 = g_xmie_m.xmie001 
 
                 AND xmieseq = g_xmie_d_t.xmieseq #項次   
 
                 
               #add-point:單身修改中 name="input.body.m_update"
 
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL s_transaction_end('N','0')
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmie_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   INITIALIZE g_errparam TO NULL 
                  #   LET g_errparam.extend = "xmie_t" 
                  #   LET g_errparam.code   = SQLCA.sqlcode 
                  #   LET g_errparam.popup  = TRUE 
                  #   CALL cl_err()
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmie_m.xmie001
               LET gs_keys_bak[1] = g_xmie001_t
               LET gs_keys[2] = g_xmie_d[g_detail_idx].xmieseq
               LET gs_keys_bak[2] = g_xmie_d_t.xmieseq
               CALL axmi172_update_b('xmie_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
                     #修改歷程記錄(單身修改)
                     LET g_log1 = util.JSON.stringify(g_xmie_m),util.JSON.stringify(g_xmie_d_t)
                     LET g_log2 = util.JSON.stringify(g_xmie_m),util.JSON.stringify(g_xmie_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL axmi172_xmie_t_mask_restore('restore_mask_n')
               
               #若Key欄位有變動
               LET ls_keys[01] = g_xmie_m.xmie001
 
               LET ls_keys[ls_keys.getLength()+1] = g_xmie_d_t.xmieseq
 
               CALL axmi172_key_update_b(ls_keys)
               
               #add-point:單身修改後 name="input.body.a_update"
               UPDATE xmif_t SET (xmif001,xmif002,xmif003,xmif008,xmif004,xmif005,xmif006,xmif007) = (g_xmie_m.xmie001, 
                   g_xmie_d[l_ac].xmie002,g_xmie_d[l_ac].xmie003,g_xmie_d[l_ac].xmie008,g_xmie_d[l_ac].xmie004, 
                   g_xmie_d[l_ac].xmie005,g_xmie_d[l_ac].xmie006,g_xmie_d[l_ac].xmie007)
                WHERE xmifent = g_enterprise AND xmif001 = g_xmie_m.xmie001  
                 AND xmif002 = g_xmie_d_t.xmie002 #項次   
                 AND xmif003 = g_xmie_d_t.xmie003   
                 AND xmif004 = g_xmie_d_t.xmie004   
                 AND xmif005 = g_xmie_d_t.xmie005   
                 AND xmif006 = g_xmie_d_t.xmie006  
                 AND xmif007 = g_xmie_d_t.xmie007  
                 AND xmif008 = g_xmie_d_t.xmie008                                               
               #end add-point
            END IF
 
         AFTER ROW
            #add-point:input段after row name="input.body.after_row"
            
            #end add-point  
            LET l_ac = ARR_CURR()
            LET l_ac_t = l_ac
            IF INT_FLAG THEN
               CLOSE axmi172_bcl
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_xmie_d[l_ac].* = g_xmie_d_t.*
               END IF
               EXIT DIALOG 
            END IF
 
            CLOSE axmi172_bcl
            CALL s_transaction_end('Y','0')
 
         AFTER INPUT
            #若單身還沒有輸入資料, 強制切換至單身
            IF g_xmie_d.getLength() = 0 THEN
               NEXT FIELD xmieseq
            END IF
            #add-point:input段after input  name="input.body.after_input"
                                     
            #end add-point    
            
         ON ACTION controlo   
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_xmie_d[li_reproduce_target].* = g_xmie_d[li_reproduce].*
 
               LET g_xmie_d[li_reproduce_target].xmieseq = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_xmie_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_xmie_d.getLength()+1
            END IF
            
      END INPUT
 
 
      
 
      
 
      
 
    
      #add-point:input段more_input name="input.more_inputarray"
      #Page2 預設值產生於此處
      INPUT ARRAY g_xmif_d FROM s_detail2.*
          ATTRIBUTE(COUNT = g_rec_b2,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂單身ACTION
         
 
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xmif_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axmi172_b2_fill() 
#            IF g_rec_b != 0 THEN
#               CALL fgl_set_arr_curr(l_ac)
#            END IF
        
         BEFORE ROW
            LET l_insert = FALSE
            LET g_detail_idx2 = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN axmi172_cl USING g_enterprise,
                                               g_xmie_m.xmie001
 
                                               
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  STATUS
                  LET g_errparam.extend = "OPEN axmi172_cl:"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CLOSE axmi172_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            
            IF g_rec_b2 >= l_ac 
               AND g_xmif_d[l_ac].xmif009 IS NOT NULL
            THEN
               LET l_cmd='u'
               LET g_xmif_d_t.* = g_xmif_d[l_ac].*  #BACKUP
               CALL axmi172_set_entry_b(l_cmd)
               CALL axmi172_set_no_entry_b(l_cmd)
               OPEN axmi172_bcl2 USING g_enterprise,g_xmie_m.xmie001,
                                                 g_xmie_d[g_detail_idx].xmieseq
                                                ,g_xmif_d_t.xmif009
 
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  STATUS
                  LET g_errparam.extend = "OPEN axmi172_bcl2:"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET l_lock_sw='Y'
               ELSE
                  FETCH axmi172_bcl2 INTO g_xmif_d[l_ac].xmif009,g_xmif_d[l_ac].xmif009_desc,g_xmif_d[l_ac].xmif010,
                                         g_xmif_d[l_ac].xmif011,g_xmif_d[l_ac].xmif012,g_xmif_d[l_ac].xmif013,
                                         g_xmif_d[l_ac].xmif014                                               
                  IF SQLCA.sqlcode THEN
                      INITIALIZE g_errparam TO NULL
                      LET g_errparam.code = SQLCA.sqlcode
                      LET g_errparam.extend = g_xmif_d_t.xmif009
                      LET g_errparam.popup = TRUE
                      CALL cl_err()

                      LET l_lock_sw = "Y"
                  END IF
                  
                  CALL axmi172_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF          
        
         BEFORE INSERT
            
            INITIALIZE g_xmif_d_t.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmif_d[l_ac].* TO NULL
            
            #公用欄位預設值
              
            
            #一般欄位預設值
            LET g_xmif_d[l_ac].xmif011 = 'N'
            LET g_xmif_d[l_ac].xmif012 = 0
            LET g_xmif_d[l_ac].xmif013 = 0
            LET g_xmif_d[l_ac].xmif014 = 'N'
            LET g_xmif_d_t.* = g_xmif_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axmi172_set_entry_b(l_cmd)
            CALL axmi172_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmif_d[li_reproduce_target].* = g_xmif_d[li_reproduce].*
               LET g_xmif_d[g_xmif_d.getLength()].xmif009 = NULL 
            END IF
 
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM xmif_t 
             WHERE xmifent = g_enterprise AND xmif001 = g_xmie_m.xmie001
               AND xmifseq = g_xmie_d[g_detail_idx].xmieseq
               AND xmif009 = g_xmif_d[l_ac].xmif009 
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               CALL s_transaction_begin()
               INSERT INTO xmif_t
                           (xmifent,xmif001,xmifseq,xmif002,xmif003,xmif004,xmif005,xmif006,xmif007,xmif008,
                            xmif009,xmif010,xmif011,xmif012,xmif013,xmif014
                            ) 
                     VALUES(g_enterprise,g_xmie_m.xmie001,g_xmie_d[g_detail_idx].xmieseq,
                            g_xmie_d[g_detail_idx].xmie002,g_xmie_d[g_detail_idx].xmie003,g_xmie_d[g_detail_idx].xmie004,g_xmie_d[g_detail_idx].xmie005, 
                            g_xmie_d[g_detail_idx].xmie006,g_xmie_d[g_detail_idx].xmie007,g_xmie_d[g_detail_idx].xmie008,
                            g_xmif_d[l_ac].xmif009,g_xmif_d[l_ac].xmif010,g_xmif_d[l_ac].xmif011,
                            g_xmif_d[l_ac].xmif012,g_xmif_d[l_ac].xmif013,g_xmif_d[l_ac].xmif014                            
                            )

               LET p_cmd = 'u'
            ELSE    
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00006"
               LET g_errparam.extend = 'INSERT'
               LET g_errparam.popup = TRUE
               CALL cl_err()

               INITIALIZE g_xmif_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "xmie_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()
  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               CALL axmi172_xmif011_upd() 
               #資料多語言用-增/改
               CALL s_transaction_end('Y','0')
               ERROR "INSERT O.K"
               LET g_rec_b2=g_rec_b2+1
               DISPLAY g_rec_b2 TO FORMONLY.cnt
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_xmif_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_xmif_d.deleteElement(l_ac)
               NEXT FIELD xmif009
            END IF
            IF g_xmif_d[l_ac].xmif009 IS NOT NULL THEN              
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  -263
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CANCEL DELETE
               END IF
               DELETE FROM xmif_t
                WHERE xmifent = g_enterprise AND xmif001 = g_xmie_m.xmie001 AND
                                          xmifseq = g_xmie_d[g_detail_idx].xmieseq AND
                                          xmif009 = g_xmif_d_t.xmif009 

               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "xmif_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
                  CANCEL DELETE
               ELSE
                  LET g_rec_b2 = g_rec_b2-1
                  CALL s_transaction_end('Y','0')
               END IF
               CLOSE axmi172_bcl2
               LET l_count = g_xmif_d.getLength()
            END IF           
              
         AFTER DELETE 


         BEFORE FIELD xmif009
            CALL axmi172_xmif009_desc()
         AFTER FIELD xmif009
            CALL axmi172_xmif009_desc()
            IF g_xmie_m.xmie001 IS NOT NULL AND g_xmie_d[g_detail_idx].xmieseq IS NOT NULL AND g_xmif_d[l_ac].xmif009 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( g_xmif_d[g_detail_idx2].xmif009 != g_xmif_d_t.xmif009)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmif_t WHERE "||"xmifent = '" ||g_enterprise|| "' AND "||"xmif001 = '"||g_xmie_m.xmie001 ||"' AND "|| "xmifseq = '"||g_xmie_d[g_detail_idx].xmieseq ||"' AND "|| "xmif009 = '"||g_xmif_d[l_ac].xmif009 ||"'",'std-00004',0) THEN 
                     LET g_xmif_d[l_ac].xmif009 = g_xmif_d_t.xmif009
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF NOT cl_null(g_xmif_d[l_ac].xmif009) THEN 
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_xmif_d[l_ac].xmif009
               #160318-00025#35  2016/05/15  by pengxin  add(S)
               LET g_errshow = TRUE #是否開窗 
               LET g_chkparam.err_str[1] = "aoo-00095:sub-01302|aooi125|",cl_get_progname("aooi125",g_lang,"2"),"|:EXEPROGaooi125"
               #160318-00025#35  2016/05/15  by pengxin  add(E)
               IF cl_chk_exist("v_ooef001_13") THEN
               ELSE
                  #檢查失敗時後續處理
                  LET g_xmif_d[l_ac].xmif009 = g_xmif_d_t.xmif009
                  NEXT FIELD CURRENT
               END IF         
            END IF 
            
         ON ACTION controlp INFIELD xmif009
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmif_d[l_ac].xmif009         
            #mod--161013-00051#1 By shiun--(S)
#            CALL q_ooef001_12()
            CALL q_ooef001_1()
            #mod--161013-00051#1 By shiun--(E)
            LET g_xmif_d[l_ac].xmif009 = g_qryparam.return1            
            DISPLAY g_xmif_d[l_ac].xmif009 TO xmif009           
            NEXT FIELD xmif009                                 
         
         AFTER FIELD xmif010   
            IF NOT cl_ap_chk_Range(g_xmif_d[l_ac].xmif010,"0","1","100","1","azz-00087",1) THEN
               LET g_xmif_d[l_ac].xmif010 = g_xmif_d_t.xmif010
               NEXT FIELD xmif010
            END IF           

         ON CHANGE xmif011
            CALL axmi172_xmif011_desc()
            
         AFTER FIELD xmif012   
            IF NOT cl_ap_chk_Range(g_xmif_d[l_ac].xmif012,"0","1","","","azz-00079",1) THEN
               LET g_xmif_d[l_ac].xmif012 = g_xmif_d_t.xmif012
               NEXT FIELD xmif012
            END IF
     
         AFTER FIELD xmif013   
            IF NOT cl_ap_chk_Range(g_xmif_d[l_ac].xmif013,"0","1","","","azz-00079",1) THEN
               LET g_xmif_d[l_ac].xmif013 = g_xmif_d_t.xmif013
               NEXT FIELD xmif013
            END IF

         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               LET g_xmif_d[l_ac].* = g_xmif_d_t.*
               CLOSE axmi172_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = -263
               LET g_errparam.extend = g_xmif_d[l_ac].xmif009
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_xmif_d[l_ac].* = g_xmif_d_t.*
            ELSE
               #寫入修改者/修改日期資訊

               UPDATE xmif_t SET (xmif001,xmifseq,xmif002,xmif003,xmif004,xmif005,xmif006,xmif007,xmif008,xmif009, 
                   xmif010,xmif011,xmif012,xmif013,xmif014) = (g_xmie_m.xmie001,g_xmie_d[g_detail_idx].xmieseq,g_xmie_d[g_detail_idx].xmie002,g_xmie_d[g_detail_idx].xmie003, 
                   g_xmie_d[g_detail_idx].xmie004,g_xmie_d[g_detail_idx].xmie005,g_xmie_d[g_detail_idx].xmie006,g_xmie_d[g_detail_idx].xmie007,g_xmie_d[g_detail_idx].xmie008, 
                   g_xmif_d[l_ac].xmif009,g_xmif_d[l_ac].xmif010,g_xmif_d[l_ac].xmif011,g_xmif_d[l_ac].xmif012, 
                   g_xmif_d[l_ac].xmif013,g_xmif_d[l_ac].xmif014) #自訂欄位頁簽
                WHERE xmifent = g_enterprise AND xmif001 = g_xmie_m.xmie001
                  AND xmifseq = g_xmie_d[g_detail_idx].xmieseq
                  AND xmif009 = g_xmif_d_t.xmif009 #項次  
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "std-00009"
                     LET g_errparam.extend = "xmif_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     CALL s_transaction_end('N','0')
               END CASE
               CALL axmi172_xmif011_upd()
               CALL s_transaction_end('Y','0')
            END IF
 
         AFTER INPUT
#            SELECT SUM(xmif010) INTO l_sum 
#              FROM xmif_t
#             WHERE xmifent = g_enterprise AND xmif001 = g_xmie_m.xmie001
#               AND xmifseq = g_xmie_d[g_detail_idx].xmieseq
#             IF l_sum <> 100 THEN 
#                CALL cl_err(l_sum,'axm-00167',1)
#                NEXT FIELD xmif010
#             END IF
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_xmif_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_xmif_d.getLength()+1
            
      END INPUT      
      #end add-point    
      
      BEFORE DIALOG
         #CALL cl_err_collect_init()    
         #add-point:input段before_dialog name="input.before_dialog"
                           
         #end add-point 
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD xmie001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xmieseq
 
            END CASE
         END IF
   
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
   
   #將畫面指標同步到當下指定的位置上
   CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)
 
 
   
   #add-point:input段after_input name="input.after_input"
#   IF l_cmd = 'a' THEN 
#      LET g_detail_idx = 1
#   END IF
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axmi172.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION axmi172_show()
   #add-point:show段define name="show.define_customerization"
   
   #end add-point
   #add-point:show段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
         
   #end add-point
   
   #add-point:Function前置處理  name="show.before"
         
   #end add-point
   
   IF g_bfill = "Y" THEN
      CALL axmi172_b_fill(g_wc2) #第一階單身填充
      CALL axmi172_b_fill2('0')  #第二階單身填充
   END IF
   
   
 
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL axmi172_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   DISPLAY BY NAME g_xmie_m.xmie001,g_xmie_m.xmie001_desc
 
   CALL axmi172_ref_show()
 
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()  
 
   #add-point:show段之後 name="show.after"
         
   #end add-point   
   
END FUNCTION
 
{</section>}
 
{<section id="axmi172.ref_show" >}
#+ 帶出reference資料
PRIVATE FUNCTION axmi172_ref_show()
   #add-point:ref_show段define name="ref_show.define_customerization"
   
   #end add-point 
   DEFINE l_ac_t LIKE type_t.num10 #l_ac暫存用
   #add-point:ref_show段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ref_show.define"
   CALL axmi172_b2_fill()       
   #end add-point
   
   #add-point:Function前置處理  name="ref_show.pre_function"
   
   #end add-point
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:ref_show段m_reference name="ref_show.head.reference"
       
   CALL axmi172_xmie001_desc()
   
   FOR l_ac = 1 TO g_xmif_d.getLength()     
      CALL axmi172_xmif009_desc()
   END FOR
   #end add-point
 
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_xmie_d.getLength()
      #add-point:ref_show段d_reference name="ref_show.body.reference"
                  
      CALL axmi172_xmie002_desc()
      CALL axmi172_xmie003_desc()
      CALL axmi172_xmie004_desc()
      CALL axmi172_xmie005_desc()
      CALL axmi172_xmie006_desc()
      CALL axmi172_xmie007_desc()
      CALL axmi172_xmie008_desc()
      #end add-point
   END FOR
   
 
   
   #add-point:ref_show段自訂 name="ref_show.other_reference"
   
   #end add-point
   
   LET l_ac = l_ac_t
 
END FUNCTION
 
{</section>}
 
{<section id="axmi172.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION axmi172_reproduce()
   #add-point:reproduce段define name="reproduce.define_customerization"
   
   #end add-point
   DEFINE l_newno     LIKE xmie_t.xmie001 
   DEFINE l_oldno     LIKE xmie_t.xmie001 
 
   DEFINE l_master    RECORD LIKE xmie_t.*
   DEFINE l_detail    RECORD LIKE xmie_t.*
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
         
   #end add-point
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
 
   IF g_xmie_m.xmie001 IS NULL
 
      THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   LET g_xmie001_t = g_xmie_m.xmie001
 
   
   LET g_xmie_m.xmie001 = ""
 
   LET g_master_insert = FALSE
   CALL axmi172_set_entry('a')
   CALL axmi172_set_no_entry('a')
   
   CALL cl_set_head_visible("","YES")
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
         
   #end add-point
   
   #清空key欄位的desc
      LET g_xmie_m.xmie001_desc = ''
   DISPLAY BY NAME g_xmie_m.xmie001_desc
 
   
   CALL axmi172_input("r")
    
   IF INT_FLAG AND NOT g_master_insert THEN
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      INITIALIZE g_xmie_m.* TO NULL
      INITIALIZE g_xmie_d TO NULL
 
      CALL axmi172_show()
      LET INT_FLAG = 0
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN 
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL axmi172_set_act_visible()
   CALL axmi172_set_act_no_visible()
 
   #將新增的資料併入搜尋條件中
   LET g_state = "insert"
   
   LET g_xmie001_t = g_xmie_m.xmie001
 
   
   #組合新增資料的條件
   LET g_add_browse = " xmieent = " ||g_enterprise|| " AND",
                      " xmie001 = '", g_xmie_m.xmie001, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axmi172_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   LET g_curr_diag = ui.DIALOG.getCurrent()
   CALL axmi172_idx_chk()
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
         
   #end add-point
   
   #功能已完成,通報訊息中心
   CALL axmi172_msgcentre_notify('reproduce')
   
END FUNCTION
 
{</section>}
 
{<section id="axmi172.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION axmi172_detail_reproduce()
   #add-point:delete段define name="detail_reproduce.define_customerization"
   
   #end add-point 
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE xmie_t.*
 
 
   #add-point:delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
         
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE axmi172_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
         
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xmie_t
    WHERE xmieent = g_enterprise AND xmie001 = g_xmie001_t
 
       INTO TEMP axmi172_detail
   
   #將key修正為調整後   
   UPDATE axmi172_detail 
      #更新key欄位
      SET xmie001 = g_xmie_m.xmie001
 
      #更新共用欄位
      
                                       
   #將資料塞回原table   
   INSERT INTO xmie_t SELECT * FROM axmi172_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
         
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmi172_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE axmi172_detail2 AS ",
                "SELECT * FROM xmif_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO axmi172_detail2 SELECT * FROM xmif_t 
                                         WHERE xmifent = g_enterprise AND xmif001 = g_xmie001_t
 
   
   #將key修正為調整後   
   UPDATE axmi172_detail2 
      #更新key欄位
      SET xmif001 = g_xmie_m.xmie001
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO xmif_t SELECT * FROM axmi172_detail2
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "reproduce"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN
   END IF
   #刪除TEMP TABLE
   DROP TABLE axmi172_detail2
   
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_xmie001_t = g_xmie_m.xmie001
 
   
   DROP TABLE axmi172_detail
   
END FUNCTION
 
{</section>}
 
{<section id="axmi172.delete" >}
#+ 資料刪除
PRIVATE FUNCTION axmi172_delete()
   #add-point:delete段define name="delete.define_customerization"
   
   #end add-point
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
         
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_xmie_m.xmie001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   
 
   OPEN axmi172_cl USING g_enterprise,g_xmie_m.xmie001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axmi172_cl:" 
      LET g_errparam.code   =  STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE axmi172_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axmi172_master_referesh USING g_xmie_m.xmie001 INTO g_xmie_m.xmie001,g_xmie_m.xmie001_desc 
 
   
   #遮罩相關處理
   LET g_xmie_m_mask_o.* =  g_xmie_m.*
   CALL axmi172_xmie_t_mask()
   LET g_xmie_m_mask_n.* =  g_xmie_m.*
   
   CALL axmi172_show()
 
   #單頭多語言資料備份
   
   
   IF cl_ask_del_master() THEN              #確認一下
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL axmi172_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
 
      #add-point:單身刪除前 name="delete.body.b_delete"
                  
      #end add-point
      
      DELETE FROM xmie_t WHERE xmieent = g_enterprise AND xmie001 = g_xmie_m.xmie001
 
                                                               
      #add-point:單身刪除中 name="delete.body.m_delete"
                  
      #end add-point
      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmie_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
 
      
  
      #add-point:單身刪除後  name="delete.body.a_delete"
      DELETE FROM xmif_t WHERE xmifent = g_enterprise AND xmif001 = g_xmie_m.xmie001

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "xmif_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

         CALL s_transaction_end('N','0')
      END IF                  
      #end add-point
      
 
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      #頭先不紀錄
      #IF NOT cl_log_modified_record('','') THEN 
      #   CLOSE axmi172_cl
      #   CALL s_transaction_end('N','0')
      #   RETURN 
      #END IF
      
      CLEAR FORM
      CALL g_xmie_d.clear() 
 
     
      CALL axmi172_ui_browser_refresh()  
      #CALL axmi172_ui_headershow()  
      #CALL axmi172_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL axmi172_fetch('P')
      ELSE
         #LET g_wc = " 1=1"
         #LET g_wc2 = " 1=1"
         #CALL axmi172_browser_fill("F")
         CLEAR FORM
      END IF
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')   
   END IF
 
   CLOSE axmi172_cl
 
   #功能已完成,通報訊息中心
   CALL axmi172_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="axmi172.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION axmi172_b_fill(p_wc2)
   #add-point:b_fill段define name="b_fill.define_customerization"
   
   #end add-point
   DEFINE p_wc2      STRING
   #add-point:b_fill段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
         
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #先清空單身變數內容
   CALL g_xmie_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
         
   #end add-point
   
   LET g_sql = "SELECT  DISTINCT xmieseq,xmie002,xmie003,xmie008,xmie004,xmie005,xmie006,xmie007,t1.rtaxl003 , 
       t2.imaal003 ,t3.ooefl003 ,t4.ooefl003 ,t5.pmaal004 ,t6.oojdl003 ,t7.ooag011 FROM xmie_t",   
               "",
               
                              " LEFT JOIN rtaxl_t t1 ON t1.rtaxlent="||g_enterprise||" AND t1.rtaxl001=xmie002 AND t1.rtaxl002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t2 ON t2.imaalent="||g_enterprise||" AND t2.imaal001=xmie003 AND t2.imaal002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent="||g_enterprise||" AND t3.ooefl001=xmie008 AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent="||g_enterprise||" AND t4.ooefl001=xmie004 AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t5 ON t5.pmaalent="||g_enterprise||" AND t5.pmaal001=xmie005 AND t5.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN oojdl_t t6 ON t6.oojdlent="||g_enterprise||" AND t6.oojdl001=xmie006 AND t6.oojdl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent="||g_enterprise||" AND t7.ooag001=xmie007  ",
 
               " WHERE xmieent= ? AND xmie001=?"  
 
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table1 CLIPPED, cl_sql_add_filter("xmie_t")
   END IF
   
   #add-point:b_fill段sql_after name="b_fill.sql_after"
         
   #end add-point
   
   #子單身的WC
   
   
   #判斷是否填充
   IF axmi172_fill_chk(1) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = g_sql, " ORDER BY xmie_t.xmieseq"
         #add-point:b_fill段fill_before name="b_fill.fill_before"
         
         #end add-point
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axmi172_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR axmi172_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_xmie_m.xmie001
                                               
      FOREACH b_fill_cs INTO g_xmie_d[l_ac].xmieseq,g_xmie_d[l_ac].xmie002,g_xmie_d[l_ac].xmie003,g_xmie_d[l_ac].xmie008, 
          g_xmie_d[l_ac].xmie004,g_xmie_d[l_ac].xmie005,g_xmie_d[l_ac].xmie006,g_xmie_d[l_ac].xmie007, 
          g_xmie_d[l_ac].xmie002_desc,g_xmie_d[l_ac].xmie003_desc,g_xmie_d[l_ac].xmie008_desc,g_xmie_d[l_ac].xmie004_desc, 
          g_xmie_d[l_ac].xmie005_desc,g_xmie_d[l_ac].xmie006_desc,g_xmie_d[l_ac].xmie007_desc
                             
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
                           
         #add-point:b_fill段資料填充 name="b_fill.fill"
                           
         #end add-point
      
         #帶出公用欄位reference值
         
         
 
        
         #add-point:單身資料抓取 name="bfill.foreach"
                           
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF 
            EXIT FOREACH
         END IF
      
         LET l_ac = l_ac + 1
         
      END FOREACH
 
            CALL g_xmie_d.deleteElement(g_xmie_d.getLength())
 
      
   END IF
   
   #add-point:b_fill段more name="b_fill.more"
         
   #end add-point
   
   LET g_rec_b=l_ac-1
   DISPLAY g_rec_b TO FORMONLY.cnt  
   LET l_ac = g_cnt
   LET g_cnt = 0 
 
   #遮罩相關處理
   FOR l_ac = 1 TO g_xmie_d.getLength()
      LET g_xmie_d_mask_o[l_ac].* =  g_xmie_d[l_ac].*
      CALL axmi172_xmie_t_mask()
      LET g_xmie_d_mask_n[l_ac].* =  g_xmie_d[l_ac].*
   END FOR
   
 
 
   FREE axmi172_pb   
   
END FUNCTION
 
{</section>}
 
{<section id="axmi172.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION axmi172_idx_chk()
   #add-point:idx_chk段define name="idx_chk.define_customerization"
   
   #end add-point
   #add-point:idx_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   #判定目前選擇的頁面
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      #確保當下指標的位置未超過上限
      IF g_detail_idx > g_xmie_d.getLength() THEN
         LET g_detail_idx = g_xmie_d.getLength()
      END IF
      #確保資料位置不小於1
      IF g_detail_idx = 0 AND g_xmie_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      #將筆數資料顯示到畫面上
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmie_d.getLength() TO FORMONLY.cnt
      #將位置顯示到正確筆數上
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)
   END IF
    
   #同第一個page的做法進行其他頁面的處理
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axmi172.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION axmi172_b_fill2(pi_idx)
   #add-point:b_fill2段define name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   #add-point:b_fill2段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
         
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_xmie_d.getLength() <= 0 THEN
      RETURN
   END IF
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
         
   #end add-point
    
   LET l_ac = li_ac
   
END FUNCTION
 
{</section>}
 
{<section id="axmi172.before_delete" >}
#+ 單身db資料刪除
PRIVATE FUNCTION axmi172_before_delete()
   #add-point:before_delete段define name="before_delete.define_customerization"
   
   #end add-point 
   #add-point:before_delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="before_delete.define"
         
   #end add-point 
   
   #add-point:Function前置處理  name="delete.body.b_single_delete"
         
   #end add-point
   
   DELETE FROM xmie_t
    WHERE xmieent = g_enterprise AND xmie001 = g_xmie_m.xmie001 AND
 
          xmieseq = g_xmie_d_t.xmieseq
 
      
   #add-point:單筆刪除中 name="delete.body.m_single_delete"
         
   #end add-point
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "xmie_t:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN FALSE 
   END IF
   
   #add-point:單筆刪除後 name="delete.body.a_single_delete"
      DELETE FROM xmif_t
    WHERE xmifent = g_enterprise AND xmif001 = g_xmie_m.xmie001 
      AND xmif002 = g_xmie_d_t.xmie002
      AND xmif003 = g_xmie_d_t.xmie003
      AND xmif004 = g_xmie_d_t.xmie004 
      AND xmif005 = g_xmie_d_t.xmie005
      AND xmif006 = g_xmie_d_t.xmie006 
      AND xmif007 = g_xmie_d_t.xmie007 
      AND xmif008 = g_xmie_d_t.xmie008   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "xmif_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE 
   END IF      
   #end add-point
 
   LET g_rec_b = g_rec_b-1
   DISPLAY g_rec_b TO FORMONLY.cnt
 
   RETURN TRUE
    
END FUNCTION
 
{</section>}
 
{<section id="axmi172.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION axmi172_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define name="delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
         
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="axmi172.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION axmi172_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define name="insert_b.define_customerization"
   
   #end add-point
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
         
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="axmi172.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION axmi172_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define name="update_b.define_customerization"
   
   #end add-point 
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
         
   #end add-point     
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="axmi172.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正其他單身key欄位
PRIVATE FUNCTION axmi172_key_update_b(ps_keys_bak)
   #add-point:update_b段define name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:update_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
   #判斷key是否有改變, 若無改變則返回
   IF g_xmie_d[l_ac].xmieseq = g_xmie_d_t.xmieseq 
 
      THEN
      RETURN
   END IF
    
 
   
END FUNCTION
 
{</section>}
 
{<section id="axmi172.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION axmi172_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="axmi172.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION axmi172_lock_b(ps_table,ps_page)
   #add-point:lock_b段define name="lock_b.define_customerization"
   
   #end add-point
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
         
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
   
   #先刷新資料
   #CALL axmi172_b_fill()
   
 
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axmi172.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION axmi172_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define name="unlock_b.define_customerization"
   
   #end add-point
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
         
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
   
 
 
END FUNCTION
 
{</section>}
 
{<section id="axmi172.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION axmi172_set_entry(p_cmd)
   #add-point:set_entry段define name="set_entry.define_customerization"
   
   #end add-point 
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
         
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("xmie001",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
                  
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
         
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="axmi172.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION axmi172_set_no_entry(p_cmd)
   #add-point:set_no_entry段define name="set_no_entry.define_customerization"
   
   #end add-point
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
         
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("xmie001",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
                  
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
         
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="axmi172.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION axmi172_set_entry_b(p_cmd)
   #add-point:set_entry_b段define name="set_entry_b.define_customerization"
   
   #end add-point 
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
         
   #end add-point     
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
         
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axmi172.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION axmi172_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define name="set_no_entry_b.define_customerization"
   
   #end add-point
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
         
   #end add-point    
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b段"
         
   #end add-point 
   
END FUNCTION
 
{</section>}
 
{<section id="axmi172.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION axmi172_set_act_visible()
   #add-point:set_act_visible段define name="set_act_visible.define_customerization"
   
   #end add-point
   #add-point:set_act_visible段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point
   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="axmi172.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION axmi172_set_act_no_visible()
   #add-point:set_act_no_visible段define name="set_act_no_visible.define_customerization"
   
   #end add-point
   #add-point:set_act_no_visible段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point
   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="axmi172.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION axmi172_set_act_visible_b()
   #add-point:set_act_visible_b段define name="set_act_visible_b.define_customerization"
   
   #end add-point
   #add-point:set_act_visible_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point
   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="axmi172.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION axmi172_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define name="set_act_no_visible_b.define_customerization"
   
   #end add-point
   #add-point:set_act_no_visible_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point
   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="axmi172.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION axmi172_default_search()
   #add-point:default_search段define name="default_search.define_customerization"
   
   #end add-point    
   DEFINE li_idx  LIKE type_t.num10
   DEFINE li_cnt  LIKE type_t.num10
   DEFINE ls_wc   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
         
   #end add-point 
   
   #add-point:Function前置處理  name="default_search.pre_function"
   
   #end add-point
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   #add-point:default_search段開始前 name="default_search.before"
         
   #end add-point  
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " xmie001 = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
         
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="axmi172.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION axmi172_fill_chk(ps_idx)
   #add-point:fill_chk段define name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   DEFINE lst_token     base.StringTokenizer
   DEFINE ls_token      STRING
   #add-point:fill_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
         
   #end add-point
   
   #add-point:Function前置處理  name="fill_chk.pre_function"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
   
   #add-point:fill_chk段other name="fill_chk.other"
         
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axmi172.modify_detail_chk" >}
#+ 單身輸入判定
PRIVATE FUNCTION axmi172_modify_detail_chk(ps_record)
   #add-point:modify_detail_chk段define name="modify_detail_chk.define_customerization"
   
   #end add-point
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify_detail_chk.define"
         
   #end add-point
   
   #add-point:Function前置處理  name="modify_detail_chk.before"
         
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "xmieseq"
 
      #add-point:modify_detail_chk段自訂page控制 name="modify_detail_chk.page_control"
                  
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前 name="modify_detail_chk.after"
         
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
 
{</section>}
 
{<section id="axmi172.mask_functions" >}
&include "erp/axm/axmi172_mask.4gl"
 
{</section>}
 
{<section id="axmi172.state_change" >}
    
 
{</section>}
 
{<section id="axmi172.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION axmi172_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_xmie_m.xmie001
   LET g_pk_array[1].column = 'xmie001'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axmi172.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION axmi172_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL axmi172_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_xmie_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axmi172.other_function" readonly="Y" >}

PRIVATE FUNCTION axmi172_b2_fill()
   
   IF cl_null(g_detail_idx) OR g_detail_idx = 0 THEN 
      RETURN
   END IF
   CALL g_xmif_d.clear()
   LET g_sql = "SELECT  UNIQUE xmif009,'',xmif010,xmif011,xmif012,xmif013,xmif014 FROM xmif_t", 
               " WHERE xmifent= ? AND xmif001=? ",  
               "   AND xmifseq=? "   
   IF NOT cl_null(g_wc2_table2) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
   END IF
   LET g_sql = g_sql, " ORDER BY xmif_t.xmif009"
   PREPARE axmi172_pb2 FROM g_sql
   DECLARE b_fill_cs2 CURSOR FOR axmi172_pb2
   
   LET g_cnt = 1
  
   OPEN b_fill_cs2 USING g_enterprise,g_xmie_m.xmie001,
                         g_xmie_d[g_detail_idx].xmieseq

                                            
   FOREACH b_fill_cs2 INTO g_xmif_d[g_cnt].xmif009,g_xmif_d[g_cnt].xmif009_desc,g_xmif_d[g_cnt].xmif010,
                          g_xmif_d[g_cnt].xmif011,g_xmif_d[g_cnt].xmif012,g_xmif_d[g_cnt].xmif013,
                          g_xmif_d[g_cnt].xmif014
                          
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
                        
      #add-point:b_fill段資料填充
               
      #end add-point
   
      #帶出公用欄位reference值
      
      

     
      #add-point:單身資料抓取
               
      #end add-point
   
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_xmif_d.deleteElement(g_xmif_d.getLength())
   
   LET g_rec_b2=g_cnt-1
   LET g_cnt = 0 
 
   FREE axmi172_pb2   
END FUNCTION

PRIVATE FUNCTION axmi172_xmie001_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmie_m.xmie001
   CALL ap_ref_array2(g_ref_fields,"SELECT xmial003 FROM xmial_t WHERE xmialent='"||g_enterprise||"' AND xmial001=? AND xmial002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmie_m.xmie001_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmie_m.xmie001_desc
END FUNCTION

PRIVATE FUNCTION axmi172_xmie002_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmie_d[l_ac].xmie002
   CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmie_d[l_ac].xmie002_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmie_d[l_ac].xmie002_desc
END FUNCTION

PRIVATE FUNCTION axmi172_xmie003_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmie_d[l_ac].xmie003
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmie_d[l_ac].xmie003_desc = '', g_rtn_fields[1] , ''
   LET g_xmie_d[l_ac].xmie003_desc1 = '', g_rtn_fields[2] , ''
   DISPLAY BY NAME g_xmie_d[l_ac].xmie003_desc,g_xmie_d[l_ac].xmie003_desc1
END FUNCTION

PRIVATE FUNCTION axmi172_xmif011_upd()
DEFINE l_cnt    LIKE type_t.num5

   IF NOT cl_null(g_xmif_d[l_ac].xmif011) THEN 
      IF g_xmif_d[l_ac].xmif011 = 'Y' THEN           
         UPDATE xmif_t
            SET xmif011 = 'N'
          WHERE xmifent = g_enterprise
            AND xmif001 = g_xmie_m.xmie001
            AND xmifseq = g_xmie_d[g_detail_idx].xmieseq
            AND xmif009 <> g_xmif_d[l_ac].xmif009           
      ELSE
         LET l_cnt = 0
         SELECT COUNT(*) INTO l_cnt FROM xmif_t
          WHERE xmifent = g_enterprise
            AND xmif001 = g_xmie_m.xmie001
            AND xmifseq = g_xmie_d[g_detail_idx].xmieseq
            AND xmif009 <> g_xmif_d[l_ac].xmif009
            AND xmif011 = 'Y'            
      END IF
   END IF   
   
END FUNCTION

PRIVATE FUNCTION axmi172_xmif009_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmif_d[l_ac].xmif009
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmif_d[l_ac].xmif009_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmif_d[l_ac].xmif009_desc
END FUNCTION

PRIVATE FUNCTION axmi172_xmif011_desc()
DEFINE l_i   LIKE type_t.num5
   
   IF g_xmif_d[l_ac].xmif011 = 'Y' THEN 
      FOR l_i = 1 TO g_xmif_d.getlength()
         IF g_xmif_d[l_i].xmif009 <> g_xmif_d[l_ac].xmif009 THEN 
            LET g_xmif_d[l_i].xmif011 = 'N'
         END IF
      END FOR
   END IF
   DISPLAY ARRAY g_xmif_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)
      BEFORE DISPLAY
         EXIT DISPLAY
   END DISPLAY     
END FUNCTION

PRIVATE FUNCTION axmi172_auto_detail()
DEFINE l_sql       STRING,
       l_cnt       LIKE type_t.num5

   IF cl_null(g_xmie_m.xmie001) THEN 
      RETURN
   END IF
   IF g_auto = 'Y' THEN
      IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmie_t WHERE "||"xmieent = '" ||g_enterprise|| "' AND "||"xmie001 = '"||g_xmie_m.xmie001 ||"'",'std-00004',0) THEN 
         LET g_xmie_m.xmie001 = g_xmie001_t
         LET g_auto = 'N'
         RETURN
      END IF
   END IF   
   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt FROM xmie_t
    WHERE xmieent = g_enterprise
      AND xmie001 = g_xmie_m.xmie001
      
   CALL s_transaction_begin()
   IF l_cnt > 0 THEN
      IF NOT cl_ask_confirm('axm-00175') THEN
         RETURN
      ELSE
         DELETE FROM xmie_t WHERE xmieent = g_enterprise AND xmie001 = g_xmie_m.xmie001
         DELETE FROM xmif_t WHERE xmifent = g_enterprise AND xmif001 = g_xmie_m.xmie001
      END IF
   END IF
 
   LET l_sql = "SELECT DISTINCT '",g_enterprise,"','",g_xmie_m.xmie001,"',rownum a,imda002,' ',' ',' ',' ',' ',' ' ",
               " FROM (SELECT DISTINCT imda002",
               "  FROM imda_t ",
               " WHERE imdaent = '",g_enterprise,"'",
               "   AND imdastus ='Y' ORDER BY imda002) ORDER BY a"  
   LET l_sql = " INSERT INTO xmie_t(xmieent,xmie001,xmieseq,xmie002,xmie003,xmie004,xmie005,xmie006,xmie007,xmie008) ",l_sql
   PREPARE xmie_ins FROM l_sql
   EXECUTE xmie_ins
   IF SQLCA.SQLcode  THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "xmie_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()
  
      CALL s_transaction_end('N','0') 
      RETURN
   END IF
   LET l_sql = "SELECT DISTINCT '",g_enterprise,"',xmie001,xmieseq,imda002,' ',' ',' ',' ',' ',' ', ",
               "                imda001,100,'N',0,0,'N' ",
               "  FROM imda_t,xmie_t ",
               " WHERE imdaent = '",g_enterprise,"'",
               "   AND xmieent = imdaent ",
               "   AND xmie002 = imda002 ",
               "   AND xmie001 = '",g_xmie_m.xmie001,"'",
               "   AND imdastus ='Y' ORDER BY imda002"  
   LET l_sql = " INSERT INTO xmif_t(xmifent,xmif001,xmifseq,xmif002,xmif003,xmif004,xmif005,xmif006,xmif007,",
               " xmif008,xmif009,xmif010,xmif011,xmif012,xmif013,xmif014) ",l_sql
   PREPARE xmif_ins FROM l_sql
   EXECUTE xmif_ins  
   IF SQLCA.SQLcode  THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "xmif_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()
  
      CALL s_transaction_end('N','0') 
      RETURN
   END IF   
 
   CALL s_transaction_end('Y','0')
END FUNCTION

PRIVATE FUNCTION axmi172_xmie004_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmie_d[l_ac].xmie004
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmie_d[l_ac].xmie004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmie_d[l_ac].xmie004_desc
END FUNCTION

PRIVATE FUNCTION axmi172_xmie008_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmie_d[l_ac].xmie008
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmie_d[l_ac].xmie008_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmie_d[l_ac].xmie008_desc
END FUNCTION

PRIVATE FUNCTION axmi172_xmie005_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmie_d[l_ac].xmie005
   CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmie_d[l_ac].xmie005_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmie_d[l_ac].xmie005_desc
END FUNCTION

PRIVATE FUNCTION axmi172_xmie006_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmie_d[l_ac].xmie006
   #160621-00003#3 20160627 modify by beckxie---S
   #CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='275' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   CALL ap_ref_array2(g_ref_fields,"SELECT oojdl003 FROM oojdl_t WHERE oojdlent='"||g_enterprise||"' AND oojdl001=? AND oojdl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   #160621-00003#3 20160627 modify by beckxie---E
   LET g_xmie_d[l_ac].xmie006_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmie_d[l_ac].xmie006_desc
END FUNCTION

PRIVATE FUNCTION axmi172_xmie007_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmie_d[l_ac].xmie007
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_xmie_d[l_ac].xmie007_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmie_d[l_ac].xmie007_desc
END FUNCTION

 
{</section>}
 
