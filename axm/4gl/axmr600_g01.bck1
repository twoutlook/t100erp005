#該程式未解開Section, 採用最新樣板產出!
{<section id="axmr600_g01.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:11(2017-01-25 10:14:25), PR版次:0011(2017-02-06 12:03:04)
#+ Customerized Version.: SD版次:(), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000099
#+ Filename...: axmr600_g01
#+ Description: ...
#+ Creator....: 05016(2014-07-17 11:02:54)
#+ Modifier...: 06137 -SD/PR- 06137
 
{</section>}
 
{<section id="axmr600_g01.global" readonly="Y" >}
#報表 g01 樣板自動產生(Version:13)
#add-point:填寫註解說明 name="global.memo"
#161207-00033#14   2016/12/21   By 08992   一次性交易對象顯示說明，所有的客戶/供應商欄位都應該處理
#161031-00024#5    2017/01/25   By 06137     2.報表畫面增加"列印額外品名規格"選項
#                                            2-1.打勾時，依料件編號+單別參數"額外品名規格類型"，串到aimm221抓取資料
#                                            2-2.有抓到值時，原品名規格資料不印，改印額外品名規格資料，額外品名規格資料依行序+換行符號組成一個大字串放至品名中
#                                            2-3.沒抓到值，印原品名規格
#end add-point
#add-point:填寫註解說明 name="global.memo_customerization"

 
IMPORT os
#add-point:增加匯入項目 name="global.import"

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
PRIVATE TYPE sr1_r RECORD
   xmdk012 LIKE xmdk_t.xmdk012, 
   xmdk015 LIKE xmdk_t.xmdk015, 
   xmdk031 LIKE xmdk_t.xmdk031, 
   xmdk042 LIKE xmdk_t.xmdk042, 
   xmdk043 LIKE xmdk_t.xmdk043, 
   xmdl004 LIKE xmdl_t.xmdl004, 
   xmdl015 LIKE xmdl_t.xmdl015, 
   xmdl016 LIKE xmdl_t.xmdl016, 
   xmdl020 LIKE xmdl_t.xmdl020, 
   xmdl023 LIKE xmdl_t.xmdl023, 
   xmdl026 LIKE xmdl_t.xmdl026, 
   xmdl041 LIKE xmdl_t.xmdl041, 
   xmdl042 LIKE xmdl_t.xmdl042, 
   xmdl050 LIKE xmdl_t.xmdl050, 
   xmdl052 LIKE xmdl_t.xmdl052, 
   xmdk007 LIKE xmdk_t.xmdk007, 
   xmdk013 LIKE xmdk_t.xmdk013, 
   xmdl002 LIKE xmdl_t.xmdl002, 
   xmdl011 LIKE xmdl_t.xmdl011, 
   xmdl017 LIKE xmdl_t.xmdl017, 
   xmdl019 LIKE xmdl_t.xmdl019, 
   xmdkdocno LIKE xmdk_t.xmdkdocno, 
   xmdk054 LIKE xmdk_t.xmdk054, 
   xmdk084 LIKE xmdk_t.xmdk084, 
   xmdl005 LIKE xmdl_t.xmdl005, 
   xmdl018 LIKE xmdl_t.xmdl018, 
   xmdl028 LIKE xmdl_t.xmdl028, 
   xmdl029 LIKE xmdl_t.xmdl029, 
   xmdl051 LIKE xmdl_t.xmdl051, 
   xmdk011 LIKE xmdk_t.xmdk011, 
   xmdk033 LIKE xmdk_t.xmdk033, 
   xmdk041 LIKE xmdk_t.xmdk041, 
   xmdl001 LIKE xmdl_t.xmdl001, 
   xmdl003 LIKE xmdl_t.xmdl003, 
   xmdl008 LIKE xmdl_t.xmdl008, 
   xmdl022 LIKE xmdl_t.xmdl022, 
   xmdl025 LIKE xmdl_t.xmdl025, 
   xmdl033 LIKE xmdl_t.xmdl033, 
   xmdl043 LIKE xmdl_t.xmdl043, 
   xmdl044 LIKE xmdl_t.xmdl044, 
   xmdk003 LIKE xmdk_t.xmdk003, 
   xmdk004 LIKE xmdk_t.xmdk004, 
   xmdk001 LIKE xmdk_t.xmdk001, 
   xmdk005 LIKE xmdk_t.xmdk005, 
   xmdk016 LIKE xmdk_t.xmdk016, 
   xmdk035 LIKE xmdk_t.xmdk035, 
   xmdk037 LIKE xmdk_t.xmdk037, 
   xmdl014 LIKE xmdl_t.xmdl014, 
   xmdl027 LIKE xmdl_t.xmdl027, 
   xmdl046 LIKE xmdl_t.xmdl046, 
   xmdl087 LIKE xmdl_t.xmdl087, 
   xmdl088 LIKE xmdl_t.xmdl088, 
   xmdk008 LIKE xmdk_t.xmdk008, 
   xmdk082 LIKE xmdk_t.xmdk082, 
   xmdksite LIKE xmdk_t.xmdksite, 
   xmdkstus LIKE xmdk_t.xmdkstus, 
   xmdl009 LIKE xmdl_t.xmdl009, 
   xmdl010 LIKE xmdl_t.xmdl010, 
   xmdl012 LIKE xmdl_t.xmdl012, 
   xmdl048 LIKE xmdl_t.xmdl048, 
   xmdk010 LIKE xmdk_t.xmdk010, 
   xmdk030 LIKE xmdk_t.xmdk030, 
   xmdk036 LIKE xmdk_t.xmdk036, 
   xmdk083 LIKE xmdk_t.xmdk083, 
   xmdkdocdt LIKE xmdk_t.xmdkdocdt, 
   xmdl006 LIKE xmdl_t.xmdl006, 
   xmdl007 LIKE xmdl_t.xmdl007, 
   xmdl013 LIKE xmdl_t.xmdl013, 
   xmdl021 LIKE xmdl_t.xmdl021, 
   xmdl024 LIKE xmdl_t.xmdl024, 
   xmdl045 LIKE xmdl_t.xmdl045, 
   xmdl049 LIKE xmdl_t.xmdl049, 
   xmdlseq LIKE xmdl_t.xmdlseq, 
   xmdk000 LIKE xmdk_t.xmdk000, 
   xmdk006 LIKE xmdk_t.xmdk006, 
   xmdk009 LIKE xmdk_t.xmdk009, 
   xmdk014 LIKE xmdk_t.xmdk014, 
   xmdk017 LIKE xmdk_t.xmdk017, 
   xmdlsite LIKE xmdl_t.xmdlsite, 
   ooag_t_ooag011 LIKE ooag_t.ooag011, 
   ooefl_t_ooefl003 LIKE ooefl_t.ooefl003, 
   pmaal_t_pmaal003 LIKE pmaal_t.pmaal003, 
   t1_pmaal003 LIKE pmaal_t.pmaal003, 
   t5_pmaal003 LIKE pmaal_t.pmaal003, 
   x_inab_t_inab003 LIKE inab_t.inab003, 
   l_xmdk008_pmaal003 LIKE type_t.chr300, 
   l_xmdk004_ooefl003 LIKE type_t.chr1000, 
   l_xmdk007_pmaal003 LIKE type_t.chr300, 
   l_xmdk003_ooag011 LIKE type_t.chr300, 
   l_xmdk009_pmaal003 LIKE type_t.chr300, 
   l_xmdl015_inab003 LIKE type_t.chr1000, 
   l_xmdk082_desc LIKE type_t.chr100, 
   l_xmdk030_desc LIKE type_t.chr100, 
   x_imaal_t_imaal003 LIKE imaal_t.imaal003, 
   x_imaal_t_imaal004 LIKE imaal_t.imaal004, 
   xmdkent LIKE xmdk_t.xmdkent, 
   l_xmdl003_xmdl004 LIKE type_t.chr100, 
   l_xmda033 LIKE type_t.chr20, 
   l_xmdl014_inayl003 LIKE type_t.chr1000, 
   l_xmdk010_desc LIKE type_t.chr100
END RECORD
 
PRIVATE TYPE sr2_r RECORD
   ooff013 LIKE ooff_t.ooff013
END RECORD
 
 
DEFINE tm RECORD
       wc STRING,                  #where condition 
       a1 LIKE type_t.chr1,         #多庫儲批 
       a2 LIKE type_t.chr1,         #批序號 
       c1 LIKE type_t.chr1          #列印額外品名
       END RECORD
DEFINE sr DYNAMIC ARRAY OF sr1_r                   #宣告sr為sr1_t資料結構的動態陣列
DEFINE g_select        STRING
DEFINE g_from          STRING
DEFINE g_where         STRING
DEFINE g_order         STRING
DEFINE g_sql           STRING                         #report_select_prep,REPORT段使用
 
#add-point:自定義環境變數(Global Variable)(客製用) name="global.variable_customerization"

#end add-point
#add-point:自定義環境變數(Global Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
TYPE sr3_r RECORD
   #子報表1資料
   xmdmdocno     LIKE xmdm_t.xmdmdocno, #出貨單號
   xmdmseq       LIKE xmdm_t.xmdmseq,   #項次
   xmdmseq1      LIKE xmdm_t.xmdmseq1,  #項序
   xmdm005       LIKE xmdm_t.xmdm005,   #庫位
   xmdm006       LIKE xmdm_t.xmdm006,   #儲位
   xmdm007       LIKE xmdm_t.xmdm007,   #批號
   xmdm009       LIKE xmdm_t.xmdm009,   #數量
   xmdm008       LIKE xmdm_t.xmdm008,   #單位
   xmdment       LIKE xmdm_t.xmdment,   #企業編號
   l_xmdm005_inayl003 LIKE type_t.chr1000,  #庫位.名稱
   l_xmdm006_inab003  LIKE type_t.chr1000   #儲位.名稱

END RECORD

TYPE sr4_r RECORD
   #子報表2資料
   inaodocno     LIKE inao_t.inaodocno, #單號
   inaoseq       LIKE inao_t.inaoseq,   #項次
   inaoseq1      LIKE inao_t.inaoseq1,  #項序
   inaoseq2      LIKE inao_t.inaoseq2,  #序號
   inao008       LIKE inao_t.inao008,   #製造批號
   inao009       LIKE inao_t.inao009,   #製造序號
   inao012       LIKE inao_t.inao012,   #數量
   inao010       LIKE inao_t.inao010,   #製造日期
   inao011       LIKE inao_t.inao011    #有效日期

END RECORD
#end add-point
 
{</section>}
 
{<section id="axmr600_g01.main" readonly="Y" >}
PUBLIC FUNCTION axmr600_g01(p_arg1,p_arg2,p_arg3,p_arg4)
DEFINE  p_arg1 STRING                  #tm.wc  where condition 
DEFINE  p_arg2 LIKE type_t.chr1         #tm.a1  多庫儲批 
DEFINE  p_arg3 LIKE type_t.chr1         #tm.a2  批序號 
DEFINE  p_arg4 LIKE type_t.chr1         #tm.c1  列印額外品名
#add-point:init段define (客製用) name="component_name.define_customerization"

#end add-point
#add-point:init段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="component_name.define"

#end add-point
 
   LET tm.wc = p_arg1
   LET tm.a1 = p_arg2
   LET tm.a2 = p_arg3
   LET tm.c1 = p_arg4
 
   #add-point:報表元件參數準備 name="component.arg.prep"
   
   #end add-point
   #報表元件代號
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'   
   
   LET g_rep_code = "axmr600_g01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #主報表select子句準備
   CALL axmr600_g01_sel_prep()
   
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
 
   #將資料存入array
   CALL axmr600_g01_ins_data()
   
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
 
   #將資料印出
   CALL axmr600_g01_rep_data()
 
END FUNCTION
 
{</section>}
 
{<section id="axmr600_g01.sel_prep" readonly="Y" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION axmr600_g01_sel_prep()
   #add-point:sel_prep段define (客製用) name="sel_prep.define_customerization"
   
   #end add-point
   #add-point:sel_prep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sel_prep.define"
   
   #end add-point
 
   #add-point:sel_prep before name="sel_prep.before"
   
   #end add-point
   
   #add-point:sel_prep g_select name="sel_prep.g_select"
   LET g_select = " SELECT xmdk012,xmdk015,xmdk031,xmdk042,xmdk043,xmdl004,xmdl015,xmdl016,xmdl020,xmdl023, 
       xmdl026,xmdl041,xmdl042,xmdl050,xmdl052,xmdk007,xmdk013,xmdl002,xmdl011,xmdl017,xmdl019,xmdkdocno, 
       xmdk054,xmdk084,xmdl005,xmdl018,xmdl028,xmdl029,xmdl051,xmdk011,xmdk033,xmdk041,xmdl001,xmdl003, 
       xmdl008,xmdl022,xmdl025,xmdl033,xmdl043,xmdl044,xmdk003,xmdk004,xmdk001,xmdk005,xmdk016,xmdk035, 
       xmdk037,xmdl014,xmdl027,xmdl046,xmdl087,xmdl088,xmdk008,xmdk082,xmdksite,xmdkstus,xmdl009,xmdl010, 
       xmdl012,xmdl048,xmdk010,xmdk030,xmdk036,xmdk083,xmdkdocdt,xmdl006,xmdl007,xmdl013,xmdl021,xmdl024, 
       xmdl045,xmdl049,xmdlseq,xmdk000,xmdk006,xmdk009,xmdk014,xmdk017,xmdlsite,ooag_t.ooag011,ooefl_t.ooefl003, 
       pmaal_t.pmaal003,t1.pmaal003,t5.pmaal003,x.inab_t_inab003,trim(xmdk008)||'.'||trim(pmaal_t.pmaal003), 
       trim(xmdk004)||'.'||trim(ooefl_t.ooefl003),trim(xmdk007)||'.'||trim(t5.pmaal003),trim(xmdk003)||'.'||trim(ooag_t.ooag011), 
       trim(xmdk009)||'.'||trim(t1.pmaal003),trim(xmdl015)||'.'||trim(x.inab_t_inab003),'','',x.imaal_t_imaal003, 
       x.imaal_t_imaal004,xmdkent,trim(xmdl003)||'.'||trim(xmdl004),'',trim(xmdl014)||'.'||trim(x.inayl_t_inayl003)"
#   #end add-point
#   LET g_select = " SELECT xmdk012,xmdk015,xmdk031,xmdk042,xmdk043,xmdl004,xmdl015,xmdl016,xmdl020,xmdl023, 
#       xmdl026,xmdl041,xmdl042,xmdl050,xmdl052,xmdk007,xmdk013,xmdl002,xmdl011,xmdl017,xmdl019,xmdkdocno, 
#       xmdk054,xmdk084,xmdl005,xmdl018,xmdl028,xmdl029,xmdl051,xmdk011,xmdk033,xmdk041,xmdl001,xmdl003, 
#       xmdl008,xmdl022,xmdl025,xmdl033,xmdl043,xmdl044,xmdk003,xmdk004,xmdk001,xmdk005,xmdk016,xmdk035, 
#       xmdk037,xmdl014,xmdl027,xmdl046,xmdl087,xmdl088,xmdk008,xmdk082,xmdksite,xmdkstus,xmdl009,xmdl010, 
#       xmdl012,xmdl048,xmdk010,xmdk030,xmdk036,xmdk083,xmdkdocdt,xmdl006,xmdl007,xmdl013,xmdl021,xmdl024, 
#       xmdl045,xmdl049,xmdlseq,xmdk000,xmdk006,xmdk009,xmdk014,xmdk017,xmdlsite,( SELECT ooag011 FROM ooag_t WHERE ooag_t.ooag001 = xmdk_t.xmdk003 AND ooag_t.ooagent = xmdk_t.xmdkent), 
#       ( SELECT ooefl003 FROM ooefl_t WHERE ooefl_t.ooefl001 = xmdk_t.xmdk004 AND ooefl_t.ooeflent = xmdk_t.xmdkent AND ooefl_t.ooefl002 = '" , 
#       g_dlang,"'" ,"),( SELECT pmaal003 FROM pmaal_t WHERE pmaal_t.pmaal001 = xmdk_t.xmdk008 AND pmaal_t.pmaalent = xmdk_t.xmdkent AND pmaal_t.pmaal002 = '" , 
#       g_dlang,"'" ,"),( SELECT pmaal003 FROM pmaal_t WHERE pmaal_t.pmaal001 = xmdk_t.xmdk009 AND pmaal_t.pmaalent = xmdk_t.xmdkent AND pmaal_t.pmaal002 = '" , 
#       g_dlang,"'" ,"),( SELECT pmaal003 FROM pmaal_t WHERE pmaal_t.pmaal001 = xmdk_t.xmdk007 AND pmaal_t.pmaalent = xmdk_t.xmdkent AND pmaal_t.pmaal002 = '" , 
#       g_dlang,"'" ,"),x.inab_t_inab003,trim(xmdk008)||'.'||trim((SELECT pmaal003 FROM pmaal_t WHERE pmaal_t.pmaal001 = xmdk_t.xmdk008 AND pmaal_t.pmaalent = xmdk_t.xmdkent AND pmaal_t.pmaal002 = '" , 
#       g_dlang,"'" ,")),trim(xmdk004)||'.'||trim((SELECT ooefl003 FROM ooefl_t WHERE ooefl_t.ooefl001 = xmdk_t.xmdk004 AND ooefl_t.ooeflent = xmdk_t.xmdkent AND ooefl_t.ooefl002 = '" , 
#       g_dlang,"'" ,")),trim(xmdk007)||'.'||trim((SELECT pmaal003 FROM pmaal_t WHERE pmaal_t.pmaal001 = xmdk_t.xmdk007 AND pmaal_t.pmaalent = xmdk_t.xmdkent AND pmaal_t.pmaal002 = '" , 
#       g_dlang,"'" ,")),trim(xmdk003)||'.'||trim((SELECT ooag011 FROM ooag_t WHERE ooag_t.ooag001 = xmdk_t.xmdk003 AND ooag_t.ooagent = xmdk_t.xmdkent)), 
#       trim(xmdk009)||'.'||trim((SELECT pmaal003 FROM pmaal_t WHERE pmaal_t.pmaal001 = xmdk_t.xmdk009 AND pmaal_t.pmaalent = xmdk_t.xmdkent AND pmaal_t.pmaal002 = '" , 
#       g_dlang,"'" ,")),trim(xmdl015)||'.'||trim(x.inab_t_inab003),'','',x.imaal_t_imaal003,x.imaal_t_imaal004, 
#       xmdkent,trim(xmdl003)||'.'||trim(xmdl004),'','',NULL"
# 
#   #add-point:sel_prep g_from name="sel_prep.g_from"
    LET g_from = " FROM xmdk_t LEFT OUTER JOIN ooefl_t ON ooefl_t.ooefl001 = xmdk_t.xmdk004 AND ooefl_t.ooeflent = xmdk_t.xmdkent AND ooefl_t.ooefl002 = '" , 
        g_dlang,"'" ,"             LEFT OUTER JOIN ooag_t ON ooag_t.ooag001 = xmdk_t.xmdk003 AND ooag_t.ooagent = xmdk_t.xmdkent             LEFT OUTER JOIN pmaal_t ON pmaal_t.pmaal001 = xmdk_t.xmdk008 AND pmaal_t.pmaalent = xmdk_t.xmdkent AND pmaal_t.pmaal002 = '" , 
        g_dlang,"'" ,"             LEFT OUTER JOIN pmaal_t t1 ON t1.pmaal001 = xmdk_t.xmdk009 AND t1.pmaalent = xmdk_t.xmdkent AND t1.pmaal002 = '" , 
        g_dlang,"'" ,"             LEFT OUTER JOIN pmaal_t t5 ON t5.pmaal001 = xmdk_t.xmdk007 AND t5.pmaalent = xmdk_t.xmdkent AND t5.pmaal002 = '" , 
        g_dlang,"'" ," LEFT OUTER JOIN ( SELECT xmdl_t.*,inayl_t.inayl003 inayl_t_inayl003,inab_t.inab003 inab_t_inab003, 
        imaal_t.imaal003 imaal_t_imaal003,imaal_t.imaal004 imaal_t_imaal004,xmda033 FROM xmdl_t LEFT OUTER JOIN xmda_t ON xmda_t.xmdadocno = xmdl_t.xmdl003 AND xmda_t.xmdaent = xmdl_t.xmdlent             LEFT OUTER JOIN inayl_t ON inayl_t.inayl001 = xmdl_t.xmdl014 AND inayl_t.inaylent = xmdl_t.xmdlent AND inayl_t.inayl002 = '" ,
        g_dlang,"'" ,"             LEFT OUTER JOIN inab_t ON inab_t.inabsite = xmdl_t.xmdlsite AND inab_t.inab001 = xmdl_t.xmdl014 AND inab_t.inab002 = xmdl_t.xmdl015 AND inab_t.inabent = xmdl_t.xmdlent             LEFT OUTER JOIN imaal_t ON imaal_t.imaal001 = xmdl_t.xmdl008 AND imaal_t.imaalent = xmdl_t.xmdlent AND imaal_t.imaal002 = '" , 
        g_dlang,"'" ," ) x  ON xmdk_t.xmdkent = x.xmdlent AND xmdk_t.xmdkdocno = x.xmdldocno"

#   #end add-point
#    LET g_from = " FROM xmdk_t LEFT OUTER JOIN ( SELECT xmdl_t.*,( SELECT inab003 FROM inab_t WHERE inab_t.inabsite = xmdl_t.xmdlsite AND inab_t.inab001 = xmdl_t.xmdl014 AND inab_t.inab002 = xmdl_t.xmdl015 AND inab_t.inabent = xmdl_t.xmdlent) inab_t_inab003, 
#        ( SELECT imaal003 FROM imaal_t WHERE imaal_t.imaal001 = xmdl_t.xmdl008 AND imaal_t.imaalent = xmdl_t.xmdlent AND imaal_t.imaal002 = '" , 
#        g_dlang,"'" ,") imaal_t_imaal003,( SELECT imaal004 FROM imaal_t WHERE imaal_t.imaal001 = xmdl_t.xmdl008 AND imaal_t.imaalent = xmdl_t.xmdlent AND imaal_t.imaal002 = '" , 
#        g_dlang,"'" ,") imaal_t_imaal004 FROM xmdl_t ) x  ON xmdk_t.xmdkent = x.xmdlent AND xmdk_t.xmdkdocno  
#        = x.xmdldocno"
# 
#   #add-point:sel_prep g_where name="sel_prep.g_where"
   
   #end add-point
    LET g_where = " WHERE " ,tm.wc CLIPPED 
 
   #add-point:sel_prep g_order name="sel_prep.g_order"
   
   #end add-point
    LET g_order = " ORDER BY xmdkdocno,xmdlseq"
 
   #add-point:sel_prep.sql.before name="sel_prep.sql.before"
   
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("xmdk_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED ," ",g_order CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段 
 
   #add-point:sel_prep.sql.after name="sel_prep.sql.after"
   
   #end add-point
   PREPARE axmr600_g01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()   
      LET g_rep_success = 'N'    
   END IF
   DECLARE axmr600_g01_curs CURSOR FOR axmr600_g01_prepare
 
END FUNCTION
 
{</section>}
 
{<section id="axmr600_g01.ins_data" readonly="Y" >}
PRIVATE FUNCTION axmr600_g01_ins_data()
#主報表record(用於select子句)
   DEFINE sr_s RECORD 
   xmdk012 LIKE xmdk_t.xmdk012, 
   xmdk015 LIKE xmdk_t.xmdk015, 
   xmdk031 LIKE xmdk_t.xmdk031, 
   xmdk042 LIKE xmdk_t.xmdk042, 
   xmdk043 LIKE xmdk_t.xmdk043, 
   xmdl004 LIKE xmdl_t.xmdl004, 
   xmdl015 LIKE xmdl_t.xmdl015, 
   xmdl016 LIKE xmdl_t.xmdl016, 
   xmdl020 LIKE xmdl_t.xmdl020, 
   xmdl023 LIKE xmdl_t.xmdl023, 
   xmdl026 LIKE xmdl_t.xmdl026, 
   xmdl041 LIKE xmdl_t.xmdl041, 
   xmdl042 LIKE xmdl_t.xmdl042, 
   xmdl050 LIKE xmdl_t.xmdl050, 
   xmdl052 LIKE xmdl_t.xmdl052, 
   xmdk007 LIKE xmdk_t.xmdk007, 
   xmdk013 LIKE xmdk_t.xmdk013, 
   xmdl002 LIKE xmdl_t.xmdl002, 
   xmdl011 LIKE xmdl_t.xmdl011, 
   xmdl017 LIKE xmdl_t.xmdl017, 
   xmdl019 LIKE xmdl_t.xmdl019, 
   xmdkdocno LIKE xmdk_t.xmdkdocno, 
   xmdk054 LIKE xmdk_t.xmdk054, 
   xmdk084 LIKE xmdk_t.xmdk084, 
   xmdl005 LIKE xmdl_t.xmdl005, 
   xmdl018 LIKE xmdl_t.xmdl018, 
   xmdl028 LIKE xmdl_t.xmdl028, 
   xmdl029 LIKE xmdl_t.xmdl029, 
   xmdl051 LIKE xmdl_t.xmdl051, 
   xmdk011 LIKE xmdk_t.xmdk011, 
   xmdk033 LIKE xmdk_t.xmdk033, 
   xmdk041 LIKE xmdk_t.xmdk041, 
   xmdl001 LIKE xmdl_t.xmdl001, 
   xmdl003 LIKE xmdl_t.xmdl003, 
   xmdl008 LIKE xmdl_t.xmdl008, 
   xmdl022 LIKE xmdl_t.xmdl022, 
   xmdl025 LIKE xmdl_t.xmdl025, 
   xmdl033 LIKE xmdl_t.xmdl033, 
   xmdl043 LIKE xmdl_t.xmdl043, 
   xmdl044 LIKE xmdl_t.xmdl044, 
   xmdk003 LIKE xmdk_t.xmdk003, 
   xmdk004 LIKE xmdk_t.xmdk004, 
   xmdk001 LIKE xmdk_t.xmdk001, 
   xmdk005 LIKE xmdk_t.xmdk005, 
   xmdk016 LIKE xmdk_t.xmdk016, 
   xmdk035 LIKE xmdk_t.xmdk035, 
   xmdk037 LIKE xmdk_t.xmdk037, 
   xmdl014 LIKE xmdl_t.xmdl014, 
   xmdl027 LIKE xmdl_t.xmdl027, 
   xmdl046 LIKE xmdl_t.xmdl046, 
   xmdl087 LIKE xmdl_t.xmdl087, 
   xmdl088 LIKE xmdl_t.xmdl088, 
   xmdk008 LIKE xmdk_t.xmdk008, 
   xmdk082 LIKE xmdk_t.xmdk082, 
   xmdksite LIKE xmdk_t.xmdksite, 
   xmdkstus LIKE xmdk_t.xmdkstus, 
   xmdl009 LIKE xmdl_t.xmdl009, 
   xmdl010 LIKE xmdl_t.xmdl010, 
   xmdl012 LIKE xmdl_t.xmdl012, 
   xmdl048 LIKE xmdl_t.xmdl048, 
   xmdk010 LIKE xmdk_t.xmdk010, 
   xmdk030 LIKE xmdk_t.xmdk030, 
   xmdk036 LIKE xmdk_t.xmdk036, 
   xmdk083 LIKE xmdk_t.xmdk083, 
   xmdkdocdt LIKE xmdk_t.xmdkdocdt, 
   xmdl006 LIKE xmdl_t.xmdl006, 
   xmdl007 LIKE xmdl_t.xmdl007, 
   xmdl013 LIKE xmdl_t.xmdl013, 
   xmdl021 LIKE xmdl_t.xmdl021, 
   xmdl024 LIKE xmdl_t.xmdl024, 
   xmdl045 LIKE xmdl_t.xmdl045, 
   xmdl049 LIKE xmdl_t.xmdl049, 
   xmdlseq LIKE xmdl_t.xmdlseq, 
   xmdk000 LIKE xmdk_t.xmdk000, 
   xmdk006 LIKE xmdk_t.xmdk006, 
   xmdk009 LIKE xmdk_t.xmdk009, 
   xmdk014 LIKE xmdk_t.xmdk014, 
   xmdk017 LIKE xmdk_t.xmdk017, 
   xmdlsite LIKE xmdl_t.xmdlsite, 
   ooag_t_ooag011 LIKE ooag_t.ooag011, 
   ooefl_t_ooefl003 LIKE ooefl_t.ooefl003, 
   pmaal_t_pmaal003 LIKE pmaal_t.pmaal003, 
   t1_pmaal003 LIKE pmaal_t.pmaal003, 
   t5_pmaal003 LIKE pmaal_t.pmaal003, 
   x_inab_t_inab003 LIKE inab_t.inab003, 
   l_xmdk008_pmaal003 LIKE type_t.chr300, 
   l_xmdk004_ooefl003 LIKE type_t.chr1000, 
   l_xmdk007_pmaal003 LIKE type_t.chr300, 
   l_xmdk003_ooag011 LIKE type_t.chr300, 
   l_xmdk009_pmaal003 LIKE type_t.chr300, 
   l_xmdl015_inab003 LIKE type_t.chr1000, 
   l_xmdk082_desc LIKE type_t.chr100, 
   l_xmdk030_desc LIKE type_t.chr100, 
   x_imaal_t_imaal003 LIKE imaal_t.imaal003, 
   x_imaal_t_imaal004 LIKE imaal_t.imaal004, 
   xmdkent LIKE xmdk_t.xmdkent, 
   l_xmdl003_xmdl004 LIKE type_t.chr100, 
   l_xmda033 LIKE type_t.chr20, 
   l_xmdl014_inayl003 LIKE type_t.chr1000, 
   l_xmdk010_desc LIKE type_t.chr100
 END RECORD
   DEFINE l_cnt           LIKE type_t.num10
#add-point:ins_data段define (客製用) name="ins_data.define_customerization"

#end add-point   
#add-point:ins_data段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_data.define"
DEFINE r_pmak003       LIKE pmak_t.pmak003   #一次性交易對象名稱   #161207-00033#14 add
DEFINE l_pmaa004       LIKE pmaa_t.pmaa004   #法人類型            #161207-00033#14 add
DEFINE l_sql1           STRING                                   #161207-00033#14 add
#161031-00024#5 Add By Ken 170125(S)
DEFINE l_slip_tmp       LIKE ooba_t.ooba002      #單據別   
DEFINE l_gzcb002        LIKE gzcb_t.gzcb002      #單據別參數
DEFINE l_sql            STRING
DEFINE l_cnt_chk        LIKE type_t.num10
DEFINE l_success        LIKE type_t.num10
#161031-00024#5 Add By Ken 170125(E)
#end add-point
 
    #add-point:ins_data段before name="ins_data.before"
    #161207-00033#14-s add
    LET l_sql1 = "SELECT pmaa004 FROM pmaa_t",
               " WHERE pmaaent ='",g_enterprise,"'",
               "   AND pmaa001 = ?  "
    PREPARE axmr600_pb FROM l_sql1
    #161207-00033#14-e add
    #end add-point
 
    CALL sr.clear()                                  #rep sr
    LET l_cnt = 1
    FOREACH axmr600_g01_curs INTO sr_s.*
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()       
          LET g_rep_success = 'N'    
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach name="ins_data.foreach"
       #銷退方式
       LET sr_s.l_xmdk082_desc = s_desc_gzcbl004_desc('2088',sr_s.xmdk082) CLIPPED
       #銷售通路 
       LET sr_s.l_xmdk030_desc = s_desc_get_acc_desc('275',sr_s.xmdk030) CLIPPED
       
       #客戶訂購單號
       SELECT xmda033 INTO sr_s.l_xmda033
         FROM xmda_t
        WHERE xmdaent = g_enterprise
          AND xmdadocno = sr_s.xmdl003
       
       #150820 by whitney add start
       CALL s_desc_get_ooib002_desc(sr_s.xmdk010) RETURNING sr_s.l_xmdk010_desc
       #150820 by whitney add end
       
       #當前面編號為空時，清空編號.說明的字串(避免編號為空會只顯示一個 .)
       CALL axmr600_g01_initialize(sr_s.xmdl014,sr_s.l_xmdl014_inayl003) RETURNING sr_s.l_xmdl014_inayl003
       CALL axmr600_g01_initialize(sr_s.xmdl015,sr_s.l_xmdl015_inab003) RETURNING sr_s.l_xmdl015_inab003
       CALL axmr600_g01_initialize(sr_s.xmdk007,sr_s.l_xmdk007_pmaal003) RETURNING sr_s.l_xmdk007_pmaal003
       CALL axmr600_g01_initialize(sr_s.xmdk008,sr_s.l_xmdk008_pmaal003) RETURNING sr_s.l_xmdk008_pmaal003
       CALL axmr600_g01_initialize(sr_s.xmdk009,sr_s.l_xmdk009_pmaal003) RETURNING sr_s.l_xmdk009_pmaal003
       CALL axmr600_g01_initialize(sr_s.xmdk003,sr_s.l_xmdk003_ooag011) RETURNING sr_s.l_xmdk003_ooag011
       CALL axmr600_g01_initialize(sr_s.xmdk004,sr_s.l_xmdk004_ooefl003) RETURNING sr_s.l_xmdk004_ooefl003
       #161207-00033#14-s add
       EXECUTE axmr600_pb USING sr_s.xmdk007 INTO l_pmaa004
       IF l_pmaa004 = '2' THEN   #2.一次性交易對象
          #一次性交易對象全名
          CALL s_desc_axm_get_oneturn_guest_desc('4',sr_s.xmdkdocno)
               RETURNING r_pmak003
          IF NOT cl_null(r_pmak003) THEN
             LET sr_s.l_xmdk007_pmaal003 = sr_s.xmdk007,".",r_pmak003     
             IF sr_s.xmdk008 = sr_s.xmdk007 THEN   #帳款客戶
                LET sr_s.l_xmdk008_pmaal003 = sr_s.l_xmdk007_pmaal003
             END IF
             IF sr_s.xmdk009 = sr_s.xmdk007 THEN   #收貨客戶
                LET sr_s.l_xmdk009_pmaal003 = sr_s.l_xmdk007_pmaal003
             END IF
          END IF
       END IF
       #161207-00033#14-e add 
       
       #161031-00024#5 Add By Ken 170125(S)
       IF tm.c1 = 'Y' THEN
          #先取得單別
          LET l_success = ''
          LET l_slip_tmp = ''
          CALL s_aooi200_get_slip(sr_s.xmdkdocno)
             RETURNING l_success,l_slip_tmp
          
          #取得單別參數
          CALL cl_get_doc_para(g_enterprise,g_site,l_slip_tmp,'D-MFG-0087')
             RETURNING l_gzcb002       
             
          IF NOT cl_null(l_gzcb002) THEN
             LET l_cnt_chk = 0
             SELECT COUNT(1) INTO l_cnt_chk
               FROM imab_t
              WHERE imabent = g_enterprise
                AND imab001 = sr_s.xmdl008
                AND imab002 = l_gzcb002
                AND imabstus = 'Y'
                AND (imab005 IS NOT NULL OR imab005<>'')                 
             IF l_cnt_chk > 0 THEN
                CALL s_desc_get_imab004_desc(sr_s.xmdl008,l_gzcb002) RETURNING sr_s.x_imaal_t_imaal003
                IF NOT cl_null(sr_s.x_imaal_t_imaal003) THEN
                   LET sr_s.x_imaal_t_imaal004 = ''
                END IF
             END IF
          END IF
       END IF
       #161031-00024#5 Add By Ken 170125(E)        
       #end add-point
 
       #add-point:ins_data段before_arr name="ins_data.before.save"
       
       #end add-point
 
       #set rep array value
       LET sr[l_cnt].xmdk012 = sr_s.xmdk012
       LET sr[l_cnt].xmdk015 = sr_s.xmdk015
       LET sr[l_cnt].xmdk031 = sr_s.xmdk031
       LET sr[l_cnt].xmdk042 = sr_s.xmdk042
       LET sr[l_cnt].xmdk043 = sr_s.xmdk043
       LET sr[l_cnt].xmdl004 = sr_s.xmdl004
       LET sr[l_cnt].xmdl015 = sr_s.xmdl015
       LET sr[l_cnt].xmdl016 = sr_s.xmdl016
       LET sr[l_cnt].xmdl020 = sr_s.xmdl020
       LET sr[l_cnt].xmdl023 = sr_s.xmdl023
       LET sr[l_cnt].xmdl026 = sr_s.xmdl026
       LET sr[l_cnt].xmdl041 = sr_s.xmdl041
       LET sr[l_cnt].xmdl042 = sr_s.xmdl042
       LET sr[l_cnt].xmdl050 = sr_s.xmdl050
       LET sr[l_cnt].xmdl052 = sr_s.xmdl052
       LET sr[l_cnt].xmdk007 = sr_s.xmdk007
       LET sr[l_cnt].xmdk013 = sr_s.xmdk013
       LET sr[l_cnt].xmdl002 = sr_s.xmdl002
       LET sr[l_cnt].xmdl011 = sr_s.xmdl011
       LET sr[l_cnt].xmdl017 = sr_s.xmdl017
       LET sr[l_cnt].xmdl019 = sr_s.xmdl019
       LET sr[l_cnt].xmdkdocno = sr_s.xmdkdocno
       LET sr[l_cnt].xmdk054 = sr_s.xmdk054
       LET sr[l_cnt].xmdk084 = sr_s.xmdk084
       LET sr[l_cnt].xmdl005 = sr_s.xmdl005
       LET sr[l_cnt].xmdl018 = sr_s.xmdl018
       LET sr[l_cnt].xmdl028 = sr_s.xmdl028
       LET sr[l_cnt].xmdl029 = sr_s.xmdl029
       LET sr[l_cnt].xmdl051 = sr_s.xmdl051
       LET sr[l_cnt].xmdk011 = sr_s.xmdk011
       LET sr[l_cnt].xmdk033 = sr_s.xmdk033
       LET sr[l_cnt].xmdk041 = sr_s.xmdk041
       LET sr[l_cnt].xmdl001 = sr_s.xmdl001
       LET sr[l_cnt].xmdl003 = sr_s.xmdl003
       LET sr[l_cnt].xmdl008 = sr_s.xmdl008
       LET sr[l_cnt].xmdl022 = sr_s.xmdl022
       LET sr[l_cnt].xmdl025 = sr_s.xmdl025
       LET sr[l_cnt].xmdl033 = sr_s.xmdl033
       LET sr[l_cnt].xmdl043 = sr_s.xmdl043
       LET sr[l_cnt].xmdl044 = sr_s.xmdl044
       LET sr[l_cnt].xmdk003 = sr_s.xmdk003
       LET sr[l_cnt].xmdk004 = sr_s.xmdk004
       LET sr[l_cnt].xmdk001 = sr_s.xmdk001
       LET sr[l_cnt].xmdk005 = sr_s.xmdk005
       LET sr[l_cnt].xmdk016 = sr_s.xmdk016
       LET sr[l_cnt].xmdk035 = sr_s.xmdk035
       LET sr[l_cnt].xmdk037 = sr_s.xmdk037
       LET sr[l_cnt].xmdl014 = sr_s.xmdl014
       LET sr[l_cnt].xmdl027 = sr_s.xmdl027
       LET sr[l_cnt].xmdl046 = sr_s.xmdl046
       LET sr[l_cnt].xmdl087 = sr_s.xmdl087
       LET sr[l_cnt].xmdl088 = sr_s.xmdl088
       LET sr[l_cnt].xmdk008 = sr_s.xmdk008
       LET sr[l_cnt].xmdk082 = sr_s.xmdk082
       LET sr[l_cnt].xmdksite = sr_s.xmdksite
       LET sr[l_cnt].xmdkstus = sr_s.xmdkstus
       LET sr[l_cnt].xmdl009 = sr_s.xmdl009
       LET sr[l_cnt].xmdl010 = sr_s.xmdl010
       LET sr[l_cnt].xmdl012 = sr_s.xmdl012
       LET sr[l_cnt].xmdl048 = sr_s.xmdl048
       LET sr[l_cnt].xmdk010 = sr_s.xmdk010
       LET sr[l_cnt].xmdk030 = sr_s.xmdk030
       LET sr[l_cnt].xmdk036 = sr_s.xmdk036
       LET sr[l_cnt].xmdk083 = sr_s.xmdk083
       LET sr[l_cnt].xmdkdocdt = sr_s.xmdkdocdt
       LET sr[l_cnt].xmdl006 = sr_s.xmdl006
       LET sr[l_cnt].xmdl007 = sr_s.xmdl007
       LET sr[l_cnt].xmdl013 = sr_s.xmdl013
       LET sr[l_cnt].xmdl021 = sr_s.xmdl021
       LET sr[l_cnt].xmdl024 = sr_s.xmdl024
       LET sr[l_cnt].xmdl045 = sr_s.xmdl045
       LET sr[l_cnt].xmdl049 = sr_s.xmdl049
       LET sr[l_cnt].xmdlseq = sr_s.xmdlseq
       LET sr[l_cnt].xmdk000 = sr_s.xmdk000
       LET sr[l_cnt].xmdk006 = sr_s.xmdk006
       LET sr[l_cnt].xmdk009 = sr_s.xmdk009
       LET sr[l_cnt].xmdk014 = sr_s.xmdk014
       LET sr[l_cnt].xmdk017 = sr_s.xmdk017
       LET sr[l_cnt].xmdlsite = sr_s.xmdlsite
       LET sr[l_cnt].ooag_t_ooag011 = sr_s.ooag_t_ooag011
       LET sr[l_cnt].ooefl_t_ooefl003 = sr_s.ooefl_t_ooefl003
       LET sr[l_cnt].pmaal_t_pmaal003 = sr_s.pmaal_t_pmaal003
       LET sr[l_cnt].t1_pmaal003 = sr_s.t1_pmaal003
       LET sr[l_cnt].t5_pmaal003 = sr_s.t5_pmaal003
       LET sr[l_cnt].x_inab_t_inab003 = sr_s.x_inab_t_inab003
       LET sr[l_cnt].l_xmdk008_pmaal003 = sr_s.l_xmdk008_pmaal003
       LET sr[l_cnt].l_xmdk004_ooefl003 = sr_s.l_xmdk004_ooefl003
       LET sr[l_cnt].l_xmdk007_pmaal003 = sr_s.l_xmdk007_pmaal003
       LET sr[l_cnt].l_xmdk003_ooag011 = sr_s.l_xmdk003_ooag011
       LET sr[l_cnt].l_xmdk009_pmaal003 = sr_s.l_xmdk009_pmaal003
       LET sr[l_cnt].l_xmdl015_inab003 = sr_s.l_xmdl015_inab003
       LET sr[l_cnt].l_xmdk082_desc = sr_s.l_xmdk082_desc
       LET sr[l_cnt].l_xmdk030_desc = sr_s.l_xmdk030_desc
       LET sr[l_cnt].x_imaal_t_imaal003 = sr_s.x_imaal_t_imaal003
       LET sr[l_cnt].x_imaal_t_imaal004 = sr_s.x_imaal_t_imaal004
       LET sr[l_cnt].xmdkent = sr_s.xmdkent
       LET sr[l_cnt].l_xmdl003_xmdl004 = sr_s.l_xmdl003_xmdl004
       LET sr[l_cnt].l_xmda033 = sr_s.l_xmda033
       LET sr[l_cnt].l_xmdl014_inayl003 = sr_s.l_xmdl014_inayl003
       LET sr[l_cnt].l_xmdk010_desc = sr_s.l_xmdk010_desc
 
 
       #add-point:ins_data段after_arr name="ins_data.after.save"
       
       #end add-point
       LET l_cnt = l_cnt + 1
    END FOREACH
    CALL sr.deleteElement(l_cnt)
 
    #add-point:ins_data段after name="ins_data.after"
    
    #end add-point
END FUNCTION
 
{</section>}
 
{<section id="axmr600_g01.rep_data" readonly="Y" >}
PRIVATE FUNCTION axmr600_g01_rep_data()
   DEFINE HANDLER         om.SaxDocumentHandler
   DEFINE l_i             INTEGER
 
    #判斷是否有報表資料，若回彈出訊息視窗
    IF sr.getLength() = 0 THEN
       INITIALIZE g_errparam TO NULL
       LET g_errparam.code = "adz-00285"
       LET g_errparam.extend = NULL
       LET g_errparam.popup  = FALSE
       LET g_errparam.replace[1] = ''
       CALL cl_err()  
       RETURN 
    END IF
    WHILE TRUE   
       #add-point:rep_data段印前 name="rep_data.before"
       
       #end add-point     
       LET handler = cl_gr_handler()
       IF handler IS NOT NULL THEN
          START REPORT axmr600_g01_rep TO XML HANDLER handler
          FOR l_i = 1 TO sr.getLength()
             OUTPUT TO REPORT axmr600_g01_rep(sr[l_i].*)
             #報表中斷列印時，顯示錯誤訊息
             IF fgl_report_getErrorStatus() THEN
                DISPLAY "FGL: STOPPING REPORT msg=\"",fgl_report_getErrorString(),"\""
                EXIT FOR
             END IF                  
          END FOR
          FINISH REPORT axmr600_g01_rep
       END IF
       #add-point:rep_data段印完 name="rep_data.after"
       
       #end add-point       
       IF g_rep_flag = TRUE THEN
          LET g_rep_flag = FALSE
          EXIT WHILE
       END IF
    END WHILE
    #add-point:rep_data段離開while印完前 name="rep_data.end.before"
    
    #end add-point
    CALL cl_gr_close_report()
    #add-point:rep_data段離開while印完後 name="rep_data.end.after"
    
    #end add-point    
END FUNCTION
 
{</section>}
 
{<section id="axmr600_g01.rep" readonly="Y" >}
PRIVATE REPORT axmr600_g01_rep(sr1)
DEFINE sr1 sr1_r
DEFINE sr2 sr2_r
DEFINE l_subrep01_show  LIKE type_t.chr1,
       l_subrep02_show  LIKE type_t.chr1,
       l_subrep03_show  LIKE type_t.chr1,
       l_subrep04_show  LIKE type_t.chr1
DEFINE l_cnt           LIKE type_t.num10
DEFINE l_sub_sql       STRING
#add-point:rep段define  (客製用) name="rep.define_customerization"

#end add-point
#add-point:rep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="rep.define"
DEFINE l_xmdk054_show  LIKE type_t.chr1,
       l_xmdl051_show  LIKE type_t.chr1,
       l_xmdl009_show  LIKE type_t.chr1,
       l_xmdl014_show  LIKE type_t.chr1,
       l_xmdl015_show  LIKE type_t.chr1,
       l_xmdl003_show  LIKE type_t.chr1
DEFINE sr3 sr3_r
DEFINE l_imaal004_show   LIKE type_t.chr1      #161031-00024#5 Add By ken 170206

#end add-point
 
    #add-point:rep段ORDER_before name="rep.order.before"
    
    #end add-point
    ORDER EXTERNAL BY sr1.xmdkdocno,sr1.xmdlseq
    #add-point:rep段ORDER_after name="rep.order.after"
    
    #end add-point
    
    FORMAT
       FIRST PAGE HEADER          
          PRINTX g_user,g_pdate,g_rep_code,g_company,g_ptime,g_user_name,g_date_fmt
          PRINTX tm.*
          PRINTX g_grNumFmt.*
          PRINTX g_rep_wcchp
 
          #讀取beforeGrup子樣板+子報表樣板
        #報表 d01 樣板自動產生(Version:2)
        BEFORE GROUP OF sr1.xmdkdocno
            #報表 d05 樣板自動產生(Version:6)
            CALL cl_gr_title_clear()  #清除title變數值 
            #add-point:rep.header  #公司資訊(不在公用變數內) name="rep.header"
            
            #end add-point:rep.header 
            LET g_rep_docno = sr1.xmdkdocno
            CALL cl_gr_init_pageheader() #表頭資訊
            PRINTX g_grPageHeader.*
            PRINTX g_grPageFooter.*
            #add-point:rep.apr.signstr.before name="rep.apr.signstr.before"
                          
            #end add-point:rep.apr.signstr.before   
            LET g_doc_key = 'xmdkent=' ,sr1.xmdkent,'{+}xmdkdocno=' ,sr1.xmdkdocno         
            CALL cl_gr_init_apr(sr1.xmdkdocno)
            #add-point:rep.apr.signstr name="rep.apr.signstr"
                          
            #end add-point:rep.apr.signstr
            PRINTX g_grSign.*
 
 
 
           #add-point:rep.b_group.xmdkdocno.before name="rep.b_group.xmdkdocno.before"
           #161031-00024#5 Add By Ken 170206(S)
           #規格若為空，則隱藏
           INITIALIZE l_imaal004_show TO NULL
           IF cl_null(sr1.x_imaal_t_imaal004) THEN
              LET l_imaal004_show = 'N'
           ELSE
              LET l_imaal004_show = 'Y'
           END IF
           PRINTX l_imaal004_show
           #161031-00024#5 Add By Ken 170206(E)  
           #end add-point:
 
           #報表 d03 樣板自動產生(Version:3)
           #add-point:rep.sub01.before name="rep.sub01.before"
           
           #end add-point:rep.sub01.before
 
           #add-point:rep.sub01.sql name="rep.sub01.sql"
           
           #end add-point:rep.sub01.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='6' AND ooff012='2' AND ooff004=0 AND ooffent = '", 
                sr1.xmdkent CLIPPED ,"'", " AND  ooff003 = '", sr1.xmdkdocno CLIPPED ,"'"
 
           #add-point:rep.sub01.afsql name="rep.sub01.afsql"
           
           #end add-point:rep.sub01.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep01_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE axmr600_g01_repcur01_cnt_pre FROM l_sub_sql
           EXECUTE axmr600_g01_repcur01_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep01_show ="Y"
           END IF
           PRINTX l_subrep01_show
           START REPORT axmr600_g01_subrep01
           DECLARE axmr600_g01_repcur01 CURSOR FROM g_sql
           FOREACH axmr600_g01_repcur01 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "axmr600_g01_repcur01:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub01.foreach name="rep.sub01.foreach"
              
              #end add-point:rep.sub01.foreach
              OUTPUT TO REPORT axmr600_g01_subrep01(sr2.*)
           END FOREACH
           FINISH REPORT axmr600_g01_subrep01
           #add-point:rep.sub01.after name="rep.sub01.after"
           
           #end add-point:rep.sub01.after
 
 
 
           #add-point:rep.b_group.xmdkdocno.after name="rep.b_group.xmdkdocno.after"
           
           #end add-point:
 
 
        #報表 d01 樣板自動產生(Version:2)
        BEFORE GROUP OF sr1.xmdlseq
 
           #add-point:rep.b_group.xmdlseq.before name="rep.b_group.xmdlseq.before"
           
           #end add-point:
 
 
           #add-point:rep.b_group.xmdlseq.after name="rep.b_group.xmdlseq.after"
           
           #end add-point:
 
 
 
 
       ON EVERY ROW
          #add-point:rep.everyrow.before name="rep.everyrow.before"
          
          #end add-point:rep.everyrow.before
 
          #單身前備註
             #報表 d03 樣板自動產生(Version:3)
           #add-point:rep.sub02.before name="rep.sub02.before"
           
           #end add-point:rep.sub02.before
 
           #add-point:rep.sub02.sql name="rep.sub02.sql"
           
           #end add-point:rep.sub02.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='7' AND ooff012='2' AND ooffent = '", 
                sr1.xmdkent CLIPPED ,"'", " AND  ooff003 = '", sr1.xmdkdocno CLIPPED ,"'", " AND  ooff004 = ", 
                sr1.xmdlseq CLIPPED ,""
 
           #add-point:rep.sub02.afsql name="rep.sub02.afsql"
           
           #end add-point:rep.sub02.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep02_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE axmr600_g01_repcur02_cnt_pre FROM l_sub_sql
           EXECUTE axmr600_g01_repcur02_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep02_show ="Y"
           END IF
           PRINTX l_subrep02_show
           START REPORT axmr600_g01_subrep02
           DECLARE axmr600_g01_repcur02 CURSOR FROM g_sql
           FOREACH axmr600_g01_repcur02 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "axmr600_g01_repcur02:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub02.foreach name="rep.sub02.foreach"
              
              #end add-point:rep.sub02.foreach
              OUTPUT TO REPORT axmr600_g01_subrep02(sr2.*)
           END FOREACH
           FINISH REPORT axmr600_g01_subrep02
           #add-point:rep.sub02.after name="rep.sub02.after"
           
           #end add-point:rep.sub02.after
 
 
 
          #add-point:rep.everyrow.beforerow name="rep.everyrow.beforerow"
          #單頭備註隱藏
          CALL axmr600_g01_show(sr1.xmdk054,'','') RETURNING l_xmdk054_show
          #單身備註隱藏
          CALL axmr600_g01_show(sr1.xmdl051,'','') RETURNING l_xmdl051_show
          #單身產品特徵
          CALL axmr600_g01_show(sr1.xmdl009,'','') RETURNING l_xmdl009_show
          #單身倉庫隱藏
          CALL axmr600_g01_show(sr1.xmdl014,'','') RETURNING l_xmdl014_show
          #單身儲位
          CALL axmr600_g01_show(sr1.xmdl015,'','') RETURNING l_xmdl015_show
          #單號
          CALL axmr600_g01_show(sr1.xmdl003,'','') RETURNING l_xmdl003_show
          
          PRINTX l_xmdk054_show
          PRINTX l_xmdl051_show
          PRINTX l_xmdl009_show
          PRINTX l_xmdl014_show
          PRINTX l_xmdl015_show
          PRINTX l_xmdl003_show
          #end add-point:rep.everyrow.beforerow
            
          PRINTX sr1.*
 
          #add-point:rep.everyrow.afterrow name="rep.everyrow.afterrow"
          START REPORT axmr600_g01_subrep05
            IF tm.a1 ="Y" AND NOT cl_null(sr1.xmdlseq) THEN
               LET g_sql = " SELECT xmdmdocno,xmdmseq,xmdmseq1,xmdm005,xmdm006,xmdm007,xmdm009,xmdm008,xmdment,trim(xmdm005)||'.'||trim(inayl003),trim(xmdm006)||'.'||trim(inab003) ",  
                           "  FROM xmdm_t LEFT OUTER JOIN inayl_t ON inayl001 = xmdm005 AND inaylent = xmdment AND inayl002 = '",g_dlang,"' ",
                           "              LEFT OUTER JOIN inab_t ON inab001 = xmdm005 AND inabent = xmdment AND inab002 = xmdm006 AND inabsite = '",g_site,"'",
                           "  WHERE xmdment = '",sr1.xmdkent,"' ",
                           "    AND xmdmdocno = '",sr1.xmdkdocno CLIPPED,"'",
                           "    AND xmdmseq   = '",sr1.xmdlseq CLIPPED,"' ",
                           "  ORDER BY xmdmseq1 "
               DECLARE axmr600_g01_repcur05 CURSOR FROM g_sql
               FOREACH axmr600_g01_repcur05 INTO sr3.*
                  CALL axmr600_g01_initialize(sr3.xmdm005,sr3.l_xmdm005_inayl003) RETURNING sr3.l_xmdm005_inayl003
                  CALL axmr600_g01_initialize(sr3.xmdm006,sr3.l_xmdm006_inab003) RETURNING sr3.l_xmdm006_inab003
                  OUTPUT TO REPORT axmr600_g01_subrep05(sr3.*)
               END FOREACH
            END IF
            FINISH REPORT axmr600_g01_subrep05
          #end add-point:rep.everyrow.afterrow
 
          #單身後備註
             #報表 d03 樣板自動產生(Version:3)
           #add-point:rep.sub03.before name="rep.sub03.before"
           
           #end add-point:rep.sub03.before
 
           #add-point:rep.sub03.sql name="rep.sub03.sql"
           
           #end add-point:rep.sub03.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='7' AND ooff012='1' AND ooffent = '", 
                sr1.xmdkent CLIPPED ,"'", " AND  ooff003 = '", sr1.xmdkdocno CLIPPED ,"'", " AND  ooff004 = ", 
                sr1.xmdlseq CLIPPED ,""
 
           #add-point:rep.sub03.afsql name="rep.sub03.afsql"
           
           #end add-point:rep.sub03.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep03_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE axmr600_g01_repcur03_cnt_pre FROM l_sub_sql
           EXECUTE axmr600_g01_repcur03_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep03_show ="Y"
           END IF
           PRINTX l_subrep03_show
           START REPORT axmr600_g01_subrep03
           DECLARE axmr600_g01_repcur03 CURSOR FROM g_sql
           FOREACH axmr600_g01_repcur03 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "axmr600_g01_repcur03:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub03.foreach name="rep.sub03.foreach"
              
              #end add-point:rep.sub03.foreach
              OUTPUT TO REPORT axmr600_g01_subrep03(sr2.*)
           END FOREACH
           FINISH REPORT axmr600_g01_subrep03
           #add-point:rep.sub03.after name="rep.sub03.after"
           
           #end add-point:rep.sub03.after
 
 
 
          #add-point:rep.everyrow.after name="rep.everyrow.after"
          
          #end add-point:rep.everyrow.after        
 
          #讀取afterGrup子樣板+子報表樣板
        #報表 d01 樣板自動產生(Version:2)
        AFTER GROUP OF sr1.xmdkdocno
 
           #add-point:rep.a_group.xmdkdocno.before name="rep.a_group.xmdkdocno.before"
           
           #end add-point:
 
           #報表 d03 樣板自動產生(Version:3)
           #add-point:rep.sub04.before name="rep.sub04.before"
           
           #end add-point:rep.sub04.before
 
           #add-point:rep.sub04.sql name="rep.sub04.sql"
           
           #end add-point:rep.sub04.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='6' AND ooff012='1' AND ooff004=0 AND ooffent = '", 
                sr1.xmdkent CLIPPED ,"'", " AND  ooff003 = '", sr1.xmdkdocno CLIPPED ,"'"
 
           #add-point:rep.sub04.afsql name="rep.sub04.afsql"
           
           #end add-point:rep.sub04.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep04_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE axmr600_g01_repcur04_cnt_pre FROM l_sub_sql
           EXECUTE axmr600_g01_repcur04_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep04_show ="Y"
           END IF
           PRINTX l_subrep04_show
           START REPORT axmr600_g01_subrep04
           DECLARE axmr600_g01_repcur04 CURSOR FROM g_sql
           FOREACH axmr600_g01_repcur04 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "axmr600_g01_repcur04:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub04.foreach name="rep.sub04.foreach"
              
              #end add-point:rep.sub04.foreach
              OUTPUT TO REPORT axmr600_g01_subrep04(sr2.*)
           END FOREACH
           FINISH REPORT axmr600_g01_subrep04
           #add-point:rep.sub04.after name="rep.sub04.after"
           
           #end add-point:rep.sub04.after
 
 
 
           #add-point:rep.a_group.xmdkdocno.after name="rep.a_group.xmdkdocno.after"
           
           #end add-point:
 
 
        #報表 d01 樣板自動產生(Version:2)
        AFTER GROUP OF sr1.xmdlseq
 
           #add-point:rep.a_group.xmdlseq.before name="rep.a_group.xmdlseq.before"
           
           #end add-point:
 
 
           #add-point:rep.a_group.xmdlseq.after name="rep.a_group.xmdlseq.after"
           
           #end add-point:
 
 
 
       ON LAST ROW
            #add-point:rep.lastrow.before name="rep.lastrow.before"  
                    
            #end add-point :rep.lastrow.before
 
            #add-point:rep.lastrow.after name="rep.lastrow.after"
            
            #end add-point :rep.lastrow.after
END REPORT
 
{</section>}
 
{<section id="axmr600_g01.subrep_str" readonly="Y" >}
#讀取子報表樣板
#報表 d02 樣板自動產生(Version:3)
PRIVATE REPORT axmr600_g01_subrep01(sr2)
DEFINE  sr2  sr2_r
#add-point:query段define(客製用) name="sub01.define_customerization" 

#end add-point
#add-point:sub01.define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sub01.define" 

#end add-point:sub01.define
 
    #add-point:sub01.order.before name="sub01.order.before" 
    
    #end add-point:sub01.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub01.everyrow.before name="sub01.everyrow.before" 
                          
            #end add-point:sub01.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub01.everyrow.after name="sub01.everyrow.after" 
            
            #end add-point:sub01.everyrow.after
 
 
END REPORT
 
 
#報表 d02 樣板自動產生(Version:3)
PRIVATE REPORT axmr600_g01_subrep02(sr2)
DEFINE  sr2  sr2_r
#add-point:query段define(客製用) name="sub02.define_customerization" 

#end add-point
#add-point:sub02.define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sub02.define" 

#end add-point:sub02.define
 
    #add-point:sub02.order.before name="sub02.order.before" 
    
    #end add-point:sub02.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub02.everyrow.before name="sub02.everyrow.before" 
                          
            #end add-point:sub02.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub02.everyrow.after name="sub02.everyrow.after" 
            
            #end add-point:sub02.everyrow.after
 
 
END REPORT
 
 
#報表 d02 樣板自動產生(Version:3)
PRIVATE REPORT axmr600_g01_subrep03(sr2)
DEFINE  sr2  sr2_r
#add-point:query段define(客製用) name="sub03.define_customerization" 

#end add-point
#add-point:sub03.define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sub03.define" 

#end add-point:sub03.define
 
    #add-point:sub03.order.before name="sub03.order.before" 
    
    #end add-point:sub03.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub03.everyrow.before name="sub03.everyrow.before" 
                          
            #end add-point:sub03.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub03.everyrow.after name="sub03.everyrow.after" 
            
            #end add-point:sub03.everyrow.after
 
 
END REPORT
 
 
#報表 d02 樣板自動產生(Version:3)
PRIVATE REPORT axmr600_g01_subrep04(sr2)
DEFINE  sr2  sr2_r
#add-point:query段define(客製用) name="sub04.define_customerization" 

#end add-point
#add-point:sub04.define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sub04.define" 

#end add-point:sub04.define
 
    #add-point:sub04.order.before name="sub04.order.before" 
    
    #end add-point:sub04.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub04.everyrow.before name="sub04.everyrow.before" 
                          
            #end add-point:sub04.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub04.everyrow.after name="sub04.everyrow.after" 
            
            #end add-point:sub04.everyrow.after
 
 
END REPORT
 
 
 
 
{</section>}
 
{<section id="axmr600_g01.other_function" readonly="Y" >}

################################################################################
# Descriptions...: 欄位隱藏
# Memo...........:
# Usage..........: CALL axmr600_g01_show(p_arg1,p_arg2,p_arg3)
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axmr600_g01_show(p_arg1,p_arg2,p_arg3)
   DEFINE p_arg1 LIKE type_t.chr1000
   DEFINE p_arg2 LIKE type_t.chr1000
   DEFINE p_arg3 LIKE type_t.chr1000
   DEFINE r_show LIKE type_t.chr1
   
     IF cl_null(p_arg1) AND cl_null(p_arg2) AND cl_null(p_arg3) THEN
        LET r_show = "N"
     ELSE
        LET r_show = "Y"
     END IF
     RETURN r_show

END FUNCTION

PRIVATE FUNCTION axmr600_g01_initialize(p_arg,p_exp)
DEFINE p_arg   STRING
DEFINE p_exp   STRING
DEFINE r_exp   STRING
   IF cl_null(p_arg) THEN
      INITIALIZE r_exp TO NULL
   ELSE
      LET r_exp = p_exp
   END IF
RETURN r_exp
END FUNCTION

 
{</section>}
 
{<section id="axmr600_g01.other_report" readonly="Y" >}

################################################################################
# Descriptions...: 多倉儲批出貨明細子報表
# Memo...........:
# Usage..........: CALL axmr600_g01_subrep05(sr3)
# Date & Author..:2014/7/18 By Hans
# Modify.........:
################################################################################
PRIVATE REPORT axmr600_g01_subrep05(sr3)
DEFINE sr3             sr3_r
DEFINE sr4             sr4_r  
  
  ORDER EXTERNAL BY  sr3.xmdmdocno,sr3.xmdmseq,sr3.xmdmseq1
      FORMAT
        ON EVERY ROW
           PRINTX g_grNumFmt.*
           PRINTX sr3.*

               START REPORT axmr600_g01_subrep06
               IF tm.a2 ="Y" THEN
                  LET g_sql = " SELECT inaodocno,inaoseq,inaoseq1,inaoseq2,inao008,inao009,inao012,inao010,inao011 ",
                              "   FROM inao_t ",
                              "  WHERE inaoent = '",sr3.xmdment,"' ",
                              "    AND inaodocno = '",sr3.xmdmdocno CLIPPED,"'",
                              "    AND inaoseq  = ",sr3.xmdmseq  CLIPPED,
                              "    AND inaoseq1 = ",sr3.xmdmseq1 CLIPPED,
                              "  ORDER BY inaoseq2 "
                  DECLARE axmr600_g01_repcur06 CURSOR FROM g_sql
                  FOREACH axmr600_g01_repcur06 INTO sr4.*
                     OUTPUT TO REPORT axmr600_g01_subrep06(sr4.*)
                  END FOREACH
               END IF
               FINISH REPORT axmr600_g01_subrep06
END REPORT

################################################################################
# Descriptions...: 批序號明細資料子報表
# Memo...........:
# Usage..........: CALL axmr600_g01_subrep06(sr4)
# Date & Author..: 2014/7/18 By Hans
# Modify.........:
################################################################################
REPORT axmr600_g01_subrep06(sr4)
   DEFINE sr4  sr4_r

   ORDER EXTERNAL BY sr4.inaodocno,sr4.inaoseq,sr4.inaoseq1,sr4.inaoseq2

   FORMAT
           
        ON EVERY ROW
            PRINTX g_grNumFmt.*
            PRINTX sr4.*
END REPORT

 
{</section>}
 
