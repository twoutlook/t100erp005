#該程式未解開Section, 採用最新樣板產出!
{<section id="axmt128.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0016(2016-06-29 14:10:28), PR版次:0016(2016-07-13 19:14:25)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000293
#+ Filename...: axmt128
#+ Description: 彈性銷售價格申請作業
#+ Creator....: 02295(2014-02-17 09:28:45)
#+ Modifier...: 06814 -SD/PR- 02159
 
{</section>}
 
{<section id="axmt128.global" >}
#應用 t01 樣板自動產生(Version:76)
#add-point:填寫註解說明
#151125-00001#4   2015/11/26   By 06948    增加作廢時詢問「是否作廢」
#151224-00025#5   2015/12/29   By dorishsu 產品特徵欄位若無開窗輸入反而自行手動輸入時,則無法新增至inam_t
#160314-00009#14  2016/03/29   By xujing   产品特征自动开窗增加参数判断
#160318-00005#48  2016/04/01   by pengxin  修正azzi920重复定义之错误讯息
#160318-00025#35  2016/04/15   by pengxin  將重複內容的錯誤訊息置換為公用錯誤訊息(r.v)
#160705-00042#11  2016/07/13   By sakura   程式中寫死g_prog部分改寫MATCHES方式
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_xmbt_m        RECORD
       xmbtdocno LIKE xmbt_t.xmbtdocno, 
   xmbtdocno_desc LIKE type_t.chr80, 
   xmbtdocdt LIKE xmbt_t.xmbtdocdt, 
   xmbt900 LIKE xmbt_t.xmbt900, 
   xmbt900_desc LIKE type_t.chr80, 
   xmbt901 LIKE xmbt_t.xmbt901, 
   xmbt901_desc LIKE type_t.chr80, 
   xmbtstus LIKE xmbt_t.xmbtstus, 
   xmbt001 LIKE xmbt_t.xmbt001, 
   xmbt001_desc LIKE type_t.chr80, 
   xmbt002 LIKE xmbt_t.xmbt002, 
   xmbt002_desc LIKE type_t.chr80, 
   xmbt003 LIKE xmbt_t.xmbt003, 
   xmbt003_desc LIKE type_t.chr80, 
   xmbt005 LIKE xmbt_t.xmbt005, 
   xmbt005_desc LIKE type_t.chr80, 
   xmbt007 LIKE xmbt_t.xmbt007, 
   xmbt006 LIKE xmbt_t.xmbt006, 
   xmbtownid LIKE xmbt_t.xmbtownid, 
   xmbtownid_desc LIKE type_t.chr80, 
   xmbtowndp LIKE xmbt_t.xmbtowndp, 
   xmbtowndp_desc LIKE type_t.chr80, 
   xmbtcrtid LIKE xmbt_t.xmbtcrtid, 
   xmbtcrtid_desc LIKE type_t.chr80, 
   xmbtcrtdp LIKE xmbt_t.xmbtcrtdp, 
   xmbtcrtdp_desc LIKE type_t.chr80, 
   xmbtcrtdt LIKE xmbt_t.xmbtcrtdt, 
   xmbtmodid LIKE xmbt_t.xmbtmodid, 
   xmbtmodid_desc LIKE type_t.chr80, 
   xmbtmoddt LIKE xmbt_t.xmbtmoddt, 
   xmbtcnfid LIKE xmbt_t.xmbtcnfid, 
   xmbtcnfid_desc LIKE type_t.chr80, 
   xmbtcnfdt LIKE xmbt_t.xmbtcnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_xmbu_d        RECORD
       xmbu010 LIKE xmbu_t.xmbu010, 
   xmbu011 LIKE xmbu_t.xmbu011, 
   xmbu011_desc LIKE type_t.chr500, 
   xmbu011_desc_desc LIKE type_t.chr500, 
   xmbu012 LIKE xmbu_t.xmbu012, 
   xmbu012_desc LIKE type_t.chr500, 
   xmbu031 LIKE xmbu_t.xmbu031, 
   xmbu031_desc LIKE type_t.chr500, 
   xmbu032 LIKE xmbu_t.xmbu032, 
   xmbu032_desc LIKE type_t.chr500, 
   xmbu013 LIKE xmbu_t.xmbu013, 
   xmbu013_desc LIKE type_t.chr500, 
   xmbu014 LIKE xmbu_t.xmbu014, 
   xmbu014_desc LIKE type_t.chr500, 
   xmbu015 LIKE xmbu_t.xmbu015, 
   xmbu015_desc LIKE type_t.chr500, 
   xmbu016 LIKE xmbu_t.xmbu016, 
   xmbu016_desc LIKE type_t.chr500, 
   xmbu017 LIKE xmbu_t.xmbu017, 
   xmbu017_desc LIKE type_t.chr500, 
   xmbu018 LIKE xmbu_t.xmbu018, 
   xmbu018_desc LIKE type_t.chr500, 
   xmbu019 LIKE xmbu_t.xmbu019, 
   xmbu019_desc LIKE type_t.chr500, 
   oodb005 LIKE type_t.chr1, 
   xmbu020 LIKE xmbu_t.xmbu020, 
   xmbu020_desc LIKE type_t.chr500, 
   xmbu021 LIKE xmbu_t.xmbu021, 
   xmbu021_desc LIKE type_t.chr500, 
   xmbu022 LIKE xmbu_t.xmbu022
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_xmbtdocno LIKE xmbt_t.xmbtdocno,
   b_xmbtdocno_desc LIKE type_t.chr80,
      b_xmbt900 LIKE xmbt_t.xmbt900,
   b_xmbt900_desc LIKE type_t.chr80,
      b_xmbt901 LIKE xmbt_t.xmbt901,
   b_xmbt901_desc LIKE type_t.chr80,
      b_xmbtdocdt LIKE xmbt_t.xmbtdocdt
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE g_ooef        RECORD LIKE ooef_t.*
DEFINE g_xmas001         LIKE xmas_t.xmas001
DEFINE g_column_chk      LIKE type_t.num5                  #判斷隱藏的欄位
DEFINE g_xmbt001        LIKE xmbt_t.xmbt001                #2015/07/16 by stellar add
#end add-point
       
#模組變數(Module Variables)
DEFINE g_xmbt_m          type_g_xmbt_m
DEFINE g_xmbt_m_t        type_g_xmbt_m
DEFINE g_xmbt_m_o        type_g_xmbt_m
DEFINE g_xmbt_m_mask_o   type_g_xmbt_m #轉換遮罩前資料
DEFINE g_xmbt_m_mask_n   type_g_xmbt_m #轉換遮罩後資料
 
   DEFINE g_xmbtdocno_t LIKE xmbt_t.xmbtdocno
 
 
DEFINE g_xmbu_d          DYNAMIC ARRAY OF type_g_xmbu_d
DEFINE g_xmbu_d_t        type_g_xmbu_d
DEFINE g_xmbu_d_o        type_g_xmbu_d
DEFINE g_xmbu_d_mask_o   DYNAMIC ARRAY OF type_g_xmbu_d #轉換遮罩前資料
DEFINE g_xmbu_d_mask_n   DYNAMIC ARRAY OF type_g_xmbu_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="axmt128.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   DEFINE i    LIKE type_t.num5
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axm","")
 
   #add-point:作業初始化 name="main.init"
   SELECT * INTO g_ooef.* FROM ooef_t WHERE ooefent = g_enterprise AND ooef001 = g_site
   FOR i = 1 TO 2
      LET g_argv[i] = cl_replace_str(g_argv[i], '\"', '')
   END FOR
   LET g_xmas001 = g_argv[2]                                    
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
                                    
   #end add-point
   LET g_forupd_sql = " SELECT xmbtdocno,'',xmbtdocdt,xmbt900,'',xmbt901,'',xmbtstus,xmbt001,'',xmbt002, 
       '',xmbt003,'',xmbt005,'',xmbt007,xmbt006,xmbtownid,'',xmbtowndp,'',xmbtcrtid,'',xmbtcrtdp,'', 
       xmbtcrtdt,xmbtmodid,'',xmbtmoddt,xmbtcnfid,'',xmbtcnfdt", 
                      " FROM xmbt_t",
                      " WHERE xmbtent= ? AND xmbtdocno=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
                                    
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt128_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.xmbtdocno,t0.xmbtdocdt,t0.xmbt900,t0.xmbt901,t0.xmbtstus,t0.xmbt001, 
       t0.xmbt002,t0.xmbt003,t0.xmbt005,t0.xmbt007,t0.xmbt006,t0.xmbtownid,t0.xmbtowndp,t0.xmbtcrtid, 
       t0.xmbtcrtdp,t0.xmbtcrtdt,t0.xmbtmodid,t0.xmbtmoddt,t0.xmbtcnfid,t0.xmbtcnfdt,t1.ooag011 ,t2.ooefl003 , 
       t3.ooall004 ,t4.oohal003 ,t5.ooail003 ,t6.oojdl003 ,t7.ooag011 ,t8.ooefl003 ,t9.ooag011 ,t10.ooefl003 , 
       t11.ooag011 ,t12.ooag011",
               " FROM xmbt_t t0",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent="||g_enterprise||" AND t1.ooag001=t0.xmbt900  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=t0.xmbt901 AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooall_t t3 ON t3.ooallent="||g_enterprise||" AND t3.ooall001='15' AND t3.ooall002=t0.xmbt001 AND t3.ooall003='"||g_dlang||"' ",
               " LEFT JOIN oohal_t t4 ON t4.oohalent="||g_enterprise||" AND t4.oohal001=t0.xmbt002 AND t4.oohal002='"||g_dlang||"' ",
               " LEFT JOIN ooail_t t5 ON t5.ooailent="||g_enterprise||" AND t5.ooail001=t0.xmbt003 AND t5.ooail002='"||g_dlang||"' ",
               " LEFT JOIN oojdl_t t6 ON t6.oojdlent="||g_enterprise||" AND t6.oojdl001=t0.xmbt005 AND t6.oojdl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent="||g_enterprise||" AND t7.ooag001=t0.xmbtownid  ",
               " LEFT JOIN ooefl_t t8 ON t8.ooeflent="||g_enterprise||" AND t8.ooefl001=t0.xmbtowndp AND t8.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t9 ON t9.ooagent="||g_enterprise||" AND t9.ooag001=t0.xmbtcrtid  ",
               " LEFT JOIN ooefl_t t10 ON t10.ooeflent="||g_enterprise||" AND t10.ooefl001=t0.xmbtcrtdp AND t10.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t11 ON t11.ooagent="||g_enterprise||" AND t11.ooag001=t0.xmbtmodid  ",
               " LEFT JOIN ooag_t t12 ON t12.ooagent="||g_enterprise||" AND t12.ooag001=t0.xmbtcnfid  ",
 
               " WHERE t0.xmbtent = " ||g_enterprise|| " AND t0.xmbtdocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE axmt128_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
                                                                        
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axmt128 WITH FORM cl_ap_formpath("axm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axmt128_init()   
 
      #進入選單 Menu (="N")
      CALL axmt128_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
                                                                        
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axmt128
      
   END IF 
   
   CLOSE axmt128_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
                                    
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="axmt128.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION axmt128_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
                                    
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('xmbtstus','13','N,Y,A,D,R,W,X')
 
      CALL cl_set_combo_scc('xmbt007','2020') 
   CALL cl_set_combo_scc('xmbu010','32') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1',","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   CALL cl_set_combo_scc('b_xmbt007','2020')
   CALL axmt128_set_visible() 
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0036') = 'N' THEN 
      CALL cl_set_comp_visible("xmau012,xmau012_desc",FALSE)
   END IF   

   #2015/07/16 by stellar add ----- (S)
   #取得銷售價格參照表號
   CALL cl_get_para(g_enterprise,g_site,'S-BAS-0009') RETURNING g_xmbt001
   #2015/07/16 by stellar add ----- (E)
   #end add-point
   
   #初始化搜尋條件
   CALL axmt128_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="axmt128.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION axmt128_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
                                    
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL axmt128_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
                                                                                                                                                
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
                                                                        
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
  
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_xmbt_m.* TO NULL
         CALL g_xmbu_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL axmt128_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL axmt128_fetch('') # reload data
               LET l_ac = 1
               CALL axmt128_ui_detailshow() #Setting the current row 
         
               CALL axmt128_idx_chk()
               #NEXT FIELD xmbu011
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_xmbu_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axmt128_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
                                                                                                                                                                                    
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL axmt128_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
                                                                                                                                                                                    
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
                                                                                                                                                
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
                                                                                                            
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL axmt128_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL axmt128_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL axmt128_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL axmt128_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
                                                                                                                                                
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL axmt128_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL axmt128_set_act_visible()   
            CALL axmt128_set_act_no_visible()
            IF NOT (g_xmbt_m.xmbtdocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " xmbtent = " ||g_enterprise|| " AND",
                                  " xmbtdocno = '", g_xmbt_m.xmbtdocno, "' "
 
               #填到對應位置
               CALL axmt128_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:3)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status name="menu.bpm_status"
            
            #END add-point
 
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "xmbt_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmbu_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL axmt128_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "xmbt_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmbu_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL axmt128_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL axmt128_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:4)
            #過濾瀏覽頁資料
            ON ACTION filter
               LET g_action_choice = "fetch"
               #add-point:filter action name="ui_dialog.action.filter"
               
               #end add-point
               CALL axmt128_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL axmt128_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt128_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL axmt128_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt128_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL axmt128_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt128_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL axmt128_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt128_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL axmt128_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt128_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_xmbu_d)
                  LET g_export_id[1]   = "s_detail1"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD xmbu011
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL axmt128_modify()
               #add-point:ON ACTION modify name="menu.modify"
                                                                                                                                                                                    
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL axmt128_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
                                                                                                                                                                                    
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL axmt128_delete()
               #add-point:ON ACTION delete name="menu.delete"
                                                                                                                                                                                    
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL axmt128_insert()
               #add-point:ON ACTION insert name="menu.insert"
                                                                                                                                                                                    
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
                                                                                                                                                                                    
               #END add-point
               &include "erp/axm/axmt128_rep.4gl"
               #add-point:ON ACTION output.after
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL axmt128_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
                                                                                                                                                                                    
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL axmt128_query()
               #add-point:ON ACTION query name="menu.query"
                                                                                                                                                                                    
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
 
 
 
 
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION memo
            LET g_action_choice="memo"
            IF cl_auth_chk_act("memo") THEN
               
               #add-point:ON ACTION memo name="menu.memo"
               CALL aooi360_02('6','axmt128',g_xmbt_m.xmbtdocno,'','','','','','','','','')
               #END add-point
               
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL axmt128_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL axmt128_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL axmt128_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow(g_xmbt_m.xmbtdocdt)
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
 
{</section>}
 
{<section id="axmt128.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION axmt128_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   DEFINE l_ooba002         LIKE ooba_t.ooba002
   DEFINE l_xmbt006         LIKE xmbt_t.xmbt006 
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   #2015/07/16 by stellar add ----- (S)
   #限制條件：只能查該據點使用的參照表號
   LET g_wc = g_wc CLIPPED," AND xmbt001 = '",g_xmbt001,"'"
   #2015/07/16 by stellar add ----- (E)
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   CALL axmt128_def_xmbt006() RETURNING l_xmbt006
   LET l_wc = l_wc," AND xmbt006 = '",l_xmbt006 CLIPPED,"'"     
   LET g_wc = g_wc," AND xmbt006 = '",l_xmbt006 CLIPPED,"'"     
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT xmbtdocno ",
                      " FROM xmbt_t ",
                      " ",
                      " LEFT JOIN xmbu_t ON xmbuent = xmbtent AND xmbtdocno = xmbudocno ", "  ",
                      #add-point:browser_fill段sql(xmbu_t1) name="browser_fill.cnt.join.}"
                      
                      #end add-point
 
 
                      " ", 
                      " ", 
 
 
                      " WHERE xmbtent = " ||g_enterprise|| " AND xmbuent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("xmbt_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT xmbtdocno ",
                      " FROM xmbt_t ", 
                      "  ",
                      "  ",
                      " WHERE xmbtent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("xmbt_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
                                    
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_xmbt_m.* TO NULL
      CALL g_xmbu_d.clear()        
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.xmbtdocno,t0.xmbt900,t0.xmbt901,t0.xmbtdocdt Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.xmbtstus,t0.xmbtdocno,t0.xmbt900,t0.xmbt901,t0.xmbtdocdt,t1.ooag011 , 
          t2.ooefl003 ",
                  " FROM xmbt_t t0",
                  "  ",
                  "  LEFT JOIN xmbu_t ON xmbuent = xmbtent AND xmbtdocno = xmbudocno ", "  ", 
                  #add-point:browser_fill段sql(xmbu_t1) name="browser_fill.join.xmbu_t1"
                  
                  #end add-point
 
 
                  " ", 
 
 
                                 " LEFT JOIN ooag_t t1 ON t1.ooagent="||g_enterprise||" AND t1.ooag001=t0.xmbt900  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=t0.xmbt901 AND t2.ooefl002='"||g_dlang||"' ",
 
                  " WHERE t0.xmbtent = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("xmbt_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.xmbtstus,t0.xmbtdocno,t0.xmbt900,t0.xmbt901,t0.xmbtdocdt,t1.ooag011 , 
          t2.ooefl003 ",
                  " FROM xmbt_t t0",
                  "  ",
                                 " LEFT JOIN ooag_t t1 ON t1.ooagent="||g_enterprise||" AND t1.ooag001=t0.xmbt900  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=t0.xmbt901 AND t2.ooefl002='"||g_dlang||"' ",
 
                  " WHERE t0.xmbtent = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("xmbt_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   
   #end add-point
   LET g_sql = g_sql, " ORDER BY xmbtdocno ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
                                    
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"xmbt_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
                                    
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_xmbtdocno,g_browser[g_cnt].b_xmbt900, 
          g_browser[g_cnt].b_xmbt901,g_browser[g_cnt].b_xmbtdocdt,g_browser[g_cnt].b_xmbt900_desc,g_browser[g_cnt].b_xmbt901_desc 
 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
                                                                              CALL axmt128_xmbtdocno_desc('2',g_browser[g_cnt].b_xmbtdocno)  RETURNING g_browser[g_cnt].b_xmbtdocno_desc
      DISPLAY BY NAME g_browser[g_cnt].b_xmbtdocno_desc      
         #end add-point
      
         #遮罩相關處理
         CALL axmt128_browser_mask()
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_xmbtdocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
                                    
   #end add-point   
 
END FUNCTION
 
{</section>}
 
{<section id="axmt128.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION axmt128_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
                                    
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_xmbt_m.xmbtdocno = g_browser[g_current_idx].b_xmbtdocno   
 
   EXECUTE axmt128_master_referesh USING g_xmbt_m.xmbtdocno INTO g_xmbt_m.xmbtdocno,g_xmbt_m.xmbtdocdt, 
       g_xmbt_m.xmbt900,g_xmbt_m.xmbt901,g_xmbt_m.xmbtstus,g_xmbt_m.xmbt001,g_xmbt_m.xmbt002,g_xmbt_m.xmbt003, 
       g_xmbt_m.xmbt005,g_xmbt_m.xmbt007,g_xmbt_m.xmbt006,g_xmbt_m.xmbtownid,g_xmbt_m.xmbtowndp,g_xmbt_m.xmbtcrtid, 
       g_xmbt_m.xmbtcrtdp,g_xmbt_m.xmbtcrtdt,g_xmbt_m.xmbtmodid,g_xmbt_m.xmbtmoddt,g_xmbt_m.xmbtcnfid, 
       g_xmbt_m.xmbtcnfdt,g_xmbt_m.xmbt900_desc,g_xmbt_m.xmbt901_desc,g_xmbt_m.xmbt001_desc,g_xmbt_m.xmbt002_desc, 
       g_xmbt_m.xmbt003_desc,g_xmbt_m.xmbt005_desc,g_xmbt_m.xmbtownid_desc,g_xmbt_m.xmbtowndp_desc,g_xmbt_m.xmbtcrtid_desc, 
       g_xmbt_m.xmbtcrtdp_desc,g_xmbt_m.xmbtmodid_desc,g_xmbt_m.xmbtcnfid_desc
   
   CALL axmt128_xmbt_t_mask()
   CALL axmt128_show()
      
END FUNCTION
 
{</section>}
 
{<section id="axmt128.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION axmt128_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
                                    
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   #dorislai
   IF g_xmbu_d[l_ac].xmbu011 = 1 THEN
      LET g_xmbu_d[l_ac].xmbu011 = ''
   END IF
   IF g_xmbu_d[l_ac].xmbu031 = 1 THEN
      LET g_xmbu_d[l_ac].xmbu031 = ''
   END IF
   IF g_xmbu_d[l_ac].xmbu032 = 1 THEN
      LET g_xmbu_d[l_ac].xmbu032 = ''
   END IF
   #dorislai   
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
                                    
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="axmt128.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION axmt128_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
                                    
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_xmbtdocno = g_xmbt_m.xmbtdocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="axmt128.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION axmt128_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
                                    
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_xmbt_m.* TO NULL
   CALL g_xmbu_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   #2015/07/16 by stellar add ----- (S)
   LET g_xmbt_m.xmbt001 = g_xmbt001
   DISPLAY BY NAME g_xmbt_m.xmbt001
   CALL axmt128_xmbt001_desc()
   #2015/07/16 by stellar add ----- (E)               
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON xmbtdocno,xmbtdocno_desc,xmbtdocdt,xmbt900,xmbt901,xmbtstus,xmbt002, 
          xmbt003,xmbt005,xmbt007,xmbt006,xmbtownid,xmbtowndp,xmbtcrtid,xmbtcrtdp,xmbtcrtdt,xmbtmodid, 
          xmbtmoddt,xmbtcnfid,xmbtcnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
                                                                                                                                                
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<xmbtcrtdt>>----
         AFTER FIELD xmbtcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<xmbtmoddt>>----
         AFTER FIELD xmbtmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmbtcnfdt>>----
         AFTER FIELD xmbtcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmbtpstdt>>----
 
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.xmbtdocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbtdocno
            #add-point:ON ACTION controlp INFIELD xmbtdocno name="construct.c.xmbtdocno"
                                                                                                                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_xmbtdocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmbtdocno  #顯示到畫面上

            NEXT FIELD xmbtdocno                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbtdocno
            #add-point:BEFORE FIELD xmbtdocno name="construct.b.xmbtdocno"
                                                                                                                                                
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbtdocno
            
            #add-point:AFTER FIELD xmbtdocno name="construct.a.xmbtdocno"
                                                                                                                                                
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbtdocno_desc
            #add-point:BEFORE FIELD xmbtdocno_desc name="construct.b.xmbtdocno_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbtdocno_desc
            
            #add-point:AFTER FIELD xmbtdocno_desc name="construct.a.xmbtdocno_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmbtdocno_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbtdocno_desc
            #add-point:ON ACTION controlp INFIELD xmbtdocno_desc name="construct.c.xmbtdocno_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbtdocdt
            #add-point:BEFORE FIELD xmbtdocdt name="construct.b.xmbtdocdt"
                                                                                                                                                
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbtdocdt
            
            #add-point:AFTER FIELD xmbtdocdt name="construct.a.xmbtdocdt"
                                                                                                                                                
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmbtdocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbtdocdt
            #add-point:ON ACTION controlp INFIELD xmbtdocdt name="construct.c.xmbtdocdt"
                                                                                                                                                
            #END add-point
 
 
         #Ctrlp:construct.c.xmbt900
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbt900
            #add-point:ON ACTION controlp INFIELD xmbt900 name="construct.c.xmbt900"
                                                                                                                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmbt900  #顯示到畫面上

            NEXT FIELD xmbt900                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbt900
            #add-point:BEFORE FIELD xmbt900 name="construct.b.xmbt900"
                                                                                                                                                
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbt900
            
            #add-point:AFTER FIELD xmbt900 name="construct.a.xmbt900"
                                                                                                                                                
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmbt901
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbt901
            #add-point:ON ACTION controlp INFIELD xmbt901 name="construct.c.xmbt901"
                                                                                                                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = g_xmbt_m.xmbtdocdt
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmbt901  #顯示到畫面上

            NEXT FIELD xmbt901                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbt901
            #add-point:BEFORE FIELD xmbt901 name="construct.b.xmbt901"
                                                                                                                                                
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbt901
            
            #add-point:AFTER FIELD xmbt901 name="construct.a.xmbt901"
                                                                                                                                                
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbtstus
            #add-point:BEFORE FIELD xmbtstus name="construct.b.xmbtstus"
                                                                                                                                                
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbtstus
            
            #add-point:AFTER FIELD xmbtstus name="construct.a.xmbtstus"
                                                                                                                                                
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmbtstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbtstus
            #add-point:ON ACTION controlp INFIELD xmbtstus name="construct.c.xmbtstus"
                                                                                                                                                
            #END add-point
 
 
         #Ctrlp:construct.c.xmbt002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbt002
            #add-point:ON ACTION controlp INFIELD xmbt002 name="construct.c.xmbt002"
                                                                                                                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooha001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmbt002  #顯示到畫面上

            NEXT FIELD xmbt002                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbt002
            #add-point:BEFORE FIELD xmbt002 name="construct.b.xmbt002"
                                                                                                                                                
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbt002
            
            #add-point:AFTER FIELD xmbt002 name="construct.a.xmbt002"
                                                                                                                                                
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmbt003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbt003
            #add-point:ON ACTION controlp INFIELD xmbt003 name="construct.c.xmbt003"
                                                                                                                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = 'ALL'
            CALL q_ooaj002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmbt003  #顯示到畫面上

            NEXT FIELD xmbt003                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbt003
            #add-point:BEFORE FIELD xmbt003 name="construct.b.xmbt003"
                                                                                                                                                
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbt003
            
            #add-point:AFTER FIELD xmbt003 name="construct.a.xmbt003"
                                                                                                                                                
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmbt005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbt005
            #add-point:ON ACTION controlp INFIELD xmbt005 name="construct.c.xmbt005"
                                                                                                                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			   #160621-00003#3 20160627 modify by beckxie---S
			   #LET g_qryparam.arg1 = "275"
            #CALL q_oocq002()                           #呼叫開窗
            LET g_qryparam.arg1 = '1'
            CALL q_oojd001_1()
            #160621-00003#3 20160627 modify by beckxie---E
            DISPLAY g_qryparam.return1 TO xmbt005  #顯示到畫面上

            NEXT FIELD xmbt005                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbt005
            #add-point:BEFORE FIELD xmbt005 name="construct.b.xmbt005"
                                                                                                                                                
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbt005
            
            #add-point:AFTER FIELD xmbt005 name="construct.a.xmbt005"
                                                                                                                                                
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbt007
            #add-point:BEFORE FIELD xmbt007 name="construct.b.xmbt007"
                                                                                                                                                
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbt007
            
            #add-point:AFTER FIELD xmbt007 name="construct.a.xmbt007"
                                                                                                                                                
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmbt007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbt007
            #add-point:ON ACTION controlp INFIELD xmbt007 name="construct.c.xmbt007"
                                                                                                                                                
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbt006
            #add-point:BEFORE FIELD xmbt006 name="construct.b.xmbt006"
                                                                                                                                                
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbt006
            
            #add-point:AFTER FIELD xmbt006 name="construct.a.xmbt006"
                                                                                                                                                
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmbt006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbt006
            #add-point:ON ACTION controlp INFIELD xmbt006 name="construct.c.xmbt006"
                                                                                                                                                
            #END add-point
 
 
         #Ctrlp:construct.c.xmbtownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbtownid
            #add-point:ON ACTION controlp INFIELD xmbtownid name="construct.c.xmbtownid"
                                                                                                                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmbtownid  #顯示到畫面上

            NEXT FIELD xmbtownid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbtownid
            #add-point:BEFORE FIELD xmbtownid name="construct.b.xmbtownid"
                                                                                                                                                
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbtownid
            
            #add-point:AFTER FIELD xmbtownid name="construct.a.xmbtownid"
                                                                                                                                                
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmbtowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbtowndp
            #add-point:ON ACTION controlp INFIELD xmbtowndp name="construct.c.xmbtowndp"
                                                                                                                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmbtowndp  #顯示到畫面上

            NEXT FIELD xmbtowndp                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbtowndp
            #add-point:BEFORE FIELD xmbtowndp name="construct.b.xmbtowndp"
                                                                                                                                                
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbtowndp
            
            #add-point:AFTER FIELD xmbtowndp name="construct.a.xmbtowndp"
                                                                                                                                                
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmbtcrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbtcrtid
            #add-point:ON ACTION controlp INFIELD xmbtcrtid name="construct.c.xmbtcrtid"
                                                                                                                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmbtcrtid  #顯示到畫面上

            NEXT FIELD xmbtcrtid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbtcrtid
            #add-point:BEFORE FIELD xmbtcrtid name="construct.b.xmbtcrtid"
                                                                                                                                                
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbtcrtid
            
            #add-point:AFTER FIELD xmbtcrtid name="construct.a.xmbtcrtid"
                                                                                                                                                
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmbtcrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbtcrtdp
            #add-point:ON ACTION controlp INFIELD xmbtcrtdp name="construct.c.xmbtcrtdp"
                                                                                                                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmbtcrtdp  #顯示到畫面上

            NEXT FIELD xmbtcrtdp                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbtcrtdp
            #add-point:BEFORE FIELD xmbtcrtdp name="construct.b.xmbtcrtdp"
                                                                                                                                                
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbtcrtdp
            
            #add-point:AFTER FIELD xmbtcrtdp name="construct.a.xmbtcrtdp"
                                                                                                                                                
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbtcrtdt
            #add-point:BEFORE FIELD xmbtcrtdt name="construct.b.xmbtcrtdt"
                                                                                                                                                
            #END add-point
 
 
         #Ctrlp:construct.c.xmbtmodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbtmodid
            #add-point:ON ACTION controlp INFIELD xmbtmodid name="construct.c.xmbtmodid"
                                                                                                                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmbtmodid  #顯示到畫面上

            NEXT FIELD xmbtmodid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbtmodid
            #add-point:BEFORE FIELD xmbtmodid name="construct.b.xmbtmodid"
                                                                                                                                                
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbtmodid
            
            #add-point:AFTER FIELD xmbtmodid name="construct.a.xmbtmodid"
                                                                                                                                                
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbtmoddt
            #add-point:BEFORE FIELD xmbtmoddt name="construct.b.xmbtmoddt"
                                                                                                                                                
            #END add-point
 
 
         #Ctrlp:construct.c.xmbtcnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbtcnfid
            #add-point:ON ACTION controlp INFIELD xmbtcnfid name="construct.c.xmbtcnfid"
                                                                                                                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmbtcnfid  #顯示到畫面上

            NEXT FIELD xmbtcnfid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbtcnfid
            #add-point:BEFORE FIELD xmbtcnfid name="construct.b.xmbtcnfid"
                                                                                                                                                
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbtcnfid
            
            #add-point:AFTER FIELD xmbtcnfid name="construct.a.xmbtcnfid"
                                                                                                                                                
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbtcnfdt
            #add-point:BEFORE FIELD xmbtcnfdt name="construct.b.xmbtcnfdt"
                                                                                                                                                
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON xmbu010,xmbu011,xmbu012,xmbu012_desc,xmbu031,xmbu032,xmbu013,xmbu014, 
          xmbu015,xmbu016,xmbu017,xmbu018,xmbu019,xmbu019_desc,xmbu020,xmbu021,xmbu022
           FROM s_detail1[1].xmbu010,s_detail1[1].xmbu011,s_detail1[1].xmbu012,s_detail1[1].xmbu012_desc, 
               s_detail1[1].xmbu031,s_detail1[1].xmbu032,s_detail1[1].xmbu013,s_detail1[1].xmbu014,s_detail1[1].xmbu015, 
               s_detail1[1].xmbu016,s_detail1[1].xmbu017,s_detail1[1].xmbu018,s_detail1[1].xmbu019,s_detail1[1].xmbu019_desc, 
               s_detail1[1].xmbu020,s_detail1[1].xmbu021,s_detail1[1].xmbu022
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
                                                                                                                                                
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbu010
            #add-point:BEFORE FIELD xmbu010 name="construct.b.page1.xmbu010"
                                                                                                                                                
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbu010
            
            #add-point:AFTER FIELD xmbu010 name="construct.a.page1.xmbu010"
                                                                                                                                                
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmbu010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbu010
            #add-point:ON ACTION controlp INFIELD xmbu010 name="construct.c.page1.xmbu010"
                                                                                                                                                
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmbu011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbu011
            #add-point:ON ACTION controlp INFIELD xmbu011 name="construct.c.page1.xmbu011"
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.arg1 = 'ALL'
            CALL q_imaf001_7()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmbu011  #顯示到畫面上
            NEXT FIELD xmbu011                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbu011
            #add-point:BEFORE FIELD xmbu011 name="construct.b.page1.xmbu011"
                                                                                                                                                
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbu011
            
            #add-point:AFTER FIELD xmbu011 name="construct.a.page1.xmbu011"
                                                                                                                                                
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbu012
            #add-point:BEFORE FIELD xmbu012 name="construct.b.page1.xmbu012"
                                                                                                                                                
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbu012
            
            #add-point:AFTER FIELD xmbu012 name="construct.a.page1.xmbu012"
                                                                                                                                                
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmbu012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbu012
            #add-point:ON ACTION controlp INFIELD xmbu012 name="construct.c.page1.xmbu012"
                                                                                                                                                
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbu012_desc
            #add-point:BEFORE FIELD xmbu012_desc name="construct.b.page1.xmbu012_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbu012_desc
            
            #add-point:AFTER FIELD xmbu012_desc name="construct.a.page1.xmbu012_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmbu012_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbu012_desc
            #add-point:ON ACTION controlp INFIELD xmbu012_desc name="construct.c.page1.xmbu012_desc"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmbu031
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbu031
            #add-point:ON ACTION controlp INFIELD xmbu031 name="construct.c.page1.xmbu031"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '2003'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmbu031  #顯示到畫面上
            NEXT FIELD xmbu031                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbu031
            #add-point:BEFORE FIELD xmbu031 name="construct.b.page1.xmbu031"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbu031
            
            #add-point:AFTER FIELD xmbu031 name="construct.a.page1.xmbu031"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmbu032
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbu032
            #add-point:ON ACTION controlp INFIELD xmbu032 name="construct.c.page1.xmbu032"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_rtax001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmbu032  #顯示到畫面上
            NEXT FIELD xmbu032                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbu032
            #add-point:BEFORE FIELD xmbu032 name="construct.b.page1.xmbu032"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbu032
            
            #add-point:AFTER FIELD xmbu032 name="construct.a.page1.xmbu032"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmbu013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbu013
            #add-point:ON ACTION controlp INFIELD xmbu013 name="construct.c.page1.xmbu013"
                                                                                                                                                            #此段落由子樣板a08產生
            #開窗c段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
		   	LET g_qryparam.reqry = FALSE
            CALL q_ooce001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmbu013  #顯示到畫面上

            NEXT FIELD xmbu013                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbu013
            #add-point:BEFORE FIELD xmbu013 name="construct.b.page1.xmbu013"
                                                                                                                                                
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbu013
            
            #add-point:AFTER FIELD xmbu013 name="construct.a.page1.xmbu013"
                                                                                                                                                
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmbu014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbu014
            #add-point:ON ACTION controlp INFIELD xmbu014 name="construct.c.page1.xmbu014"
                                                                                                                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_oocg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmbu014  #顯示到畫面上

            NEXT FIELD xmbu014                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbu014
            #add-point:BEFORE FIELD xmbu014 name="construct.b.page1.xmbu014"
                                                                                                                                                
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbu014
            
            #add-point:AFTER FIELD xmbu014 name="construct.a.page1.xmbu014"
                                                                                                                                                
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmbu015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbu015
            #add-point:ON ACTION controlp INFIELD xmbu015 name="construct.c.page1.xmbu015"
                                                                                                                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooci002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmbu015  #顯示到畫面上

            NEXT FIELD xmbu015                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbu015
            #add-point:BEFORE FIELD xmbu015 name="construct.b.page1.xmbu015"
                                                                                                                                                
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbu015
            
            #add-point:AFTER FIELD xmbu015 name="construct.a.page1.xmbu015"
                                                                                                                                                
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmbu016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbu016
            #add-point:ON ACTION controlp INFIELD xmbu016 name="construct.c.page1.xmbu016"
                                                                                                                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '283'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmbu016  #顯示到畫面上

            NEXT FIELD xmbu016                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbu016
            #add-point:BEFORE FIELD xmbu016 name="construct.b.page1.xmbu016"
                                                                                                                                                
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbu016
            
            #add-point:AFTER FIELD xmbu016 name="construct.a.page1.xmbu016"
                                                                                                                                                
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmbu017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbu017
            #add-point:ON ACTION controlp INFIELD xmbu017 name="construct.c.page1.xmbu017"
                                                                                                                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '281'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmbu017  #顯示到畫面上

            NEXT FIELD xmbu017                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbu017
            #add-point:BEFORE FIELD xmbu017 name="construct.b.page1.xmbu017"
                                                                                                                                                
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbu017
            
            #add-point:AFTER FIELD xmbu017 name="construct.a.page1.xmbu017"
                                                                                                                                                
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmbu018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbu018
            #add-point:ON ACTION controlp INFIELD xmbu018 name="construct.c.page1.xmbu018"
                                                                                                                                                            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
		   	LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmbu018  #顯示到畫面上

            NEXT FIELD xmbu018                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbu018
            #add-point:BEFORE FIELD xmbu018 name="construct.b.page1.xmbu018"
                                                                                                                                                
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbu018
            
            #add-point:AFTER FIELD xmbu018 name="construct.a.page1.xmbu018"
                                                                                                                                                
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmbu019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbu019
            #add-point:ON ACTION controlp INFIELD xmbu019 name="construct.c.page1.xmbu019"
                                                                                                                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_oodb002_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmbu019  #顯示到畫面上

            NEXT FIELD xmbu019                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbu019
            #add-point:BEFORE FIELD xmbu019 name="construct.b.page1.xmbu019"
                                                                                                                                                
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbu019
            
            #add-point:AFTER FIELD xmbu019 name="construct.a.page1.xmbu019"
                                                                                                                                                
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbu019_desc
            #add-point:BEFORE FIELD xmbu019_desc name="construct.b.page1.xmbu019_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbu019_desc
            
            #add-point:AFTER FIELD xmbu019_desc name="construct.a.page1.xmbu019_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmbu019_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbu019_desc
            #add-point:ON ACTION controlp INFIELD xmbu019_desc name="construct.c.page1.xmbu019_desc"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmbu020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbu020
            #add-point:ON ACTION controlp INFIELD xmbu020 name="construct.c.page1.xmbu020"
                                                                                                                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooib002_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmbu020  #顯示到畫面上

            NEXT FIELD xmbu020                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbu020
            #add-point:BEFORE FIELD xmbu020 name="construct.b.page1.xmbu020"
                                                                                                                                                
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbu020
            
            #add-point:AFTER FIELD xmbu020 name="construct.a.page1.xmbu020"
                                                                                                                                                
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmbu021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbu021
            #add-point:ON ACTION controlp INFIELD xmbu021 name="construct.c.page1.xmbu021"
                                                                                                                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '238'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmbu021  #顯示到畫面上

            NEXT FIELD xmbu021                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbu021
            #add-point:BEFORE FIELD xmbu021 name="construct.b.page1.xmbu021"
                                                                                                                                                
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbu021
            
            #add-point:AFTER FIELD xmbu021 name="construct.a.page1.xmbu021"
                                                                                                                                                
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbu022
            #add-point:BEFORE FIELD xmbu022 name="construct.b.page1.xmbu022"
                                                                                                                                                
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbu022
            
            #add-point:AFTER FIELD xmbu022 name="construct.a.page1.xmbu022"
                                                                                                                                                
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmbu022
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbu022
            #add-point:ON ACTION controlp INFIELD xmbu022 name="construct.c.page1.xmbu022"
                                                                                                                                                
            #END add-point
 
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
                                                                        
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
                                                                                                            
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "xmbt_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "xmbu_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
                                    
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="axmt128.filter" >}
#應用 a50 樣板自動產生(Version:8)
#+ filter過濾功能
PRIVATE FUNCTION axmt128_filter()
   #add-point:filter段define name="filter.define_customerization"
   
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
                                    
   #end add-point   
   
   #add-point:Function前置處理  name="filter.pre_function"
   
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON xmbtdocno,xmbt900,xmbt901,xmbtdocdt
                          FROM s_browse[1].b_xmbtdocno,s_browse[1].b_xmbt900,s_browse[1].b_xmbt901,s_browse[1].b_xmbtdocdt 
 
 
         BEFORE CONSTRUCT
               DISPLAY axmt128_filter_parser('xmbtdocno') TO s_browse[1].b_xmbtdocno
            DISPLAY axmt128_filter_parser('xmbt900') TO s_browse[1].b_xmbt900
            DISPLAY axmt128_filter_parser('xmbt901') TO s_browse[1].b_xmbt901
            DISPLAY axmt128_filter_parser('xmbtdocdt') TO s_browse[1].b_xmbtdocdt
      
         #add-point:filter段cs_ctrl name="filter.cs_ctrl"
         
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
                                                                        
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
                                                                                                            
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL axmt128_filter_show('xmbtdocno')
   CALL axmt128_filter_show('xmbt900')
   CALL axmt128_filter_show('xmbt901')
   CALL axmt128_filter_show('xmbtdocdt')
 
END FUNCTION
 
{</section>}
 
{<section id="axmt128.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION axmt128_filter_parser(ps_field)
   #add-point:filter段define name="filter_parser.define_customerization"
   
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
                                    
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="axmt128.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION axmt128_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = axmt128_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="axmt128.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION axmt128_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
                                    
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_xmbu_d.clear()
 
   
   #add-point:query段other name="query.other"
                                    
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL axmt128_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL axmt128_browser_fill("")
      CALL axmt128_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL axmt128_filter_show('xmbtdocno')
   CALL axmt128_filter_show('xmbt900')
   CALL axmt128_filter_show('xmbt901')
   CALL axmt128_filter_show('xmbtdocdt')
   CALL axmt128_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL axmt128_fetch("F") 
      #顯示單身筆數
      CALL axmt128_idx_chk()
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="axmt128.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION axmt128_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
                                    
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_xmbt_m.xmbtdocno = g_browser[g_current_idx].b_xmbtdocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE axmt128_master_referesh USING g_xmbt_m.xmbtdocno INTO g_xmbt_m.xmbtdocno,g_xmbt_m.xmbtdocdt, 
       g_xmbt_m.xmbt900,g_xmbt_m.xmbt901,g_xmbt_m.xmbtstus,g_xmbt_m.xmbt001,g_xmbt_m.xmbt002,g_xmbt_m.xmbt003, 
       g_xmbt_m.xmbt005,g_xmbt_m.xmbt007,g_xmbt_m.xmbt006,g_xmbt_m.xmbtownid,g_xmbt_m.xmbtowndp,g_xmbt_m.xmbtcrtid, 
       g_xmbt_m.xmbtcrtdp,g_xmbt_m.xmbtcrtdt,g_xmbt_m.xmbtmodid,g_xmbt_m.xmbtmoddt,g_xmbt_m.xmbtcnfid, 
       g_xmbt_m.xmbtcnfdt,g_xmbt_m.xmbt900_desc,g_xmbt_m.xmbt901_desc,g_xmbt_m.xmbt001_desc,g_xmbt_m.xmbt002_desc, 
       g_xmbt_m.xmbt003_desc,g_xmbt_m.xmbt005_desc,g_xmbt_m.xmbtownid_desc,g_xmbt_m.xmbtowndp_desc,g_xmbt_m.xmbtcrtid_desc, 
       g_xmbt_m.xmbtcrtdp_desc,g_xmbt_m.xmbtmodid_desc,g_xmbt_m.xmbtcnfid_desc
   
   #遮罩相關處理
   LET g_xmbt_m_mask_o.* =  g_xmbt_m.*
   CALL axmt128_xmbt_t_mask()
   LET g_xmbt_m_mask_n.* =  g_xmbt_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt128_set_act_visible()   
   CALL axmt128_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
#  CALL cl_set_act_visible("delete,modify,modify_detail",TRUE)
#   CASE g_xmbt_m.xmbtstus
#      WHEN "N"
#         CALL cl_set_act_visible("delete,modify,modify_detail",TRUE)
#      WHEN "Y"
#         CALL cl_set_act_visible("delete,modify,modify_detail",FALSE)
#      WHEN "X"
#         CALL cl_set_act_visible("delete,modify,modify_detail",FALSE)
#   END CASE

   CALL cl_set_act_visible("modify,delete,insert,modify_detail", TRUE)
   IF g_xmbt_m.xmbtstus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF

   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
                                    
   #end add-point
   
   #保存單頭舊值
   LET g_xmbt_m_t.* = g_xmbt_m.*
   LET g_xmbt_m_o.* = g_xmbt_m.*
   
   LET g_data_owner = g_xmbt_m.xmbtownid      
   LET g_data_dept  = g_xmbt_m.xmbtowndp
   
   #重新顯示   
   CALL axmt128_show()
 
   #應用 a56 樣板自動產生(Version:3)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
 
END FUNCTION
 
{</section>}
 
{<section id="axmt128.insert" >}
#+ 資料新增
PRIVATE FUNCTION axmt128_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
                                    
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_xmbu_d.clear()   
 
 
   INITIALIZE g_xmbt_m.* TO NULL             #DEFAULT 設定
   
   LET g_xmbtdocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_xmbt_m.xmbtownid = g_user
      LET g_xmbt_m.xmbtowndp = g_dept
      LET g_xmbt_m.xmbtcrtid = g_user
      LET g_xmbt_m.xmbtcrtdp = g_dept 
      LET g_xmbt_m.xmbtcrtdt = cl_get_current()
      LET g_xmbt_m.xmbtmodid = g_user
      LET g_xmbt_m.xmbtmoddt = cl_get_current()
      LET g_xmbt_m.xmbtstus = 'N'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_xmbt_m.xmbtstus = "N"
      LET g_xmbt_m.xmbt007 = "2"
 
  
      #add-point:單頭預設值 name="insert.default"
      #2015/07/16 by stellar add ----- (S)
      #銷售價格參照表號 預設 該據點使用的參照表號
      LET g_xmbt_m.xmbt001 = g_xmbt001
      CALL axmt128_xmbt001_desc()
      #2015/07/16 by stellar add ----- (E)
      
      LET g_xmbt_m.xmbtdocdt = g_today
      LET g_xmbt_m.xmbt900 = g_user
      LET g_xmbt_m.xmbt901 = g_dept
      CALL axmt128_xmbt900_desc()
      CALL axmt128_xmbt901_desc()
      CALL axmt128_def_xmbt006() RETURNING g_xmbt_m.xmbt006
      LET g_xmbt_m_t.* = g_xmbt_m.* 
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_xmbt_m_t.* = g_xmbt_m.*
      LET g_xmbt_m_o.* = g_xmbt_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_xmbt_m.xmbtstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
    
      CALL axmt128_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
                                                                        
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_xmbt_m.* TO NULL
         INITIALIZE g_xmbu_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         
         #end add-point 
         CALL axmt128_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_xmbu_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt128_set_act_visible()   
   CALL axmt128_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_xmbtdocno_t = g_xmbt_m.xmbtdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " xmbtent = " ||g_enterprise|| " AND",
                      " xmbtdocno = '", g_xmbt_m.xmbtdocno, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axmt128_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE axmt128_cl
   
   CALL axmt128_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE axmt128_master_referesh USING g_xmbt_m.xmbtdocno INTO g_xmbt_m.xmbtdocno,g_xmbt_m.xmbtdocdt, 
       g_xmbt_m.xmbt900,g_xmbt_m.xmbt901,g_xmbt_m.xmbtstus,g_xmbt_m.xmbt001,g_xmbt_m.xmbt002,g_xmbt_m.xmbt003, 
       g_xmbt_m.xmbt005,g_xmbt_m.xmbt007,g_xmbt_m.xmbt006,g_xmbt_m.xmbtownid,g_xmbt_m.xmbtowndp,g_xmbt_m.xmbtcrtid, 
       g_xmbt_m.xmbtcrtdp,g_xmbt_m.xmbtcrtdt,g_xmbt_m.xmbtmodid,g_xmbt_m.xmbtmoddt,g_xmbt_m.xmbtcnfid, 
       g_xmbt_m.xmbtcnfdt,g_xmbt_m.xmbt900_desc,g_xmbt_m.xmbt901_desc,g_xmbt_m.xmbt001_desc,g_xmbt_m.xmbt002_desc, 
       g_xmbt_m.xmbt003_desc,g_xmbt_m.xmbt005_desc,g_xmbt_m.xmbtownid_desc,g_xmbt_m.xmbtowndp_desc,g_xmbt_m.xmbtcrtid_desc, 
       g_xmbt_m.xmbtcrtdp_desc,g_xmbt_m.xmbtmodid_desc,g_xmbt_m.xmbtcnfid_desc
   
   
   #遮罩相關處理
   LET g_xmbt_m_mask_o.* =  g_xmbt_m.*
   CALL axmt128_xmbt_t_mask()
   LET g_xmbt_m_mask_n.* =  g_xmbt_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_xmbt_m.xmbtdocno,g_xmbt_m.xmbtdocno_desc,g_xmbt_m.xmbtdocdt,g_xmbt_m.xmbt900,g_xmbt_m.xmbt900_desc, 
       g_xmbt_m.xmbt901,g_xmbt_m.xmbt901_desc,g_xmbt_m.xmbtstus,g_xmbt_m.xmbt001,g_xmbt_m.xmbt001_desc, 
       g_xmbt_m.xmbt002,g_xmbt_m.xmbt002_desc,g_xmbt_m.xmbt003,g_xmbt_m.xmbt003_desc,g_xmbt_m.xmbt005, 
       g_xmbt_m.xmbt005_desc,g_xmbt_m.xmbt007,g_xmbt_m.xmbt006,g_xmbt_m.xmbtownid,g_xmbt_m.xmbtownid_desc, 
       g_xmbt_m.xmbtowndp,g_xmbt_m.xmbtowndp_desc,g_xmbt_m.xmbtcrtid,g_xmbt_m.xmbtcrtid_desc,g_xmbt_m.xmbtcrtdp, 
       g_xmbt_m.xmbtcrtdp_desc,g_xmbt_m.xmbtcrtdt,g_xmbt_m.xmbtmodid,g_xmbt_m.xmbtmodid_desc,g_xmbt_m.xmbtmoddt, 
       g_xmbt_m.xmbtcnfid,g_xmbt_m.xmbtcnfid_desc,g_xmbt_m.xmbtcnfdt
   
   #add-point:新增結束後 name="insert.after"
   
   #end add-point 
   
   LET g_data_owner = g_xmbt_m.xmbtownid      
   LET g_data_dept  = g_xmbt_m.xmbtowndp
   
   #功能已完成,通報訊息中心
   CALL axmt128_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="axmt128.modify" >}
#+ 資料修改
PRIVATE FUNCTION axmt128_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
                                    
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   #保存單頭舊值
   LET g_xmbt_m_t.* = g_xmbt_m.*
   LET g_xmbt_m_o.* = g_xmbt_m.*
   
   IF g_xmbt_m.xmbtdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_xmbtdocno_t = g_xmbt_m.xmbtdocno
 
   CALL s_transaction_begin()
   
   OPEN axmt128_cl USING g_enterprise,g_xmbt_m.xmbtdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axmt128_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE axmt128_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axmt128_master_referesh USING g_xmbt_m.xmbtdocno INTO g_xmbt_m.xmbtdocno,g_xmbt_m.xmbtdocdt, 
       g_xmbt_m.xmbt900,g_xmbt_m.xmbt901,g_xmbt_m.xmbtstus,g_xmbt_m.xmbt001,g_xmbt_m.xmbt002,g_xmbt_m.xmbt003, 
       g_xmbt_m.xmbt005,g_xmbt_m.xmbt007,g_xmbt_m.xmbt006,g_xmbt_m.xmbtownid,g_xmbt_m.xmbtowndp,g_xmbt_m.xmbtcrtid, 
       g_xmbt_m.xmbtcrtdp,g_xmbt_m.xmbtcrtdt,g_xmbt_m.xmbtmodid,g_xmbt_m.xmbtmoddt,g_xmbt_m.xmbtcnfid, 
       g_xmbt_m.xmbtcnfdt,g_xmbt_m.xmbt900_desc,g_xmbt_m.xmbt901_desc,g_xmbt_m.xmbt001_desc,g_xmbt_m.xmbt002_desc, 
       g_xmbt_m.xmbt003_desc,g_xmbt_m.xmbt005_desc,g_xmbt_m.xmbtownid_desc,g_xmbt_m.xmbtowndp_desc,g_xmbt_m.xmbtcrtid_desc, 
       g_xmbt_m.xmbtcrtdp_desc,g_xmbt_m.xmbtmodid_desc,g_xmbt_m.xmbtcnfid_desc
   
   #檢查是否允許此動作
   IF NOT axmt128_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_xmbt_m_mask_o.* =  g_xmbt_m.*
   CALL axmt128_xmbt_t_mask()
   LET g_xmbt_m_mask_n.* =  g_xmbt_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
 
   
   CALL axmt128_show()
   #add-point:modify段show之後 name="modify.after_show"
   
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
 
    
   WHILE TRUE
      LET g_xmbtdocno_t = g_xmbt_m.xmbtdocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_xmbt_m.xmbtmodid = g_user 
LET g_xmbt_m.xmbtmoddt = cl_get_current()
LET g_xmbt_m.xmbtmodid_desc = cl_get_username(g_xmbt_m.xmbtmodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      #「D抽單 / R已拒絕」狀況碼更改資料後，需還原為「N未確認」
      IF g_xmbt_m.xmbtstus MATCHES "[DR]" THEN 
         LET g_xmbt_m.xmbtstus = "N"
      END IF
                                                                        
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL axmt128_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
                                                                        
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE xmbt_t SET (xmbtmodid,xmbtmoddt) = (g_xmbt_m.xmbtmodid,g_xmbt_m.xmbtmoddt)
          WHERE xmbtent = g_enterprise AND xmbtdocno = g_xmbtdocno_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_xmbt_m.* = g_xmbt_m_t.*
            CALL axmt128_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_xmbt_m.xmbtdocno != g_xmbt_m_t.xmbtdocno
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
                                                                                                            
         #end add-point
         
         #更新單身key值
         UPDATE xmbu_t SET xmbudocno = g_xmbt_m.xmbtdocno
 
          WHERE xmbuent = g_enterprise AND xmbudocno = g_xmbt_m_t.xmbtdocno
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
                                                                                                            
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "xmbu_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmbu_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
                                                                                                            
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt128_set_act_visible()   
   CALL axmt128_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " xmbtent = " ||g_enterprise|| " AND",
                      " xmbtdocno = '", g_xmbt_m.xmbtdocno, "' "
 
   #填到對應位置
   CALL axmt128_browser_fill("")
 
   CLOSE axmt128_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL axmt128_msgcentre_notify('modify')
 
END FUNCTION 
 
{</section>}
 
{<section id="axmt128.input" >}
#+ 資料輸入
PRIVATE FUNCTION axmt128_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE  l_success             LIKE type_t.num5
   DEFINE  l_xmbu                RECORD LIKE xmbu_t.* 
   DEFINE  l_xmbu012_t           LIKE xmbu_t.xmbu012  
   DEFINE  l_open                LIKE type_t.num5
   DEFINE  l_wc                  STRING
   DEFINE  l_xmbu011_str         STRING
   DEFINE  l_sql                 STRING
   DEFINE  l_msg                 STRING                               #接收回傳的字串
   DEFINE  l_msg1                STRING                               #接收axm-00645或axm-00656 %1 的替代值
   DEFINE  l_msg2                STRING                               #接收axm-00645或axm-00656 %2 的替代值
   DEFINE  l_msg3                STRING                               #接收axm-00656 %3 的替代值
   DEFINE  l_msg4                STRING                               #接收axm-00656 %4 的替代值
   DEFINE  l_chk                 LIKE  type_t.num10                   #僅在小部分程式段內的確認
   DEFINE  l_fie_chk             LIKE  type_t.num5                    #判斷產品特徵是否要開啟元件
   DEFINE  l_chk2                LIKE  type_t.num5                    #避免AFTER ROW、AFTER INSERT、ON ROW CHANGE的訊息重複出現
   DEFINE  l_imaa001             LIKE  type_t.chr100                  #接收抓取到的料件編號值
   DEFINE  l_str                 STRING                               #串料件編號的字串
   DEFINE  l_str_cnt             LIKE  type_t.num10                   #計算接收字串次數
   DEFINE  l_del_chk             LIKE  type_t.num5                    #判斷是否有進入刪除資料
   DEFINE  l_msg5                LIKE gzze_t.gzze003                  #160621-00003#3 20160629 add by beckxie
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   #160621-00003#3 20160629 add by beckxie---S
   LET l_msg5 = ''
   SELECT gzze003 INTO l_msg5 FROM gzze_t WHERE gzze001 = 'aoo-00708' AND gzze002 = g_dlang 
   #160621-00003#3 20160629 add by beckxie---E
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xmbt_m.xmbtdocno,g_xmbt_m.xmbtdocno_desc,g_xmbt_m.xmbtdocdt,g_xmbt_m.xmbt900,g_xmbt_m.xmbt900_desc, 
       g_xmbt_m.xmbt901,g_xmbt_m.xmbt901_desc,g_xmbt_m.xmbtstus,g_xmbt_m.xmbt001,g_xmbt_m.xmbt001_desc, 
       g_xmbt_m.xmbt002,g_xmbt_m.xmbt002_desc,g_xmbt_m.xmbt003,g_xmbt_m.xmbt003_desc,g_xmbt_m.xmbt005, 
       g_xmbt_m.xmbt005_desc,g_xmbt_m.xmbt007,g_xmbt_m.xmbt006,g_xmbt_m.xmbtownid,g_xmbt_m.xmbtownid_desc, 
       g_xmbt_m.xmbtowndp,g_xmbt_m.xmbtowndp_desc,g_xmbt_m.xmbtcrtid,g_xmbt_m.xmbtcrtid_desc,g_xmbt_m.xmbtcrtdp, 
       g_xmbt_m.xmbtcrtdp_desc,g_xmbt_m.xmbtcrtdt,g_xmbt_m.xmbtmodid,g_xmbt_m.xmbtmodid_desc,g_xmbt_m.xmbtmoddt, 
       g_xmbt_m.xmbtcnfid,g_xmbt_m.xmbtcnfid_desc,g_xmbt_m.xmbtcnfdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
                                    
   #end add-point 
   LET g_forupd_sql = "SELECT xmbu010,xmbu011,xmbu012,xmbu031,xmbu032,xmbu013,xmbu014,xmbu015,xmbu016, 
       xmbu017,xmbu018,xmbu019,xmbu020,xmbu021,xmbu022 FROM xmbu_t WHERE xmbuent=? AND xmbudocno=? AND  
       xmbu011=? AND xmbu012=? AND xmbu013=? AND xmbu014=? AND xmbu015=? AND xmbu016=? AND xmbu017=?  
       AND xmbu018=? AND xmbu019=? AND xmbu020=? AND xmbu021=? AND xmbu031=? AND xmbu032=? FOR UPDATE" 
 
   #add-point:input段define_sql name="input.after_define_sql"
                                    
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt128_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql name="input.other_sql"
                                    
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL axmt128_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
                                    
   #end add-point
   CALL axmt128_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_xmbt_m.xmbtdocno,g_xmbt_m.xmbtdocdt,g_xmbt_m.xmbt900,g_xmbt_m.xmbt901,g_xmbt_m.xmbtstus, 
       g_xmbt_m.xmbt001,g_xmbt_m.xmbt002,g_xmbt_m.xmbt003,g_xmbt_m.xmbt005,g_xmbt_m.xmbt007,g_xmbt_m.xmbt006 
 
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   LET g_errshow = 1   
   LET l_chk2 = 0   
   LET l_del_chk = FALSE 
   LET l_fie_chk = FALSE
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="axmt128.input.head" >}
      #單頭段
      INPUT BY NAME g_xmbt_m.xmbtdocno,g_xmbt_m.xmbtdocdt,g_xmbt_m.xmbt900,g_xmbt_m.xmbt901,g_xmbt_m.xmbtstus, 
          g_xmbt_m.xmbt001,g_xmbt_m.xmbt002,g_xmbt_m.xmbt003,g_xmbt_m.xmbt005,g_xmbt_m.xmbt007,g_xmbt_m.xmbt006  
 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN axmt128_cl USING g_enterprise,g_xmbt_m.xmbtdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axmt128_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE axmt128_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL axmt128_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
                                    CALL axmt128_set_entry(p_cmd)
            CALL axmt128_set_no_entry(p_cmd)             
            #end add-point
            CALL axmt128_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbtdocno
            
            #add-point:AFTER FIELD xmbtdocno name="input.a.xmbtdocno"
                                                                                                                                                            CALL axmt128_xmbtdocno_desc('1',g_xmbt_m.xmbtdocno) RETURNING g_xmbt_m.xmbtdocno_desc
            DISPLAY BY NAME g_xmbt_m.xmbtdocno_desc
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xmbt_m.xmbtdocno) THEN 
               IF NOT s_aooi200_chk_slip(g_site,'',g_xmbt_m.xmbtdocno,g_prog) THEN
                  LET g_xmbt_m.xmbtdocno = g_xmbt_m_t.xmbtdocno
                  NEXT FIELD CURRENT
               END IF               
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xmbt_m.xmbtdocno != g_xmbtdocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmbt_t WHERE "||"xmbtent = '" ||g_enterprise|| "' AND "||"xmbtdocno = '"||g_xmbt_m.xmbtdocno ||"'",'std-00004',0) THEN 
                     LET g_xmbt_m.xmbtdocno = g_xmbt_m_t.xmbtdocno
                     NEXT FIELD CURRENT
                  END IF
               END IF               
            END IF

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbtdocno
            #add-point:BEFORE FIELD xmbtdocno name="input.b.xmbtdocno"
                                                                                                                                                            CALL axmt128_xmbtdocno_desc('1',g_xmbt_m.xmbtdocno)  RETURNING g_xmbt_m.xmbtdocno_desc
            DISPLAY BY NAME g_xmbt_m.xmbtdocno_desc
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmbtdocno
            #add-point:ON CHANGE xmbtdocno name="input.g.xmbtdocno"
                                                                                                                                                
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbtdocdt
            #add-point:BEFORE FIELD xmbtdocdt name="input.b.xmbtdocdt"
                                                                                                                                                
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbtdocdt
            
            #add-point:AFTER FIELD xmbtdocdt name="input.a.xmbtdocdt"
                                                                                                                                                
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmbtdocdt
            #add-point:ON CHANGE xmbtdocdt name="input.g.xmbtdocdt"
                                                                                                                                                
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbt900
            
            #add-point:AFTER FIELD xmbt900 name="input.a.xmbt900"
                                                                                                                                                            CALL axmt128_xmbt900_desc()
            IF NOT cl_null(g_xmbt_m.xmbt900) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmbt_m.xmbt900
               #160318-00025#35  2016/05/15  by pengxin  add(S)
               LET g_errshow = TRUE #是否開窗 
               LET g_chkparam.err_str[1] = "aim-00070:sub-01302|aooi130|",cl_get_progname("aooi130",g_lang,"2"),"|:EXEPROGaooi130"
               #160318-00025#35  2016/05/15  by pengxin  add(E)
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooag001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_xmbt_m.xmbt900 = g_xmbt_m_t.xmbt900
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbt900
            #add-point:BEFORE FIELD xmbt900 name="input.b.xmbt900"
                                                                                                                                                            CALL axmt128_xmbt900_desc()
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmbt900
            #add-point:ON CHANGE xmbt900 name="input.g.xmbt900"
                                                                                                                                                
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbt901
            
            #add-point:AFTER FIELD xmbt901 name="input.a.xmbt901"
                                                                                                                                                            CALL axmt128_xmbt901_desc()
            IF NOT cl_null(g_xmbt_m.xmbt901) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmbt_m.xmbt901
               LET g_chkparam.arg2 = g_xmbt_m.xmbtdocdt
               #160318-00025#35  2016/04/15  by pengxin  add(S)
               LET g_errshow = TRUE #是否開窗 
               LET g_chkparam.err_str[1] = "aoo-00029:sub-01302|aooi125|",cl_get_progname("aooi125",g_lang,"2"),"|:EXEPROGaooi125"
               #160318-00025#35  2016/04/15  by pengxin  add(E)
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooeg001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_xmbt_m.xmbt901 = g_xmbt_m_t.xmbt901
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbt901
            #add-point:BEFORE FIELD xmbt901 name="input.b.xmbt901"
                                                                                                                                                            CALL axmt128_xmbt901_desc()
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmbt901
            #add-point:ON CHANGE xmbt901 name="input.g.xmbt901"
                                                                                                                                                
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbtstus
            #add-point:BEFORE FIELD xmbtstus name="input.b.xmbtstus"
                                                                                                                                                
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbtstus
            
            #add-point:AFTER FIELD xmbtstus name="input.a.xmbtstus"
                                                                                                                                                
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmbtstus
            #add-point:ON CHANGE xmbtstus name="input.g.xmbtstus"
                                                                                                                                                
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbt001
            
            #add-point:AFTER FIELD xmbt001 name="input.a.xmbt001"
                                                                                                                                                            CALL axmt128_xmbt001_desc()
            IF NOT cl_null(g_xmbt_m.xmbt001) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmbt_m.xmbt001
               #160318-00025#35  2016/04/15  by pengxin  add(S)
               LET g_errshow = TRUE #是否開窗 
               LET g_chkparam.err_str[1] = "axm-00036:sub-01302|aooi085|",cl_get_progname("aooi085",g_lang,"2"),"|:EXEPROGaooi085"
               #160318-00025#35  2016/04/15  by pengxin  add(E)
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooal002_6") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_xmbt_m.xmbt001 = g_xmbt_m_t.xmbt001
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbt001
            #add-point:BEFORE FIELD xmbt001 name="input.b.xmbt001"
                                                                                                                                                            CALL axmt128_xmbt001_desc()
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmbt001
            #add-point:ON CHANGE xmbt001 name="input.g.xmbt001"
                                                                                                                                                
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbt002
            
            #add-point:AFTER FIELD xmbt002 name="input.a.xmbt002"
                                                                                                                                                            CALL axmt128_xmbt002_desc()
            IF NOT cl_null(g_xmbt_m.xmbt002) AND g_xmbt_m.xmbt002 <> 'ALL'  THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmbt_m.xmbt002
               #160318-00025#35  2016/04/15  by pengxin  add(S)
               LET g_errshow = TRUE #是否開窗 
               LET g_chkparam.err_str[1] = "asr-00032:sub-01302|aooi380|",cl_get_progname("aooi380",g_lang,"2"),"|:EXEPROGaooi380"
               #160318-00025#35  2016/04/15  by pengxin  add(E)
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooha001_2") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_xmbt_m.xmbt002 = g_xmbt_m_t.xmbt002
                  NEXT FIELD CURRENT
               END IF
            ELSE
               LET  g_xmbt_m.xmbt002 = 'ALL'
               CALL axmt128_xmbt002_desc()
            END IF 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbt002
            #add-point:BEFORE FIELD xmbt002 name="input.b.xmbt002"
                                                                                                                                                            CALL axmt128_xmbt002_desc()
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmbt002
            #add-point:ON CHANGE xmbt002 name="input.g.xmbt002"
                                                                                                                                                
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbt003
            
            #add-point:AFTER FIELD xmbt003 name="input.a.xmbt003"
                                                                                                                                                            CALL axmt128_xmbt003_desc()
            IF NOT cl_null(g_xmbt_m.xmbt003) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = 'ALL'
               LET g_chkparam.arg2 = g_xmbt_m.xmbt003
               #160318-00025#35  2016/04/15  by pengxin  add(S)
               LET g_errshow = TRUE #是否開窗 
               LET g_chkparam.err_str[1] = "aoo-00176:sub-01302|aooi150|",cl_get_progname("aooi150",g_lang,"2"),"|:EXEPROGaooi150"
               #160318-00025#35  2016/04/15  by pengxin  add(E)
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooaj002") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_xmbt_m.xmbt003 = g_xmbt_m_t.xmbt003
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbt003
            #add-point:BEFORE FIELD xmbt003 name="input.b.xmbt003"
                                                                                                                                                            CALL axmt128_xmbt003_desc()
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmbt003
            #add-point:ON CHANGE xmbt003 name="input.g.xmbt003"
                                                                                                                                                
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbt005
            
            #add-point:AFTER FIELD xmbt005 name="input.a.xmbt005"
                                                                                                                                                            CALL axmt128_xmbt005_desc()
            IF NOT cl_null(g_xmbt_m.xmbt005)  AND g_xmbt_m.xmbt005 <> 'ALL' THEN 
               #160621-00003#3 20160627 modify by beckxie---S
                  #IF NOT s_azzi650_chk_exist('275',g_xmbt_m.xmbt005) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmbt_m.xmbt005
                  LET g_chkparam.arg2 = '1'
                  LET g_chkparam.err_str[1] = "aoo-00299|",l_msg5
                  IF NOT cl_chk_exist("v_oojd001") THEN
                  #160621-00003#3 20160627 modify by beckxie---E
                  
                  LET g_xmbt_m.xmbt005 = g_xmbt_m_t.xmbt005
                  NEXT FIELD CURRENT
               END IF  
            ELSE
               LET g_xmbt_m.xmbt005 = 'ALL'
               CALL axmt128_xmbt005_desc()               
            END IF
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbt005
            #add-point:BEFORE FIELD xmbt005 name="input.b.xmbt005"
                                                                                                                                                            CALL axmt128_xmbt005_desc()
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmbt005
            #add-point:ON CHANGE xmbt005 name="input.g.xmbt005"
                                                                                                                                                
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbt007
            #add-point:BEFORE FIELD xmbt007 name="input.b.xmbt007"
                                                                                                                                                
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbt007
            
            #add-point:AFTER FIELD xmbt007 name="input.a.xmbt007"
                                                                                                                                                
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmbt007
            #add-point:ON CHANGE xmbt007 name="input.g.xmbt007"
                                                                                                                                                
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbt006
            #add-point:BEFORE FIELD xmbt006 name="input.b.xmbt006"
                                                                                                                                                
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbt006
            
            #add-point:AFTER FIELD xmbt006 name="input.a.xmbt006"
                                                                                                                                                
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmbt006
            #add-point:ON CHANGE xmbt006 name="input.g.xmbt006"
                                                                                                                                                
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.xmbtdocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbtdocno
            #add-point:ON ACTION controlp INFIELD xmbtdocno name="input.c.xmbtdocno"
                                                                                                                                                            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmbt_m.xmbtdocno             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef.ooef004 #
            LET g_qryparam.arg2 = g_prog

            CALL q_ooba002_1()                                #呼叫開窗

            LET g_xmbt_m.xmbtdocno = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmbt_m.xmbtdocno TO xmbtdocno              #顯示到畫面上

            NEXT FIELD xmbtdocno                          #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.xmbtdocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbtdocdt
            #add-point:ON ACTION controlp INFIELD xmbtdocdt name="input.c.xmbtdocdt"
                                                                                                                                                
            #END add-point
 
 
         #Ctrlp:input.c.xmbt900
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbt900
            #add-point:ON ACTION controlp INFIELD xmbt900 name="input.c.xmbt900"
                                                                                                                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmbt_m.xmbt900             #給予default值

            #給予arg

            CALL q_ooag001()                                #呼叫開窗

            LET g_xmbt_m.xmbt900 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmbt_m.xmbt900 TO xmbt900              #顯示到畫面上

            NEXT FIELD xmbt900                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmbt901
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbt901
            #add-point:ON ACTION controlp INFIELD xmbt901 name="input.c.xmbt901"
                                                                                                                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmbt_m.xmbt901             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_xmbt_m.xmbtdocdt

            CALL q_ooeg001()                                #呼叫開窗

            LET g_xmbt_m.xmbt901 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmbt_m.xmbt901 TO xmbt901              #顯示到畫面上

            NEXT FIELD xmbt901                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmbtstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbtstus
            #add-point:ON ACTION controlp INFIELD xmbtstus name="input.c.xmbtstus"
                                                                                                                                                
            #END add-point
 
 
         #Ctrlp:input.c.xmbt001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbt001
            #add-point:ON ACTION controlp INFIELD xmbt001 name="input.c.xmbt001"
                                                                                                                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmbt_m.xmbt001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '15'

            CALL q_ooal002_0()                                #呼叫開窗

            LET g_xmbt_m.xmbt001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmbt_m.xmbt001 TO xmbt001              #顯示到畫面上

            NEXT FIELD xmbt001                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmbt002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbt002
            #add-point:ON ACTION controlp INFIELD xmbt002 name="input.c.xmbt002"
                                                                                                                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmbt_m.xmbt002             #給予default值

            #給予arg

            CALL q_ooha001_3()                                #呼叫開窗

            LET g_xmbt_m.xmbt002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmbt_m.xmbt002 TO xmbt002              #顯示到畫面上

            NEXT FIELD xmbt002                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmbt003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbt003
            #add-point:ON ACTION controlp INFIELD xmbt003 name="input.c.xmbt003"
                                                                                                                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmbt_m.xmbt003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = 'ALL'

            CALL q_ooaj002_1()                                #呼叫開窗

            LET g_xmbt_m.xmbt003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmbt_m.xmbt003 TO xmbt003              #顯示到畫面上

            NEXT FIELD xmbt003                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmbt005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbt005
            #add-point:ON ACTION controlp INFIELD xmbt005 name="input.c.xmbt005"
                                                                                                                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmbt_m.xmbt005             #給予default值

            #給予arg
            #160621-00003#3 20160627 modify by beckxie---S
			   #LET g_qryparam.arg1 = "275"
            #CALL q_oocq002()                           #呼叫開窗
            LET g_qryparam.arg1 = '1'
            CALL q_oojd001_1()
            #160621-00003#3 20160627 modify by beckxie---E

            LET g_xmbt_m.xmbt005 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmbt_m.xmbt005 TO xmbt005              #顯示到畫面上

            NEXT FIELD xmbt005                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmbt007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbt007
            #add-point:ON ACTION controlp INFIELD xmbt007 name="input.c.xmbt007"
                                                                                                                                                
            #END add-point
 
 
         #Ctrlp:input.c.xmbt006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbt006
            #add-point:ON ACTION controlp INFIELD xmbt006 name="input.c.xmbt006"
                                                                                                                                                
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_xmbt_m.xmbtdocno
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
               CALL s_aooi200_gen_docno(g_ooef.ooef001,g_xmbt_m.xmbtdocno,g_xmbt_m.xmbtdocdt,g_prog)
               RETURNING g_success,g_xmbt_m.xmbtdocno
               IF g_success  = 0  THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apm-00003'
                  LET g_errparam.extend = g_xmbt_m.xmbtdocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  NEXT FIELD xmbtdocno
               ELSE
                  CALL axmt128_set_entry('u') 
                  CALL axmt128_set_no_entry('u')                  
               END IF 
               DISPLAY BY NAME g_xmbt_m.xmbtdocno
               IF cl_null(g_xmbt_m.xmbt005) THEN
                  LET g_xmbt_m.xmbt005 = 'ALL'
                  DISPLAY BY NAME g_xmbt_m.xmbt005
                  CALL axmt128_xmbt005_desc()
               END IF               
               #end add-point
               
               INSERT INTO xmbt_t (xmbtent,xmbtdocno,xmbtdocdt,xmbt900,xmbt901,xmbtstus,xmbt001,xmbt002, 
                   xmbt003,xmbt005,xmbt007,xmbt006,xmbtownid,xmbtowndp,xmbtcrtid,xmbtcrtdp,xmbtcrtdt, 
                   xmbtmodid,xmbtmoddt,xmbtcnfid,xmbtcnfdt)
               VALUES (g_enterprise,g_xmbt_m.xmbtdocno,g_xmbt_m.xmbtdocdt,g_xmbt_m.xmbt900,g_xmbt_m.xmbt901, 
                   g_xmbt_m.xmbtstus,g_xmbt_m.xmbt001,g_xmbt_m.xmbt002,g_xmbt_m.xmbt003,g_xmbt_m.xmbt005, 
                   g_xmbt_m.xmbt007,g_xmbt_m.xmbt006,g_xmbt_m.xmbtownid,g_xmbt_m.xmbtowndp,g_xmbt_m.xmbtcrtid, 
                   g_xmbt_m.xmbtcrtdp,g_xmbt_m.xmbtcrtdt,g_xmbt_m.xmbtmodid,g_xmbt_m.xmbtmoddt,g_xmbt_m.xmbtcnfid, 
                   g_xmbt_m.xmbtcnfdt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_xmbt_m:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
                                                                                                                                                                                    
               #end add-point
               
               
               
               
               #add-point:單頭新增後 name="input.head.a_insert"
                                                                                                                                                                                    
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL axmt128_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL axmt128_b_fill()
                  CALL axmt128_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
                                                                                                                                                                                    
               #end add-point
               
               #將遮罩欄位還原
               CALL axmt128_xmbt_t_mask_restore('restore_mask_o')
               
               UPDATE xmbt_t SET (xmbtdocno,xmbtdocdt,xmbt900,xmbt901,xmbtstus,xmbt001,xmbt002,xmbt003, 
                   xmbt005,xmbt007,xmbt006,xmbtownid,xmbtowndp,xmbtcrtid,xmbtcrtdp,xmbtcrtdt,xmbtmodid, 
                   xmbtmoddt,xmbtcnfid,xmbtcnfdt) = (g_xmbt_m.xmbtdocno,g_xmbt_m.xmbtdocdt,g_xmbt_m.xmbt900, 
                   g_xmbt_m.xmbt901,g_xmbt_m.xmbtstus,g_xmbt_m.xmbt001,g_xmbt_m.xmbt002,g_xmbt_m.xmbt003, 
                   g_xmbt_m.xmbt005,g_xmbt_m.xmbt007,g_xmbt_m.xmbt006,g_xmbt_m.xmbtownid,g_xmbt_m.xmbtowndp, 
                   g_xmbt_m.xmbtcrtid,g_xmbt_m.xmbtcrtdp,g_xmbt_m.xmbtcrtdt,g_xmbt_m.xmbtmodid,g_xmbt_m.xmbtmoddt, 
                   g_xmbt_m.xmbtcnfid,g_xmbt_m.xmbtcnfdt)
                WHERE xmbtent = g_enterprise AND xmbtdocno = g_xmbtdocno_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "xmbt_t:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
                                                                                                                                                                                    
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL axmt128_xmbt_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_xmbt_m_t)
               LET g_log2 = util.JSON.stringify(g_xmbt_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
                                                                                                                                                                                    
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_xmbtdocno_t = g_xmbt_m.xmbtdocno
 
            
      END INPUT
   
 
{</section>}
 
{<section id="axmt128.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_xmbu_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xmbu_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axmt128_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_xmbu_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
                                                                                                                                                
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN axmt128_cl USING g_enterprise,g_xmbt_m.xmbtdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axmt128_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE axmt128_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_xmbu_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xmbu_d[l_ac].xmbu011 IS NOT NULL
               AND g_xmbu_d[l_ac].xmbu012 IS NOT NULL
               AND g_xmbu_d[l_ac].xmbu013 IS NOT NULL
               AND g_xmbu_d[l_ac].xmbu014 IS NOT NULL
               AND g_xmbu_d[l_ac].xmbu015 IS NOT NULL
               AND g_xmbu_d[l_ac].xmbu016 IS NOT NULL
               AND g_xmbu_d[l_ac].xmbu017 IS NOT NULL
               AND g_xmbu_d[l_ac].xmbu018 IS NOT NULL
               AND g_xmbu_d[l_ac].xmbu019 IS NOT NULL
               AND g_xmbu_d[l_ac].xmbu020 IS NOT NULL
               AND g_xmbu_d[l_ac].xmbu021 IS NOT NULL
               AND g_xmbu_d[l_ac].xmbu031 IS NOT NULL
               AND g_xmbu_d[l_ac].xmbu032 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xmbu_d_t.* = g_xmbu_d[l_ac].*  #BACKUP
               LET g_xmbu_d_o.* = g_xmbu_d[l_ac].*  #BACKUP
               CALL axmt128_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
                                                                                                                                                                                    
               #end add-point  
               CALL axmt128_set_no_entry_b(l_cmd)
               IF NOT axmt128_lock_b("xmbu_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axmt128_bcl INTO g_xmbu_d[l_ac].xmbu010,g_xmbu_d[l_ac].xmbu011,g_xmbu_d[l_ac].xmbu012, 
                      g_xmbu_d[l_ac].xmbu031,g_xmbu_d[l_ac].xmbu032,g_xmbu_d[l_ac].xmbu013,g_xmbu_d[l_ac].xmbu014, 
                      g_xmbu_d[l_ac].xmbu015,g_xmbu_d[l_ac].xmbu016,g_xmbu_d[l_ac].xmbu017,g_xmbu_d[l_ac].xmbu018, 
                      g_xmbu_d[l_ac].xmbu019,g_xmbu_d[l_ac].xmbu020,g_xmbu_d[l_ac].xmbu021,g_xmbu_d[l_ac].xmbu022 
 
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_xmbu_d_t.xmbu011,":",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_xmbu_d_mask_o[l_ac].* =  g_xmbu_d[l_ac].*
                  CALL axmt128_xmbu_t_mask()
                  LET g_xmbu_d_mask_n[l_ac].* =  g_xmbu_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL axmt128_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            CALL axmt128_set_entry(p_cmd)
            CALL axmt128_set_no_entry(p_cmd) 
            LET l_open = TRUE 
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmbu_d[l_ac].* TO NULL 
            INITIALIZE g_xmbu_d_t.* TO NULL 
            INITIALIZE g_xmbu_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_xmbu_d[l_ac].xmbu010 = "I"
      LET g_xmbu_d[l_ac].oodb005 = "Y"
 
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            
            #end add-point
            LET g_xmbu_d_t.* = g_xmbu_d[l_ac].*     #新輸入資料
            LET g_xmbu_d_o.* = g_xmbu_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axmt128_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            CALL axmt128_set_no_entry_b(l_cmd)                                                                                                                                     
            #end add-point
            CALL axmt128_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmbu_d[li_reproduce_target].* = g_xmbu_d[li_reproduce].*
 
               LET g_xmbu_d[li_reproduce_target].xmbu011 = NULL
               LET g_xmbu_d[li_reproduce_target].xmbu012 = NULL
               LET g_xmbu_d[li_reproduce_target].xmbu013 = NULL
               LET g_xmbu_d[li_reproduce_target].xmbu014 = NULL
               LET g_xmbu_d[li_reproduce_target].xmbu015 = NULL
               LET g_xmbu_d[li_reproduce_target].xmbu016 = NULL
               LET g_xmbu_d[li_reproduce_target].xmbu017 = NULL
               LET g_xmbu_d[li_reproduce_target].xmbu018 = NULL
               LET g_xmbu_d[li_reproduce_target].xmbu019 = NULL
               LET g_xmbu_d[li_reproduce_target].xmbu020 = NULL
               LET g_xmbu_d[li_reproduce_target].xmbu021 = NULL
               LET g_xmbu_d[li_reproduce_target].xmbu031 = NULL
               LET g_xmbu_d[li_reproduce_target].xmbu032 = NULL
 
            END IF
            
 
            #add-point:modify段before insert name="input.body.before_insert"
            #dorislai-20150629-add----(S)
            LET g_xmbu_d[l_ac].xmbu011 = ' '
            LET g_xmbu_d[l_ac].xmbu031 = ' '
            LET g_xmbu_d[l_ac].xmbu032 = ' '
            #dorislai-20150629-add----(E)
            LET g_xmbu_d[l_ac].xmbu012 = ' '
            LET g_xmbu_d[l_ac].xmbu013 = ' '
            LET g_xmbu_d[l_ac].xmbu014 = ' '
            LET g_xmbu_d[l_ac].xmbu015 = ' '
            LET g_xmbu_d[l_ac].xmbu016 = ' '
            LET g_xmbu_d[l_ac].xmbu017 = ' '
            LET g_xmbu_d[l_ac].xmbu019 = ' '
            LET g_xmbu_d[l_ac].xmbu020 = ' '
            LET g_xmbu_d[l_ac].xmbu021 = ' '
            IF axmt128_xmau_chk() THEN 
               CALL axmt128_def_xmbu022()
            END IF
            LET g_xmbu_d_t.* = g_xmbu_d[l_ac].*
            LET g_xmbu_d_o.* = g_xmbu_d[l_ac].*            
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            #dorislai-20150629-add----(S)
            #料號、系列、產品分類至少要輸入一項 (如果都沒輸入的話應該報錯 )
            LET l_chk2 = TRUE      #讓錯誤訊息只出現一次的開關 
            IF g_column_chk = 0 THEN   #無任何欄位隱藏
               IF cl_null(g_xmbu_d_o.xmbu011) AND cl_null(g_xmbu_d_o.xmbu031) AND cl_null(g_xmbu_d_o.xmbu032) THEN 
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = '' 
                  LET g_errparam.code   = 'axm-00650'     #料件編號、系列、產品分類請擇一輸入 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err() 
               
                  LET l_chk2 = FALSE  
                  NEXT FIELD xmbu011 
               END IF 
            END IF
            IF g_column_chk > 0 THEN   #有欄位隱藏
               LET l_msg1 = ''
               LET l_msg2 = ''
               CASE g_column_chk
                  WHEN 1 #當料件編號隱藏
                     IF cl_null(g_xmbu_d[l_ac].xmbu031) AND cl_null(g_xmbu_d[l_ac].xmbu032) THEN
                        LET l_chk = TRUE
                        CALL cl_getmsg('axm-00648',g_lang) RETURNING l_msg1
                        CALL cl_getmsg('axm-00649',g_lang) RETURNING l_msg2
                     END IF
                  WHEN 2 #當系列隱藏
                     IF cl_null(g_xmbu_d[l_ac].xmbu011)  AND cl_null(g_xmbu_d[l_ac].xmbu032) THEN
                        LET l_chk = TRUE
#                        CALL cl_getmsg('axm-00647',g_lang) RETURNING l_msg1  #160318-00005#48  mark
                        CALL cl_getmsg('apm-00939',g_lang) RETURNING l_msg1   #160318-00005#48  add
                        CALL cl_getmsg('axm-00649',g_lang) RETURNING l_msg2
                        
                     END IF
                     
                  WHEN 3 #當產品分類隱藏
                     IF cl_null(g_xmbu_d[l_ac].xmbu031) AND cl_null(g_xmbu_d[l_ac].xmbu011) THEN
                        LET l_chk = TRUE
#                        CALL cl_getmsg('axm-00647',g_lang) RETURNING l_msg1  #160318-00005#48  mark
                        CALL cl_getmsg('apm-00939',g_lang) RETURNING l_msg1   #160318-00005#48  add
                        CALL cl_getmsg('axm-00648',g_lang) RETURNING l_msg2
                     END IF
                     
               END CASE
               IF l_chk THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend=""
                  LET g_errparam.code="axm-00657"
                  LET g_errparam.replace[1] = l_msg1
                  LET g_errparam.replace[2] = l_msg2
                  LET g_errparam.popup=TRUE
                  LET g_xmbu_d[l_ac].xmbu018 = g_xmbu_d_o.xmbu018
                  CALL axmt128_xmbu018_desc()
                  CALL cl_err()
                  LET l_chk2 = FALSE 
                  NEXT FIELD CURRENT
               END IF
            END IF
            #dorislai-20150629-add----(E)                                                                                                                                 
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM xmbu_t 
             WHERE xmbuent = g_enterprise AND xmbudocno = g_xmbt_m.xmbtdocno
 
               AND xmbu011 = g_xmbu_d[l_ac].xmbu011
               AND xmbu012 = g_xmbu_d[l_ac].xmbu012
               AND xmbu013 = g_xmbu_d[l_ac].xmbu013
               AND xmbu014 = g_xmbu_d[l_ac].xmbu014
               AND xmbu015 = g_xmbu_d[l_ac].xmbu015
               AND xmbu016 = g_xmbu_d[l_ac].xmbu016
               AND xmbu017 = g_xmbu_d[l_ac].xmbu017
               AND xmbu018 = g_xmbu_d[l_ac].xmbu018
               AND xmbu019 = g_xmbu_d[l_ac].xmbu019
               AND xmbu020 = g_xmbu_d[l_ac].xmbu020
               AND xmbu021 = g_xmbu_d[l_ac].xmbu021
               AND xmbu031 = g_xmbu_d[l_ac].xmbu031
               AND xmbu032 = g_xmbu_d[l_ac].xmbu032
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               #2015-06-07----dorislai----add
#               IF cl_null(g_xmbu_d[l_ac].xmbu011)  THEN
#                  LET g_xmbu_d[l_ac].xmbu011 = ' '
#               END IF
#               IF cl_null(g_xmbu_d[l_ac].xmbu012)  THEN
#                  LET g_xmbu_d[l_ac].xmbu012 = ' '
#               END IF
#               IF cl_null(g_xmbu_d[l_ac].xmbu031) THEN
#                  LET g_xmbu_d[l_ac].xmbu031 = ' '
#               END IF
#               IF cl_null(g_xmbu_d[l_ac].xmbu032) THEN
#                  LET g_xmbu_d[l_ac].xmbu032 = ' ' 
#               END IF
               #----塞資料----

               #2015-06-07-----dorislai----end
                                                                                                                                      
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmbt_m.xmbtdocno
               LET gs_keys[2] = g_xmbu_d[g_detail_idx].xmbu011
               LET gs_keys[3] = g_xmbu_d[g_detail_idx].xmbu012
               LET gs_keys[4] = g_xmbu_d[g_detail_idx].xmbu013
               LET gs_keys[5] = g_xmbu_d[g_detail_idx].xmbu014
               LET gs_keys[6] = g_xmbu_d[g_detail_idx].xmbu015
               LET gs_keys[7] = g_xmbu_d[g_detail_idx].xmbu016
               LET gs_keys[8] = g_xmbu_d[g_detail_idx].xmbu017
               LET gs_keys[9] = g_xmbu_d[g_detail_idx].xmbu018
               LET gs_keys[10] = g_xmbu_d[g_detail_idx].xmbu019
               LET gs_keys[11] = g_xmbu_d[g_detail_idx].xmbu020
               LET gs_keys[12] = g_xmbu_d[g_detail_idx].xmbu021
               LET gs_keys[13] = g_xmbu_d[g_detail_idx].xmbu031
               LET gs_keys[14] = g_xmbu_d[g_detail_idx].xmbu032
               CALL axmt128_insert_b('xmbu_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
                                                                                                                                                                                    
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               INITIALIZE g_xmbu_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmbu_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axmt128_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
                                                                                                                                                                                    
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
                              
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_xmbt_m.xmbtdocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_xmbu_d_t.xmbu011
               LET gs_keys[gs_keys.getLength()+1] = g_xmbu_d_t.xmbu012
               LET gs_keys[gs_keys.getLength()+1] = g_xmbu_d_t.xmbu013
               LET gs_keys[gs_keys.getLength()+1] = g_xmbu_d_t.xmbu014
               LET gs_keys[gs_keys.getLength()+1] = g_xmbu_d_t.xmbu015
               LET gs_keys[gs_keys.getLength()+1] = g_xmbu_d_t.xmbu016
               LET gs_keys[gs_keys.getLength()+1] = g_xmbu_d_t.xmbu017
               LET gs_keys[gs_keys.getLength()+1] = g_xmbu_d_t.xmbu018
               LET gs_keys[gs_keys.getLength()+1] = g_xmbu_d_t.xmbu019
               LET gs_keys[gs_keys.getLength()+1] = g_xmbu_d_t.xmbu020
               LET gs_keys[gs_keys.getLength()+1] = g_xmbu_d_t.xmbu021
               LET gs_keys[gs_keys.getLength()+1] = g_xmbu_d_t.xmbu031
               LET gs_keys[gs_keys.getLength()+1] = g_xmbu_d_t.xmbu032
 
            
               #刪除同層單身
               IF NOT axmt128_delete_b('xmbu_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt128_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT axmt128_key_delete_b(gs_keys,'xmbu_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt128_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
                                                                                                                                                                                    
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE axmt128_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
                                                                                                                                                                                                           
               #end add-point
               LET l_count = g_xmbu_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               LET l_del_chk = TRUE   #避免刪除後，跑進AFTER ROW、AFTER INSERT、ON ROW CHANGE三欄位皆為空判斷式

               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_xmbu_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbu010
            #add-point:BEFORE FIELD xmbu010 name="input.b.page1.xmbu010"
                                                                                                                                                
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbu010
            
            #add-point:AFTER FIELD xmbu010 name="input.a.page1.xmbu010"
                                                                                                                                                
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmbu010
            #add-point:ON CHANGE xmbu010 name="input.g.page1.xmbu010"
                                                                                                                                                
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbu011
            
            #add-point:AFTER FIELD xmbu011 name="input.a.page1.xmbu011"
            #CALL axmt128_xmbu011_desc()
            #此段落由子樣板a05產生
            IF NOT cl_null(g_xmbu_d[l_ac].xmbu011) THEN
               IF  g_xmbt_m.xmbtdocno IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu011 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu012 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu013 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu014 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu015 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu016 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu017 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu018 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu019 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu020 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu021 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu031 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu032 IS NOT NULL THEN 
                  IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmbt_m.xmbtdocno != g_xmbtdocno_t OR g_xmbu_d[g_detail_idx].xmbu011 != g_xmbu_d_t.xmbu011 OR g_xmbu_d[g_detail_idx].xmbu012 != g_xmbu_d_t.xmbu012 OR g_xmbu_d[g_detail_idx].xmbu013 != g_xmbu_d_t.xmbu013 OR g_xmbu_d[g_detail_idx].xmbu014 != g_xmbu_d_t.xmbu014 OR g_xmbu_d[g_detail_idx].xmbu015 != g_xmbu_d_t.xmbu015 OR g_xmbu_d[g_detail_idx].xmbu016 != g_xmbu_d_t.xmbu016 OR g_xmbu_d[g_detail_idx].xmbu017 != g_xmbu_d_t.xmbu017 OR g_xmbu_d[g_detail_idx].xmbu018 != g_xmbu_d_t.xmbu018 OR g_xmbu_d[g_detail_idx].xmbu019 != g_xmbu_d_t.xmbu019 OR g_xmbu_d[g_detail_idx].xmbu020 != g_xmbu_d_t.xmbu020 OR g_xmbu_d[g_detail_idx].xmbu021 != g_xmbu_d_t.xmbu021 OR g_xmbu_d[g_detail_idx].xmbu031 != g_xmbu_d_t.xmbu031 OR g_xmbu_d[g_detail_idx].xmbu032 != g_xmbu_d_t.xmbu032)) THEN 
                     IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmbu_t WHERE "||"xmbuent = '" ||g_enterprise|| "' AND "||"xmbudocno = '"||g_xmbt_m.xmbtdocno ||"' AND "|| "xmbu011 = '"||g_xmbu_d[g_detail_idx].xmbu011 ||"' AND "|| "xmbu012 = '"||g_xmbu_d[g_detail_idx].xmbu012 ||"' AND "|| "xmbu013 = '"||g_xmbu_d[g_detail_idx].xmbu013 ||"' AND "|| "xmbu014 = '"||g_xmbu_d[g_detail_idx].xmbu014 ||"' AND "|| "xmbu015 = '"||g_xmbu_d[g_detail_idx].xmbu015 ||"' AND "|| "xmbu016 = '"||g_xmbu_d[g_detail_idx].xmbu016 ||"' AND "|| "xmbu017 = '"||g_xmbu_d[g_detail_idx].xmbu017 ||"' AND "|| "xmbu018 = '"||g_xmbu_d[g_detail_idx].xmbu018 ||"' AND "|| "xmbu019 = '"||g_xmbu_d[g_detail_idx].xmbu019 ||"' AND "|| "xmbu020 = '"||g_xmbu_d[g_detail_idx].xmbu020 ||"' AND "|| "xmbu021 = '"||g_xmbu_d[g_detail_idx].xmbu021 ||"' AND "|| "xmbu031 = '"||g_xmbu_d[g_detail_idx].xmbu031 ||"' AND "|| "xmbu032 = '"||g_xmbu_d[g_detail_idx].xmbu032 ||"'",'std-00004',0) THEN 
                        LET g_xmbu_d[l_ac].xmbu011 = g_xmbu_d_t.xmbu011
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF              
            
               LET l_xmbu011_str = g_xmbu_d[l_ac].xmbu011
               IF NOT cl_null(g_xmbu_d[l_ac].xmbu011) AND l_xmbu011_str.getIndexOf("*",1) = 0 THEN
                  #此段落由子樣板a19產生
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = 'ALL'
                  LET g_chkparam.arg2 = g_xmbu_d[l_ac].xmbu011
                  #若單頭的xmbt002不為'ALL',表示有設定某一個採購控制組,
                  #那開窗就必須過濾這個控制組可以使用的料件編號
                  IF g_xmbt_m.xmbt002 <> 'ALL' THEN
                     CALL s_control_get_item_wc(g_xmbt_m.xmbt002) RETURNING l_success,l_wc
                     IF l_success THEN 
                        LET g_chkparam.where = l_wc
                     END IF
                  END IF
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_imaf001_3") THEN
                      IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_xmbu_d[l_ac].xmbu011 <> g_xmbu_d_o.xmbu011 OR NOT cl_null(g_xmbu_d_o.xmbu011))) THEN
                         IF g_xmbu_d[l_ac].xmbu010 = 'I' THEN 
                            CALL axmt128_xmbu011_ref()
                         END IF
                      END IF
                  ELSE
                     #檢查失敗時後續處理
                     LET g_xmbu_d[l_ac].xmbu011 = g_xmbu_d_o.xmbu011
                     CALL axmt128_xmbu011_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF    
               #dorislai-20150629-add----(S)
               #若有產品特徵時，需給null，這樣畫面才會控卡產品特徵必輸的部分
               IF axmt128_imaa005_exists() THEN
                  IF cl_null(g_xmbu_d[l_ac].xmbu012) THEN
                     LET g_xmbu_d[l_ac].xmbu012 = ''
                     LET g_xmbu_d[l_ac].xmbu012_desc = ''
                  END IF
               #料號無產品特徵時，給空白，新增資料時才會不會錯誤
               ELSE
                  LET g_xmbu_d[l_ac].xmbu012 = ' '
                  LET g_xmbu_d[l_ac].xmbu012_desc = ' '
               END IF
               #dorislai-20150629-add----(E)
               #dorislai-20150605-add----(S)
               #料件編號、系列、產品分類這三個欄位擇一輸入(僅能有一個欄位有值)
                  #---料件編號、系列有值
               IF cl_null(g_xmbu_d[l_ac].xmbu011) = FALSE AND cl_null(g_xmbu_d[l_ac].xmbu031) = FALSE THEN
                  LET l_msg = ''   #清空值
                  LET l_msg1 = ''
                  LET l_msg2 = '' 
                  LET l_msg3 = ''
                  LET l_msg4 = ''
                  CASE g_column_chk
                     WHEN 0  #若無任何欄位隱藏，則僅顯示三個欄位的擇一選擇的訊息
#                        CALL cl_getmsg('axm-00647',g_lang) RETURNING l_msg1  #%1替換成 料件編號    #160318-00005#48  mark
                        CALL cl_getmsg('apm-00939',g_lang) RETURNING l_msg1  #%1替換成 料件編號     #160318-00005#48  add
                        CALL cl_getmsg('axm-00648',g_lang) RETURNING l_msg2  #%2替換成 系列
                        #替換axm-00645的字串(料件編號、系列、產品分類擇一輸入，%1已有值，是否將%2清空？)
                        CALL cl_getmsg_parm('axm-00645',g_lang,l_msg1 ||'|'|| l_msg2) RETURNING l_msg
                        #跳出提醒視窗，確認：保留當下欄位值、清除另一個欄位值  ; 取消：保留另一個欄位值、清除當下欄位值
                        IF cl_ask_confirm2('',l_msg) THEN
                           CALL axmt128_xmbu031_clear()
                        ELSE  
                           CALL axmt128_xmbu011_clear()
                        END IF
                     WHEN 3  #若產品分類隱藏，則僅顯示兩個欄位的擇一選擇的訊息
#                        CALL cl_getmsg('axm-00647',g_lang) RETURNING l_msg1  #%1替換成 料件編號    #160318-00005#48  mark
                        CALL cl_getmsg('apm-00939',g_lang) RETURNING l_msg1  #%1替換成 料件編號     #160318-00005#48  add
                        CALL cl_getmsg('axm-00648',g_lang) RETURNING l_msg2  #%2替換成 系列
#                        CALL cl_getmsg('axm-00647',g_lang) RETURNING l_msg3  #%3替換成 料件編號    #160318-00005#48  mark
                        CALL cl_getmsg('apm-00939',g_lang) RETURNING l_msg3  #%3替換成 料件編號     #160318-00005#48  add
                        CALL cl_getmsg('axm-00648',g_lang) RETURNING l_msg4  #%4替換成 系列
                        #替換axm-00656的字串(%1、%2擇一輸入，%3已有值，是否將%4清空？)
                        CALL cl_getmsg_parm('axm-00656',g_lang,l_msg1 ||'|'|| l_msg2 ||'|'|| l_msg3 ||'|'|| l_msg4) RETURNING l_msg
                        #跳出提醒視窗，確認：保留當下欄位值、清除另一個欄位值  ; 取消：保留另一個欄位值、清除當下欄位值
                        IF cl_ask_confirm2('',l_msg) THEN
                           CALL axmt128_xmbu031_clear()
                        ELSE  
                           CALL axmt128_xmbu011_clear()
                        END IF
                  END CASE
            
               END IF
            
                  #---料件編號、產品分類有值
               IF cl_null(g_xmbu_d[l_ac].xmbu011) = FALSE AND cl_null(g_xmbu_d[l_ac].xmbu032) = FALSE THEN
                  LET l_msg = ''   #清空值
                  LET l_msg1 = ''
                  LET l_msg2 = '' 
                  LET l_msg3 = ''
                  LET l_msg4 = ''
                  CASE g_column_chk 
                     WHEN 0  #若無任何欄位隱藏，則僅顯示三個欄位的擇一選擇的訊息
#                        CALL cl_getmsg('axm-00647',g_lang) RETURNING l_msg1  #%1替換成 料件編號    #160318-00005#48  mark
                        CALL cl_getmsg('apm-00939',g_lang) RETURNING l_msg1  #%1替換成 料件編號     #160318-00005#48  add
                        CALL cl_getmsg('axm-00649',g_lang) RETURNING l_msg2  #%2替換成 產品分類
                        #替換axm-00645的字串(料件編號、系列、產品分類擇一輸入，%1已有值，是否將%2清空？)
                        CALL cl_getmsg_parm('axm-00645',g_lang,l_msg1 ||'|'|| l_msg2) RETURNING l_msg 
                        #跳出提醒視窗，確認：保留當下欄位值、清除另一個欄位值  ; 取消：保留另一個欄位值、清除當下欄位值
                        IF cl_ask_confirm2('',l_msg) THEN
                           CALL axmt128_xmbu032_clear()
                        ELSE  
                           CALL axmt128_xmbu011_clear()
                        END IF
                     WHEN 2  #若系列隱藏，則僅顯示兩個欄位的擇一選擇的訊息
#                        CALL cl_getmsg('axm-00647',g_lang) RETURNING l_msg1  #%1替換成 料件編號    #160318-00005#48  mark
                        CALL cl_getmsg('apm-00939',g_lang) RETURNING l_msg1  #%1替換成 料件編號     #160318-00005#48  add
                        CALL cl_getmsg('axm-00649',g_lang) RETURNING l_msg2  #%2替換成 產品分類
#                        CALL cl_getmsg('axm-00647',g_lang) RETURNING l_msg3  #%3替換成 料件編號    #160318-00005#48  mark
                        CALL cl_getmsg('apm-00939',g_lang) RETURNING l_msg3  #%3替換成 料件編號     #160318-00005#48  add
                        CALL cl_getmsg('axm-00649',g_lang) RETURNING l_msg4  #%4替換成 產品分類
                        #替換axm-00656的字串(%1、%2擇一輸入，%3已有值，是否將%4清空？)
                        CALL cl_getmsg_parm('axm-00656',g_lang,l_msg1 ||'|'|| l_msg2 ||'|'|| l_msg3 ||'|'|| l_msg4) RETURNING l_msg
                        #跳出提醒視窗，確認：保留當下欄位值、清除另一個欄位值  ; 取消：保留另一個欄位值、清除當下欄位值
                        IF cl_ask_confirm2('',l_msg) THEN
                           CALL axmt128_xmbu032_clear()
                        ELSE  
                           CALL axmt128_xmbu011_clear()
                        END IF
                  END CASE
               END IF

            END IF
            #若料號、系列、產品分類，只有一個顯示，需給null，畫面才會控卡
            IF cl_null(g_xmbu_d[l_ac].xmbu011) AND g_column_chk = 4 THEN
               LET g_xmbu_d[l_ac].xmbu011 = ''
            END IF
            LET l_fie_chk = TRUE
            LET g_xmbu_d_o.xmbu018 = g_xmbu_d[l_ac].xmbu018
            #dorislai-20150605-add----(E)
            LET g_xmbu_d_o.xmbu011 = g_xmbu_d[l_ac].xmbu011 
            CALL axmt128_xmbu011_desc()
            CALL axmt128_set_entry_b(l_cmd)
            CALL axmt128_set_no_entry_b(l_cmd) 
            
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbu011
            #add-point:BEFORE FIELD xmbu011 name="input.b.page1.xmbu011"
           # CALL axmt128_xmbu011_desc()
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmbu011
            #add-point:ON CHANGE xmbu011 name="input.g.page1.xmbu011"
                                                                                               
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbu012
            
            #add-point:AFTER FIELD xmbu012 name="input.a.page1.xmbu012"
            CALL s_feature_description(g_xmbu_d[l_ac].xmbu011,g_xmbu_d[l_ac].xmbu012) RETURNING g_success,g_xmbu_d[l_ac].xmbu012_desc                                                                                                                                                 #此段落由子樣板a05產生
            IF  g_xmbt_m.xmbtdocno IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu011 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu012 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu013 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu014 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu015 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu016 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu017 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu018 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu019 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu020 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu021 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu031 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu032 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmbt_m.xmbtdocno != g_xmbtdocno_t OR g_xmbu_d[g_detail_idx].xmbu011 != g_xmbu_d_t.xmbu011 OR g_xmbu_d[g_detail_idx].xmbu012 != g_xmbu_d_t.xmbu012 OR g_xmbu_d[g_detail_idx].xmbu013 != g_xmbu_d_t.xmbu013 OR g_xmbu_d[g_detail_idx].xmbu014 != g_xmbu_d_t.xmbu014 OR g_xmbu_d[g_detail_idx].xmbu015 != g_xmbu_d_t.xmbu015 OR g_xmbu_d[g_detail_idx].xmbu016 != g_xmbu_d_t.xmbu016 OR g_xmbu_d[g_detail_idx].xmbu017 != g_xmbu_d_t.xmbu017 OR g_xmbu_d[g_detail_idx].xmbu018 != g_xmbu_d_t.xmbu018 OR g_xmbu_d[g_detail_idx].xmbu019 != g_xmbu_d_t.xmbu019 OR g_xmbu_d[g_detail_idx].xmbu020 != g_xmbu_d_t.xmbu020 OR g_xmbu_d[g_detail_idx].xmbu021 != g_xmbu_d_t.xmbu021 OR g_xmbu_d[g_detail_idx].xmbu031 != g_xmbu_d_t.xmbu031 OR g_xmbu_d[g_detail_idx].xmbu032 != g_xmbu_d_t.xmbu032)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmbu_t WHERE "||"xmbuent = '" ||g_enterprise|| "' AND "||"xmbudocno = '"||g_xmbt_m.xmbtdocno ||"' AND "|| "xmbu011 = '"||g_xmbu_d[g_detail_idx].xmbu011 ||"' AND "|| "xmbu012 = '"||g_xmbu_d[g_detail_idx].xmbu012 ||"' AND "|| "xmbu013 = '"||g_xmbu_d[g_detail_idx].xmbu013 ||"' AND "|| "xmbu014 = '"||g_xmbu_d[g_detail_idx].xmbu014 ||"' AND "|| "xmbu015 = '"||g_xmbu_d[g_detail_idx].xmbu015 ||"' AND "|| "xmbu016 = '"||g_xmbu_d[g_detail_idx].xmbu016 ||"' AND "|| "xmbu017 = '"||g_xmbu_d[g_detail_idx].xmbu017 ||"' AND "|| "xmbu018 = '"||g_xmbu_d[g_detail_idx].xmbu018 ||"' AND "|| "xmbu019 = '"||g_xmbu_d[g_detail_idx].xmbu019 ||"' AND "|| "xmbu020 = '"||g_xmbu_d[g_detail_idx].xmbu020 ||"' AND "|| "xmbu021 = '"||g_xmbu_d[g_detail_idx].xmbu021 ||"' AND "|| "xmbu031 = '"||g_xmbu_d[g_detail_idx].xmbu031 ||"' AND "|| "xmbu032 = '"||g_xmbu_d[g_detail_idx].xmbu032 ||"'",'std-00004',0) THEN 
                     LET g_xmbu_d[l_ac].xmbu012 = g_xmbu_d_t.xmbu012
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            #dorislai-20150628-modify----(S)
            IF NOT cl_null(g_xmbu_d[l_ac].xmbu012) THEN
#            IF g_xmbu_d[l_ac].xmbu012 IS NOT NULL THEN
            #dorislai-20150628-modify----(E)
               IF NOT s_feature_check(g_xmbu_d[l_ac].xmbu011,g_xmbu_d[l_ac].xmbu012) THEN 
                  LET g_xmbu_d[l_ac].xmbu012 = g_xmbu_d_o.xmbu012
                  NEXT FIELD CURRENT
               END IF
               #151224-00025#5---dorishsu---151228---add--
               IF NOT s_feature_direct_input(g_xmbu_d[l_ac].xmbu011,g_xmbu_d[l_ac].xmbu012,g_xmbu_d_o.xmbu012,g_xmbt_m.xmbtdocno,g_site) THEN
                  NEXT FIELD CURRENT
               END IF
               #151224-00025#5---dorishsu---151228---end--
            #dorislai-20150629-mark----(S)
            #現在產品特徵必輸，所以不需補空白
#            ELSE               
#               LET g_xmbu_d[l_ac].xmbu012 = ' '
#               LET g_xmbu_d[l_ac].xmbu012_desc = ' '
#               DISPLAY BY NAME g_xmbu_d[l_ac].xmbu012,g_xmbu_d[l_ac].xmbu012_desc   
            #dorislai-20150629-mark----(E)
            END IF
            LET g_xmbu_d_o.xmbu012 = g_xmbu_d[l_ac].xmbu012

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbu012
            #add-point:BEFORE FIELD xmbu012 name="input.b.page1.xmbu012"
            IF s_feature_auto_chk(g_xmbu_d[l_ac].xmbu011) AND cl_null(g_xmbu_d[l_ac].xmbu012) THEN #160314-00009#14 add
               IF axmt128_imaa005_exists() THEN 
                  #dorislai-20150628-modify----(S)
#                  IF NOT cl_null(g_xmbu_d[l_ac].xmbu011) AND l_open AND cl_null(g_xmbu_d[l_ac].xmbu012) THEN
                  IF NOT cl_null(g_xmbu_d[l_ac].xmbu011) AND l_open AND l_fie_chk AND cl_null(g_xmbu_d[l_ac].xmbu012) THEN
                  #dorislai-20150628-modify----(E)
                     CALL s_feature_single(g_xmbu_d[l_ac].xmbu011,g_xmbu_d[l_ac].xmbu012,'ALL','') RETURNING l_success,g_xmbu_d[l_ac].xmbu012
                     DISPLAY BY NAME g_xmbu_d[l_ac].xmbu012
                     #CALL s_transaction_begin()    #20151221-xianghui-mark
                  END IF
                  LET l_open = TRUE
                  #dorislai-20150628-add---(S)
                  LET l_fie_chk =FALSE
                  #dorislai-20150628-add---(E)
                  CALL s_feature_description(g_xmbu_d[l_ac].xmbu011,g_xmbu_d[l_ac].xmbu012) RETURNING g_success,g_xmbu_d[l_ac].xmbu012_desc
               END IF   
            END IF                #160314-00009#14 add                      
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmbu012
            #add-point:ON CHANGE xmbu012 name="input.g.page1.xmbu012"
                                                                                                                                                
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbu012_desc
            #add-point:BEFORE FIELD xmbu012_desc name="input.b.page1.xmbu012_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbu012_desc
            
            #add-point:AFTER FIELD xmbu012_desc name="input.a.page1.xmbu012_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmbu012_desc
            #add-point:ON CHANGE xmbu012_desc name="input.g.page1.xmbu012_desc"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbu031
            
            #add-point:AFTER FIELD xmbu031 name="input.a.page1.xmbu031"
            #應用 a05 樣板自動產生(Version:2)
            IF NOT cl_null(g_xmbu_d[l_ac].xmbu031) THEN
               #確認資料無重複
               IF  g_xmbt_m.xmbtdocno IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu011 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu012 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu013 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu014 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu015 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu016 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu017 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu018 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu019 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu020 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu021 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu031 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu032 IS NOT NULL THEN 
                  IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmbt_m.xmbtdocno != g_xmbtdocno_t OR g_xmbu_d[g_detail_idx].xmbu011 != g_xmbu_d_t.xmbu011 OR g_xmbu_d[g_detail_idx].xmbu012 != g_xmbu_d_t.xmbu012 OR g_xmbu_d[g_detail_idx].xmbu013 != g_xmbu_d_t.xmbu013 OR g_xmbu_d[g_detail_idx].xmbu014 != g_xmbu_d_t.xmbu014 OR g_xmbu_d[g_detail_idx].xmbu015 != g_xmbu_d_t.xmbu015 OR g_xmbu_d[g_detail_idx].xmbu016 != g_xmbu_d_t.xmbu016 OR g_xmbu_d[g_detail_idx].xmbu017 != g_xmbu_d_t.xmbu017 OR g_xmbu_d[g_detail_idx].xmbu018 != g_xmbu_d_t.xmbu018 OR g_xmbu_d[g_detail_idx].xmbu019 != g_xmbu_d_t.xmbu019 OR g_xmbu_d[g_detail_idx].xmbu020 != g_xmbu_d_t.xmbu020 OR g_xmbu_d[g_detail_idx].xmbu021 != g_xmbu_d_t.xmbu021 OR g_xmbu_d[g_detail_idx].xmbu031 != g_xmbu_d_t.xmbu031 OR g_xmbu_d[g_detail_idx].xmbu032 != g_xmbu_d_t.xmbu032)) THEN 
                     IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmbu_t WHERE "||"xmbuent = '" ||g_enterprise|| "' AND "||"xmbudocno = '"||g_xmbt_m.xmbtdocno ||"' AND "|| "xmbu011 = '"||g_xmbu_d[g_detail_idx].xmbu011 ||"' AND "|| "xmbu012 = '"||g_xmbu_d[g_detail_idx].xmbu012 ||"' AND "|| "xmbu013 = '"||g_xmbu_d[g_detail_idx].xmbu013 ||"' AND "|| "xmbu014 = '"||g_xmbu_d[g_detail_idx].xmbu014 ||"' AND "|| "xmbu015 = '"||g_xmbu_d[g_detail_idx].xmbu015 ||"' AND "|| "xmbu016 = '"||g_xmbu_d[g_detail_idx].xmbu016 ||"' AND "|| "xmbu017 = '"||g_xmbu_d[g_detail_idx].xmbu017 ||"' AND "|| "xmbu018 = '"||g_xmbu_d[g_detail_idx].xmbu018 ||"' AND "|| "xmbu019 = '"||g_xmbu_d[g_detail_idx].xmbu019 ||"' AND "|| "xmbu020 = '"||g_xmbu_d[g_detail_idx].xmbu020 ||"' AND "|| "xmbu021 = '"||g_xmbu_d[g_detail_idx].xmbu021 ||"' AND "|| "xmbu031 = '"||g_xmbu_d[g_detail_idx].xmbu031 ||"' AND "|| "xmbu032 = '"||g_xmbu_d[g_detail_idx].xmbu032 ||"'",'std-00004',0) THEN 
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
         
               #dorislai-20150605-add----(S)
               #抓取系列說明(含校驗帶值)
               IF NOT cl_null(g_xmbu_d[l_ac].xmbu031) THEN
                  IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmbu_d[l_ac].xmbu031 != g_xmbu_d_o.xmbu031 OR g_xmbu_d_o.xmbu031 IS NULL )) THEN
                     INITIALIZE g_chkparam.* TO NULL
                     LET g_chkparam.arg1 = '2003'
                     LET g_chkparam.arg2 = g_xmbu_d[l_ac].xmbu031
                     #160318-00025#35  2016/04/15  by pengxin  add(S)
                     LET g_errshow = TRUE #是否開窗 
                     LET g_chkparam.err_str[1] = "aqc-00032:sub-01302|aqci030|",cl_get_progname("aqci030",g_lang,"2"),"|:EXEPROGaqci030"
                     #160318-00025#35  2016/04/15  by pengxin  add(E)
                     IF NOT cl_chk_exist("v_oocq002_01") THEN  #判斷是否有此 校驗帶值
                        LET g_xmbu_d[l_ac].xmbu031 = g_xmbu_d_o.xmbu031
                        DISPLAY BY NAME g_xmbu_d[l_ac].xmbu031
                        CALL axmt128_xmbu031_desc() #抓取系列說明
                     END IF
                  END IF   
               END IF
               
               #料件編號、系列、產品分類這三個欄位擇一輸入(僅能有一個欄位有值)
                  #----系列、料件編號有值
               IF cl_null(g_xmbu_d[l_ac].xmbu031) = FALSE AND cl_null(g_xmbu_d[l_ac].xmbu011) = FALSE THEN
                  LET l_msg = ''   #清空值
                  LET l_msg1 = ''
                  LET l_msg2 = '' 
                  LET l_msg3 = ''
                  LET l_msg4 = ''
                  CASE g_column_chk
                     WHEN 0  #若無任何欄位隱藏，則僅顯示三個欄位的擇一選擇的訊息
                        CALL cl_getmsg('axm-00648',g_lang) RETURNING l_msg1  #%1替換成 系列
#                        CALL cl_getmsg('axm-00647',g_lang) RETURNING l_msg2  #%2替換成 料件編號    #160318-00005#48  mark
                        CALL cl_getmsg('apm-00939',g_lang) RETURNING l_msg2  #%2替換成 料件編號     #160318-00005#48  add
                        #替換axm-00645的字串(料件編號、系列、產品分類擇一輸入，%1已有值，是否將%2清空？)
                        CALL cl_getmsg_parm('axm-00645',g_lang,l_msg1 ||'|'|| l_msg2) RETURNING l_msg
                        #跳出提醒視窗，確認：保留當下欄位值、清除另一個欄位值  ; 取消：保留另一個欄位值、清除當下欄位值
                        IF cl_ask_confirm2('',l_msg) THEN
                           CALL axmt128_xmbu011_clear()
                        ELSE  
                           CALL axmt128_xmbu031_clear()                         
                        END IF
                     WHEN 3  #若產品分類隱藏，則僅顯示兩個欄位的擇一選擇的訊息
                        CALL cl_getmsg('axm-00648',g_lang) RETURNING l_msg1  #%1替換成 系列
#                        CALL cl_getmsg('axm-00647',g_lang) RETURNING l_msg2  #%2替換成 料件編號    #160318-00005#48  mark
                        CALL cl_getmsg('apm-00939',g_lang) RETURNING l_msg2  #%2替換成 料件編號     #160318-00005#48  add
                        CALL cl_getmsg('axm-00648',g_lang) RETURNING l_msg3  #%3替換成 系列
#                        CALL cl_getmsg('axm-00647',g_lang) RETURNING l_msg4  #%4替換成 料件編號    #160318-00005#48  mark
                        CALL cl_getmsg('apm-00939',g_lang) RETURNING l_msg4  #%4替換成 料件編號     #160318-00005#48  add
                        #替換axm-00656的字串(%1、%2擇一輸入，%3已有值，是否將%4清空？)
                        CALL cl_getmsg_parm('axm-00656',g_lang,l_msg1 ||'|'|| l_msg2 ||'|'|| l_msg3 ||'|'|| l_msg4) RETURNING l_msg
                        #跳出提醒視窗，確認：保留當下欄位值、清除另一個欄位值  ; 取消：保留另一個欄位值、清除當下欄位值
                        IF cl_ask_confirm2('',l_msg) THEN
                           CALL axmt128_xmbu011_clear()
                        ELSE  
                           CALL axmt128_xmbu031_clear()
                        END IF
                  END CASE
                  
               END IF
         
                  #----系列、產品分類有值
               IF cl_null(g_xmbu_d[l_ac].xmbu031) = FALSE AND cl_null(g_xmbu_d[l_ac].xmbu032) = FALSE THEN
                  LET l_msg = ''   #清空值
                  LET l_msg1 = ''
                  LET l_msg2 = '' 
                  LET l_msg3 = ''
                  LET l_msg4 = ''
                  CASE g_column_chk
                     WHEN 0   #料件編號、系列、產品分類欄位有顯現
                        CALL cl_getmsg('axm-00648',g_lang) RETURNING l_msg1  #%1替換成 系列
                        CALL cl_getmsg('axm-00649',g_lang) RETURNING l_msg2  #%2替換成 產品分類
                        #替換axm-00645的字串(料件編號、系列、產品分類擇一輸入，%1已有值，是否將%2清空？)
                        CALL cl_getmsg_parm('axm-00645',g_lang,l_msg1 ||'|'|| l_msg2) RETURNING l_msg
                        #跳出提醒視窗，確認：保留當下欄位值、清除另一個欄位值  ; 取消：保留另一個欄位值、清除當下欄位值
                        IF cl_ask_confirm2('',l_msg) THEN
                           CALL axmt128_xmbu032_clear()
                        ELSE  
                           CALL axmt128_xmbu031_clear()
                        END IF
                     WHEN 1   #系列、產品分類欄位有顯現
                        CALL cl_getmsg('axm-00648',g_lang) RETURNING l_msg1  #%1替換成 系列
                        CALL cl_getmsg('axm-00649',g_lang) RETURNING l_msg2  #%2替換成 產品分類
                        CALL cl_getmsg('axm-00648',g_lang) RETURNING l_msg3  #%3替換成 系列
                        CALL cl_getmsg('axm-00649',g_lang) RETURNING l_msg4  #%4替換成 產品分類
                        #替換axm-00656的字串(%1、%2擇一輸入，%3已有值，是否將%4清空？)
                        CALL cl_getmsg_parm('axm-00656',g_lang,l_msg1 ||'|'|| l_msg2 ||'|'|| l_msg3 ||'|'|| l_msg4) RETURNING l_msg
                        #跳出提醒視窗，確認：保留當下欄位值、清除另一個欄位值  ; 取消：保留另一個欄位值、清除當下欄位值
                        IF cl_ask_confirm2('',l_msg) THEN
                           CALL axmt128_xmbu032_clear()
                        ELSE  
                           CALL axmt128_xmbu031_clear()
                        END IF
                  END CASE
                  CALL axmt128_xmbu031_desc() #抓取系列說明
               END IF
               #確認單位，若當下單位不在當下輸入系列中的單位值，則清空單位
               IF NOT axmt128_xmbu_unit() THEN
                  LET g_xmbu_d[l_ac].xmbu018 = ''
                  LET g_xmbu_d_o.xmbu018 = g_xmbu_d[l_ac].xmbu018
                  CALL axmt128_xmbu018_desc()
               END IF
               
            END IF
            #若料號、系列、產品分類，只有一個顯示，需給null，畫面才會控卡
            IF cl_null(g_xmbu_d[l_ac].xmbu031) AND g_column_chk = 4 THEN
               LET g_xmbu_d[l_ac].xmbu031 = ''
            END IF
            LET g_xmbu_d_o.xmbu031 = g_xmbu_d[l_ac].xmbu031 
            CALL axmt128_xmbu031_desc()
            CALL axmt128_set_entry_b(l_cmd)
            CALL axmt128_set_no_entry_b(l_cmd) 
            #dorislai-20150605-add---(E)

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbu031
            #add-point:BEFORE FIELD xmbu031 name="input.b.page1.xmbu031"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmbu031
            #add-point:ON CHANGE xmbu031 name="input.g.page1.xmbu031"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbu032
            
            #add-point:AFTER FIELD xmbu032 name="input.a.page1.xmbu032"
            #應用 a05 樣板自動產生(Version:2)
            IF NOT cl_null(g_xmbu_d[l_ac].xmbu032) THEN
               #確認資料無重複
               IF  g_xmbt_m.xmbtdocno IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu011 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu012 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu013 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu014 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu015 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu016 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu017 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu018 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu019 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu020 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu021 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu031 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu032 IS NOT NULL THEN 
                  IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmbt_m.xmbtdocno != g_xmbtdocno_t OR g_xmbu_d[g_detail_idx].xmbu011 != g_xmbu_d_t.xmbu011 OR g_xmbu_d[g_detail_idx].xmbu012 != g_xmbu_d_t.xmbu012 OR g_xmbu_d[g_detail_idx].xmbu013 != g_xmbu_d_t.xmbu013 OR g_xmbu_d[g_detail_idx].xmbu014 != g_xmbu_d_t.xmbu014 OR g_xmbu_d[g_detail_idx].xmbu015 != g_xmbu_d_t.xmbu015 OR g_xmbu_d[g_detail_idx].xmbu016 != g_xmbu_d_t.xmbu016 OR g_xmbu_d[g_detail_idx].xmbu017 != g_xmbu_d_t.xmbu017 OR g_xmbu_d[g_detail_idx].xmbu018 != g_xmbu_d_t.xmbu018 OR g_xmbu_d[g_detail_idx].xmbu019 != g_xmbu_d_t.xmbu019 OR g_xmbu_d[g_detail_idx].xmbu020 != g_xmbu_d_t.xmbu020 OR g_xmbu_d[g_detail_idx].xmbu021 != g_xmbu_d_t.xmbu021 OR g_xmbu_d[g_detail_idx].xmbu031 != g_xmbu_d_t.xmbu031 OR g_xmbu_d[g_detail_idx].xmbu032 != g_xmbu_d_t.xmbu032)) THEN 
                     IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmbu_t WHERE "||"xmbuent = '" ||g_enterprise|| "' AND "||"xmbudocno = '"||g_xmbt_m.xmbtdocno ||"' AND "|| "xmbu011 = '"||g_xmbu_d[g_detail_idx].xmbu011 ||"' AND "|| "xmbu012 = '"||g_xmbu_d[g_detail_idx].xmbu012 ||"' AND "|| "xmbu013 = '"||g_xmbu_d[g_detail_idx].xmbu013 ||"' AND "|| "xmbu014 = '"||g_xmbu_d[g_detail_idx].xmbu014 ||"' AND "|| "xmbu015 = '"||g_xmbu_d[g_detail_idx].xmbu015 ||"' AND "|| "xmbu016 = '"||g_xmbu_d[g_detail_idx].xmbu016 ||"' AND "|| "xmbu017 = '"||g_xmbu_d[g_detail_idx].xmbu017 ||"' AND "|| "xmbu018 = '"||g_xmbu_d[g_detail_idx].xmbu018 ||"' AND "|| "xmbu019 = '"||g_xmbu_d[g_detail_idx].xmbu019 ||"' AND "|| "xmbu020 = '"||g_xmbu_d[g_detail_idx].xmbu020 ||"' AND "|| "xmbu021 = '"||g_xmbu_d[g_detail_idx].xmbu021 ||"' AND "|| "xmbu031 = '"||g_xmbu_d[g_detail_idx].xmbu031 ||"' AND "|| "xmbu032 = '"||g_xmbu_d[g_detail_idx].xmbu032 ||"'",'std-00004',0) THEN 
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
               
               #dorislai-20150605-add----(S)
               #抓取產品分類說明(含校驗帶值)
               IF NOT cl_null(g_xmbu_d[l_ac].xmbu032) THEN
                  IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmbu_d[l_ac].xmbu032 != g_xmbu_d_o.xmbu032 OR g_xmbu_d_o.xmbu032 IS NULL )) THEN
                     INITIALIZE g_chkparam.* TO NULL
                     LET g_chkparam.arg1 = g_xmbu_d[l_ac].xmbu032
                     #160318-00025#35  2016/04/15  by pengxin  add(S)
                     LET g_errshow = TRUE #是否開窗 
                     LET g_chkparam.err_str[1] = "anm-00081:sub-01302|aimi010|",cl_get_progname("aimi010",g_lang,"2"),"|:EXEPROGaimi010"
                     #160318-00025#35  2016/04/15  by pengxin  add(E)
                     IF NOT cl_chk_exist("v_rtax001") THEN
                        LET g_xmbu_d[l_ac].xmbu032 = g_xmbu_d_o.xmbu032
                        DISPLAY BY NAME g_xmbu_d[l_ac].xmbu032
                        CALL axmt128_xmbu032_desc()
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
               
               
               #料件編號、系列、產品分類這三個欄位擇一輸入(僅能有一個欄位有值)
                  #----產品分類、料件編號有值
               IF cl_null(g_xmbu_d[l_ac].xmbu032) = FALSE AND cl_null(g_xmbu_d[l_ac].xmbu011) = FALSE THEN
                  LET l_msg = ''   #清空值
                  LET l_msg1 = ''
                  LET l_msg2 = '' 
                  LET l_msg3 = ''
                  LET l_msg4 = ''
                  CASE g_column_chk 
                     WHEN 0  #若無任何欄位隱藏，則僅顯示三個欄位的擇一選擇的訊息
                        CALL cl_getmsg('axm-00649',g_lang) RETURNING l_msg1  #%1替換成 產品分類
#                        CALL cl_getmsg('axm-00647',g_lang) RETURNING l_msg2  #%2替換成 料件編號    #160318-00005#48  mark
                        CALL cl_getmsg('apm-00939',g_lang) RETURNING l_msg2  #%2替換成 料件編號     #160318-00005#48  add
                        #替換axm-00645的字串(料件編號、系列、產品分類擇一輸入，%1已有值，是否將%2清空？)
                        CALL cl_getmsg_parm('axm-00645',g_lang,l_msg1 ||'|'|| l_msg2) RETURNING l_msg
                        #跳出提醒視窗，確認：保留當下欄位值、清除另一個欄位值  ; 取消：保留另一個欄位值、清除當下欄位值
                        IF cl_ask_confirm2('',l_msg) THEN
                           CALL axmt128_xmbu011_clear()
                        ELSE  
                           CALL axmt128_xmbu032_clear()
                        END IF
                     WHEN 2  #若系列隱藏，則僅顯示兩個欄位的擇一選擇的訊息
                        CALL cl_getmsg('axm-00649',g_lang) RETURNING l_msg1  #%1替換成 產品分類
#                        CALL cl_getmsg('axm-00647',g_lang) RETURNING l_msg2  #%2替換成 料件編號 #160318-00005#48  mark
                        CALL cl_getmsg('apm-00939',g_lang) RETURNING l_msg2  #%2替換成 料件編號  #160318-00005#48  add
                        CALL cl_getmsg('axm-00649',g_lang) RETURNING l_msg3  #%3替換成 產品分類
#                        CALL cl_getmsg('axm-00647',g_lang) RETURNING l_msg4  #%4替換成 料件編號 #160318-00005#48  mark
                        CALL cl_getmsg('apm-00939',g_lang) RETURNING l_msg4  #%4替換成 料件編號  #160318-00005#48  add                   
                        #替換axm-00656的字串(%1、%2擇一輸入，%3已有值，是否將%4清空？)
                        CALL cl_getmsg_parm('axm-00656',g_lang,l_msg1 ||'|'|| l_msg2 ||'|'|| l_msg3 ||'|'|| l_msg4) RETURNING l_msg
                        #跳出提醒視窗，確認：保留當下欄位值、清除另一個欄位值  ; 取消：保留另一個欄位值、清除當下欄位值
                        IF cl_ask_confirm2('',l_msg) THEN
                           CALL axmt128_xmbu011_clear()
                        ELSE  
                           CALL axmt128_xmbu032_clear()
                        END IF
                  END CASE
               END IF
               
                  #----產品分類、系列有值
               IF cl_null(g_xmbu_d[l_ac].xmbu032) = FALSE AND cl_null(g_xmbu_d[l_ac].xmbu031) = FALSE THEN
                  LET l_msg = ''   #清空值
                  LET l_msg1 = ''
                  LET l_msg2 = '' 
                  LET l_msg3 = ''
                  LET l_msg4 = ''
                  CASE g_column_chk
                     WHEN 0  #若無任何欄位隱藏，則僅顯示三個欄位的擇一選擇的訊息
                        CALL cl_getmsg('axm-00649',g_lang) RETURNING l_msg1  #%1替換成 產品分類
                        CALL cl_getmsg('axm-00648',g_lang) RETURNING l_msg2  #%2替換成 系列            
                        #替換axm-00645的字串(料件編號、系列、產品分類擇一輸入，%1已有值，是否將%2清空？)
                        CALL cl_getmsg_parm('axm-00645',g_lang,l_msg1 ||'|'|| l_msg2) RETURNING l_msg
                        #跳出提醒視窗，確認：保留當下欄位值、清除另一個欄位值  ; 取消：保留另一個欄位值、清除當下欄位值
                        IF cl_ask_confirm2('',l_msg) THEN
                           CALL axmt128_xmbu031_clear()
                        ELSE
                           CALL axmt128_xmbu032_clear()
                        END IF
                     WHEN 1  #若料件編號隱藏，則僅顯示兩個欄位的擇一選擇的訊息
                        CALL cl_getmsg('axm-00649',g_lang) RETURNING l_msg1  #%1替換成 產品分類
                        CALL cl_getmsg('axm-00648',g_lang) RETURNING l_msg2  #%2替換成 系列
                        CALL cl_getmsg('axm-00649',g_lang) RETURNING l_msg3  #%3替換成 產品分類
                        CALL cl_getmsg('axm-00648',g_lang) RETURNING l_msg4  #%4替換成 系列              
                        #替換axm-00656的字串(%1、%2擇一輸入，%3已有值，是否將%4清空？)
                        CALL cl_getmsg_parm('axm-00656',g_lang,l_msg1 ||'|'|| l_msg2 ||'|'|| l_msg3 ||'|'|| l_msg4) RETURNING l_msg
                        #跳出提醒視窗，確認：保留當下欄位值、清除另一個欄位值  ; 取消：保留另一個欄位值、清除當下欄位值
                        IF cl_ask_confirm2('',l_msg) THEN
                           CALL axmt128_xmbu031_clear()
                        ELSE
                           CALL axmt128_xmbu032_clear()
                        END IF
                  END CASE
                  #確認單位，若當下單位不在當下輸入系列中的單位值，則清空單位
                  IF NOT axmt128_xmbu_unit() THEN
                     LET g_xmbu_d[l_ac].xmbu018 = ''
                     LET g_xmbu_d_o.xmbu018 = g_xmbu_d[l_ac].xmbu018
                     CALL axmt128_xmbu018_desc()
                  END IF
               END IF                    
            END IF
            #若料號、系列、產品分類，只有一個顯示，需給null，畫面才會控卡
            IF cl_null(g_xmbu_d[l_ac].xmbu032) AND g_column_chk = 4 THEN
               LET g_xmbu_d[l_ac].xmbu032 = ''
            END IF
            LET g_xmbu_d_o.xmbu032 = g_xmbu_d[l_ac].xmbu032
            CALL axmt128_xmbu032_desc()  
            CALL axmt128_set_entry_b(l_cmd)
            CALL axmt128_set_no_entry_b(l_cmd)
            #dorislai-20150605-add---(E)            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbu032
            #add-point:BEFORE FIELD xmbu032 name="input.b.page1.xmbu032"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmbu032
            #add-point:ON CHANGE xmbu032 name="input.g.page1.xmbu032"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbu013
            
            #add-point:AFTER FIELD xmbu013 name="input.a.page1.xmbu013"
                                                                                                                                                            CALL axmt128_xmbu013_desc()
            IF NOT cl_null(g_xmbu_d[l_ac].xmbu013) THEN 
               #此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmbu_d[l_ac].xmbu013
               #160318-00025#35  2016/04/15  by pengxin  add(S)
               LET g_errshow = TRUE #是否開窗 
               LET g_chkparam.err_str[1] = "aoo-00054:sub-01302|aooi010|",cl_get_progname("aooi010",g_lang,"2"),"|:EXEPROGaooi010"
               #160318-00025#35  2016/04/15  by pengxin  add(E)
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooce001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_xmbu_d[l_ac].xmbu013 = g_xmbu_d_o.xmbu013
                  NEXT FIELD CURRENT
               END IF
               IF NOT cl_null(g_xmbu_d[l_ac].xmbu014) OR NOT cl_null(g_xmbu_d[l_ac].xmbu015) THEN
                  IF NOT axmt128_area_exists() THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF               
            ELSE
               LET g_xmbu_d[l_ac].xmbu013 = ' '
            END IF 


            #此段落由子樣板a05產生
            IF  g_xmbt_m.xmbtdocno IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu011 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu012 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu013 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu014 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu015 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu016 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu017 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu018 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu019 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu020 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu021 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu031 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu032 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmbt_m.xmbtdocno != g_xmbtdocno_t OR g_xmbu_d[g_detail_idx].xmbu011 != g_xmbu_d_t.xmbu011 OR g_xmbu_d[g_detail_idx].xmbu012 != g_xmbu_d_t.xmbu012 OR g_xmbu_d[g_detail_idx].xmbu013 != g_xmbu_d_t.xmbu013 OR g_xmbu_d[g_detail_idx].xmbu014 != g_xmbu_d_t.xmbu014 OR g_xmbu_d[g_detail_idx].xmbu015 != g_xmbu_d_t.xmbu015 OR g_xmbu_d[g_detail_idx].xmbu016 != g_xmbu_d_t.xmbu016 OR g_xmbu_d[g_detail_idx].xmbu017 != g_xmbu_d_t.xmbu017 OR g_xmbu_d[g_detail_idx].xmbu018 != g_xmbu_d_t.xmbu018 OR g_xmbu_d[g_detail_idx].xmbu019 != g_xmbu_d_t.xmbu019 OR g_xmbu_d[g_detail_idx].xmbu020 != g_xmbu_d_t.xmbu020 OR g_xmbu_d[g_detail_idx].xmbu021 != g_xmbu_d_t.xmbu021 OR g_xmbu_d[g_detail_idx].xmbu031 != g_xmbu_d_t.xmbu031 OR g_xmbu_d[g_detail_idx].xmbu032 != g_xmbu_d_t.xmbu032)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmbu_t WHERE "||"xmbuent = '" ||g_enterprise|| "' AND "||"xmbudocno = '"||g_xmbt_m.xmbtdocno ||"' AND "|| "xmbu011 = '"||g_xmbu_d[g_detail_idx].xmbu011 ||"' AND "|| "xmbu012 = '"||g_xmbu_d[g_detail_idx].xmbu012 ||"' AND "|| "xmbu013 = '"||g_xmbu_d[g_detail_idx].xmbu013 ||"' AND "|| "xmbu014 = '"||g_xmbu_d[g_detail_idx].xmbu014 ||"' AND "|| "xmbu015 = '"||g_xmbu_d[g_detail_idx].xmbu015 ||"' AND "|| "xmbu016 = '"||g_xmbu_d[g_detail_idx].xmbu016 ||"' AND "|| "xmbu017 = '"||g_xmbu_d[g_detail_idx].xmbu017 ||"' AND "|| "xmbu018 = '"||g_xmbu_d[g_detail_idx].xmbu018 ||"' AND "|| "xmbu019 = '"||g_xmbu_d[g_detail_idx].xmbu019 ||"' AND "|| "xmbu020 = '"||g_xmbu_d[g_detail_idx].xmbu020 ||"' AND "|| "xmbu021 = '"||g_xmbu_d[g_detail_idx].xmbu021 ||"' AND "|| "xmbu031 = '"||g_xmbu_d[g_detail_idx].xmbu031 ||"' AND "|| "xmbu032 = '"||g_xmbu_d[g_detail_idx].xmbu032 ||"'",'std-00004',0) THEN 
                     LET g_xmbu_d[l_ac].xmbu013 = g_xmbu_d_t.xmbu013
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbu013
            #add-point:BEFORE FIELD xmbu013 name="input.b.page1.xmbu013"
                                                                                                                                                            CALL axmt128_xmbu013_desc()
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmbu013
            #add-point:ON CHANGE xmbu013 name="input.g.page1.xmbu013"
                                                                                                                                                
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbu014
            
            #add-point:AFTER FIELD xmbu014 name="input.a.page1.xmbu014"
                                                                                                                                                            CALL axmt128_xmbu014_desc()
            IF NOT cl_null(g_xmbu_d[l_ac].xmbu014) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmbu_d[l_ac].xmbu014

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_oocg001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_xmbu_d[l_ac].xmbu014 = g_xmbu_d_o.xmbu014
                  NEXT FIELD CURRENT
               END IF
               IF NOT cl_null(g_xmbu_d[l_ac].xmbu013) OR NOT cl_null(g_xmbu_d[l_ac].xmbu015) THEN
                  IF NOT axmt128_area_exists() THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF               
            ELSE
               LET g_xmbu_d[l_ac].xmbu014 = ' '
            END IF 


            #此段落由子樣板a05產生
            IF  g_xmbt_m.xmbtdocno IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu011 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu012 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu013 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu014 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu015 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu016 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu017 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu018 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu019 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu020 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu021 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu031 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu032 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmbt_m.xmbtdocno != g_xmbtdocno_t OR g_xmbu_d[g_detail_idx].xmbu011 != g_xmbu_d_t.xmbu011 OR g_xmbu_d[g_detail_idx].xmbu012 != g_xmbu_d_t.xmbu012 OR g_xmbu_d[g_detail_idx].xmbu013 != g_xmbu_d_t.xmbu013 OR g_xmbu_d[g_detail_idx].xmbu014 != g_xmbu_d_t.xmbu014 OR g_xmbu_d[g_detail_idx].xmbu015 != g_xmbu_d_t.xmbu015 OR g_xmbu_d[g_detail_idx].xmbu016 != g_xmbu_d_t.xmbu016 OR g_xmbu_d[g_detail_idx].xmbu017 != g_xmbu_d_t.xmbu017 OR g_xmbu_d[g_detail_idx].xmbu018 != g_xmbu_d_t.xmbu018 OR g_xmbu_d[g_detail_idx].xmbu019 != g_xmbu_d_t.xmbu019 OR g_xmbu_d[g_detail_idx].xmbu020 != g_xmbu_d_t.xmbu020 OR g_xmbu_d[g_detail_idx].xmbu021 != g_xmbu_d_t.xmbu021 OR g_xmbu_d[g_detail_idx].xmbu031 != g_xmbu_d_t.xmbu031 OR g_xmbu_d[g_detail_idx].xmbu032 != g_xmbu_d_t.xmbu032)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmbu_t WHERE "||"xmbuent = '" ||g_enterprise|| "' AND "||"xmbudocno = '"||g_xmbt_m.xmbtdocno ||"' AND "|| "xmbu011 = '"||g_xmbu_d[g_detail_idx].xmbu011 ||"' AND "|| "xmbu012 = '"||g_xmbu_d[g_detail_idx].xmbu012 ||"' AND "|| "xmbu013 = '"||g_xmbu_d[g_detail_idx].xmbu013 ||"' AND "|| "xmbu014 = '"||g_xmbu_d[g_detail_idx].xmbu014 ||"' AND "|| "xmbu015 = '"||g_xmbu_d[g_detail_idx].xmbu015 ||"' AND "|| "xmbu016 = '"||g_xmbu_d[g_detail_idx].xmbu016 ||"' AND "|| "xmbu017 = '"||g_xmbu_d[g_detail_idx].xmbu017 ||"' AND "|| "xmbu018 = '"||g_xmbu_d[g_detail_idx].xmbu018 ||"' AND "|| "xmbu019 = '"||g_xmbu_d[g_detail_idx].xmbu019 ||"' AND "|| "xmbu020 = '"||g_xmbu_d[g_detail_idx].xmbu020 ||"' AND "|| "xmbu021 = '"||g_xmbu_d[g_detail_idx].xmbu021 ||"' AND "|| "xmbu031 = '"||g_xmbu_d[g_detail_idx].xmbu031 ||"' AND "|| "xmbu032 = '"||g_xmbu_d[g_detail_idx].xmbu032 ||"'",'std-00004',0) THEN 
                     LET g_xmbu_d[l_ac].xmbu014 = g_xmbu_d_t.xmbu014
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbu014
            #add-point:BEFORE FIELD xmbu014 name="input.b.page1.xmbu014"
                                                                                                                                                            CALL axmt128_xmbu014_desc()
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmbu014
            #add-point:ON CHANGE xmbu014 name="input.g.page1.xmbu014"
                                                                                                                                                
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbu015
            
            #add-point:AFTER FIELD xmbu015 name="input.a.page1.xmbu015"
                                                                                                                                                            CALL axmt128_xmbu015_desc()
            IF NOT cl_null(g_xmbu_d[l_ac].xmbu015) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmbu_d[l_ac].xmbu014
               LET g_chkparam.arg2 = g_xmbu_d[l_ac].xmbu015

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooci002_01") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_xmbu_d[l_ac].xmbu015 = g_xmbu_d_o.xmbu015
                  NEXT FIELD CURRENT
               END IF
               IF NOT cl_null(g_xmbu_d[l_ac].xmbu013) OR NOT cl_null(g_xmbu_d[l_ac].xmbu014) THEN
                  IF NOT axmt128_area_exists() THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF               
            ELSE
               LET g_xmbu_d[l_ac].xmbu015 = ' '
            END IF 


            #此段落由子樣板a05產生
            IF  g_xmbt_m.xmbtdocno IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu011 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu012 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu013 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu014 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu015 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu016 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu017 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu018 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu019 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu020 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu021 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu031 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu032 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmbt_m.xmbtdocno != g_xmbtdocno_t OR g_xmbu_d[g_detail_idx].xmbu011 != g_xmbu_d_t.xmbu011 OR g_xmbu_d[g_detail_idx].xmbu012 != g_xmbu_d_t.xmbu012 OR g_xmbu_d[g_detail_idx].xmbu013 != g_xmbu_d_t.xmbu013 OR g_xmbu_d[g_detail_idx].xmbu014 != g_xmbu_d_t.xmbu014 OR g_xmbu_d[g_detail_idx].xmbu015 != g_xmbu_d_t.xmbu015 OR g_xmbu_d[g_detail_idx].xmbu016 != g_xmbu_d_t.xmbu016 OR g_xmbu_d[g_detail_idx].xmbu017 != g_xmbu_d_t.xmbu017 OR g_xmbu_d[g_detail_idx].xmbu018 != g_xmbu_d_t.xmbu018 OR g_xmbu_d[g_detail_idx].xmbu019 != g_xmbu_d_t.xmbu019 OR g_xmbu_d[g_detail_idx].xmbu020 != g_xmbu_d_t.xmbu020 OR g_xmbu_d[g_detail_idx].xmbu021 != g_xmbu_d_t.xmbu021 OR g_xmbu_d[g_detail_idx].xmbu031 != g_xmbu_d_t.xmbu031 OR g_xmbu_d[g_detail_idx].xmbu032 != g_xmbu_d_t.xmbu032)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmbu_t WHERE "||"xmbuent = '" ||g_enterprise|| "' AND "||"xmbudocno = '"||g_xmbt_m.xmbtdocno ||"' AND "|| "xmbu011 = '"||g_xmbu_d[g_detail_idx].xmbu011 ||"' AND "|| "xmbu012 = '"||g_xmbu_d[g_detail_idx].xmbu012 ||"' AND "|| "xmbu013 = '"||g_xmbu_d[g_detail_idx].xmbu013 ||"' AND "|| "xmbu014 = '"||g_xmbu_d[g_detail_idx].xmbu014 ||"' AND "|| "xmbu015 = '"||g_xmbu_d[g_detail_idx].xmbu015 ||"' AND "|| "xmbu016 = '"||g_xmbu_d[g_detail_idx].xmbu016 ||"' AND "|| "xmbu017 = '"||g_xmbu_d[g_detail_idx].xmbu017 ||"' AND "|| "xmbu018 = '"||g_xmbu_d[g_detail_idx].xmbu018 ||"' AND "|| "xmbu019 = '"||g_xmbu_d[g_detail_idx].xmbu019 ||"' AND "|| "xmbu020 = '"||g_xmbu_d[g_detail_idx].xmbu020 ||"' AND "|| "xmbu021 = '"||g_xmbu_d[g_detail_idx].xmbu021 ||"' AND "|| "xmbu031 = '"||g_xmbu_d[g_detail_idx].xmbu031 ||"' AND "|| "xmbu032 = '"||g_xmbu_d[g_detail_idx].xmbu032 ||"'",'std-00004',0) THEN 
                     LET g_xmbu_d[l_ac].xmbu015 = g_xmbu_d_t.xmbu015
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbu015
            #add-point:BEFORE FIELD xmbu015 name="input.b.page1.xmbu015"
                                                                                                                                                            CALL axmt128_xmbu015_desc()
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmbu015
            #add-point:ON CHANGE xmbu015 name="input.g.page1.xmbu015"
                                                                                                                                                
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbu016
            
            #add-point:AFTER FIELD xmbu016 name="input.a.page1.xmbu016"
                                                                                                                                                            CALL axmt128_xmbu016_desc()
            IF NOT cl_null(g_xmbu_d[l_ac].xmbu016) THEN 
               IF NOT s_azzi650_chk_exist('283',g_xmbu_d[l_ac].xmbu016) THEN
                 LET g_xmbu_d[l_ac].xmbu016 = g_xmbu_d_o.xmbu016 
                  NEXT FIELD CURRENT
               END IF
            ELSE
               LET g_xmbu_d[l_ac].xmbu016 = ' '             
            END IF            
            #此段落由子樣板a05產生
            IF  g_xmbt_m.xmbtdocno IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu011 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu012 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu013 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu014 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu015 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu016 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu017 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu018 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu019 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu020 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu021 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu031 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu032 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmbt_m.xmbtdocno != g_xmbtdocno_t OR g_xmbu_d[g_detail_idx].xmbu011 != g_xmbu_d_t.xmbu011 OR g_xmbu_d[g_detail_idx].xmbu012 != g_xmbu_d_t.xmbu012 OR g_xmbu_d[g_detail_idx].xmbu013 != g_xmbu_d_t.xmbu013 OR g_xmbu_d[g_detail_idx].xmbu014 != g_xmbu_d_t.xmbu014 OR g_xmbu_d[g_detail_idx].xmbu015 != g_xmbu_d_t.xmbu015 OR g_xmbu_d[g_detail_idx].xmbu016 != g_xmbu_d_t.xmbu016 OR g_xmbu_d[g_detail_idx].xmbu017 != g_xmbu_d_t.xmbu017 OR g_xmbu_d[g_detail_idx].xmbu018 != g_xmbu_d_t.xmbu018 OR g_xmbu_d[g_detail_idx].xmbu019 != g_xmbu_d_t.xmbu019 OR g_xmbu_d[g_detail_idx].xmbu020 != g_xmbu_d_t.xmbu020 OR g_xmbu_d[g_detail_idx].xmbu021 != g_xmbu_d_t.xmbu021 OR g_xmbu_d[g_detail_idx].xmbu031 != g_xmbu_d_t.xmbu031 OR g_xmbu_d[g_detail_idx].xmbu032 != g_xmbu_d_t.xmbu032)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmbu_t WHERE "||"xmbuent = '" ||g_enterprise|| "' AND "||"xmbudocno = '"||g_xmbt_m.xmbtdocno ||"' AND "|| "xmbu011 = '"||g_xmbu_d[g_detail_idx].xmbu011 ||"' AND "|| "xmbu012 = '"||g_xmbu_d[g_detail_idx].xmbu012 ||"' AND "|| "xmbu013 = '"||g_xmbu_d[g_detail_idx].xmbu013 ||"' AND "|| "xmbu014 = '"||g_xmbu_d[g_detail_idx].xmbu014 ||"' AND "|| "xmbu015 = '"||g_xmbu_d[g_detail_idx].xmbu015 ||"' AND "|| "xmbu016 = '"||g_xmbu_d[g_detail_idx].xmbu016 ||"' AND "|| "xmbu017 = '"||g_xmbu_d[g_detail_idx].xmbu017 ||"' AND "|| "xmbu018 = '"||g_xmbu_d[g_detail_idx].xmbu018 ||"' AND "|| "xmbu019 = '"||g_xmbu_d[g_detail_idx].xmbu019 ||"' AND "|| "xmbu020 = '"||g_xmbu_d[g_detail_idx].xmbu020 ||"' AND "|| "xmbu021 = '"||g_xmbu_d[g_detail_idx].xmbu021 ||"' AND "|| "xmbu031 = '"||g_xmbu_d[g_detail_idx].xmbu031 ||"' AND "|| "xmbu032 = '"||g_xmbu_d[g_detail_idx].xmbu032 ||"'",'std-00004',0) THEN 
                     LET g_xmbu_d[l_ac].xmbu016 = g_xmbu_d_t.xmbu016 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbu016
            #add-point:BEFORE FIELD xmbu016 name="input.b.page1.xmbu016"
                                                                                                                                                            CALL axmt128_xmbu016_desc()
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmbu016
            #add-point:ON CHANGE xmbu016 name="input.g.page1.xmbu016"
                                                                                                                                                
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbu017
            
            #add-point:AFTER FIELD xmbu017 name="input.a.page1.xmbu017"
                                                                                                                                                            CALL axmt128_xmbu017_desc() 
            IF NOT cl_null(g_xmbu_d[l_ac].xmbu017) THEN 
               IF NOT s_azzi650_chk_exist('281',g_xmbu_d[l_ac].xmbu017) THEN
                  LET g_xmbu_d[l_ac].xmbu017 = g_xmbu_d_o.xmbu017
                  NEXT FIELD CURRENT
               END IF
            ELSE
               LET g_xmbu_d[l_ac].xmbu017 = ' '             
            END IF             
            #此段落由子樣板a05產生
            IF  g_xmbt_m.xmbtdocno IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu011 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu012 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu013 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu014 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu015 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu016 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu017 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu018 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu019 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu020 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu021 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmbt_m.xmbtdocno != g_xmbtdocno_t OR g_xmbu_d[g_detail_idx].xmbu011 != g_xmbu_d_t.xmbu011 OR g_xmbu_d[g_detail_idx].xmbu012 != g_xmbu_d_t.xmbu012 OR g_xmbu_d[g_detail_idx].xmbu013 != g_xmbu_d_t.xmbu013 OR g_xmbu_d[g_detail_idx].xmbu014 != g_xmbu_d_t.xmbu014 OR g_xmbu_d[g_detail_idx].xmbu015 != g_xmbu_d_t.xmbu015 OR g_xmbu_d[g_detail_idx].xmbu016 != g_xmbu_d_t.xmbu016 OR g_xmbu_d[g_detail_idx].xmbu017 != g_xmbu_d_t.xmbu017 OR g_xmbu_d[g_detail_idx].xmbu018 != g_xmbu_d_t.xmbu018 OR g_xmbu_d[g_detail_idx].xmbu019 != g_xmbu_d_t.xmbu019 OR g_xmbu_d[g_detail_idx].xmbu020 != g_xmbu_d_t.xmbu020 OR g_xmbu_d[g_detail_idx].xmbu021 != g_xmbu_d_t.xmbu021)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmbu_t WHERE "||"xmbuent = '" ||g_enterprise|| "' AND "||"xmbudocno = '"||g_xmbt_m.xmbtdocno ||"' AND "|| "xmbu011 = '"||g_xmbu_d[g_detail_idx].xmbu011 ||"' AND "|| "xmbu012 = '"||g_xmbu_d[g_detail_idx].xmbu012 ||"' AND "|| "xmbu013 = '"||g_xmbu_d[g_detail_idx].xmbu013 ||"' AND "|| "xmbu014 = '"||g_xmbu_d[g_detail_idx].xmbu014 ||"' AND "|| "xmbu015 = '"||g_xmbu_d[g_detail_idx].xmbu015 ||"' AND "|| "xmbu016 = '"||g_xmbu_d[g_detail_idx].xmbu016 ||"' AND "|| "xmbu017 = '"||g_xmbu_d[g_detail_idx].xmbu017 ||"' AND "|| "xmbu018 = '"||g_xmbu_d[g_detail_idx].xmbu018 ||"' AND "|| "xmbu019 = '"||g_xmbu_d[g_detail_idx].xmbu019 ||"' AND "|| "xmbu020 = '"||g_xmbu_d[g_detail_idx].xmbu020 ||"' AND "|| "xmbu021 = '"||g_xmbu_d[g_detail_idx].xmbu021 ||"' AND "|| "xmbu031 = '"||g_xmbu_d[g_detail_idx].xmbu031 ||"' AND "|| "xmbu032 = '"||g_xmbu_d[g_detail_idx].xmbu032 ||"'",'std-00004',0) THEN 
                     LET g_xmbu_d[l_ac].xmbu017 = g_xmbu_d_t.xmbu017
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbu017
            #add-point:BEFORE FIELD xmbu017 name="input.b.page1.xmbu017"
                                                                                                                                                            CALL axmt128_xmbu017_desc()
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmbu017
            #add-point:ON CHANGE xmbu017 name="input.g.page1.xmbu017"
                                                                                                                                                
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbu018
            
            #add-point:AFTER FIELD xmbu018 name="input.a.page1.xmbu018"
            
            #此段落由子樣板a05產生
            IF  g_xmbt_m.xmbtdocno IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu011 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu012 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu013 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu014 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu015 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu016 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu017 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu018 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu019 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu020 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu021 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu031 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu032 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu031 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu032 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmbt_m.xmbtdocno != g_xmbtdocno_t OR g_xmbu_d[g_detail_idx].xmbu011 != g_xmbu_d_t.xmbu011 OR g_xmbu_d[g_detail_idx].xmbu012 != g_xmbu_d_t.xmbu012 OR g_xmbu_d[g_detail_idx].xmbu013 != g_xmbu_d_t.xmbu013 OR g_xmbu_d[g_detail_idx].xmbu014 != g_xmbu_d_t.xmbu014 OR g_xmbu_d[g_detail_idx].xmbu015 != g_xmbu_d_t.xmbu015 OR g_xmbu_d[g_detail_idx].xmbu016 != g_xmbu_d_t.xmbu016 OR g_xmbu_d[g_detail_idx].xmbu017 != g_xmbu_d_t.xmbu017 OR g_xmbu_d[g_detail_idx].xmbu018 != g_xmbu_d_t.xmbu018 OR g_xmbu_d[g_detail_idx].xmbu019 != g_xmbu_d_t.xmbu019 OR g_xmbu_d[g_detail_idx].xmbu020 != g_xmbu_d_t.xmbu020 OR g_xmbu_d[g_detail_idx].xmbu021 != g_xmbu_d_t.xmbu021 OR g_xmbu_d[g_detail_idx].xmbu031 != g_xmbu_d_t.xmbu031 OR g_xmbu_d[g_detail_idx].xmbu032 != g_xmbu_d_t.xmbu032)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmbu_t WHERE "||"xmbuent = '" ||g_enterprise|| "' AND "||"xmbudocno = '"||g_xmbt_m.xmbtdocno ||"' AND "|| "xmbu011 = '"||g_xmbu_d[g_detail_idx].xmbu011 ||"' AND "|| "xmbu012 = '"||g_xmbu_d[g_detail_idx].xmbu012 ||"' AND "|| "xmbu013 = '"||g_xmbu_d[g_detail_idx].xmbu013 ||"' AND "|| "xmbu014 = '"||g_xmbu_d[g_detail_idx].xmbu014 ||"' AND "|| "xmbu015 = '"||g_xmbu_d[g_detail_idx].xmbu015 ||"' AND "|| "xmbu016 = '"||g_xmbu_d[g_detail_idx].xmbu016 ||"' AND "|| "xmbu017 = '"||g_xmbu_d[g_detail_idx].xmbu017 ||"' AND "|| "xmbu018 = '"||g_xmbu_d[g_detail_idx].xmbu018 ||"' AND "|| "xmbu019 = '"||g_xmbu_d[g_detail_idx].xmbu019 ||"' AND "|| "xmbu020 = '"||g_xmbu_d[g_detail_idx].xmbu020 ||"' AND "|| "xmbu021 = '"||g_xmbu_d[g_detail_idx].xmbu021 ||"' AND "|| "xmbu031 = '"||g_xmbu_d[g_detail_idx].xmbu031 ||"' AND "|| "xmbu032 = '"||g_xmbu_d[g_detail_idx].xmbu032 ||"'",'std-00004',0) THEN 
                     LET g_xmbu_d[l_ac].xmbu018 = g_xmbu_d_t.xmbu018
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF                                                                                                                                               CALL axmt128_xmbu018_desc()
            IF NOT cl_null(g_xmbu_d[l_ac].xmbu018) THEN 
#此段落由子樣板a19產生   
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_xmbu_d[l_ac].xmbu018
               #160318-00025#35  2016/04/15  by pengxin  add(S)
               LET g_errshow = TRUE #是否開窗 
               LET g_chkparam.err_str[1] = "aim-00005:sub-01302|aooi250|",cl_get_progname("aooi250",g_lang,"2"),"|:EXEPROGaooi250"
               #160318-00025#35  2016/04/15  by pengxin  add(E)
               IF NOT cl_chk_exist("v_ooca001") THEN
                  LET g_xmbu_d[l_ac].xmbu018 = g_xmbu_d_o.xmbu018
                  CALL axmt128_xmbu018_desc()
                  NEXT FIELD CURRENT
               END IF

               LET g_xmbu_d[l_ac].xmbu018_desc = ''
               
               IF NOT cl_null(g_xmbu_d[l_ac].xmbu011) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmbu_d[l_ac].xmbu011
                  LET g_chkparam.arg2 = g_xmbu_d[l_ac].xmbu018
                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_imao002") THEN
                     #檢查失敗時後續處理
                     LET g_xmbu_d[l_ac].xmbu018 = g_xmbu_d_o.xmbu018
                     CALL axmt128_xmbu018_desc()
                     NEXT FIELD CURRENT
                  END IF
               END IF

               #dorislai-20150608-add----(S)
               #系列 或 產品分類有值的話，檢查跟他可使用的單位勾稽
               IF cl_null(g_xmbu_d[l_ac].xmbu031) = FALSE OR cl_null(g_xmbu_d[l_ac].xmbu032) = FALSE THEN
                  IF NOT axmt128_xmbu_unit() THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend=""
                     LET g_errparam.code="aim-00212"
                     LET g_errparam.popup=TRUE
                     LET g_xmbu_d[l_ac].xmbu018 = g_xmbu_d_o.xmbu018  #放回舊值
                     CALL axmt128_xmbu018_desc()
                     CALL cl_err()
                     NEXT FIELD CURRENT
                  END IF
               END IF
               #dorislai-20150608-add----(E)
            END IF 
            LET g_xmbu_d_o.xmbu018 = g_xmbu_d[l_ac].xmbu018
            CALL axmt128_xmbu018_desc()




            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbu018
            #add-point:BEFORE FIELD xmbu018 name="input.b.page1.xmbu018"
                                                                                                                                                            CALL axmt128_xmbu018_desc()
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmbu018
            #add-point:ON CHANGE xmbu018 name="input.g.page1.xmbu018"
                                                                                                                                                
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbu019
            
            #add-point:AFTER FIELD xmbu019 name="input.a.page1.xmbu019"
                                                                                                                                                            CALL axmt128_xmbu019_desc()
            IF NOT cl_null(g_xmbu_d[l_ac].xmbu019) THEN 
               #此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = 'ALL'
               LET g_chkparam.arg2 = g_xmbu_d[l_ac].xmbu019
               #160318-00025#35  2016/04/15  by pengxin  add(S)
               LET g_errshow = TRUE #是否開窗 
               LET g_chkparam.err_str[1] = "aoo-00223:sub-01302|aooi610|",cl_get_progname("aooi610",g_lang,"2"),"|:EXEPROGaooi610"
               #160318-00025#35  2016/04/15  by pengxin  add(E)
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_oodb002") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_xmbu_d[l_ac].xmbu019 = g_xmbu_d_o.xmbu019
                  NEXT FIELD CURRENT
               END IF
            ELSE
               LET g_xmbu_d[l_ac].xmbu019 = ' '
            END IF 
            
            #此段落由子樣板a05產生
            IF  g_xmbt_m.xmbtdocno IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu011 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu012 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu013 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu014 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu015 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu016 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu017 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu018 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu019 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu020 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu021 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu031 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu032 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmbt_m.xmbtdocno != g_xmbtdocno_t OR g_xmbu_d[g_detail_idx].xmbu011 != g_xmbu_d_t.xmbu011 OR g_xmbu_d[g_detail_idx].xmbu012 != g_xmbu_d_t.xmbu012 OR g_xmbu_d[g_detail_idx].xmbu013 != g_xmbu_d_t.xmbu013 OR g_xmbu_d[g_detail_idx].xmbu014 != g_xmbu_d_t.xmbu014 OR g_xmbu_d[g_detail_idx].xmbu015 != g_xmbu_d_t.xmbu015 OR g_xmbu_d[g_detail_idx].xmbu016 != g_xmbu_d_t.xmbu016 OR g_xmbu_d[g_detail_idx].xmbu017 != g_xmbu_d_t.xmbu017 OR g_xmbu_d[g_detail_idx].xmbu018 != g_xmbu_d_t.xmbu018 OR g_xmbu_d[g_detail_idx].xmbu019 != g_xmbu_d_t.xmbu019 OR g_xmbu_d[g_detail_idx].xmbu020 != g_xmbu_d_t.xmbu020 OR g_xmbu_d[g_detail_idx].xmbu021 != g_xmbu_d_t.xmbu021 OR g_xmbu_d[g_detail_idx].xmbu031 != g_xmbu_d_t.xmbu031 OR g_xmbu_d[g_detail_idx].xmbu032 != g_xmbu_d_t.xmbu032)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmbu_t WHERE "||"xmbuent = '" ||g_enterprise|| "' AND "||"xmbudocno = '"||g_xmbt_m.xmbtdocno ||"' AND "|| "xmbu011 = '"||g_xmbu_d[g_detail_idx].xmbu011 ||"' AND "|| "xmbu012 = '"||g_xmbu_d[g_detail_idx].xmbu012 ||"' AND "|| "xmbu013 = '"||g_xmbu_d[g_detail_idx].xmbu013 ||"' AND "|| "xmbu014 = '"||g_xmbu_d[g_detail_idx].xmbu014 ||"' AND "|| "xmbu015 = '"||g_xmbu_d[g_detail_idx].xmbu015 ||"' AND "|| "xmbu016 = '"||g_xmbu_d[g_detail_idx].xmbu016 ||"' AND "|| "xmbu017 = '"||g_xmbu_d[g_detail_idx].xmbu017 ||"' AND "|| "xmbu018 = '"||g_xmbu_d[g_detail_idx].xmbu018 ||"' AND "|| "xmbu019 = '"||g_xmbu_d[g_detail_idx].xmbu019 ||"' AND "|| "xmbu020 = '"||g_xmbu_d[g_detail_idx].xmbu020 ||"' AND "|| "xmbu021 = '"||g_xmbu_d[g_detail_idx].xmbu021 ||"' AND "|| "xmbu031 = '"||g_xmbu_d[g_detail_idx].xmbu031 ||"' AND "|| "xmbu032 = '"||g_xmbu_d[g_detail_idx].xmbu032 ||"'",'std-00004',0) THEN 
                     LET g_xmbu_d[l_ac].xmbu019 = g_xmbu_d_t.xmbu019
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbu019
            #add-point:BEFORE FIELD xmbu019 name="input.b.page1.xmbu019"
                                                                                                                                                            CALL axmt128_xmbu019_desc()
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmbu019
            #add-point:ON CHANGE xmbu019 name="input.g.page1.xmbu019"
                                                                                                                                                
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbu019_desc
            #add-point:BEFORE FIELD xmbu019_desc name="input.b.page1.xmbu019_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbu019_desc
            
            #add-point:AFTER FIELD xmbu019_desc name="input.a.page1.xmbu019_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmbu019_desc
            #add-point:ON CHANGE xmbu019_desc name="input.g.page1.xmbu019_desc"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbu020
            
            #add-point:AFTER FIELD xmbu020 name="input.a.page1.xmbu020"
                                                                                                                                                            CALL axmt128_xmbu020_desc()
            IF NOT cl_null(g_xmbu_d[l_ac].xmbu020) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmbu_d[l_ac].xmbu020
               #160318-00025#35  2016/04/15  by pengxin  add(S)
               LET g_errshow = TRUE #是否開窗 
               LET g_chkparam.err_str[1] = "axm-00062:sub-01302|aooi714|",cl_get_progname("aooi714",g_lang,"2"),"|:EXEPROGaooi714"
               #160318-00025#35  2016/04/15  by pengxin  add(E)
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooib002_2") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_xmbu_d[l_ac].xmbu020 = g_xmbu_d_o.xmbu020
                  NEXT FIELD CURRENT
               END IF
            ELSE
               LET g_xmbu_d[l_ac].xmbu020 = ' '
            END IF 


            #此段落由子樣板a05產生
            IF  g_xmbt_m.xmbtdocno IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu011 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu012 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu013 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu014 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu015 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu016 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu017 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu018 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu019 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu020 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu021 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu031 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu032 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmbt_m.xmbtdocno != g_xmbtdocno_t OR g_xmbu_d[g_detail_idx].xmbu011 != g_xmbu_d_t.xmbu011 OR g_xmbu_d[g_detail_idx].xmbu012 != g_xmbu_d_t.xmbu012 OR g_xmbu_d[g_detail_idx].xmbu013 != g_xmbu_d_t.xmbu013 OR g_xmbu_d[g_detail_idx].xmbu014 != g_xmbu_d_t.xmbu014 OR g_xmbu_d[g_detail_idx].xmbu015 != g_xmbu_d_t.xmbu015 OR g_xmbu_d[g_detail_idx].xmbu016 != g_xmbu_d_t.xmbu016 OR g_xmbu_d[g_detail_idx].xmbu017 != g_xmbu_d_t.xmbu017 OR g_xmbu_d[g_detail_idx].xmbu018 != g_xmbu_d_t.xmbu018 OR g_xmbu_d[g_detail_idx].xmbu019 != g_xmbu_d_t.xmbu019 OR g_xmbu_d[g_detail_idx].xmbu020 != g_xmbu_d_t.xmbu020 OR g_xmbu_d[g_detail_idx].xmbu021 != g_xmbu_d_t.xmbu021 OR g_xmbu_d[g_detail_idx].xmbu031 != g_xmbu_d_t.xmbu031 OR g_xmbu_d[g_detail_idx].xmbu032 != g_xmbu_d_t.xmbu032)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmbu_t WHERE "||"xmbuent = '" ||g_enterprise|| "' AND "||"xmbudocno = '"||g_xmbt_m.xmbtdocno ||"' AND "|| "xmbu011 = '"||g_xmbu_d[g_detail_idx].xmbu011 ||"' AND "|| "xmbu012 = '"||g_xmbu_d[g_detail_idx].xmbu012 ||"' AND "|| "xmbu013 = '"||g_xmbu_d[g_detail_idx].xmbu013 ||"' AND "|| "xmbu014 = '"||g_xmbu_d[g_detail_idx].xmbu014 ||"' AND "|| "xmbu015 = '"||g_xmbu_d[g_detail_idx].xmbu015 ||"' AND "|| "xmbu016 = '"||g_xmbu_d[g_detail_idx].xmbu016 ||"' AND "|| "xmbu017 = '"||g_xmbu_d[g_detail_idx].xmbu017 ||"' AND "|| "xmbu018 = '"||g_xmbu_d[g_detail_idx].xmbu018 ||"' AND "|| "xmbu019 = '"||g_xmbu_d[g_detail_idx].xmbu019 ||"' AND "|| "xmbu020 = '"||g_xmbu_d[g_detail_idx].xmbu020 ||"' AND "|| "xmbu021 = '"||g_xmbu_d[g_detail_idx].xmbu021 ||"' AND "|| "xmbu031 = '"||g_xmbu_d[g_detail_idx].xmbu031 ||"' AND "|| "xmbu032 = '"||g_xmbu_d[g_detail_idx].xmbu032 ||"'",'std-00004',0) THEN 
                     LET g_xmbu_d[l_ac].xmbu020 = g_xmbu_d_t.xmbu020
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbu020
            #add-point:BEFORE FIELD xmbu020 name="input.b.page1.xmbu020"
                                                                                                                                                            CALL axmt128_xmbu020_desc()
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmbu020
            #add-point:ON CHANGE xmbu020 name="input.g.page1.xmbu020"
                                                                                                                                                
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbu021
            
            #add-point:AFTER FIELD xmbu021 name="input.a.page1.xmbu021"
                                                                                                                                                            CALL axmt128_xmbu021_desc()
            IF NOT cl_null(g_xmbu_d[l_ac].xmbu021) THEN 
               IF NOT s_azzi650_chk_exist('238',g_xmbu_d[l_ac].xmbu021) THEN
                 LET g_xmbu_d[l_ac].xmbu021 = g_xmbu_d_o.xmbu021
                  NEXT FIELD CURRENT
               END IF
            ELSE
               LET g_xmbu_d[l_ac].xmbu021 = ' '             
            END IF             
            #此段落由子樣板a05產生
            IF  g_xmbt_m.xmbtdocno IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu011 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu012 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu013 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu014 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu015 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu016 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu017 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu018 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu019 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu020 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu021 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu031 IS NOT NULL AND g_xmbu_d[g_detail_idx].xmbu032 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmbt_m.xmbtdocno != g_xmbtdocno_t OR g_xmbu_d[g_detail_idx].xmbu011 != g_xmbu_d_t.xmbu011 OR g_xmbu_d[g_detail_idx].xmbu012 != g_xmbu_d_t.xmbu012 OR g_xmbu_d[g_detail_idx].xmbu013 != g_xmbu_d_t.xmbu013 OR g_xmbu_d[g_detail_idx].xmbu014 != g_xmbu_d_t.xmbu014 OR g_xmbu_d[g_detail_idx].xmbu015 != g_xmbu_d_t.xmbu015 OR g_xmbu_d[g_detail_idx].xmbu016 != g_xmbu_d_t.xmbu016 OR g_xmbu_d[g_detail_idx].xmbu017 != g_xmbu_d_t.xmbu017 OR g_xmbu_d[g_detail_idx].xmbu018 != g_xmbu_d_t.xmbu018 OR g_xmbu_d[g_detail_idx].xmbu019 != g_xmbu_d_t.xmbu019 OR g_xmbu_d[g_detail_idx].xmbu020 != g_xmbu_d_t.xmbu020 OR g_xmbu_d[g_detail_idx].xmbu021 != g_xmbu_d_t.xmbu021 OR g_xmbu_d[g_detail_idx].xmbu031 != g_xmbu_d_t.xmbu031 OR g_xmbu_d[g_detail_idx].xmbu032 != g_xmbu_d_t.xmbu032)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmbu_t WHERE "||"xmbuent = '" ||g_enterprise|| "' AND "||"xmbudocno = '"||g_xmbt_m.xmbtdocno ||"' AND "|| "xmbu011 = '"||g_xmbu_d[g_detail_idx].xmbu011 ||"' AND "|| "xmbu012 = '"||g_xmbu_d[g_detail_idx].xmbu012 ||"' AND "|| "xmbu013 = '"||g_xmbu_d[g_detail_idx].xmbu013 ||"' AND "|| "xmbu014 = '"||g_xmbu_d[g_detail_idx].xmbu014 ||"' AND "|| "xmbu015 = '"||g_xmbu_d[g_detail_idx].xmbu015 ||"' AND "|| "xmbu016 = '"||g_xmbu_d[g_detail_idx].xmbu016 ||"' AND "|| "xmbu017 = '"||g_xmbu_d[g_detail_idx].xmbu017 ||"' AND "|| "xmbu018 = '"||g_xmbu_d[g_detail_idx].xmbu018 ||"' AND "|| "xmbu019 = '"||g_xmbu_d[g_detail_idx].xmbu019 ||"' AND "|| "xmbu020 = '"||g_xmbu_d[g_detail_idx].xmbu020 ||"' AND "|| "xmbu021 = '"||g_xmbu_d[g_detail_idx].xmbu021 ||"' AND "|| "xmbu031 = '"||g_xmbu_d[g_detail_idx].xmbu031 ||"' AND "|| "xmbu032 = '"||g_xmbu_d[g_detail_idx].xmbu032 ||"'",'std-00004',0) THEN 
                     LET g_xmbu_d[l_ac].xmbu021 = g_xmbu_d_t.xmbu021
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbu021
            #add-point:BEFORE FIELD xmbu021 name="input.b.page1.xmbu021"
                                                                                                                                                            CALL axmt128_xmbu021_desc()
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmbu021
            #add-point:ON CHANGE xmbu021 name="input.g.page1.xmbu021"
                                                                                                                                                
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmbu022
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmbu_d[l_ac].xmbu022,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xmbu022
            END IF 
 
 
 
            #add-point:AFTER FIELD xmbu022 name="input.a.page1.xmbu022"
                                                                                                                                
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmbu022
            #add-point:BEFORE FIELD xmbu022 name="input.b.page1.xmbu022"
            IF NOT axmt128_xmau_chk() THEN
               LET g_xmbu_d[l_ac].xmbu010 = 'I'
            ELSE
               IF cl_null(g_xmbu_d[l_ac].xmbu022) THEN
                  CALL axmt128_def_xmbu022()
               END IF
               LET g_xmbu_d[l_ac].xmbu010 = 'U'
            END IF
            DISPLAY BY NAME g_xmbu_d[l_ac].xmbu010                                    
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmbu022
            #add-point:ON CHANGE xmbu022 name="input.g.page1.xmbu022"
                                                                                                                                                
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.xmbu010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbu010
            #add-point:ON ACTION controlp INFIELD xmbu010 name="input.c.page1.xmbu010"
                                                                                                                                                
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmbu011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbu011
            #add-point:ON ACTION controlp INFIELD xmbu011 name="input.c.page1.xmbu011"
            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmbu_d[l_ac].xmbu011             #給予default值
            #給予arg
            LET g_qryparam.arg1 = 'ALL'
            #若單頭的xmbt002不為'ALL',表示有設定某一個採購控制組,
            #那開窗就必須過濾這個控制組可以使用的料件編號
            IF g_xmbt_m.xmbt002 <> 'ALL' THEN
               CALL s_control_get_item_wc(g_xmbt_m.xmbt002) RETURNING l_success,l_wc
               IF l_success THEN 
                  LET g_qryparam.where = l_wc
               END IF
            END IF
            CALL q_imaf001_7()                               #呼叫開窗
            LET g_xmbu_d[l_ac].xmbu011 = g_qryparam.return1  #將開窗取得的值回傳到變數
            DISPLAY g_xmbu_d[l_ac].xmbu011 TO xmbu011        #顯示到畫面上
            CALL axmt128_xmbu011_desc()
            NEXT FIELD xmbu011                               #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmbu012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbu012
            #add-point:ON ACTION controlp INFIELD xmbu012 name="input.c.page1.xmbu012"
            CALL s_feature_single(g_xmbu_d[l_ac].xmbu011,g_xmbu_d[l_ac].xmbu012,'ALL','') RETURNING l_success,g_xmbu_d[l_ac].xmbu012
            DISPLAY g_xmbu_d[l_ac].xmbu012 TO xmbu012              #顯示到畫面上
            #CALL s_transaction_begin()    #20151221-xianghui-mark
            LET l_open = FALSE
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmbu012_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbu012_desc
            #add-point:ON ACTION controlp INFIELD xmbu012_desc name="input.c.page1.xmbu012_desc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmbu031
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbu031
            #add-point:ON ACTION controlp INFIELD xmbu031 name="input.c.page1.xmbu031"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmbu_d[l_ac].xmbu031        
            LET g_qryparam.arg1 = "2003" 
            CALL q_oocq002()                              
            LET g_xmbu_d[l_ac].xmbu031 = g_qryparam.return1              
            DISPLAY BY NAME g_xmbu_d[l_ac].xmbu031        
            CALL axmt128_xmbu031_desc()
            NEXT FIELD xmbu031                      


            #END add-point
 
 
         #Ctrlp:input.c.page1.xmbu032
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbu032
            #add-point:ON ACTION controlp INFIELD xmbu032 name="input.c.page1.xmbu032"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmbu_d[l_ac].xmbu032     
            CALL q_rtax001()                        
            LET g_xmbu_d[l_ac].xmbu032 = g_qryparam.return1              
            DISPLAY BY NAME g_xmbu_d[l_ac].xmbu032            
            CALL axmt128_xmbu032_desc()
            NEXT FIELD xmbu032                     


            #END add-point
 
 
         #Ctrlp:input.c.page1.xmbu013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbu013
            #add-point:ON ACTION controlp INFIELD xmbu013 name="input.c.page1.xmbu013"
                                                                                                                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmbu_d[l_ac].xmbu013             #給予default值

            #給予arg

            CALL q_ooce001_1()                                #呼叫開窗

            LET g_xmbu_d[l_ac].xmbu013 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmbu_d[l_ac].xmbu013 TO xmbu013              #顯示到畫面上

            NEXT FIELD xmbu013                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.xmbu014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbu014
            #add-point:ON ACTION controlp INFIELD xmbu014 name="input.c.page1.xmbu014"
                                                                                                                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmbu_d[l_ac].xmbu014             #給予default值
            IF NOT cl_null(g_xmbu_d[l_ac].xmbu013) THEN    
               LET g_qryparam.where = " oocg002 = '",g_xmbu_d[l_ac].xmbu013,"'"
            END IF   
            #給予arg

            CALL q_oocg001()                                #呼叫開窗

            LET g_xmbu_d[l_ac].xmbu014 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmbu_d[l_ac].xmbu014 TO xmbu014              #顯示到畫面上

            NEXT FIELD xmbu014                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.xmbu015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbu015
            #add-point:ON ACTION controlp INFIELD xmbu015 name="input.c.page1.xmbu015"
                                                                                                                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmbu_d[l_ac].xmbu015             #給予default值
            IF NOT cl_null(g_xmbu_d[l_ac].xmbu013) AND cl_null(g_xmbu_d[l_ac].xmbu014) THEN 
               LET g_qryparam.where = " ooci001 IN (SELECT oocg001 FROM oocg_t WHERE oocgent = ",g_enterprise,
                                      " AND oocg002 = '",g_xmbu_d[l_ac].xmbu013,"')"
            END IF            
            IF NOT cl_null(g_xmbu_d[l_ac].xmbu014) THEN    
               LET g_qryparam.where = " ooci001 = '",g_xmbu_d[l_ac].xmbu014,"'"
            END IF
            #給予arg

            CALL q_ooci002_2()                                #呼叫開窗
            IF NOT cl_null(g_qryparam.return1) THEN 
               LET g_xmbu_d[l_ac].xmbu014 = g_qryparam.return1
            END IF   
            LET g_xmbu_d[l_ac].xmbu015 = g_qryparam.return2              #將開窗取得的值回傳到變數

            DISPLAY g_xmbu_d[l_ac].xmbu015 TO xmbu015              #顯示到畫面上
            CALL axmt128_xmbu014_desc()
            NEXT FIELD xmbu015                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.xmbu016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbu016
            #add-point:ON ACTION controlp INFIELD xmbu016 name="input.c.page1.xmbu016"
                                                                                                                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmbu_d[l_ac].xmbu016             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '283'

            CALL q_oocq002()                                #呼叫開窗

            LET g_xmbu_d[l_ac].xmbu016 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmbu_d[l_ac].xmbu016 TO xmbu016              #顯示到畫面上

            NEXT FIELD xmbu016                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.xmbu017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbu017
            #add-point:ON ACTION controlp INFIELD xmbu017 name="input.c.page1.xmbu017"
                                                                                                                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmbu_d[l_ac].xmbu017             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '281'

            CALL q_oocq002()                                #呼叫開窗

            LET g_xmbu_d[l_ac].xmbu017 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmbu_d[l_ac].xmbu017 TO xmbu017              #顯示到畫面上

            NEXT FIELD xmbu017                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.xmbu018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbu018
            #add-point:ON ACTION controlp INFIELD xmbu018 name="input.c.page1.xmbu018"
            LET l_chk = FALSE                 #避免輸入料件編號出現二次開窗
            
            #若料件編號有值
            IF NOT cl_null(g_xmbu_d[l_ac].xmbu011) THEN
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
		         LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_xmbu_d[l_ac].xmbu018             #給予default值
               LET g_qryparam.arg1 = g_xmbu_d[l_ac].xmbu011
               #給予arg
               CALL q_imao002()                                             #呼叫開窗
               LET g_xmbu_d[l_ac].xmbu018 = g_qryparam.return1              #將開窗取得的值回傳到變數
               LET l_chk = TRUE               
            END IF
            #dorislai-20150608-add----(S)
            #若系列或產品分類有值，抓取aimm200中的單位開窗
            IF (NOT cl_null(g_xmbu_d[l_ac].xmbu031)) OR cl_null(g_xmbu_d[l_ac].xmbu032) = FALSE THEN
               #先判斷是哪個欄位有值，給予sql查詢條件
                  #---用系列去抓料件編號
               IF NOT cl_null(g_xmbu_d[l_ac].xmbu031)THEN
                  LET l_sql = "SELECT imaa001 FROM imaa_t ",
                              "WHERE imaaent = '"||g_enterprise||"' AND imaa127 = '"||g_xmbu_d[l_ac].xmbu031||"'",
                              "ORDER BY imaa001" 
               END IF
                  #---用產品分類抓料件編號
               IF NOT cl_null(g_xmbu_d[l_ac].xmbu032)THEN
                  LET l_sql = "SELECT imaa001 FROM imaa_t ",
                              "WHERE imaaent = '"||g_enterprise||"' AND imaa009 = '"||g_xmbu_d[l_ac].xmbu032||"'",
                              "ORDER BY imaa001" 
               END IF
                              
               PREPARE axmt128_get_imaa001_open_pre FROM l_sql
               DECLARE axmt128_get_imaa001_open_curs CURSOR FOR axmt128_get_imaa001_open_pre
               #先清空值，避免殘留舊值
               LET l_imaa001 = ''
               LET l_str = ''
               LET l_str_cnt = 1
               #一筆一筆比對是否有符合任一 料件編號中的可使用單位
               FOREACH axmt128_get_imaa001_open_curs INTO l_imaa001
                  #抓取到第一筆資料時，開始組字串
                  IF l_str_cnt = 1 THEN
                     LET l_str = "'",l_imaa001,"'"
                  #抓取道第二筆資料時(含第二筆)，接著第一筆或先前的字串繼續串字串
                  ELSE
                     LET l_str = l_str||",'"||l_imaa001||"'"
                  END IF
                  LET l_str_cnt = l_str_cnt + 1 #筆數增加，避免重複判斷是第一筆資料
               END FOREACH
               FREE axmt128_get_imaa001_open_pre#已使用完畢，釋放
               #依是否抓到料號，來決定g_qryparam.where值
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
		         LET g_qryparam.reqry = FALSE
               IF cl_null(l_str) THEN   #沒抓到對應的料號
                  LET g_qryparam.where = "imao001 = ''"
               ELSE
                  LET g_qryparam.where = "imao001 IN ("||l_str||")"#增加q_imao002_01的條件判斷
               END IF
               CALL q_imao002_01()
               LET g_xmbu_d[l_ac].xmbu018 = g_qryparam.return1
            ELSE
               IF l_chk = FALSE THEN
                  INITIALIZE g_qryparam.* TO NULL
                  LET g_qryparam.state = 'i'
			         LET g_qryparam.reqry = FALSE
                  LET g_qryparam.default1 = g_xmbu_d[l_ac].xmbu018   #給予default值
                  CALL q_ooca001_1()                                 #呼叫開窗
                  LET g_xmbu_d[l_ac].xmbu018 = g_qryparam.return1
               END IF                
            END IF
            
            DISPLAY BY NAME g_xmbu_d[l_ac].xmbu018      #顯示到畫面上
            CALL axmt128_xmbu018_desc()
            NEXT FIELD xmbu018                          #返回原欄位
            #dorislai-20150608-add---(E)

            #END add-point
 
 
         #Ctrlp:input.c.page1.xmbu019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbu019
            #add-point:ON ACTION controlp INFIELD xmbu019 name="input.c.page1.xmbu019"
            #此段落由子樣板a07產生            
            #開窗i段
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
   			LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmbu_d[l_ac].xmbu019  #給予default值
            #給予arg
            LET g_qryparam.arg1 = 'ALL'
            CALL q_oodb002_3()                                #呼叫開窗
            LET g_xmbu_d[l_ac].xmbu019 = g_qryparam.return1   #將開窗取得的值回傳到變數
            DISPLAY g_xmbu_d[l_ac].xmbu019 TO xmbu019         #顯示到畫面上
            NEXT FIELD xmbu019                                #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmbu019_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbu019_desc
            #add-point:ON ACTION controlp INFIELD xmbu019_desc name="input.c.page1.xmbu019_desc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmbu020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbu020
            #add-point:ON ACTION controlp INFIELD xmbu020 name="input.c.page1.xmbu020"
                                                                                                                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmbu_d[l_ac].xmbu020             #給予default值

            #給予arg

            CALL q_ooib002_2()                                #呼叫開窗

            LET g_xmbu_d[l_ac].xmbu020 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmbu_d[l_ac].xmbu020 TO xmbu020              #顯示到畫面上

            NEXT FIELD xmbu020                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.xmbu021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbu021
            #add-point:ON ACTION controlp INFIELD xmbu021 name="input.c.page1.xmbu021"
                                                                                                                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmbu_d[l_ac].xmbu021             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '238'

            CALL q_oocq002()                                #呼叫開窗

            LET g_xmbu_d[l_ac].xmbu021 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmbu_d[l_ac].xmbu021 TO xmbu021              #顯示到畫面上

            NEXT FIELD xmbu021                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.xmbu022
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmbu022
            #add-point:ON ACTION controlp INFIELD xmbu022 name="input.c.page1.xmbu022"
                                                                                                                                                
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_xmbu_d[l_ac].* = g_xmbu_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE axmt128_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_xmbu_d[l_ac].xmbu011 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_xmbu_d[l_ac].* = g_xmbu_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
                                                                                                                                                      CALL axmt128_xmau_chk() RETURNING l_success
               IF l_success = TRUE THEN 
                  LET g_xmbu_d[l_ac].xmbu010 = 'U'
               ELSE
                  LET g_xmbu_d[l_ac].xmbu010 = 'I'              
               END IF
               
               #dorislai-20150609-add---(S)
               #新增或編輯時，若料件編號、系列、產品分類皆無值，跳出訊息框 
               LET l_chk2 = TRUE      #讓錯誤訊息只出現一次的開關
               IF g_column_chk = 0 THEN   #無隱藏的欄位              
                  IF cl_null(g_xmbu_d[l_ac].xmbu031) AND cl_null(g_xmbu_d[l_ac].xmbu011) AND cl_null(g_xmbu_d[l_ac].xmbu032) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend="" 
                     LET g_errparam.code   = 'axm-00650'     #料件編號、系列、產品分類請擇一輸入 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err() 
                  
                     LET l_chk2 = FALSE  
                     NEXT FIELD xmbu011 
                  END IF
               END IF
               IF g_column_chk > 0 THEN   #無隱藏的欄位 
                  LET l_msg1 = ''
                  LET l_msg2 = ''
                  LET l_chk = FALSE  #判斷是否有進入
                  CASE g_column_chk
                     WHEN 1 #當料件編號隱藏
                        IF cl_null(g_xmbu_d[l_ac].xmbu031) AND cl_null(g_xmbu_d[l_ac].xmbu032) THEN
                           LET l_chk = TRUE
                           CALL cl_getmsg('axm-00648',g_lang) RETURNING l_msg1  # %1 替代成系列
                           CALL cl_getmsg('axm-00649',g_lang) RETURNING l_msg2  # %2 替代成產品分類
                        END IF
                     WHEN 2 #當系列隱藏
                        IF cl_null(g_xmbu_d[l_ac].xmbu011) AND cl_null(g_xmbu_d[l_ac].xmbu032) THEN
                           LET l_chk = TRUE
#                           CALL cl_getmsg('axm-00647',g_lang) RETURNING l_msg1  # %1 替代成料件編號      #160318-00005#48  mark
                           CALL cl_getmsg('apm-00939',g_lang) RETURNING l_msg1  # %1 替代成料件編號       #160318-00005#48  add
                           CALL cl_getmsg('axm-00649',g_lang) RETURNING l_msg2  # %2 替代成產品分類
                           
                        END IF
                        
                     WHEN 3 #當產品分類隱藏
                        IF cl_null(g_xmbu_d[l_ac].xmbu031) AND cl_null(g_xmbu_d[l_ac].xmbu011) THEN
                           LET l_chk = TRUE
#                           CALL cl_getmsg('axm-00647',g_lang) RETURNING l_msg1  # %1 替代成料件編號      #160318-00005#48  mark
                           CALL cl_getmsg('apm-00939',g_lang) RETURNING l_msg1  # %1 替代成料件編號       #160318-00005#48  add
                           CALL cl_getmsg('axm-00648',g_lang) RETURNING l_msg2  # %2 替代成系列
                        END IF
                        
                  END CASE
                  IF l_chk THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend=""
                     LET g_errparam.code="axm-00657"    # %1、%2請擇一輸入
                     LET g_errparam.replace[1] = l_msg1
                     LET g_errparam.replace[2] = l_msg2
                     LET g_errparam.popup=TRUE
                     CALL cl_err()
                     LET l_chk2 = FALSE
                     NEXT FIELD CURRENT
                  END IF
               END IF 
               IF l_cmd = 'a' THEN
                  LET l_cnt = 1  
                  SELECT COUNT(*) INTO l_cnt FROM xmbu_t 
                   WHERE xmbuent = g_enterprise AND xmbudocno = g_xmbt_m.xmbtdocno
                
                     AND xmbu011 = g_xmbu_d[l_ac].xmbu011
                     AND xmbu012 = g_xmbu_d[l_ac].xmbu012
                     AND xmbu013 = g_xmbu_d[l_ac].xmbu013
                     AND xmbu014 = g_xmbu_d[l_ac].xmbu014
                     AND xmbu015 = g_xmbu_d[l_ac].xmbu015
                     AND xmbu016 = g_xmbu_d[l_ac].xmbu016
                     AND xmbu017 = g_xmbu_d[l_ac].xmbu017
                     AND xmbu018 = g_xmbu_d[l_ac].xmbu018
                     AND xmbu019 = g_xmbu_d[l_ac].xmbu019
                     AND xmbu020 = g_xmbu_d[l_ac].xmbu020
                     AND xmbu021 = g_xmbu_d[l_ac].xmbu021
                     AND xmbu031 = g_xmbu_d[l_ac].xmbu031
                     AND xmbu032 = g_xmbu_d[l_ac].xmbu032
                  IF cl_null(l_cnt) or l_cnt = 0 THEN
                     
                     INSERT INTO xmbu_t (xmbuent,xmbudocno,xmbu011,xmbu012,
                                         xmbu013,xmbu014,xmbu015,xmbu016,
                                         xmbu017,xmbu018,xmbu019,xmbu020,xmbu021
                                         ,xmbu031,xmbu032,xmbu010,xmbu022) 
                                 VALUES (g_enterprise,g_xmbt_m.xmbtdocno,g_xmbu_d[l_ac].xmbu011,
                                         g_xmbu_d[l_ac].xmbu012,g_xmbu_d[l_ac].xmbu013,g_xmbu_d[l_ac].xmbu014,
                                         g_xmbu_d[l_ac].xmbu015,g_xmbu_d[l_ac].xmbu016,g_xmbu_d[l_ac].xmbu017,
                                         g_xmbu_d[l_ac].xmbu018,g_xmbu_d[l_ac].xmbu019,g_xmbu_d[l_ac].xmbu020,
                                         g_xmbu_d[l_ac].xmbu021,g_xmbu_d[l_ac].xmbu031,g_xmbu_d[l_ac].xmbu032,
                                         g_xmbu_d[l_ac].xmbu010,g_xmbu_d[l_ac].xmbu022)
                                         
                     LET g_xmbu_d_t.xmbu018 = g_xmbu_d[l_ac].xmbu018
                     LET g_xmbu_d_t.xmbu011 = g_xmbu_d[l_ac].xmbu011
                     LET g_xmbu_d_t.xmbu012 = g_xmbu_d[l_ac].xmbu012
                     LET g_xmbu_d_t.xmbu031 = g_xmbu_d[l_ac].xmbu031
                     LET g_xmbu_d_t.xmbu032 = g_xmbu_d[l_ac].xmbu032
                     
                     LET g_rec_b = g_rec_b + 1
                     DISPLAY g_rec_b TO FORMONLY.cnt
                  END IF
               END IF               
               
               #dorislai-20150609-add---(E)  
                
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL axmt128_xmbu_t_mask_restore('restore_mask_o')
      
               UPDATE xmbu_t SET (xmbudocno,xmbu010,xmbu011,xmbu012,xmbu031,xmbu032,xmbu013,xmbu014, 
                   xmbu015,xmbu016,xmbu017,xmbu018,xmbu019,xmbu020,xmbu021,xmbu022) = (g_xmbt_m.xmbtdocno, 
                   g_xmbu_d[l_ac].xmbu010,g_xmbu_d[l_ac].xmbu011,g_xmbu_d[l_ac].xmbu012,g_xmbu_d[l_ac].xmbu031, 
                   g_xmbu_d[l_ac].xmbu032,g_xmbu_d[l_ac].xmbu013,g_xmbu_d[l_ac].xmbu014,g_xmbu_d[l_ac].xmbu015, 
                   g_xmbu_d[l_ac].xmbu016,g_xmbu_d[l_ac].xmbu017,g_xmbu_d[l_ac].xmbu018,g_xmbu_d[l_ac].xmbu019, 
                   g_xmbu_d[l_ac].xmbu020,g_xmbu_d[l_ac].xmbu021,g_xmbu_d[l_ac].xmbu022)
                WHERE xmbuent = g_enterprise AND xmbudocno = g_xmbt_m.xmbtdocno 
 
                  AND xmbu011 = g_xmbu_d_t.xmbu011 #項次   
                  AND xmbu012 = g_xmbu_d_t.xmbu012  
                  AND xmbu013 = g_xmbu_d_t.xmbu013  
                  AND xmbu014 = g_xmbu_d_t.xmbu014  
                  AND xmbu015 = g_xmbu_d_t.xmbu015  
                  AND xmbu016 = g_xmbu_d_t.xmbu016  
                  AND xmbu017 = g_xmbu_d_t.xmbu017  
                  AND xmbu018 = g_xmbu_d_t.xmbu018  
                  AND xmbu019 = g_xmbu_d_t.xmbu019  
                  AND xmbu020 = g_xmbu_d_t.xmbu020  
                  AND xmbu021 = g_xmbu_d_t.xmbu021  
                  AND xmbu031 = g_xmbu_d_t.xmbu031  
                  AND xmbu032 = g_xmbu_d_t.xmbu032  
 
                  
               #add-point:單身修改中 name="input.body.m_update"
                              
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_xmbu_d[l_ac].* = g_xmbu_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmbu_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     LET g_xmbu_d[l_ac].* = g_xmbu_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmbu_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmbt_m.xmbtdocno
               LET gs_keys_bak[1] = g_xmbtdocno_t
               LET gs_keys[2] = g_xmbu_d[g_detail_idx].xmbu011
               LET gs_keys_bak[2] = g_xmbu_d_t.xmbu011
               LET gs_keys[3] = g_xmbu_d[g_detail_idx].xmbu012
               LET gs_keys_bak[3] = g_xmbu_d_t.xmbu012
               LET gs_keys[4] = g_xmbu_d[g_detail_idx].xmbu013
               LET gs_keys_bak[4] = g_xmbu_d_t.xmbu013
               LET gs_keys[5] = g_xmbu_d[g_detail_idx].xmbu014
               LET gs_keys_bak[5] = g_xmbu_d_t.xmbu014
               LET gs_keys[6] = g_xmbu_d[g_detail_idx].xmbu015
               LET gs_keys_bak[6] = g_xmbu_d_t.xmbu015
               LET gs_keys[7] = g_xmbu_d[g_detail_idx].xmbu016
               LET gs_keys_bak[7] = g_xmbu_d_t.xmbu016
               LET gs_keys[8] = g_xmbu_d[g_detail_idx].xmbu017
               LET gs_keys_bak[8] = g_xmbu_d_t.xmbu017
               LET gs_keys[9] = g_xmbu_d[g_detail_idx].xmbu018
               LET gs_keys_bak[9] = g_xmbu_d_t.xmbu018
               LET gs_keys[10] = g_xmbu_d[g_detail_idx].xmbu019
               LET gs_keys_bak[10] = g_xmbu_d_t.xmbu019
               LET gs_keys[11] = g_xmbu_d[g_detail_idx].xmbu020
               LET gs_keys_bak[11] = g_xmbu_d_t.xmbu020
               LET gs_keys[12] = g_xmbu_d[g_detail_idx].xmbu021
               LET gs_keys_bak[12] = g_xmbu_d_t.xmbu021
               LET gs_keys[13] = g_xmbu_d[g_detail_idx].xmbu031
               LET gs_keys_bak[13] = g_xmbu_d_t.xmbu031
               LET gs_keys[14] = g_xmbu_d[g_detail_idx].xmbu032
               LET gs_keys_bak[14] = g_xmbu_d_t.xmbu032
               CALL axmt128_update_b('xmbu_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL axmt128_xmbu_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_xmbu_d[g_detail_idx].xmbu011 = g_xmbu_d_t.xmbu011 
                  AND g_xmbu_d[g_detail_idx].xmbu012 = g_xmbu_d_t.xmbu012 
                  AND g_xmbu_d[g_detail_idx].xmbu013 = g_xmbu_d_t.xmbu013 
                  AND g_xmbu_d[g_detail_idx].xmbu014 = g_xmbu_d_t.xmbu014 
                  AND g_xmbu_d[g_detail_idx].xmbu015 = g_xmbu_d_t.xmbu015 
                  AND g_xmbu_d[g_detail_idx].xmbu016 = g_xmbu_d_t.xmbu016 
                  AND g_xmbu_d[g_detail_idx].xmbu017 = g_xmbu_d_t.xmbu017 
                  AND g_xmbu_d[g_detail_idx].xmbu018 = g_xmbu_d_t.xmbu018 
                  AND g_xmbu_d[g_detail_idx].xmbu019 = g_xmbu_d_t.xmbu019 
                  AND g_xmbu_d[g_detail_idx].xmbu020 = g_xmbu_d_t.xmbu020 
                  AND g_xmbu_d[g_detail_idx].xmbu021 = g_xmbu_d_t.xmbu021 
                  AND g_xmbu_d[g_detail_idx].xmbu031 = g_xmbu_d_t.xmbu031 
                  AND g_xmbu_d[g_detail_idx].xmbu032 = g_xmbu_d_t.xmbu032 
 
                  ) THEN
                  LET gs_keys[01] = g_xmbt_m.xmbtdocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_xmbu_d_t.xmbu011
                  LET gs_keys[gs_keys.getLength()+1] = g_xmbu_d_t.xmbu012
                  LET gs_keys[gs_keys.getLength()+1] = g_xmbu_d_t.xmbu013
                  LET gs_keys[gs_keys.getLength()+1] = g_xmbu_d_t.xmbu014
                  LET gs_keys[gs_keys.getLength()+1] = g_xmbu_d_t.xmbu015
                  LET gs_keys[gs_keys.getLength()+1] = g_xmbu_d_t.xmbu016
                  LET gs_keys[gs_keys.getLength()+1] = g_xmbu_d_t.xmbu017
                  LET gs_keys[gs_keys.getLength()+1] = g_xmbu_d_t.xmbu018
                  LET gs_keys[gs_keys.getLength()+1] = g_xmbu_d_t.xmbu019
                  LET gs_keys[gs_keys.getLength()+1] = g_xmbu_d_t.xmbu020
                  LET gs_keys[gs_keys.getLength()+1] = g_xmbu_d_t.xmbu021
                  LET gs_keys[gs_keys.getLength()+1] = g_xmbu_d_t.xmbu031
                  LET gs_keys[gs_keys.getLength()+1] = g_xmbu_d_t.xmbu032
 
                  CALL axmt128_key_update_b(gs_keys,'xmbu_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_xmbt_m),util.JSON.stringify(g_xmbu_d_t)
               LET g_log2 = util.JSON.stringify(g_xmbt_m),util.JSON.stringify(g_xmbu_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
                                                                                                                                                                      
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            #dorislai-21050629-add----(S)
            #非刪除的情況且單位有輸入資料才需要檢查 
            IF (NOT l_del_chk) AND (NOT cl_null(g_xmbu_d_o.xmbu018)) THEN 
               IF g_column_chk = 0 THEN   #無隱藏的欄位 
                  #檢查三個key值欄位是否有輸入資料 
                  IF cl_null(g_xmbu_d[l_ac].xmbu031) AND cl_null(g_xmbu_d[l_ac].xmbu011) AND cl_null(g_xmbu_d[l_ac].xmbu032) THEN
                     IF l_chk2 THEN 
                        INITIALIZE g_errparam TO NULL 
                        LET g_errparam.extend = '' 
                        LET g_errparam.code   = 'axm-00650'     #料件編號、系列、產品分類請擇一輸入 
                        LET g_errparam.popup  = TRUE 
                        CALL cl_err() 
                     END IF 
                  
                     LET l_chk2 = TRUE 
                     NEXT FIELD xmbu011  
                  END IF
               END IF               
               IF g_column_chk > 0 THEN   #有隱藏的欄位
                  LET l_msg1 = ''
                  LET l_msg2 = ''
                  LET l_chk = FALSE #判斷是否有兩個欄位有值的情況
                  CASE g_column_chk
                     WHEN 1 #當料件編號隱藏
                        IF cl_null(g_xmbu_d[l_ac].xmbu031) AND cl_null(g_xmbu_d[l_ac].xmbu032) THEN
                           LET l_chk = TRUE
                           CALL cl_getmsg('axm-00648',g_lang) RETURNING l_msg1  # %1 替代成 系列
                           CALL cl_getmsg('axm-00649',g_lang) RETURNING l_msg2  # %2 替代成 產品分類
                        END IF
                     WHEN 2 #當系列隱藏
                        IF cl_null(g_xmbu_d[l_ac].xmbu011) AND cl_null(g_xmbu_d[l_ac].xmbu032) THEN
                           LET l_chk = TRUE
#                           CALL cl_getmsg('axm-00647',g_lang) RETURNING l_msg1  # %1 替代成 料件編號  #160318-00005#48  mark
                           CALL cl_getmsg('apm-00939',g_lang) RETURNING l_msg1  # %1 替代成 料件編號   #160318-00005#48  add
                           CALL cl_getmsg('axm-00649',g_lang) RETURNING l_msg2  # %2 替代成 產品分類
                        END IF
                     WHEN 3 #當產品分類隱藏
                        IF cl_null(g_xmbu_d[l_ac].xmbu031) AND cl_null(g_xmbu_d[l_ac].xmbu011) THEN
                           LET l_chk = TRUE
#                           CALL cl_getmsg('axm-00647',g_lang) RETURNING l_msg1  # %1 替代成 料件編號  #160318-00005#48  mark
                           CALL cl_getmsg('apm-00939',g_lang) RETURNING l_msg1  # %1 替代成 料件編號   #160318-00005#48  add
                           CALL cl_getmsg('axm-00648',g_lang) RETURNING l_msg2  # %2 替代成 系列
                        END IF
                  END CASE
                  #若有任兩個無值
                  IF l_chk THEN
                     #判斷是否有跑過錯誤訊息，沒的話這要跳錯誤訊息
                     IF l_chk2 THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.extend=""
                        LET g_errparam.code="axm-00657"
                        LET g_errparam.replace[1] = l_msg1
                        LET g_errparam.replace[2] = l_msg2
                        LET g_errparam.popup=TRUE
                        CALL cl_err()
                     END IF
                     LET l_chk2 = TRUE
                     NEXT FIELD CURRENT
                  END IF
               END IF
               IF l_cmd = 'a' THEN
                  LET l_cnt = 1  
                  SELECT COUNT(*) INTO l_cnt FROM xmbu_t 
                   WHERE xmbuent = g_enterprise AND xmbudocno = g_xmbt_m.xmbtdocno
                
                     AND xmbu011 = g_xmbu_d[l_ac].xmbu011
                     AND xmbu012 = g_xmbu_d[l_ac].xmbu012
                     AND xmbu013 = g_xmbu_d[l_ac].xmbu013
                     AND xmbu014 = g_xmbu_d[l_ac].xmbu014
                     AND xmbu015 = g_xmbu_d[l_ac].xmbu015
                     AND xmbu016 = g_xmbu_d[l_ac].xmbu016
                     AND xmbu017 = g_xmbu_d[l_ac].xmbu017
                     AND xmbu018 = g_xmbu_d[l_ac].xmbu018
                     AND xmbu019 = g_xmbu_d[l_ac].xmbu019
                     AND xmbu020 = g_xmbu_d[l_ac].xmbu020
                     AND xmbu021 = g_xmbu_d[l_ac].xmbu021
                     AND xmbu031 = g_xmbu_d[l_ac].xmbu031
                     AND xmbu032 = g_xmbu_d[l_ac].xmbu032
                  IF cl_null(l_cnt) or l_cnt = 0 THEN
                     
                     INSERT INTO xmbu_t (xmbuent,xmbudocno,xmbu011,xmbu012,
                                         xmbu013,xmbu014,xmbu015,xmbu016,
                                         xmbu017,xmbu018,xmbu019,xmbu020,xmbu021
                                         ,xmbu031,xmbu032,xmbu010,xmbu022) 
                                 VALUES (g_enterprise,g_xmbt_m.xmbtdocno,g_xmbu_d[l_ac].xmbu011,
                                         g_xmbu_d[l_ac].xmbu012,g_xmbu_d[l_ac].xmbu013,g_xmbu_d[l_ac].xmbu014,
                                         g_xmbu_d[l_ac].xmbu015,g_xmbu_d[l_ac].xmbu016,g_xmbu_d[l_ac].xmbu017,
                                         g_xmbu_d[l_ac].xmbu018,g_xmbu_d[l_ac].xmbu019,g_xmbu_d[l_ac].xmbu020,
                                         g_xmbu_d[l_ac].xmbu021,g_xmbu_d[l_ac].xmbu031,g_xmbu_d[l_ac].xmbu032,
                                         g_xmbu_d[l_ac].xmbu010,g_xmbu_d[l_ac].xmbu022)

                     LET g_rec_b = g_rec_b + 1
                     DISPLAY g_rec_b TO FORMONLY.cnt
                  END IF
               END IF  
            END IF  

            #dorislai-21050629-add----(E)                                                                                                                                      
            #end add-point
            CALL axmt128_unlock_b("xmbu_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
                                                                                                                                                
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_xmbu_d[li_reproduce_target].* = g_xmbu_d[li_reproduce].*
 
               LET g_xmbu_d[li_reproduce_target].xmbu011 = NULL
               LET g_xmbu_d[li_reproduce_target].xmbu012 = NULL
               LET g_xmbu_d[li_reproduce_target].xmbu013 = NULL
               LET g_xmbu_d[li_reproduce_target].xmbu014 = NULL
               LET g_xmbu_d[li_reproduce_target].xmbu015 = NULL
               LET g_xmbu_d[li_reproduce_target].xmbu016 = NULL
               LET g_xmbu_d[li_reproduce_target].xmbu017 = NULL
               LET g_xmbu_d[li_reproduce_target].xmbu018 = NULL
               LET g_xmbu_d[li_reproduce_target].xmbu019 = NULL
               LET g_xmbu_d[li_reproduce_target].xmbu020 = NULL
               LET g_xmbu_d[li_reproduce_target].xmbu021 = NULL
               LET g_xmbu_d[li_reproduce_target].xmbu031 = NULL
               LET g_xmbu_d[li_reproduce_target].xmbu032 = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_xmbu_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_xmbu_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
 
 
 
{</section>}
 
{<section id="axmt128.input.other" >}
      
      #add-point:自定義input name="input.more_input"
                                                                        
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
                                                                                                            
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1',"))      
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            
            #end add-point  
            NEXT FIELD xmbtdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xmbu010
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
 
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
                                    
   #end add-point    
 
END FUNCTION
 
{</section>}
 
{<section id="axmt128.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION axmt128_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
                                    
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
                                    
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL axmt128_b_fill() #單身填充
      CALL axmt128_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL axmt128_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
   IF NOT cl_null(g_xmbt_m.xmbtdocno) THEN
      CALL axmt128_xmbtdocno_desc('2',g_xmbt_m.xmbtdocno) RETURNING g_xmbt_m.xmbtdocno_desc
   END IF
   DISPLAY BY NAME g_xmbt_m.xmbtdocno_desc
#   CALL axmt128_xmbt001_desc()
#   CALL axmt128_xmbt002_desc()
#   CALL axmt128_xmbt003_desc()
#   CALL axmt128_xmbt005_desc()
#   CALL axmt128_xmbt900_desc()
#   CALL axmt128_xmbt901_desc()
#            
#   INITIALIZE g_ref_fields TO NULL
#   LET g_ref_fields[1] = g_xmbt_m.xmbtownid
#   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#   LET g_xmbt_m.xmbtownid_desc = '', g_rtn_fields[1] , ''
#   DISPLAY BY NAME g_xmbt_m.xmbtownid_desc
#
#   INITIALIZE g_ref_fields TO NULL
#   LET g_ref_fields[1] = g_xmbt_m.xmbtowndp
#   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#   LET g_xmbt_m.xmbtowndp_desc = '', g_rtn_fields[1] , ''
#   DISPLAY BY NAME g_xmbt_m.xmbtowndp_desc
#
#   INITIALIZE g_ref_fields TO NULL
#   LET g_ref_fields[1] = g_xmbt_m.xmbtcrtid
#   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#   LET g_xmbt_m.xmbtcrtid_desc = '', g_rtn_fields[1] , ''
#   DISPLAY BY NAME g_xmbt_m.xmbtcrtid_desc
#
#   INITIALIZE g_ref_fields TO NULL
#   LET g_ref_fields[1] = g_xmbt_m.xmbtcrtdp
#   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#   LET g_xmbt_m.xmbtcrtdp_desc = '', g_rtn_fields[1] , ''
#   DISPLAY BY NAME g_xmbt_m.xmbtcrtdp_desc
#
#   INITIALIZE g_ref_fields TO NULL
#   LET g_ref_fields[1] = g_xmbt_m.xmbtmodid
#   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#   LET g_xmbt_m.xmbtmodid_desc = '', g_rtn_fields[1] , ''
#   DISPLAY BY NAME g_xmbt_m.xmbtmodid_desc
#
#   INITIALIZE g_ref_fields TO NULL
#   LET g_ref_fields[1] = g_xmbt_m.xmbtcnfid
#   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#   LET g_xmbt_m.xmbtcnfid_desc = '', g_rtn_fields[1] , ''
#   DISPLAY BY NAME g_xmbt_m.xmbtcnfid_desc
   #end add-point
   
   #遮罩相關處理
   LET g_xmbt_m_mask_o.* =  g_xmbt_m.*
   CALL axmt128_xmbt_t_mask()
   LET g_xmbt_m_mask_n.* =  g_xmbt_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xmbt_m.xmbtdocno,g_xmbt_m.xmbtdocno_desc,g_xmbt_m.xmbtdocdt,g_xmbt_m.xmbt900,g_xmbt_m.xmbt900_desc, 
       g_xmbt_m.xmbt901,g_xmbt_m.xmbt901_desc,g_xmbt_m.xmbtstus,g_xmbt_m.xmbt001,g_xmbt_m.xmbt001_desc, 
       g_xmbt_m.xmbt002,g_xmbt_m.xmbt002_desc,g_xmbt_m.xmbt003,g_xmbt_m.xmbt003_desc,g_xmbt_m.xmbt005, 
       g_xmbt_m.xmbt005_desc,g_xmbt_m.xmbt007,g_xmbt_m.xmbt006,g_xmbt_m.xmbtownid,g_xmbt_m.xmbtownid_desc, 
       g_xmbt_m.xmbtowndp,g_xmbt_m.xmbtowndp_desc,g_xmbt_m.xmbtcrtid,g_xmbt_m.xmbtcrtid_desc,g_xmbt_m.xmbtcrtdp, 
       g_xmbt_m.xmbtcrtdp_desc,g_xmbt_m.xmbtcrtdt,g_xmbt_m.xmbtmodid,g_xmbt_m.xmbtmodid_desc,g_xmbt_m.xmbtmoddt, 
       g_xmbt_m.xmbtcnfid,g_xmbt_m.xmbtcnfid_desc,g_xmbt_m.xmbtcnfdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_xmbt_m.xmbtstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_xmbu_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
#      CALL axmt128_xmbu011_desc()
       CALL s_feature_description(g_xmbu_d[l_ac].xmbu011,g_xmbu_d[l_ac].xmbu012) RETURNING g_success,g_xmbu_d[l_ac].xmbu012_desc
#      CALL axmt128_xmbu013_desc()
#      CALL axmt128_xmbu014_desc()
#      CALL axmt128_xmbu015_desc()
#      CALL axmt128_xmbu016_desc()
#      CALL axmt128_xmbu017_desc()
#      CALL axmt128_xmbu018_desc()
       CALL axmt128_xmbu019_desc()
#      CALL axmt128_xmbu020_desc()
#      CALL axmt128_xmbu021_desc()

      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other name="show.other"
                                    
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL axmt128_detail_show()
 
   #add-point:show段之後 name="show.after"
                                    
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="axmt128.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION axmt128_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
                                    
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
                                    
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
                                    
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="axmt128.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION axmt128_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   
   #end add-point   
   DEFINE l_newno     LIKE xmbt_t.xmbtdocno 
   DEFINE l_oldno     LIKE xmbt_t.xmbtdocno 
 
   DEFINE l_master    RECORD LIKE xmbt_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE xmbu_t.* #此變數樣板目前無使用
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
                                    
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_xmbt_m.xmbtdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_xmbtdocno_t = g_xmbt_m.xmbtdocno
 
    
   LET g_xmbt_m.xmbtdocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_xmbt_m.xmbtownid = g_user
      LET g_xmbt_m.xmbtowndp = g_dept
      LET g_xmbt_m.xmbtcrtid = g_user
      LET g_xmbt_m.xmbtcrtdp = g_dept 
      LET g_xmbt_m.xmbtcrtdt = cl_get_current()
      LET g_xmbt_m.xmbtmodid = g_user
      LET g_xmbt_m.xmbtmoddt = cl_get_current()
      LET g_xmbt_m.xmbtstus = 'N'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
                                       LET g_xmbt_m.xmbtstus = "N"
   LET g_xmbt_m.xmbtdocdt = g_today
   LET g_xmbt_m_t.* = g_xmbt_m.*   
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_xmbt_m.xmbtstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
      LET g_xmbt_m.xmbtdocno_desc = ''
   DISPLAY BY NAME g_xmbt_m.xmbtdocno_desc
 
   
   CALL axmt128_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_xmbt_m.* TO NULL
      INITIALIZE g_xmbu_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      
      #end add-point
      CALL axmt128_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt128_set_act_visible()   
   CALL axmt128_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_xmbtdocno_t = g_xmbt_m.xmbtdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " xmbtent = " ||g_enterprise|| " AND",
                      " xmbtdocno = '", g_xmbt_m.xmbtdocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axmt128_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
                                    
   #end add-point
   
   CALL axmt128_idx_chk()
   
   LET g_data_owner = g_xmbt_m.xmbtownid      
   LET g_data_dept  = g_xmbt_m.xmbtowndp
   
   #功能已完成,通報訊息中心
   CALL axmt128_msgcentre_notify('reproduce')
 
END FUNCTION
 
{</section>}
 
{<section id="axmt128.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION axmt128_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE xmbu_t.* #此變數樣板目前無使用
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
                                 DEFINE l_xmbu      RECORD LIKE xmbu_t.*
   DEFINE l_flag      LIKE type_t.chr1      
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE axmt128_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
                                    
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xmbu_t
    WHERE xmbuent = g_enterprise AND xmbudocno = g_xmbtdocno_t
 
    INTO TEMP axmt128_detail
 
   #將key修正為調整後   
   UPDATE axmt128_detail 
      #更新key欄位
      SET xmbudocno = g_xmbt_m.xmbtdocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO xmbu_t SELECT * FROM axmt128_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
                                    
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmt128_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
                                 DECLARE sel_xmbu_curs2 CURSOR FOR 
    SELECT * FROM xmbu_t WHERE xmbuent = g_enterprise
       AND xmbudocno = g_xmbt_m.xmbtdocno
   FOREACH sel_xmbu_curs2 INTO l_xmbu.*
      IF axmt128_set_xmbu010_reproduce(l_xmbu.*) THEN
         LET l_flag = 'U'
      ELSE   
         LET l_flag = 'I'
      END IF
      UPDATE xmbu_t SET xmbu010 = l_flag
                  WHERE xmbuent = g_enterprise
                    AND xmbudocno = g_xmbt_m.xmbtdocno 
                    AND xmbu011 = l_xmbu.xmbu011
                    AND xmbu012 = l_xmbu.xmbu012 AND xmbu013 = l_xmbu.xmbu013
                    AND xmbu014 = l_xmbu.xmbu014 AND xmbu015 = l_xmbu.xmbu015
                    AND xmbu016 = l_xmbu.xmbu016 AND xmbu017 = l_xmbu.xmbu017
                    AND xmbu018 = l_xmbu.xmbu018 AND xmbu019 = l_xmbu.xmbu019
                    AND xmbu020 = l_xmbu.xmbu020 AND xmbu021 = l_xmbu.xmbu021
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "reproduce"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN
      END IF
   END FOREACH      
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_xmbtdocno_t = g_xmbt_m.xmbtdocno
 
   
END FUNCTION
 
{</section>}
 
{<section id="axmt128.delete" >}
#+ 資料刪除
PRIVATE FUNCTION axmt128_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
                                    
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_xmbt_m.xmbtdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN axmt128_cl USING g_enterprise,g_xmbt_m.xmbtdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axmt128_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE axmt128_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axmt128_master_referesh USING g_xmbt_m.xmbtdocno INTO g_xmbt_m.xmbtdocno,g_xmbt_m.xmbtdocdt, 
       g_xmbt_m.xmbt900,g_xmbt_m.xmbt901,g_xmbt_m.xmbtstus,g_xmbt_m.xmbt001,g_xmbt_m.xmbt002,g_xmbt_m.xmbt003, 
       g_xmbt_m.xmbt005,g_xmbt_m.xmbt007,g_xmbt_m.xmbt006,g_xmbt_m.xmbtownid,g_xmbt_m.xmbtowndp,g_xmbt_m.xmbtcrtid, 
       g_xmbt_m.xmbtcrtdp,g_xmbt_m.xmbtcrtdt,g_xmbt_m.xmbtmodid,g_xmbt_m.xmbtmoddt,g_xmbt_m.xmbtcnfid, 
       g_xmbt_m.xmbtcnfdt,g_xmbt_m.xmbt900_desc,g_xmbt_m.xmbt901_desc,g_xmbt_m.xmbt001_desc,g_xmbt_m.xmbt002_desc, 
       g_xmbt_m.xmbt003_desc,g_xmbt_m.xmbt005_desc,g_xmbt_m.xmbtownid_desc,g_xmbt_m.xmbtowndp_desc,g_xmbt_m.xmbtcrtid_desc, 
       g_xmbt_m.xmbtcrtdp_desc,g_xmbt_m.xmbtmodid_desc,g_xmbt_m.xmbtcnfid_desc
   
   
   #檢查是否允許此動作
   IF NOT axmt128_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_xmbt_m_mask_o.* =  g_xmbt_m.*
   CALL axmt128_xmbt_t_mask()
   LET g_xmbt_m_mask_n.* =  g_xmbt_m.*
   
   CALL axmt128_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
                                                                        
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL axmt128_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_xmbtdocno_t = g_xmbt_m.xmbtdocno
 
 
      DELETE FROM xmbt_t
       WHERE xmbtent = g_enterprise AND xmbtdocno = g_xmbt_m.xmbtdocno
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
                                                                        
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_xmbt_m.xmbtdocno,":",SQLERRMESSAGE  
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      IF NOT s_aooi200_del_docno(g_xmbt_m.xmbtdocno,g_xmbt_m.xmbtdocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      IF NOT s_aooi360_del('6','axmt128',g_xmbt_m.xmbtdocno,'','','','','','','','','4') THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
                                                                        
      #end add-point
      
      DELETE FROM xmbu_t
       WHERE xmbuent = g_enterprise AND xmbudocno = g_xmbt_m.xmbtdocno
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
                                                                        
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmbu_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
                                                                        
      #end add-point
      
            
                                                               
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE axmt128_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_xmbu_d.clear() 
 
     
      CALL axmt128_ui_browser_refresh()  
      #CALL axmt128_ui_headershow()  
      #CALL axmt128_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL axmt128_browser_fill("")
         CALL axmt128_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE axmt128_cl
 
   #功能已完成,通報訊息中心
   CALL axmt128_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="axmt128.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION axmt128_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
                                    
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #清空第一階單身
   CALL g_xmbu_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
                                    
   #end add-point
   
   #判斷是否填充
   IF axmt128_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT xmbu010,xmbu011,xmbu012,xmbu031,xmbu032,xmbu013,xmbu014,xmbu015, 
             xmbu016,xmbu017,xmbu018,xmbu019,xmbu020,xmbu021,xmbu022 ,t1.imaal003 ,t2.imaal004 ,t3.oocql004 , 
             t4.rtaxl003 ,t5.oocel003 ,t6.oocgl003 ,t7.oocil004 ,t8.oocql004 ,t9.oocql004 ,t10.oocal003 , 
             t11.ooibl004 ,t12.oocql004 FROM xmbu_t",   
                     " INNER JOIN xmbt_t ON xmbtent = " ||g_enterprise|| " AND xmbtdocno = xmbudocno ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
 
                                    " LEFT JOIN imaal_t t1 ON t1.imaalent="||g_enterprise||" AND t1.imaal001=xmbu011 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t2 ON t2.imaalent="||g_enterprise||" AND t2.imaal001=xmbu011 AND t2.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t3 ON t3.oocqlent="||g_enterprise||" AND t3.oocql001='2003' AND t3.oocql002=xmbu031 AND t3.oocql003='"||g_dlang||"' ",
               " LEFT JOIN rtaxl_t t4 ON t4.rtaxlent="||g_enterprise||" AND t4.rtaxl001=xmbu032 AND t4.rtaxl002='"||g_dlang||"' ",
               " LEFT JOIN oocel_t t5 ON t5.oocelent="||g_enterprise||" AND t5.oocel001=xmbu013 AND t5.oocel002='"||g_dlang||"' ",
               " LEFT JOIN oocgl_t t6 ON t6.oocglent="||g_enterprise||" AND t6.oocgl001=xmbu014 AND t6.oocgl002='"||g_dlang||"' ",
               " LEFT JOIN oocil_t t7 ON t7.oocilent="||g_enterprise||" AND t7.oocil001=xmbu014 AND t7.oocil002=xmbu015 AND t7.oocil003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t8 ON t8.oocqlent="||g_enterprise||" AND t8.oocql001='253' AND t8.oocql002=xmbu016 AND t8.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t9 ON t9.oocqlent="||g_enterprise||" AND t9.oocql001='281' AND t9.oocql002=xmbu017 AND t9.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t10 ON t10.oocalent="||g_enterprise||" AND t10.oocal001=xmbu018 AND t10.oocal002='"||g_dlang||"' ",
               " LEFT JOIN ooibl_t t11 ON t11.ooiblent="||g_enterprise||" AND t11.ooibl002=xmbu020 AND t11.ooibl003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t12 ON t12.oocqlent="||g_enterprise||" AND t12.oocql001='238' AND t12.oocql002=xmbu021 AND t12.oocql003='"||g_dlang||"' ",
 
                     " WHERE xmbuent=? AND xmbudocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
                                                                        
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xmbu_t.xmbu011,xmbu_t.xmbu012,xmbu_t.xmbu013,xmbu_t.xmbu014,xmbu_t.xmbu015,xmbu_t.xmbu016,xmbu_t.xmbu017,xmbu_t.xmbu018,xmbu_t.xmbu019,xmbu_t.xmbu020,xmbu_t.xmbu021,xmbu_t.xmbu031,xmbu_t.xmbu032"
         
         #add-point:單身填充控制 name="b_fill.sql"
                                                                        
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axmt128_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR axmt128_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_xmbt_m.xmbtdocno
                                               
      FOREACH b_fill_cs INTO g_xmbu_d[l_ac].xmbu010,g_xmbu_d[l_ac].xmbu011,g_xmbu_d[l_ac].xmbu012,g_xmbu_d[l_ac].xmbu031, 
          g_xmbu_d[l_ac].xmbu032,g_xmbu_d[l_ac].xmbu013,g_xmbu_d[l_ac].xmbu014,g_xmbu_d[l_ac].xmbu015, 
          g_xmbu_d[l_ac].xmbu016,g_xmbu_d[l_ac].xmbu017,g_xmbu_d[l_ac].xmbu018,g_xmbu_d[l_ac].xmbu019, 
          g_xmbu_d[l_ac].xmbu020,g_xmbu_d[l_ac].xmbu021,g_xmbu_d[l_ac].xmbu022,g_xmbu_d[l_ac].xmbu011_desc, 
          g_xmbu_d[l_ac].xmbu011_desc_desc,g_xmbu_d[l_ac].xmbu031_desc,g_xmbu_d[l_ac].xmbu032_desc,g_xmbu_d[l_ac].xmbu013_desc, 
          g_xmbu_d[l_ac].xmbu014_desc,g_xmbu_d[l_ac].xmbu015_desc,g_xmbu_d[l_ac].xmbu016_desc,g_xmbu_d[l_ac].xmbu017_desc, 
          g_xmbu_d[l_ac].xmbu018_desc,g_xmbu_d[l_ac].xmbu020_desc,g_xmbu_d[l_ac].xmbu021_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
                                                                                                            
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
                                    
   #end add-point
   
   CALL g_xmbu_d.deleteElement(g_xmbu_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE axmt128_pb
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_xmbu_d.getLength()
      LET g_xmbu_d_mask_o[l_ac].* =  g_xmbu_d[l_ac].*
      CALL axmt128_xmbu_t_mask()
      LET g_xmbu_d_mask_n[l_ac].* =  g_xmbu_d[l_ac].*
   END FOR
   
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
 
{</section>}
 
{<section id="axmt128.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION axmt128_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
                                    
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
                                                                        
      #end add-point    
      DELETE FROM xmbu_t
       WHERE xmbuent = g_enterprise AND
         xmbudocno = ps_keys_bak[1] AND xmbu011 = ps_keys_bak[2] AND xmbu012 = ps_keys_bak[3] AND xmbu013 = ps_keys_bak[4] AND xmbu014 = ps_keys_bak[5] AND xmbu015 = ps_keys_bak[6] AND xmbu016 = ps_keys_bak[7] AND xmbu017 = ps_keys_bak[8] AND xmbu018 = ps_keys_bak[9] AND xmbu019 = ps_keys_bak[10] AND xmbu020 = ps_keys_bak[11] AND xmbu021 = ps_keys_bak[12] AND xmbu031 = ps_keys_bak[13] AND xmbu032 = ps_keys_bak[14]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
                                                                        
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_xmbu_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
 
   
 
   
   #add-point:delete_b段other name="delete_b.other"
                                    
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="axmt128.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION axmt128_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   DEFINE l_success   LIKE type_t.num5
   DEFINE l_chk       LIKE type_t.num5 
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      CALL axmt128_xmau_chk() RETURNING l_success
      IF l_success = TRUE THEN 
         LET g_xmbu_d[l_ac].xmbu010 = 'U'
      ELSE
         LET g_xmbu_d[l_ac].xmbu010 = 'I'              
      END IF
      #2015-06-05---dorislai----add
      #----塞資料----
      LET l_chk = FALSE #預設FALSE,假設尚未進行塞資料動作；若TRUE，表示已有給資料，後面欄位無需再進入
      CASE g_column_chk            #給key欄位值，避免發生新增錯誤狀況
         WHEN 0   #無隱藏欄位
            IF cl_null(g_xmbu_d[l_ac].xmbu011) = 0 AND l_chk = 0 THEN
               LET ps_keys[13] = ' '
               LET ps_keys[14] = ' '
               LET l_chk = TRUE  
            END IF
            IF cl_null(g_xmbu_d[l_ac].xmbu031) = 0 AND l_chk = 0  THEN
               LET ps_keys[2]  = ' '
               LET ps_keys[14] = ' '
               LET l_chk = TRUE  
            END IF
            IF cl_null(g_xmbu_d[l_ac].xmbu032)  = 0 AND l_chk = 0 THEN
               LET ps_keys[2]  = ' '
               LET ps_keys[13] = ' '
               LET l_chk = TRUE  
            END IF
         #有隱藏的欄位，顯現的欄位，一欄位有值，表示另一欄位為無值   
         WHEN 1   #料件編號隱藏
            LET ps_keys[2] = ' '
            IF cl_null(g_xmbu_d[l_ac].xmbu031) AND l_chk = 0 THEN  
               LET ps_keys[13] = ' '
            ELSE
               LET ps_keys[14] = ' '
            END IF
         WHEN 2   #系列隱藏
            LET ps_keys[13] = ' '
            IF cl_null(g_xmbu_d[l_ac].xmbu011) AND l_chk = 0 THEN
               LET ps_keys[2] = ' '
            ELSE
               LET ps_keys[14] = ' '
            END IF
         WHEN 3   #產品分類隱藏
            LET ps_keys[14] = ' '
            IF cl_null(g_xmbu_d[l_ac].xmbu031) AND l_chk = 0 THEN
               LET ps_keys[13] = ' '
            ELSE
               LET ps_keys[2] = ' '
            END IF
            
      END CASE
      #----塞資料----
      #2015-06-05----dorislai----end

      #end add-point 
      INSERT INTO xmbu_t
                  (xmbuent,
                   xmbudocno,
                   xmbu011,xmbu012,xmbu013,xmbu014,xmbu015,xmbu016,xmbu017,xmbu018,xmbu019,xmbu020,xmbu021,xmbu031,xmbu032
                   ,xmbu010,xmbu022) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5],ps_keys[6],ps_keys[7],ps_keys[8],ps_keys[9],ps_keys[10],ps_keys[11],ps_keys[12],ps_keys[13],ps_keys[14]
                   ,g_xmbu_d[g_detail_idx].xmbu010,g_xmbu_d[g_detail_idx].xmbu022)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
                                                                        
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmbu_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_xmbu_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
                                                                        
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other name="insert_b.other"
                                    
   #end add-point     
   
END FUNCTION
 
{</section>}
 
{<section id="axmt128.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION axmt128_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
                                    
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmbu_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
                                                                    
      #end add-point 
      
      #將遮罩欄位還原
      CALL axmt128_xmbu_t_mask_restore('restore_mask_o')
               
      UPDATE xmbu_t 
         SET (xmbudocno,
              xmbu011,xmbu012,xmbu013,xmbu014,xmbu015,xmbu016,xmbu017,xmbu018,xmbu019,xmbu020,xmbu021,xmbu031,xmbu032
              ,xmbu010,xmbu022) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5],ps_keys[6],ps_keys[7],ps_keys[8],ps_keys[9],ps_keys[10],ps_keys[11],ps_keys[12],ps_keys[13],ps_keys[14]
              ,g_xmbu_d[g_detail_idx].xmbu010,g_xmbu_d[g_detail_idx].xmbu022) 
         WHERE xmbuent = g_enterprise AND xmbudocno = ps_keys_bak[1] AND xmbu011 = ps_keys_bak[2] AND xmbu012 = ps_keys_bak[3] AND xmbu013 = ps_keys_bak[4] AND xmbu014 = ps_keys_bak[5] AND xmbu015 = ps_keys_bak[6] AND xmbu016 = ps_keys_bak[7] AND xmbu017 = ps_keys_bak[8] AND xmbu018 = ps_keys_bak[9] AND xmbu019 = ps_keys_bak[10] AND xmbu020 = ps_keys_bak[11] AND xmbu021 = ps_keys_bak[12] AND xmbu031 = ps_keys_bak[13] AND xmbu032 = ps_keys_bak[14]
      #add-point:update_b段修改中 name="update_b.m_update"
                                                                        
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmbu_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmbu_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL axmt128_xmbu_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
                                                                        
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
 
   
 
   
   #add-point:update_b段other name="update_b.other"
                                    
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axmt128.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION axmt128_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="axmt128.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION axmt128_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="axmt128.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION axmt128_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
                                    
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
    
   #先刷新資料
   #CALL axmt128_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "xmbu_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN axmt128_bcl USING g_enterprise,
                                       g_xmbt_m.xmbtdocno,g_xmbu_d[g_detail_idx].xmbu011,g_xmbu_d[g_detail_idx].xmbu012, 
                                           g_xmbu_d[g_detail_idx].xmbu013,g_xmbu_d[g_detail_idx].xmbu014, 
                                           g_xmbu_d[g_detail_idx].xmbu015,g_xmbu_d[g_detail_idx].xmbu016, 
                                           g_xmbu_d[g_detail_idx].xmbu017,g_xmbu_d[g_detail_idx].xmbu018, 
                                           g_xmbu_d[g_detail_idx].xmbu019,g_xmbu_d[g_detail_idx].xmbu020, 
                                           g_xmbu_d[g_detail_idx].xmbu021,g_xmbu_d[g_detail_idx].xmbu031, 
                                           g_xmbu_d[g_detail_idx].xmbu032     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "axmt128_bcl:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other name="lock_b.other"
                                    
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axmt128.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION axmt128_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
                                    
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmt128_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other name="unlock_b.other"
                                    
   #end add-point  
 
END FUNCTION
 
{</section>}
 
{<section id="axmt128.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION axmt128_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
                                    
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   CALL cl_set_comp_entry("xmbtdocno",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("xmbtdocno",TRUE)
      CALL cl_set_comp_entry("xmbtdocdt",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      CALL cl_set_comp_entry("xmbtdocdt",TRUE)                                                                  
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   CALL cl_set_comp_entry("xmbt001,xmbt002,xmbt003,xmbt005",TRUE)
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="axmt128.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION axmt128_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
                                    
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("xmbtdocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      CALL cl_set_comp_entry("xmbtdocdt",FALSE)
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("xmbtdocno",FALSE)
   END IF 
 
   IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("xmbtdocdt",FALSE)
      END IF
   END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   IF axmt128_xmbu_count() THEN 
      CALL cl_set_comp_entry("xmbt001,xmbt002,xmbt003,xmbt005",FALSE)
   END IF
   
   CALL cl_set_comp_entry("xmbt001",FALSE)   #2015/07/16 by stellar add
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="axmt128.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION axmt128_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
                                    
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
                                       CALL cl_set_comp_entry("xmbu012",TRUE)
   #end add-point  
END FUNCTION
 
{</section>}
 
{<section id="axmt128.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION axmt128_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
                                    
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   IF NOT axmt128_imaa005_exists() THEN
      CALL cl_set_comp_entry("xmbu012",FALSE)
      #dorislai-20150629-mark----(S)
      #現在產品分類必輸，所以不用給空白
#      LET g_xmbu_d[l_ac].xmbu012 = ' '
#      LET g_xmbu_d[l_ac].xmbu012_desc = ' '
#      DISPLAY BY NAME g_xmbu_d[l_ac].xmbu012,g_xmbu_d[l_ac].xmbu012_desc
      #dorislai-20150629-mark----(E)
   END IF
   #end add-point     
END FUNCTION
 
{</section>}
 
{<section id="axmt128.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION axmt128_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="axmt128.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION axmt128_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   IF g_xmbt_m.xmbtstus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="axmt128.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION axmt128_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="axmt128.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION axmt128_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="axmt128.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION axmt128_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
                                    
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
                                    
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " xmbtdocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "xmbt_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "xmbu_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
                                    
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
 
{</section>}
 
{<section id="axmt128.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION axmt128_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   DEFINE l_xmbu   RECORD LIKE xmbu_t.*      
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
                                    
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_xmbt_m.xmbtdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN axmt128_cl USING g_enterprise,g_xmbt_m.xmbtdocno
   IF STATUS THEN
      CLOSE axmt128_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axmt128_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE axmt128_master_referesh USING g_xmbt_m.xmbtdocno INTO g_xmbt_m.xmbtdocno,g_xmbt_m.xmbtdocdt, 
       g_xmbt_m.xmbt900,g_xmbt_m.xmbt901,g_xmbt_m.xmbtstus,g_xmbt_m.xmbt001,g_xmbt_m.xmbt002,g_xmbt_m.xmbt003, 
       g_xmbt_m.xmbt005,g_xmbt_m.xmbt007,g_xmbt_m.xmbt006,g_xmbt_m.xmbtownid,g_xmbt_m.xmbtowndp,g_xmbt_m.xmbtcrtid, 
       g_xmbt_m.xmbtcrtdp,g_xmbt_m.xmbtcrtdt,g_xmbt_m.xmbtmodid,g_xmbt_m.xmbtmoddt,g_xmbt_m.xmbtcnfid, 
       g_xmbt_m.xmbtcnfdt,g_xmbt_m.xmbt900_desc,g_xmbt_m.xmbt901_desc,g_xmbt_m.xmbt001_desc,g_xmbt_m.xmbt002_desc, 
       g_xmbt_m.xmbt003_desc,g_xmbt_m.xmbt005_desc,g_xmbt_m.xmbtownid_desc,g_xmbt_m.xmbtowndp_desc,g_xmbt_m.xmbtcrtid_desc, 
       g_xmbt_m.xmbtcrtdp_desc,g_xmbt_m.xmbtmodid_desc,g_xmbt_m.xmbtcnfid_desc
   
 
   #檢查是否允許此動作
   IF NOT axmt128_action_chk() THEN
      CLOSE axmt128_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_xmbt_m.xmbtdocno,g_xmbt_m.xmbtdocno_desc,g_xmbt_m.xmbtdocdt,g_xmbt_m.xmbt900,g_xmbt_m.xmbt900_desc, 
       g_xmbt_m.xmbt901,g_xmbt_m.xmbt901_desc,g_xmbt_m.xmbtstus,g_xmbt_m.xmbt001,g_xmbt_m.xmbt001_desc, 
       g_xmbt_m.xmbt002,g_xmbt_m.xmbt002_desc,g_xmbt_m.xmbt003,g_xmbt_m.xmbt003_desc,g_xmbt_m.xmbt005, 
       g_xmbt_m.xmbt005_desc,g_xmbt_m.xmbt007,g_xmbt_m.xmbt006,g_xmbt_m.xmbtownid,g_xmbt_m.xmbtownid_desc, 
       g_xmbt_m.xmbtowndp,g_xmbt_m.xmbtowndp_desc,g_xmbt_m.xmbtcrtid,g_xmbt_m.xmbtcrtid_desc,g_xmbt_m.xmbtcrtdp, 
       g_xmbt_m.xmbtcrtdp_desc,g_xmbt_m.xmbtcrtdt,g_xmbt_m.xmbtmodid,g_xmbt_m.xmbtmodid_desc,g_xmbt_m.xmbtmoddt, 
       g_xmbt_m.xmbtcnfid,g_xmbt_m.xmbtcnfid_desc,g_xmbt_m.xmbtcnfdt
 
   CASE g_xmbt_m.xmbtstus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_xmbt_m.xmbtstus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
#      CASE g_xmbt_m.xmbtstus
#         WHEN "N"
#            HIDE OPTION "open"
#         WHEN "X"
#            HIDE OPTION "invalid"
#            HIDE OPTION "confirmed"
#         WHEN "Y"
#            HIDE OPTION "confirmed"
#            HIDE OPTION "invalid"
#            HIDE OPTION "open"
#            RETURN
#      END CASE      
      CALL cl_set_act_visible("signing,withdraw",FALSE)
      CALL cl_set_act_visible("unconfirmed,invalid,confirmed",TRUE)
      CALL cl_set_act_visible("closed",FALSE)

      CASE g_xmbt_m.xmbtstus
         WHEN "N"  
            CALL cl_set_act_visible("unconfirmed,hold",FALSE)
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            IF cl_bpm_chk() THEN
                CALL cl_set_act_visible("signing",TRUE)
                CALL cl_set_act_visible("confirmed",FALSE)
            END IF
 
         WHEN "R"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE)

         WHEN "D"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE) 
          
         WHEN "X"
            EXIT MENU
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold",FALSE)

         WHEN "Y"
            EXIT MENU
            CALL cl_set_act_visible("invalid,confirmed,hold",FALSE)
         
         WHEN "W"    #只能顯示抽單;其餘應用功能皆隱藏
             CALL cl_set_act_visible("withdraw",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold",FALSE)
         
         WHEN "A"     #只能顯示確認; 其餘應用功能皆隱藏
             CALL cl_set_act_visible("confirmed ",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,hold",FALSE)

      END CASE

      #end add-point
      
      #應用 a36 樣板自動產生(Version:5)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT axmt128_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE axmt128_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT axmt128_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE axmt128_cl
            RETURN
         END IF
 
 
 
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.unconfirmed"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.confirmed"
            IF NOT s_axmt128_conf_chk(g_xmbt_m.xmbtdocno,g_xmbt_m.xmbtstus) THEN 
               LET lc_state = ''
            END IF
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制 name="statechange.approved"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制 name="statechange.withdraw"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制 name="statechange.rejection"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制 name="statechange.signing"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.invalid"
                                                                                                                     IF NOT s_axmt128_void_chk(g_xmbt_m.xmbtdocno,g_xmbt_m.xmbtstus) THEN 
            LET lc_state = ''
         END IF
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
                                                                        
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "X"
      ) OR 
      g_xmbt_m.xmbtstus = lc_state OR cl_null(lc_state) THEN
      CLOSE axmt128_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   CALL s_transaction_begin()
   IF lc_state = "N" THEN 
      IF NOT s_axmt128_unvoid_upd(g_xmbt_m.xmbtdocno) THEN 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
   END IF
   IF lc_state = "Y" THEN 
      DECLARE sel_xmbu_curs CURSOR FOR 
       SELECT * FROM xmbu_t WHERE xmbuent = g_enterprise
          AND xmbudocno = g_xmbt_m.xmbtdocno
      FOREACH sel_xmbu_curs INTO l_xmbu.*
         IF NOT axmt128_xmau_exists(l_xmbu.*) THEN
            CALL s_transaction_end('N','0')
            RETURN 
         END IF
      END FOREACH
      
      IF NOT s_axmt128_conf_upd(g_xmbt_m.xmbtdocno) THEN 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
   END IF
   IF lc_state = "X" THEN 
      #151125-00001#4 --- add start ---
      IF NOT cl_ask_confirm('aim-00109') THEN
         CALL s_transaction_end('N','0')
         RETURN
      ELSE   
      #151125-00001#4 --- add end   ---
         IF NOT s_axmt128_void_upd(g_xmbt_m.xmbtdocno) THEN 
            CALL s_transaction_end('N','0')
            RETURN
         END IF
      END IF    #151125-00001#4 add
   END IF   
   #end add-point
   
   LET g_xmbt_m.xmbtmodid = g_user
   LET g_xmbt_m.xmbtmoddt = cl_get_current()
   LET g_xmbt_m.xmbtstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE xmbt_t 
      SET (xmbtstus,xmbtmodid,xmbtmoddt) 
        = (g_xmbt_m.xmbtstus,g_xmbt_m.xmbtmodid,g_xmbt_m.xmbtmoddt)     
    WHERE xmbtent = g_enterprise AND xmbtdocno = g_xmbt_m.xmbtdocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE axmt128_master_referesh USING g_xmbt_m.xmbtdocno INTO g_xmbt_m.xmbtdocno,g_xmbt_m.xmbtdocdt, 
          g_xmbt_m.xmbt900,g_xmbt_m.xmbt901,g_xmbt_m.xmbtstus,g_xmbt_m.xmbt001,g_xmbt_m.xmbt002,g_xmbt_m.xmbt003, 
          g_xmbt_m.xmbt005,g_xmbt_m.xmbt007,g_xmbt_m.xmbt006,g_xmbt_m.xmbtownid,g_xmbt_m.xmbtowndp,g_xmbt_m.xmbtcrtid, 
          g_xmbt_m.xmbtcrtdp,g_xmbt_m.xmbtcrtdt,g_xmbt_m.xmbtmodid,g_xmbt_m.xmbtmoddt,g_xmbt_m.xmbtcnfid, 
          g_xmbt_m.xmbtcnfdt,g_xmbt_m.xmbt900_desc,g_xmbt_m.xmbt901_desc,g_xmbt_m.xmbt001_desc,g_xmbt_m.xmbt002_desc, 
          g_xmbt_m.xmbt003_desc,g_xmbt_m.xmbt005_desc,g_xmbt_m.xmbtownid_desc,g_xmbt_m.xmbtowndp_desc, 
          g_xmbt_m.xmbtcrtid_desc,g_xmbt_m.xmbtcrtdp_desc,g_xmbt_m.xmbtmodid_desc,g_xmbt_m.xmbtcnfid_desc 
 
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_xmbt_m.xmbtdocno,g_xmbt_m.xmbtdocno_desc,g_xmbt_m.xmbtdocdt,g_xmbt_m.xmbt900, 
          g_xmbt_m.xmbt900_desc,g_xmbt_m.xmbt901,g_xmbt_m.xmbt901_desc,g_xmbt_m.xmbtstus,g_xmbt_m.xmbt001, 
          g_xmbt_m.xmbt001_desc,g_xmbt_m.xmbt002,g_xmbt_m.xmbt002_desc,g_xmbt_m.xmbt003,g_xmbt_m.xmbt003_desc, 
          g_xmbt_m.xmbt005,g_xmbt_m.xmbt005_desc,g_xmbt_m.xmbt007,g_xmbt_m.xmbt006,g_xmbt_m.xmbtownid, 
          g_xmbt_m.xmbtownid_desc,g_xmbt_m.xmbtowndp,g_xmbt_m.xmbtowndp_desc,g_xmbt_m.xmbtcrtid,g_xmbt_m.xmbtcrtid_desc, 
          g_xmbt_m.xmbtcrtdp,g_xmbt_m.xmbtcrtdp_desc,g_xmbt_m.xmbtcrtdt,g_xmbt_m.xmbtmodid,g_xmbt_m.xmbtmodid_desc, 
          g_xmbt_m.xmbtmoddt,g_xmbt_m.xmbtcnfid,g_xmbt_m.xmbtcnfid_desc,g_xmbt_m.xmbtcnfdt
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
                                       CALL s_transaction_end('Y','0')
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
                                    
   #end add-point  
 
   CLOSE axmt128_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL axmt128_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axmt128.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION axmt128_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
                                    
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_xmbu_d.getLength() THEN
         LET g_detail_idx = g_xmbu_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmbu_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmbu_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other name="idx_chk.other"
                                    
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axmt128.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION axmt128_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
                                    
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
                                    
   #end add-point
    
   LET l_ac = li_ac
   
   CALL axmt128_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
 
{</section>}
 
{<section id="axmt128.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION axmt128_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
                                    
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
                                                                        
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axmt128.status_show" >}
PRIVATE FUNCTION axmt128_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="axmt128.mask_functions" >}
&include "erp/axm/axmt128_mask.4gl"
 
{</section>}
 
{<section id="axmt128.signature" >}
   #應用 a39 樣板自動產生(Version:10)
#+ BPM提交
PRIVATE FUNCTION axmt128_send()
   #add-point:send段define(客製用) name="send.define_customerization"
   
   #end add-point 
   #add-point:send段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="send.define"
   DEFINE l_xmbu   RECORD LIKE xmbu_t.*
   #end add-point 
   
   #add-point:Function前置處理  name="send.pre_function"
   
   #end add-point
   
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
 
 
   CALL axmt128_show()
   CALL axmt128_set_pk_array()
   
   #add-point: 初始化的ADP name="send.before_send"
   IF NOT s_axmt128_conf_chk(g_xmbt_m.xmbtdocno,g_xmbt_m.xmbtstus) THEN 
      RETURN FALSE
   END IF
   DECLARE sel_xmbu_curs3 CURSOR FOR 
    SELECT * FROM xmbu_t WHERE xmbuent = g_enterprise
       AND xmbudocno = g_xmbt_m.xmbtdocno
   FOREACH sel_xmbu_curs3 INTO l_xmbu.*
      IF NOT axmt128_xmau_exists(l_xmbu.*) THEN
         RETURN FALSE
      END IF
   END FOREACH   
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_xmbt_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_xmbu_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP name="send.before_cli"
   
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP name="send.after_send"
   
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL axmt128_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL axmt128_ui_headershow()
   CALL axmt128_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
#應用 a40 樣板自動產生(Version:9)
#+ BPM抽單
PRIVATE FUNCTION axmt128_draw_out()
   #add-point:draw段define name="draw.define_customerization"
   
   #end add-point
   #add-point:draw段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="draw.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="draw.pre_function"
   
   #end add-point
   
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_idx].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL axmt128_ui_headershow()  
   CALL axmt128_ui_detailshow()
 
   #add-point:Function後置處理  name="draw.after_function"
   
   #end add-point
 
   RETURN TRUE
   
END FUNCTION
 
 
 
 
 
{</section>}
 
{<section id="axmt128.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION axmt128_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_xmbt_m.xmbtdocno
   LET g_pk_array[1].column = 'xmbtdocno'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axmt128.other_dialog" readonly="Y" >}
   
 
{</section>}
 
{<section id="axmt128.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION axmt128_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL axmt128_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_xmbt_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axmt128.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION axmt128_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="axmt128.other_function" readonly="Y" >}

PRIVATE FUNCTION axmt128_xmbt900_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmbt_m.xmbt900
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_xmbt_m.xmbt900_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmbt_m.xmbt900_desc
END FUNCTION

PRIVATE FUNCTION axmt128_xmbt901_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmbt_m.xmbt901
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmbt_m.xmbt901_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmbt_m.xmbt901_desc
END FUNCTION

PRIVATE FUNCTION axmt128_xmbt001_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmbt_m.xmbt001
   CALL ap_ref_array2(g_ref_fields,"SELECT ooall004 FROM ooall_t WHERE ooallent='"||g_enterprise||"' AND ooall001='15' AND ooall002=? AND ooall003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmbt_m.xmbt001_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmbt_m.xmbt001_desc
END FUNCTION

PRIVATE FUNCTION axmt128_xmbt002_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmbt_m.xmbt002
   CALL ap_ref_array2(g_ref_fields,"SELECT oohal003 FROM oohal_t WHERE oohalent='"||g_enterprise||"' AND oohal001=? AND oohal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmbt_m.xmbt002_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmbt_m.xmbt002_desc
END FUNCTION

PRIVATE FUNCTION axmt128_xmbt003_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmbt_m.xmbt003
   CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmbt_m.xmbt003_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmbt_m.xmbt003_desc
END FUNCTION

PRIVATE FUNCTION axmt128_xmbt005_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmbt_m.xmbt005
   #160621-00003#3 20160627 modify by beckxie---S
   #CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='275' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   CALL ap_ref_array2(g_ref_fields,"SELECT oojdl003 FROM oojdl_t WHERE oojdlent='"||g_enterprise||"' AND oojdl001=? AND oojdl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   #160621-00003#3 20160627 modify by beckxie---E
   LET g_xmbt_m.xmbt005_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmbt_m.xmbt005_desc
END FUNCTION

PRIVATE FUNCTION axmt128_xmbtdocno_desc(p_flag,p_xmbtdocno)
DEFINE p_flag      LIKE type_t.chr1
DEFINE p_xmbtdocno LIKE xmbt_t.xmbtdocno
DEFINE l_ooba002   LIKE ooba_t.ooba002
DEFINE r_xmbtdocno_desc LIKE type_t.chr80

   IF p_flag = '2' THEN  
      Call s_aooi200_get_slip(p_xmbtdocno) returning g_success,l_ooba002
   ELSE
      LET l_ooba002 = p_xmbtdocno   
   END IF   
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = l_ooba002
   CALL ap_ref_array2(g_ref_fields,"SELECT oobxl003 FROM oobxl_t WHERE oobxlent='"||g_enterprise||"' AND oobxl001=? AND oobxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET r_xmbtdocno_desc = '', g_rtn_fields[1] , ''
   RETURN r_xmbtdocno_desc
END FUNCTION

PRIVATE FUNCTION axmt128_xmbu011_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmbu_d[l_ac].xmbu011
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmbu_d[l_ac].xmbu011_desc = '', g_rtn_fields[1] , ''
   LET g_xmbu_d[l_ac].xmbu011_desc_desc = '', g_rtn_fields[2] , ''
   DISPLAY BY NAME g_xmbu_d[l_ac].xmbu011_desc,g_xmbu_d[l_ac].xmbu011_desc_desc
END FUNCTION

PRIVATE FUNCTION axmt128_xmbu013_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmbu_d[l_ac].xmbu013
   CALL ap_ref_array2(g_ref_fields,"SELECT oocel003 FROM oocel_t WHERE oocelent='"||g_enterprise||"' AND oocel001=? AND oocel002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmbu_d[l_ac].xmbu013_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmbu_d[l_ac].xmbu013_desc
END FUNCTION

PRIVATE FUNCTION axmt128_xmbu014_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmbu_d[l_ac].xmbu014
   CALL ap_ref_array2(g_ref_fields,"SELECT oocgl003 FROM oocgl_t WHERE oocglent='"||g_enterprise||"' AND oocgl001=? AND oocgl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmbu_d[l_ac].xmbu014_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmbu_d[l_ac].xmbu014_desc
END FUNCTION

PRIVATE FUNCTION axmt128_xmbu015_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmbu_d[l_ac].xmbu014
   LET g_ref_fields[2] = g_xmbu_d[l_ac].xmbu015
   CALL ap_ref_array2(g_ref_fields,"SELECT oocil004 FROM oocil_t WHERE oocilent='"||g_enterprise||"' AND oocil001=? AND oocil002=? AND oocil003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmbu_d[l_ac].xmbu015_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmbu_d[l_ac].xmbu015_desc
END FUNCTION

PRIVATE FUNCTION axmt128_xmbu016_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmbu_d[l_ac].xmbu016
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='283' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmbu_d[l_ac].xmbu016_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmbu_d[l_ac].xmbu016_desc
END FUNCTION

PRIVATE FUNCTION axmt128_xmbu017_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmbu_d[l_ac].xmbu017
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='281' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmbu_d[l_ac].xmbu017_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmbu_d[l_ac].xmbu017_desc
END FUNCTION

PRIVATE FUNCTION axmt128_xmbu018_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmbu_d[l_ac].xmbu018
   CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmbu_d[l_ac].xmbu018_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmbu_d[l_ac].xmbu018_desc
END FUNCTION

PRIVATE FUNCTION axmt128_xmbu019_desc()
DEFINE l_ooef019 LIKE ooef_t.ooef019

   SELECT ooef019 INTO l_ooef019
     FROM ooef_t
    WHERE ooefent = g_enterprise
      AND ooef001 = 'ALL'
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmbu_d[l_ac].xmbu019
   CALL ap_ref_array2(g_ref_fields,"SELECT oodbl004 FROM oodbl_t WHERE oodblent='"||g_enterprise||"' AND oodbl001='"||l_ooef019||"' AND oodbl002=? AND oodbl003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmbu_d[l_ac].xmbu019_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmbu_d[l_ac].xmbu019_desc
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmbu_d[l_ac].xmbu019
   CALL ap_ref_array2(g_ref_fields,"SELECT oodb005 FROM oodb_t WHERE oodbent='"||g_enterprise||"' AND oodb001='"||l_ooef019||"' AND oodb002=? ","") RETURNING g_rtn_fields
   LET g_xmbu_d[l_ac].oodb005 = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmbu_d[l_ac].oodb005   
END FUNCTION

PRIVATE FUNCTION axmt128_xmbu020_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmbu_d[l_ac].xmbu020
   CALL ap_ref_array2(g_ref_fields,"SELECT ooibl004 FROM ooibl_t WHERE ooiblent='"||g_enterprise||"' AND ooibl002=? AND ooibl003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmbu_d[l_ac].xmbu020_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmbu_d[l_ac].xmbu020_desc
END FUNCTION

PRIVATE FUNCTION axmt128_xmbu021_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmbu_d[l_ac].xmbu021
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='238' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmbu_d[l_ac].xmbu021_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmbu_d[l_ac].xmbu021_desc
END FUNCTION

PRIVATE FUNCTION axmt128_xmbu011_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmbu_d[l_ac].xmbu011
   CALL ap_ref_array2(g_ref_fields,"SELECT imaf144 FROM imaf_t WHERE imafent='"||g_enterprise||"' AND imafsite='ALL' AND imaf001=? ","") RETURNING g_rtn_fields
   LET g_xmbu_d[l_ac].xmbu018 = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmbu_d[l_ac].xmbu018
   CALL axmt128_xmbu018_desc()
END FUNCTION

PRIVATE FUNCTION axmt128_imaa005_exists()
DEFINE l_imaa005  LIKE imaa_t.imaa005
   IF NOT cl_null(g_xmbu_d[l_ac].xmbu011) THEN
      SELECT imaa005 INTO l_imaa005 FROM imaa_t
       WHERE imaaent = g_enterprise AND imaa001 =  g_xmbu_d[l_ac].xmbu011
      IF cl_null(l_imaa005) THEN
         RETURN FALSE
      END IF
   ELSE
      RETURN FALSE
   END IF
   RETURN TRUE
END FUNCTION

PRIVATE FUNCTION axmt128_def_xmbt006()
DEFINE l_gzzz004 LIKE gzzz_t.gzzz004
DEFINE r_xmbt006 LIKE xmbt_t.xmbt006
   #IF g_prog = 'axmt128' THEN        #160705-00042#11 160713 by sakura mark
   IF g_prog MATCHES 'axmt128' THEN   #160705-00042#11 160713 by sakura ad
      LET r_xmbt006 = 'axmi128'
   ELSE
      #因為axmi128的額外參數有很多個,畫面設定編號是第7個,所以l_gzzz004值前面要補上六組""
      #但若g_argv[2]是空值的話,則條件要改為gzzz004 is null
      LET l_gzzz004 = '"" "" "" "" "" "" "',g_argv[2],'"'
      SELECT gzzz001 INTO r_xmbt006 FROM gzzz_t
       WHERE gzzz002 = 'axmi128' AND gzzz004 = l_gzzz004
   END IF
   RETURN r_xmbt006
END FUNCTION

PRIVATE FUNCTION axmt128_xmau_chk()
DEFINE l_n          LIKE type_t.num5
DEFINE l_sql        STRING

   LET l_n = 0
   LET l_sql = " SELECT COUNT(*) FROM xmau_t",
               "  WHERE xmauent = ",g_enterprise,
               "    AND xmau001 = '",g_xmbt_m.xmbt001,"'",
               "    AND xmau002 = '",g_xmbt_m.xmbt002,"'",
               "    AND xmau003 = '",g_xmbt_m.xmbt003,"'",
               "    AND xmau005 = '",g_xmbt_m.xmbt005,"'",
               "    AND xmau006 = '",g_xmbt_m.xmbt006,"'",
               "    AND xmau013 = '",g_xmbu_d[l_ac].xmbu013,"'",
               "    AND xmau014 = '",g_xmbu_d[l_ac].xmbu014,"'",
               "    AND xmau015 = '",g_xmbu_d[l_ac].xmbu015,"'",
               "    AND xmau016 = '",g_xmbu_d[l_ac].xmbu016,"'",
               "    AND xmau017 = '",g_xmbu_d[l_ac].xmbu017,"'",
               "    AND xmau018 = '",g_xmbu_d[l_ac].xmbu018,"'",
               "    AND xmau019 = '",g_xmbu_d[l_ac].xmbu019,"'",
               "    AND xmau020 = '",g_xmbu_d[l_ac].xmbu020,"'",
               "    AND xmau021 = '",g_xmbu_d[l_ac].xmbu021,"'"
   IF NOT cl_null(g_xmbu_d[l_ac].xmbu011) THEN
      LET l_sql = l_sql," AND xmau011 = '",g_xmbu_d[l_ac].xmbu011,"' AND xmau012 = '",g_xmbu_d[l_ac].xmbu012,"'"
   END IF
   IF NOT cl_null(g_xmbu_d[l_ac].xmbu031) THEN
      LET l_sql = l_sql," AND xmau031 = '",g_xmbu_d[l_ac].xmbu031,"'"
   END IF
   IF NOT cl_null(g_xmbu_d[l_ac].xmbu032) THEN
      LET l_sql = l_sql," AND xmau032 = '",g_xmbu_d[l_ac].xmbu032,"'"
   END IF
   PREPARE axmt129_xmbu010_rep FROM l_sql
   EXECUTE axmt129_xmbu010_rep INTO l_n 
   FREE    axmt129_xmbu010_rep  #已使用完畢，釋放
   IF l_n > 0 THEN 
      RETURN TRUE
   ELSE
      RETURN FALSE   
   END IF
END FUNCTION

PRIVATE FUNCTION axmt128_def_xmbu022()
DEFINE l_sql        STRING                 #150829 by whiteny add
DEFINE l_docno      LIKE xmbu_t.xmbudocno  #150829 by whiteny add

#150829 by whiteny mark start
#   SELECT xmau022 INTO g_xmbu_d[l_ac].xmbu022 FROM xmau_t 
#    WHERE xmauent = g_enterprise
#      AND xmau001 = g_xmbt_m.xmbt001 AND xmau002 = g_xmbt_m.xmbt002
#      AND xmau003 = g_xmbt_m.xmbt003 AND xmau005 = g_xmbt_m.xmbt005 
#      AND xmau006 = g_xmbt_m.xmbt006
#      AND ((xmau011 = g_xmbu_d[l_ac].xmbu011 AND xmau012 = g_xmbu_d[l_ac].xmbu012)
#         OR xmau031 = g_xmbu_d[l_ac].xmbu031 OR xmau032 = g_xmbu_d[l_ac].xmbu032)
#      AND xmau013 = g_xmbu_d[l_ac].xmbu013 AND xmau013 = g_xmbu_d[l_ac].xmbu013
#      AND xmau014 = g_xmbu_d[l_ac].xmbu014 AND xmau015 = g_xmbu_d[l_ac].xmbu015
#      AND xmau016 = g_xmbu_d[l_ac].xmbu016 AND xmau017 = g_xmbu_d[l_ac].xmbu017
#      AND xmau018 = g_xmbu_d[l_ac].xmbu018 AND xmau019 = g_xmbu_d[l_ac].xmbu019
#      AND xmau020 = g_xmbu_d[l_ac].xmbu020 AND xmau021 = g_xmbu_d[l_ac].xmbu021
#150829 by whiteny mark end

   #150829 by whiteny add start
   LET l_sql = " SELECT xmau011,COALESCE(xmau012,' '),xmau022,xmau100 ",
               "   FROM xmau_t ",
               "  WHERE xmauent = ",g_enterprise,
               "    AND xmau001 = '",g_xmbt_m.xmbt001,"' ",
               "    AND xmau002 = '",g_xmbt_m.xmbt002,"' ",
               "    AND xmau003 = '",g_xmbt_m.xmbt003,"' ",
               "    AND xmau005 = '",g_xmbt_m.xmbt005,"' ", 
               "    AND xmau006 = '",g_xmbt_m.xmbt006,"' ",
               "    AND xmau013 = '",g_xmbu_d[l_ac].xmbu013,"' ",
               "    AND xmau014 = '",g_xmbu_d[l_ac].xmbu014,"' ",
               "    AND xmau015 = '",g_xmbu_d[l_ac].xmbu015,"' ",
               "    AND xmau016 = '",g_xmbu_d[l_ac].xmbu016,"' ",
               "    AND xmau017 = '",g_xmbu_d[l_ac].xmbu017,"' ",
               "    AND xmau018 = '",g_xmbu_d[l_ac].xmbu018,"' ",
               "    AND xmau019 = '",g_xmbu_d[l_ac].xmbu019,"' ",
               "    AND xmau020 = '",g_xmbu_d[l_ac].xmbu020,"' ",
               "    AND xmau021 = '",g_xmbu_d[l_ac].xmbu021,"' "
   CALL s_sale_price_axmi128('Y','Y','Y','Y',g_xmbu_d[l_ac].xmbu011,g_xmbu_d[l_ac].xmbu012,g_xmbu_d[l_ac].xmbu031,g_xmbu_d[l_ac].xmbu032,l_sql)
        RETURNING g_xmbu_d[l_ac].xmbu022,l_docno
   #150829 by whiteny add end

END FUNCTION

PRIVATE FUNCTION axmt128_set_xmbu010_reproduce(p_xmbu)
DEFINE l_n          LIKE type_t.num5
DEFINE l_sql        STRING
DEFINE p_xmbu       RECORD LIKE xmbu_t.*

   LET l_n = 0 
   LET l_sql = " SELECT COUNT(*) FROM xmau_t ",
               "  WHERE xmauent = ",g_enterprise,
               "    AND xmau001 = '",g_xmbt_m.xmbt001,"' ",
               "    AND xmau002 = '",g_xmbt_m.xmbt002,"' ",
               "    AND xmau003 = '",g_xmbt_m.xmbt003,"' ",
               "    AND xmau005 = '",g_xmbt_m.xmbt005,"' ", 
               "    AND xmau006 = '",g_xmbt_m.xmbt006,"' ",
               "    AND xmau013 = '",p_xmbu.xmbu013,"' ",
               "    AND xmau014 = '",p_xmbu.xmbu014,"' ",
               "    AND xmau015 = '",p_xmbu.xmbu015,"' ",
               "    AND xmau016 = '",p_xmbu.xmbu016,"' ",
               "    AND xmau017 = '",p_xmbu.xmbu017,"' ",
               "    AND xmau018 = '",p_xmbu.xmbu018,"' ",
               "    AND xmau019 = '",p_xmbu.xmbu019,"' ",
               "    AND xmau020 = '",p_xmbu.xmbu020,"' ",
               "    AND xmau021 = '",p_xmbu.xmbu021,"' "
   IF NOT cl_null(p_xmbu.xmbu011) THEN
      LET l_sql = l_sql," AND xmau011 = '",p_xmbu.xmbu011,"' AND xmau012 = '",p_xmbu.xmbu012,"' "
   END IF
   IF NOT cl_null(p_xmbu.xmbu031) THEN
      LET l_sql = l_sql," AND xmau031 = '",p_xmbu.xmbu031,"' "
   END IF
   IF NOT cl_null(p_xmbu.xmbu032) THEN
      LET l_sql = l_sql," AND xmau032 = '",p_xmbu.xmbu032,"' "
   END IF
   PREPARE axmt128_set_xmbu010_reproduce_rep FROM l_sql
   EXECUTE axmt128_set_xmbu010_reproduce_rep INTO l_n 
   FREE    axmt128_set_xmbu010_reproduce_rep  #已使用完畢，釋放
   IF l_n = 0 THEN
      RETURN FALSE
   ELSE
      RETURN TRUE
   END IF
END FUNCTION

PRIVATE FUNCTION axmt128_xmau_exists(p_xmbu)
DEFINE l_n  LIKE type_t.num5
DEFINE p_xmbu   RECORD LIKE xmbu_t.*
   LET l_n = 0 
   SELECT COUNT(*) INTO l_n FROM xmbt_t,xmbu_t 
    WHERE xmbtent = g_enterprise
      AND xmbt001 = g_xmbt_m.xmbt001 AND xmbt002 = g_xmbt_m.xmbt002
      AND xmbt003 = g_xmbt_m.xmbt003 AND xmbt005 = g_xmbt_m.xmbt005 
      AND xmbt006 = g_xmbt_m.xmbt006
      AND xmbu011 = COALESCE(p_xmbu.xmbu011,' ') AND xmbu012 = COALESCE(p_xmbu.xmbu012,' ')
      #dorislai-20150629-add-----(S)
      AND xmbu031 = COALESCE(p_xmbu.xmbu031,' ') AND xmbu032 = COALESCE(p_xmbu.xmbu032,' ')
      #dorislai-20150629-add-----(E)
      AND xmbu013 = p_xmbu.xmbu013 AND xmbu014 = p_xmbu.xmbu014
      AND xmbu015 = p_xmbu.xmbu015 AND xmbu016 = p_xmbu.xmbu016 
      AND xmbu017 = p_xmbu.xmbu017
      AND xmbu018 = p_xmbu.xmbu018 AND xmbu019 = p_xmbu.xmbu019
      AND xmbu020 = p_xmbu.xmbu020 
      AND xmbu021 = p_xmbu.xmbu021
      AND xmbuent = xmbtent AND xmbudocno = xmbtdocno
      AND xmbtstus = 'N'
   
   IF l_n > 1 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'apm-00342'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   END IF
   
   RETURN TRUE
END FUNCTION

PRIVATE FUNCTION axmt128_area_exists()
DEFINE l_n     LIKE type_t.num5
DEFINE l_sql   STRING
DEFINE l_case  LIKE type_t.chr1
   
   IF NOT cl_null(g_xmbu_d[l_ac].xmbu013) AND NOT cl_null(g_xmbu_d[l_ac].xmbu014) AND NOT cl_null(g_xmbu_d[l_ac].xmbu015) THEN
      LET l_sql = "SELECT COUNT(*) FROM ooce_t,oocg_t,ooci_t",
                  " WHERE ooceent = oocgent AND ooce001 = oocg002",
                  "   AND oocgent = oocient AND oocg001 = ooci001",
                  "   AND oocgent = ",g_enterprise,
                  "   AND ooce001 = '",g_xmbu_d[l_ac].xmbu013,"'",
                  "   AND oocg001 = '",g_xmbu_d[l_ac].xmbu014,"'",
                  "   AND ooci002 = '",g_xmbu_d[l_ac].xmbu015,"'"                  
      LET l_case = '1'
   END IF
   
   IF NOT cl_null(g_xmbu_d[l_ac].xmbu013) AND NOT cl_null(g_xmbu_d[l_ac].xmbu014) AND cl_null(g_xmbu_d[l_ac].xmbu015) THEN
      LET l_sql = "SELECT COUNT(*) FROM ooce_t,oocg_t",
                  " WHERE ooceent = oocgent AND ooce001 = oocg002",
                  "   AND ooceent = ",g_enterprise,
                  "   AND ooce001 = '",g_xmbu_d[l_ac].xmbu013,"'",
                  "   AND oocg001 = '",g_xmbu_d[l_ac].xmbu014,"'"
      LET l_case = '2'
   END IF
   
   IF cl_null(g_xmbu_d[l_ac].xmbu013) AND NOT cl_null(g_xmbu_d[l_ac].xmbu014) AND NOT cl_null(g_xmbu_d[l_ac].xmbu015) THEN
      LET l_sql = "SELECT COUNT(*) FROM oocg_t,ooci_t",
                  " WHERE oocgent = oocient AND oocg001 = ooci001",
                  "   AND oocgent = ",g_enterprise,
                  "   AND oocg001 = '",g_xmbu_d[l_ac].xmbu014,"'",
                  "   AND ooci002 = '",g_xmbu_d[l_ac].xmbu015,"'"                  
      LET l_case = '3'
   END IF
   
   IF NOT cl_null(g_xmbu_d[l_ac].xmbu013) AND cl_null(g_xmbu_d[l_ac].xmbu014) AND NOT cl_null(g_xmbu_d[l_ac].xmbu015) THEN
      LET l_sql = "SELECT COUNT(*) FROM ooce_t,oocg_t,ooci_t",
                  " WHERE ooci001 = oocg001  AND oocg002 = ooce001 ",
                  "   AND ooceent = ",g_enterprise,
                  "   AND ooce001 = '",g_xmbu_d[l_ac].xmbu013,"'",
                  "   AND ooci002 = '",g_xmbu_d[l_ac].xmbu015,"'"                  
      LET l_case = '4'
   END IF
   PREPARE sel_area_prep FROM l_sql
   LET l_n = 0
   EXECUTE sel_area_prep INTO l_n
   IF l_n = 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'apm-00314'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CASE l_case
         WHEN '1'
            LET g_xmbu_d[l_ac].xmbu013 = g_xmbu_d_t.xmbu013
            LET g_xmbu_d[l_ac].xmbu014 = g_xmbu_d_t.xmbu014
            LET g_xmbu_d[l_ac].xmbu015 = g_xmbu_d_t.xmbu015
         WHEN '2'
            LET g_xmbu_d[l_ac].xmbu013 = g_xmbu_d_t.xmbu013
            LET g_xmbu_d[l_ac].xmbu014 = g_xmbu_d_t.xmbu014
         WHEN '3'
            LET g_xmbu_d[l_ac].xmbu014 = g_xmbu_d_t.xmbu014
            LET g_xmbu_d[l_ac].xmbu015 = g_xmbu_d_t.xmbu015
         WHEN '4'
            LET g_xmbu_d[l_ac].xmbu013 = g_xmbu_d_t.xmbu013
            LET g_xmbu_d[l_ac].xmbu015 = g_xmbu_d_t.xmbu015
      END CASE
      CALL axmt128_xmbu013_desc()
      CALL axmt128_xmbu014_desc()
      CALL axmt128_xmbu015_desc()
      RETURN FALSE
   END IF
   RETURN TRUE
END FUNCTION

PRIVATE FUNCTION axmt128_xmbu_count()
DEFINE l_cnt     LIKE type_t.num5
DEFINE r_success LIKE type_t.num5

   LET l_cnt = 0
   LET r_success = FALSE
   SELECT COUNT(*) INTO l_cnt 
     FROM xmbu_t
    WHERE xmbuent = g_enterprise
      AND xmbudocno = g_xmbt_m.xmbtdocno
   IF l_cnt > 0 THEN 
      LET r_success = TRUE
   END IF
   RETURN r_success
END FUNCTION

PRIVATE FUNCTION axmt128_set_visible()
DEFINE l_xmas    RECORD LIKE xmas_t.*

   SELECT * INTO l_xmas.* FROM xmas_t WHERE xmasent = g_enterprise AND xmas001 = g_xmas001
   CALL cl_set_comp_visible("xmbu012,xmbu013,xmbu014,xmbu015,xmbu016,xmbu017,xmbu019,xmbu020,xmbu021",TRUE)
   CALL cl_set_comp_visible("xmbu013_desc,xmbu014_desc,xmbu015_desc,xmbu016_desc,xmbu017_desc,xmbu019_desc,oodb005,xmbu020_desc,xmbu021_desc",TRUE)
   IF l_xmas.xmas002 = 'N' THEN CALL cl_set_comp_visible("xmbu012,xmbu012_desc",FALSE) END IF
   IF l_xmas.xmas003 = 'N' THEN CALL cl_set_comp_visible("xmbu013,xmbu013_desc",FALSE) END IF
   IF l_xmas.xmas004 = 'N' THEN CALL cl_set_comp_visible("xmbu014,xmbu014_desc",FALSE) END IF
   IF l_xmas.xmas005 = 'N' THEN CALL cl_set_comp_visible("xmbu015,xmbu015_desc",FALSE) END IF
   IF l_xmas.xmas006 = 'N' THEN CALL cl_set_comp_visible("xmbu016,xmbu016_desc",FALSE) END IF
   IF l_xmas.xmas007 = 'N' THEN CALL cl_set_comp_visible("xmbu017,xmbu017_desc",FALSE) END IF
   IF l_xmas.xmas008 = 'N' THEN CALL cl_set_comp_visible("xmbu019,xmbu019_desc,oodb005",FALSE) END IF
   IF l_xmas.xmas009 = 'N' THEN CALL cl_set_comp_visible("xmbu020,xmbu020_desc",FALSE) END IF
   IF l_xmas.xmas010 = 'N' THEN CALL cl_set_comp_visible("xmbu021,xmbu021_desc",FALSE) END IF
   #2015-06-05----dorislai----add
   
   LET g_column_chk = 4  #表示僅顯示一個欄位
   #axmi127沒勾選，不顯示
   IF l_xmas.xmas011 = 'N' THEN 
      CALL cl_set_comp_visible("xmbu011,xmbu011_desc,xmbu011_desc_desc",FALSE) 
   END IF
   IF l_xmas.xmas012 = 'N' THEN
      CALL cl_set_comp_visible("xmbu031,xmbu031_desc",FALSE) 
   END IF
   IF l_xmas.xmas013 = 'N' THEN
      CALL cl_set_comp_visible("xmbu032,xmbu032_desc",FALSE) 
   END IF
   #用來跳錯誤訊息的
   IF l_xmas.xmas011 = 'N' AND l_xmas.xmas012 = 'Y' AND l_xmas.xmas013 = 'Y' THEN 
      LET g_column_chk = 1
   END IF
   IF l_xmas.xmas012 = 'N' AND l_xmas.xmas011 = 'Y' AND l_xmas.xmas013 = 'Y' THEN
      LET g_column_chk = 2   
   END IF
   IF l_xmas.xmas013 = 'N' AND l_xmas.xmas011 = 'Y' AND l_xmas.xmas012 = 'Y' THEN
      LET g_column_chk = 3  
   END IF
   IF l_xmas.xmas011 = 'N' AND l_xmas.xmas012 = 'Y' AND l_xmas.xmas013 = 'Y' THEN 
      LET g_column_chk = 1
   END IF
   IF l_xmas.xmas012 = 'N' AND l_xmas.xmas011 = 'Y' AND l_xmas.xmas013 = 'Y' THEN
      LET g_column_chk = 2   
   END IF
   IF (l_xmas.xmas013 = 'Y' AND l_xmas.xmas011 = 'Y' AND l_xmas.xmas012 = 'Y' )
      OR (cl_null(l_xmas.xmas013) AND cl_null(l_xmas.xmas011) AND cl_null(l_xmas.xmas012)) THEN
      LET g_column_chk = 0  
   END IF
   CALL axmt128_set_no_required_b()
   #2015-06-05----dorislai----end
END FUNCTION

################################################################################
# Descriptions...: 系列相關说明
# Memo...........:
# Usage..........: CALL axmt128_xmbu031_desc()
# Input parameter: 
# Return code....: 
# Date & Author..: 15/06/05 By dorislai
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt128_xmbu031_desc()
   #抓取系列說明
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmbu_d[l_ac].xmbu031
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql002=? AND oocql001='2003' AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmbu_d[l_ac].xmbu031_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_xmbu_d[l_ac].xmbu031_desc

END FUNCTION

################################################################################
# Descriptions...: 產品分類說明
# Memo...........:
# Usage..........: CALL axmt128_xmbu032_desc()
# Input parameter: 
# Return code....: 
# Date & Author..: 15/06/05 By dorislai
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt128_xmbu032_desc()
   #抓取產品分類說明
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmbu_d[l_ac].xmbu032
   CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmbu_d[l_ac].xmbu032_desc =g_rtn_fields[1]
   DISPLAY BY NAME g_xmbu_d[l_ac].xmbu032_desc

END FUNCTION

################################################################################
# Descriptions...: 清空料件編號相關欄位
# Memo...........:
# Usage..........: CALL axmt128_xmbu011_clear()
# Input parameter: 
# Return code....: 
# Date & Author..: 15/06/05 By dorislai
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt128_xmbu011_clear()
   LET g_xmbu_d[l_ac].xmbu011 = ' '           #清空料件編號
   LET g_xmbu_d[l_ac].xmbu011_desc = ''       #清空品名
   LET g_xmbu_d[l_ac].xmbu011_desc_desc = ''  #清空規格
   LET g_xmbu_d[l_ac].xmbu012 = ' '           #清空產品特徵
   LET g_xmbu_d[l_ac].xmbu012_desc = ''       #清空產品特徵說明
   LET g_xmbu_d_o.xmbu011 = ''                #清空料件編號舊值
   CALL axmt128_set_no_entry_b("")
   DISPLAY BY NAME g_xmbu_d[l_ac].xmbu011,g_xmbu_d[l_ac].xmbu011_desc,g_xmbu_d[l_ac].xmbu011_desc_desc
   DISPLAY BY NAME g_xmbu_d[l_ac].xmbu012,g_xmbu_d[l_ac].xmbu012_desc
   
END FUNCTION

################################################################################
# Descriptions...: 清空系列相關欄位
# Memo...........:
# Usage..........: CALL axmt128_xmbu031_clear()
# Input parameter: 
# Return code....: 
# Date & Author..: 15/06/05 By dorislai
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt128_xmbu031_clear()
   LET g_xmbu_d[l_ac].xmbu031 = ' '        #清空系列
   LET g_xmbu_d[l_ac].xmbu031_desc=''     #清空系列說明
   LET g_xmbu_d_o.xmbu031 = ''            #清空系列舊值
   DISPLAY BY NAME g_xmbu_d[l_ac].xmbu031,g_xmbu_d[l_ac].xmbu031_desc
END FUNCTION

################################################################################
# Descriptions...: 清空產品分類相關欄位
# Memo...........:
# Usage..........: CALL axmt128_xmbu032_clear()
# Input parameter: 
# Return code....: 
# Date & Author..: 15/06/05 By dorislai
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt128_xmbu032_clear()
   LET g_xmbu_d[l_ac].xmbu032 = ' '        #清空產品分類
   LET g_xmbu_d[l_ac].xmbu032_desc=''     #清空產品分類說明
   LET g_xmbu_d_o.xmbu032 = ''            #清空產品分類舊值
   DISPLAY BY NAME g_xmbu_d[l_ac].xmbu032,g_xmbu_d[l_ac].xmbu032_desc
END FUNCTION

PRIVATE FUNCTION axmt128_set_no_required_b()
   IF g_column_chk < 4 THEN
      CALL cl_set_comp_required("xmbu011,xmbu031,xmbu032",FALSE)
   END IF

END FUNCTION

################################################################################
# Descriptions...: 系列、產品分類的單位確認
# Memo...........:
# Usage..........: CALL axmt128_xmbu_unit()
#                  RETURNING TRUE/FALSE
# Input parameter: 
# Return code....: 回傳  TRUE/FALSE
# Date & Author..: 2015-06-22 By dorislai
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt128_xmbu_unit()
   DEFINE  l_sql                 STRING                               #抓取sql語法
   DEFINE  l_chk                 LIKE  type_t.num5                    #判斷是否有抓到符合的值
   DEFINE  l_imaa001             LIKE  type_t.chr100                  #接收抓取到的料件編號值
   
   #先依欄位抓取sql語法    
       #---用系列去抓料件編號
   IF NOT cl_null(g_xmbu_d[l_ac].xmbu031) THEN
      LET l_sql = "SELECT imaa001 FROM imaa_t ",
                  "WHERE imaaent = '"||g_enterprise||"' AND imaa127 = '"||g_xmbu_d[l_ac].xmbu031||"'",
                  "ORDER BY imaa001"
   END IF
       #----用產品分類去抓料件編號
   IF NOT cl_null(g_xmbu_d[l_ac].xmbu032) THEN
      LET l_sql = "SELECT imaa001 FROM imaa_t ",
                  "WHERE imaaent = '"||g_enterprise||"' AND imaa009 = '"||g_xmbu_d[l_ac].xmbu032||"'",
                  "ORDER BY imaa001"
   END IF          
   #校驗          
   PREPARE axmt128_get_imaa001_chk_pre FROM l_sql
   DECLARE axmt128_get_imaa001_chk_curs CURSOR FOR axmt128_get_imaa001_chk_pre
   LET l_imaa001 =''
   LET l_chk = FALSE #判斷是否有抓到符合的資料
   #一筆一筆比對是否有符合任一 料件編號中的可使用單位
   FOREACH axmt128_get_imaa001_chk_curs INTO l_imaa001 
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_xmbu_d[l_ac].xmbu018
      #以COUNT來計算，並判斷是否有比對到符合的資料
      CALL ap_ref_array2(g_ref_fields,"SELECT COUNT(*) FROM imao_t WHERE imaoent='"||g_enterprise||"' AND imao002 = ? AND imao001 = '"||l_imaa001||"'","") RETURNING g_rtn_fields
      IF g_rtn_fields[1] > 0 THEN
         LET l_chk = TRUE 
         EXIT FOREACH
      END IF 
   END FOREACH
   FREE  axmt128_get_imaa001_chk_pre  #已使用完畢，釋放
   #若料件編號中無相對應的可使用單位，跳出錯誤訊息提示
   IF NOT l_chk THEN
      RETURN FALSE
   END IF
   RETURN TRUE 
END FUNCTION

 
{</section>}
 
