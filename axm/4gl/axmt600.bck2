#該程式已解開Section, 不再透過樣板產出!
{<section id="axmt600.description" >}
#應用 a00 樣板自動產生(Version:2)
#+ Version..: T100-ERP-1.01.00(SD版次:13,PR版次:13) Build-000695
#+ 
#+ Filename...: axmt600
#+ Description: 銷退單維護作業
#+ Creator....: 04543(2014-06-24 00:00:00)
#+ Modifier...: 02294(2015-12-30 18:28:13) -SD/PR- 07423
 
{</section>}
 
{<section id="axmt600.global" >}
#應用 t01 樣板自動產生(Version:62)
#add-point:填寫註解說明 name="global.memo"
#151118-00012#1  2015/11/19 By shiun        新增s_axmt540_get_exchange傳入參數
#151117-00005#1  2015/12/07 By TSD.Tim      資料異動時異動條碼資料(bcae_t,bcaf_t)
#151209-00018#1  2015/12/09 By earl         修正無來源時計價單位預設問題、重新取價時跳出詢問視窗
#151124-00004#1  2015/12/11 By earl         修正多角銷退邏輯，每站皆可新增銷退單
#151215-00005#1  2015/12/15 By earl         新增"顯示單價 Action"
#151224-00025#5  2015/12/28 By dorishsu     產品特徵欄位若無開窗輸入反而自行手動輸入時,則無法新增至inam_t
#151210-00009#1  2015/12/30 By earl         多角流水號一致時，開窗、校驗調整
#150721-00001#1  2016/01/08 By earl         控制組過濾、單據別與客戶預設資料調整
#                                           單據別預設資料要高於客戶預設資料
#160202-00011#1  2016/02/02 By lixiang      集成单号栏位不需要带来源单的资料
#160125-00025#2  2016/02/15 By earl         整理條碼產生邏輯
#160125-00022#1  2016/03/10 By whitney      add 庫存管理特微 imaf055 控卡
#160315-00002#1  2016/03/15 By Sarah        同一個出貨單+出貨項次應可以輸入多次,只需要檢查加總起來的數量不可超過可銷退量
#160314-00008#1  2016/03/16 By catmoon      批/序號3:不控管時,修改儲位/批號時沒有更新到inao_t
#160225-00028#1  2016/03/22 By dorislai     1.mark參數D-BAS-0082的欄位可輸入否的控制
#                                           2.依參數D-BAS-0082(銷貨來源單是否為出貨單)，來控制xmdk005、xmdl001、xmdl002的必輸
#160314-00009#13 2016/03/29 By xujing       产品特征自动开窗增加参数判断
#160318-00005#50 2016/04/01 By pengxin      修正azzi920重复定义之错误讯息
#160531-00018#2  2016/05/31 By Dido         批序號明細頁簽無法匯出 excel 問題
#160512-00004#2  2016/06/18 By dorislai     1.新增欄位-有效日期(xmdl057)、製造日期(xmdl058)  2.有效日期需>製造日期 
#                                           3.製造日期(xmdl058)、有效日期(xmdl057)在aini010有值的話，帶預設值&不可輸入；沒值，開放給user輸入
#160510-00043#2  2016/07/25 By 02097        T類作業在browser_fill()組SQL前,呼叫s_aooi200_filter_slip將回傳條件組進去g_wc中
#160519-00008#10 2016/07/28 By 02097        单据上库存管理特征栏位依依料件设定控管
#160801-00009#1  2016/08/02 By lixiang      新增时若aoos020参数S-FIN-1003='3',xmdk087='Y';若S-FIN-1003<>'3',xmdk087='N
#160812-00017#5  2016/08/15 By 06137        在satatchange( )的FUNCTION中，有RETURN指令但沒有加上transaction_end( ) 造成transaction沒有結束就直接RETURN
#160818-00017#43 2016/08/26 By lixh         单据类作业修改，删除时需重新检查状态
#160815-00023#1  2016/08/29 by 02097        出货单的出货库位是VMI存货库位，那销退的时候，销退单单身的库位/库存管理特征栏位要预设为出货单的库位，且不能修改。
#160829-00022#1  2016/09/10 by fionchen     單身輸入完出貨/簽收單號碼與項次,一併帶出客戶訂單號
#161020-00019#1  2016/10/21 By fionchen     調整axmt600_doc_default增加xmdk082,與單別修改後的是否可修改的控卡有誤
#end add-point
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"
IMPORT FGL sub_s_lot
#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"
 
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_xmdk_m        RECORD
       xmdk000 LIKE xmdk_t.xmdk000, 
   xmdksite LIKE xmdk_t.xmdksite, 
   xmdkdocno LIKE xmdk_t.xmdkdocno, 
   xmdkdocno_desc LIKE type_t.chr80, 
   xmdkdocdt LIKE xmdk_t.xmdkdocdt, 
   xmdk001 LIKE xmdk_t.xmdk001, 
   xmdk003 LIKE xmdk_t.xmdk003, 
   xmdk003_desc LIKE type_t.chr80, 
   xmdk004 LIKE xmdk_t.xmdk004, 
   xmdk004_desc LIKE type_t.chr80, 
   xmdkstus LIKE xmdk_t.xmdkstus, 
   xmdk005 LIKE xmdk_t.xmdk005, 
   xmdk006 LIKE xmdk_t.xmdk006, 
   xmdk007 LIKE xmdk_t.xmdk007, 
   xmdk007_desc LIKE type_t.chr80, 
   xmdk009 LIKE xmdk_t.xmdk009, 
   xmdk009_desc LIKE type_t.chr80, 
   xmdk008 LIKE xmdk_t.xmdk008, 
   xmdk008_desc LIKE type_t.chr80, 
   xmdk202 LIKE xmdk_t.xmdk202, 
   xmdk202_desc LIKE type_t.chr80, 
   xmdk045 LIKE xmdk_t.xmdk045, 
   xmdk082 LIKE xmdk_t.xmdk082, 
   xmdk030 LIKE xmdk_t.xmdk030, 
   xmdk030_desc LIKE type_t.chr80, 
   xmdk054 LIKE xmdk_t.xmdk054, 
   xmdk010 LIKE xmdk_t.xmdk010, 
   xmdk010_desc LIKE type_t.chr80, 
   xmdk011 LIKE xmdk_t.xmdk011, 
   xmdk011_desc LIKE type_t.chr80, 
   xmdk012 LIKE xmdk_t.xmdk012, 
   xmdk012_desc LIKE type_t.chr80, 
   xmdk013 LIKE xmdk_t.xmdk013, 
   xmdk014 LIKE xmdk_t.xmdk014, 
   xmdk015 LIKE xmdk_t.xmdk015, 
   xmdk015_desc LIKE type_t.chr80, 
   xmdk016 LIKE xmdk_t.xmdk016, 
   xmdk016_desc LIKE type_t.chr80, 
   xmdk017 LIKE xmdk_t.xmdk017, 
   xmdk084 LIKE xmdk_t.xmdk084, 
   xmdk018 LIKE xmdk_t.xmdk018, 
   xmdk018_desc LIKE type_t.chr80, 
   xmdk041 LIKE xmdk_t.xmdk041, 
   xmdk037 LIKE xmdk_t.xmdk037, 
   xmdk042 LIKE xmdk_t.xmdk042, 
   xmdk043 LIKE xmdk_t.xmdk043, 
   xmdk031 LIKE xmdk_t.xmdk031, 
   xmdk031_desc LIKE type_t.chr80, 
   xmdk033 LIKE xmdk_t.xmdk033, 
   xmdk033_desc LIKE type_t.chr80, 
   xmdk085 LIKE xmdk_t.xmdk085, 
   xmdk086 LIKE xmdk_t.xmdk086, 
   xmdk087 LIKE xmdk_t.xmdk087, 
   xmdk044 LIKE xmdk_t.xmdk044, 
   xmdk035 LIKE xmdk_t.xmdk035, 
   xmdk046 LIKE xmdk_t.xmdk046, 
   xmdk036 LIKE xmdk_t.xmdk036, 
   xmdk083 LIKE xmdk_t.xmdk083, 
   xmdkownid LIKE xmdk_t.xmdkownid, 
   xmdkownid_desc LIKE type_t.chr80, 
   xmdkowndp LIKE xmdk_t.xmdkowndp, 
   xmdkowndp_desc LIKE type_t.chr80, 
   xmdkcrtid LIKE xmdk_t.xmdkcrtid, 
   xmdkcrtid_desc LIKE type_t.chr80, 
   xmdkcrtdp LIKE xmdk_t.xmdkcrtdp, 
   xmdkcrtdp_desc LIKE type_t.chr80, 
   xmdkcrtdt LIKE xmdk_t.xmdkcrtdt, 
   xmdkmodid LIKE xmdk_t.xmdkmodid, 
   xmdkmodid_desc LIKE type_t.chr80, 
   xmdkmoddt LIKE xmdk_t.xmdkmoddt, 
   xmdkcnfid LIKE xmdk_t.xmdkcnfid, 
   xmdkcnfid_desc LIKE type_t.chr80, 
   xmdkcnfdt LIKE xmdk_t.xmdkcnfdt, 
   xmdkpstid LIKE xmdk_t.xmdkpstid, 
   xmdkpstid_desc LIKE type_t.chr80, 
   xmdkpstdt LIKE xmdk_t.xmdkpstdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_xmdl_d        RECORD
       xmdlsite LIKE xmdl_t.xmdlsite, 
   xmdlseq LIKE xmdl_t.xmdlseq, 
   xmdl001 LIKE xmdl_t.xmdl001, 
   xmdl002 LIKE xmdl_t.xmdl002, 
   xmdl003 LIKE xmdl_t.xmdl003, 
   xmdl004 LIKE xmdl_t.xmdl004, 
   xmdl005 LIKE xmdl_t.xmdl005, 
   xmdl006 LIKE xmdl_t.xmdl006, 
   xmda033 LIKE type_t.chr500, 
   xmdl007 LIKE xmdl_t.xmdl007, 
   xmdl008 LIKE xmdl_t.xmdl008, 
   xmdl008_desc LIKE type_t.chr500, 
   xmdl008_desc_desc LIKE type_t.chr500, 
   xmdl009 LIKE xmdl_t.xmdl009, 
   xmdl009_desc LIKE type_t.chr500, 
   xmdl033 LIKE xmdl_t.xmdl033, 
   l_pmao009 LIKE type_t.chr500, 
   l_pmao010 LIKE type_t.chr500, 
   xmdl011 LIKE xmdl_t.xmdl011, 
   xmdl011_desc LIKE type_t.chr500, 
   xmdl012 LIKE xmdl_t.xmdl012, 
   xmdl050 LIKE xmdl_t.xmdl050, 
   xmdl050_desc LIKE type_t.chr500, 
   xmdl094 LIKE xmdl_t.xmdl094, 
   xmdl095 LIKE xmdl_t.xmdl095, 
   xmdl017 LIKE xmdl_t.xmdl017, 
   xmdl017_desc LIKE type_t.chr500, 
   xmdl018 LIKE xmdl_t.xmdl018, 
   xmdl019 LIKE xmdl_t.xmdl019, 
   xmdl019_desc LIKE type_t.chr500, 
   xmdl020 LIKE xmdl_t.xmdl020, 
   xmdl010 LIKE xmdl_t.xmdl010, 
   xmdl013 LIKE xmdl_t.xmdl013, 
   xmdl014 LIKE xmdl_t.xmdl014, 
   xmdl014_desc LIKE type_t.chr500, 
   xmdl015 LIKE xmdl_t.xmdl015, 
   xmdl015_desc LIKE type_t.chr500, 
   xmdl016 LIKE xmdl_t.xmdl016, 
   xmdl052 LIKE xmdl_t.xmdl052, 
   xmdl021 LIKE xmdl_t.xmdl021, 
   xmdl021_desc LIKE type_t.chr500, 
   xmdl022 LIKE xmdl_t.xmdl022, 
   xmdl023 LIKE xmdl_t.xmdl023, 
   xmdl041 LIKE xmdl_t.xmdl041, 
   xmdl030 LIKE xmdl_t.xmdl030, 
   xmdl030_desc LIKE type_t.chr500, 
   xmdl031 LIKE xmdl_t.xmdl031, 
   xmdl031_desc LIKE type_t.chr500, 
   xmdl032 LIKE xmdl_t.xmdl032, 
   xmdl032_desc LIKE type_t.chr500, 
   xmdl058 LIKE xmdl_t.xmdl058, #160512-00004#2-add
   xmdl057 LIKE xmdl_t.xmdl057, #160512-00004#2-add
   xmdl051 LIKE xmdl_t.xmdl051, 
   xmdl088 LIKE xmdl_t.xmdl088
       END RECORD
PRIVATE TYPE type_g_xmdl2_d RECORD
       xmdlseq LIKE xmdl_t.xmdlseq, 
   xmdl048 LIKE xmdl_t.xmdl048, 
   xmdl049 LIKE xmdl_t.xmdl049, 
   xmdl0071 LIKE type_t.chr500, 
   xmdl0081 LIKE type_t.chr500, 
   xmdl0081_desc LIKE type_t.chr500, 
   xmdl0081_desc_desc LIKE type_t.chr500, 
   xmdl0091 LIKE type_t.chr500, 
   xmdl0091_desc LIKE type_t.chr500, 
   xmdl0111 LIKE type_t.chr500, 
   xmdl0121 LIKE type_t.chr500, 
   xmdl0171 LIKE type_t.chr500, 
   xmdl0171_desc LIKE type_t.chr500, 
   xmdl0181 LIKE type_t.num20_6, 
   xmdl0211 LIKE type_t.chr500, 
   xmdl0211_desc LIKE type_t.chr500, 
   xmdl0221 LIKE type_t.num20_6, 
   xmdl024 LIKE xmdl_t.xmdl024, 
   xmdl025 LIKE xmdl_t.xmdl025, 
   xmdl025_desc LIKE type_t.chr500, 
   xmdl026 LIKE xmdl_t.xmdl026, 
   xmdl027 LIKE xmdl_t.xmdl027, 
   xmdl028 LIKE xmdl_t.xmdl028, 
   xmdl029 LIKE xmdl_t.xmdl029, 
   xmdl042 LIKE xmdl_t.xmdl042, 
   xmdl043 LIKE xmdl_t.xmdl043, 
   xmdl044 LIKE xmdl_t.xmdl044, 
   xmdl045 LIKE xmdl_t.xmdl045, 
   xmdl046 LIKE xmdl_t.xmdl046, 
   xmdl087 LIKE xmdl_t.xmdl087
       END RECORD
PRIVATE TYPE type_g_xmdl3_d RECORD
       xmdmsite LIKE xmdm_t.xmdmsite, 
   xmdmseq LIKE xmdm_t.xmdmseq, 
   xmdmseq1 LIKE xmdm_t.xmdmseq1, 
   xmdm001 LIKE xmdm_t.xmdm001, 
   xmdm001_desc LIKE type_t.chr500, 
   xmdm001_desc_desc LIKE type_t.chr500, 
   xmdm002 LIKE xmdm_t.xmdm002, 
   xmdm002_desc LIKE type_t.chr500, 
   xmdm003 LIKE xmdm_t.xmdm003, 
   xmdm004 LIKE xmdm_t.xmdm004, 
   xmdm005 LIKE xmdm_t.xmdm005, 
   xmdm005_desc LIKE type_t.chr500, 
   xmdm006 LIKE xmdm_t.xmdm006, 
   xmdm006_desc LIKE type_t.chr500, 
   xmdm007 LIKE xmdm_t.xmdm007, 
   xmdm033 LIKE xmdm_t.xmdm033, 
   xmdm008 LIKE xmdm_t.xmdm008, 
   xmdm008_desc LIKE type_t.chr500, 
   xmdm009 LIKE xmdm_t.xmdm009, 
   xmdm010 LIKE xmdm_t.xmdm010, 
   xmdm010_desc LIKE type_t.chr500, 
   xmdm011 LIKE xmdm_t.xmdm011
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_xmdkdocno LIKE xmdk_t.xmdkdocno,
      b_xmdk001 LIKE xmdk_t.xmdk001,
      b_xmdk003 LIKE xmdk_t.xmdk003,
   b_xmdk003_desc LIKE type_t.chr80,
      b_xmdk004 LIKE xmdk_t.xmdk004,
   b_xmdk004_desc LIKE type_t.chr80,
      b_xmdk005 LIKE xmdk_t.xmdk005,
      b_xmdk007 LIKE xmdk_t.xmdk007,
   b_xmdk007_desc LIKE type_t.chr80,
      b_xmdk008 LIKE xmdk_t.xmdk008,
   b_xmdk008_desc LIKE type_t.chr80,
      b_xmdk009 LIKE xmdk_t.xmdk009,
   b_xmdk009_desc LIKE type_t.chr80
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE g_oodb011    LIKE oodb_t.oodb011    #稅別應用(1.依料建設定2.正常稅率)
DEFINE g_pmao_flag  LIKE type_t.chr1
DEFINE g_aic_doc    LIKE type_t.num5       #151210-00009#1  2015/12/30 By earl add
DEFINE g_gzcb004    LIKE gzcb_t.gzcb004    #160705-00001 by whitney add
DEFINE g_slip_wc          STRING     #160510-00043#2
DEFINE g_xmdkdocno_o  LIKE xmdk_t.xmdkdocno  #161020-00019#1 add
#end add-point
       
#模組變數(Module Variables)
DEFINE g_xmdk_m          type_g_xmdk_m
DEFINE g_xmdk_m_t        type_g_xmdk_m
DEFINE g_xmdk_m_o        type_g_xmdk_m
DEFINE g_xmdk_m_mask_o   type_g_xmdk_m #轉換遮罩前資料
DEFINE g_xmdk_m_mask_n   type_g_xmdk_m #轉換遮罩後資料
 
   DEFINE g_xmdkdocno_t LIKE xmdk_t.xmdkdocno
 
 
DEFINE g_xmdl_d          DYNAMIC ARRAY OF type_g_xmdl_d
DEFINE g_xmdl_d_t        type_g_xmdl_d
DEFINE g_xmdl_d_o        type_g_xmdl_d
DEFINE g_xmdl_d_mask_o   DYNAMIC ARRAY OF type_g_xmdl_d #轉換遮罩前資料
DEFINE g_xmdl_d_mask_n   DYNAMIC ARRAY OF type_g_xmdl_d #轉換遮罩後資料
DEFINE g_xmdl2_d          DYNAMIC ARRAY OF type_g_xmdl2_d
DEFINE g_xmdl2_d_t        type_g_xmdl2_d
DEFINE g_xmdl2_d_o        type_g_xmdl2_d
DEFINE g_xmdl2_d_mask_o   DYNAMIC ARRAY OF type_g_xmdl2_d #轉換遮罩前資料
DEFINE g_xmdl2_d_mask_n   DYNAMIC ARRAY OF type_g_xmdl2_d #轉換遮罩後資料
DEFINE g_xmdl3_d          DYNAMIC ARRAY OF type_g_xmdl3_d
DEFINE g_xmdl3_d_t        type_g_xmdl3_d
DEFINE g_xmdl3_d_o        type_g_xmdl3_d
DEFINE g_xmdl3_d_mask_o   DYNAMIC ARRAY OF type_g_xmdl3_d #轉換遮罩前資料
DEFINE g_xmdl3_d_mask_n   DYNAMIC ARRAY OF type_g_xmdl3_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="axmt600.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"

   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
                           
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axm","")
 
   #add-point:作業初始化 name="main.init"
   
   LET g_errshow = '1'                        
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
                           
   #end add-point
   LET g_forupd_sql = " SELECT xmdk000,xmdksite,xmdkdocno,'',xmdkdocdt,xmdk001,xmdk003,'',xmdk004,'', 
       xmdkstus,xmdk005,xmdk006,xmdk007,'',xmdk009,'',xmdk008,'',xmdk202,'',xmdk045,xmdk082,xmdk030, 
       '',xmdk054,xmdk010,'',xmdk011,'',xmdk012,'',xmdk013,xmdk014,xmdk015,'',xmdk016,'',xmdk017,xmdk084, 
       xmdk018,'',xmdk041,xmdk037,xmdk042,xmdk043,xmdk031,'',xmdk033,'',xmdk085,xmdk086,xmdk087,xmdk044, 
       xmdk035,xmdk046,xmdk036,xmdk083,xmdkownid,'',xmdkowndp,'',xmdkcrtid,'',xmdkcrtdp,'',xmdkcrtdt, 
       xmdkmodid,'',xmdkmoddt,xmdkcnfid,'',xmdkcnfdt,xmdkpstid,'',xmdkpstdt", 
                      " FROM xmdk_t",
                      " WHERE xmdkent= ? AND xmdkdocno=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
                           
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt600_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.xmdk000,t0.xmdksite,t0.xmdkdocno,t0.xmdkdocdt,t0.xmdk001,t0.xmdk003, 
       t0.xmdk004,t0.xmdkstus,t0.xmdk005,t0.xmdk006,t0.xmdk007,t0.xmdk009,t0.xmdk008,t0.xmdk202,t0.xmdk045, 
       t0.xmdk082,t0.xmdk030,t0.xmdk054,t0.xmdk010,t0.xmdk011,t0.xmdk012,t0.xmdk013,t0.xmdk014,t0.xmdk015, 
       t0.xmdk016,t0.xmdk017,t0.xmdk084,t0.xmdk018,t0.xmdk041,t0.xmdk037,t0.xmdk042,t0.xmdk043,t0.xmdk031, 
       t0.xmdk033,t0.xmdk085,t0.xmdk086,t0.xmdk087,t0.xmdk044,t0.xmdk035,t0.xmdk046,t0.xmdk036,t0.xmdk083, 
       t0.xmdkownid,t0.xmdkowndp,t0.xmdkcrtid,t0.xmdkcrtdp,t0.xmdkcrtdt,t0.xmdkmodid,t0.xmdkmoddt,t0.xmdkcnfid, 
       t0.xmdkcnfdt,t0.xmdkpstid,t0.xmdkpstdt,t1.ooag011 ,t2.ooefl003 ,t3.pmaal004 ,t4.pmaal004 ,t5.pmaal004 , ",
       #160621-00003#3 20160629 modify by beckxie---S
       #"t6.pmaal004 ,t7.oocql004 ,t8.ooibl004 ,t9.oocql004 ,t10.xmahl003 ,t11.ooag011 ,t12.ooefl003 , ",
       "t6.pmaal004 ,t7.oojdl003 ,t8.ooibl004 ,t9.oocql004 ,t10.xmahl003 ,t11.ooag011 ,t12.ooefl003 , ",
       #160621-00003#3 20160629 modify by beckxie---E
       "t13.ooag011 ,t14.ooefl003 ,t15.ooag011 ,t16.ooag011 ,t17.ooag011",
               " FROM xmdk_t t0",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent='"||g_enterprise||"' AND t1.ooag001=t0.xmdk003  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=t0.xmdk004 AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t3 ON t3.pmaalent='"||g_enterprise||"' AND t3.pmaal001=t0.xmdk007 AND t3.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t4 ON t4.pmaalent='"||g_enterprise||"' AND t4.pmaal001=t0.xmdk009 AND t4.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t5 ON t5.pmaalent='"||g_enterprise||"' AND t5.pmaal001=t0.xmdk008 AND t5.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t6 ON t6.pmaalent='"||g_enterprise||"' AND t6.pmaal001=t0.xmdk202 AND t6.pmaal002='"||g_dlang||"' ",
               #160621-00003#3 20160629 modify by beckxie---S
               #" LEFT JOIN oocql_t t7 ON t7.oocqlent='"||g_enterprise||"' AND t7.oocql001='275' AND t7.oocql002=t0.xmdk030 AND t7.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oojdl_t t7 ON t7.oojdlent='"||g_enterprise||"' AND t7.oojdl001=t0.xmdk030 AND t7.oojdl002='"||g_dlang||"' ",
               #160621-00003#3 20160629 modify by beckxie---E
               " LEFT JOIN ooibl_t t8 ON t8.ooiblent='"||g_enterprise||"' AND t8.ooibl002=t0.xmdk010 AND t8.ooibl003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t9 ON t9.oocqlent='"||g_enterprise||"' AND t9.oocql001='238' AND t9.oocql002=t0.xmdk011 AND t9.oocql003='"||g_dlang||"' ",
               " LEFT JOIN xmahl_t t10 ON t10.xmahlent='"||g_enterprise||"' AND t10.xmahl001=t0.xmdk018 AND t10.xmahl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t11 ON t11.ooagent='"||g_enterprise||"' AND t11.ooag001=t0.xmdkownid  ",
               " LEFT JOIN ooefl_t t12 ON t12.ooeflent='"||g_enterprise||"' AND t12.ooefl001=t0.xmdkowndp AND t12.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t13 ON t13.ooagent='"||g_enterprise||"' AND t13.ooag001=t0.xmdkcrtid  ",
               " LEFT JOIN ooefl_t t14 ON t14.ooeflent='"||g_enterprise||"' AND t14.ooefl001=t0.xmdkcrtdp AND t14.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t15 ON t15.ooagent='"||g_enterprise||"' AND t15.ooag001=t0.xmdkmodid  ",
               " LEFT JOIN ooag_t t16 ON t16.ooagent='"||g_enterprise||"' AND t16.ooag001=t0.xmdkcnfid  ",
               " LEFT JOIN ooag_t t17 ON t17.ooagent='"||g_enterprise||"' AND t17.ooag001=t0.xmdkpstid  ",
 
               " WHERE t0.xmdkent = '" ||g_enterprise|| "' AND t0.xmdkdocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"

   #end add-point
   PREPARE axmt600_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
                                                      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axmt600 WITH FORM cl_ap_formpath("axm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axmt600_init()   
 
      #進入選單 Menu (="N")
      CALL axmt600_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
                                                      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axmt600
      
   END IF 
   
   CLOSE axmt600_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   CALL axmt540_01_drop_temp_table()   #axmt540_01   刪除temp_table
   DROP TABLE axmt600_inao;  #150821-xianghui
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="axmt600.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION axmt600_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   DEFINE l_success     LIKE type_t.num5
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('xmdkstus','13','N,Y,S,A,D,R,W,UH,H,Z,X')
 
      CALL cl_set_combo_scc('xmdk000','2077') 
   CALL cl_set_combo_scc('xmdk045','2064') 
   CALL cl_set_combo_scc('xmdk082','2088') 
   CALL cl_set_combo_scc('xmdk084','8325') 
   CALL cl_set_combo_scc('xmdk042','2085') 
   CALL cl_set_combo_scc('xmdk043','2084') 
   CALL cl_set_combo_scc('xmdk085','3085') 
   CALL cl_set_combo_scc('xmdk046','4060') 
   CALL cl_set_combo_scc('xmdl007','2055') 
   CALL cl_set_combo_scc('xmdl042','2067') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1','2',","1")
   CALL g_idx_group.addAttribute("'3',","1")
   CALL g_idx_group.addAttribute("","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   CALL cl_set_combo_scc_part('xmdkstus','13','N,X,Y,S,A,D,R,W')

   CALL cl_set_combo_scc('xmdl0071','2055')
   
   CALL axmt540_01_create_temp_table() RETURNING l_success   #axmt540_01   建立temp_table
   CALL s_tax_recount_tmp()
   
   #判斷據點參數若不使用產品特徵時，則產品特徵需隱藏不可以維護(據點參數:S-BAS-0036)
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0036') = 'N' THEN
      CALL cl_set_comp_visible("xmdl009,xmdl009_desc,xmdl0091,xmdl0091_desc,xmdm002,xmdm002_desc",FALSE)
   END IF   
   
   #判斷據點參數若不使用參考單位時，則參考單位、數量需隱藏不可以維護(據點參數:S-BAS-0028)
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0028') = 'N' THEN
      CALL cl_set_comp_visible("xmdl019,xmdl019_desc,xmdl020,xmdm010,xmdm010_desc,xmdm011",FALSE)
   END IF

   #整體參數未使用採購計價單位
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0007') = "N" THEN
      CALL cl_set_comp_visible("xmdl021,xmdl021_desc,xmdl022,xmdl0211,xmdl0211_desc,xmdl0221",FALSE)
   END IF
   #150821-xianghui-b
   CALL cl_set_toolbaritem_visible("s_lot_ins,s_lot_sel",TRUE)    #160122-00020#1
   CALL cl_ui_replace_sub_window(cl_ap_formpath("sub", "s_lot_s01"), "grid_s_lot", "Table", "s_detail1_s_lot_s01")
   CALL s_lot_sel_create_tmp()
   CALL s_lot_ins_create_tmp()     #160122-00020#1

   #CREATE TEMP TABLE
   DROP TABLE axmt600_inao;
   LET g_sql = "CREATE GLOBAL TEMPORARY TABLE axmt600_inao AS ",
                "SELECT * FROM inao_t "
   PREPARE inao_tbl FROM g_sql
   EXECUTE inao_tbl
   FREE inao_tbl
   #150821-xianghui-e
   
   #151210-00009#1  2015/12/30 By earl s
   IF cl_get_para(g_enterprise,'','E-BAS-0018') = 'Y' THEN
      LET g_aic_doc = TRUE
   ELSE
      LET g_aic_doc = FALSE
   END IF
   #151210-00009#1  2015/12/30 By earl e
   
   #160705-00001 by whitney add start
   LET g_gzcb004 = ''
   SELECT gzcb004 INTO g_gzcb004
     FROM gzcb_t,gzzz_t
    WHERE gzcb001 = '24'
      AND gzcb002 = gzzz006
      AND gzzz001 = g_prog
   #160705-00001 by whitney add end
   CALL s_aooi200_filter_slip('xmdkdocno') RETURNING g_slip_wc    #160510-00043#2
   #end add-point
   
   #初始化搜尋條件
   CALL axmt600_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="axmt600.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION axmt600_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"

   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   DEFINE l_rollback     LIKE type_t.num5 
   DEFINE l_success      LIKE type_t.num5
   DEFINE l_xmdadocno    LIKE xmda_t.xmdadocno
   #add--2015/08/27 By shiun--(S)
   DEFINE tran_master RECORD
                    wc  STRING
                    END RECORD
   DEFINE l_tran      STRING
   DEFINE ls_js2      STRING
   DEFINE l_cnt   LIKE type_t.num5
   #add--2015/08/27 By shiun--(E) 
   DEFINE l_amount  LIKE xmdl_t.xmdl018  #160122-00020#1   
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"

   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL axmt600_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
                                                                        
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
                                    
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
 
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_xmdk_m.* TO NULL
         CALL g_xmdl_d.clear()
         CALL g_xmdl2_d.clear()
         CALL g_xmdl3_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL axmt600_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL axmt600_fetch('') # reload data
               LET l_ac = 1
               CALL axmt600_ui_detailshow() #Setting the current row 
         
               CALL axmt600_idx_chk()
               #NEXT FIELD xmdlseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_xmdl_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axmt600_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1','2',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"

               #單身Action隱藏
               CALL axmt600_detail_action_hidden(l_ac)

               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1','2',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL axmt600_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"

               #單身Action隱藏
               CALL axmt600_detail_action_hidden(l_ac)

               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION axmt600_call_axmt540_01
            LET g_action_choice="axmt600_call_axmt540_01"
            IF cl_auth_chk_act("axmt600_call_axmt540_01") THEN
               
               #add-point:ON ACTION axmt600_call_axmt540_01 name="menu.detail_show.page1.axmt600_call_axmt540_01"
               
               CALL axmt600_call_axmt540_01()
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION detail_qrystr
               MENU "" ATTRIBUTE(STYLE="popup")
                  #add-point:ON ACTION detail_qrystr相關動作 name="menu.detail_show.page1_sub.detail_qrystr"
                  BEFORE MENU
                     IF cl_null(g_xmdl_d[l_ac].xmdl001) THEN
                        HIDE OPTION "prog_axmt540"
                     END IF
                     IF cl_null(g_xmdl_d[l_ac].xmdl003) THEN
                        HIDE OPTION "prog_axmt500"
                     END IF
                     IF cl_null(g_xmdl_d[l_ac].xmdl001) AND cl_null(g_xmdl_d[l_ac].xmdl003) THEN
                        EXIT MENU
                     END IF
                  #END add-point
                                 #應用 a43 樣板自動產生(Version:4)
               ON ACTION prog_axmt540
                  LET g_action_choice="prog_axmt540"
                  IF cl_auth_chk_act("prog_axmt540") THEN
                     
                     #add-point:ON ACTION prog_axmt540 name="menu.detail_show.page1_sub.prog_axmt540"
               #應用 a41 樣板自動產生(Version:2)
               #使用JSON格式組合參數與作業編號(串查)
               CALL axmt600_qrystr(g_xmdl_d[l_ac].xmdl001)
                     #END add-point
                     
                  END IF
 
 
 
               #應用 a43 樣板自動產生(Version:4)
               ON ACTION prog_axmt500
                  LET g_action_choice="prog_axmt500"
                  IF cl_auth_chk_act("prog_axmt500") THEN
                     
                     #add-point:ON ACTION prog_axmt500 name="menu.detail_show.page1_sub.prog_axmt500"
               #應用 a41 樣板自動產生(Version:2)
               #使用JSON格式組合參數與作業編號(串查)
               CALL axmt600_qrystr(g_xmdl_d[l_ac].xmdl003)
                     #END add-point
                     
                  END IF
 
 
 
 
               END MENU
 
 
 
               #add-point:ON ACTION detail_qrystr name="menu.detail_show.page1.detail_qrystr"

               #END add-point
 
 
 
 
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
                                                                                                            
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_xmdl2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axmt600_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[2] = l_ac
               CALL g_idx_group.addAttribute("'3',",l_ac)
               
               #add-point:page2, before row動作 name="ui_dialog.body2.before_row"

               #單身Action隱藏
               CALL axmt600_detail_action_hidden(l_ac)

               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL axmt600_idx_chk()
               #add-point:page2自定義行為 name="ui_dialog.body2.before_display"

               CALL axmt600_show()
               
               #單身Action隱藏
               CALL axmt600_detail_action_hidden(l_ac)

               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION axmt600_call_axmt540_01
            LET g_action_choice="axmt600_call_axmt540_01"
            IF cl_auth_chk_act("axmt600_call_axmt540_01") THEN
               
               #add-point:ON ACTION axmt600_call_axmt540_01 name="menu.detail_show.page2.axmt600_call_axmt540_01"

               CALL axmt600_call_axmt540_01()

               #END add-point
               
            END IF
 
 
 
 
         
            #add-point:page2自定義行為 name="ui_dialog.body2.action"
                                                                                                            
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_xmdl3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axmt600_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[3] = l_ac
               CALL g_idx_group.addAttribute("",l_ac)
               
               #add-point:page3, before row動作 name="ui_dialog.body3.before_row"
                                                                                                                                       
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue(""))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
               #顯示單身筆數
               CALL axmt600_idx_chk()
               #add-point:page3自定義行為 name="ui_dialog.body3.before_display"

               CALL axmt600_show()

               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION s_lot_sel
            LET g_action_choice="s_lot_sel"
            IF cl_auth_chk_act("s_lot_sel") THEN
               
               #add-point:ON ACTION s_lot_sel name="menu.detail_show.page3.s_lot_sel"
               #150821-xianghui-b
               IF cl_null(g_detail_idx) OR g_detail_idx = 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abm-00073'
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  EXIT DIALOG
               END IF
               
               IF g_xmdk_m.xmdkstus <> 'N' THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apm-00035'
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  EXIT DIALOG
               END IF
               
               IF NOT cl_null(g_xmdk_m.xmdkdocno) AND
                  NOT cl_null(g_xmdl3_d[g_detail_idx].xmdmseq) AND
                  NOT cl_null(g_xmdl3_d[g_detail_idx].xmdmseq1) AND
                  NOT cl_null(g_xmdl3_d[g_detail_idx].xmdm001) AND
                  NOT cl_null(g_xmdl3_d[g_detail_idx].xmdm008) AND
                  NOT cl_null(g_xmdl3_d[g_detail_idx].xmdm009) THEN
                  LET l_success = ''
                  CALL s_transaction_begin()
                 #IF s_lot_batch_number(g_xmdl3_d[g_detail_idx].xmdm001,g_site) THEN   #160122-00020#1 #160314-00008#1 mark
                  IF s_lot_batch_number_1n3(g_xmdl3_d[g_detail_idx].xmdm001,g_site) THEN               #160314-00008#1 add
                     IF NOT cl_null(g_xmdl_d[g_detail_idx].xmdl001) THEN 
                        CALL s_axmt540_inao_copy(g_xmdl_d[g_detail_idx].xmdl001,g_xmdl_d[g_detail_idx].xmdl002,'2','','','','',g_xmdk_m.xmdkdocno,g_xmdl_d[g_detail_idx].xmdlseq,g_xmdl3_d[g_detail_idx].xmdmseq1,'3','N','1') RETURNING l_success                                    
                        CALL s_lot_sel('2','2',g_site,g_xmdk_m.xmdkdocno,g_xmdl3_d[g_detail_idx].xmdmseq,g_xmdl3_d[g_detail_idx].xmdmseq1,g_xmdl3_d[g_detail_idx].xmdm001,g_xmdl3_d[g_detail_idx].xmdm002,g_xmdl3_d[g_detail_idx].xmdm033,g_xmdl3_d[g_detail_idx].xmdm005,g_xmdl3_d[g_detail_idx].xmdm006,g_xmdl3_d[g_detail_idx].xmdm007,g_xmdl3_d[g_detail_idx].xmdm008,g_xmdl3_d[g_detail_idx].xmdm009,'1',g_prog,'','','','',0)
                             RETURNING l_success                  
                        IF l_success THEN   
                           CALL s_axmt540_update_inao(g_xmdk_m.xmdkdocno,g_xmdl3_d[g_detail_idx].xmdmseq,g_xmdl3_d[g_detail_idx].xmdmseq1,g_xmdl_d[g_detail_idx].xmdl001,g_xmdl_d[g_detail_idx].xmdl002,'1','3') RETURNING l_success  
                        END IF
                        #刪除申請資料                              
                        DELETE FROM inao_t 
                         WHERE inaoent = g_enterprise 
                           AND inaosite = g_site
                           AND inaodocno = g_xmdk_m.xmdkdocno
                           AND inaoseq = g_xmdl3_d[g_detail_idx].xmdmseq
                           AND inaoseq1 = g_xmdl3_d[g_detail_idx].xmdmseq1
                           AND inao000 = '1'
                           AND inao013 = '1'
                     ELSE   
                        #160122-00020#1-b                    
                        CALL s_lot_ins(g_site,g_xmdk_m.xmdkdocno,
                                       #目的單據項次                    目的單據項序(若單據沒有到項序層則此參數固定傳0)
                                       g_xmdl3_d[g_detail_idx].xmdmseq,g_xmdl3_d[g_detail_idx].xmdmseq1,
                                       #料件編號                        產品特徵
                                       g_xmdl3_d[g_detail_idx].xmdm001,g_xmdl3_d[g_detail_idx].xmdm002,
                                       #交易單位                      交易數量                 
                                       g_xmdl3_d[g_detail_idx].xmdm008,g_xmdl3_d[g_detail_idx].xmdm009,
                                       '2',g_xmdk_m.xmdk007,'2','',g_xmdl3_d[g_detail_idx].xmdm005,
                                       g_xmdl3_d[g_detail_idx].xmdm006,g_xmdl3_d[g_detail_idx].xmdm007,
                                       g_xmdl3_d[g_detail_idx].xmdm033    
                                       )           #160316-00007#4 add  xmdm033
                             RETURNING l_success,l_amount  
                        #160122-00020#1-e                             
                     END IF
                  END IF   #160122-00020#1                     
                  IF l_success THEN
                     CALL s_transaction_end('Y','0')
                  ELSE
                     CALL s_transaction_end('N','0')
                  END IF
               END IF
               #150821-xianghui-e
               #END add-point
               
            END IF
 
 
 
 
         
            #add-point:page3自定義行為 name="ui_dialog.body3.action"
                                                                                                            
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         SUBDIALOG sub_s_lot.s_lot_display                                                                         
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL axmt600_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL axmt600_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL axmt600_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL axmt600_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            
            #150721-00001#1  2016/01/08 By earl mod s
            CALL axmt600_set_act_visible()
            CALL axmt600_set_act_no_visible()
            #150721-00001#1  2016/01/08 By earl mod e
            
            #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL axmt600_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL axmt600_set_act_visible()   
            CALL axmt600_set_act_no_visible()
            IF NOT (g_xmdk_m.xmdkdocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " xmdkent = '" ||g_enterprise|| "' AND",
                                  " xmdkdocno = '", g_xmdk_m.xmdkdocno, "' "
 
               #填到對應位置
               CALL axmt600_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:3)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status name="menu.bpm_status"

            #END add-point
 
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "xmdk_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmdl_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmdm_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
                  OR NOT cl_null(g_wc2_table2)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL axmt600_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "xmdk_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmdl_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmdm_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
                  OR NOT cl_null(g_wc2_table2)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL axmt600_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL axmt600_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:4)
            #過濾瀏覽頁資料
            ON ACTION filter
               LET g_action_choice = "fetch"
               #add-point:filter action name="ui_dialog.action.filter"

               #end add-point
               CALL axmt600_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL axmt600_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt600_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL axmt600_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt600_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL axmt600_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt600_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL axmt600_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt600_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL axmt600_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt600_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_xmdl_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_xmdl2_d)
                  LET g_export_id[2]   = "s_detail2"
                  LET g_export_node[3] = base.typeInfo.create(g_xmdl3_d)
                 #LET g_export_id[3]   = "s_detail3"            #160531-00018#2 mark
                  LET g_export_id[3]   = "s_detail1_s_lot_s01"  #160531-00018#2                  
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"

                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD xmdlseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION axmt600_gen_order
            LET g_action_choice="axmt600_gen_order"
            IF cl_auth_chk_act("axmt600_gen_order") THEN
               
               #add-point:ON ACTION axmt600_gen_order name="menu.axmt600_gen_order"
               CALL s_transaction_begin()
               
               CALL s_axmt600_gen_order(g_xmdk_m.xmdkdocno) RETURNING l_success,l_xmdadocno
               
               IF l_success THEN
                  CALL s_transaction_end('Y','0')
                  
                  #150617---earl---mod---s
                  #CALL cl_ask_confirm3('axm-00501',l_xmdadocno)
                  CALL axmt600_qrystr(l_xmdadocno)
                  #150617---earl---mod---e
                  
               ELSE
                  CALL s_transaction_end('N','0')
               END IF
               
               
               CALL axmt600_set_act_visible()
               CALL axmt600_set_act_no_visible()
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION axmt600_show_price
            LET g_action_choice="axmt600_show_price"
            IF cl_auth_chk_act("axmt600_show_price") THEN
               
               #add-point:ON ACTION axmt600_show_price name="menu.axmt600_show_price"

               CALL cl_set_comp_visible("page_7",TRUE)

               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL axmt600_modify()
               #add-point:ON ACTION modify name="menu.modify"
                                                                                                                                       
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL axmt600_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
                                                                                                                                       
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL axmt600_delete()
               #add-point:ON ACTION delete name="menu.delete"
                                                                                                                                       
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL axmt600_insert()
               #add-point:ON ACTION insert name="menu.insert"
                                                                                                                                       
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_memo
            LET g_action_choice="open_memo"
            IF cl_auth_chk_act("open_memo") THEN
               
               #add-point:ON ACTION open_memo name="menu.open_memo"

               CALL aooi360_02('6',g_prog,g_xmdk_m.xmdkdocno,'','','','','','','','','4')

               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION aisp320_cmd
            LET g_action_choice="aisp320_cmd"
            IF cl_auth_chk_act("aisp320_cmd") THEN
               
               #add-point:ON ACTION aisp320_cmd name="menu.aisp320_cmd"
               #add--2015/08/27 By shiun--(S)
               IF NOT cl_null(g_xmdk_m.xmdkdocno) THEN
                  SELECT COUNT(*) INTO l_cnt 
                    FROM xmdl_t
                   WHERE xmdlent = g_enterprise 
                     AND xmdldocno = g_xmdk_m.xmdkdocno 
                     AND xmdl038 > 0
                  IF l_cnt = 0 THEN
                     LET tran_master.wc  = "xmdkdocno = '",g_xmdk_m.xmdkdocno,"' "
                     LET l_tran = util.JSON.stringify(tran_master)    #打包參數
                     
                     INITIALIZE la_param.* TO NULL
                     LET la_param.prog = 'aisp320'
                     LET la_param.param[1] = l_tran       #把打包的參數 放到cmd_run的第一個參數
                     LET la_param.background = 'N'
                     
                     LET ls_js2 = util.JSON.stringify(la_param)
                     
                     CALL cl_cmdrun_wait(ls_js2)
                  ELSE
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'axm-00711'   #已產生帳款單, 不可重覆執行！
                     LET g_errparam.extend = g_xmdk_m.xmdkdocno
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                  END IF
               END IF
               #add--2015/08/27 By shiun--(E)
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               LET g_rep_wc = " xmdkent = '",g_enterprise,"' AND xmdkdocno = '",g_xmdk_m.xmdkdocno,"' "
               #END add-point
               &include "erp/axm/axmt600_rep.4gl"
               #add-point:ON ACTION output.after

               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL axmt600_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
                                                                                                                                       
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL axmt600_query()
               #add-point:ON ACTION query name="menu.query"
                                                                                                                                       
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
               CALL g_curr_diag.setCurrentRow("s_detail3",1)
 
 
 
 
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION axmt600_modify_price
            LET g_action_choice="axmt600_modify_price"
            IF cl_auth_chk_act("axmt600_modify_price") THEN
               
               #add-point:ON ACTION axmt600_modify_price name="menu.axmt600_modify_price"
               #150812--polly--add--(s) 
               IF g_xmdk_m.xmdkstus = 'S' THEN
                  #更新信用餘額檔(反向)
                  CALL s_transaction_begin()                      
                  IF s_axmt600_credit('2',g_xmdk_m.xmdkdocno) THEN                                                
                     CALL s_transaction_end('Y','0')
                  ELSE   
                     CALL s_transaction_end('N','0')
                  END IF
               END IF            
               #150812--polly--add--(e)                
               CALL axmt600_modify_price()
               #150812--polly--add--(s) 
               IF g_xmdk_m.xmdkstus = 'S' THEN
                  #更新信用餘額檔(正向)
                  CALL s_transaction_begin()                      
                  IF s_axmt600_credit('1',g_xmdk_m.xmdkdocno) THEN                                                
                     CALL s_transaction_end('Y','0')
                  ELSE   
                     CALL s_transaction_end('N','0')
                  END IF
               END IF            
               #150812--polly--add--(e)                
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION prog_xmdk003
            LET g_action_choice="prog_xmdk003"
            IF cl_auth_chk_act("prog_xmdk003") THEN
               
               #add-point:ON ACTION prog_xmdk003 name="menu.prog_xmdk003"
               CALL cl_user_contact("aooi130", "ooag_t", "ooag002", "ooag001",g_xmdk_m.xmdk003)
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION prog_xmdk005
            LET g_action_choice="prog_xmdk005"
            IF cl_auth_chk_act("prog_xmdk005") THEN
               
               #add-point:ON ACTION prog_xmdk005 name="menu.prog_xmdk005"
               #應用 a41 樣板自動產生(Version:2)
               #使用JSON格式組合參數與作業編號(串查)
               CALL axmt600_qrystr(g_xmdk_m.xmdk005)
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION prog_xmdk006
            LET g_action_choice="prog_xmdk006"
            IF cl_auth_chk_act("prog_xmdk006") THEN
               
               #add-point:ON ACTION prog_xmdk006 name="menu.prog_xmdk006"
               #應用 a41 樣板自動產生(Version:2)
               #使用JSON格式組合參數與作業編號(串查)
               CALL axmt600_qrystr(g_xmdk_m.xmdk006)
               #END add-point
               
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL axmt600_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"

               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL axmt600_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"

            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL axmt600_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"

            #END add-point
            CALL cl_user_overview_follow(g_xmdk_m.xmdkdocdt)
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
 
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
 
{</section>}
 
{<section id="axmt600.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION axmt600_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
                           
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   
   #6.銷退單
   LET l_wc = l_wc, " AND xmdksite = '",g_site,"'",
                    " AND xmdk000 = '6'"
   #160510-00043#2--(S)
   IF NOT cl_null(g_slip_wc) THEN
      LET l_wc = l_wc," AND ",g_slip_wc
   END IF   
   #160510-00043#2--(E)
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT xmdkdocno ",
                      " FROM xmdk_t ",
                      " ",
                      " LEFT JOIN xmdl_t ON xmdlent = xmdkent AND xmdkdocno = xmdldocno ", "  ",
                      #add-point:browser_fill段sql(xmdl_t1) name="browser_fill.cnt.join.}"
                      " LEFT JOIN xmda_t ON xmdaent = xmdkent AND xmdadocno = xmdl003 ",      #150120新增"客戶訂單號碼"  earl
                      #end add-point
                      " LEFT JOIN xmdm_t ON xmdment = xmdkent AND xmdkdocno = xmdmdocno", "  ",
                      #add-point:browser_fill段sql(xmdm_t1) name="browser_fill.cnt.join.xmdm_t1"
                      " AND xmdmseq = xmdlseq ",
                      #end add-point
 
 
 
                      " ", 
                      " ", 
                      " WHERE xmdkent = '" ||g_enterprise|| "' AND xmdlent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("xmdk_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT xmdkdocno ",
                      " FROM xmdk_t ", 
                      "  ",
                      "  ",
                      " WHERE xmdkent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("xmdk_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
 
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_xmdk_m.* TO NULL
      CALL g_xmdl_d.clear()        
      CALL g_xmdl2_d.clear() 
      CALL g_xmdl3_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.xmdkdocno,t0.xmdk001,t0.xmdk003,t0.xmdk004,t0.xmdk005,t0.xmdk007,t0.xmdk008,t0.xmdk009 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.xmdkstus,t0.xmdkdocno,t0.xmdk001,t0.xmdk003,t0.xmdk004,t0.xmdk005, 
          t0.xmdk007,t0.xmdk008,t0.xmdk009,t1.ooag011 ,t2.ooefl003 ,t3.pmaal004 ,t4.pmaal004 ,t5.pmaal004 ", 
 
                  " FROM xmdk_t t0",
                  "  ",
                  "  LEFT JOIN xmdl_t ON xmdlent = xmdkent AND xmdkdocno = xmdldocno ", "  ", 
                  #add-point:browser_fill段sql(xmdl_t1) name="browser_fill.join.xmdl_t1"
               "  LEFT JOIN xmda_t ON xmdaent = xmdkent AND xmdadocno = xmdl003 ",      #150120新增"客戶訂單號碼"  earl
                  #end add-point
                  "  LEFT JOIN xmdm_t ON xmdment = xmdkent AND xmdkdocno = xmdmdocno", "  ", 
                  #add-point:browser_fill段sql(xmdm_t1) name="browser_fill.join.xmdm_t1"
               " AND xmdmseq = xmdlseq ",
                  #end add-point
 
 
 
                  "  ",
                                 " LEFT JOIN ooag_t t1 ON t1.ooagent='"||g_enterprise||"' AND t1.ooag001=t0.xmdk003  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=t0.xmdk004 AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t3 ON t3.pmaalent='"||g_enterprise||"' AND t3.pmaal001=t0.xmdk007 AND t3.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t4 ON t4.pmaalent='"||g_enterprise||"' AND t4.pmaal001=t0.xmdk008 AND t4.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t5 ON t5.pmaalent='"||g_enterprise||"' AND t5.pmaal001=t0.xmdk009 AND t5.pmaal002='"||g_dlang||"' ",
 
                  " WHERE t0.xmdkent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("xmdk_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.xmdkstus,t0.xmdkdocno,t0.xmdk001,t0.xmdk003,t0.xmdk004,t0.xmdk005, 
          t0.xmdk007,t0.xmdk008,t0.xmdk009,t1.ooag011 ,t2.ooefl003 ,t3.pmaal004 ,t4.pmaal004 ,t5.pmaal004 ", 
 
                  " FROM xmdk_t t0",
                  "  ",
                                 " LEFT JOIN ooag_t t1 ON t1.ooagent='"||g_enterprise||"' AND t1.ooag001=t0.xmdk003  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=t0.xmdk004 AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t3 ON t3.pmaalent='"||g_enterprise||"' AND t3.pmaal001=t0.xmdk007 AND t3.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t4 ON t4.pmaalent='"||g_enterprise||"' AND t4.pmaal001=t0.xmdk008 AND t4.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t5 ON t5.pmaalent='"||g_enterprise||"' AND t5.pmaal001=t0.xmdk009 AND t5.pmaal002='"||g_dlang||"' ",
 
                  " WHERE t0.xmdkent = '" ||g_enterprise|| "' AND ",l_wc, cl_sql_add_filter("xmdk_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   
   #end add-point
   LET g_sql = g_sql, " ORDER BY xmdkdocno ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
                           
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"xmdk_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
                           
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_xmdkdocno,g_browser[g_cnt].b_xmdk001, 
          g_browser[g_cnt].b_xmdk003,g_browser[g_cnt].b_xmdk004,g_browser[g_cnt].b_xmdk005,g_browser[g_cnt].b_xmdk007, 
          g_browser[g_cnt].b_xmdk008,g_browser[g_cnt].b_xmdk009,g_browser[g_cnt].b_xmdk003_desc,g_browser[g_cnt].b_xmdk004_desc, 
          g_browser[g_cnt].b_xmdk007_desc,g_browser[g_cnt].b_xmdk008_desc,g_browser[g_cnt].b_xmdk009_desc 
 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
                                                      
         #end add-point
      
         #遮罩相關處理
         CALL axmt600_browser_mask()
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "S"
            LET g_browser[g_cnt].b_statepic = "stus/16/posted.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "UH"
            LET g_browser[g_cnt].b_statepic = "stus/16/unhold.png"
         WHEN "H"
            LET g_browser[g_cnt].b_statepic = "stus/16/hold.png"
         WHEN "Z"
            LET g_browser[g_cnt].b_statepic = "stus/16/unposted.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_xmdkdocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
                           
   #end add-point   
 
END FUNCTION
 
{</section>}
 
{<section id="axmt600.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION axmt600_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
                           
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_xmdk_m.xmdkdocno = g_browser[g_current_idx].b_xmdkdocno   
 
   EXECUTE axmt600_master_referesh USING g_xmdk_m.xmdkdocno INTO g_xmdk_m.xmdk000,g_xmdk_m.xmdksite, 
       g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001,g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdkstus, 
       g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk007,g_xmdk_m.xmdk009,g_xmdk_m.xmdk008,g_xmdk_m.xmdk202, 
       g_xmdk_m.xmdk045,g_xmdk_m.xmdk082,g_xmdk_m.xmdk030,g_xmdk_m.xmdk054,g_xmdk_m.xmdk010,g_xmdk_m.xmdk011, 
       g_xmdk_m.xmdk012,g_xmdk_m.xmdk013,g_xmdk_m.xmdk014,g_xmdk_m.xmdk015,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017, 
       g_xmdk_m.xmdk084,g_xmdk_m.xmdk018,g_xmdk_m.xmdk041,g_xmdk_m.xmdk037,g_xmdk_m.xmdk042,g_xmdk_m.xmdk043, 
       g_xmdk_m.xmdk031,g_xmdk_m.xmdk033,g_xmdk_m.xmdk085,g_xmdk_m.xmdk086,g_xmdk_m.xmdk087,g_xmdk_m.xmdk044, 
       g_xmdk_m.xmdk035,g_xmdk_m.xmdk046,g_xmdk_m.xmdk036,g_xmdk_m.xmdk083,g_xmdk_m.xmdkownid,g_xmdk_m.xmdkowndp, 
       g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtdp,g_xmdk_m.xmdkcrtdt,g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmoddt, 
       g_xmdk_m.xmdkcnfid,g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid,g_xmdk_m.xmdkpstdt,g_xmdk_m.xmdk003_desc, 
       g_xmdk_m.xmdk004_desc,g_xmdk_m.xmdk007_desc,g_xmdk_m.xmdk009_desc,g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk202_desc, 
       g_xmdk_m.xmdk030_desc,g_xmdk_m.xmdk010_desc,g_xmdk_m.xmdk011_desc,g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdkownid_desc, 
       g_xmdk_m.xmdkowndp_desc,g_xmdk_m.xmdkcrtid_desc,g_xmdk_m.xmdkcrtdp_desc,g_xmdk_m.xmdkmodid_desc, 
       g_xmdk_m.xmdkcnfid_desc,g_xmdk_m.xmdkpstid_desc
   
   CALL axmt600_xmdk_t_mask()
   CALL axmt600_show()
      
END FUNCTION
 
{</section>}
 
{<section id="axmt600.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION axmt600_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
                           
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
                           
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
                           
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="axmt600.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION axmt600_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
                      
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_xmdkdocno = g_xmdk_m.xmdkdocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="axmt600.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION axmt600_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"

   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
#   DEFINE l_gzcb004   LIKE gzcb_t.gzcb004  #160705-00001 by whitney mark
   DEFINE l_success   LIKE type_t.num5
   DEFINE l_ooef019   LIKE ooef_t.ooef019
   DEFINE l_form_wc   STRING    #150120新增"客戶訂單號碼"  earl
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"

   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_xmdk_m.* TO NULL
   CALL g_xmdl_d.clear()        
   CALL g_xmdl2_d.clear() 
   CALL g_xmdl3_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
                           
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON xmdk000,xmdksite,xmdkdocno,xmdkdocdt,xmdk001,xmdk003,xmdk004,xmdkstus, 
          xmdk005,xmdk006,xmdk007,xmdk009,xmdk008,xmdk202,xmdk045,xmdk082,xmdk030,xmdk054,xmdk010,xmdk011, 
          xmdk012,xmdk012_desc,xmdk013,xmdk014,xmdk015,xmdk015_desc,xmdk016,xmdk017,xmdk084,xmdk018, 
          xmdk041,xmdk037,xmdk042,xmdk043,xmdk031,xmdk033,xmdk085,xmdk086,xmdk087,xmdk044,xmdk035,xmdk046, 
          xmdk036,xmdk083,xmdkownid,xmdkowndp,xmdkcrtid,xmdkcrtdp,xmdkcrtdt,xmdkmodid,xmdkmoddt,xmdkcnfid, 
          xmdkcnfdt,xmdkpstid,xmdkpstdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
                                                                                                            
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<xmdkcrtdt>>----
         AFTER FIELD xmdkcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<xmdkmoddt>>----
         AFTER FIELD xmdkmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmdkcnfdt>>----
         AFTER FIELD xmdkcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmdkpstdt>>----
         AFTER FIELD xmdkpstdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
 
            
         #一般欄位開窗相關處理    
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk000
            #add-point:BEFORE FIELD xmdk000 name="construct.b.xmdk000"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk000
            
            #add-point:AFTER FIELD xmdk000 name="construct.a.xmdk000"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk000
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk000
            #add-point:ON ACTION controlp INFIELD xmdk000 name="construct.c.xmdk000"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdksite
            #add-point:BEFORE FIELD xmdksite name="construct.b.xmdksite"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdksite
            
            #add-point:AFTER FIELD xmdksite name="construct.a.xmdksite"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdksite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdksite
            #add-point:ON ACTION controlp INFIELD xmdksite name="construct.c.xmdksite"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.xmdkdocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdkdocno
            #add-point:ON ACTION controlp INFIELD xmdkdocno name="construct.c.xmdkdocno"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			
			   LET g_qryparam.arg1 = '6'   #銷退單
			   #160510-00043#2--(S)
            IF NOT cl_null(g_slip_wc) THEN
               LET g_qryparam.where = g_slip_wc
            END IF   
            #160510-00043#2--(E)
            CALL q_xmdkdocno_8()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdkdocno  #顯示到畫面上

            NEXT FIELD xmdkdocno                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdkdocno
            #add-point:BEFORE FIELD xmdkdocno name="construct.b.xmdkdocno"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdkdocno
            
            #add-point:AFTER FIELD xmdkdocno name="construct.a.xmdkdocno"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdkdocdt
            #add-point:BEFORE FIELD xmdkdocdt name="construct.b.xmdkdocdt"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdkdocdt
            
            #add-point:AFTER FIELD xmdkdocdt name="construct.a.xmdkdocdt"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdkdocdt
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdkdocdt
            #add-point:ON ACTION controlp INFIELD xmdkdocdt name="construct.c.xmdkdocdt"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk001
            #add-point:BEFORE FIELD xmdk001 name="construct.b.xmdk001"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk001
            
            #add-point:AFTER FIELD xmdk001 name="construct.a.xmdk001"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk001
            #add-point:ON ACTION controlp INFIELD xmdk001 name="construct.c.xmdk001"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.xmdk003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk003
            #add-point:ON ACTION controlp INFIELD xmdk003 name="construct.c.xmdk003"
            
            #此段落由子樣板a08產生
            #開窗c段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk003  #顯示到畫面上

            NEXT FIELD xmdk003                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk003
            #add-point:BEFORE FIELD xmdk003 name="construct.b.xmdk003"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk003
            
            #add-point:AFTER FIELD xmdk003 name="construct.a.xmdk003"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk004
            #add-point:ON ACTION controlp INFIELD xmdk004 name="construct.c.xmdk004"
            
            #此段落由子樣板a08產生
            #開窗c段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
		   	LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk004  #顯示到畫面上

            NEXT FIELD xmdk004                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk004
            #add-point:BEFORE FIELD xmdk004 name="construct.b.xmdk004"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk004
            
            #add-point:AFTER FIELD xmdk004 name="construct.a.xmdk004"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdkstus
            #add-point:BEFORE FIELD xmdkstus name="construct.b.xmdkstus"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdkstus
            
            #add-point:AFTER FIELD xmdkstus name="construct.a.xmdkstus"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdkstus
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdkstus
            #add-point:ON ACTION controlp INFIELD xmdkstus name="construct.c.xmdkstus"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.xmdk005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk005
            #add-point:ON ACTION controlp INFIELD xmdk005 name="construct.c.xmdk005"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE

            CALL q_xmdkdocno_7()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk005  #顯示到畫面上

            NEXT FIELD xmdk005                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk005
            #add-point:BEFORE FIELD xmdk005 name="construct.b.xmdk005"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk005
            
            #add-point:AFTER FIELD xmdk005 name="construct.a.xmdk005"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk006
            #add-point:ON ACTION controlp INFIELD xmdk006 name="construct.c.xmdk006"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
		   	LET g_qryparam.reqry = FALSE
            CALL q_xmdadocno_2()                   #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk006  #顯示到畫面上

            NEXT FIELD xmdk006                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk006
            #add-point:BEFORE FIELD xmdk006 name="construct.b.xmdk006"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk006
            
            #add-point:AFTER FIELD xmdk006 name="construct.a.xmdk006"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk007
            #add-point:ON ACTION controlp INFIELD xmdk007 name="construct.c.xmdk007"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE 
            #ming 20141120 add ----------------------------(S) 
            LET g_qryparam.arg1 = g_site
            #ming 20141120 add ----------------------------(E) 
            CALL q_pmaa001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk007  #顯示到畫面上

            NEXT FIELD xmdk007                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk007
            #add-point:BEFORE FIELD xmdk007 name="construct.b.xmdk007"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk007
            
            #add-point:AFTER FIELD xmdk007 name="construct.a.xmdk007"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk009
            #add-point:ON ACTION controlp INFIELD xmdk009 name="construct.c.xmdk009"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE 
            #ming 20141120 add -------------------------------(S) 
            LET g_qryparam.arg2 = g_site
            #ming 20141120 add -------------------------------(E) 
            CALL q_pmac002_6()                          #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk009  #顯示到畫面上

            NEXT FIELD xmdk009                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk009
            #add-point:BEFORE FIELD xmdk009 name="construct.b.xmdk009"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk009
            
            #add-point:AFTER FIELD xmdk009 name="construct.a.xmdk009"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk008
            #add-point:ON ACTION controlp INFIELD xmdk008 name="construct.c.xmdk008"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            #ming 20141120 add -------------------------(S) 
            LET g_qryparam.arg2 = g_site
            #ming 20141120 add -------------------------(E) 
            
            CALL q_pmac002_5()
            
            DISPLAY g_qryparam.return1 TO xmdk008  #顯示到畫面上

            NEXT FIELD xmdk008                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk008
            #add-point:BEFORE FIELD xmdk008 name="construct.b.xmdk008"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk008
            
            #add-point:AFTER FIELD xmdk008 name="construct.a.xmdk008"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk202
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk202
            #add-point:ON ACTION controlp INFIELD xmdk202 name="construct.c.xmdk202"
    
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg2 = g_site
            CALL q_pmac002_7()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk202  #顯示到畫面上

            NEXT FIELD xmdk202                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk202
            #add-point:BEFORE FIELD xmdk202 name="construct.b.xmdk202"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk202
            
            #add-point:AFTER FIELD xmdk202 name="construct.a.xmdk202"

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk045
            #add-point:BEFORE FIELD xmdk045 name="construct.b.xmdk045"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk045
            
            #add-point:AFTER FIELD xmdk045 name="construct.a.xmdk045"

            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk045
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk045
            #add-point:ON ACTION controlp INFIELD xmdk045 name="construct.c.xmdk045"

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk082
            #add-point:BEFORE FIELD xmdk082 name="construct.b.xmdk082"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk082
            
            #add-point:AFTER FIELD xmdk082 name="construct.a.xmdk082"

            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk082
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk082
            #add-point:ON ACTION controlp INFIELD xmdk082 name="construct.c.xmdk082"

            #END add-point
 
 
         #Ctrlp:construct.c.xmdk030
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk030
            #add-point:ON ACTION controlp INFIELD xmdk030 name="construct.c.xmdk030"
            #此段落由子樣板a08產生
            #開窗c段
	   		INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
		   	LET g_qryparam.reqry = FALSE
			
		   	#160621-00003#3 20160627 modify by beckxie---S
			   #LET g_qryparam.arg1 = "275"
            #CALL q_oocq002()                           #呼叫開窗
            LET g_qryparam.arg1 = '1'
            CALL q_oojd001_1()
            #160621-00003#3 20160627 modify by beckxie---E
            
            DISPLAY g_qryparam.return1 TO xmdk030  #顯示到畫面上

            NEXT FIELD xmdk030                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk030
            #add-point:BEFORE FIELD xmdk030 name="construct.b.xmdk030"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk030
            
            #add-point:AFTER FIELD xmdk030 name="construct.a.xmdk030"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk054
            #add-point:BEFORE FIELD xmdk054 name="construct.b.xmdk054"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk054
            
            #add-point:AFTER FIELD xmdk054 name="construct.a.xmdk054"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk054
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk054
            #add-point:ON ACTION controlp INFIELD xmdk054 name="construct.c.xmdk054"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.xmdk010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk010
            #add-point:ON ACTION controlp INFIELD xmdk010 name="construct.c.xmdk010"
            
            #此段落由子樣板a08產生
            #開窗c段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			
   			LET g_qryparam.arg1 = g_xmdk_m.xmdk007
			
            CALL q_pmad002_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk010  #顯示到畫面上

            NEXT FIELD xmdk010                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk010
            #add-point:BEFORE FIELD xmdk010 name="construct.b.xmdk010"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk010
            
            #add-point:AFTER FIELD xmdk010 name="construct.a.xmdk010"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk011
            #add-point:ON ACTION controlp INFIELD xmdk011 name="construct.c.xmdk011"
            
            #此段落由子樣板a08產生
            #開窗c段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			
			   LET g_qryparam.arg1 = '238'
			
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk011  #顯示到畫面上

            NEXT FIELD xmdk011                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk011
            #add-point:BEFORE FIELD xmdk011 name="construct.b.xmdk011"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk011
            
            #add-point:AFTER FIELD xmdk011 name="construct.a.xmdk011"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk012
            #add-point:ON ACTION controlp INFIELD xmdk012 name="construct.c.xmdk012"
            
            #此段落由子樣板a08產生
            #開窗c段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			
			   LET g_qryparam.arg1 = g_site
			
            CALL q_oodb002_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk012  #顯示到畫面上

            NEXT FIELD xmdk012                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk012
            #add-point:BEFORE FIELD xmdk012 name="construct.b.xmdk012"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk012
            
            #add-point:AFTER FIELD xmdk012 name="construct.a.xmdk012"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk012_desc
            #add-point:BEFORE FIELD xmdk012_desc name="construct.b.xmdk012_desc"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk012_desc
            
            #add-point:AFTER FIELD xmdk012_desc name="construct.a.xmdk012_desc"

            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk012_desc
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk012_desc
            #add-point:ON ACTION controlp INFIELD xmdk012_desc name="construct.c.xmdk012_desc"

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk013
            #add-point:BEFORE FIELD xmdk013 name="construct.b.xmdk013"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk013
            
            #add-point:AFTER FIELD xmdk013 name="construct.a.xmdk013"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk013
            #add-point:ON ACTION controlp INFIELD xmdk013 name="construct.c.xmdk013"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk014
            #add-point:BEFORE FIELD xmdk014 name="construct.b.xmdk014"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk014
            
            #add-point:AFTER FIELD xmdk014 name="construct.a.xmdk014"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk014
            #add-point:ON ACTION controlp INFIELD xmdk014 name="construct.c.xmdk014"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.xmdk015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk015
            #add-point:ON ACTION controlp INFIELD xmdk015 name="construct.c.xmdk015"

            #取得稅區
            CALL s_tax_get_ooef019(g_site) RETURNING l_success,l_ooef019

            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			
			   LET g_qryparam.arg1 = l_ooef019     #稅區編號 
            LET g_qryparam.arg2 = '2'        #銷項
			
            CALL q_isac002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk015  #顯示到畫面上

            NEXT FIELD xmdk015                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk015
            #add-point:BEFORE FIELD xmdk015 name="construct.b.xmdk015"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk015
            
            #add-point:AFTER FIELD xmdk015 name="construct.a.xmdk015"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk015_desc
            #add-point:BEFORE FIELD xmdk015_desc name="construct.b.xmdk015_desc"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk015_desc
            
            #add-point:AFTER FIELD xmdk015_desc name="construct.a.xmdk015_desc"

            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk015_desc
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk015_desc
            #add-point:ON ACTION controlp INFIELD xmdk015_desc name="construct.c.xmdk015_desc"

            #END add-point
 
 
         #Ctrlp:construct.c.xmdk016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk016
            #add-point:ON ACTION controlp INFIELD xmdk016 name="construct.c.xmdk016"
            
            #此段落由子樣板a08產生
            #開窗c段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			
			   LET g_qryparam.arg1 = g_site
			
            CALL q_ooaj002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk016  #顯示到畫面上

            NEXT FIELD xmdk016                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk016
            #add-point:BEFORE FIELD xmdk016 name="construct.b.xmdk016"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk016
            
            #add-point:AFTER FIELD xmdk016 name="construct.a.xmdk016"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk017
            #add-point:BEFORE FIELD xmdk017 name="construct.b.xmdk017"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk017
            
            #add-point:AFTER FIELD xmdk017 name="construct.a.xmdk017"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk017
            #add-point:ON ACTION controlp INFIELD xmdk017 name="construct.c.xmdk017"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk084
            #add-point:BEFORE FIELD xmdk084 name="construct.b.xmdk084"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk084
            
            #add-point:AFTER FIELD xmdk084 name="construct.a.xmdk084"

            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk084
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk084
            #add-point:ON ACTION controlp INFIELD xmdk084 name="construct.c.xmdk084"

            #END add-point
 
 
         #Ctrlp:construct.c.xmdk018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk018
            #add-point:ON ACTION controlp INFIELD xmdk018 name="construct.c.xmdk018"
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
		   	LET g_qryparam.reqry = FALSE
            CALL q_xmah001()                          #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk018  #顯示到畫面上

            NEXT FIELD xmdk018                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk018
            #add-point:BEFORE FIELD xmdk018 name="construct.b.xmdk018"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk018
            
            #add-point:AFTER FIELD xmdk018 name="construct.a.xmdk018"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk041
            #add-point:BEFORE FIELD xmdk041 name="construct.b.xmdk041"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk041
            
            #add-point:AFTER FIELD xmdk041 name="construct.a.xmdk041"

            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk041
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk041
            #add-point:ON ACTION controlp INFIELD xmdk041 name="construct.c.xmdk041"

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk037
            #add-point:BEFORE FIELD xmdk037 name="construct.b.xmdk037"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk037
            
            #add-point:AFTER FIELD xmdk037 name="construct.a.xmdk037"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk037
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk037
            #add-point:ON ACTION controlp INFIELD xmdk037 name="construct.c.xmdk037"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk042
            #add-point:BEFORE FIELD xmdk042 name="construct.b.xmdk042"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk042
            
            #add-point:AFTER FIELD xmdk042 name="construct.a.xmdk042"

            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk042
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk042
            #add-point:ON ACTION controlp INFIELD xmdk042 name="construct.c.xmdk042"

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk043
            #add-point:BEFORE FIELD xmdk043 name="construct.b.xmdk043"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk043
            
            #add-point:AFTER FIELD xmdk043 name="construct.a.xmdk043"

            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk043
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk043
            #add-point:ON ACTION controlp INFIELD xmdk043 name="construct.c.xmdk043"

            #END add-point
 
 
         #Ctrlp:construct.c.xmdk031
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk031
            #add-point:ON ACTION controlp INFIELD xmdk031 name="construct.c.xmdk031"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			
			   LET g_qryparam.arg1 = "295"
			
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk031  #顯示到畫面上

            NEXT FIELD xmdk031                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk031
            #add-point:BEFORE FIELD xmdk031 name="construct.b.xmdk031"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk031
            
            #add-point:AFTER FIELD xmdk031 name="construct.a.xmdk031"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk033
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk033
            #add-point:ON ACTION controlp INFIELD xmdk033 name="construct.c.xmdk033"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			
			   LET g_qryparam.arg1 = '209'
			
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk033  #顯示到畫面上

            NEXT FIELD xmdk033                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk033
            #add-point:BEFORE FIELD xmdk033 name="construct.b.xmdk033"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk033
            
            #add-point:AFTER FIELD xmdk033 name="construct.a.xmdk033"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk085
            #add-point:BEFORE FIELD xmdk085 name="construct.b.xmdk085"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk085
            
            #add-point:AFTER FIELD xmdk085 name="construct.a.xmdk085"

            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk085
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk085
            #add-point:ON ACTION controlp INFIELD xmdk085 name="construct.c.xmdk085"

            #END add-point
 
 
         #Ctrlp:construct.c.xmdk086
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk086
            #add-point:ON ACTION controlp INFIELD xmdk086 name="construct.c.xmdk086"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            
            #CALL q_rmcadocno()                           #呼叫開窗
            #150616 mark 待q_rmcadocno過單
            
            DISPLAY g_qryparam.return1 TO xmdk086  #顯示到畫面上
            NEXT FIELD xmdk086                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk086
            #add-point:BEFORE FIELD xmdk086 name="construct.b.xmdk086"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk086
            
            #add-point:AFTER FIELD xmdk086 name="construct.a.xmdk086"

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk087
            #add-point:BEFORE FIELD xmdk087 name="construct.b.xmdk087"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk087
            
            #add-point:AFTER FIELD xmdk087 name="construct.a.xmdk087"

            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk087
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk087
            #add-point:ON ACTION controlp INFIELD xmdk087 name="construct.c.xmdk087"

            #END add-point
 
 
         #Ctrlp:construct.c.xmdk044
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk044
            #add-point:ON ACTION controlp INFIELD xmdk044 name="construct.c.xmdk044"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_icaa001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk044  #顯示到畫面上
            NEXT FIELD xmdk044                     #返回原欄位
    
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk044
            #add-point:BEFORE FIELD xmdk044 name="construct.b.xmdk044"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk044
            
            #add-point:AFTER FIELD xmdk044 name="construct.a.xmdk044"

            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk035
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk035
            #add-point:ON ACTION controlp INFIELD xmdk035 name="construct.c.xmdk035"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			
			   LET g_qryparam.arg1 = '6'   #140725
			
            CALL q_xmdk035()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk035  #顯示到畫面上

            NEXT FIELD xmdk035                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk035
            #add-point:BEFORE FIELD xmdk035 name="construct.b.xmdk035"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk035
            
            #add-point:AFTER FIELD xmdk035 name="construct.a.xmdk035"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk046
            #add-point:BEFORE FIELD xmdk046 name="construct.b.xmdk046"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk046
            
            #add-point:AFTER FIELD xmdk046 name="construct.a.xmdk046"

            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk046
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk046
            #add-point:ON ACTION controlp INFIELD xmdk046 name="construct.c.xmdk046"

            #END add-point
 
 
         #Ctrlp:construct.c.xmdk036
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk036
            #add-point:ON ACTION controlp INFIELD xmdk036 name="construct.c.xmdk036"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			
			   LET g_qryparam.arg1 = '6'   #140725
			
            CALL q_xmdk036()                           #呼叫開窗

            NEXT FIELD xmdk036                     #返回原欄位
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk036
            #add-point:BEFORE FIELD xmdk036 name="construct.b.xmdk036"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk036
            
            #add-point:AFTER FIELD xmdk036 name="construct.a.xmdk036"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk083
            #add-point:BEFORE FIELD xmdk083 name="construct.b.xmdk083"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk083
            
            #add-point:AFTER FIELD xmdk083 name="construct.a.xmdk083"

            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk083
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk083
            #add-point:ON ACTION controlp INFIELD xmdk083 name="construct.c.xmdk083"

            #END add-point
 
 
         #Ctrlp:construct.c.xmdkownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdkownid
            #add-point:ON ACTION controlp INFIELD xmdkownid name="construct.c.xmdkownid"
           
            #此段落由子樣板a08產生
            #開窗c段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
		   	LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdkownid  #顯示到畫面上

            NEXT FIELD xmdkownid                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdkownid
            #add-point:BEFORE FIELD xmdkownid name="construct.b.xmdkownid"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdkownid
            
            #add-point:AFTER FIELD xmdkownid name="construct.a.xmdkownid"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdkowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdkowndp
            #add-point:ON ACTION controlp INFIELD xmdkowndp name="construct.c.xmdkowndp"
            
            #此段落由子樣板a08產生
            #開窗c段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdkowndp  #顯示到畫面上

            NEXT FIELD xmdkowndp                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdkowndp
            #add-point:BEFORE FIELD xmdkowndp name="construct.b.xmdkowndp"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdkowndp
            
            #add-point:AFTER FIELD xmdkowndp name="construct.a.xmdkowndp"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdkcrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdkcrtid
            #add-point:ON ACTION controlp INFIELD xmdkcrtid name="construct.c.xmdkcrtid"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdkcrtid  #顯示到畫面上

            NEXT FIELD xmdkcrtid                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdkcrtid
            #add-point:BEFORE FIELD xmdkcrtid name="construct.b.xmdkcrtid"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdkcrtid
            
            #add-point:AFTER FIELD xmdkcrtid name="construct.a.xmdkcrtid"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdkcrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdkcrtdp
            #add-point:ON ACTION controlp INFIELD xmdkcrtdp name="construct.c.xmdkcrtdp"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdkcrtdp  #顯示到畫面上

            NEXT FIELD xmdkcrtdp                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdkcrtdp
            #add-point:BEFORE FIELD xmdkcrtdp name="construct.b.xmdkcrtdp"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdkcrtdp
            
            #add-point:AFTER FIELD xmdkcrtdp name="construct.a.xmdkcrtdp"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdkcrtdt
            #add-point:BEFORE FIELD xmdkcrtdt name="construct.b.xmdkcrtdt"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.xmdkmodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdkmodid
            #add-point:ON ACTION controlp INFIELD xmdkmodid name="construct.c.xmdkmodid"
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdkmodid  #顯示到畫面上

            NEXT FIELD xmdkmodid                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdkmodid
            #add-point:BEFORE FIELD xmdkmodid name="construct.b.xmdkmodid"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdkmodid
            
            #add-point:AFTER FIELD xmdkmodid name="construct.a.xmdkmodid"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdkmoddt
            #add-point:BEFORE FIELD xmdkmoddt name="construct.b.xmdkmoddt"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.xmdkcnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdkcnfid
            #add-point:ON ACTION controlp INFIELD xmdkcnfid name="construct.c.xmdkcnfid"
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdkcnfid  #顯示到畫面上

            NEXT FIELD xmdkcnfid                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdkcnfid
            #add-point:BEFORE FIELD xmdkcnfid name="construct.b.xmdkcnfid"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdkcnfid
            
            #add-point:AFTER FIELD xmdkcnfid name="construct.a.xmdkcnfid"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdkcnfdt
            #add-point:BEFORE FIELD xmdkcnfdt name="construct.b.xmdkcnfdt"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.xmdkpstid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdkpstid
            #add-point:ON ACTION controlp INFIELD xmdkpstid name="construct.c.xmdkpstid"
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdkpstid  #顯示到畫面上

            NEXT FIELD xmdkpstid                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdkpstid
            #add-point:BEFORE FIELD xmdkpstid name="construct.b.xmdkpstid"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdkpstid
            
            #add-point:AFTER FIELD xmdkpstid name="construct.a.xmdkpstid"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdkpstdt
            #add-point:BEFORE FIELD xmdkpstdt name="construct.b.xmdkpstdt"
                                                                                                            
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct #160512-00004#2-add-'xmdl058,xmdl057' 這兩個欄位
      CONSTRUCT g_wc2_table1 ON xmdlsite,xmdlseq,xmdl001,xmdl002,xmdl003,xmdl004,xmdl005,xmdl006,xmdl007, 
          xmdl008,xmdl009,xmdl009_desc,xmdl033,xmdl011,xmdl012,xmdl050,xmdl050_desc,xmdl094,xmdl095, 
          xmdl017,xmdl018,xmdl019,xmdl020,xmdl010,xmdl013,xmdl014,xmdl015,xmdl016,xmdl052,xmdl021,xmdl022, 
          xmdl023,xmdl041,xmdl030,xmdl031,xmdl032,xmdl058,xmdl057,xmdl051,xmdl088,xmdl048,xmdl049,xmdl024,xmdl025,xmdl026, 
          xmdl027,xmdl028,xmdl029,xmdl042,xmdl043,xmdl044,xmdl045,xmdl046,xmdl087
           FROM s_detail1[1].xmdlsite,s_detail1[1].xmdlseq,s_detail1[1].xmdl001,s_detail1[1].xmdl002, 
               s_detail1[1].xmdl003,s_detail1[1].xmdl004,s_detail1[1].xmdl005,s_detail1[1].xmdl006,s_detail1[1].xmdl007, 
               s_detail1[1].xmdl008,s_detail1[1].xmdl009,s_detail1[1].xmdl009_desc,s_detail1[1].xmdl033, 
               s_detail1[1].xmdl011,s_detail1[1].xmdl012,s_detail1[1].xmdl050,s_detail1[1].xmdl050_desc, 
               s_detail1[1].xmdl094,s_detail1[1].xmdl095,s_detail1[1].xmdl017,s_detail1[1].xmdl018,s_detail1[1].xmdl019, 
               s_detail1[1].xmdl020,s_detail1[1].xmdl010,s_detail1[1].xmdl013,s_detail1[1].xmdl014,s_detail1[1].xmdl015, 
               s_detail1[1].xmdl016,s_detail1[1].xmdl052,s_detail1[1].xmdl021,s_detail1[1].xmdl022,s_detail1[1].xmdl023, 
               s_detail1[1].xmdl041,s_detail1[1].xmdl030,s_detail1[1].xmdl031,s_detail1[1].xmdl032,s_detail1[1].xmdl058,
               s_detail1[1].xmdl057,s_detail1[1].xmdl051, 
               s_detail1[1].xmdl088,s_detail2[1].xmdl048,s_detail2[1].xmdl049,s_detail2[1].xmdl024,s_detail2[1].xmdl025, 
               s_detail2[1].xmdl026,s_detail2[1].xmdl027,s_detail2[1].xmdl028,s_detail2[1].xmdl029,s_detail2[1].xmdl042, 
               s_detail2[1].xmdl043,s_detail2[1].xmdl044,s_detail2[1].xmdl045,s_detail2[1].xmdl046,s_detail2[1].xmdl087 
 
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
                                                                                                            
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdlsite
            #add-point:BEFORE FIELD xmdlsite name="construct.b.page1.xmdlsite"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdlsite
            
            #add-point:AFTER FIELD xmdlsite name="construct.a.page1.xmdlsite"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdlsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdlsite
            #add-point:ON ACTION controlp INFIELD xmdlsite name="construct.c.page1.xmdlsite"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdlseq
            #add-point:BEFORE FIELD xmdlseq name="construct.b.page1.xmdlseq"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdlseq
            
            #add-point:AFTER FIELD xmdlseq name="construct.a.page1.xmdlseq"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdlseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdlseq
            #add-point:ON ACTION controlp INFIELD xmdlseq name="construct.c.page1.xmdlseq"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdl001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl001
            #add-point:ON ACTION controlp INFIELD xmdl001 name="construct.c.page1.xmdl001"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   
            CALL q_xmdkdocno_7()                   #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl001  #顯示到畫面上

            NEXT FIELD xmdl001                     #返回原欄位
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl001
            #add-point:BEFORE FIELD xmdl001 name="construct.b.page1.xmdl001"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl001
            
            #add-point:AFTER FIELD xmdl001 name="construct.a.page1.xmdl001"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl002
            #add-point:BEFORE FIELD xmdl002 name="construct.b.page1.xmdl002"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl002
            
            #add-point:AFTER FIELD xmdl002 name="construct.a.page1.xmdl002"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl002
            #add-point:ON ACTION controlp INFIELD xmdl002 name="construct.c.page1.xmdl002"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdl003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl003
            #add-point:ON ACTION controlp INFIELD xmdl003 name="construct.c.page1.xmdl003"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_xmdadocno_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl003  #顯示到畫面上

            NEXT FIELD xmdl003                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl003
            #add-point:BEFORE FIELD xmdl003 name="construct.b.page1.xmdl003"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl003
            
            #add-point:AFTER FIELD xmdl003 name="construct.a.page1.xmdl003"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl004
            #add-point:BEFORE FIELD xmdl004 name="construct.b.page1.xmdl004"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl004
            
            #add-point:AFTER FIELD xmdl004 name="construct.a.page1.xmdl004"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl004
            #add-point:ON ACTION controlp INFIELD xmdl004 name="construct.c.page1.xmdl004"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl005
            #add-point:BEFORE FIELD xmdl005 name="construct.b.page1.xmdl005"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl005
            
            #add-point:AFTER FIELD xmdl005 name="construct.a.page1.xmdl005"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl005
            #add-point:ON ACTION controlp INFIELD xmdl005 name="construct.c.page1.xmdl005"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl006
            #add-point:BEFORE FIELD xmdl006 name="construct.b.page1.xmdl006"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl006
            
            #add-point:AFTER FIELD xmdl006 name="construct.a.page1.xmdl006"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl006
            #add-point:ON ACTION controlp INFIELD xmdl006 name="construct.c.page1.xmdl006"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl007
            #add-point:BEFORE FIELD xmdl007 name="construct.b.page1.xmdl007"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl007
            
            #add-point:AFTER FIELD xmdl007 name="construct.a.page1.xmdl007"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl007
            #add-point:ON ACTION controlp INFIELD xmdl007 name="construct.c.page1.xmdl007"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdl008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl008
            #add-point:ON ACTION controlp INFIELD xmdl008 name="construct.c.page1.xmdl008"

            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_imaf001_15()                    #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl008  #顯示到畫面上

            NEXT FIELD xmdl008                     #返回原欄位
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl008
            #add-point:BEFORE FIELD xmdl008 name="construct.b.page1.xmdl008"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl008
            
            #add-point:AFTER FIELD xmdl008 name="construct.a.page1.xmdl008"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl009
            #add-point:ON ACTION controlp INFIELD xmdl009 name="construct.c.page1.xmdl009"

            #開窗c段
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
   			LET g_qryparam.reqry = FALSE
			
   			LET g_qryparam.arg1 = '6'   #140725
			
            CALL q_xmdl009()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl009  #顯示到畫面上

            NEXT FIELD xmdl009                    #返回原欄位
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl009
            #add-point:BEFORE FIELD xmdl009 name="construct.b.page1.xmdl009"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl009
            
            #add-point:AFTER FIELD xmdl009 name="construct.a.page1.xmdl009"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl009_desc
            #add-point:BEFORE FIELD xmdl009_desc name="construct.b.page1.xmdl009_desc"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl009_desc
            
            #add-point:AFTER FIELD xmdl009_desc name="construct.a.page1.xmdl009_desc"

            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl009_desc
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl009_desc
            #add-point:ON ACTION controlp INFIELD xmdl009_desc name="construct.c.page1.xmdl009_desc"

            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdl033
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl033
            #add-point:ON ACTION controlp INFIELD xmdl033 name="construct.c.page1.xmdl033"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_pmao004_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl033  #顯示到畫面上

            NEXT FIELD xmdl033                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl033
            #add-point:BEFORE FIELD xmdl033 name="construct.b.page1.xmdl033"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl033
            
            #add-point:AFTER FIELD xmdl033 name="construct.a.page1.xmdl033"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl011
            #add-point:ON ACTION controlp INFIELD xmdl011 name="construct.c.page1.xmdl011"
            
            #此段落由子樣板a08產生
            #開窗c段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			
			   LET g_qryparam.arg1 = '221'
			
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl011  #顯示到畫面上

            NEXT FIELD xmdl011                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl011
            #add-point:BEFORE FIELD xmdl011 name="construct.b.page1.xmdl011"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl011
            
            #add-point:AFTER FIELD xmdl011 name="construct.a.page1.xmdl011"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl012
            #add-point:BEFORE FIELD xmdl012 name="construct.b.page1.xmdl012"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl012
            
            #add-point:AFTER FIELD xmdl012 name="construct.a.page1.xmdl012"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl012
            #add-point:ON ACTION controlp INFIELD xmdl012 name="construct.c.page1.xmdl012"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdl050
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl050
            #add-point:ON ACTION controlp INFIELD xmdl050 name="construct.c.page1.xmdl050"
            
            #此段落由子樣板a08產生
            #開窗c段             
#160705-00001 by whitney mark start
#            LET l_gzcb004 = ''
#            SELECT gzcb004
#              INTO l_gzcb004
#              FROM gzcb_t
#             WHERE gzcb001 = '24'
#               AND gzcb002 = g_prog
#160705-00001 by whitney mark end
            
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			
			   LET g_qryparam.arg1 = g_gzcb004  #160705-00001 by whitney modify l_gzcb004 -> g_gzcb004
			
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl050  #顯示到畫面上

            NEXT FIELD xmdl050                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl050
            #add-point:BEFORE FIELD xmdl050 name="construct.b.page1.xmdl050"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl050
            
            #add-point:AFTER FIELD xmdl050 name="construct.a.page1.xmdl050"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl050_desc
            #add-point:BEFORE FIELD xmdl050_desc name="construct.b.page1.xmdl050_desc"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl050_desc
            
            #add-point:AFTER FIELD xmdl050_desc name="construct.a.page1.xmdl050_desc"

            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl050_desc
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl050_desc
            #add-point:ON ACTION controlp INFIELD xmdl050_desc name="construct.c.page1.xmdl050_desc"

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl094
            #add-point:BEFORE FIELD xmdl094 name="construct.b.page1.xmdl094"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl094
            
            #add-point:AFTER FIELD xmdl094 name="construct.a.page1.xmdl094"

            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl094
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl094
            #add-point:ON ACTION controlp INFIELD xmdl094 name="construct.c.page1.xmdl094"

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl095
            #add-point:BEFORE FIELD xmdl095 name="construct.b.page1.xmdl095"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl095
            
            #add-point:AFTER FIELD xmdl095 name="construct.a.page1.xmdl095"

            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl095
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl095
            #add-point:ON ACTION controlp INFIELD xmdl095 name="construct.c.page1.xmdl095"

            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdl017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl017
            #add-point:ON ACTION controlp INFIELD xmdl017 name="construct.c.page1.xmdl017"
            
            #此段落由子樣板a08產生
            #開窗c段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl017  #顯示到畫面上

            NEXT FIELD xmdl017                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl017
            #add-point:BEFORE FIELD xmdl017 name="construct.b.page1.xmdl017"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl017
            
            #add-point:AFTER FIELD xmdl017 name="construct.a.page1.xmdl017"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl018
            #add-point:BEFORE FIELD xmdl018 name="construct.b.page1.xmdl018"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl018
            
            #add-point:AFTER FIELD xmdl018 name="construct.a.page1.xmdl018"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl018
            #add-point:ON ACTION controlp INFIELD xmdl018 name="construct.c.page1.xmdl018"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdl019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl019
            #add-point:ON ACTION controlp INFIELD xmdl019 name="construct.c.page1.xmdl019"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl019  #顯示到畫面上

            NEXT FIELD xmdl019                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl019
            #add-point:BEFORE FIELD xmdl019 name="construct.b.page1.xmdl019"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl019
            
            #add-point:AFTER FIELD xmdl019 name="construct.a.page1.xmdl019"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl020
            #add-point:BEFORE FIELD xmdl020 name="construct.b.page1.xmdl020"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl020
            
            #add-point:AFTER FIELD xmdl020 name="construct.a.page1.xmdl020"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl020
            #add-point:ON ACTION controlp INFIELD xmdl020 name="construct.c.page1.xmdl020"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl010
            #add-point:BEFORE FIELD xmdl010 name="construct.b.page1.xmdl010"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl010
            
            #add-point:AFTER FIELD xmdl010 name="construct.a.page1.xmdl010"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl010
            #add-point:ON ACTION controlp INFIELD xmdl010 name="construct.c.page1.xmdl010"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl013
            #add-point:BEFORE FIELD xmdl013 name="construct.b.page1.xmdl013"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl013
            
            #add-point:AFTER FIELD xmdl013 name="construct.a.page1.xmdl013"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl013
            #add-point:ON ACTION controlp INFIELD xmdl013 name="construct.c.page1.xmdl013"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdl014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl014
            #add-point:ON ACTION controlp INFIELD xmdl014 name="construct.c.page1.xmdl014"
            
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
		      LET g_qryparam.reqry = FALSE
               
            #給予arg
            LET g_qryparam.arg1 = g_site
               
            CALL q_inaa001_4()                              #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl014  #顯示到畫面上

            NEXT FIELD xmdl014                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl014
            #add-point:BEFORE FIELD xmdl014 name="construct.b.page1.xmdl014"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl014
            
            #add-point:AFTER FIELD xmdl014 name="construct.a.page1.xmdl014"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl015
            #add-point:ON ACTION controlp INFIELD xmdl015 name="construct.c.page1.xmdl015"
            
            #此段落由子樣板a08產生
            #開窗c段
		      INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
		      LET g_qryparam.reqry = FALSE
               
            #給予arg
            LET g_qryparam.arg1 = g_site
               
            CALL q_inab002_8()                                #呼叫開窗
               
            DISPLAY g_qryparam.return1 TO xmdl015  #顯示到畫面上
            
            NEXT FIELD xmdl015                          #返回原欄位
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl015
            #add-point:BEFORE FIELD xmdl015 name="construct.b.page1.xmdl015"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl015
            
            #add-point:AFTER FIELD xmdl015 name="construct.a.page1.xmdl015"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl016
            #add-point:ON ACTION controlp INFIELD xmdl016 name="construct.c.page1.xmdl016"
            
            #此段落由子樣板a08產生
            #開窗c段
		     	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
		      LET g_qryparam.reqry = FALSE              
              
            #給予arg
            LET g_qryparam.arg1 = g_site
              
            CALL q_inad003()                
               
            DISPLAY g_qryparam.return1 TO xmdl016  #顯示到畫面上

            NEXT FIELD xmdl016
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl016
            #add-point:BEFORE FIELD xmdl016 name="construct.b.page1.xmdl016"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl016
            
            #add-point:AFTER FIELD xmdl016 name="construct.a.page1.xmdl016"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl052
            #add-point:BEFORE FIELD xmdl052 name="construct.b.page1.xmdl052"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl052
            
            #add-point:AFTER FIELD xmdl052 name="construct.a.page1.xmdl052"

            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl052
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl052
            #add-point:ON ACTION controlp INFIELD xmdl052 name="construct.c.page1.xmdl052"

            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdl021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl021
            #add-point:ON ACTION controlp INFIELD xmdl021 name="construct.c.page1.xmdl021"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl021  #顯示到畫面上

            NEXT FIELD xmdl021                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl021
            #add-point:BEFORE FIELD xmdl021 name="construct.b.page1.xmdl021"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl021
            
            #add-point:AFTER FIELD xmdl021 name="construct.a.page1.xmdl021"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl022
            #add-point:BEFORE FIELD xmdl022 name="construct.b.page1.xmdl022"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl022
            
            #add-point:AFTER FIELD xmdl022 name="construct.a.page1.xmdl022"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl022
            #add-point:ON ACTION controlp INFIELD xmdl022 name="construct.c.page1.xmdl022"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl023
            #add-point:BEFORE FIELD xmdl023 name="construct.b.page1.xmdl023"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl023
            
            #add-point:AFTER FIELD xmdl023 name="construct.a.page1.xmdl023"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl023
            #add-point:ON ACTION controlp INFIELD xmdl023 name="construct.c.page1.xmdl023"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl041
            #add-point:BEFORE FIELD xmdl041 name="construct.b.page1.xmdl041"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl041
            
            #add-point:AFTER FIELD xmdl041 name="construct.a.page1.xmdl041"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl041
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl041
            #add-point:ON ACTION controlp INFIELD xmdl041 name="construct.c.page1.xmdl041"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdl030
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl030
            #add-point:ON ACTION controlp INFIELD xmdl030 name="construct.c.page1.xmdl030"
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_pjba001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl030  #顯示到畫面上
            NEXT FIELD xmdl030                     #返回原欄位
                                                                                                                
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl030
            #add-point:BEFORE FIELD xmdl030 name="construct.b.page1.xmdl030"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl030
            
            #add-point:AFTER FIELD xmdl030 name="construct.a.page1.xmdl030"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl031
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl031
            #add-point:ON ACTION controlp INFIELD xmdl031 name="construct.c.page1.xmdl031"
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_pjbb002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl031  #顯示到畫面上
            NEXT FIELD xmdl031                     #返回原欄位
                                                                                                                                  
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl031
            #add-point:BEFORE FIELD xmdl031 name="construct.b.page1.xmdl031"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl031
            
            #add-point:AFTER FIELD xmdl031 name="construct.a.page1.xmdl031"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl032
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl032
            #add-point:ON ACTION controlp INFIELD xmdl032 name="construct.c.page1.xmdl032"
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_pjbm002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl032  #顯示到畫面上
            NEXT FIELD xmdl032                     #返回原欄位
                                                                                                                               
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl032
            #add-point:BEFORE FIELD xmdl032 name="construct.b.page1.xmdl032"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl032
            
            #add-point:AFTER FIELD xmdl032 name="construct.a.page1.xmdl032"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl051
            #add-point:BEFORE FIELD xmdl051 name="construct.b.page1.xmdl051"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl051
            
            #add-point:AFTER FIELD xmdl051 name="construct.a.page1.xmdl051"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl051
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl051
            #add-point:ON ACTION controlp INFIELD xmdl051 name="construct.c.page1.xmdl051"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdl088
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl088
            #add-point:ON ACTION controlp INFIELD xmdl088 name="construct.c.page1.xmdl088"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_icaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl088  #顯示到畫面上
            
            NEXT FIELD xmdl088                     #返回原欄位
    
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl088
            #add-point:BEFORE FIELD xmdl088 name="construct.b.page1.xmdl088"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl088
            
            #add-point:AFTER FIELD xmdl088 name="construct.a.page1.xmdl088"

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl048
            #add-point:BEFORE FIELD xmdl048 name="construct.b.page2.xmdl048"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl048
            
            #add-point:AFTER FIELD xmdl048 name="construct.a.page2.xmdl048"

            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdl048
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl048
            #add-point:ON ACTION controlp INFIELD xmdl048 name="construct.c.page2.xmdl048"

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl049
            #add-point:BEFORE FIELD xmdl049 name="construct.b.page2.xmdl049"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl049
            
            #add-point:AFTER FIELD xmdl049 name="construct.a.page2.xmdl049"

            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdl049
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl049
            #add-point:ON ACTION controlp INFIELD xmdl049 name="construct.c.page2.xmdl049"

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl024
            #add-point:BEFORE FIELD xmdl024 name="construct.b.page2.xmdl024"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl024
            
            #add-point:AFTER FIELD xmdl024 name="construct.a.page2.xmdl024"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdl024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl024
            #add-point:ON ACTION controlp INFIELD xmdl024 name="construct.c.page2.xmdl024"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.xmdl025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl025
            #add-point:ON ACTION controlp INFIELD xmdl025 name="construct.c.page2.xmdl025"
           
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			
		   	LET g_qryparam.arg1 = g_site
			
            CALL q_oodb002_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl025  #顯示到畫面上

            NEXT FIELD xmdl025                     #返回原欄位                                                                                                  
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl025
            #add-point:BEFORE FIELD xmdl025 name="construct.b.page2.xmdl025"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl025
            
            #add-point:AFTER FIELD xmdl025 name="construct.a.page2.xmdl025"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl026
            #add-point:BEFORE FIELD xmdl026 name="construct.b.page2.xmdl026"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl026
            
            #add-point:AFTER FIELD xmdl026 name="construct.a.page2.xmdl026"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdl026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl026
            #add-point:ON ACTION controlp INFIELD xmdl026 name="construct.c.page2.xmdl026"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl027
            #add-point:BEFORE FIELD xmdl027 name="construct.b.page2.xmdl027"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl027
            
            #add-point:AFTER FIELD xmdl027 name="construct.a.page2.xmdl027"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdl027
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl027
            #add-point:ON ACTION controlp INFIELD xmdl027 name="construct.c.page2.xmdl027"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl028
            #add-point:BEFORE FIELD xmdl028 name="construct.b.page2.xmdl028"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl028
            
            #add-point:AFTER FIELD xmdl028 name="construct.a.page2.xmdl028"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdl028
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl028
            #add-point:ON ACTION controlp INFIELD xmdl028 name="construct.c.page2.xmdl028"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl029
            #add-point:BEFORE FIELD xmdl029 name="construct.b.page2.xmdl029"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl029
            
            #add-point:AFTER FIELD xmdl029 name="construct.a.page2.xmdl029"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdl029
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl029
            #add-point:ON ACTION controlp INFIELD xmdl029 name="construct.c.page2.xmdl029"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl042
            #add-point:BEFORE FIELD xmdl042 name="construct.b.page2.xmdl042"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl042
            
            #add-point:AFTER FIELD xmdl042 name="construct.a.page2.xmdl042"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdl042
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl042
            #add-point:ON ACTION controlp INFIELD xmdl042 name="construct.c.page2.xmdl042"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl043
            #add-point:BEFORE FIELD xmdl043 name="construct.b.page2.xmdl043"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl043
            
            #add-point:AFTER FIELD xmdl043 name="construct.a.page2.xmdl043"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdl043
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl043
            #add-point:ON ACTION controlp INFIELD xmdl043 name="construct.c.page2.xmdl043"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl044
            #add-point:BEFORE FIELD xmdl044 name="construct.b.page2.xmdl044"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl044
            
            #add-point:AFTER FIELD xmdl044 name="construct.a.page2.xmdl044"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdl044
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl044
            #add-point:ON ACTION controlp INFIELD xmdl044 name="construct.c.page2.xmdl044"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl045
            #add-point:BEFORE FIELD xmdl045 name="construct.b.page2.xmdl045"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl045
            
            #add-point:AFTER FIELD xmdl045 name="construct.a.page2.xmdl045"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdl045
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl045
            #add-point:ON ACTION controlp INFIELD xmdl045 name="construct.c.page2.xmdl045"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl046
            #add-point:BEFORE FIELD xmdl046 name="construct.b.page2.xmdl046"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl046
            
            #add-point:AFTER FIELD xmdl046 name="construct.a.page2.xmdl046"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdl046
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl046
            #add-point:ON ACTION controlp INFIELD xmdl046 name="construct.c.page2.xmdl046"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl087
            #add-point:BEFORE FIELD xmdl087 name="construct.b.page2.xmdl087"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl087
            
            #add-point:AFTER FIELD xmdl087 name="construct.a.page2.xmdl087"

            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdl087
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl087
            #add-point:ON ACTION controlp INFIELD xmdl087 name="construct.c.page2.xmdl087"

            #END add-point
 
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON xmdmsite,xmdmseq,xmdmseq1,xmdm001,xmdm002,xmdm002_desc,xmdm003,xmdm004, 
          xmdm005,xmdm006,xmdm007,xmdm033,xmdm008,xmdm009,xmdm010,xmdm011
           FROM s_detail3[1].xmdmsite,s_detail3[1].xmdmseq,s_detail3[1].xmdmseq1,s_detail3[1].xmdm001, 
               s_detail3[1].xmdm002,s_detail3[1].xmdm002_desc,s_detail3[1].xmdm003,s_detail3[1].xmdm004, 
               s_detail3[1].xmdm005,s_detail3[1].xmdm006,s_detail3[1].xmdm007,s_detail3[1].xmdm033,s_detail3[1].xmdm008, 
               s_detail3[1].xmdm009,s_detail3[1].xmdm010,s_detail3[1].xmdm011
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body2.before_construct"
                                                                                                            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdmsite
            #add-point:BEFORE FIELD xmdmsite name="construct.b.page3.xmdmsite"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdmsite
            
            #add-point:AFTER FIELD xmdmsite name="construct.a.page3.xmdmsite"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdmsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdmsite
            #add-point:ON ACTION controlp INFIELD xmdmsite name="construct.c.page3.xmdmsite"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdmseq
            #add-point:BEFORE FIELD xmdmseq name="construct.b.page3.xmdmseq"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdmseq
            
            #add-point:AFTER FIELD xmdmseq name="construct.a.page3.xmdmseq"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdmseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdmseq
            #add-point:ON ACTION controlp INFIELD xmdmseq name="construct.c.page3.xmdmseq"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdmseq1
            #add-point:BEFORE FIELD xmdmseq1 name="construct.b.page3.xmdmseq1"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdmseq1
            
            #add-point:AFTER FIELD xmdmseq1 name="construct.a.page3.xmdmseq1"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdmseq1
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdmseq1
            #add-point:ON ACTION controlp INFIELD xmdmseq1 name="construct.c.page3.xmdmseq1"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.page3.xmdm001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdm001
            #add-point:ON ACTION controlp INFIELD xmdm001 name="construct.c.page3.xmdm001"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_imaf001_15()                    #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdm001  #顯示到畫面上

            NEXT FIELD xmdm001                     #返回原欄位          
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdm001
            #add-point:BEFORE FIELD xmdm001 name="construct.b.page3.xmdm001"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdm001
            
            #add-point:AFTER FIELD xmdm001 name="construct.a.page3.xmdm001"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdm002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdm002
            #add-point:ON ACTION controlp INFIELD xmdm002 name="construct.c.page3.xmdm002"
            
            #開窗c段
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
   			LET g_qryparam.reqry = FALSE
			
   			LET g_qryparam.arg1 = '6'
			
            CALL q_xmdl009()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdm002  #顯示到畫面上

            NEXT FIELD xmdm002                    #返回原欄位
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdm002
            #add-point:BEFORE FIELD xmdm002 name="construct.b.page3.xmdm002"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdm002
            
            #add-point:AFTER FIELD xmdm002 name="construct.a.page3.xmdm002"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdm002_desc
            #add-point:BEFORE FIELD xmdm002_desc name="construct.b.page3.xmdm002_desc"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdm002_desc
            
            #add-point:AFTER FIELD xmdm002_desc name="construct.a.page3.xmdm002_desc"

            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdm002_desc
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdm002_desc
            #add-point:ON ACTION controlp INFIELD xmdm002_desc name="construct.c.page3.xmdm002_desc"

            #END add-point
 
 
         #Ctrlp:construct.c.page3.xmdm003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdm003
            #add-point:ON ACTION controlp INFIELD xmdm003 name="construct.c.page3.xmdm003"
            
            #此段落由子樣板a08產生
            #開窗c段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			
			   LET g_qryparam.arg1 = '221'
			
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdm003  #顯示到畫面上

            NEXT FIELD xmdm003                     #返回原欄位
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdm003
            #add-point:BEFORE FIELD xmdm003 name="construct.b.page3.xmdm003"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdm003
            
            #add-point:AFTER FIELD xmdm003 name="construct.a.page3.xmdm003"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdm004
            #add-point:BEFORE FIELD xmdm004 name="construct.b.page3.xmdm004"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdm004
            
            #add-point:AFTER FIELD xmdm004 name="construct.a.page3.xmdm004"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdm004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdm004
            #add-point:ON ACTION controlp INFIELD xmdm004 name="construct.c.page3.xmdm004"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.page3.xmdm005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdm005
            #add-point:ON ACTION controlp INFIELD xmdm005 name="construct.c.page3.xmdm005"
            
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
		      LET g_qryparam.reqry = FALSE
               
            #給予arg
            LET g_qryparam.arg1 = g_site
               
            CALL q_inaa001_4()                              #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdm005  #顯示到畫面上

            NEXT FIELD xmdm005                     #返回原欄位
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdm005
            #add-point:BEFORE FIELD xmdm005 name="construct.b.page3.xmdm005"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdm005
            
            #add-point:AFTER FIELD xmdm005 name="construct.a.page3.xmdm005"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdm006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdm006
            #add-point:ON ACTION controlp INFIELD xmdm006 name="construct.c.page3.xmdm006"
            
            #此段落由子樣板a08產生
            #開窗c段
		      INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
		      LET g_qryparam.reqry = FALSE
               
            #給予arg
            LET g_qryparam.arg1 = g_site
               
            CALL q_inab002_8()                                #呼叫開窗
               
            DISPLAY g_qryparam.return1 TO xmdm006  #顯示到畫面上
            
            NEXT FIELD xmdm006                          #返回原欄位
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdm006
            #add-point:BEFORE FIELD xmdm006 name="construct.b.page3.xmdm006"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdm006
            
            #add-point:AFTER FIELD xmdm006 name="construct.a.page3.xmdm006"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdm007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdm007
            #add-point:ON ACTION controlp INFIELD xmdm007 name="construct.c.page3.xmdm007"
            
            #此段落由子樣板a08產生
            #開窗c段
		     	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
		      LET g_qryparam.reqry = FALSE              
              
            #給予arg
            LET g_qryparam.arg1 = g_site
              
            CALL q_inad003()                
               
            DISPLAY g_qryparam.return1 TO xmdm007  #顯示到畫面上

            NEXT FIELD xmdm007
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdm007
            #add-point:BEFORE FIELD xmdm007 name="construct.b.page3.xmdm007"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdm007
            
            #add-point:AFTER FIELD xmdm007 name="construct.a.page3.xmdm007"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdm033
            #add-point:BEFORE FIELD xmdm033 name="construct.b.page3.xmdm033"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdm033
            
            #add-point:AFTER FIELD xmdm033 name="construct.a.page3.xmdm033"

            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdm033
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdm033
            #add-point:ON ACTION controlp INFIELD xmdm033 name="construct.c.page3.xmdm033"

            #END add-point
 
 
         #Ctrlp:construct.c.page3.xmdm008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdm008
            #add-point:ON ACTION controlp INFIELD xmdm008 name="construct.c.page3.xmdm008"
            
            #此段落由子樣板a08產生
            #開窗c段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdm008  #顯示到畫面上

            NEXT FIELD xmdm008                     #返回原欄位
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdm008
            #add-point:BEFORE FIELD xmdm008 name="construct.b.page3.xmdm008"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdm008
            
            #add-point:AFTER FIELD xmdm008 name="construct.a.page3.xmdm008"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdm009
            #add-point:BEFORE FIELD xmdm009 name="construct.b.page3.xmdm009"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdm009
            
            #add-point:AFTER FIELD xmdm009 name="construct.a.page3.xmdm009"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdm009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdm009
            #add-point:ON ACTION controlp INFIELD xmdm009 name="construct.c.page3.xmdm009"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.page3.xmdm010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdm010
            #add-point:ON ACTION controlp INFIELD xmdm010 name="construct.c.page3.xmdm010"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdm010  #顯示到畫面上

            NEXT FIELD xmdm010                     #返回原欄位
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdm010
            #add-point:BEFORE FIELD xmdm010 name="construct.b.page3.xmdm010"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdm010
            
            #add-point:AFTER FIELD xmdm010 name="construct.a.page3.xmdm010"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdm011
            #add-point:BEFORE FIELD xmdm011 name="construct.b.page3.xmdm011"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdm011
            
            #add-point:AFTER FIELD xmdm011 name="construct.a.page3.xmdm011"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdm011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdm011
            #add-point:ON ACTION controlp INFIELD xmdm011 name="construct.c.page3.xmdm011"
                                                                                                            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      #150120新增"客戶訂單號碼"  earl(s)
      CONSTRUCT l_form_wc ON xmda033 FROM s_detail1[1].xmda033
                      
         BEFORE CONSTRUCT
      
         ON ACTION controlp INFIELD xmda033
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
	   		LET g_qryparam.reqry = FALSE
            CALL q_xmda033()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda033  #顯示到畫面上
            NEXT FIELD xmda033
      
      END CONSTRUCT
      #150120新增"客戶訂單號碼"  earl(e)
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         
         #沒加的話第一個頁籤會無法construct
         LET g_xmdl_d[1].xmdlseq = ""
         DISPLAY ARRAY g_xmdl_d TO s_detail1.*
            BEFORE DISPLAY
               EXIT DISPLAY
         END DISPLAY

         #沒加的話第二個頁籤會無法construct
         LET g_xmdl3_d[1].xmdmseq = ""
         DISPLAY ARRAY g_xmdl3_d TO s_detail3.*
            BEFORE DISPLAY
               EXIT DISPLAY
         END DISPLAY
         
         #沒加的話總和頁籤會無法construct
         LET g_xmdl2_d[1].xmdlseq = ""
         DISPLAY ARRAY g_xmdl2_d TO s_detail2.*
            BEFORE DISPLAY
               EXIT DISPLAY
         END DISPLAY
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
            INITIALIZE g_wc2_table2 TO NULL
 
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "xmdk_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "xmdl_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "xmdm_t" 
                     LET g_wc2_table2 = la_wc[li_idx].wc
 
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
 
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   #150120新增"客戶訂單號碼"  earl(s)
   IF l_form_wc <> " 1=1" THEN
      LET g_wc2 = g_wc2," AND ",l_form_wc
      LET g_wc2_table1 = g_wc2_table1," AND xmdl003 IN (SELECT xmdadocno",
                                      "                   FROM xmda_t",
                                      "                  WHERE xmdaent = ",g_enterprise,
                                      "                    AND ",l_form_wc,")"
   END IF
   #150120新增"客戶訂單號碼"  earl(e)
   
   #xmdl
   IF (NOT cl_null(g_wc2_table2) AND g_wc2_table2.trim() <> '1=1') THEN
      LET g_wc2_table1 = g_wc2_table1," AND xmdlseq IN (SELECT xmdmseq",
                                      "                  FROM xmdm_t",
                                      "                 WHERE xmdment = xmdlent",
                                      "                   AND xmdmdocno = xmdldocno",
                                      "                   AND ",g_wc2_table2,")"
   END IF
   
   #xmdm
   IF (NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1') THEN
      LET g_wc2_table2 = g_wc2_table2," AND xmdmseq IN (SELECT xmdlseq",
                                      "                  FROM xmdl_t",
                                      "                 WHERE xmdlent = xmdment",
                                      "                   AND xmdldocno = xmdmdocno",
                                      "                   AND ",g_wc2_table1,")"
   END IF
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="axmt600.filter" >}
#應用 a50 樣板自動產生(Version:8)
#+ filter過濾功能
PRIVATE FUNCTION axmt600_filter()
   #add-point:filter段define name="filter.define_customerization"
   
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
                           
   #end add-point   
   
   #add-point:Function前置處理  name="filter.pre_function"
   
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON xmdkdocno,xmdk001,xmdk003,xmdk004,xmdk005,xmdk007,xmdk008,xmdk009
                          FROM s_browse[1].b_xmdkdocno,s_browse[1].b_xmdk001,s_browse[1].b_xmdk003,s_browse[1].b_xmdk004, 
                              s_browse[1].b_xmdk005,s_browse[1].b_xmdk007,s_browse[1].b_xmdk008,s_browse[1].b_xmdk009 
 
 
         BEFORE CONSTRUCT
               DISPLAY axmt600_filter_parser('xmdkdocno') TO s_browse[1].b_xmdkdocno
            DISPLAY axmt600_filter_parser('xmdk001') TO s_browse[1].b_xmdk001
            DISPLAY axmt600_filter_parser('xmdk003') TO s_browse[1].b_xmdk003
            DISPLAY axmt600_filter_parser('xmdk004') TO s_browse[1].b_xmdk004
            DISPLAY axmt600_filter_parser('xmdk005') TO s_browse[1].b_xmdk005
            DISPLAY axmt600_filter_parser('xmdk007') TO s_browse[1].b_xmdk007
            DISPLAY axmt600_filter_parser('xmdk008') TO s_browse[1].b_xmdk008
            DISPLAY axmt600_filter_parser('xmdk009') TO s_browse[1].b_xmdk009
      
         #add-point:filter段cs_ctrl name="filter.cs_ctrl"
         
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
                                                      
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
                                                                                 
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL axmt600_filter_show('xmdkdocno')
   CALL axmt600_filter_show('xmdk001')
   CALL axmt600_filter_show('xmdk003')
   CALL axmt600_filter_show('xmdk004')
   CALL axmt600_filter_show('xmdk005')
   CALL axmt600_filter_show('xmdk007')
   CALL axmt600_filter_show('xmdk008')
   CALL axmt600_filter_show('xmdk009')
 
END FUNCTION
 
{</section>}
 
{<section id="axmt600.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION axmt600_filter_parser(ps_field)
   #add-point:filter段define name="filter_parser.define_customerization"
   
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
                           
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="axmt600.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION axmt600_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = axmt600_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="axmt600.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION axmt600_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
                           
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_xmdl_d.clear()
   CALL g_xmdl2_d.clear()
   CALL g_xmdl3_d.clear()
 
   
   #add-point:query段other name="query.other"
                           
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL axmt600_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL axmt600_browser_fill("")
      CALL axmt600_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL axmt600_filter_show('xmdkdocno')
   CALL axmt600_filter_show('xmdk001')
   CALL axmt600_filter_show('xmdk003')
   CALL axmt600_filter_show('xmdk004')
   CALL axmt600_filter_show('xmdk005')
   CALL axmt600_filter_show('xmdk007')
   CALL axmt600_filter_show('xmdk008')
   CALL axmt600_filter_show('xmdk009')
   CALL axmt600_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL axmt600_fetch("F") 
      #顯示單身筆數
      CALL axmt600_idx_chk()
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="axmt600.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION axmt600_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
                           
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_xmdk_m.xmdkdocno = g_browser[g_current_idx].b_xmdkdocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE axmt600_master_referesh USING g_xmdk_m.xmdkdocno INTO g_xmdk_m.xmdk000,g_xmdk_m.xmdksite, 
       g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001,g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdkstus, 
       g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk007,g_xmdk_m.xmdk009,g_xmdk_m.xmdk008,g_xmdk_m.xmdk202, 
       g_xmdk_m.xmdk045,g_xmdk_m.xmdk082,g_xmdk_m.xmdk030,g_xmdk_m.xmdk054,g_xmdk_m.xmdk010,g_xmdk_m.xmdk011, 
       g_xmdk_m.xmdk012,g_xmdk_m.xmdk013,g_xmdk_m.xmdk014,g_xmdk_m.xmdk015,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017, 
       g_xmdk_m.xmdk084,g_xmdk_m.xmdk018,g_xmdk_m.xmdk041,g_xmdk_m.xmdk037,g_xmdk_m.xmdk042,g_xmdk_m.xmdk043, 
       g_xmdk_m.xmdk031,g_xmdk_m.xmdk033,g_xmdk_m.xmdk085,g_xmdk_m.xmdk086,g_xmdk_m.xmdk087,g_xmdk_m.xmdk044, 
       g_xmdk_m.xmdk035,g_xmdk_m.xmdk046,g_xmdk_m.xmdk036,g_xmdk_m.xmdk083,g_xmdk_m.xmdkownid,g_xmdk_m.xmdkowndp, 
       g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtdp,g_xmdk_m.xmdkcrtdt,g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmoddt, 
       g_xmdk_m.xmdkcnfid,g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid,g_xmdk_m.xmdkpstdt,g_xmdk_m.xmdk003_desc, 
       g_xmdk_m.xmdk004_desc,g_xmdk_m.xmdk007_desc,g_xmdk_m.xmdk009_desc,g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk202_desc, 
       g_xmdk_m.xmdk030_desc,g_xmdk_m.xmdk010_desc,g_xmdk_m.xmdk011_desc,g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdkownid_desc, 
       g_xmdk_m.xmdkowndp_desc,g_xmdk_m.xmdkcrtid_desc,g_xmdk_m.xmdkcrtdp_desc,g_xmdk_m.xmdkmodid_desc, 
       g_xmdk_m.xmdkcnfid_desc,g_xmdk_m.xmdkpstid_desc
   
   #遮罩相關處理
   LET g_xmdk_m_mask_o.* =  g_xmdk_m.*
   CALL axmt600_xmdk_t_mask()
   LET g_xmdk_m_mask_n.* =  g_xmdk_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt600_set_act_visible()   
   CALL axmt600_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
 
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
 
   #end add-point
   
   #保存單頭舊值
   LET g_xmdk_m_t.* = g_xmdk_m.*
   LET g_xmdk_m_o.* = g_xmdk_m.*
   
   LET g_data_owner = g_xmdk_m.xmdkownid      
   LET g_data_dept  = g_xmdk_m.xmdkowndp
   
   #重新顯示   
   CALL axmt600_show()
 
   #應用 a56 樣板自動產生(Version:3)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
 
END FUNCTION
 
{</section>}
 
{<section id="axmt600.insert" >}
#+ 資料新增
PRIVATE FUNCTION axmt600_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
                           
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_xmdl_d.clear()   
   CALL g_xmdl2_d.clear()  
   CALL g_xmdl3_d.clear()  
 
 
   INITIALIZE g_xmdk_m.* LIKE xmdk_t.*             #DEFAULT 設定
   
   LET g_xmdkdocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_xmdk_m.xmdkownid = g_user
      LET g_xmdk_m.xmdkowndp = g_dept
      LET g_xmdk_m.xmdkcrtid = g_user
      LET g_xmdk_m.xmdkcrtdp = g_dept 
      LET g_xmdk_m.xmdkcrtdt = cl_get_current()
      LET g_xmdk_m.xmdkmodid = g_user
      LET g_xmdk_m.xmdkmoddt = cl_get_current()
      LET g_xmdk_m.xmdkstus = 'N'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_xmdk_m.xmdk000 = "6"
      LET g_xmdk_m.xmdk045 = "1"
      LET g_xmdk_m.xmdk082 = "1"
      LET g_xmdk_m.xmdk014 = "N"
      LET g_xmdk_m.xmdk084 = "1"
      LET g_xmdk_m.xmdk042 = "1"
      LET g_xmdk_m.xmdk043 = "1"
      LET g_xmdk_m.xmdk085 = "1"
      LET g_xmdk_m.xmdk087 = "N"
      LET g_xmdk_m.xmdk046 = "1"
      LET g_xmdk_m.xmdk083 = "N"
 
  
      #add-point:單頭預設值 name="insert.default"
      
      LET g_xmdk_m.xmdksite = g_site
      LET g_xmdk_m.xmdkdocdt = g_today
      LET g_xmdk_m.xmdk001 = g_today
      LET g_xmdk_m.xmdkstus = 'N'
      
      LET g_xmdk_m.xmdk003 = g_user
      CALL s_desc_get_person_desc(g_xmdk_m.xmdk003) RETURNING g_xmdk_m.xmdk003_desc
      DISPLAY BY NAME g_xmdk_m.xmdk003_desc
      
      LET g_xmdk_m.xmdk004 = g_dept
      CALL s_desc_get_department_desc(g_xmdk_m.xmdk004) RETURNING g_xmdk_m.xmdk004_desc
      DISPLAY BY NAME g_xmdk_m.xmdk004_desc
      
      #160801-00009#1--s
      #若aoos020参数S-FIN-1003='3',xmdk087='Y';
      #若S-FIN-1003<>'3',xmdk087='N'
      IF cl_get_para(g_enterprise,g_site,'S-FIN-1003') = '3' THEN
         LET g_xmdk_m.xmdk087 = "Y"
      ELSE
         LET g_xmdk_m.xmdk087 = "N"
      END IF
      #160801-00009#1--e
               
      INITIALIZE g_xmdk_m_t.* TO NULL
      INITIALIZE g_xmdk_m_o.* TO NULL
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_xmdk_m_t.* = g_xmdk_m.*
      LET g_xmdk_m_o.* = g_xmdk_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_xmdk_m.xmdkstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "UH"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unhold.png")
         WHEN "H"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/hold.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
    
      CALL axmt600_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
                                                      
      #end add-point
      
      IF INT_FLAG THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_xmdk_m.* TO NULL
         INITIALIZE g_xmdl_d TO NULL
         INITIALIZE g_xmdl2_d TO NULL
         INITIALIZE g_xmdl3_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         
         #end add-point 
         CALL axmt600_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_xmdl_d.clear()
      #CALL g_xmdl2_d.clear()
      #CALL g_xmdl3_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt600_set_act_visible()   
   CALL axmt600_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_xmdkdocno_t = g_xmdk_m.xmdkdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " xmdkent = '" ||g_enterprise|| "' AND",
                      " xmdkdocno = '", g_xmdk_m.xmdkdocno, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axmt600_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE axmt600_cl
   
   CALL axmt600_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE axmt600_master_referesh USING g_xmdk_m.xmdkdocno INTO g_xmdk_m.xmdk000,g_xmdk_m.xmdksite, 
       g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001,g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdkstus, 
       g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk007,g_xmdk_m.xmdk009,g_xmdk_m.xmdk008,g_xmdk_m.xmdk202, 
       g_xmdk_m.xmdk045,g_xmdk_m.xmdk082,g_xmdk_m.xmdk030,g_xmdk_m.xmdk054,g_xmdk_m.xmdk010,g_xmdk_m.xmdk011, 
       g_xmdk_m.xmdk012,g_xmdk_m.xmdk013,g_xmdk_m.xmdk014,g_xmdk_m.xmdk015,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017, 
       g_xmdk_m.xmdk084,g_xmdk_m.xmdk018,g_xmdk_m.xmdk041,g_xmdk_m.xmdk037,g_xmdk_m.xmdk042,g_xmdk_m.xmdk043, 
       g_xmdk_m.xmdk031,g_xmdk_m.xmdk033,g_xmdk_m.xmdk085,g_xmdk_m.xmdk086,g_xmdk_m.xmdk087,g_xmdk_m.xmdk044, 
       g_xmdk_m.xmdk035,g_xmdk_m.xmdk046,g_xmdk_m.xmdk036,g_xmdk_m.xmdk083,g_xmdk_m.xmdkownid,g_xmdk_m.xmdkowndp, 
       g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtdp,g_xmdk_m.xmdkcrtdt,g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmoddt, 
       g_xmdk_m.xmdkcnfid,g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid,g_xmdk_m.xmdkpstdt,g_xmdk_m.xmdk003_desc, 
       g_xmdk_m.xmdk004_desc,g_xmdk_m.xmdk007_desc,g_xmdk_m.xmdk009_desc,g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk202_desc, 
       g_xmdk_m.xmdk030_desc,g_xmdk_m.xmdk010_desc,g_xmdk_m.xmdk011_desc,g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdkownid_desc, 
       g_xmdk_m.xmdkowndp_desc,g_xmdk_m.xmdkcrtid_desc,g_xmdk_m.xmdkcrtdp_desc,g_xmdk_m.xmdkmodid_desc, 
       g_xmdk_m.xmdkcnfid_desc,g_xmdk_m.xmdkpstid_desc
   
   
   #遮罩相關處理
   LET g_xmdk_m_mask_o.* =  g_xmdk_m.*
   CALL axmt600_xmdk_t_mask()
   LET g_xmdk_m_mask_n.* =  g_xmdk_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_xmdk_m.xmdk000,g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocno_desc,g_xmdk_m.xmdkdocdt, 
       g_xmdk_m.xmdk001,g_xmdk_m.xmdk003,g_xmdk_m.xmdk003_desc,g_xmdk_m.xmdk004,g_xmdk_m.xmdk004_desc, 
       g_xmdk_m.xmdkstus,g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk007,g_xmdk_m.xmdk007_desc,g_xmdk_m.xmdk009, 
       g_xmdk_m.xmdk009_desc,g_xmdk_m.xmdk008,g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk202,g_xmdk_m.xmdk202_desc, 
       g_xmdk_m.xmdk045,g_xmdk_m.xmdk082,g_xmdk_m.xmdk030,g_xmdk_m.xmdk030_desc,g_xmdk_m.xmdk054,g_xmdk_m.xmdk010, 
       g_xmdk_m.xmdk010_desc,g_xmdk_m.xmdk011,g_xmdk_m.xmdk011_desc,g_xmdk_m.xmdk012,g_xmdk_m.xmdk012_desc, 
       g_xmdk_m.xmdk013,g_xmdk_m.xmdk014,g_xmdk_m.xmdk015,g_xmdk_m.xmdk015_desc,g_xmdk_m.xmdk016,g_xmdk_m.xmdk016_desc, 
       g_xmdk_m.xmdk017,g_xmdk_m.xmdk084,g_xmdk_m.xmdk018,g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdk041,g_xmdk_m.xmdk037, 
       g_xmdk_m.xmdk042,g_xmdk_m.xmdk043,g_xmdk_m.xmdk031,g_xmdk_m.xmdk031_desc,g_xmdk_m.xmdk033,g_xmdk_m.xmdk033_desc, 
       g_xmdk_m.xmdk085,g_xmdk_m.xmdk086,g_xmdk_m.xmdk087,g_xmdk_m.xmdk044,g_xmdk_m.xmdk035,g_xmdk_m.xmdk046, 
       g_xmdk_m.xmdk036,g_xmdk_m.xmdk083,g_xmdk_m.xmdkownid,g_xmdk_m.xmdkownid_desc,g_xmdk_m.xmdkowndp, 
       g_xmdk_m.xmdkowndp_desc,g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtid_desc,g_xmdk_m.xmdkcrtdp,g_xmdk_m.xmdkcrtdp_desc, 
       g_xmdk_m.xmdkcrtdt,g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmodid_desc,g_xmdk_m.xmdkmoddt,g_xmdk_m.xmdkcnfid, 
       g_xmdk_m.xmdkcnfid_desc,g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid,g_xmdk_m.xmdkpstid_desc,g_xmdk_m.xmdkpstdt 
 
   
   #add-point:新增結束後 name="insert.after"
   
   #end add-point 
   
   #功能已完成,通報訊息中心
   CALL axmt600_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="axmt600.modify" >}
#+ 資料修改
PRIVATE FUNCTION axmt600_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING
 
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
                           
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   #保存單頭舊值
   LET g_xmdk_m_t.* = g_xmdk_m.*
   LET g_xmdk_m_o.* = g_xmdk_m.*
   
   IF g_xmdk_m.xmdkdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_xmdkdocno_t = g_xmdk_m.xmdkdocno
 
   CALL s_transaction_begin()
   
   OPEN axmt600_cl USING g_enterprise,g_xmdk_m.xmdkdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axmt600_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE axmt600_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axmt600_master_referesh USING g_xmdk_m.xmdkdocno INTO g_xmdk_m.xmdk000,g_xmdk_m.xmdksite, 
       g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001,g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdkstus, 
       g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk007,g_xmdk_m.xmdk009,g_xmdk_m.xmdk008,g_xmdk_m.xmdk202, 
       g_xmdk_m.xmdk045,g_xmdk_m.xmdk082,g_xmdk_m.xmdk030,g_xmdk_m.xmdk054,g_xmdk_m.xmdk010,g_xmdk_m.xmdk011, 
       g_xmdk_m.xmdk012,g_xmdk_m.xmdk013,g_xmdk_m.xmdk014,g_xmdk_m.xmdk015,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017, 
       g_xmdk_m.xmdk084,g_xmdk_m.xmdk018,g_xmdk_m.xmdk041,g_xmdk_m.xmdk037,g_xmdk_m.xmdk042,g_xmdk_m.xmdk043, 
       g_xmdk_m.xmdk031,g_xmdk_m.xmdk033,g_xmdk_m.xmdk085,g_xmdk_m.xmdk086,g_xmdk_m.xmdk087,g_xmdk_m.xmdk044, 
       g_xmdk_m.xmdk035,g_xmdk_m.xmdk046,g_xmdk_m.xmdk036,g_xmdk_m.xmdk083,g_xmdk_m.xmdkownid,g_xmdk_m.xmdkowndp, 
       g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtdp,g_xmdk_m.xmdkcrtdt,g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmoddt, 
       g_xmdk_m.xmdkcnfid,g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid,g_xmdk_m.xmdkpstdt,g_xmdk_m.xmdk003_desc, 
       g_xmdk_m.xmdk004_desc,g_xmdk_m.xmdk007_desc,g_xmdk_m.xmdk009_desc,g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk202_desc, 
       g_xmdk_m.xmdk030_desc,g_xmdk_m.xmdk010_desc,g_xmdk_m.xmdk011_desc,g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdkownid_desc, 
       g_xmdk_m.xmdkowndp_desc,g_xmdk_m.xmdkcrtid_desc,g_xmdk_m.xmdkcrtdp_desc,g_xmdk_m.xmdkmodid_desc, 
       g_xmdk_m.xmdkcnfid_desc,g_xmdk_m.xmdkpstid_desc
   
   #檢查是否允許此動作
   IF NOT axmt600_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_xmdk_m_mask_o.* =  g_xmdk_m.*
   CALL axmt600_xmdk_t_mask()
   LET g_xmdk_m_mask_n.* =  g_xmdk_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   #150310-00003#19 add by lixh 20160128
   IF g_xmdk_m.xmdk085 = '3' THEN
      CLOSE axmt600_cl
      CALL s_transaction_end('N','0')    
      RETURN       
   END IF
   #150310-00003#19 add by lixh 20160128
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
 
 
   
   CALL axmt600_show()
   #add-point:modify段show之後 name="modify.after_show"
   
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 
 
 
 
    
   WHILE TRUE
      LET g_xmdkdocno_t = g_xmdk_m.xmdkdocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_xmdk_m.xmdkmodid = g_user 
LET g_xmdk_m.xmdkmoddt = cl_get_current()
LET g_xmdk_m.xmdkmodid_desc = cl_get_username(g_xmdk_m.xmdkmodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      #「D抽單 / R已拒絕」狀況碼更改資料後，需還原為「N未確認」
      IF g_xmdk_m.xmdkstus MATCHES "[DR]" THEN 
         LET g_xmdk_m.xmdkstus = "N"
      END IF                                           
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      CALL axmt600_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
                                                      
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE xmdk_t SET (xmdkmodid,xmdkmoddt) = (g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmoddt)
          WHERE xmdkent = g_enterprise AND xmdkdocno = g_xmdkdocno_t
 
      END IF
    
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_xmdk_m.* = g_xmdk_m_t.*
         CALL axmt600_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_xmdk_m.xmdkdocno != g_xmdk_m_t.xmdkdocno
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
                                                                                 
         #end add-point
         
         #更新單身key值
         UPDATE xmdl_t SET xmdldocno = g_xmdk_m.xmdkdocno
 
          WHERE xmdlent = g_enterprise AND xmdldocno = g_xmdk_m_t.xmdkdocno
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
                                                                                 
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "xmdl_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmdl_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
                                                                                 
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update2"
                                                                                 
         #end add-point
         
         UPDATE xmdm_t
            SET xmdmdocno = g_xmdk_m.xmdkdocno
 
          WHERE xmdment = g_enterprise AND
                xmdmdocno = g_xmdkdocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update2"
                                                                                 
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "xmdm_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmdm_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update2"
                                                                                 
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt600_set_act_visible()   
   CALL axmt600_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " xmdkent = '" ||g_enterprise|| "' AND",
                      " xmdkdocno = '", g_xmdk_m.xmdkdocno, "' "
 
   #填到對應位置
   CALL axmt600_browser_fill("")
 
   CLOSE axmt600_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL axmt600_msgcentre_notify('modify')
 
END FUNCTION 
 
{</section>}
 
{<section id="axmt600.input" >}
#+ 資料輸入
PRIVATE FUNCTION axmt600_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"

   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE l_success              LIKE type_t.num5
   DEFINE l_para_data            LIKE type_t.chr80      #接參數用
   DEFINE l_ooef004              LIKE ooef_t.ooef004    #單據別參照表號
   DEFINE l_flag                 LIKE type_t.num5
   DEFINE l_xmdg001              LIKE xmdg_t.xmdg001    #出通單出貨性質
   DEFINE l_xmda005              LIKE xmda_t.xmda005    #訂單性質
   DEFINE l_xmdg024              LIKE xmdg_t.xmdg024    #包裝單製作
   DEFINE l_xmdg025              LIKE xmdg_t.xmdg025    #Invoice製作
#   DEFINE l_gzcb004              LIKE gzcb_t.gzcb004  #160705-00001 by whitney mark
   DEFINE l_where                STRING                 #單據別過濾sql條件
   DEFINE l_oocq019              LIKE oocq_t.oocq019    #運輸方式
   DEFINE l_slip                 LIKE ooba_t.ooba001    #單別
   DEFINE l_imaa005              LIKE imaa_t.imaa005    #產品特徵
   DEFINE l_inam              DYNAMIC ARRAY OF RECORD   #紀錄產品特徵
             inam001             LIKE inam_t.inam001,
             inam002             LIKE inam_t.inam002,
             inam004             LIKE inam_t.inam004
                              END RECORD
   DEFINE l_xmdlseq              LIKE xmdl_t.xmdlseq
             
   DEFINE l_xmdh011              LIKE xmdh_t.xmdh011
   DEFINE l_xmdc028              LIKE xmdc_t.xmdc028
   DEFINE l_num                  LIKE type_t.num5
   DEFINE l_xmdlseq_backup       LIKE xmdl_t.xmdlseq    #紀錄新增多庫儲批時的項次

   DEFINE l_oodbl004             LIKE oodbl_t.oodbl004
   DEFINE l_oodb002              LIKE oodb_t.oodb002   
   DEFINE l_oodb005              LIKE oodb_t.oodb005
   DEFINE l_oodb006              LIKE oodb_t.oodb006
   DEFINE l_oodb011              LIKE oodb_t.oodb011
   DEFINE l_xmdl033              LIKE xmdl_t.xmdl033
   DEFINE l_xmdl008              LIKE xmdl_t.xmdl008
   DEFINE l_xmdl009              LIKE xmdl_t.xmdl009
   DEFINE l_ooef019              LIKE ooef_t.ooef019   
   DEFINE l_rollback             LIKE type_t.num5 
   DEFINE l_type                 LIKE type_t.chr1
   
   DEFINE l_xmdl014              LIKE xmdl_t.xmdl014
   DEFINE l_xmdl015              LIKE xmdl_t.xmdl015
   DEFINE l_xmdl016              LIKE xmdl_t.xmdl016
   DEFINE l_xmdl052              LIKE xmdl_t.xmdl052
   DEFINE l_xmdk017              LIKE xmdk_t.xmdk017
 
   DEFINE l_xmdl    RECORD
      xmdlsite         LIKE xmdl_t.xmdlsite,
      xmdl001          LIKE xmdl_t.xmdl001,
      xmdl002          LIKE xmdl_t.xmdl002,
      xmdl003          LIKE xmdl_t.xmdl003,
      xmdl004          LIKE xmdl_t.xmdl004,
      xmdl005          LIKE xmdl_t.xmdl005,
      xmdl006          LIKE xmdl_t.xmdl006,
      xmdl007          LIKE xmdl_t.xmdl007,
      xmdl008          LIKE xmdl_t.xmdl008,
      xmdl009          LIKE xmdl_t.xmdl009,
      xmdl010          LIKE xmdl_t.xmdl010,
      xmdl011          LIKE xmdl_t.xmdl011,
      xmdl012          LIKE xmdl_t.xmdl012,
      xmdl013          LIKE xmdl_t.xmdl013,
      xmdl014          LIKE xmdl_t.xmdl014,
      xmdl015          LIKE xmdl_t.xmdl015,
      xmdl016          LIKE xmdl_t.xmdl016,
      xmdl017          LIKE xmdl_t.xmdl017,
      xmdl018          LIKE xmdl_t.xmdl018,
      xmdl019          LIKE xmdl_t.xmdl019,
      xmdl020          LIKE xmdl_t.xmdl020,
      xmdl021          LIKE xmdl_t.xmdl021,
      xmdl022          LIKE xmdl_t.xmdl022,

      xmdl024          LIKE xmdl_t.xmdl024,
      xmdl025          LIKE xmdl_t.xmdl025,
      xmdl026          LIKE xmdl_t.xmdl026,
      xmdl027          LIKE xmdl_t.xmdl027,
      xmdl028          LIKE xmdl_t.xmdl028,
      xmdl029          LIKE xmdl_t.xmdl029,

      xmdl030          LIKE xmdl_t.xmdl030,  #add by lixiang 2015/06/29
      xmdl031          LIKE xmdl_t.xmdl031,  #add by lixiang 2015/06/29
      xmdl032          LIKE xmdl_t.xmdl032,  #add by lixiang 2015/06/29
      xmdl033          LIKE xmdl_t.xmdl033,

      xmdl042          LIKE xmdl_t.xmdl042,
      xmdl043          LIKE xmdl_t.xmdl043,
      xmdl044          LIKE xmdl_t.xmdl044,
      xmdl045          LIKE xmdl_t.xmdl045,
      xmdl046          LIKE xmdl_t.xmdl046,

      xmdl050          LIKE xmdl_t.xmdl050,
      xmdl058          LIKE xmdl_t.xmdl058, #160512-00004#2-add
      xmdl057          LIKE xmdl_t.xmdl057, #160512-00004#2-add
      xmdl051          LIKE xmdl_t.xmdl051,
      xmdl052          LIKE xmdl_t.xmdl052,
      
      xmdl081          LIKE xmdl_t.xmdl081,
      xmdl082          LIKE xmdl_t.xmdl082,
      xmdl083          LIKE xmdl_t.xmdl083,
      xmdl084          LIKE xmdl_t.xmdl084        
                    END RECORD
   
   #151209-00018#1  2015/12/10 By earl add s
   DEFINE l_price   RECORD
      source           LIKE xmdc_t.xmdc040,
      docno            LIKE xmdc_t.xmdcdocno,
      seq              LIKE xmdc_t.xmdcseq,
      price            LIKE xmdc_t.xmdc043
      
                    END RECORD
   #151209-00018#1  2015/12/10 By earl add e
   DEFINE l_amount  LIKE xmdl_t.xmdl018  #160122-00020#1
   DEFINE l_msg1       LIKE gzze_t.gzze003   #160621-00003#3 20160629 add by beckxie
   DEFINE l_imaf055    LIKE imaf_t.imaf055   #160519-00008#10
   DEFINE l_imaf061    LIKE imaf_t.imaf061   #160519-00008#10
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   #160621-00003#3 20160629 add by beckxie---S
   LET l_msg1 = ''
   SELECT gzze003 INTO l_msg1 FROM gzze_t WHERE gzze001 = 'aoo-00708' AND gzze002 = g_dlang 
   #160621-00003#3 20160629 add by beckxie---E
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xmdk_m.xmdk000,g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocno_desc,g_xmdk_m.xmdkdocdt, 
       g_xmdk_m.xmdk001,g_xmdk_m.xmdk003,g_xmdk_m.xmdk003_desc,g_xmdk_m.xmdk004,g_xmdk_m.xmdk004_desc, 
       g_xmdk_m.xmdkstus,g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk007,g_xmdk_m.xmdk007_desc,g_xmdk_m.xmdk009, 
       g_xmdk_m.xmdk009_desc,g_xmdk_m.xmdk008,g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk202,g_xmdk_m.xmdk202_desc, 
       g_xmdk_m.xmdk045,g_xmdk_m.xmdk082,g_xmdk_m.xmdk030,g_xmdk_m.xmdk030_desc,g_xmdk_m.xmdk054,g_xmdk_m.xmdk010, 
       g_xmdk_m.xmdk010_desc,g_xmdk_m.xmdk011,g_xmdk_m.xmdk011_desc,g_xmdk_m.xmdk012,g_xmdk_m.xmdk012_desc, 
       g_xmdk_m.xmdk013,g_xmdk_m.xmdk014,g_xmdk_m.xmdk015,g_xmdk_m.xmdk015_desc,g_xmdk_m.xmdk016,g_xmdk_m.xmdk016_desc, 
       g_xmdk_m.xmdk017,g_xmdk_m.xmdk084,g_xmdk_m.xmdk018,g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdk041,g_xmdk_m.xmdk037, 
       g_xmdk_m.xmdk042,g_xmdk_m.xmdk043,g_xmdk_m.xmdk031,g_xmdk_m.xmdk031_desc,g_xmdk_m.xmdk033,g_xmdk_m.xmdk033_desc, 
       g_xmdk_m.xmdk085,g_xmdk_m.xmdk086,g_xmdk_m.xmdk087,g_xmdk_m.xmdk044,g_xmdk_m.xmdk035,g_xmdk_m.xmdk046, 
       g_xmdk_m.xmdk036,g_xmdk_m.xmdk083,g_xmdk_m.xmdkownid,g_xmdk_m.xmdkownid_desc,g_xmdk_m.xmdkowndp, 
       g_xmdk_m.xmdkowndp_desc,g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtid_desc,g_xmdk_m.xmdkcrtdp,g_xmdk_m.xmdkcrtdp_desc, 
       g_xmdk_m.xmdkcrtdt,g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmodid_desc,g_xmdk_m.xmdkmoddt,g_xmdk_m.xmdkcnfid, 
       g_xmdk_m.xmdkcnfid_desc,g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid,g_xmdk_m.xmdkpstid_desc,g_xmdk_m.xmdkpstdt 
 
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
                           
   #end add-point 
   #160512-00004#2-add-'xmdl058,xmdl057'
   LET g_forupd_sql = "SELECT xmdlsite,xmdlseq,xmdl001,xmdl002,xmdl003,xmdl004,xmdl005,xmdl006,xmdl007, 
       xmdl008,xmdl009,xmdl033,xmdl011,xmdl012,xmdl050,xmdl094,xmdl095,xmdl017,xmdl018,xmdl019,xmdl020, 
       xmdl010,xmdl013,xmdl014,xmdl015,xmdl016,xmdl052,xmdl021,xmdl022,xmdl023,xmdl041,xmdl030,xmdl031, 
       xmdl032,xmdl058,xmdl057,xmdl051,xmdl088,xmdlseq,xmdl048,xmdl049,xmdl024,xmdl025,xmdl026,xmdl027,xmdl028,xmdl029, 
       xmdl042,xmdl043,xmdl044,xmdl045,xmdl046,xmdl087 FROM xmdl_t WHERE xmdlent=? AND xmdldocno=? AND  
       xmdlseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
                           
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt600_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql name="input.define_sql2"
                           
   #end add-point    
   LET g_forupd_sql = "SELECT xmdmsite,xmdmseq,xmdmseq1,xmdm001,xmdm002,xmdm003,xmdm004,xmdm005,xmdm006, 
       xmdm007,xmdm033,xmdm008,xmdm009,xmdm010,xmdm011 FROM xmdm_t WHERE xmdment=? AND xmdmdocno=? AND  
       xmdmseq=? AND xmdmseq1=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql2"
                           
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt600_bcl2 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql name="input.other_sql"
                           
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL axmt600_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
                           
   #end add-point
   CALL axmt600_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_xmdk_m.xmdk000,g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001, 
       g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdkstus,g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk007, 
       g_xmdk_m.xmdk009,g_xmdk_m.xmdk008,g_xmdk_m.xmdk202,g_xmdk_m.xmdk045,g_xmdk_m.xmdk082,g_xmdk_m.xmdk030, 
       g_xmdk_m.xmdk054,g_xmdk_m.xmdk010,g_xmdk_m.xmdk011,g_xmdk_m.xmdk012,g_xmdk_m.xmdk013,g_xmdk_m.xmdk014, 
       g_xmdk_m.xmdk015,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,g_xmdk_m.xmdk084,g_xmdk_m.xmdk018,g_xmdk_m.xmdk041, 
       g_xmdk_m.xmdk037,g_xmdk_m.xmdk042,g_xmdk_m.xmdk043,g_xmdk_m.xmdk031,g_xmdk_m.xmdk033,g_xmdk_m.xmdk085, 
       g_xmdk_m.xmdk086,g_xmdk_m.xmdk087,g_xmdk_m.xmdk044,g_xmdk_m.xmdk035,g_xmdk_m.xmdk046,g_xmdk_m.xmdk036, 
       g_xmdk_m.xmdk083
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
                      
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="axmt600.input.head" >}
      #單頭段
      INPUT BY NAME g_xmdk_m.xmdk000,g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001, 
          g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdkstus,g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk007, 
          g_xmdk_m.xmdk009,g_xmdk_m.xmdk008,g_xmdk_m.xmdk202,g_xmdk_m.xmdk045,g_xmdk_m.xmdk082,g_xmdk_m.xmdk030, 
          g_xmdk_m.xmdk054,g_xmdk_m.xmdk010,g_xmdk_m.xmdk011,g_xmdk_m.xmdk012,g_xmdk_m.xmdk013,g_xmdk_m.xmdk014, 
          g_xmdk_m.xmdk015,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,g_xmdk_m.xmdk084,g_xmdk_m.xmdk018,g_xmdk_m.xmdk041, 
          g_xmdk_m.xmdk037,g_xmdk_m.xmdk042,g_xmdk_m.xmdk043,g_xmdk_m.xmdk031,g_xmdk_m.xmdk033,g_xmdk_m.xmdk085, 
          g_xmdk_m.xmdk086,g_xmdk_m.xmdk087,g_xmdk_m.xmdk044,g_xmdk_m.xmdk035,g_xmdk_m.xmdk046,g_xmdk_m.xmdk036, 
          g_xmdk_m.xmdk083 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN axmt600_cl USING g_enterprise,g_xmdk_m.xmdkdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axmt600_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE axmt600_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL axmt600_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            CALL cl_showmsg_init()
            #160225-00028#1-mod-(S)
#            CALL axmt600_set_entry(p_cmd)
#            CALL axmt600_set_no_entry(p_cmd)
            CALL axmt600_set_no_required(p_cmd)
            CALL axmt600_set_required(p_cmd)
            #160225-00028#1-mod-(E)
            #end add-point
            CALL axmt600_set_no_entry(p_cmd)
    
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk000
            #add-point:BEFORE FIELD xmdk000 name="input.b.xmdk000"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk000
            
            #add-point:AFTER FIELD xmdk000 name="input.a.xmdk000"
                                                                                                            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk000
            #add-point:ON CHANGE xmdk000 name="input.g.xmdk000"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdksite
            #add-point:BEFORE FIELD xmdksite name="input.b.xmdksite"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdksite
            
            #add-point:AFTER FIELD xmdksite name="input.a.xmdksite"
                                                                                                            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdksite
            #add-point:ON CHANGE xmdksite name="input.g.xmdksite"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdkdocno
            
            #add-point:AFTER FIELD xmdkdocno name="input.a.xmdkdocno"
            CALL s_aooi200_get_slip_desc(g_xmdk_m.xmdkdocno) RETURNING g_xmdk_m.xmdkdocno_desc
            DISPLAY BY NAME g_xmdk_m.xmdkdocno_desc               
 
            IF cl_null(g_xmdk_m.xmdkdocno) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'sub-00324'   #單號欄位不可為空！
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

               NEXT FIELD CURRENT
            END IF

            #重複性檢查
            IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xmdk_m.xmdkdocno != g_xmdkdocno_t )) THEN
               IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmdk_t WHERE "||"xmdkent = '" ||g_enterprise|| "' AND "||"xmdkdocno = '"||g_xmdk_m.xmdkdocno ||"'",'std-00004',0) THEN
                  LET g_xmdk_m.xmdkdocno = g_xmdkdocno_t
                  CALL s_aooi200_get_slip_desc(g_xmdk_m.xmdkdocno) RETURNING g_xmdk_m.xmdkdocno_desc
                  DISPLAY BY NAME g_xmdk_m.xmdkdocno_desc                  
                  
                  NEXT FIELD CURRENT
               END IF
            END IF

            IF g_xmdk_m.xmdkdocno <> g_xmdk_m_o.xmdkdocno OR cl_null(g_xmdk_m_o.xmdkdocno) THEN
               LET g_xmdkdocno_o = g_xmdk_m_o.xmdkdocno       #161020-00019#1 add
               
               #檢查單別
               IF NOT s_aooi200_chk_slip(g_site,'',g_xmdk_m.xmdkdocno,g_prog) THEN
                  LET g_xmdk_m.xmdkdocno = g_xmdk_m_o.xmdkdocno
             
                  CALL s_aooi200_get_slip_desc(g_xmdk_m.xmdkdocno) RETURNING g_xmdk_m.xmdkdocno_desc
                  DISPLAY BY NAME g_xmdk_m.xmdkdocno_desc
             
                  NEXT FIELD CURRENT
               END IF            
               
               #檢核輸入的單據別是否可以被key人員對應的控制組使用,'2' 為銷售控制組類型
               CALL s_control_chk_doc('1',g_xmdk_m.xmdkdocno,'2',g_user,g_dept,'','') RETURNING l_success,l_flag
               IF NOT l_success OR NOT l_flag THEN
                  LET g_xmdk_m.xmdkdocno = g_xmdk_m_o.xmdkdocno
             
                  CALL s_aooi200_get_slip_desc(g_xmdk_m.xmdkdocno) RETURNING g_xmdk_m.xmdkdocno_desc
                  DISPLAY BY NAME g_xmdk_m.xmdkdocno_desc
             
                  NEXT FIELD CURRENT
               END IF

#               IF NOT cl_null(g_xmdk_m.xmdk005) THEN  #已輸入出貨單或簽收單
#               
#                  #檢核前後置單別的合理性
#                  IF NOT s_aooi210_check_doc(g_site,'',g_xmdk_m.xmdk005,g_xmdk_m.xmdkdocno,'3','') THEN
#                     LET g_xmdk_m.xmdkdocno = g_xmdk_m_o.xmdkdocno
#           
#                     CALL s_aooi200_get_slip_desc(g_xmdk_m.xmdkdocno) RETURNING g_xmdk_m.xmdkdocno_desc
#                     DISPLAY BY NAME g_xmdk_m.xmdkdocno_desc
#           
#                     NEXT FIELD CURRENT
#                  END IF            
#               END IF

               #客戶編號檢查
               IF NOT cl_null(g_xmdk_m.xmdk007) THEN               
                  IF NOT s_axmt540_client_chk(g_xmdk_m.xmdkdocno,'1',g_xmdk_m.xmdk007,'') THEN
                     LET g_xmdk_m.xmdkdocno = g_xmdk_m_o.xmdkdocno
             
                     CALL s_aooi200_get_slip_desc(g_xmdk_m.xmdkdocno) RETURNING g_xmdk_m.xmdkdocno_desc
                     DISPLAY BY NAME g_xmdk_m.xmdkdocno_desc
                     
                     NEXT FIELD CURRENT
                  END IF
               END IF
               
               LET g_xmdk_m.xmdk005 = ''  #出通單號為空
               LET g_xmdk_m.xmdk006 = ''  #訂單單號清空
               LET g_xmdk_m.xmdk018 = ''  #取價方式

               LET g_xmdk_m.xmdk035 = ''  #多角序號
               LET g_xmdk_m.xmdk036 = ''  #POS單號
               LET g_xmdk_m.xmdk083 = 'N' #多角貿易已拋轉
             
               DISPLAY BY NAME g_xmdk_m.xmdk005
               DISPLAY BY NAME g_xmdk_m.xmdk006
               DISPLAY BY NAME g_xmdk_m.xmdk018
               DISPLAY BY NAME g_xmdk_m.xmdk035
               DISPLAY BY NAME g_xmdk_m.xmdk036
               DISPLAY BY NAME g_xmdk_m.xmdk083               
               
               CALL axmt600_xmdk018_ref()
               
               #單據別預設欄位
               CALL axmt600_doc_default()
            END IF

            LET g_xmdk_m_o.xmdkdocno = g_xmdk_m.xmdkdocno    

            CALL axmt600_set_entry(p_cmd)
            #160225-00028#1-add-(S)
            CALL axmt600_set_no_required(p_cmd)
            CALL axmt600_set_required(p_cmd)
            #160225-00028#1-add-(E)
            CALL axmt600_set_no_entry(p_cmd)
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdkdocno
            #add-point:BEFORE FIELD xmdkdocno name="input.b.xmdkdocno"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdkdocno
            #add-point:ON CHANGE xmdkdocno name="input.g.xmdkdocno"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdkdocdt
            #add-point:BEFORE FIELD xmdkdocdt name="input.b.xmdkdocdt"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdkdocdt
            
            #add-point:AFTER FIELD xmdkdocdt name="input.a.xmdkdocdt"
            IF NOT cl_null(g_xmdk_m.xmdkdocdt) THEN
               IF g_xmdk_m.xmdkdocdt <> g_xmdk_m_o.xmdkdocdt OR cl_null(g_xmdk_m_o.xmdkdocdt) THEN
                  #151120-00003#1 20151120 mark by beckxie---S
                  #IF NOT axmt600_xmdkdocdt_xmdk001_chk() THEN
                  #   LET g_xmdk_m_o.xmdkdocdt = g_xmdk_m.xmdkdocdt
                  #   
                  #   NEXT FIELD CURRENT
                  #END IF
                  #151120-00003#1 20151120 mark by beckxie---E
               END IF
            END IF
            
            LET g_xmdk_m_o.xmdkdocdt = g_xmdk_m.xmdkdocdt
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdkdocdt
            #add-point:ON CHANGE xmdkdocdt name="input.g.xmdkdocdt"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk001
            #add-point:BEFORE FIELD xmdk001 name="input.b.xmdk001"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk001
            
            #add-point:AFTER FIELD xmdk001 name="input.a.xmdk001"
            
            IF NOT cl_null(g_xmdk_m.xmdk001) THEN
               IF g_xmdk_m.xmdk001 <> g_xmdk_m_o.xmdk001 OR cl_null(g_xmdk_m_o.xmdk001) THEN
                  #151120-00003#1 20151120 mark by beckxie---S
                  #IF NOT axmt600_xmdkdocdt_xmdk001_chk() THEN
                  #   LET g_xmdk_m.xmdk001 = g_xmdk_m_o.xmdk001
                  #   NEXT FIELD CURRENT
                  #END IF
                  #151120-00003#1 20151120 mark by beckxie---E
                  CALL cl_get_para(g_enterprise,g_site,'S-MFG-0031') RETURNING l_para_data
                  IF g_xmdk_m.xmdk001 <= l_para_data THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'axm-00619'   #銷退日期小於關帳日期，請重新輸入！
                     LET g_errparam.extend = g_xmdk_m.xmdk001
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_xmdk_m.xmdk001 = g_xmdk_m_o.xmdk001
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            LET g_xmdk_m_o.xmdk001 = g_xmdk_m.xmdk001
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk001
            #add-point:ON CHANGE xmdk001 name="input.g.xmdk001"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk003
            
            #add-point:AFTER FIELD xmdk003 name="input.a.xmdk003"
            CALL s_desc_get_person_desc(g_xmdk_m.xmdk003) RETURNING g_xmdk_m.xmdk003_desc
            DISPLAY BY NAME g_xmdk_m.xmdk003_desc
            
            IF NOT cl_null(g_xmdk_m.xmdk003) THEN
               IF g_xmdk_m.xmdk003 <> g_xmdk_m_o.xmdk003 OR cl_null(g_xmdk_m_o.xmdk003) THEN               

                  IF NOT s_employee_chk(g_xmdk_m.xmdk003) THEN
                     LET g_xmdk_m.xmdk003 = g_xmdk_m_o.xmdk003

                     CALL s_desc_get_person_desc(g_xmdk_m.xmdk003) RETURNING g_xmdk_m.xmdk003_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk003_desc

                     NEXT FIELD CURRENT
                  END IF
                  
                  #帶出歸屬部門ooag003
                  SELECT ooag003 INTO g_xmdk_m.xmdk004
                    FROM ooag_t
                   WHERE ooagent = g_enterprise
                     AND ooag001 = g_xmdk_m.xmdk003
               
                  LET g_xmdk_m_o.xmdk004 = g_xmdk_m.xmdk004
                  DISPLAY BY NAME g_xmdk_m.xmdk004
                  
                  CALL s_desc_get_department_desc(g_xmdk_m.xmdk004) RETURNING g_xmdk_m.xmdk004_desc
                  DISPLAY BY NAME g_xmdk_m.xmdk004_desc
                  
               END IF
            END IF

            LET g_xmdk_m_o.xmdk003 = g_xmdk_m.xmdk003
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk003
            #add-point:BEFORE FIELD xmdk003 name="input.b.xmdk003"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk003
            #add-point:ON CHANGE xmdk003 name="input.g.xmdk003"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk004
            
            #add-point:AFTER FIELD xmdk004 name="input.a.xmdk004"
            
            CALL s_desc_get_department_desc(g_xmdk_m.xmdk004) RETURNING g_xmdk_m.xmdk004_desc
            DISPLAY BY NAME g_xmdk_m.xmdk004_desc
   
            IF NOT cl_null(g_xmdk_m.xmdk004) THEN 
               IF g_xmdk_m.xmdk004 <> g_xmdk_m_o.xmdk004 OR cl_null(g_xmdk_m_o.xmdk004) THEN

                  IF NOT s_department_chk(g_xmdk_m.xmdk004,g_xmdk_m.xmdkdocdt) THEN
                     LET g_xmdk_m.xmdk004 = g_xmdk_m_o.xmdk004

                     CALL s_desc_get_department_desc(g_xmdk_m.xmdk004) RETURNING g_xmdk_m.xmdk004_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk004_desc

                     NEXT FIELD CURRENT
                  END IF               
               END IF
            END IF 

            LET g_xmdk_m_o.xmdk004 = g_xmdk_m.xmdk004
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk004
            #add-point:BEFORE FIELD xmdk004 name="input.b.xmdk004"
            IF cl_null(g_xmdk_m.xmdkdocdt) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'sub-00508'  #單據日期不可為空!
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               
               CALL cl_err()
               NEXT FIELD xmdkdocdt
            END IF
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk004
            #add-point:ON CHANGE xmdk004 name="input.g.xmdk004"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdkstus
            #add-point:BEFORE FIELD xmdkstus name="input.b.xmdkstus"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdkstus
            
            #add-point:AFTER FIELD xmdkstus name="input.a.xmdkstus"
                                                                                                            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdkstus
            #add-point:ON CHANGE xmdkstus name="input.g.xmdkstus"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk005
            #add-point:BEFORE FIELD xmdk005 name="input.b.xmdk005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk005
            
            #add-point:AFTER FIELD xmdk005 name="input.a.xmdk005"
            
            IF NOT cl_null(g_xmdk_m.xmdk005) THEN             
               IF g_xmdk_m.xmdk005 <> g_xmdk_m_o.xmdk005 OR cl_null(g_xmdk_m_o.xmdk005) THEN

                  IF NOT axmt600_ship_chk(g_xmdk_m.xmdk005,'1') THEN
                     LET g_xmdk_m.xmdk005 = g_xmdk_m_o.xmdk005
                     NEXT FIELD CURRENT
                  END IF
                        
                  CALL axmt600_xmdk005_default()    #帶出出貨單單頭
               END IF
            ELSE
               #清空No_entry欄位
               LET g_xmdk_m.xmdk006 = ''  #訂單單號
               LET g_xmdk_m_o.xmdk006 = g_xmdk_m.xmdk006
               DISPLAY BY NAME g_xmdk_m.xmdk006
               
               LET g_xmdk_m.xmdk037 = ''  #發票號碼
               LET g_xmdk_m_o.xmdk037 = g_xmdk_m.xmdk037
               DISPLAY BY NAME g_xmdk_m.xmdk037
                     
               LET g_xmdk_m.xmdk035 = ''  #多角序號
               LET g_xmdk_m_o.xmdk035 = g_xmdk_m.xmdk035
               DISPLAY BY NAME g_xmdk_m.xmdk035
               
               LET g_xmdk_m.xmdk036 = ''  #POS單號
               LET g_xmdk_m_o.xmdk036 = g_xmdk_m.xmdk036
               DISPLAY BY NAME g_xmdk_m.xmdk036
               
               LET g_xmdk_m.xmdk083 = 'N' #多角貿易已拋轉
               LET g_xmdk_m_o.xmdk083 = g_xmdk_m.xmdk083
               DISPLAY BY NAME g_xmdk_m.xmdk083             
            END IF 

            LET g_xmdk_m_o.xmdk005 = g_xmdk_m.xmdk005

            CALL axmt600_set_entry(p_cmd)
            CALL axmt600_set_no_entry(p_cmd)
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk005
            #add-point:ON CHANGE xmdk005 name="input.g.xmdk005"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk006
            #add-point:BEFORE FIELD xmdk006 name="input.b.xmdk006"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk006
            
            #add-point:AFTER FIELD xmdk006 name="input.a.xmdk006"
 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk006
            #add-point:ON CHANGE xmdk006 name="input.g.xmdk006"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk007
            
            #add-point:AFTER FIELD xmdk007 name="input.a.xmdk007"
          
            CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk007) RETURNING g_xmdk_m.xmdk007_desc
            DISPLAY BY NAME g_xmdk_m.xmdk007_desc

            IF NOT cl_null(g_xmdk_m.xmdk007) THEN
               IF g_xmdk_m.xmdk007 <> g_xmdk_m_o.xmdk007 OR cl_null(g_xmdk_m_o.xmdk007) THEN

                  IF NOT s_axmt540_client_chk(g_xmdk_m.xmdkdocno,'1',g_xmdk_m.xmdk007,'') THEN
                     LET g_xmdk_m.xmdk007 = g_xmdk_m_o.xmdk007

                     CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk007) RETURNING g_xmdk_m.xmdk007_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk007_desc

                     NEXT FIELD CURRENT
                  END IF
                  
                  CALL axmt600_xmdk007_default()     #自動帶出客戶預設資料

                  #帶出收款客戶            
                  CALL s_axmt540_client_partner(g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk007,'1') RETURNING g_xmdk_m.xmdk008
                  LET g_xmdk_m_o.xmdk008 = g_xmdk_m.xmdk008
                  DISPLAY BY NAME g_xmdk_m.xmdk008
              
                  CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk008) RETURNING g_xmdk_m.xmdk008_desc
                  DISPLAY BY NAME g_xmdk_m.xmdk008_desc
                                           
                  #帶出收貨客戶
                  CALL s_axmt540_client_partner(g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk007,'2') RETURNING g_xmdk_m.xmdk009
                  LET g_xmdk_m_o.xmdk009 = g_xmdk_m.xmdk009
                  DISPLAY BY NAME g_xmdk_m.xmdk009
                   
                  CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk009) RETURNING g_xmdk_m.xmdk009_desc
                  DISPLAY BY NAME g_xmdk_m.xmdk009_desc                  
                  
                  #帶出發票客戶
                  CALL s_axmt540_client_partner(g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk007,'3') RETURNING g_xmdk_m.xmdk202
                  LET g_xmdk_m_o.xmdk202 = g_xmdk_m.xmdk202
                  DISPLAY BY NAME g_xmdk_m.xmdk202
                  
                  CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk202) RETURNING g_xmdk_m.xmdk202_desc
                  DISPLAY BY NAME g_xmdk_m.xmdk202_desc
               END IF
            END IF               

            LET g_xmdk_m_o.xmdk007 = g_xmdk_m.xmdk007 
                                                                                  
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk007
            #add-point:BEFORE FIELD xmdk007 name="input.b.xmdk007"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk007
            #add-point:ON CHANGE xmdk007 name="input.g.xmdk007"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk009
            
            #add-point:AFTER FIELD xmdk009 name="input.a.xmdk009"

            CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk009) RETURNING g_xmdk_m.xmdk009_desc
            DISPLAY BY NAME g_xmdk_m.xmdk009_desc

            IF NOT cl_null(g_xmdk_m.xmdk009) THEN                                                       
               IF g_xmdk_m.xmdk009 <> g_xmdk_m_o.xmdk009 OR cl_null(g_xmdk_m_o.xmdk009) THEN
               
                  IF NOT s_axmt540_client_chk('','2',g_xmdk_m.xmdk007,g_xmdk_m.xmdk009) THEN
                     LET g_xmdk_m.xmdk009 = g_xmdk_m_o.xmdk009

                     CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk009) RETURNING g_xmdk_m.xmdk009_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk009_desc

                     NEXT FIELD CURRENT
                  END IF
                  
               END IF            
            END IF 

            LET g_xmdk_m_o.xmdk009 = g_xmdk_m.xmdk009
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk009
            #add-point:BEFORE FIELD xmdk009 name="input.b.xmdk009"
            IF cl_null(g_xmdk_m.xmdk007) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00145'    #請先輸入客戶編號
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()     
               NEXT FIELD xmdk007
            END IF
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk009
            #add-point:ON CHANGE xmdk009 name="input.g.xmdk009"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk008
            
            #add-point:AFTER FIELD xmdk008 name="input.a.xmdk008"

            CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk008) RETURNING g_xmdk_m.xmdk008_desc
            DISPLAY BY NAME g_xmdk_m.xmdk008_desc

            IF NOT cl_null(g_xmdk_m.xmdk008) THEN                                             
               IF g_xmdk_m.xmdk008 <> g_xmdk_m_o.xmdk008 OR cl_null(g_xmdk_m_o.xmdk008) THEN
               
                  IF NOT s_axmt540_client_chk('','3',g_xmdk_m.xmdk007,g_xmdk_m.xmdk008) THEN
                     LET g_xmdk_m.xmdk008 = g_xmdk_m_o.xmdk008

                     CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk008) RETURNING g_xmdk_m.xmdk008_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk008_desc

                     NEXT FIELD CURRENT
                  END IF
                  
               END IF              
            END IF 

            LET g_xmdk_m_o.xmdk008 = g_xmdk_m.xmdk008
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk008
            #add-point:BEFORE FIELD xmdk008 name="input.b.xmdk008"
            IF cl_null(g_xmdk_m.xmdk007) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00145'         #請先輸入客戶編號
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
               NEXT FIELD xmdk007
            END IF 
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk008
            #add-point:ON CHANGE xmdk008 name="input.g.xmdk008"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk202
            
            #add-point:AFTER FIELD xmdk202 name="input.a.xmdk202"
            CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk202) RETURNING g_xmdk_m.xmdk202_desc
            DISPLAY BY NAME g_xmdk_m.xmdk202_desc

            IF NOT cl_null(g_xmdk_m.xmdk202) THEN                                             
               IF g_xmdk_m.xmdk202 <> g_xmdk_m_o.xmdk202 OR cl_null(g_xmdk_m_o.xmdk202) THEN
               
                  IF NOT s_axmt540_client_chk('','4',g_xmdk_m.xmdk007,g_xmdk_m.xmdk202) THEN
                     LET g_xmdk_m.xmdk202 = g_xmdk_m_o.xmdk202

                     CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk202) RETURNING g_xmdk_m.xmdk202_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk202_desc

                     NEXT FIELD CURRENT
                  END IF
                  
               END IF              
            END IF 

            LET g_xmdk_m_o.xmdk202 = g_xmdk_m.xmdk202
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk202
            #add-point:BEFORE FIELD xmdk202 name="input.b.xmdk202"
            IF cl_null(g_xmdk_m.xmdk007) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00145'    #請先輸入客戶編號
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()     
               NEXT FIELD xmdk007
            END IF
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk202
            #add-point:ON CHANGE xmdk202 name="input.g.xmdk202"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk045
            #add-point:BEFORE FIELD xmdk045 name="input.b.xmdk045"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk045
            
            #add-point:AFTER FIELD xmdk045 name="input.a.xmdk045"
            IF NOT cl_null(g_xmdk_m.xmdk045) THEN
               IF g_xmdk_m.xmdk045 <> g_xmdk_m_o.xmdk045 OR cl_null(g_xmdk_m_o.xmdk045) THEN
                  
                  IF NOT axmt600_xmdk045_xmdk082_chk(g_xmdk_m.xmdk045,g_xmdk_m.xmdk082) THEN
                     LET g_xmdk_m.xmdk045 = g_xmdk_m_o.xmdk045
                     NEXT FIELD CURRENT
                  END IF
                  
                  #3統銷統收時，才開放輸入多角流程代碼
                  IF g_xmdk_m.xmdk045 <> '3' THEN
                     LET g_xmdk_m.xmdk044 = ''
                  END IF
               END IF
            END IF
            
            LET g_xmdk_m_o.xmdk044 = g_xmdk_m.xmdk044
            LET g_xmdk_m_o.xmdk045 = g_xmdk_m.xmdk045
            
            CALL axmt600_set_entry(p_cmd)
            CALL axmt600_set_no_required(p_cmd)
            CALL axmt600_set_required(p_cmd)
            CALL axmt600_set_no_entry(p_cmd)
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk045
            #add-point:ON CHANGE xmdk045 name="input.g.xmdk045"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk082
            #add-point:BEFORE FIELD xmdk082 name="input.b.xmdk082"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk082
            
            #add-point:AFTER FIELD xmdk082 name="input.a.xmdk082"
            IF NOT cl_null(g_xmdk_m.xmdk082) THEN 
               IF g_xmdk_m.xmdk082 <> g_xmdk_m_o.xmdk082 OR cl_null(g_xmdk_m_o.xmdk082) THEN
                  IF NOT axmt600_xmdk082_chk(g_xmdk_m.xmdk005,g_xmdk_m.xmdk082) THEN
                     LET g_xmdk_m.xmdk082 = g_xmdk_m_o.xmdk082
                     NEXT FIELD CURRENT
                  END IF
                  
                  IF NOT axmt600_xmdk045_xmdk082_chk(g_xmdk_m.xmdk045,g_xmdk_m.xmdk082) THEN
                     LET g_xmdk_m.xmdk082 = g_xmdk_m_o.xmdk082
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            LET g_xmdk_m_o.xmdk082 = g_xmdk_m.xmdk082

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk082
            #add-point:ON CHANGE xmdk082 name="input.g.xmdk082"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk030
            
            #add-point:AFTER FIELD xmdk030 name="input.a.xmdk030"
            #160621-00003#3 20160629 modify by beckxie---S
            #CALL s_desc_get_acc_desc('275',g_xmdk_m.xmdk030) RETURNING g_xmdk_m.xmdk030_desc
            CALL s_desc_get_oojdl003_desc(g_xmdk_m.xmdk030) RETURNING g_xmdk_m.xmdk030_desc
            #160621-00003#3 20160629 modify by beckxie---E
            
            DISPLAY BY NAME g_xmdk_m.xmdk030_desc
   
            IF NOT cl_null(g_xmdk_m.xmdk030) THEN 
               IF g_xmdk_m.xmdk030 <> g_xmdk_m_o.xmdk030 OR cl_null(g_xmdk_m_o.xmdk030) THEN 
                  #160621-00003#3 20160627 modify by beckxie---S
                  #IF NOT s_azzi650_chk_exist('275',g_xmdk_m.xmdk030) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmdk_m.xmdk030
                  LET g_chkparam.arg2 = '1'
                  LET g_chkparam.err_str[1] = "aoo-00299|",l_msg1
                  IF NOT cl_chk_exist("v_oojd001") THEN
                  #160621-00003#3 20160627 modify by beckxie---E
                  
                     LET g_xmdk_m.xmdk030 = g_xmdk_m_o.xmdk030
 
                     #160621-00003#3 20160629 modify by beckxie---S
                     #CALL s_desc_get_acc_desc('275',g_xmdk_m.xmdk030) RETURNING g_xmdk_m.xmdk030_desc
                     CALL s_desc_get_oojdl003_desc(g_xmdk_m.xmdk030) RETURNING g_xmdk_m.xmdk030_desc
                     #160621-00003#3 20160629 modify by beckxie---E
                     DISPLAY BY NAME g_xmdk_m.xmdk030_desc

                     NEXT FIELD CURRENT
                  END IF           
                  
               END IF
            END IF 
            
            LET g_xmdk_m_o.xmdk030 = g_xmdk_m.xmdk030

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk030
            #add-point:BEFORE FIELD xmdk030 name="input.b.xmdk030"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk030
            #add-point:ON CHANGE xmdk030 name="input.g.xmdk030"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk054
            #add-point:BEFORE FIELD xmdk054 name="input.b.xmdk054"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk054
            
            #add-point:AFTER FIELD xmdk054 name="input.a.xmdk054"
                                                                                                            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk054
            #add-point:ON CHANGE xmdk054 name="input.g.xmdk054"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk010
            
            #add-point:AFTER FIELD xmdk010 name="input.a.xmdk010"

            CALL s_desc_get_ooib002_desc(g_xmdk_m.xmdk010) RETURNING g_xmdk_m.xmdk010_desc
            DISPLAY BY NAME g_xmdk_m.xmdk010_desc

            IF NOT cl_null(g_xmdk_m.xmdk010) THEN         
               IF g_xmdk_m.xmdk010 <> g_xmdk_m_o.xmdk010 OR cl_null(g_xmdk_m_o.xmdk010) THEN
                  IF NOT s_axmt540_receive_condition_chk(g_xmdk_m.xmdk007,g_xmdk_m.xmdk010) THEN
                     LET g_xmdk_m.xmdk010 = g_xmdk_m_o.xmdk010

                     CALL s_desc_get_ooib002_desc(g_xmdk_m.xmdk010) RETURNING g_xmdk_m.xmdk010_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk010_desc

                     NEXT FIELD CURRENT
                  END IF
               END IF            
            END IF 
            
            LET g_xmdk_m_o.xmdk010 = g_xmdk_m.xmdk010
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk010
            #add-point:BEFORE FIELD xmdk010 name="input.b.xmdk010"
            IF cl_null(g_xmdk_m.xmdk007) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00145'          #請先輸入客戶編號
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
               NEXT FIELD xmdk007
            END IF                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk010
            #add-point:ON CHANGE xmdk010 name="input.g.xmdk010"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk011
            
            #add-point:AFTER FIELD xmdk011 name="input.a.xmdk011"

            CALL s_desc_get_acc_desc('238',g_xmdk_m.xmdk011) RETURNING g_xmdk_m.xmdk011_desc
            DISPLAY BY NAME g_xmdk_m.xmdk011_desc

            IF NOT cl_null(g_xmdk_m.xmdk011) THEN
               IF g_xmdk_m.xmdk010 <> g_xmdk_m_o.xmdk010 OR cl_null(g_xmdk_m_o.xmdk010) THEN
                  IF NOT s_azzi650_chk_exist('238',g_xmdk_m.xmdk011) THEN
                     LET g_xmdk_m.xmdk011 = g_xmdk_m_o.xmdk011

                     CALL s_desc_get_acc_desc('238',g_xmdk_m.xmdk011) RETURNING g_xmdk_m.xmdk011_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk011_desc

                     NEXT FIELD CURRENT
                  END IF
               END IF            
            END IF 
            
            LET g_xmdk_m_o.xmdk011 = g_xmdk_m.xmdk011
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk011
            #add-point:BEFORE FIELD xmdk011 name="input.b.xmdk011"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk011
            #add-point:ON CHANGE xmdk011 name="input.g.xmdk011"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk012
            
            #add-point:AFTER FIELD xmdk012 name="input.a.xmdk012"
            CALL s_desc_get_tax_desc1(g_site,g_xmdk_m.xmdk012) RETURNING g_xmdk_m.xmdk012_desc
            DISPLAY BY NAME g_xmdk_m.xmdk012_desc
            
            IF NOT cl_null(g_xmdk_m.xmdk012) THEN 
               IF g_xmdk_m.xmdk012 <> g_xmdk_m_o.xmdk012 OR cl_null(g_xmdk_m_o.xmdk012) THEN
                  
                  #檢查、取得稅別、單價含稅否
                  CALL s_tax_chk(g_site,g_xmdk_m.xmdk012)
                  RETURNING l_success,l_oodbl004,l_oodb005,l_oodb006,l_oodb011 
       
                  IF NOT l_success THEN
                     LET g_xmdk_m.xmdk012 = g_xmdk_m_o.xmdk012
                     DISPLAY BY NAME g_xmdk_m.xmdk012
                     
                     CALL s_desc_get_tax_desc1(g_site,g_xmdk_m.xmdk012) RETURNING g_xmdk_m.xmdk012_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk012_desc
                     
                     NEXT FIELD CURRENT
                  END IF       

                  #更新單身
                  IF NOT axmt600_detail_update(l_oodb006,l_oodb011,g_xmdk_m.xmdk017,'1') THEN
                     LET g_xmdk_m.xmdk012 = g_xmdk_m_o.xmdk012
                     DISPLAY BY NAME g_xmdk_m.xmdk012
                     
                     CALL s_transaction_end('N',0)
                     CALL s_transaction_begin()
                     
                     CALL s_desc_get_tax_desc1(g_site,g_xmdk_m.xmdk012) RETURNING g_xmdk_m.xmdk012_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk012_desc
                     
                     NEXT FIELD CURRENT
                  END IF
                              
                  LET g_xmdk_m.xmdk013 = l_oodb006
                  LET g_xmdk_m.xmdk014 = l_oodb005
                  DISPLAY BY NAME g_xmdk_m.xmdk013
                  DISPLAY BY NAME g_xmdk_m.xmdk014            
               END IF
            END IF 
            
            LET g_xmdk_m_o.xmdk012 = g_xmdk_m.xmdk012
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk012
            #add-point:BEFORE FIELD xmdk012 name="input.b.xmdk012"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk012
            #add-point:ON CHANGE xmdk012 name="input.g.xmdk012"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk013
            #add-point:BEFORE FIELD xmdk013 name="input.b.xmdk013"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk013
            
            #add-point:AFTER FIELD xmdk013 name="input.a.xmdk013"
                                                                                                            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk013
            #add-point:ON CHANGE xmdk013 name="input.g.xmdk013"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk014
            #add-point:BEFORE FIELD xmdk014 name="input.b.xmdk014"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk014
            
            #add-point:AFTER FIELD xmdk014 name="input.a.xmdk014"
                                                                                                            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk014
            #add-point:ON CHANGE xmdk014 name="input.g.xmdk014"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk015
            
            #add-point:AFTER FIELD xmdk015 name="input.a.xmdk015"
            CALL s_desc_get_invoice_type_desc1(g_site,g_xmdk_m.xmdk015) RETURNING g_xmdk_m.xmdk015_desc
            DISPLAY BY NAME g_xmdk_m.xmdk015_desc
            
            IF NOT cl_null(g_xmdk_m.xmdk015) THEN 
               IF g_xmdk_m.xmdk015 <> g_xmdk_m_o.xmdk015 OR cl_null(g_xmdk_m_o.xmdk015) THEN

                  #取得稅區
                  CALL s_tax_get_ooef019(g_site) RETURNING l_success,l_ooef019

                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
               
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = l_ooef019
                  LET g_chkparam.arg2 = g_xmdk_m.xmdk015
                  
                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_isac002") THEN
                     LET g_xmdk_m.xmdk015 = g_xmdk_m_o.xmdk015

                     CALL s_desc_get_invoice_type_desc1(g_site,g_xmdk_m.xmdk015) RETURNING g_xmdk_m.xmdk015_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk015_desc

                     NEXT FIELD CURRENT
                  END IF            
               END IF
            END IF 
            
            LET g_xmdk_m_o.xmdk015 = g_xmdk_m.xmdk015
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk015
            #add-point:BEFORE FIELD xmdk015 name="input.b.xmdk015"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk015
            #add-point:ON CHANGE xmdk015 name="input.g.xmdk015"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk016
            
            #add-point:AFTER FIELD xmdk016 name="input.a.xmdk016"
            CALL s_desc_get_currency_desc(g_xmdk_m.xmdk016) RETURNING g_xmdk_m.xmdk016_desc
            DISPLAY BY NAME g_xmdk_m.xmdk016_desc
                        
            IF NOT cl_null(g_xmdk_m.xmdk016) THEN      
               IF g_xmdk_m.xmdk016 <> g_xmdk_m_o.xmdk016 OR cl_null(g_xmdk_m_o.xmdk016) THEN
                  
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
               
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_site               
                  LET g_chkparam.arg2 = g_xmdk_m.xmdk016
                  
                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_ooaj002") THEN
                     LET g_xmdk_m.xmdk016 = g_xmdk_m_o.xmdk016
                     
                     CALL s_desc_get_currency_desc(g_xmdk_m.xmdk016) RETURNING g_xmdk_m.xmdk016_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk016_desc                     
                     
                     NEXT FIELD CURRENT
                  END IF
                  
                  LET l_xmdk017 = g_xmdk_m.xmdk017
                  CALL axmt600_get_exchange()

                  #更新單身
                  IF NOT axmt600_detail_update('','',g_xmdk_m.xmdk017,'2') THEN
                     LET g_xmdk_m.xmdk017 = l_xmdk017
                     DISPLAY BY NAME g_xmdk_m.xmdk017
                     LET g_xmdk_m.xmdk016 = g_xmdk_m_o.xmdk016
                     CALL s_desc_get_currency_desc(g_xmdk_m.xmdk016) RETURNING g_xmdk_m.xmdk016_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk016_desc

                     CALL s_transaction_end('N',0)
                     CALL s_transaction_begin()                     
                     
                     NEXT FIELD CURRENT
                  END IF

               END IF
            END IF                         
            
            LET g_xmdk_m_o.xmdk016 = g_xmdk_m.xmdk016
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk016
            #add-point:BEFORE FIELD xmdk016 name="input.b.xmdk016"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk016
            #add-point:ON CHANGE xmdk016 name="input.g.xmdk016"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk017
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdk_m.xmdk017,"0","0","","","azz-00079",1) THEN
               NEXT FIELD xmdk017
            END IF 
 
 
 
            #add-point:AFTER FIELD xmdk017 name="input.a.xmdk017"
            IF NOT cl_null(g_xmdk_m.xmdk017) THEN
               IF g_xmdk_m.xmdk017 <> g_xmdk_m_o.xmdk017 OR cl_null(g_xmdk_m_o.xmdk017) THEN

                  #更新單身
                  IF NOT axmt600_detail_update('','',g_xmdk_m.xmdk017,'2') THEN
                     LET g_xmdk_m.xmdk017 = g_xmdk_m_o.xmdk017

                     CALL s_transaction_end('N',0)
                     CALL s_transaction_begin()
                     
                     NEXT FIELD CURRENT
                  END IF

               END IF
            END IF
            
            LET g_xmdk_m_o.xmdk017 = g_xmdk_m.xmdk017                                                                                     
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk017
            #add-point:BEFORE FIELD xmdk017 name="input.b.xmdk017"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk017
            #add-point:ON CHANGE xmdk017 name="input.g.xmdk017"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk084
            #add-point:BEFORE FIELD xmdk084 name="input.b.xmdk084"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk084
            
            #add-point:AFTER FIELD xmdk084 name="input.a.xmdk084"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk084
            #add-point:ON CHANGE xmdk084 name="input.g.xmdk084"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk018
            
            #add-point:AFTER FIELD xmdk018 name="input.a.xmdk018"
            
            CALL axmt600_xmdk018_ref()            
            IF NOT cl_null(g_xmdk_m.xmdk018) THEN
               IF g_xmdk_m.xmdk018 <> g_xmdk_m_o.xmdk018 OR cl_null(g_xmdk_m_o.xmdk018) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
               
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmdk_m.xmdk018
                  
                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_xmah001") THEN
                     LET g_xmdk_m.xmdk018 = g_xmdk_m_o.xmdk018
                     CALL axmt600_xmdk018_ref()
                     
                     NEXT FIELD CURRENT
                  END IF
                  
                  #更新單身
                  IF NOT axmt600_detail_update('','',g_xmdk_m.xmdk017,'0') THEN
                     LET g_xmdk_m.xmdk018 = g_xmdk_m_o.xmdk018
                     CALL axmt600_xmdk018_ref()

                     CALL s_transaction_end('N',0)
                     CALL s_transaction_begin()

                     NEXT FIELD CURRENT
                  END IF
                  
               END IF
            END IF 

            LET g_xmdk_m_o.xmdk018 = g_xmdk_m.xmdk018
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk018
            #add-point:BEFORE FIELD xmdk018 name="input.b.xmdk018"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk018
            #add-point:ON CHANGE xmdk018 name="input.g.xmdk018"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk041
            #add-point:BEFORE FIELD xmdk041 name="input.b.xmdk041"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk041
            
            #add-point:AFTER FIELD xmdk041 name="input.a.xmdk041"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk041
            #add-point:ON CHANGE xmdk041 name="input.g.xmdk041"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk037
            #add-point:BEFORE FIELD xmdk037 name="input.b.xmdk037"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk037
            
            #add-point:AFTER FIELD xmdk037 name="input.a.xmdk037"
                                                                                                            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk037
            #add-point:ON CHANGE xmdk037 name="input.g.xmdk037"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk042
            #add-point:BEFORE FIELD xmdk042 name="input.b.xmdk042"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk042
            
            #add-point:AFTER FIELD xmdk042 name="input.a.xmdk042"
            IF NOT cl_null(g_xmdk_m.xmdk042) THEN
               IF g_xmdk_m.xmdk042 <> g_xmdk_m_o.xmdk042 OR cl_null(g_xmdk_m_o.xmdk042) THEN
                  LET l_xmdk017 = g_xmdk_m.xmdk017
                  CALL axmt600_get_exchange()
                                    
                  #更新單身
                  IF NOT axmt600_detail_update('','',g_xmdk_m.xmdk017,'2') THEN
                     LET g_xmdk_m.xmdk017 = l_xmdk017
                     DISPLAY BY NAME g_xmdk_m.xmdk017 
                     LET g_xmdk_m.xmdk042 = g_xmdk_m_o.xmdk042

                     CALL s_transaction_end('N',0)
                     CALL s_transaction_begin()

                     NEXT FIELD CURRENT
                  END IF
                  
               END IF
            END IF
            
            LET g_xmdk_m_o.xmdk042 = g_xmdk_m.xmdk042
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk042
            #add-point:ON CHANGE xmdk042 name="input.g.xmdk042"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk043
            #add-point:BEFORE FIELD xmdk043 name="input.b.xmdk043"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk043
            
            #add-point:AFTER FIELD xmdk043 name="input.a.xmdk043"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk043
            #add-point:ON CHANGE xmdk043 name="input.g.xmdk043"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk031
            
            #add-point:AFTER FIELD xmdk031 name="input.a.xmdk031"
            
            CALL s_desc_get_acc_desc('295',g_xmdk_m.xmdk031) RETURNING g_xmdk_m.xmdk031_desc
            DISPLAY BY NAME g_xmdk_m.xmdk031_desc

            IF NOT cl_null(g_xmdk_m.xmdk031) THEN
               IF g_xmdk_m.xmdk031 <> g_xmdk_m_o.xmdk031 OR cl_null(g_xmdk_m_o.xmdk031) THEN               
                  IF NOT s_azzi650_chk_exist('295',g_xmdk_m.xmdk031) THEN
                     LET g_xmdk_m.xmdk031 = g_xmdk_m_o.xmdk031
                
                     CALL s_desc_get_acc_desc('295',g_xmdk_m.xmdk031) RETURNING g_xmdk_m.xmdk031_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk031_desc
                
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 
            
            LET g_xmdk_m_o.xmdk031 = g_xmdk_m.xmdk031
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk031
            #add-point:BEFORE FIELD xmdk031 name="input.b.xmdk031"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk031
            #add-point:ON CHANGE xmdk031 name="input.g.xmdk031"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk033
            
            #add-point:AFTER FIELD xmdk033 name="input.a.xmdk033"
            CALL s_desc_get_acc_desc('209',g_xmdk_m.xmdk033) RETURNING g_xmdk_m.xmdk033_desc
            DISPLAY BY NAME g_xmdk_m.xmdk033_desc
            
            IF NOT cl_null(g_xmdk_m.xmdk033) THEN
               IF g_xmdk_m.xmdk033 <> g_xmdk_m_o.xmdk033 OR cl_null(g_xmdk_m_o.xmdk033) THEN
            
                  IF NOT s_azzi650_chk_exist('209',g_xmdk_m.xmdk033) THEN
                     LET g_xmdk_m.xmdk033 = g_xmdk_m_o.xmdk033
                
                     CALL s_desc_get_acc_desc('209',g_xmdk_m.xmdk033) RETURNING g_xmdk_m.xmdk033_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk033_desc
                
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 

            LET g_xmdk_m_o.xmdk033 = g_xmdk_m.xmdk033
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk033
            #add-point:BEFORE FIELD xmdk033 name="input.b.xmdk033"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk033
            #add-point:ON CHANGE xmdk033 name="input.g.xmdk033"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk085
            #add-point:BEFORE FIELD xmdk085 name="input.b.xmdk085"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk085
            
            #add-point:AFTER FIELD xmdk085 name="input.a.xmdk085"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk085
            #add-point:ON CHANGE xmdk085 name="input.g.xmdk085"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk086
            #add-point:BEFORE FIELD xmdk086 name="input.b.xmdk086"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk086
            
            #add-point:AFTER FIELD xmdk086 name="input.a.xmdk086"
            IF NOT cl_null(g_xmdk_m.xmdk086) THEN 
               IF g_xmdk_m.xmdk086 <> g_xmdk_m_o.xmdk086 OR cl_null(g_xmdk_m_o.xmdk086) THEN
               
                  INITIALIZE g_chkparam.* TO NULL
               
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmdk_m.xmdk086

                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_rmcadocno") THEN
                     LET g_xmdk_m.xmdk086 = g_xmdk_m_o.xmdk086
                     
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 

            LET g_xmdk_m_o.xmdk086 = g_xmdk_m.xmdk086
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk086
            #add-point:ON CHANGE xmdk086 name="input.g.xmdk086"
 
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk087
            #add-point:BEFORE FIELD xmdk087 name="input.b.xmdk087"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk087
            
            #add-point:AFTER FIELD xmdk087 name="input.a.xmdk087"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk087
            #add-point:ON CHANGE xmdk087 name="input.g.xmdk087"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk044
            
            #add-point:AFTER FIELD xmdk044 name="input.a.xmdk044"
            IF NOT cl_null(g_xmdk_m.xmdk044) THEN 
               IF g_xmdk_m.xmdk044 <> g_xmdk_m_o.xmdk044 OR cl_null(g_xmdk_m_o.xmdk044) THEN
               
                  INITIALIZE g_chkparam.* TO NULL
               
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmdk_m.xmdk044
                  LET g_chkparam.arg2 = g_site

                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_icaa001_3") THEN
                     LET g_xmdk_m.xmdk044 = g_xmdk_m_o.xmdk044
                     
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 

            LET g_xmdk_m_o.xmdk044 = g_xmdk_m.xmdk044
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk044
            #add-point:BEFORE FIELD xmdk044 name="input.b.xmdk044"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk044
            #add-point:ON CHANGE xmdk044 name="input.g.xmdk044"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk035
            #add-point:BEFORE FIELD xmdk035 name="input.b.xmdk035"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk035
            
            #add-point:AFTER FIELD xmdk035 name="input.a.xmdk035"
                                                                                                            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk035
            #add-point:ON CHANGE xmdk035 name="input.g.xmdk035"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk046
            #add-point:BEFORE FIELD xmdk046 name="input.b.xmdk046"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk046
            
            #add-point:AFTER FIELD xmdk046 name="input.a.xmdk046"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk046
            #add-point:ON CHANGE xmdk046 name="input.g.xmdk046"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk036
            #add-point:BEFORE FIELD xmdk036 name="input.b.xmdk036"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk036
            
            #add-point:AFTER FIELD xmdk036 name="input.a.xmdk036"
                                                                                                            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk036
            #add-point:ON CHANGE xmdk036 name="input.g.xmdk036"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk083
            #add-point:BEFORE FIELD xmdk083 name="input.b.xmdk083"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk083
            
            #add-point:AFTER FIELD xmdk083 name="input.a.xmdk083"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk083
            #add-point:ON CHANGE xmdk083 name="input.g.xmdk083"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.xmdk000
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk000
            #add-point:ON ACTION controlp INFIELD xmdk000 name="input.c.xmdk000"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.xmdksite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdksite
            #add-point:ON ACTION controlp INFIELD xmdksite name="input.c.xmdksite"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.xmdkdocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdkdocno
            #add-point:ON ACTION controlp INFIELD xmdkdocno name="input.c.xmdkdocno"
            
            #此段落由子樣板a07產生            
            #開窗i段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
   			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdkdocno             #給予default值

            #給予arg
            LET l_ooef004 = ''
            SELECT ooef004 
              INTO l_ooef004
              FROM ooef_t
             WHERE ooefent = g_enterprise 
               AND ooef001 = g_site 
               AND ooefstus = 'Y'
             
            LET g_qryparam.arg1 = l_ooef004
            LET g_qryparam.arg2 = g_prog

            #150909 earl mod s
            IF NOT cl_null(g_xmdk_m.xmdk005) THEN
               CALL s_aooi210_get_search_sql(g_site,'',g_xmdk_m.xmdk005,g_prog) RETURNING l_success,l_where
            ELSE
               LET l_success = TRUE
               LET l_where = "1=1"
            END IF
            
            IF l_success THEN
               #151210-00009#1  2015/12/30 By earl s
               IF g_aic_doc THEN
                  LET l_where = l_where,
                                " AND NOT EXISTS (SELECT 1 FROM icaa_t,icab_t a,icac_t ",
                                "                  WHERE icaaent = a.icabent AND a.icabent = icacent AND icacent = ",g_enterprise,
                                "                    AND icaa001 = a.icab001 AND a.icab001 = icac001",
                                "                    AND a.icab002 = icac002",
                                "                    AND a.icab003 = '",g_site,"'",
                                "                    AND ooba002 = icac009",
                                #排除正拋初始站、逆拋最終站
                                "                    AND NOT ((icaa003 = '1'",
                                "                              AND icaa004 = '1' AND a.icab002 = '0')",
                                "                          OR ((icaa003 = '1' OR icaa003 = '2')",
                                "                              AND icaa004 = '2' AND a.icab002 = (SELECT MAX(b.icab002) FROM icab_t b",
                                "                                                                  WHERE b.icabent = icaaent",
                                "                                                                    AND b.icab001 = icaa001))",
                                "                            )",
                                "                )"
               END IF
               #151210-00009#1  2015/12/30 By earl e
               
               LET g_qryparam.where = l_where
               CALL q_ooba002_1()                                #呼叫開窗

               LET g_xmdk_m.xmdkdocno = g_qryparam.return1              #將開窗取得的值回傳到變數

               DISPLAY g_xmdk_m.xmdkdocno TO xmdkdocno              #顯示到畫面上

               CALL s_aooi200_get_slip_desc(g_xmdk_m.xmdkdocno) RETURNING g_xmdk_m.xmdkdocno_desc
               DISPLAY BY NAME g_xmdk_m.xmdkdocno_desc
            END IF
            #150909 earl mod e
            
            NEXT FIELD xmdkdocno                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmdkdocdt
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdkdocdt
            #add-point:ON ACTION controlp INFIELD xmdkdocdt name="input.c.xmdkdocdt"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk001
            #add-point:ON ACTION controlp INFIELD xmdk001 name="input.c.xmdk001"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk003
            #add-point:ON ACTION controlp INFIELD xmdk003 name="input.c.xmdk003"
            
            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
		   	LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk003             #給予default值

            #給予arg

            CALL q_ooag001()                                #呼叫開窗

            LET g_xmdk_m.xmdk003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk003 TO xmdk003              #顯示到畫面上

            CALL s_desc_get_person_desc(g_xmdk_m.xmdk003) RETURNING g_xmdk_m.xmdk003_desc
            DISPLAY BY NAME g_xmdk_m.xmdk003_desc

            NEXT FIELD xmdk003                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmdk004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk004
            #add-point:ON ACTION controlp INFIELD xmdk004 name="input.c.xmdk004"
            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk004             #給予default值

            #給予arg
            IF NOT cl_null(g_xmdk_m.xmdkdocdt) THEN
               LET g_qryparam.arg1 = g_xmdk_m.xmdkdocdt
            ELSE
               LET g_qryparam.arg1 = g_today
            END IF

            CALL q_ooeg001()                                #呼叫開窗

            LET g_xmdk_m.xmdk004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk004 TO xmdk004              #顯示到畫面上

            CALL s_desc_get_department_desc(g_xmdk_m.xmdk004) RETURNING g_xmdk_m.xmdk004_desc
            DISPLAY BY NAME g_xmdk_m.xmdk004_desc

            NEXT FIELD xmdk004                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmdkstus
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdkstus
            #add-point:ON ACTION controlp INFIELD xmdkstus name="input.c.xmdkstus"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk005
            #add-point:ON ACTION controlp INFIELD xmdk005 name="input.c.xmdk005"
            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk005             #給予default值            

            #組合過濾前後置單據資料SQL(出貨單)
            CALL s_aooi210_get_check_sql(g_site,'',g_xmdk_m.xmdkdocno,'4','','xmdkdocno') RETURNING l_success,l_where

            IF l_success THEN
               LET g_qryparam.where = l_where
               CALL q_xmdkdocno_7()                             #呼叫開窗

               LET g_xmdk_m.xmdk005 = g_qryparam.return1        #將開窗取得的值回傳到變數
               DISPLAY g_xmdk_m.xmdk005 TO xmdk005              #顯示到畫面上
                  
            END IF

            NEXT FIELD xmdk005                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmdk006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk006
            #add-point:ON ACTION controlp INFIELD xmdk006 name="input.c.xmdk006"
 
            #END add-point
 
 
         #Ctrlp:input.c.xmdk007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk007
            #add-point:ON ACTION controlp INFIELD xmdk007 name="input.c.xmdk007"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdk_m.xmdk007             #給予default值
			
			   #單據別是否設置限用的資料
            CALL s_control_get_customer_sql('2',g_site,g_user,g_dept,g_xmdk_m.xmdkdocno) RETURNING l_success,l_where
            IF l_success THEN
               LET g_qryparam.where = l_where
            END IF 
            
            #ming 20141120 add -------------------------(S) 
            LET g_qryparam.arg1 = g_site
            #ming 20141120 add -------------------------(E)

            CALL q_pmaa001_6()                                #呼叫開窗

            LET g_xmdk_m.xmdk007 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk007 TO xmdk007              #顯示到畫面上

            CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk007) RETURNING g_xmdk_m.xmdk007_desc
            DISPLAY BY NAME g_xmdk_m.xmdk007_desc

            NEXT FIELD xmdk007                          #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.xmdk009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk009
            #add-point:ON ACTION controlp INFIELD xmdk009 name="input.c.xmdk009"
            #此段落由子樣板a07產生            
            #開窗i段
            IF cl_null(g_xmdk_m.xmdk007) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00145'         #請先輸入客戶編號
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
               NEXT FIELD xmdk007
            END IF
                        
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk009             #給予default值
            LET g_qryparam.default2 = g_xmdk_m.xmdk009_desc

            #給予arg
            LET g_qryparam.arg1 = g_xmdk_m.xmdk007 
            #ming 20141120 add ----------------------------------(S) 
            LET g_qryparam.arg2 = g_site
            #ming 20141120 add ----------------------------------(E)

            CALL q_pmac002_6()                              #呼叫開窗

            LET g_xmdk_m.xmdk009 = g_qryparam.return1        #將開窗取得的值回傳到變數
            LET g_xmdk_m.xmdk009_desc = g_qryparam.return2   #交易對象簡稱

            DISPLAY g_xmdk_m.xmdk009 TO xmdk009              #顯示到畫面上
            DISPLAY g_xmdk_m.xmdk009_desc TO xmdk009_desc    #交易對象簡稱

            NEXT FIELD xmdk009                          #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.xmdk008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk008
            #add-point:ON ACTION controlp INFIELD xmdk008 name="input.c.xmdk008"
            #此段落由子樣板a07產生            
            #開窗i段
            IF cl_null(g_xmdk_m.xmdk007) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00145'          #請先輸入客戶編號
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
               NEXT FIELD xmdk007
            END IF
            
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk008             #給予default值
            LET g_qryparam.default2 = g_xmdk_m.xmdk008_desc

            #給予arg
            LET g_qryparam.arg1 = g_xmdk_m.xmdk007 
            #ming 20141120 add ---------------------------------(S) 
            LET g_qryparam.arg2 = g_site
            #ming 20141120 add ---------------------------------(E) 

            CALL q_pmac002_5()

            LET g_xmdk_m.xmdk008 = g_qryparam.return1              #將開窗取得的值回傳到變數
            LET g_xmdk_m.xmdk008_desc = g_qryparam.return2         #交易對象簡稱

            DISPLAY g_xmdk_m.xmdk008 TO xmdk008              #顯示到畫面上
            DISPLAY g_xmdk_m.xmdk008_desc TO xmdk008_desc    #交易對象簡稱

            NEXT FIELD xmdk008                          #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.xmdk202
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk202
            #add-point:ON ACTION controlp INFIELD xmdk202 name="input.c.xmdk202"
            
            #此段落由子樣板a07產生            
            #開窗i段
            IF cl_null(g_xmdk_m.xmdk007) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00145'  #請先輸入客戶編號
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               
               CALL cl_err()       
               NEXT FIELD xmdk007
            END IF
            
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk202           #給予default值
            LET g_qryparam.default2 = g_xmdk_m.xmdk202_desc

            #給予arg
            LET g_qryparam.arg1 = g_xmdk_m.xmdk007
            LET g_qryparam.arg2 = g_site

            CALL q_pmac002_7()                               #呼叫開窗

            LET g_xmdk_m.xmdk202 = g_qryparam.return1              #將開窗取得的值回傳到變數
            LET g_xmdk_m.xmdk202_desc = g_qryparam.return2         #交易對象簡稱

            DISPLAY g_xmdk_m.xmdk202 TO xmdk202              #顯示到畫面上
            DISPLAY g_xmdk_m.xmdk202_desc TO xmdk202_desc    #交易對象簡稱

            NEXT FIELD xmdk202                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmdk045
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk045
            #add-point:ON ACTION controlp INFIELD xmdk045 name="input.c.xmdk045"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk082
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk082
            #add-point:ON ACTION controlp INFIELD xmdk082 name="input.c.xmdk082"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk030
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk030
            #add-point:ON ACTION controlp INFIELD xmdk030 name="input.c.xmdk030"
            #此段落由子樣板a07產生            
            #開窗i段
            
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk030             #給予default值

            #給予arg
            #160621-00003#3 20160627 modify by beckxie---S
			   #LET g_qryparam.arg1 = "275"
            #CALL q_oocq002()                           #呼叫開窗
            LET g_qryparam.arg1 = '1'
            CALL q_oojd001_1()
            #160621-00003#3 20160627 modify by beckxie---E

            LET g_xmdk_m.xmdk030 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk030 TO xmdk030              #顯示到畫面上

            #160621-00003#3 20160629 modify by beckxie---S
            #CALL s_desc_get_acc_desc('275',g_xmdk_m.xmdk030) RETURNING g_xmdk_m.xmdk030_desc
            CALL s_desc_get_oojdl003_desc(g_xmdk_m.xmdk030) RETURNING g_xmdk_m.xmdk030_desc
            #160621-00003#3 20160629 modify by beckxie---E
            DISPLAY BY NAME g_xmdk_m.xmdk030_desc
   
            NEXT FIELD xmdk030                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmdk054
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk054
            #add-point:ON ACTION controlp INFIELD xmdk054 name="input.c.xmdk054"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk010
            #add-point:ON ACTION controlp INFIELD xmdk010 name="input.c.xmdk010"
            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk010             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_xmdk_m.xmdk007            #客戶編號

            CALL q_pmad002_3()                                #呼叫開窗

            LET g_xmdk_m.xmdk010 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk010 TO xmdk010              #顯示到畫面上

            CALL s_desc_get_ooib002_desc(g_xmdk_m.xmdk010) RETURNING g_xmdk_m.xmdk010_desc
            DISPLAY BY NAME g_xmdk_m.xmdk010_desc

            NEXT FIELD xmdk010                          #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.xmdk011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk011
            #add-point:ON ACTION controlp INFIELD xmdk011 name="input.c.xmdk011"
            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk011             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '238' #

            CALL q_oocq002()                                #呼叫開窗

            LET g_xmdk_m.xmdk011 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk011 TO xmdk011              #顯示到畫面上

            CALL s_desc_get_acc_desc('238',g_xmdk_m.xmdk011) RETURNING g_xmdk_m.xmdk011_desc
            DISPLAY BY NAME g_xmdk_m.xmdk011_desc

            NEXT FIELD xmdk011 
            #END add-point
 
 
         #Ctrlp:input.c.xmdk012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk012
            #add-point:ON ACTION controlp INFIELD xmdk012 name="input.c.xmdk012"
            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk012             #給予default值

            LET g_qryparam.arg1 = g_site

            CALL q_oodb002_3()                                #呼叫開窗

            LET g_xmdk_m.xmdk012 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk012 TO xmdk012              #顯示到畫面上

            CALL s_desc_get_tax_desc1(g_site,g_xmdk_m.xmdk012) RETURNING g_xmdk_m.xmdk012_desc
            DISPLAY BY NAME g_xmdk_m.xmdk012_desc
            
            NEXT FIELD xmdk012                          #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.xmdk013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk013
            #add-point:ON ACTION controlp INFIELD xmdk013 name="input.c.xmdk013"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk014
            #add-point:ON ACTION controlp INFIELD xmdk014 name="input.c.xmdk014"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk015
            #add-point:ON ACTION controlp INFIELD xmdk015 name="input.c.xmdk015"

            #取得稅區
            CALL s_tax_get_ooef019(g_site) RETURNING l_success,l_ooef019

            #開窗i段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk015             #給予default值

            #給予arg
            LET g_qryparam.arg1 = l_ooef019     #稅區編號 
            LET g_qryparam.arg2 = '2'        #銷項

            CALL q_isac002_1()                                #呼叫開窗

            LET g_xmdk_m.xmdk015 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk015 TO xmdk015              #顯示到畫面上

            CALL s_desc_get_invoice_type_desc1(g_site,g_xmdk_m.xmdk015) RETURNING g_xmdk_m.xmdk015_desc
            DISPLAY BY NAME g_xmdk_m.xmdk015_desc
            
            NEXT FIELD xmdk015                          #返回原欄位
            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk016
            #add-point:ON ACTION controlp INFIELD xmdk016 name="input.c.xmdk016"
            #開窗i段
	   		INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk016             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_site

            CALL q_ooaj002_1()                                #呼叫開窗

            LET g_xmdk_m.xmdk016 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk016 TO xmdk016              #顯示到畫面上

            CALL s_desc_get_currency_desc(g_xmdk_m.xmdk016) RETURNING g_xmdk_m.xmdk016_desc
            DISPLAY BY NAME g_xmdk_m.xmdk016_desc
            
            NEXT FIELD xmdk016                          #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.xmdk017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk017
            #add-point:ON ACTION controlp INFIELD xmdk017 name="input.c.xmdk017"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk084
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk084
            #add-point:ON ACTION controlp INFIELD xmdk084 name="input.c.xmdk084"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk018
            #add-point:ON ACTION controlp INFIELD xmdk018 name="input.c.xmdk018"
            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk018             #給予default值

            #給予arg

            CALL q_xmah001()                               #呼叫開窗

            LET g_xmdk_m.xmdk018 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk018 TO xmdk018              #顯示到畫面上

            CALL axmt600_xmdk018_ref()
            NEXT FIELD xmdk018                          #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.xmdk041
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk041
            #add-point:ON ACTION controlp INFIELD xmdk041 name="input.c.xmdk041"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk037
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk037
            #add-point:ON ACTION controlp INFIELD xmdk037 name="input.c.xmdk037"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk042
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk042
            #add-point:ON ACTION controlp INFIELD xmdk042 name="input.c.xmdk042"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk043
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk043
            #add-point:ON ACTION controlp INFIELD xmdk043 name="input.c.xmdk043"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk031
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk031
            #add-point:ON ACTION controlp INFIELD xmdk031 name="input.c.xmdk031"
            
            #此段落由子樣板a07產生            
            #開窗i段
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
   			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk031             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "295"

            CALL q_oocq002()                                #呼叫開窗

            LET g_xmdk_m.xmdk031 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk031 TO xmdk031              #顯示到畫面上

            CALL s_desc_get_acc_desc('295',g_xmdk_m.xmdk031) RETURNING g_xmdk_m.xmdk031_desc
            DISPLAY BY NAME g_xmdk_m.xmdk031_desc
            
            NEXT FIELD xmdk031                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmdk033
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk033
            #add-point:ON ACTION controlp INFIELD xmdk033 name="input.c.xmdk033"
            
            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk033             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '209'

            CALL q_oocq002()                                #呼叫開窗

            LET g_xmdk_m.xmdk033 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk033 TO xmdk033              #顯示到畫面上

            CALL s_desc_get_acc_desc('209',g_xmdk_m.xmdk033) RETURNING g_xmdk_m.xmdk033_desc
            DISPLAY BY NAME g_xmdk_m.xmdk033_desc

            NEXT FIELD xmdk033                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmdk085
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk085
            #add-point:ON ACTION controlp INFIELD xmdk085 name="input.c.xmdk085"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk086
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk086
            #add-point:ON ACTION controlp INFIELD xmdk086 name="input.c.xmdk086"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk086        #給予default值

            #CALL q_rmcadocno()                                #呼叫開窗
            #150616 mark 待q_rmcadocno過單

            LET g_xmdk_m.xmdk086 = g_qryparam.return1              

            DISPLAY g_xmdk_m.xmdk086 TO xmdk086               #

            NEXT FIELD xmdk086                         #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.xmdk087
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk087
            #add-point:ON ACTION controlp INFIELD xmdk087 name="input.c.xmdk087"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk044
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk044
            #add-point:ON ACTION controlp INFIELD xmdk044 name="input.c.xmdk044"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk044             #給予default值

            CALL q_icaa001_3()                                #呼叫開窗

            LET g_xmdk_m.xmdk044 = g_qryparam.return1              

            DISPLAY g_xmdk_m.xmdk044 TO xmdk044              #

            NEXT FIELD xmdk044                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmdk035
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk035
            #add-point:ON ACTION controlp INFIELD xmdk035 name="input.c.xmdk035"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk046
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk046
            #add-point:ON ACTION controlp INFIELD xmdk046 name="input.c.xmdk046"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk036
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk036
            #add-point:ON ACTION controlp INFIELD xmdk036 name="input.c.xmdk036"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk083
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk083
            #add-point:ON ACTION controlp INFIELD xmdk083 name="input.c.xmdk083"
            
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_xmdk_m.xmdkdocno
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
               
               #自動產生單號
               CALL s_aooi200_gen_docno(g_site,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocdt,g_prog)
               RETURNING l_success,g_xmdk_m.xmdkdocno
               IF l_success = 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apm-00003'
                  LET g_errparam.extend = g_xmdk_m.xmdkdocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  NEXT FIELD xmdkdocno
               END IF
               DISPLAY BY NAME g_xmdk_m.xmdkdocno
               #end add-point
               
               INSERT INTO xmdk_t (xmdkent,xmdk000,xmdksite,xmdkdocno,xmdkdocdt,xmdk001,xmdk003,xmdk004, 
                   xmdkstus,xmdk005,xmdk006,xmdk007,xmdk009,xmdk008,xmdk202,xmdk045,xmdk082,xmdk030, 
                   xmdk054,xmdk010,xmdk011,xmdk012,xmdk013,xmdk014,xmdk015,xmdk016,xmdk017,xmdk084,xmdk018, 
                   xmdk041,xmdk037,xmdk042,xmdk043,xmdk031,xmdk033,xmdk085,xmdk086,xmdk087,xmdk044,xmdk035, 
                   xmdk046,xmdk036,xmdk083,xmdkownid,xmdkowndp,xmdkcrtid,xmdkcrtdp,xmdkcrtdt,xmdkmodid, 
                   xmdkmoddt,xmdkcnfid,xmdkcnfdt,xmdkpstid,xmdkpstdt)
               VALUES (g_enterprise,g_xmdk_m.xmdk000,g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocdt, 
                   g_xmdk_m.xmdk001,g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdkstus,g_xmdk_m.xmdk005, 
                   g_xmdk_m.xmdk006,g_xmdk_m.xmdk007,g_xmdk_m.xmdk009,g_xmdk_m.xmdk008,g_xmdk_m.xmdk202, 
                   g_xmdk_m.xmdk045,g_xmdk_m.xmdk082,g_xmdk_m.xmdk030,g_xmdk_m.xmdk054,g_xmdk_m.xmdk010, 
                   g_xmdk_m.xmdk011,g_xmdk_m.xmdk012,g_xmdk_m.xmdk013,g_xmdk_m.xmdk014,g_xmdk_m.xmdk015, 
                   g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,g_xmdk_m.xmdk084,g_xmdk_m.xmdk018,g_xmdk_m.xmdk041, 
                   g_xmdk_m.xmdk037,g_xmdk_m.xmdk042,g_xmdk_m.xmdk043,g_xmdk_m.xmdk031,g_xmdk_m.xmdk033, 
                   g_xmdk_m.xmdk085,g_xmdk_m.xmdk086,g_xmdk_m.xmdk087,g_xmdk_m.xmdk044,g_xmdk_m.xmdk035, 
                   g_xmdk_m.xmdk046,g_xmdk_m.xmdk036,g_xmdk_m.xmdk083,g_xmdk_m.xmdkownid,g_xmdk_m.xmdkowndp, 
                   g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtdp,g_xmdk_m.xmdkcrtdt,g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmoddt, 
                   g_xmdk_m.xmdkcnfid,g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid,g_xmdk_m.xmdkpstdt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_xmdk_m:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
                                                                                                                                       
               #end add-point
               
               
               
               
               #add-point:單頭新增後 name="input.head.a_insert"
 
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL axmt600_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL axmt600_b_fill()
                  CALL axmt600_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
                                
               #end add-point
               
               #將遮罩欄位還原
               CALL axmt600_xmdk_t_mask_restore('restore_mask_o')
               
               UPDATE xmdk_t SET (xmdk000,xmdksite,xmdkdocno,xmdkdocdt,xmdk001,xmdk003,xmdk004,xmdkstus, 
                   xmdk005,xmdk006,xmdk007,xmdk009,xmdk008,xmdk202,xmdk045,xmdk082,xmdk030,xmdk054,xmdk010, 
                   xmdk011,xmdk012,xmdk013,xmdk014,xmdk015,xmdk016,xmdk017,xmdk084,xmdk018,xmdk041,xmdk037, 
                   xmdk042,xmdk043,xmdk031,xmdk033,xmdk085,xmdk086,xmdk087,xmdk044,xmdk035,xmdk046,xmdk036, 
                   xmdk083,xmdkownid,xmdkowndp,xmdkcrtid,xmdkcrtdp,xmdkcrtdt,xmdkmodid,xmdkmoddt,xmdkcnfid, 
                   xmdkcnfdt,xmdkpstid,xmdkpstdt) = (g_xmdk_m.xmdk000,g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno, 
                   g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001,g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdkstus, 
                   g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk007,g_xmdk_m.xmdk009,g_xmdk_m.xmdk008, 
                   g_xmdk_m.xmdk202,g_xmdk_m.xmdk045,g_xmdk_m.xmdk082,g_xmdk_m.xmdk030,g_xmdk_m.xmdk054, 
                   g_xmdk_m.xmdk010,g_xmdk_m.xmdk011,g_xmdk_m.xmdk012,g_xmdk_m.xmdk013,g_xmdk_m.xmdk014, 
                   g_xmdk_m.xmdk015,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,g_xmdk_m.xmdk084,g_xmdk_m.xmdk018, 
                   g_xmdk_m.xmdk041,g_xmdk_m.xmdk037,g_xmdk_m.xmdk042,g_xmdk_m.xmdk043,g_xmdk_m.xmdk031, 
                   g_xmdk_m.xmdk033,g_xmdk_m.xmdk085,g_xmdk_m.xmdk086,g_xmdk_m.xmdk087,g_xmdk_m.xmdk044, 
                   g_xmdk_m.xmdk035,g_xmdk_m.xmdk046,g_xmdk_m.xmdk036,g_xmdk_m.xmdk083,g_xmdk_m.xmdkownid, 
                   g_xmdk_m.xmdkowndp,g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtdp,g_xmdk_m.xmdkcrtdt,g_xmdk_m.xmdkmodid, 
                   g_xmdk_m.xmdkmoddt,g_xmdk_m.xmdkcnfid,g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid,g_xmdk_m.xmdkpstdt) 
 
                WHERE xmdkent = g_enterprise AND xmdkdocno = g_xmdkdocno_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "xmdk_t:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
                                                                                                                                       
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL axmt600_xmdk_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_xmdk_m_t)
               LET g_log2 = util.JSON.stringify(g_xmdk_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
                                                                                                                                       
               #end add-point
            END IF
            
            LET g_xmdkdocno_t = g_xmdk_m.xmdkdocno
 
            
      END INPUT
   
 
{</section>}
 
{<section id="axmt600.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_xmdl_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION s_lot_sel
            LET g_action_choice="s_lot_sel"
            IF cl_auth_chk_act("s_lot_sel") THEN
               
               #add-point:ON ACTION s_lot_sel name="input.detail_input.page1.s_lot_sel"
               #150821-xianghui-b              
               IF NOT cl_null(g_xmdk_m.xmdkdocno) AND
                  NOT cl_null(g_xmdl_d[l_ac].xmdlseq) AND
                  NOT cl_null(g_xmdl_d[l_ac].xmdl008) AND
                  NOT cl_null(g_xmdl_d[l_ac].xmdl017) AND
                  NOT cl_null(g_xmdl_d[l_ac].xmdl018) 
                  AND g_xmdl_d[l_ac].xmdl013 = 'N' THEN
                  LET l_success = ''
                 #IF s_lot_batch_number(g_xmdl_d[l_ac].xmdl008,g_site) THEN  #160122-00020#1 #160314-00008#1 mark
                  IF s_lot_batch_number_1n3(g_xmdl_d[l_ac].xmdl008,g_site) THEN              #160314-00008#1 add
                     IF NOT cl_null(g_xmdl_d[l_ac].xmdl001) THEN 
                        CALL s_axmt540_inao_copy(g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,'2','','','','',g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,1,'3','N','1') RETURNING l_success            
                        CALL s_lot_sel('2','2',g_site,g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,'1',g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,g_xmdl_d[l_ac].xmdl052,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,'1',g_prog,'','','','',0)
                             RETURNING l_success  
                        IF l_success THEN                       
                           CALL s_axmt540_update_inao(g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,'1',g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,'1','3') RETURNING l_success                        
                        END IF
                        #刪除申請資料                              
                        DELETE FROM inao_t 
                         WHERE inaoent = g_enterprise 
                           AND inaosite = g_site
                           AND inaodocno = g_xmdk_m.xmdkdocno
                           AND inaoseq = g_xmdl_d[l_ac].xmdlseq
                           AND inaoseq1 = '1'
                           AND inao000 = '1'
                           AND inao013 = '1' 
                     ELSE    
                        #160122-00020#1-b                     
                        CALL s_lot_ins(g_site,g_xmdk_m.xmdkdocno,
                                       #目的單據項次                    目的單據項序(若單據沒有到項序層則此參數固定傳0)
                                       g_xmdl_d[l_ac].xmdlseq,'1',
                                       #料件編號                        產品特徵
                                       g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,
                                       #交易單位                      交易數量                 
                                       g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,
                                       '2',g_xmdk_m.xmdk007,'2','',g_xmdl_d[l_ac].xmdl014,
                                       g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,
                                       g_xmdl_d[l_ac].xmdl052
                                       )       #160316-00007#4 add  xmdl052
                             RETURNING l_success,l_amount                              
                     END IF 
                  END IF    
                  #160122-00020#1                  
               END IF
               #150821-xianghui-e
               #END add-point
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION axmt600_call_axmt540_01
            LET g_action_choice="axmt600_call_axmt540_01"
            IF cl_auth_chk_act("axmt600_call_axmt540_01") THEN
               
               #add-point:ON ACTION axmt600_call_axmt540_01 name="input.detail_input.page1.axmt600_call_axmt540_01"
               #150821-xianghui-b           
               INSERT INTO axmt600_inao SELECT * FROM inao_t 
                                           WHERE inaoent = g_enterprise 
                                             AND inaodocno = g_xmdk_m.xmdkdocno
                                             AND inaoseq = g_xmdl_d[l_ac].xmdlseq
               #150821-xianghui-e                
               CALL axmt540_01('6',g_xmdk_m.xmdksite,g_xmdk_m.xmdk082,g_xmdk_m.xmdkdocno,
                               g_xmdl_d[l_ac].xmdlseq,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,
                               g_xmdl_d[l_ac].xmdl011,g_xmdl_d[l_ac].xmdl012,
                               g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,'',
                               g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl020,'',
                               g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,g_xmdl_d[l_ac].xmdl030)
                               RETURNING l_success,l_rollback,l_xmdl014,l_xmdl015,l_xmdl016,l_xmdl052
               #150821-xianghui-b                
               IF l_success = FALSE AND l_rollback = FALSE THEN 
                  DELETE FROM inao_t 
                   WHERE inaoent = g_enterprise 
                     AND inaodocno = g_xmdk_m.xmdkdocno
                     AND inaoseq = g_xmdl_d[l_ac].xmdlseq       
                  #將資料塞回原table   
                  INSERT INTO inao_t SELECT * FROM axmt600_inao
               END IF
               #150821-xianghui-e 
               IF l_rollback THEN  #多庫儲批資料錯誤必須rollback
                  CLOSE axmt600_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF

               IF l_success THEN
                  IF NOT cl_null(l_xmdl014) THEN  #只有一筆
                     LET g_xmdl_d[l_ac].xmdl013 = 'N'
                     LET g_xmdl_d[l_ac].xmdl014 = l_xmdl014
                     LET g_xmdl_d[l_ac].xmdl015 = l_xmdl015
                     LET g_xmdl_d[l_ac].xmdl016 = l_xmdl016
                     LET g_xmdl_d[l_ac].xmdl052 = l_xmdl052
                  ELSE
                     LET g_xmdl_d[l_ac].xmdl013 = 'Y'
                     LET g_xmdl_d[l_ac].xmdl014 = ' '
                     LET g_xmdl_d[l_ac].xmdl015 = ' '
                     LET g_xmdl_d[l_ac].xmdl016 = ' '
                     #160519-00008#10--(S)
                     CALL s_axmt540_get_imaf(g_xmdl_d[l_ac].xmdl008) RETURNING l_imaf055,l_imaf061
                     IF l_imaf055 = '1' THEN
                        LET g_xmdl_d[l_ac].xmdl052 = ''
                     ELSE
                     #160519-00008#10--(E)
                        LET g_xmdl_d[l_ac].xmdl052 = ' '
                     END IF         #160519-00008#10
                     
                  END IF

                  CALL s_desc_get_stock_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014) RETURNING g_xmdl_d[l_ac].xmdl014_desc
                  CALL s_desc_get_locator_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015) RETURNING g_xmdl_d[l_ac].xmdl015_desc
               END IF
               
               LET l_xmdlseq_backup = g_xmdl_d[l_ac].xmdlseq #紀錄產生庫儲批所用的項次
               #END add-point
            END IF
 
 
 
 
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"

            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xmdl_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axmt600_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1','2',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_xmdl_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            
            #取得稅別應用140725
            CALL s_tax_chk(g_site,g_xmdk_m.xmdk012)
            RETURNING l_success,l_oodbl004,l_oodb005,l_oodb006,g_oodb011
            
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
 
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN axmt600_cl USING g_enterprise,g_xmdk_m.xmdkdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axmt600_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE axmt600_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_xmdl_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xmdl_d[l_ac].xmdlseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xmdl_d_t.* = g_xmdl_d[l_ac].*  #BACKUP
               LET g_xmdl_d_o.* = g_xmdl_d[l_ac].*  #BACKUP
               CALL axmt600_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               CALL axmt600_set_no_required_b(l_cmd)
               CALL axmt600_set_required_b(l_cmd)
               #end add-point  
               CALL axmt600_set_no_entry_b(l_cmd)
               IF NOT axmt600_lock_b("xmdl_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE  #160512-00004#2-add-'xmdl058,xmdl057'欄位
                  FETCH axmt600_bcl INTO g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdlseq,g_xmdl_d[l_ac].xmdl001, 
                      g_xmdl_d[l_ac].xmdl002,g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,g_xmdl_d[l_ac].xmdl005, 
                      g_xmdl_d[l_ac].xmdl006,g_xmdl_d[l_ac].xmdl007,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009, 
                      g_xmdl_d[l_ac].xmdl033,g_xmdl_d[l_ac].xmdl011,g_xmdl_d[l_ac].xmdl012,g_xmdl_d[l_ac].xmdl050, 
                      g_xmdl_d[l_ac].xmdl094,g_xmdl_d[l_ac].xmdl095,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018, 
                      g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl020,g_xmdl_d[l_ac].xmdl010,g_xmdl_d[l_ac].xmdl013, 
                      g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,g_xmdl_d[l_ac].xmdl052, 
                      g_xmdl_d[l_ac].xmdl021,g_xmdl_d[l_ac].xmdl022,g_xmdl_d[l_ac].xmdl023,g_xmdl_d[l_ac].xmdl041, 
                      g_xmdl_d[l_ac].xmdl030,g_xmdl_d[l_ac].xmdl031,g_xmdl_d[l_ac].xmdl032,g_xmdl_d[l_ac].xmdl058,
                      g_xmdl_d[l_ac].xmdl057,g_xmdl_d[l_ac].xmdl051,
                      g_xmdl_d[l_ac].xmdl088,g_xmdl2_d[l_ac].xmdlseq,g_xmdl2_d[l_ac].xmdl048,g_xmdl2_d[l_ac].xmdl049, 
                      g_xmdl2_d[l_ac].xmdl024,g_xmdl2_d[l_ac].xmdl025,g_xmdl2_d[l_ac].xmdl026,g_xmdl2_d[l_ac].xmdl027, 
                      g_xmdl2_d[l_ac].xmdl028,g_xmdl2_d[l_ac].xmdl029,g_xmdl2_d[l_ac].xmdl042,g_xmdl2_d[l_ac].xmdl043, 
                      g_xmdl2_d[l_ac].xmdl044,g_xmdl2_d[l_ac].xmdl045,g_xmdl2_d[l_ac].xmdl046,g_xmdl2_d[l_ac].xmdl087 
 
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_xmdl_d_t.xmdlseq,":",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_xmdl_d_mask_o[l_ac].* =  g_xmdl_d[l_ac].*
                  CALL axmt600_xmdl_t_mask()
                  LET g_xmdl_d_mask_n[l_ac].* =  g_xmdl_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL axmt600_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            LET g_pmao_flag = 'N'
            LET l_xmdlseq_backup = g_xmdl_d[l_ac].xmdlseq   #備份多庫儲批項次
            
            #單身Action隱藏
            CALL axmt600_detail_action_hidden(l_ac)
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmdl_d[l_ac].* TO NULL 
            INITIALIZE g_xmdl_d_t.* TO NULL 
            INITIALIZE g_xmdl_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_xmdl_d[l_ac].xmdl007 = "1"
      LET g_xmdl_d[l_ac].xmdl020 = "0"
      LET g_xmdl_d[l_ac].xmdl013 = "N"
      LET g_xmdl_d[l_ac].xmdl022 = "0"
      LET g_xmdl_d[l_ac].xmdl023 = "Y"
      LET g_xmdl_d[l_ac].xmdl041 = "N"
 
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            LET g_pmao_flag = 'N'
            LET g_xmdl_d[l_ac].xmdlsite = g_site
            LET g_xmdl2_d[l_ac].xmdl087 = 'Y'   #需自立應收

            #預設來源單別
            IF NOT cl_null(g_xmdk_m.xmdk005) THEN
               LET g_xmdl_d[l_ac].xmdl001 = g_xmdk_m.xmdk005 
               
               #ming 20150703 add --------------------------(S) 
               #取發票號碼 
               CALL axmt600_get_invoice_num(g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002)
                    RETURNING g_xmdl2_d[l_ac].xmdl048,g_xmdl2_d[l_ac].xmdl049
               #ming 20150703 add --------------------------(E) 
            END IF  

            #稅別應用為'1'正常稅率帶入單頭的稅率140725
            IF g_oodb011 = '1' THEN
               LET g_xmdl2_d[l_ac].xmdl025 = g_xmdk_m.xmdk012
               LET g_xmdl2_d[l_ac].xmdl026 = g_xmdk_m.xmdk013
            END IF

            IF cl_null(g_xmdl_d[l_ac].xmdlseq) THEN
               SELECT MAX(xmdlseq)+1
                 INTO g_xmdl_d[l_ac].xmdlseq
                 FROM xmdl_t
                WHERE xmdlent = g_enterprise
                  AND xmdldocno = g_xmdk_m.xmdkdocno 
                  
               IF cl_null(g_xmdl_d[l_ac].xmdlseq) THEN
                 LET g_xmdl_d[l_ac].xmdlseq = 1
               END IF
            END IF

            #150917 by whitney add start --- 單別預設庫位
            CALL s_aooi200_get_slip(g_xmdk_m.xmdkdocno) RETURNING l_success,l_slip
            CALL cl_get_doc_para(g_enterprise,g_site,l_slip,'D-MFG-0076') RETURNING g_xmdl_d[l_ac].xmdl014
            CALL s_desc_get_stock_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014) RETURNING g_xmdl_d[l_ac].xmdl014_desc
            #150917 by whitney add end

            #end add-point
            LET g_xmdl_d_t.* = g_xmdl_d[l_ac].*     #新輸入資料
            LET g_xmdl_d_o.* = g_xmdl_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axmt600_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            CALL axmt600_set_no_required_b(l_cmd)
            CALL axmt600_set_required_b(l_cmd)
            #end add-point
            CALL axmt600_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmdl_d[li_reproduce_target].* = g_xmdl_d[li_reproduce].*
               LET g_xmdl2_d[li_reproduce_target].* = g_xmdl2_d[li_reproduce].*
 
               LET g_xmdl_d[li_reproduce_target].xmdlseq = NULL
 
            END IF
            
            #add-point:modify段before insert name="input.body.before_insert"

            LET l_xmdlseq_backup = g_xmdl_d[l_ac].xmdlseq   #備份多庫儲批項次
            
            #單身Action隱藏
            CALL axmt600_detail_action_hidden(l_ac)            
            
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            CALL axmt600_row_default()

            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM xmdl_t 
             WHERE xmdlent = g_enterprise AND xmdldocno = g_xmdk_m.xmdkdocno
 
               AND xmdlseq = g_xmdl_d[l_ac].xmdlseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               IF g_pmao_flag = 'Y' THEN
                  
                      IF NOT s_axmt500_ins_pmao(g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk007,g_xmdl_d[l_ac].xmdl006,g_xmdl_d[l_ac].xmdl007,g_xmdl_d[l_ac].xmdl033,
                                                g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010) THEN
                        LET g_xmdl_d[l_ac].xmdl033 = ''
                        LET g_xmdl_d[l_ac].l_pmao009 = ''
                        LET g_xmdl_d[l_ac].l_pmao010 = ''
                        DISPLAY BY NAME g_xmdl_d[l_ac].xmdl007,g_xmdl_d[l_ac].xmdl033,
                                                g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
                      END IF
                  
               END IF     
               #稅額計算
               CALL s_axmt540_tax_count('',g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,g_site,g_xmdl2_d[l_ac].xmdl025,
                                        g_xmdl_d[l_ac].xmdl022,g_xmdl2_d[l_ac].xmdl024,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,
                                        g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,g_xmdl_d[l_ac].xmdl018)
               RETURNING g_xmdl2_d[l_ac].xmdl027,g_xmdl2_d[l_ac].xmdl028,g_xmdl2_d[l_ac].xmdl029


               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmdk_m.xmdkdocno
               LET gs_keys[2] = g_xmdl_d[g_detail_idx].xmdlseq
               CALL axmt600_insert_b('xmdl_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
                                                                                                                                       
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_xmdl_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmdl_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axmt600_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               #新增多庫儲批
               CALL axmt540_01_xmdm_modify('6',l_xmdlseq_backup,g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,
                                           g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,g_xmdl_d[l_ac].xmdl011,g_xmdl_d[l_ac].xmdl012,
                                           g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,g_xmdl_d[l_ac].xmdl052,
                                           g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl020,
                                           '','') RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  CANCEL INSERT
               END IF

               #重新計算整單的未稅、含稅總金額
               CALL axmt600_tax_recount(g_xmdk_m.xmdkdocno) RETURNING l_success                     
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  CANCEL INSERT
               END IF

               CALL s_transaction_end('Y','0')
               
               #產品特徵碼insert
               CALL s_transaction_begin()
               
               #若有來源時不可新增多筆產品特徵
               IF NOT cl_null(g_xmdl_d[l_ac].xmdl001) OR NOT cl_null(g_xmdl_d[l_ac].xmdl003) THEN
                  CALL l_inam.clear()
               END IF               
               
               
               IF l_inam.getLength() > 1 THEN   #第一筆已呈現在畫面上，固從第二筆開始新增                     
                  LET l_xmdlseq = ''

                  INITIALIZE l_xmdl.* TO NULL
              
                  SELECT xmdl001,xmdl002,xmdl003,xmdl004,xmdl005,
                         xmdl006,xmdl007,xmdl008,xmdl009,xmdl010,
                         xmdl011,xmdl012,xmdl013,xmdl014,xmdl015,
                         xmdl016,xmdl017,xmdl018,xmdl019,xmdl020,
                         xmdl021,xmdl022,xmdl024,xmdl025,
                         xmdl026,xmdl027,xmdl028,xmdl029,
                         xmdl030,xmdl031,xmdl032,  #add by lixiang 2015/06/29
                         xmdl033,
                         xmdl042,xmdl043,xmdl044,xmdl045,
                         xmdl046,
                         xmdl050,
                         xmdl058,xmdl057, #160512-00004#2-add
                         xmdl051
                    INTO l_xmdl.xmdl001,l_xmdl.xmdl002,l_xmdl.xmdl003,l_xmdl.xmdl004,l_xmdl.xmdl005,
                         l_xmdl.xmdl006,l_xmdl.xmdl007,l_xmdl.xmdl008,l_xmdl.xmdl009,l_xmdl.xmdl010,
                         l_xmdl.xmdl011,l_xmdl.xmdl012,l_xmdl.xmdl013,l_xmdl.xmdl014,l_xmdl.xmdl015,
                         l_xmdl.xmdl016,l_xmdl.xmdl017,l_xmdl.xmdl018,l_xmdl.xmdl019,l_xmdl.xmdl020,
                         l_xmdl.xmdl021,l_xmdl.xmdl022,l_xmdl.xmdl024,l_xmdl.xmdl025,
                         l_xmdl.xmdl026,l_xmdl.xmdl027,l_xmdl.xmdl028,l_xmdl.xmdl029,
                         l_xmdl.xmdl030,l_xmdl.xmdl031,l_xmdl.xmdl032,  #add by lixiang 2015/06/29
                         l_xmdl.xmdl033,
                         l_xmdl.xmdl042,l_xmdl.xmdl043,l_xmdl.xmdl044,l_xmdl.xmdl045,
                         l_xmdl.xmdl046,
                         l_xmdl.xmdl050,
                         l_xmdl.xmdl058,l_xmdl.xmdl057, #160512-00004#2-add
                         l_xmdl.xmdl051
                    FROM xmdl_t
                   WHERE xmdlent = g_enterprise
                     AND xmdldocno = g_xmdk_m.xmdkdocno
                     AND xmdlseq = g_xmdl_d[l_ac].xmdlseq          
      
               
                  FOR l_i = 2 TO l_inam.getLength()
                     SELECT MAX(xmdlseq)+1 INTO l_xmdlseq
                       FROM xmdl_t
                      WHERE xmdlent = g_enterprise
                        AND xmdldocno = g_xmdk_m.xmdkdocno                     
                        
                     #取位
                     CALL s_aooi250_take_decimals(l_xmdl.xmdl017,l_inam[l_i].inam004) RETURNING l_success,l_inam[l_i].inam004

                     #推算參考數量
                     IF NOT cl_null(l_xmdl.xmdl008) AND NOT cl_null(l_xmdl.xmdl017) AND
                        NOT cl_null(l_xmdl.xmdl019) AND NOT cl_null(l_inam[l_i].inam004) THEN
                        
                        CALL s_aooi250_convert_qty(l_xmdl.xmdl008,l_xmdl.xmdl017,l_xmdl.xmdl019,l_inam[l_i].inam004)
                        RETURNING l_success,l_xmdl.xmdl020
                     ELSE
                        LET l_xmdl.xmdl020 = ''
                     END IF  

                     #推算計價數量
                     IF NOT cl_null(l_xmdl.xmdl008) AND NOT cl_null(l_xmdl.xmdl017) AND
                        NOT cl_null(l_xmdl.xmdl021) AND NOT cl_null(l_inam[l_i].inam004) THEN
                        
                        CALL s_aooi250_convert_qty(l_xmdl.xmdl008,l_xmdl.xmdl017,l_xmdl.xmdl021,l_inam[l_i].inam004)
                        RETURNING l_success,l_xmdl.xmdl022
                     ELSE
                        LET l_xmdl.xmdl022 = ''
                     END IF
                              
                     #稅額計算                     
                     CALL s_axmt540_tax_count('',g_xmdk_m.xmdkdocno,l_xmdlseq,g_site,l_xmdl.xmdl025,
                                              l_xmdl.xmdl022,l_xmdl.xmdl024,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,
                                              l_xmdl.xmdl003,l_xmdl.xmdl004,l_inam[l_i].inam004)
                     RETURNING l_xmdl.xmdl027,l_xmdl.xmdl028,l_xmdl.xmdl029
                              
                        
                     INSERT INTO xmdl_t (xmdlent,xmdlsite,xmdldocno,xmdlseq,
                                         xmdl001,xmdl002,xmdl003,xmdl004,xmdl005,
                                         xmdl006,xmdl007,xmdl008,xmdl009,xmdl010,
                                         xmdl011,xmdl012,xmdl013,xmdl014,xmdl015,
                                         xmdl016,xmdl017,xmdl018,xmdl019,xmdl020,
                                         xmdl021,xmdl022,xmdl024,xmdl025,
                                         xmdl026,xmdl027,xmdl028,xmdl029,
                                         xmdl030,xmdl031,xmdl032,  #add by lixiang 2015/06/29    
                                         xmdl033,
                                         xmdl042,xmdl043,xmdl044,xmdl045,
                                         xmdl046,
                                         xmdl050,
                                         xmdl058,xmdl057, #160512-00004#2-add
                                         xmdl051,xmdl052)   
                          VALUES (g_enterprise,g_site,g_xmdk_m.xmdkdocno,l_xmdlseq,
                                  l_xmdl.xmdl001,l_xmdl.xmdl002,l_xmdl.xmdl003,l_xmdl.xmdl004,l_xmdl.xmdl005,
                                  l_xmdl.xmdl006,l_xmdl.xmdl007,l_xmdl.xmdl008,l_inam[l_i].inam002,l_xmdl.xmdl010,
                                  l_xmdl.xmdl011,l_xmdl.xmdl012,'N',l_xmdl.xmdl014,l_xmdl.xmdl015,
                                  l_xmdl.xmdl016,l_xmdl.xmdl017,l_inam[l_i].inam004,l_xmdl.xmdl019,l_xmdl.xmdl020,
                                  l_xmdl.xmdl021,l_xmdl.xmdl022,l_xmdl.xmdl024,l_xmdl.xmdl025,
                                  l_xmdl.xmdl026,l_xmdl.xmdl027,l_xmdl.xmdl028,l_xmdl.xmdl029,
                                  l_xmdl.xmdl030,l_xmdl.xmdl032,l_xmdl.xmdl032,  #add by lixiang 2015/06/29
                                  l_xmdl.xmdl033,                                  
                                  l_xmdl.xmdl042,l_xmdl.xmdl043,l_xmdl.xmdl044,l_xmdl.xmdl045,
                                  l_xmdl.xmdl046,
                                  l_xmdl.xmdl050,
                                  l_xmdl.xmdl058,l_xmdl.xmdl057, #160512-00004#2-add
                                  l_xmdl.xmdl051,l_xmdl.xmdl052)
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = "xmdl_t"
                        LET g_errparam.popup = FALSE
                        CALL cl_err()
                        
                        CALL s_transaction_end('N','0')                    
                        CANCEL INSERT                        
                     END IF

                     #新增多庫儲批
                     CALL axmt540_01_xmdm_modify('6',l_xmdlseq,g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,l_xmdlseq,
                                                 l_xmdl.xmdl008,l_inam[l_i].inam002,l_xmdl.xmdl011,l_xmdl.xmdl012,
                                                 l_xmdl.xmdl014,l_xmdl.xmdl015,l_xmdl.xmdl016,l_xmdl.xmdl052,
                                                 l_xmdl.xmdl017,l_inam[l_i].inam004,l_xmdl.xmdl019,l_xmdl.xmdl020,
                                                 '','') RETURNING l_success                   

                     IF NOT l_success THEN
                        CALL s_transaction_end('N','0')
                        CANCEL INSERT
                     END IF

                     #重新計算整單的未稅、含稅總金額
                     CALL axmt600_tax_recount(g_xmdk_m.xmdkdocno) RETURNING l_success                     
                     IF NOT l_success THEN
                        CALL s_transaction_end('N','0')
                        CANCEL INSERT
                     END IF
               
                  END FOR  
                  CALL axmt600_show()
                  LET g_rec_b = l_inam.getLength() - 1                  
               END IF

               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               CALL s_transaction_end('N','0')   #151015-xianghui
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"

               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               #add by lixh 20150826
               #回寫出貨
               IF NOT s_axmt540_update_inao(g_xmdk_m.xmdkdocno,g_xmdl_d_t.xmdlseq,'',g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,'0','3') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt600_bcl
                  CANCEL DELETE                  
               END IF
               DELETE FROM inao_t
                WHERE inaoent = g_enterprise
                  AND inaodocno = g_xmdk_m.xmdkdocno
                  AND inaoseq = g_xmdl_d_t.xmdlseq
               IF SQLCA.sqlcode THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt600_bcl
                  CANCEL DELETE
               END IF                
               #add by lixh 20150826
               #刪除多庫儲批
               IF NOT axmt540_01_xmdm_delete('6',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'N') THEN                                    
                  CALL s_transaction_end('N','0')
                  CLOSE axmt600_bcl
                  CANCEL DELETE                   
               END IF

               #刪除稅額xrcd
               CALL s_axmt540_tax_delete(g_xmdk_m.xmdkdocno,g_xmdl_d_t.xmdlseq,'2') RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt600_bcl
                  CANCEL DELETE
               END IF

               #重新計算整單的未稅、含稅總金額
               CALL axmt600_tax_recount(g_xmdk_m.xmdkdocno) RETURNING l_success                     
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt600_bcl
                  CANCEL DELETE
               END IF

               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_xmdk_m.xmdkdocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_xmdl_d_t.xmdlseq
 
            
               #刪除同層單身
               IF NOT axmt600_delete_b('xmdl_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt600_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT axmt600_key_delete_b(gs_keys,'xmdl_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt600_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身刪除中 name="input.body.m_delete"
               #2015/07/23 by stellar add ----- (S)
               #若資料來源=2:銷售合約差異處理或4:銷售折扣合約結算，則更新xmde_t的該筆資料未處理
               IF g_xmdk_m.xmdk085 = '2' OR g_xmdk_m.xmdk085 = '4' THEN
                  UPDATE xmde_t SET xmde025 = '1',
                                    xmde027 = NULL,
                                    xmde028 = NULL
                   WHERE xmdeent = g_enterprise
                     AND xmde027 = g_xmdk_m.xmdkdocno
                     AND xmde028 = g_xmdl_d_t.xmdlseq
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmde_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = FALSE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     CLOSE axmt600_bcl
                     CANCEL DELETE
                  END IF
               END IF
               #2015/07/23 by stellar add ----- (E)
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE axmt600_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
 
               #end add-point
               LET l_count = g_xmdl_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
 
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_xmdl_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdlsite
            #add-point:BEFORE FIELD xmdlsite name="input.b.page1.xmdlsite"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdlsite
            
            #add-point:AFTER FIELD xmdlsite name="input.a.page1.xmdlsite"
                                                                                                            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdlsite
            #add-point:ON CHANGE xmdlsite name="input.g.page1.xmdlsite"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdlseq
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdl_d[l_ac].xmdlseq,"0","0","","","azz-00079",1) THEN
               NEXT FIELD xmdlseq
            END IF 
 
 
 
            #add-point:AFTER FIELD xmdlseq name="input.a.page1.xmdlseq"
            
            #此段落由子樣板a05產生
            IF  g_xmdk_m.xmdkdocno IS NOT NULL AND g_xmdl_d[g_detail_idx].xmdlseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmdk_m.xmdkdocno != g_xmdkdocno_t OR g_xmdl_d[g_detail_idx].xmdlseq != g_xmdl_d_t.xmdlseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmdl_t WHERE "||"xmdlent = '" ||g_enterprise|| "' AND "||"xmdldocno = '"||g_xmdk_m.xmdkdocno ||"' AND "|| "xmdlseq = '"||g_xmdl_d[g_detail_idx].xmdlseq ||"'",'std-00004',0) THEN 
                     LET g_xmdl_d[g_detail_idx].xmdlseq = g_xmdl_d_t.xmdlseq
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdlseq
            #add-point:BEFORE FIELD xmdlseq name="input.b.page1.xmdlseq"
 
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdlseq
            #add-point:ON CHANGE xmdlseq name="input.g.page1.xmdlseq"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl001
            #add-point:BEFORE FIELD xmdl001 name="input.b.page1.xmdl001"
 
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl001
            
            #add-point:AFTER FIELD xmdl001 name="input.a.page1.xmdl001"

            IF NOT cl_null(g_xmdl_d[l_ac].xmdl001) THEN
               IF g_xmdl_d[l_ac].xmdl001 <> g_xmdl_d_o.xmdl001 OR cl_null(g_xmdl_d_o.xmdl001) THEN
                  
                  #刪除多庫儲批
                  IF NOT axmt540_01_xmdm_delete('6',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
                     LET g_xmdl_d[l_ac].xmdl001 = g_xmdl_d_o.xmdl001
                     NEXT FIELD CURRENT                   
                  ELSE
                     LET g_xmdl_d[l_ac].xmdl013 = 'N'
                     LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013
                  END IF

                  IF NOT axmt600_ship_chk(g_xmdl_d[l_ac].xmdl001,'2') THEN
                     LET g_xmdl_d[l_ac].xmdl001 = g_xmdl_d_o.xmdl001
                     NEXT FIELD CURRENT
                  END IF

                  IF NOT axmt600_xmdl001_xmdl002_chk() THEN
                     LET g_xmdl_d[l_ac].xmdl001 = g_xmdl_d_o.xmdl001
                     NEXT FIELD CURRENT
                  END IF
                  
                  #帶出來源單據
                  IF NOT axmt600_xmdl001_xmdl002_default() THEN
                     LET g_xmdl_d[l_ac].xmdl001 = g_xmdl_d_o.xmdl001
                     NEXT FIELD CURRENT
                  END IF                  
                  
               END IF
            END IF 

            LET g_xmdl_d_o.xmdl001 = g_xmdl_d[l_ac].xmdl001

            CALL axmt600_set_entry_b(l_cmd)
            CALL axmt600_set_no_required_b(l_cmd)
            CALL axmt600_set_required_b(l_cmd)
            CALL axmt600_set_no_entry_b(l_cmd)      
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl001
            #add-point:ON CHANGE xmdl001 name="input.g.page1.xmdl001"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl002
            
            #add-point:AFTER FIELD xmdl002 name="input.a.page1.xmdl002"
                                                            
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl002) THEN 
               IF g_xmdl_d[l_ac].xmdl002 <> g_xmdl_d_o.xmdl002 OR cl_null(g_xmdl_d_o.xmdl002) THEN               
               
                  #刪除多庫儲批
                  IF NOT axmt540_01_xmdm_delete('6',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
                     LET g_xmdl_d[l_ac].xmdl002 = g_xmdl_d_o.xmdl002
                     NEXT FIELD CURRENT                   
                  ELSE
                     LET g_xmdl_d[l_ac].xmdl013 = 'N'
                     LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013
                  END IF
               
                  IF NOT axmt600_xmdl001_xmdl002_chk() THEN
                     LET g_xmdl_d[l_ac].xmdl002 = g_xmdl_d_o.xmdl002
                     NEXT FIELD CURRENT
                  END IF
                  
                  #帶出出貨單
                  IF NOT axmt600_xmdl001_xmdl002_default() THEN
                     LET g_xmdl_d[l_ac].xmdl002 = g_xmdl_d_o.xmdl002
                     NEXT FIELD CURRENT                         
                  END IF
                  
               END IF
            END IF 

            LET g_xmdl_d_o.xmdl002 = g_xmdl_d[l_ac].xmdl002

            CALL axmt600_set_no_required_b(l_cmd)
            CALL axmt600_set_required_b(l_cmd)
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl002
            #add-point:BEFORE FIELD xmdl002 name="input.b.page1.xmdl002"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl002
            #add-point:ON CHANGE xmdl002 name="input.g.page1.xmdl002"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl003
            #add-point:BEFORE FIELD xmdl003 name="input.b.page1.xmdl003"
                                                         
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl003
            
            #add-point:AFTER FIELD xmdl003 name="input.a.page1.xmdl003"
 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl003
            #add-point:ON CHANGE xmdl003 name="input.g.page1.xmdl003"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl004
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdl_d[l_ac].xmdl004,"0","0","","","azz-00079",1) THEN
               NEXT FIELD xmdl004
            END IF 
 
 
 
            #add-point:AFTER FIELD xmdl004 name="input.a.page1.xmdl004"
 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl004
            #add-point:BEFORE FIELD xmdl004 name="input.b.page1.xmdl004"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl004
            #add-point:ON CHANGE xmdl004 name="input.g.page1.xmdl004"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl005
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdl_d[l_ac].xmdl005,"0","0","","","azz-00079",1) THEN
               NEXT FIELD xmdl005
            END IF 
 
 
 
            #add-point:AFTER FIELD xmdl005 name="input.a.page1.xmdl005"
 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl005
            #add-point:BEFORE FIELD xmdl005 name="input.b.page1.xmdl005"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl005
            #add-point:ON CHANGE xmdl005 name="input.g.page1.xmdl005"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl006
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdl_d[l_ac].xmdl006,"0","0","","","azz-00079",1) THEN
               NEXT FIELD xmdl006
            END IF 
 
 
 
            #add-point:AFTER FIELD xmdl006 name="input.a.page1.xmdl006"
 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl006
            #add-point:BEFORE FIELD xmdl006 name="input.b.page1.xmdl006"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl006
            #add-point:ON CHANGE xmdl006 name="input.g.page1.xmdl006"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl007
            #add-point:BEFORE FIELD xmdl007 name="input.b.page1.xmdl007"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl007
            
            #add-point:AFTER FIELD xmdl007 name="input.a.page1.xmdl007"
             
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl007
            #add-point:ON CHANGE xmdl007 name="input.g.page1.xmdl007"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl008
            
            #add-point:AFTER FIELD xmdl008 name="input.a.page1.xmdl008"
            CALL s_desc_get_item_desc(g_xmdl_d[l_ac].xmdl008)RETURNING g_xmdl_d[l_ac].xmdl008_desc,g_xmdl_d[l_ac].xmdl008_desc_desc           
                        
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) THEN 
               IF g_xmdl_d[l_ac].xmdl008 <> g_xmdl_d_o.xmdl008 OR cl_null(g_xmdl_d_o.xmdl008) THEN   
               
                  #判斷料件是否存在產品特徵
                  CALL s_axmt500_get_imaa005(g_enterprise,g_xmdl_d[l_ac].xmdl008) RETURNING l_imaa005
                  IF cl_null(l_imaa005) THEN
                     LET g_xmdl_d[l_ac].xmdl009 = ' '
                  ELSE
                     LET g_xmdl_d[l_ac].xmdl009 = ''
                  END IF
                  CALL s_feature_description(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,g_xmdl_d[l_ac].xmdl009_desc
               
                  IF NOT axmt600_xmdl008_chk(g_xmdl_d[l_ac].xmdl008) THEN
                     LET g_xmdl_d[l_ac].xmdl008 = g_xmdl_d_o.xmdl008
                     LET g_xmdl_d[l_ac].xmdl009 = g_xmdl_d_o.xmdl009
                     CALL s_desc_get_item_desc(g_xmdl_d[l_ac].xmdl008)RETURNING g_xmdl_d[l_ac].xmdl008_desc,g_xmdl_d[l_ac].xmdl008_desc_desc
                     CALL s_feature_description(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,g_xmdl_d[l_ac].xmdl009_desc

                     NEXT FIELD CURRENT
                  END IF                                   

                  #檢查批號
                  IF NOT axmt600_xmdl016_chk() THEN
                     LET g_xmdl_d[l_ac].xmdl008 = g_xmdl_d_o.xmdl008
                     LET g_xmdl_d[l_ac].xmdl009 = g_xmdl_d_o.xmdl009
                     CALL s_desc_get_item_desc(g_xmdl_d[l_ac].xmdl008)RETURNING g_xmdl_d[l_ac].xmdl008_desc,g_xmdl_d[l_ac].xmdl008_desc_desc
                     CALL s_feature_description(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,g_xmdl_d[l_ac].xmdl009_desc

                     NEXT FIELD CURRENT
                  END IF
                  
                  #151224-00025#5---dorishsu---151228---add--
                  IF NOT s_feature_direct_input(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,g_xmdl_d_o.xmdl009,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdksite) THEN
                     NEXT FIELD CURRENT
                  END IF
                  #151224-00025#5---dorishsu---151228---end--

                  #刪除多庫儲批
                  IF NOT axmt540_01_xmdm_delete('6',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
                     LET g_xmdl_d[l_ac].xmdl008 = g_xmdl_d_o.xmdl008
                     LET g_xmdl_d[l_ac].xmdl009 = g_xmdl_d_o.xmdl009
                     CALL s_desc_get_item_desc(g_xmdl_d[l_ac].xmdl008)RETURNING g_xmdl_d[l_ac].xmdl008_desc,g_xmdl_d[l_ac].xmdl008_desc_desc
                     CALL s_feature_description(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,g_xmdl_d[l_ac].xmdl009_desc

                     NEXT FIELD CURRENT
                  ELSE
                     LET g_xmdl_d[l_ac].xmdl013 = 'N'
                     LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013                     
                  END IF                

                  #若稅別應用為2.依料件設定，呼叫應用元件帶出稅別、稅率
                  IF g_oodb011 = '2' THEN
                     CALL s_tax_chktype(g_site,g_xmdk_m.xmdk007,g_xmdl_d[l_ac].xmdl008,'1',g_xmdk_m.xmdk031)
                     RETURNING l_success,l_oodb002,l_oodb006

                     IF NOT l_success THEN
                        LET g_xmdl2_d[l_ac].xmdl025 = ''
                        LET g_xmdl2_d[l_ac].xmdl026 = ''
                     ELSE                     
                        LET g_xmdl2_d[l_ac].xmdl025 = l_oodb002
                        LET g_xmdl2_d[l_ac].xmdl026 = l_oodb006
                     END IF
                     
                     LET g_xmdl2_d_o.xmdl025 = g_xmdl2_d[l_ac].xmdl025
                     LET g_xmdl2_d_o.xmdl026 = g_xmdl2_d[l_ac].xmdl026
                  END IF          
                
                  #料號預帶欄位
                  CALL axmt600_xmdl008_default()
                  
                  #顯示客戶料號
                  CALL s_axmt540_client_no(g_xmdk_m.xmdk007,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,l_xmdl033
                  IF l_success THEN
                     LET g_xmdl_d[l_ac].xmdl033 = l_xmdl033
                     LET g_xmdl_d_o.xmdl033 = g_xmdl_d[l_ac].xmdl033
                  ELSE
                     LET g_xmdl_d[l_ac].xmdl033 = ''
                     LET g_xmdl_d_o.xmdl033 = g_xmdl_d[l_ac].xmdl033            
                  END IF                  
                        
               END IF 
            END IF
            SELECT pmao009,pmao010
              INTO g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
              FROM pmao_t
             WHERE pmaoent = g_enterprise
               AND pmao001 = g_xmdk_m.xmdk007
               AND pmao002 = g_xmdl_d[l_ac].xmdl008
               AND pmao003 = g_xmdl_d[l_ac].xmdl009
               AND pmao004 = g_xmdl_d[l_ac].xmdl033                     
            DISPLAY BY NAME g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
                                                            
            LET g_xmdl_d_o.xmdl008 = g_xmdl_d[l_ac].xmdl008
            LET g_xmdl_d_o.xmdl009 = g_xmdl_d[l_ac].xmdl009

            CALL axmt600_set_no_required_b(l_cmd)  #160125-00022 by whitney add
            CALL axmt600_set_required_b(l_cmd)     #160125-00022 by whitney add
            CALL axmt600_set_entry_b(l_cmd)
            CALL axmt600_set_no_entry_b(l_cmd)
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl008
            #add-point:BEFORE FIELD xmdl008 name="input.b.page1.xmdl008"
          
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl008
            #add-point:ON CHANGE xmdl008 name="input.g.page1.xmdl008"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl009
            
            #add-point:AFTER FIELD xmdl009 name="input.a.page1.xmdl009"
            CALL s_feature_description(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,g_xmdl_d[l_ac].xmdl009_desc
            
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl009) THEN 
               IF g_xmdl_d[l_ac].xmdl009 <> g_xmdl_d_o.xmdl009 OR cl_null(g_xmdl_d_o.xmdl009) THEN           

                  #產品特徵、替代料號檢查
                  IF NOT axmt600_xmdl008_xmdl009_chk() THEN
                     LET g_xmdl_d[l_ac].xmdl009 = g_xmdl_d_o.xmdl009
                     CALL s_feature_description(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,g_xmdl_d[l_ac].xmdl009_desc

                     NEXT FIELD CURRENT
                  END IF 

                  #檢查批號
                  IF NOT axmt600_xmdl016_chk() THEN
                     LET g_xmdl_d[l_ac].xmdl009 = g_xmdl_d_o.xmdl009

                     NEXT FIELD CURRENT
                  END IF
                  
                  #刪除多庫儲批
                  IF NOT axmt540_01_xmdm_delete('6',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
                     LET g_xmdl_d[l_ac].xmdl009 = g_xmdl_d_o.xmdl009

                     NEXT FIELD CURRENT
                  ELSE
                     LET g_xmdl_d[l_ac].xmdl013 = 'N'
                     LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013                     
                  END IF 
                  
                  #料號預帶欄位
                  CALL axmt600_xmdl008_default()

                  #顯示客戶料號
                  CALL s_axmt540_client_no(g_xmdk_m.xmdk007,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,l_xmdl033
                  IF l_success THEN
                     LET g_xmdl_d[l_ac].xmdl033 = l_xmdl033
                     LET g_xmdl_d_o.xmdl033 = g_xmdl_d[l_ac].xmdl033
                  ELSE
                     LET g_xmdl_d[l_ac].xmdl033 = ''
                     LET g_xmdl_d_o.xmdl033 = g_xmdl_d[l_ac].xmdl033            
                  END IF  

                  #數量檢查
                  IF NOT axmt600_xmdl018_chk() THEN
                     LET g_xmdl_d[l_ac].xmdl018 = ''
                  END IF

               END IF
            END IF            
            SELECT pmao009,pmao010
              INTO g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
              FROM pmao_t
             WHERE pmaoent = g_enterprise
               AND pmao001 = g_xmdk_m.xmdk007
               AND pmao002 = g_xmdl_d[l_ac].xmdl008
               AND pmao003 = g_xmdl_d[l_ac].xmdl009
               AND pmao004 = g_xmdl_d[l_ac].xmdl033                     
            
            #160512-00004#2-add-(S)            
            CALL axmt600_set_entry_b(l_cmd)
            CALL axmt600_set_no_entry_b(l_cmd)
            #160512-00004#2-add-(E)
            DISPLAY BY NAME g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
            LET g_xmdl_d_o.xmdl009 = g_xmdl_d[l_ac].xmdl009
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl009
            #add-point:BEFORE FIELD xmdl009 name="input.b.page1.xmdl009"
            
            #必須先輸入料號            
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) THEN
               #無來源時才可新增多筆產品特徵
               IF cl_null(g_xmdl_d[l_ac].xmdl001) AND cl_null(g_xmdl_d[l_ac].xmdl002) THEN
                  #取得產品特徵類別
                  CALL s_axmt500_get_imaa005(g_enterprise,g_xmdl_d[l_ac].xmdl008) RETURNING l_imaa005

                  IF s_feature_auto_chk(g_xmdl_d[l_ac].xmdl009) THEN #160314-00009#13 add
                     IF NOT cl_null(l_imaa005) THEN
                        CALL l_inam.clear()
                        
                        IF l_cmd = 'a' AND cl_null(g_xmdl_d[l_ac].xmdl009) THEN   #新增且無值時開啟
                           CALL s_feature_multi(g_xmdl_d[l_ac].xmdl008,'','',g_site,g_xmdk_m.xmdkdocno) RETURNING l_success,l_inam
                           IF l_success THEN
                              LET g_xmdl_d[l_ac].xmdl009 = l_inam[1].inam002
                              LET g_xmdl_d[l_ac].xmdl018 = l_inam[1].inam004
                                                   
                           END IF
                     
                        END IF
                     END IF
                  END IF
               END IF
            END IF

            CALL s_feature_description(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,g_xmdl_d[l_ac].xmdl009_desc
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl009
            #add-point:ON CHANGE xmdl009 name="input.g.page1.xmdl009"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl009_desc
            #add-point:BEFORE FIELD xmdl009_desc name="input.b.page1.xmdl009_desc"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl009_desc
            
            #add-point:AFTER FIELD xmdl009_desc name="input.a.page1.xmdl009_desc"

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl009_desc
            #add-point:ON CHANGE xmdl009_desc name="input.g.page1.xmdl009_desc"

            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl033
            #add-point:BEFORE FIELD xmdl033 name="input.b.page1.xmdl033"
            call axmt600_set_entry_b(l_cmd)                                                                                                
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl033
            
            #add-point:AFTER FIELD xmdl033 name="input.a.page1.xmdl033"
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl033) THEN 
               IF g_xmdl_d[l_ac].xmdl033 <> g_xmdl_d_o.xmdl033 OR cl_null(g_xmdl_d_o.xmdl033) THEN
                
                  #顯示客戶料號
                  CALL s_axmt540_makings_no(g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk007,
                                            g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,g_xmdl_d[l_ac].xmdl033)
                  RETURNING l_success,l_xmdl008,l_xmdl009
                           ,g_pmao_flag          
                  IF NOT l_success THEN
                     LET g_xmdl_d[l_ac].xmdl033 = g_xmdl_d_o.xmdl033
                     LET g_xmdl_d[l_ac].l_pmao009 = g_xmdl_d_o.l_pmao009
                     LET g_xmdl_d[l_ac].l_pmao010 = g_xmdl_d_o.l_pmao010
                     NEXT FIELD CURRENT
                  ELSE
                     LET g_xmdl_d[l_ac].xmdl008 = l_xmdl008
                     LET g_xmdl_d[l_ac].xmdl009 = l_xmdl009
                  END IF
   
                  #料號檢查
                  IF NOT axmt600_xmdl008_chk(g_xmdl_d[l_ac].xmdl008) THEN
                     LET g_xmdl_d[l_ac].xmdl008 = g_xmdl_d_o.xmdl008
                     LET g_xmdl_d[l_ac].xmdl009 = g_xmdl_d_o.xmdl009
                     LET g_xmdl_d[l_ac].xmdl033 = g_xmdl_d_o.xmdl033
                     LET g_xmdl_d[l_ac].l_pmao009 = g_xmdl_d_o.l_pmao009
                     LET g_xmdl_d[l_ac].l_pmao010 = g_xmdl_d_o.l_pmao010
                     CALL s_desc_get_item_desc(g_xmdl_d[l_ac].xmdl008)RETURNING g_xmdl_d[l_ac].xmdl008_desc,g_xmdl_d[l_ac].xmdl008_desc_desc
               
                     NEXT FIELD CURRENT
                  END IF

               END IF
               
               LET g_xmdl_d_o.xmdl008 = g_xmdl_d[l_ac].xmdl008
               LET g_xmdl_d_o.xmdl009 = g_xmdl_d[l_ac].xmdl009
               CALL s_desc_get_item_desc(g_xmdl_d[l_ac].xmdl008)RETURNING g_xmdl_d[l_ac].xmdl008_desc,g_xmdl_d[l_ac].xmdl008_desc_desc

            END IF
            SELECT pmao009,pmao010
              INTO g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
              FROM pmao_t
             WHERE pmaoent = g_enterprise
               AND pmao001 = g_xmdk_m.xmdk007
               AND pmao002 = g_xmdl_d[l_ac].xmdl008
               AND pmao003 = g_xmdl_d[l_ac].xmdl009
               AND pmao004 = g_xmdl_d[l_ac].xmdl033                     
            DISPLAY BY NAME g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
            LET g_xmdl_d_o.xmdl033 = g_xmdl_d[l_ac].xmdl033
            CALL axmt600_set_entry_b(l_cmd) 
            CALL axmt600_set_no_entry_b(l_cmd) 
            IF g_pmao_flag = 'Y' THEN
               NEXT FIELD l_pmao009
            END IF  
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl033
            #add-point:ON CHANGE xmdl033 name="input.g.page1.xmdl033"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_pmao009
            #add-point:BEFORE FIELD l_pmao009 name="input.b.page1.l_pmao009"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_pmao009
            
            #add-point:AFTER FIELD l_pmao009 name="input.a.page1.l_pmao009"

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_pmao009
            #add-point:ON CHANGE l_pmao009 name="input.g.page1.l_pmao009"

            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_pmao010
            #add-point:BEFORE FIELD l_pmao010 name="input.b.page1.l_pmao010"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_pmao010
            
            #add-point:AFTER FIELD l_pmao010 name="input.a.page1.l_pmao010"

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_pmao010
            #add-point:ON CHANGE l_pmao010 name="input.g.page1.l_pmao010"

            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl011
            
            #add-point:AFTER FIELD xmdl011 name="input.a.page1.xmdl011"
            CALL s_desc_get_acc_desc('221',g_xmdl_d[l_ac].xmdl011) RETURNING g_xmdl_d[l_ac].xmdl011_desc 
            
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl011) THEN
               IF g_xmdl_d[l_ac].xmdl011 <> g_xmdl_d_o.xmdl011 OR cl_null(g_xmdl_d_o.xmdl011) THEN
               
                  #呼叫檢查存在並帶值的library
                  IF NOT s_azzi650_chk_exist('221',g_xmdl_d[l_ac].xmdl011) THEN
                     LET g_xmdl_d[l_ac].xmdl011 = g_xmdl_d_o.xmdl011
                     
                     CALL s_desc_get_acc_desc('221',g_xmdl_d[l_ac].xmdl011) RETURNING g_xmdl_d[l_ac].xmdl011_desc
                     
                     NEXT FIELD CURRENT               
                  END IF
               END IF
            END IF
            
            LET g_xmdl_d_o.xmdl011 = g_xmdl_d[l_ac].xmdl011
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl011
            #add-point:BEFORE FIELD xmdl011 name="input.b.page1.xmdl011"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl011
            #add-point:ON CHANGE xmdl011 name="input.g.page1.xmdl011"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl012
            #add-point:BEFORE FIELD xmdl012 name="input.b.page1.xmdl012"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl012
            
            #add-point:AFTER FIELD xmdl012 name="input.a.page1.xmdl012"
                                                                                                            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl012
            #add-point:ON CHANGE xmdl012 name="input.g.page1.xmdl012"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl050
            
            #add-point:AFTER FIELD xmdl050 name="input.a.page1.xmdl050"
             
            CALL axmt600_xmdl050_ref()
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl050) THEN   
               IF g_xmdl_d[l_ac].xmdl050 <> g_xmdl_d_o.xmdl050 OR cl_null(g_xmdl_d_o.xmdl050) THEN            
               
                  IF NOT axmt600_xmdl050_chk(g_xmdl_d[l_ac].xmdl050,g_prog) THEN
                     LET g_xmdl_d[l_ac].xmdl050 = g_xmdl_d_t.xmdl050
                     CALL axmt600_xmdl050_ref()
                     
                     NEXT FIELD CURRENT
                  END IF
               
                  #檢核輸入的理由碼是否在單據別限制範圍內
                  CALL s_control_chk_doc('8',g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdl050,'','','','')
                  RETURNING l_success,l_flag
                  
                  IF NOT l_success OR NOT l_flag THEN
                     LET g_xmdl_d[l_ac].xmdl050 = g_xmdl_d_t.xmdl050
                     CALL axmt600_xmdl050_ref()
                     
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl050
            #add-point:BEFORE FIELD xmdl050 name="input.b.page1.xmdl050"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl050
            #add-point:ON CHANGE xmdl050 name="input.g.page1.xmdl050"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl050_desc
            #add-point:BEFORE FIELD xmdl050_desc name="input.b.page1.xmdl050_desc"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl050_desc
            
            #add-point:AFTER FIELD xmdl050_desc name="input.a.page1.xmdl050_desc"

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl050_desc
            #add-point:ON CHANGE xmdl050_desc name="input.g.page1.xmdl050_desc"

            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl094
            #add-point:BEFORE FIELD xmdl094 name="input.b.page1.xmdl094"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl094
            
            #add-point:AFTER FIELD xmdl094 name="input.a.page1.xmdl094"

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl094
            #add-point:ON CHANGE xmdl094 name="input.g.page1.xmdl094"

            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl095
            #add-point:BEFORE FIELD xmdl095 name="input.b.page1.xmdl095"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl095
            
            #add-point:AFTER FIELD xmdl095 name="input.a.page1.xmdl095"

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl095
            #add-point:ON CHANGE xmdl095 name="input.g.page1.xmdl095"

            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl017
            
            #add-point:AFTER FIELD xmdl017 name="input.a.page1.xmdl017"
            CALL s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl017) RETURNING g_xmdl_d[l_ac].xmdl017_desc
            
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl017) THEN
               IF g_xmdl_d[l_ac].xmdl017 <> g_xmdl_d_o.xmdl017 OR cl_null(g_xmdl_d_o.xmdl017) THEN            

                  #單位檢查
                  IF NOT s_axmt540_unit_chk(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl017) THEN
                     LET g_xmdl_d[l_ac].xmdl017 = g_xmdl_d_o.xmdl017
                  
                     CALL s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl017) RETURNING g_xmdl_d[l_ac].xmdl017_desc
                  
                     NEXT FIELD CURRENT
                  END IF

                  #刪除多庫儲批
                  IF NOT axmt540_01_xmdm_delete('1',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
                     LET g_xmdl_d[l_ac].xmdl017 = g_xmdl_d_o.xmdl017                  
                     CALL s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl017) RETURNING g_xmdl_d[l_ac].xmdl017_desc
                     
                     NEXT FIELD CURRENT
                  ELSE
                     LET g_xmdl_d[l_ac].xmdl013 = 'N'
                     LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013
                  END IF

                  #151209-00018#1  2015/12/09 By earl add s
                  #變更計價單位
                  CALL axmt600_xmdl021()
                  #151209-00018#1  2015/12/09 By earl add e

                  #推算參考數量
                  IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) AND NOT cl_null(g_xmdl_d[l_ac].xmdl017) AND
                     NOT cl_null(g_xmdl_d[l_ac].xmdl019) AND NOT cl_null(g_xmdl_d[l_ac].xmdl018) THEN
                     
                     CALL s_aooi250_convert_qty(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl018)
                     RETURNING l_success,g_xmdl_d[l_ac].xmdl020
                     LET g_xmdl_d_o.xmdl020 = g_xmdl_d[l_ac].xmdl020
                  ELSE
                     LET g_xmdl_d[l_ac].xmdl020 = ''
                     LET g_xmdl_d_o.xmdl020 = g_xmdl_d[l_ac].xmdl020
                  END IF

                  #推算計價數量
                  IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) AND NOT cl_null(g_xmdl_d[l_ac].xmdl017) AND
                     NOT cl_null(g_xmdl_d[l_ac].xmdl021) AND NOT cl_null(g_xmdl_d[l_ac].xmdl018) THEN
                     
                     CALL s_aooi250_convert_qty(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl021,g_xmdl_d[l_ac].xmdl018)
                     RETURNING l_success,g_xmdl_d[l_ac].xmdl022
                     LET g_xmdl_d_o.xmdl022 = g_xmdl_d[l_ac].xmdl022
                  ELSE
                     LET g_xmdl_d[l_ac].xmdl022 = ''
                     LET g_xmdl_d_o.xmdl022 = g_xmdl_d[l_ac].xmdl022
                  END IF                                                            

                  #取價
                  #151209-00018#1  2015/12/10 By earl mod s
                  IF cl_null(g_xmdl_d[l_ac].xmdl001) THEN   #無來源且有輸入料號、產品特徵時才做取價
                     INITIALIZE l_price.* TO NULL
                     CALL axmt600_get_price(l_ac)
                     RETURNING l_price.source,l_price.docno,l_price.seq,l_price.price
                     
                     #重新取價
                     IF cl_null(g_xmdl2_d[l_ac].xmdl042) THEN
                        LET g_xmdl2_d[l_ac].xmdl042 = l_price.source
                        LET g_xmdl2_d[l_ac].xmdl043 = l_price.docno
                        LET g_xmdl2_d[l_ac].xmdl044 = l_price.seq
                        LET g_xmdl2_d[l_ac].xmdl045 = l_price.price
                     ELSE
                        IF g_xmdl2_d[l_ac].xmdl045 <> l_price.price THEN
                           IF cl_ask_confirm('axm-00230') THEN
                              LET g_xmdl2_d[l_ac].xmdl042 = l_price.source
                              LET g_xmdl2_d[l_ac].xmdl043 = l_price.docno
                              LET g_xmdl2_d[l_ac].xmdl044 = l_price.seq
                              LET g_xmdl2_d[l_ac].xmdl045 = l_price.price
                           END IF
                        END IF
                     END IF
                  #151209-00018#1  2015/12/10 By earl mod e
                     
                     LET g_xmdl2_d[l_ac].xmdl024 = g_xmdl2_d[l_ac].xmdl045
                     LET g_xmdl2_d_o.xmdl024 = g_xmdl2_d[l_ac].xmdl024
                  END IF

               END IF
            END IF 

            LET g_xmdl_d_o.xmdl017 = g_xmdl_d[l_ac].xmdl017
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl017
            #add-point:BEFORE FIELD xmdl017 name="input.b.page1.xmdl017"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl017
            #add-point:ON CHANGE xmdl017 name="input.g.page1.xmdl017"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl018
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdl_d[l_ac].xmdl018,"0","0","","","azz-00079",1) THEN
               NEXT FIELD xmdl018
            END IF 
 
 
 
            #add-point:AFTER FIELD xmdl018 name="input.a.page1.xmdl018"
            
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl018) THEN     
               #150821-xianghui-add--b
               LET l_cnt = 1 
               #若料件設置要做製造批序號管理時，新增時維護完數量時自動開啟批序號維護作業維護相關資料
              #IF s_lot_batch_number(g_xmdl_d[l_ac].xmdl008,g_site) THEN     #160314-00008#1 mark
               IF s_lot_batch_number_1n3(g_xmdl_d[l_ac].xmdl008,g_site) THEN #160314-00008#1 add
                  SELECT COUNT(*) INTO l_cnt 
                    FROM inao_t 
                   WHERE inaoent = g_enterprise
                     AND inaodocno = g_xmdk_m.xmdkdocno
                     AND inaoseq = g_xmdl_d[l_ac].xmdlseq                     
               END IF 
               #150821-xianghui-add--e              
               IF g_xmdl_d[l_ac].xmdl018 <> g_xmdl_d_o.xmdl018 OR cl_null(g_xmdl_d_o.xmdl018) OR l_cnt = 0 THEN         
                  IF NOT axmt600_xmdl018_chk() THEN
                     LET g_xmdl_d[l_ac].xmdl018 = g_xmdl_d_o.xmdl018
                     NEXT FIELD CURRENT
                  END IF
                  #150821-xianghui-b
                  #若料件設置要做製造批序號管理時，新增時維護完數量時自動開啟批序號維護作業維護相關資料
                 #IF s_lot_batch_number(g_xmdl_d[l_ac].xmdl008,g_site) THEN     #160314-00008#1 mark
                  IF s_lot_batch_number_1n3(g_xmdl_d[l_ac].xmdl008,g_site) THEN #160314-00008#1 add
                     IF g_xmdl_d[l_ac].xmdl018 > 0 AND g_xmdl_d[l_ac].xmdl013 = 'N' THEN
                        IF NOT cl_null(g_xmdl_d[l_ac].xmdl001) THEN      
                           CALL s_axmt540_inao_copy(g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,'2','','','','',g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,1,'3','N','1') RETURNING l_success          
                           CALL s_lot_sel('2','2',g_site,g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,'1',g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,g_xmdl_d[l_ac].xmdl052,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,'1',g_prog,'','','','',0)
                                RETURNING l_success
                           IF l_success THEN     
                              CALL s_axmt540_update_inao(g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,'1',g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,'1','3') RETURNING l_success 
                           END IF
                           #刪除申請資料                              
                           DELETE FROM inao_t 
                            WHERE inaoent = g_enterprise 
                              AND inaosite = g_site
                              AND inaodocno = g_xmdk_m.xmdkdocno
                              AND inaoseq = g_xmdl_d[l_ac].xmdlseq
                              AND inaoseq1 = '1'
                              AND inao000 = '1'
                              AND inao013 = '1'  
                        ELSE   #无来源  
                           #160122-00020#1-b        
                           CALL s_lot_ins(g_site,g_xmdk_m.xmdkdocno,
                                          #目的單據項次                    目的單據項序(若單據沒有到項序層則此參數固定傳0)
                                          g_xmdl_d[l_ac].xmdlseq,'1',
                                          #料件編號                        產品特徵
                                          g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,
                                          #交易單位                      交易數量                 
                                          g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,
                                          '2',g_xmdk_m.xmdk007,'2','',g_xmdl_d[l_ac].xmdl014,
                                          g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,
                                          g_xmdl_d[l_ac].xmdl052
                                          )       #160316-00007#4 add  xmdl052
                                RETURNING l_success,l_amount 
                           #160122-00020#1-e                 
                        END IF         
                     END IF
                  END IF  
                  #150821-xianghui-e
               END IF
            END IF 
            
            LET g_xmdl_d_o.xmdl018 = g_xmdl_d[l_ac].xmdl018
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl018
            #add-point:BEFORE FIELD xmdl018 name="input.b.page1.xmdl018"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl018
            #add-point:ON CHANGE xmdl018 name="input.g.page1.xmdl018"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl019
            
            #add-point:AFTER FIELD xmdl019 name="input.a.page1.xmdl019"
 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl019
            #add-point:BEFORE FIELD xmdl019 name="input.b.page1.xmdl019"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl019
            #add-point:ON CHANGE xmdl019 name="input.g.page1.xmdl019"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl020
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdl_d[l_ac].xmdl020,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD xmdl020
            END IF 
 
 
 
            #add-point:AFTER FIELD xmdl020 name="input.a.page1.xmdl020"
            
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl020) THEN                
               #參考數量取位
               CALL s_aooi250_take_decimals(g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl020) RETURNING l_success,g_xmdl_d[l_ac].xmdl020
            END IF 

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl020
            #add-point:BEFORE FIELD xmdl020 name="input.b.page1.xmdl020"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl020
            #add-point:ON CHANGE xmdl020 name="input.g.page1.xmdl020"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl010
            #add-point:BEFORE FIELD xmdl010 name="input.b.page1.xmdl010"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl010
            
            #add-point:AFTER FIELD xmdl010 name="input.a.page1.xmdl010"
                                                                                                            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl010
            #add-point:ON CHANGE xmdl010 name="input.g.page1.xmdl010"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl013
            #add-point:BEFORE FIELD xmdl013 name="input.b.page1.xmdl013"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl013
            
            #add-point:AFTER FIELD xmdl013 name="input.a.page1.xmdl013"
            LET g_xmdl_d_o.xmdl014 = g_xmdl_d[l_ac].xmdl014
            LET g_xmdl_d_o.xmdl015 = g_xmdl_d[l_ac].xmdl015
            LET g_xmdl_d_o.xmdl016 = g_xmdl_d[l_ac].xmdl016
            LET g_xmdl_d_o.xmdl052 = g_xmdl_d[l_ac].xmdl052               
            LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013

            CALL axmt600_set_entry_b(l_cmd)
            CALL axmt600_set_no_entry_b(l_cmd) 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl013
            #add-point:ON CHANGE xmdl013 name="input.g.page1.xmdl013"

            #開啟多庫儲批
            IF g_xmdl_d[l_ac].xmdl013 = 'Y' THEN
               #150821-xianghui-b              
               INSERT INTO axmt600_inao SELECT * FROM inao_t 
                                           WHERE inaoent = g_enterprise 
                                             AND inaodocno = g_xmdk_m.xmdkdocno
                                             AND inaoseq = g_xmdl_d[l_ac].xmdlseq 
               #150821-xianghui-e                
               CALL axmt540_01('6',g_xmdk_m.xmdksite,g_xmdk_m.xmdk082,g_xmdk_m.xmdkdocno,
                               g_xmdl_d[l_ac].xmdlseq,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,
                               g_xmdl_d[l_ac].xmdl011,g_xmdl_d[l_ac].xmdl012,
                               g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,'',
                               g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl020,'',
                               g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,g_xmdl_d[l_ac].xmdl030)
                               RETURNING l_success,l_rollback,l_xmdl014,l_xmdl015,l_xmdl016,l_xmdl052
               #150821-xianghui-b                
               IF l_success = FALSE AND l_rollback = FALSE THEN 
                  DELETE FROM inao_t 
                   WHERE inaoent = g_enterprise 
                     AND inaodocno = g_xmdk_m.xmdkdocno
                     AND inaoseq = g_xmdl_d[l_ac].xmdlseq       
                  #將資料塞回原table   
                  INSERT INTO inao_t SELECT * FROM axmt600_inao
               END IF
               #150821-xianghui-e                                
               IF l_rollback THEN  #多庫儲批資料錯誤必須rollback
                  CLOSE axmt600_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF

               IF l_success THEN
                  IF NOT cl_null(l_xmdl014) THEN  #只有一筆
                     LET g_xmdl_d[l_ac].xmdl013 = 'N'
                     LET g_xmdl_d[l_ac].xmdl014 = l_xmdl014
                     LET g_xmdl_d[l_ac].xmdl015 = l_xmdl015
                     LET g_xmdl_d[l_ac].xmdl016 = l_xmdl016
                     LET g_xmdl_d[l_ac].xmdl052 = l_xmdl052
                  ELSE
                     LET g_xmdl_d[l_ac].xmdl013 = 'Y'
                     LET g_xmdl_d[l_ac].xmdl014 = ' '
                     LET g_xmdl_d[l_ac].xmdl015 = ' '
                     LET g_xmdl_d[l_ac].xmdl016 = ' '
                     #160519-00008#10--(S)
                     CALL s_axmt540_get_imaf(g_xmdl_d[l_ac].xmdl008) RETURNING l_imaf055,l_imaf061
                     IF l_imaf055 = '1' THEN
                        LET g_xmdl_d[l_ac].xmdl052 = ''
                     ELSE
                     #160519-00008#10--(E)
                        LET g_xmdl_d[l_ac].xmdl052 = ' '
                     END IF         #160519-00008#10
                     
                  END IF

                  DISPLAY BY NAME g_xmdl_d[l_ac].xmdl013
                  DISPLAY BY NAME g_xmdl_d[l_ac].xmdl014
                  DISPLAY BY NAME g_xmdl_d[l_ac].xmdl015
                  DISPLAY BY NAME g_xmdl_d[l_ac].xmdl016
                  DISPLAY BY NAME g_xmdl_d[l_ac].xmdl052

                  CALL s_desc_get_stock_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014) RETURNING g_xmdl_d[l_ac].xmdl014_desc
                  DISPLAY BY NAME g_xmdl_d[l_ac].xmdl014_desc
                  CALL s_desc_get_locator_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015) RETURNING g_xmdl_d[l_ac].xmdl015_desc
                  DISPLAY BY NAME g_xmdl_d[l_ac].xmdl015_desc
                  
               ELSE               
                  LET g_xmdl_d[l_ac].xmdl013 = g_xmdl_d_o.xmdl013
                  
                  NEXT FIELD CURRENT
               END IF          

               LET l_xmdlseq_backup = g_xmdl_d[l_ac].xmdlseq #紀錄產生庫儲批所用的項次

            ELSE

               #檢查是否可多庫儲批若為"N"刪除舊值
               IF NOT axmt540_01_xmdm_delete('6',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
                  LET g_xmdl_d[l_ac].xmdl013 = g_xmdl_d_o.xmdl013
               
                  NEXT FIELD CURRENT
               END IF

            END IF
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl014
            
            #add-point:AFTER FIELD xmdl014 name="input.a.page1.xmdl014"
            CALL s_desc_get_stock_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014) RETURNING g_xmdl_d[l_ac].xmdl014_desc
            
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl014) THEN
               IF g_xmdl_d[l_ac].xmdl014 <> g_xmdl_d_o.xmdl014 OR cl_null(g_xmdl_d_o.xmdl014) 
                  OR g_xmdl_d[l_ac].xmdl015 <> g_xmdl_d_o.xmdl015 OR g_xmdl_d_o.xmdl015 IS NULL      #150821-xianghui
                  OR g_xmdl_d[l_ac].xmdl016 <> g_xmdl_d_o.xmdl016 OR g_xmdl_d_o.xmdl016 IS NULL  #150821-xianghui         
                  THEN 
                  
                  IF NOT axmt600_xmdl014_chk() THEN
                     LET g_xmdl_d[l_ac].xmdl014 = g_xmdl_d_o.xmdl014                     
                     CALL s_desc_get_stock_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014) RETURNING g_xmdl_d[l_ac].xmdl014_desc
                     
                     NEXT FIELD CURRENT
                  END IF
            
                  #檢查儲位
                  IF NOT axmt600_xmdl015_chk() THEN
                     LET g_xmdl_d[l_ac].xmdl014 = g_xmdl_d_o.xmdl014
                     CALL s_desc_get_stock_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014) RETURNING g_xmdl_d[l_ac].xmdl014_desc

                     NEXT FIELD CURRENT
                  END IF
           
                  #150821-xianghui-b
                  CALL s_lot_upd_inao(g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,1,'2',g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,g_site,g_xmdl_d[l_ac].xmdl052)    #160316-00007#4 add xmdl052
                      RETURNING l_success
                  #150821-xianghui-e  

           
                  #儲位控管若為5.不使用儲位控管
                  IF NOT s_axmt540_inaa007_chk(g_xmdl_d[l_ac].xmdl014) THEN
                     LET g_xmdl_d[l_ac].xmdl015 = ' '
                     LET g_xmdl_d_o.xmdl015 = g_xmdl_d[l_ac].xmdl015
                     CALL s_desc_get_locator_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015) RETURNING g_xmdl_d[l_ac].xmdl015_desc
                  END IF 
               END IF
            END IF

            LET g_xmdl_d_o.xmdl014 = g_xmdl_d[l_ac].xmdl014
            LET g_xmdl_d_o.xmdl015 = g_xmdl_d[l_ac].xmdl015   #150821-xianghui-e
            LET g_xmdl_d_o.xmdl016 = g_xmdl_d[l_ac].xmdl016   #150821-xianghui-e
            CALL axmt600_set_entry_b(l_cmd)
            CALL axmt600_set_no_entry_b(l_cmd)            

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl014
            #add-point:BEFORE FIELD xmdl014 name="input.b.page1.xmdl014"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl014
            #add-point:ON CHANGE xmdl014 name="input.g.page1.xmdl014"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl015
            
            #add-point:AFTER FIELD xmdl015 name="input.a.page1.xmdl015"
            CALL s_desc_get_locator_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015) RETURNING g_xmdl_d[l_ac].xmdl015_desc                               
            #150821-xianghui
            IF g_xmdl_d[l_ac].xmdl015 IS NULL THEN 
               LET g_xmdl_d[l_ac].xmdl015 = ' '
            END IF
            #150821-xianghui
            #IF NOT cl_null(g_xmdl_d[l_ac].xmdl015) THEN   #150821-xianghui-mark
            IF g_xmdl_d[l_ac].xmdl015 IS NOT NULL THEN   #150821-xianghui
               #IF g_xmdl_d[l_ac].xmdl015 <> g_xmdl_d_o.xmdl015 OR cl_null(g_xmdl_d_o.xmdl015)     #150821-xianghui-mark
               IF g_xmdl_d[l_ac].xmdl015 <> g_xmdl_d_o.xmdl015 OR g_xmdl_d_o.xmdl015 IS NULL      #150821-xianghui
                  OR g_xmdl_d[l_ac].xmdl016 <> g_xmdl_d_o.xmdl016 OR g_xmdl_d_o.xmdl016 IS NULL THEN  #150821-xianghui               

                  IF NOT cl_null(g_xmdl_d[l_ac].xmdl015) THEN   #150821-xianghui
                     IF NOT axmt600_xmdl015_chk() THEN
                        LET g_xmdl_d[l_ac].xmdl015 = g_xmdl_d_o.xmdl015
                     
                        CALL s_desc_get_locator_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015) RETURNING g_xmdl_d[l_ac].xmdl015_desc
                     
                        NEXT FIELD xmdl015
                     END IF
                  END IF    #150821-xianghui
                  #150821-xianghui-b
                  CALL s_lot_upd_inao(g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,1,'2',g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,g_site,g_xmdl_d[l_ac].xmdl052)   #160316-00007#4 add xmdl052
                      RETURNING l_success  
                  #150821-xianghui-e                   
               END IF
            END IF

            LET g_xmdl_d_o.xmdl015 = g_xmdl_d[l_ac].xmdl015
            LET g_xmdl_d_o.xmdl016 = g_xmdl_d[l_ac].xmdl016   #150821-xianghui-e                           
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl015
            #add-point:BEFORE FIELD xmdl015 name="input.b.page1.xmdl015"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl015
            #add-point:ON CHANGE xmdl015 name="input.g.page1.xmdl015"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl016
            
            #add-point:AFTER FIELD xmdl016 name="input.a.page1.xmdl016"
            #150821-xianghui
            IF g_xmdl_d[l_ac].xmdl016 IS NULL THEN 
               LET g_xmdl_d[l_ac].xmdl016 = ' '
            END IF
            #150821-xianghui            
            #IF NOT cl_null(g_xmdl_d[l_ac].xmdl016) THEN             #150821-xianghui mark
            IF g_xmdl_d[l_ac].xmdl016 IS NOT NULL THEN    #150821-xianghui
               #IF g_xmdl_d[l_ac].xmdl016 <> g_xmdl_d_o.xmdl016 OR cl_null(g_xmdl_d_o.xmdl016) THEN   #150821-xianghui-mark
               IF g_xmdl_d[l_ac].xmdl016 <> g_xmdl_d_o.xmdl016 OR g_xmdl_d_o.xmdl016 IS NULL THEN   #150821-xianghui
                  IF NOT cl_null(g_xmdl_d[l_ac].xmdl016) THEN             #150821-xianghui
                     IF NOT axmt600_xmdl016_chk() THEN
                        LET g_xmdl_d[l_ac].xmdl016 = g_xmdl_d_o.xmdl016
                     
                        NEXT FIELD xmdl016
                     END IF
                  END IF    #150821-xianghui
                  #150821-xianghui-b
                  CALL s_lot_upd_inao(g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,1,'2',g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,g_site,g_xmdl_d[l_ac].xmdl052)  #160316-00007#4 add xmdl052
                      RETURNING l_success
                  #150821-xianghui-e     
                  
               END IF
            END IF
            
            #160512-00004#2-add-(S)            
            CALL axmt600_set_entry_b(l_cmd)
            CALL axmt600_set_no_entry_b(l_cmd)
            #160512-00004#2-add-(E)
            LET g_xmdl_d_o.xmdl016 = g_xmdl_d[l_ac].xmdl016
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl016
            #add-point:BEFORE FIELD xmdl016 name="input.b.page1.xmdl016"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl016
            #add-point:ON CHANGE xmdl016 name="input.g.page1.xmdl016"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl052
            #add-point:BEFORE FIELD xmdl052 name="input.b.page1.xmdl052"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl052
            
            #add-point:AFTER FIELD xmdl052 name="input.a.page1.xmdl052"
            #160316-00007#4---add---begin
            #160519-00008#10--(S)
            CALL s_axmt540_get_imaf(g_xmdl_d[l_ac].xmdl008) RETURNING l_imaf055,l_imaf061
            IF l_imaf055 = '1' THEN
               LET g_xmdl_d[l_ac].xmdl052 = ''
            ELSE
            #160519-00008#10--(E)
               IF g_xmdl_d[l_ac].xmdl052 IS NULL THEN 
                  LET g_xmdl_d[l_ac].xmdl052 = ' '
               END IF
            END IF         #160519-00008#10
            IF g_xmdl_d[l_ac].xmdl052 IS NOT NULL THEN    
               IF g_xmdl_d[l_ac].xmdl052 <> g_xmdl_d_o.xmdl052 OR g_xmdl_d_o.xmdl052 IS NULL THEN   
                  CALL s_lot_upd_inao(g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,1,'2',g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,g_site,g_xmdl_d[l_ac].xmdl052)
                      RETURNING l_success                    
               END IF
            END IF
            LET g_xmdl_d_o.xmdl052 = g_xmdl_d[l_ac].xmdl052
            #160316-00007#4---add---end
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl052
            #add-point:ON CHANGE xmdl052 name="input.g.page1.xmdl052"

            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl021
            
            #add-point:AFTER FIELD xmdl021 name="input.a.page1.xmdl021"
 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl021
            #add-point:BEFORE FIELD xmdl021 name="input.b.page1.xmdl021"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl021
            #add-point:ON CHANGE xmdl021 name="input.g.page1.xmdl021"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl022
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdl_d[l_ac].xmdl022,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD xmdl022
            END IF 
 
 
 
            #add-point:AFTER FIELD xmdl022 name="input.a.page1.xmdl022"
           
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl022) THEN 
               IF g_xmdl_d[l_ac].xmdl022 <> g_xmdl_d_o.xmdl022 OR cl_null(g_xmdl_d_o.xmdl022) THEN
               
                  #取位
                  CALL s_aooi250_take_decimals(g_xmdl_d[l_ac].xmdl021,g_xmdl_d[l_ac].xmdl022) RETURNING l_success,g_xmdl_d[l_ac].xmdl022
                  
                  #取價
                  #151209-00018#1  2015/12/10 By earl mod s
                  IF cl_null(g_xmdl_d[l_ac].xmdl001) THEN   #無來源且有輸入料號、產品特徵時才做取價
                     INITIALIZE l_price.* TO NULL
                     CALL axmt600_get_price(l_ac)
                     RETURNING l_price.source,l_price.docno,l_price.seq,l_price.price
                     
                     #重新取價
                     IF cl_null(g_xmdl2_d[l_ac].xmdl042) THEN
                        LET g_xmdl2_d[l_ac].xmdl042 = l_price.source
                        LET g_xmdl2_d[l_ac].xmdl043 = l_price.docno
                        LET g_xmdl2_d[l_ac].xmdl044 = l_price.seq
                        LET g_xmdl2_d[l_ac].xmdl045 = l_price.price
                     ELSE
                        IF g_xmdl2_d[l_ac].xmdl045 <> l_price.price THEN
                           IF cl_ask_confirm('axm-00230') THEN
                              LET g_xmdl2_d[l_ac].xmdl042 = l_price.source
                              LET g_xmdl2_d[l_ac].xmdl043 = l_price.docno
                              LET g_xmdl2_d[l_ac].xmdl044 = l_price.seq
                              LET g_xmdl2_d[l_ac].xmdl045 = l_price.price
                           END IF
                        END IF
                     END IF
                  #151209-00018#1  2015/12/10 By earl mod e
                     
                     LET g_xmdl2_d[l_ac].xmdl024 = g_xmdl2_d[l_ac].xmdl045
                     LET g_xmdl2_d_o.xmdl024 = g_xmdl2_d[l_ac].xmdl024
                  END IF
                  
               END IF
            END IF
           
            LET g_xmdl_d_o.xmdl022 = g_xmdl_d[l_ac].xmdl022
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl022
            #add-point:BEFORE FIELD xmdl022 name="input.b.page1.xmdl022"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl022
            #add-point:ON CHANGE xmdl022 name="input.g.page1.xmdl022"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl023
            #add-point:BEFORE FIELD xmdl023 name="input.b.page1.xmdl023"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl023
            
            #add-point:AFTER FIELD xmdl023 name="input.a.page1.xmdl023"
                                                                                                            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl023
            #add-point:ON CHANGE xmdl023 name="input.g.page1.xmdl023"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl041
            #add-point:BEFORE FIELD xmdl041 name="input.b.page1.xmdl041"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl041
            
            #add-point:AFTER FIELD xmdl041 name="input.a.page1.xmdl041"
                                                                                                            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl041
            #add-point:ON CHANGE xmdl041 name="input.g.page1.xmdl041"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl030
            
            #add-point:AFTER FIELD xmdl030 name="input.a.page1.xmdl030"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl030
            #add-point:BEFORE FIELD xmdl030 name="input.b.page1.xmdl030"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl030
            #add-point:ON CHANGE xmdl030 name="input.g.page1.xmdl030"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl031
            
            #add-point:AFTER FIELD xmdl031 name="input.a.page1.xmdl031"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl031
            #add-point:BEFORE FIELD xmdl031 name="input.b.page1.xmdl031"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl031
            #add-point:ON CHANGE xmdl031 name="input.g.page1.xmdl031"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl032
            
            #add-point:AFTER FIELD xmdl032 name="input.a.page1.xmdl032"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl032
            #add-point:BEFORE FIELD xmdl032 name="input.b.page1.xmdl032"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl032
            #add-point:ON CHANGE xmdl032 name="input.g.page1.xmdl032"
                                                                                                            
            #END add-point 
 
         #160512-00004#2-add-(S)
         AFTER FIELD xmdl058
            IF NOT axmt600_xmdl058_xmdl057_chk(g_xmdl_d[l_ac].xmdl058,g_xmdl_d[l_ac].xmdl057) THEN
               LET g_xmdl_d[l_ac].xmdl058 = g_xmdl_d_o.xmdl058
               NEXT FIELD CURRENT
            END IF
            LET g_xmdl_d_o.xmdl058 = g_xmdl_d[l_ac].xmdl058
            
         AFTER FIELD xmdl057
            IF NOT axmt600_xmdl058_xmdl057_chk(g_xmdl_d[l_ac].xmdl058,g_xmdl_d[l_ac].xmdl057) THEN
               LET g_xmdl_d[l_ac].xmdl057 = g_xmdl_d_o.xmdl057
               NEXT FIELD CURRENT
            END IF
            LET g_xmdl_d_o.xmdl057 = g_xmdl_d[l_ac].xmdl057
            
         #160512-00004#2-add-(E)
         
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl051
            #add-point:BEFORE FIELD xmdl051 name="input.b.page1.xmdl051"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl051
            
            #add-point:AFTER FIELD xmdl051 name="input.a.page1.xmdl051"
                                                                                                            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl051
            #add-point:ON CHANGE xmdl051 name="input.g.page1.xmdl051"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl088
            #add-point:BEFORE FIELD xmdl088 name="input.b.page1.xmdl088"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl088
            
            #add-point:AFTER FIELD xmdl088 name="input.a.page1.xmdl088"

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl088
            #add-point:ON CHANGE xmdl088 name="input.g.page1.xmdl088"

            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.xmdlsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdlsite
            #add-point:ON ACTION controlp INFIELD xmdlsite name="input.c.page1.xmdlsite"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdlseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdlseq
            #add-point:ON ACTION controlp INFIELD xmdlseq name="input.c.page1.xmdlseq"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl001
            #add-point:ON ACTION controlp INFIELD xmdl001 name="input.c.page1.xmdl001"
            
            #此段落由子樣板a07產生
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl001            #給予default值

            LET g_qryparam.where = " xmdk007 = '",g_xmdk_m.xmdk007,"'",
                                   " AND xmdk008 = '",g_xmdk_m.xmdk008,"'",
                                   " AND xmdk009 = '",g_xmdk_m.xmdk009,"'",
                                   " AND xmdk010 = '",g_xmdk_m.xmdk010,"'",
                                   " AND xmdk011 = '",g_xmdk_m.xmdk011,"'",
                                   " AND xmdk012 = '",g_xmdk_m.xmdk012,"'",
                                   " AND xmdk015 = '",g_xmdk_m.xmdk015,"'",
                                   " AND xmdk016 = '",g_xmdk_m.xmdk016,"'",
                                   " AND xmdk018 = '",g_xmdk_m.xmdk018,"'",
                                   " AND xmdk042 = '",g_xmdk_m.xmdk042,"'",
                                   " AND xmdk045 = '",g_xmdk_m.xmdk045,"'",
                                   " AND xmdk202 = '",g_xmdk_m.xmdk202,"'",
                                   " AND COALESCE(xmdk044,' ') = COALESCE('",g_xmdk_m.xmdk044,"',' ')", #多角流程代碼
                                   " AND ((xmdk044 IS NULL AND xmdk083 = 'N') OR 
                                          (xmdk044 IS NOT NULL AND xmdk083 = 'Y'))"

            #組合過濾前後置單據資料SQL
            CALL s_aooi210_get_check_sql(g_site,'',g_xmdk_m.xmdkdocno,'4','','xmdkdocno') RETURNING l_success,l_where

            IF l_success THEN
               LET g_qryparam.where = g_qryparam.where," AND ",l_where
               CALL q_xmdkdocno_7()                             #呼叫開窗

               LET g_xmdl_d[l_ac].xmdl001 = g_qryparam.return1        #將開窗取得的值回傳到變數
               DISPLAY g_xmdl_d[l_ac].xmdl001 TO xmdl001
            END IF

            NEXT FIELD CURRENT                          #返回原欄位
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl002
            #add-point:ON ACTION controlp INFIELD xmdl002 name="input.c.page1.xmdl002"
            
            #此段落由子樣板a07產生
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl002            #給予default值
            LET g_qryparam.arg1 = g_xmdl_d[l_ac].xmdl001            #給予default值

            CALL q_xmdlseq()                             #呼叫開窗

            LET g_xmdl_d[l_ac].xmdl002 = g_qryparam.return1        #將開窗取得的值回傳到變數
            DISPLAY g_xmdl_d[l_ac].xmdl002 TO xmdl002

            NEXT FIELD CURRENT                          #返回原欄位
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl003
            #add-point:ON ACTION controlp INFIELD xmdl003 name="input.c.page1.xmdl003"
 
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl004
            #add-point:ON ACTION controlp INFIELD xmdl004 name="input.c.page1.xmdl004"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl005
            #add-point:ON ACTION controlp INFIELD xmdl005 name="input.c.page1.xmdl005"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl006
            #add-point:ON ACTION controlp INFIELD xmdl006 name="input.c.page1.xmdl006"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl007
            #add-point:ON ACTION controlp INFIELD xmdl007 name="input.c.page1.xmdl007"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl008
            #add-point:ON ACTION controlp INFIELD xmdl008 name="input.c.page1.xmdl008"
                    
            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl008             #給予default值

            CALL s_control_get_doc_sql('imaf001',g_xmdk_m.xmdkdocno,'4') RETURNING l_success,l_where
            IF l_success THEN
               LET g_qryparam.where = l_where
            END IF
            
            CALL s_control_get_doc_sql('imaf001',g_xmdk_m.xmdkdocno,'5') RETURNING l_success,l_where
            IF l_success THEN
               LET g_qryparam.where = g_qryparam.where," AND ",l_where
            END IF

            CALL q_imaf001_15()                                #呼叫開窗

            LET g_xmdl_d[l_ac].xmdl008 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdl_d[l_ac].xmdl008 TO xmdl008              #顯示到畫面上

            CALL s_desc_get_item_desc(g_xmdl_d[l_ac].xmdl008) RETURNING g_xmdl_d[l_ac].xmdl008_desc,g_xmdl_d[l_ac].xmdl008_desc_desc
            
            NEXT FIELD xmdl008                          #返回原欄位
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl009
            #add-point:ON ACTION controlp INFIELD xmdl009 name="input.c.page1.xmdl009"
            
            #開窗i段
            #必須先輸入料號
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) THEN
               
               #取得產品特徵
               CALL s_axmt500_get_imaa005(g_enterprise,g_xmdl_d[l_ac].xmdl008) RETURNING l_imaa005               

               IF NOT cl_null(l_imaa005) THEN
#                  IF l_cmd = 'u' OR (l_cmd = 'a' AND NOT cl_null(g_xmdl_d[l_ac].xmdl009)) THEN    #160314-00009#13 mark
                     CALL s_feature_single(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno)
                     RETURNING l_success,g_xmdl_d[l_ac].xmdl009

                     DISPLAY BY NAME g_xmdl_d[l_ac].xmdl009
#                  END IF                            #160314-00009#13 mark
               ELSE   #無使用產品特徵
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'ain-00121'
                  LET g_errparam.extend = g_xmdl_d[l_ac].xmdl008
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

               END IF
            ELSE      #未輸入料號
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00229'
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

            END IF
            
            CALL s_feature_description(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,g_xmdl_d[l_ac].xmdl009_desc
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl009_desc
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl009_desc
            #add-point:ON ACTION controlp INFIELD xmdl009_desc name="input.c.page1.xmdl009_desc"

            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl033
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl033
            #add-point:ON ACTION controlp INFIELD xmdl033 name="input.c.page1.xmdl033"
            
            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl033             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_xmdk_m.xmdk007
            LET g_qryparam.arg2 = g_xmdl_d[l_ac].xmdl008
            LET g_qryparam.arg3 = g_xmdl_d[l_ac].xmdl009

            CALL q_pmao004_1()                                #呼叫開窗

            LET g_xmdl_d[l_ac].xmdl033 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdl_d[l_ac].xmdl033 TO xmdl033              #顯示到畫面上
            SELECT pmao009,pmao010
              INTO g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
              FROM pmao_t
             WHERE pmaoent = g_enterprise
               AND pmao001 = g_xmdk_m.xmdk007
               AND pmao002 = g_xmdl_d[l_ac].xmdl008
               AND pmao003 = g_xmdl_d[l_ac].xmdl009
               AND pmao004 = g_xmdl_d[l_ac].xmdl033                     
            DISPLAY BY NAME g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
            NEXT FIELD xmdl033                          #返回原欄位
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.l_pmao009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_pmao009
            #add-point:ON ACTION controlp INFIELD l_pmao009 name="input.c.page1.l_pmao009"

            #END add-point
 
 
         #Ctrlp:input.c.page1.l_pmao010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_pmao010
            #add-point:ON ACTION controlp INFIELD l_pmao010 name="input.c.page1.l_pmao010"

            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl011
            #add-point:ON ACTION controlp INFIELD xmdl011 name="input.c.page1.xmdl011"
            #開窗i段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl011             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '221'

            CALL q_oocq002()                                #呼叫開窗

            LET g_xmdl_d[l_ac].xmdl011 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdl_d[l_ac].xmdl011 TO xmdl011              #顯示到畫面上

            CALL s_desc_get_acc_desc('221',g_xmdl_d[l_ac].xmdl011) RETURNING g_xmdl_d[l_ac].xmdl011_desc
            NEXT FIELD xmdl011                          #返回原欄位                                                                                        
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl012
            #add-point:ON ACTION controlp INFIELD xmdl012 name="input.c.page1.xmdl012"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl050
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl050
            #add-point:ON ACTION controlp INFIELD xmdl050 name="input.c.page1.xmdl050"
            #此段落由子樣板a07產生            
            #開窗i段
#160705-00001 by whitney mark start
#            LET l_gzcb004 = ''
#            SELECT gzcb004
#              INTO l_gzcb004
#              FROM gzcb_t
#             WHERE gzcb001 = '24'
#               AND gzcb002 = g_prog
#160705-00001 by whitney mark end
                                   
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl050             #給予default值
            
            CALL s_control_get_doc_sql('oocq002',g_xmdk_m.xmdkdocno,'8') RETURNING l_success,l_where
            IF l_success THEN
               LET g_qryparam.where = l_where
            END IF            

            #給予arg
            LET g_qryparam.arg1 = g_gzcb004  #160705-00001 by whitney modify l_gzcb004 -> g_gzcb004

            CALL q_oocq002()                                #呼叫開窗

            LET g_xmdl_d[l_ac].xmdl050 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdl_d[l_ac].xmdl050 TO xmdl050              #顯示到畫面上

            CALL axmt600_xmdl050_ref()
            NEXT FIELD xmdl050                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl050_desc
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl050_desc
            #add-point:ON ACTION controlp INFIELD xmdl050_desc name="input.c.page1.xmdl050_desc"

            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl094
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl094
            #add-point:ON ACTION controlp INFIELD xmdl094 name="input.c.page1.xmdl094"

            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl095
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl095
            #add-point:ON ACTION controlp INFIELD xmdl095 name="input.c.page1.xmdl095"

            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl017
            #add-point:ON ACTION controlp INFIELD xmdl017 name="input.c.page1.xmdl017"
            
            #開窗i段
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
			   
			   LET g_qryparam.arg1 = g_xmdl_d[l_ac].xmdl008

            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl017             #給予default值
     
            CALL q_imao002()                                #呼叫開窗

            LET g_xmdl_d[l_ac].xmdl017 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdl_d[l_ac].xmdl017 TO xmdl017              #顯示到畫面上

            CALL s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl017) RETURNING g_xmdl_d[l_ac].xmdl017_desc
            
            NEXT FIELD xmdl017                          #返回原欄位  
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl018
            #add-point:ON ACTION controlp INFIELD xmdl018 name="input.c.page1.xmdl018"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl019
            #add-point:ON ACTION controlp INFIELD xmdl019 name="input.c.page1.xmdl019"
 
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl020
            #add-point:ON ACTION controlp INFIELD xmdl020 name="input.c.page1.xmdl020"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl010
            #add-point:ON ACTION controlp INFIELD xmdl010 name="input.c.page1.xmdl010"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl013
            #add-point:ON ACTION controlp INFIELD xmdl013 name="input.c.page1.xmdl013"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl014
            #add-point:ON ACTION controlp INFIELD xmdl014 name="input.c.page1.xmdl014"
            #得出來源成本庫否
            CALL s_axmt600_warehouse_cost(g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002)
            RETURNING l_type                  
            
		      INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
		      LET g_qryparam.reqry = FALSE
               
            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl014             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_xmdk_m.xmdksite
            
            LET g_qryparam.where = '1=1'
            
            #串上成本庫否
            IF NOT cl_null(l_type) THEN
               LET g_qryparam.where = g_qryparam.where," AND inaa010 = '",l_type,"'"
            END IF
         
            #151021 earl add s
            #單據別庫位限制(From)
            CALL s_control_get_doc_sql('inaa001',g_xmdk_m.xmdkdocno,'6') RETURNING l_success,l_where
            IF l_success THEN
               LET g_qryparam.where = g_qryparam.where," AND ",l_where
            END IF
            #151021 earl add e
         
            CALL q_inaa001_4()                              #呼叫開窗
         
            LET g_xmdl_d[l_ac].xmdl014 = g_qryparam.return1   #將開窗取得的值回傳到變數
            DISPLAY g_xmdl_d[l_ac].xmdl014 TO xmdl014
            
            CALL s_desc_get_stock_desc(g_xmdk_m.xmdksite,g_xmdl_d[l_ac].xmdl014) RETURNING g_xmdl_d[l_ac].xmdl014_desc
            CALL s_desc_get_locator_desc(g_xmdk_m.xmdksite,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015) RETURNING g_xmdl_d[l_ac].xmdl015_desc
            NEXT FIELD xmdl014                          #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl015
            #add-point:ON ACTION controlp INFIELD xmdl015 name="input.c.page1.xmdl015"
            
            IF cl_null(g_xmdl_d[l_ac].xmdl014) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'sub-00126'   #庫位不可為空
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

               NEXT FIELD xmdl014
            END IF
            
		      INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
		      LET g_qryparam.reqry = FALSE
               
            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl015  #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_xmdk_m.xmdksite
            LET g_qryparam.arg2 = g_xmdl_d[l_ac].xmdl014
               
            CALL q_inab002_8()                                #呼叫開窗
               
            LET g_xmdl_d[l_ac].xmdl015 = g_qryparam.return1   #將開窗取得的值回傳到變數
            DISPLAY g_xmdl_d[l_ac].xmdl015 TO xmdl015
            
            CALL s_desc_get_locator_desc(g_xmdk_m.xmdksite,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015) RETURNING g_xmdl_d[l_ac].xmdl015_desc
            NEXT FIELD xmdl015                          #返回原欄位
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl016
            #add-point:ON ACTION controlp INFIELD xmdl016 name="input.c.page1.xmdl016"
		     	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
		      LET g_qryparam.reqry = FALSE
              
            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl016             #給予default值
              
            #給予arg
            LET g_qryparam.arg1 = g_xmdk_m.xmdksite
            LET g_qryparam.arg2 = g_xmdl_d[l_ac].xmdl008
            LET g_qryparam.arg3 = g_xmdl_d[l_ac].xmdl009
              
            #接上來源單據
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl001) AND NOT cl_null(g_xmdl_d[l_ac].xmdl002) THEN
               LET g_qryparam.where = "inad003 IN (SELECT xmdm007 FROM xmdm_t",
                                      "             WHERE xmdment = '",g_enterprise,"'",
                                      "               AND xmdmdocno = '",g_xmdl_d[l_ac].xmdl001,"'",
                                      "               AND xmdmseq = '",g_xmdl_d[l_ac].xmdl002,"')"
            END IF
              
            CALL q_inad003()                
               
            LET g_xmdl_d[l_ac].xmdl016 = g_qryparam.return1   #將開窗取得的值回傳到變數
            DISPLAY g_xmdl_d[l_ac].xmdl016 TO xmdl016

            NEXT FIELD xmdl016
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl052
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl052
            #add-point:ON ACTION controlp INFIELD xmdl052 name="input.c.page1.xmdl052"

            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl021
            #add-point:ON ACTION controlp INFIELD xmdl021 name="input.c.page1.xmdl021"
                                                                                                          
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl022
            #add-point:ON ACTION controlp INFIELD xmdl022 name="input.c.page1.xmdl022"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl023
            #add-point:ON ACTION controlp INFIELD xmdl023 name="input.c.page1.xmdl023"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl041
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl041
            #add-point:ON ACTION controlp INFIELD xmdl041 name="input.c.page1.xmdl041"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl030
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl030
            #add-point:ON ACTION controlp INFIELD xmdl030 name="input.c.page1.xmdl030"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl031
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl031
            #add-point:ON ACTION controlp INFIELD xmdl031 name="input.c.page1.xmdl031"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl032
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl032
            #add-point:ON ACTION controlp INFIELD xmdl032 name="input.c.page1.xmdl032"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl051
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl051
            #add-point:ON ACTION controlp INFIELD xmdl051 name="input.c.page1.xmdl051"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl088
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl088
            #add-point:ON ACTION controlp INFIELD xmdl088 name="input.c.page1.xmdl088"

            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_xmdl_d[l_ac].* = g_xmdl_d_t.*
               CLOSE axmt600_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_xmdl_d[l_ac].xmdlseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_xmdl_d[l_ac].* = g_xmdl_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               CALL axmt600_row_default()
               IF g_pmao_flag = 'Y' THEN
                  
                      IF NOT s_axmt500_ins_pmao(g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk007,g_xmdl_d[l_ac].xmdl006,g_xmdl_d[l_ac].xmdl007,g_xmdl_d[l_ac].xmdl033,
                                                g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010) THEN
                        LET g_xmdl_d[l_ac].xmdl033 = ''
                        LET g_xmdl_d[l_ac].l_pmao009 = ''
                        LET g_xmdl_d[l_ac].l_pmao010 = ''
                        DISPLAY BY NAME g_xmdl_d[l_ac].xmdl007,g_xmdl_d[l_ac].xmdl033,
                                                g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
                      END IF
                  
               END IF     
               #稅額計算
               CALL s_axmt540_tax_count(g_xmdl_d_t.xmdlseq,g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,g_site,g_xmdl2_d[l_ac].xmdl025,
                                        g_xmdl_d[l_ac].xmdl022,g_xmdl2_d[l_ac].xmdl024,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,
                                        g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,g_xmdl_d[l_ac].xmdl018)
               RETURNING g_xmdl2_d[l_ac].xmdl027,g_xmdl2_d[l_ac].xmdl028,g_xmdl2_d[l_ac].xmdl029
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL axmt600_xmdl_t_mask_restore('restore_mask_o')
               #160512-00004#2-add-'xmdl058,xmdl057' 欄位
               UPDATE xmdl_t SET (xmdldocno,xmdlsite,xmdlseq,xmdl001,xmdl002,xmdl003,xmdl004,xmdl005, 
                   xmdl006,xmdl007,xmdl008,xmdl009,xmdl033,xmdl011,xmdl012,xmdl050,xmdl094,xmdl095,xmdl017, 
                   xmdl018,xmdl019,xmdl020,xmdl010,xmdl013,xmdl014,xmdl015,xmdl016,xmdl052,xmdl021,xmdl022, 
                   xmdl023,xmdl041,xmdl030,xmdl031,xmdl032,xmdl058,xmdl057,xmdl051,xmdl088,xmdl048,xmdl049,xmdl024,xmdl025, 
                   xmdl026,xmdl027,xmdl028,xmdl029,xmdl042,xmdl043,xmdl044,xmdl045,xmdl046,xmdl087) = (g_xmdk_m.xmdkdocno, 
                   g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdlseq,g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002, 
                   g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,g_xmdl_d[l_ac].xmdl005,g_xmdl_d[l_ac].xmdl006, 
                   g_xmdl_d[l_ac].xmdl007,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,g_xmdl_d[l_ac].xmdl033, 
                   g_xmdl_d[l_ac].xmdl011,g_xmdl_d[l_ac].xmdl012,g_xmdl_d[l_ac].xmdl050,g_xmdl_d[l_ac].xmdl094, 
                   g_xmdl_d[l_ac].xmdl095,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,g_xmdl_d[l_ac].xmdl019, 
                   g_xmdl_d[l_ac].xmdl020,g_xmdl_d[l_ac].xmdl010,g_xmdl_d[l_ac].xmdl013,g_xmdl_d[l_ac].xmdl014, 
                   g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,g_xmdl_d[l_ac].xmdl052,g_xmdl_d[l_ac].xmdl021, 
                   g_xmdl_d[l_ac].xmdl022,g_xmdl_d[l_ac].xmdl023,g_xmdl_d[l_ac].xmdl041,g_xmdl_d[l_ac].xmdl030, 
                   g_xmdl_d[l_ac].xmdl031,g_xmdl_d[l_ac].xmdl032,g_xmdl_d[l_ac].xmdl058,g_xmdl_d[l_ac].xmdl057,
                   g_xmdl_d[l_ac].xmdl051,g_xmdl_d[l_ac].xmdl088, 
                   g_xmdl2_d[l_ac].xmdl048,g_xmdl2_d[l_ac].xmdl049,g_xmdl2_d[l_ac].xmdl024,g_xmdl2_d[l_ac].xmdl025, 
                   g_xmdl2_d[l_ac].xmdl026,g_xmdl2_d[l_ac].xmdl027,g_xmdl2_d[l_ac].xmdl028,g_xmdl2_d[l_ac].xmdl029, 
                   g_xmdl2_d[l_ac].xmdl042,g_xmdl2_d[l_ac].xmdl043,g_xmdl2_d[l_ac].xmdl044,g_xmdl2_d[l_ac].xmdl045, 
                   g_xmdl2_d[l_ac].xmdl046,g_xmdl2_d[l_ac].xmdl087)
                WHERE xmdlent = g_enterprise AND xmdldocno = g_xmdk_m.xmdkdocno 
 
                  AND xmdlseq = g_xmdl_d_t.xmdlseq #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
                                                                                                                                       
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmdl_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_xmdl_d[l_ac].* = g_xmdl_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmdl_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()                   
                     CALL s_transaction_end('N','0')
                     LET g_xmdl_d[l_ac].* = g_xmdl_d_t.*  
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmdk_m.xmdkdocno
               LET gs_keys_bak[1] = g_xmdkdocno_t
               LET gs_keys[2] = g_xmdl_d[g_detail_idx].xmdlseq
               LET gs_keys_bak[2] = g_xmdl_d_t.xmdlseq
               CALL axmt600_update_b('xmdl_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL axmt600_xmdl_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_xmdl_d[g_detail_idx].xmdlseq = g_xmdl_d_t.xmdlseq 
 
                  ) THEN
                  LET gs_keys[01] = g_xmdk_m.xmdkdocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_xmdl_d_t.xmdlseq
 
                  CALL axmt600_key_update_b(gs_keys,'xmdl_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_xmdk_m),util.JSON.stringify(g_xmdl_d_t)
               LET g_log2 = util.JSON.stringify(g_xmdk_m),util.JSON.stringify(g_xmdl_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               #新增多庫儲批
               CALL axmt540_01_xmdm_modify('6',l_xmdlseq_backup,g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,
                                           g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,g_xmdl_d[l_ac].xmdl011,g_xmdl_d[l_ac].xmdl012,
                                           g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,g_xmdl_d[l_ac].xmdl052,
                                           g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl020,
                                           '','') RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  LET g_xmdl_d[l_ac].* = g_xmdl_d_t.*
               END IF
               
               #重新計算整單的未稅、含稅總金額
               CALL axmt600_tax_recount(g_xmdk_m.xmdkdocno) RETURNING l_success                     
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  LET g_xmdl_d[l_ac].* = g_xmdl_d_t.*
               END IF

               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
 
            #end add-point
            CALL axmt600_unlock_b("xmdl_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"

            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
            
            CALL axmt600_b_fill()
            
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_xmdl_d[li_reproduce_target].* = g_xmdl_d[li_reproduce].*
               LET g_xmdl2_d[li_reproduce_target].* = g_xmdl2_d[li_reproduce].*
 
               LET g_xmdl_d[li_reproduce_target].xmdlseq = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_xmdl_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_xmdl_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      DISPLAY ARRAY g_xmdl2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL axmt600_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail2")
            LET g_detail_idx = l_ac
            
            #add-point:page2, before row動作 name="input.body2.before_row"

            #單身Action隱藏
            CALL axmt600_detail_action_hidden(l_ac)

            #FROMONLY顯示           
            CALL axmt600_xmdl_display()
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail2")
            CALL axmt600_idx_chk()
            LET g_current_page = 2
      
         #add-point:page2自定義行為 name="input.body2.action"

         #end add-point
      
      END DISPLAY
      DISPLAY ARRAY g_xmdl3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL axmt600_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail3")
            LET g_detail_idx = l_ac
            
            #add-point:page3, before row動作 name="input.body3.before_row"
                                                                                                            
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue(""))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail3")
            CALL axmt600_idx_chk()
            LET g_current_page = 3
      
         #add-point:page3自定義行為 name="input.body3.action"
            
            CALL axmt600_show()
            
         #end add-point
      
      END DISPLAY
 
 
 
{</section>}
 
{<section id="axmt600.input.other" >}
      
      #add-point:自定義input name="input.more_input"
                                                      
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
                                                                                 
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1','2',"))      
         CALL DIALOG.setCurrentRow("s_detail2",g_idx_group.getValue("'3',"))
         CALL DIALOG.setCurrentRow("s_detail3",g_idx_group.getValue(""))
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            
            #end add-point  
            NEXT FIELD xmdkdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xmdlsite
               WHEN "s_detail2"
                  NEXT FIELD xmdlseq_2
               WHEN "s_detail3"
                  NEXT FIELD xmdmsite
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
 
   #end add-point    
 
END FUNCTION
 
{</section>}
 
{<section id="axmt600.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION axmt600_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   DEFINE l_success LIKE type_t.num5
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   LET g_xmdk_m_o.* = g_xmdk_m.*      #保存單頭舊值                        
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL axmt600_b_fill() #單身填充
      CALL axmt600_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL axmt600_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
   CALL s_desc_get_invoice_type_desc1(g_site,g_xmdk_m.xmdk015) RETURNING g_xmdk_m.xmdk015_desc
   DISPLAY BY NAME g_xmdk_m.xmdk015_desc

   CALL s_desc_get_tax_desc1(g_site,g_xmdk_m.xmdk012) RETURNING g_xmdk_m.xmdk012_desc
   DISPLAY BY NAME g_xmdk_m.xmdk012_desc

   #end add-point
   
   #遮罩相關處理
   LET g_xmdk_m_mask_o.* =  g_xmdk_m.*
   CALL axmt600_xmdk_t_mask()
   LET g_xmdk_m_mask_n.* =  g_xmdk_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xmdk_m.xmdk000,g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocno_desc,g_xmdk_m.xmdkdocdt, 
       g_xmdk_m.xmdk001,g_xmdk_m.xmdk003,g_xmdk_m.xmdk003_desc,g_xmdk_m.xmdk004,g_xmdk_m.xmdk004_desc, 
       g_xmdk_m.xmdkstus,g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk007,g_xmdk_m.xmdk007_desc,g_xmdk_m.xmdk009, 
       g_xmdk_m.xmdk009_desc,g_xmdk_m.xmdk008,g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk202,g_xmdk_m.xmdk202_desc, 
       g_xmdk_m.xmdk045,g_xmdk_m.xmdk082,g_xmdk_m.xmdk030,g_xmdk_m.xmdk030_desc,g_xmdk_m.xmdk054,g_xmdk_m.xmdk010, 
       g_xmdk_m.xmdk010_desc,g_xmdk_m.xmdk011,g_xmdk_m.xmdk011_desc,g_xmdk_m.xmdk012,g_xmdk_m.xmdk012_desc, 
       g_xmdk_m.xmdk013,g_xmdk_m.xmdk014,g_xmdk_m.xmdk015,g_xmdk_m.xmdk015_desc,g_xmdk_m.xmdk016,g_xmdk_m.xmdk016_desc, 
       g_xmdk_m.xmdk017,g_xmdk_m.xmdk084,g_xmdk_m.xmdk018,g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdk041,g_xmdk_m.xmdk037, 
       g_xmdk_m.xmdk042,g_xmdk_m.xmdk043,g_xmdk_m.xmdk031,g_xmdk_m.xmdk031_desc,g_xmdk_m.xmdk033,g_xmdk_m.xmdk033_desc, 
       g_xmdk_m.xmdk085,g_xmdk_m.xmdk086,g_xmdk_m.xmdk087,g_xmdk_m.xmdk044,g_xmdk_m.xmdk035,g_xmdk_m.xmdk046, 
       g_xmdk_m.xmdk036,g_xmdk_m.xmdk083,g_xmdk_m.xmdkownid,g_xmdk_m.xmdkownid_desc,g_xmdk_m.xmdkowndp, 
       g_xmdk_m.xmdkowndp_desc,g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtid_desc,g_xmdk_m.xmdkcrtdp,g_xmdk_m.xmdkcrtdp_desc, 
       g_xmdk_m.xmdkcrtdt,g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmodid_desc,g_xmdk_m.xmdkmoddt,g_xmdk_m.xmdkcnfid, 
       g_xmdk_m.xmdkcnfid_desc,g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid,g_xmdk_m.xmdkpstid_desc,g_xmdk_m.xmdkpstdt 
 
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_xmdk_m.xmdkstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "UH"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unhold.png")
         WHEN "H"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/hold.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_xmdl_d.getLength()
      #add-point:show段單身reference name="show.body.reference"

#150123改至b_fill
#      CALL axmt600_xmdl050_ref()
#
#      #產品特徵
#      CALL s_feature_description(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,g_xmdl_d[l_ac].xmdl009_desc
#      DISPLAY BY NAME g_xmdl_d[l_ac].xmdl009_desc
#      
#      #150120新增"客戶訂單號碼"  earl(s)
#      SELECT xmda033 INTO g_xmdl_d[l_ac].xmda033
#        FROM xmda_t
#       WHERE xmdaent = g_enterprise
#         AND xmdadocno = g_xmdl_d[l_ac].xmdl003
#      #150120新增"客戶訂單號碼"  earl(e)
      
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_xmdl2_d.getLength()
      #add-point:show段單身reference name="show.body2.reference"

#150123改至b_fill
#      CALL s_desc_get_tax_desc1(g_site,g_xmdl2_d[l_ac].xmdl025) RETURNING g_xmdl2_d[l_ac].xmdl025_desc
#      DISPLAY BY NAME g_xmdl2_d[l_ac].xmdl025_desc
#      
#      CALL axmt600_xmdl_display()
      
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_xmdl3_d.getLength()
      #add-point:show段單身reference name="show.body3.reference"

#150123改至b_fill
#      #產品特徵
#      CALL s_feature_description(g_xmdl3_d[l_ac].xmdm001,g_xmdl3_d[l_ac].xmdm002) RETURNING l_success,g_xmdl3_d[l_ac].xmdm002_desc
#      DISPLAY BY NAME g_xmdl3_d[l_ac].xmdm002_desc

      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other name="show.other"
                            
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL axmt600_detail_show()
 
   #add-point:show段之後 name="show.after"
   IF g_xmdl_d.getLength() > 0 THEN
      IF cl_null(g_xmdl_d[g_xmdl_d.getLength()].xmdlseq) THEN
         CALL g_xmdl_d.deleteElement(g_xmdl_d.getLength())
      END IF
   END IF
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="axmt600.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION axmt600_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
                           
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
                           
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
                           
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="axmt600.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION axmt600_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   
   #end add-point   
   DEFINE l_newno     LIKE xmdk_t.xmdkdocno 
   DEFINE l_oldno     LIKE xmdk_t.xmdkdocno 
 
   DEFINE l_master    RECORD LIKE xmdk_t.*
   DEFINE l_detail    RECORD LIKE xmdl_t.*
   DEFINE l_detail2    RECORD LIKE xmdm_t.*
 
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   DEFINE l_success   LIKE type_t.num5
   DEFINE l_num       LIKE xmdl_t.xmdl018
   DEFINE l_xmdl001   LIKE xmdl_t.xmdl001
   DEFINE l_xmdl002   LIKE xmdl_t.xmdl002
   DEFINE l_xmdl018   LIKE xmdl_t.xmdl018 
   DEFINE l_xmdlseq   LIKE xmdl_t.xmdlseq
   DEFINE l_xmdm007   LIKE xmdm_t.xmdm007
  
   LET g_sql = "SELECT xmdlseq,xmdl001,xmdl002",
               "  FROM xmdl_t",
               " WHERE xmdlent = '",g_enterprise,"'",
               "   AND xmdldocno = '",g_xmdk_m.xmdkdocno,"'"
   PREPARE axmt600_repro FROM g_sql
   DECLARE axmt600_repro_cs CURSOR FOR axmt600_repro

   LET g_sql = "SELECT xmdm007",
               "  FROM xmdm_t",
               " WHERE xmdment = '",g_enterprise,"'",
               "   AND xmdmdocno = '",g_xmdk_m.xmdkdocno,"'",
               "   AND xmdmseq = ?"
   PREPARE axmt600_repro01 FROM g_sql
   DECLARE axmt600_repro_cs01 CURSOR FOR axmt600_repro01

   LET l_success = TRUE
   LET g_errno = ''
   FOREACH axmt600_repro_cs INTO l_xmdlseq,l_xmdl001,l_xmdl002
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'FOREACH'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET l_success = FALSE
         EXIT FOREACH
      END IF

      LET l_num = 0
      CALL s_axmt600_return_max('','',l_xmdl001,l_xmdl002)
      RETURNING l_num

      IF l_num < 0 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'adb-00210'  #數量不可大於可銷退量!
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET l_success = FALSE
         EXIT FOREACH
      END IF
      
      #批號數量檢查
      OPEN axmt600_repro_cs01 USING l_xmdlseq
      FOREACH axmt600_repro_cs01 INTO l_xmdm007
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 'FOREACH'
            LET g_errparam.popup = TRUE
            CALL cl_err()
     
            LET l_success = FALSE
            EXIT FOREACH
         END IF
         
         LET l_num = 0
         CALL s_axmt600_return_max1('','',l_xmdm007,l_xmdl001,l_xmdl002)
         RETURNING l_num
      
         IF l_num < 0 THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'adb-00210'  #數量不可大於可銷退量!
            LET g_errparam.extend = ''
            LET g_errparam.popup = TRUE
            CALL cl_err()
      
            LET l_success = FALSE
            EXIT FOREACH
         END IF         
         
      END FOREACH
      
      IF NOT l_success THEN
         EXIT FOREACH
      END IF

   END FOREACH

   FREE axmt600_repro
   CLOSE axmt600_repro_cs
   FREE axmt600_repro01
   CLOSE axmt600_repro_cs01

   IF l_success = FALSE THEN
      RETURN
   END IF
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_xmdk_m.xmdkdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_xmdkdocno_t = g_xmdk_m.xmdkdocno
 
    
   LET g_xmdk_m.xmdkdocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_xmdk_m.xmdkownid = g_user
      LET g_xmdk_m.xmdkowndp = g_dept
      LET g_xmdk_m.xmdkcrtid = g_user
      LET g_xmdk_m.xmdkcrtdp = g_dept 
      LET g_xmdk_m.xmdkcrtdt = cl_get_current()
      LET g_xmdk_m.xmdkmodid = g_user
      LET g_xmdk_m.xmdkmoddt = cl_get_current()
      LET g_xmdk_m.xmdkstus = 'N'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   
   LET g_xmdk_m.xmdkstus = 'N'
   LET g_xmdk_m.xmdkdocdt = g_today
   LET g_xmdk_m.xmdk001 = g_today
   LET g_xmdk_m.xmdk003 = g_user
   LET g_xmdk_m.xmdk004 = g_dept
   LET g_xmdk_m.xmdkpstid = ''
   LET g_xmdk_m.xmdkpstdt = ''
   LET g_xmdk_m.xmdkcnfid = ''
   LET g_xmdk_m.xmdkcnfdt = ''

   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_xmdk_m.xmdkstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "UH"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unhold.png")
         WHEN "H"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/hold.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
      LET g_xmdk_m.xmdkdocno_desc = ''
   DISPLAY BY NAME g_xmdk_m.xmdkdocno_desc
 
   
   CALL axmt600_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_xmdk_m.* TO NULL
      INITIALIZE g_xmdl_d TO NULL
      INITIALIZE g_xmdl2_d TO NULL
      INITIALIZE g_xmdl3_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      
      #end add-point
      CALL axmt600_show()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt600_set_act_visible()   
   CALL axmt600_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_xmdkdocno_t = g_xmdk_m.xmdkdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " xmdkent = '" ||g_enterprise|| "' AND",
                      " xmdkdocno = '", g_xmdk_m.xmdkdocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axmt600_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
                           
   #end add-point
   
   CALL axmt600_idx_chk()
   
   #功能已完成,通報訊息中心
   CALL axmt600_msgcentre_notify('reproduce')
 
END FUNCTION
 
{</section>}
 
{<section id="axmt600.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION axmt600_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE xmdl_t.*
   DEFINE l_detail2    RECORD LIKE xmdm_t.*
 
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
                           
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE axmt600_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
                           
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xmdl_t
    WHERE xmdlent = g_enterprise AND xmdldocno = g_xmdkdocno_t
 
    INTO TEMP axmt600_detail
 
   #將key修正為調整後   
   UPDATE axmt600_detail 
      #更新key欄位
      SET xmdldocno = g_xmdk_m.xmdkdocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
          ,xmdl038 = 0
          ,xmdl039 = 0
          ,xmdl040 = 0
          ,xmdl047 = 0
          ,xmdl053 = 0
          ,xmdl054 = 0
          ,xmdl055 = 0
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO xmdl_t SELECT * FROM axmt600_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
                           
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmt600_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
                           
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table2.b_insert"
                           
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xmdm_t 
    WHERE xmdment = g_enterprise AND xmdmdocno = g_xmdkdocno_t
 
    INTO TEMP axmt600_detail
 
   #將key修正為調整後   
   UPDATE axmt600_detail SET xmdmdocno = g_xmdk_m.xmdkdocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table2.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO xmdm_t SELECT * FROM axmt600_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table2.m_insert"
                           
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmt600_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table2.a_insert"
                           
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_xmdkdocno_t = g_xmdk_m.xmdkdocno
 
   
END FUNCTION
 
{</section>}
 
{<section id="axmt600.delete" >}
#+ 資料刪除
PRIVATE FUNCTION axmt600_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   DEFINE  l_success       LIKE type_t.num5
   DEFINE  l_xmdl001       LIKE xmdl_t.xmdl001
   DEFINE  l_xmdl002       LIKE xmdl_t.xmdl001
   DEFINE  l_sql           STRING
   DEFINE  l_inbadocno     LIKE inba_t.inbadocno
   #150310-00003#19 add by lixh 20160215
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_xmdl018       LIKE xmdl_t.xmdl018
   DEFINE l_xmdl094       LIKE xmdl_t.xmdl094
   DEFINE l_xmdl095       LIKE xmdl_t.xmdl095
   #150310-00003#19 add by lixh 20160215   
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_xmdk_m.xmdkdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN axmt600_cl USING g_enterprise,g_xmdk_m.xmdkdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axmt600_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE axmt600_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axmt600_master_referesh USING g_xmdk_m.xmdkdocno INTO g_xmdk_m.xmdk000,g_xmdk_m.xmdksite, 
       g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001,g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdkstus, 
       g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk007,g_xmdk_m.xmdk009,g_xmdk_m.xmdk008,g_xmdk_m.xmdk202, 
       g_xmdk_m.xmdk045,g_xmdk_m.xmdk082,g_xmdk_m.xmdk030,g_xmdk_m.xmdk054,g_xmdk_m.xmdk010,g_xmdk_m.xmdk011, 
       g_xmdk_m.xmdk012,g_xmdk_m.xmdk013,g_xmdk_m.xmdk014,g_xmdk_m.xmdk015,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017, 
       g_xmdk_m.xmdk084,g_xmdk_m.xmdk018,g_xmdk_m.xmdk041,g_xmdk_m.xmdk037,g_xmdk_m.xmdk042,g_xmdk_m.xmdk043, 
       g_xmdk_m.xmdk031,g_xmdk_m.xmdk033,g_xmdk_m.xmdk085,g_xmdk_m.xmdk086,g_xmdk_m.xmdk087,g_xmdk_m.xmdk044, 
       g_xmdk_m.xmdk035,g_xmdk_m.xmdk046,g_xmdk_m.xmdk036,g_xmdk_m.xmdk083,g_xmdk_m.xmdkownid,g_xmdk_m.xmdkowndp, 
       g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtdp,g_xmdk_m.xmdkcrtdt,g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmoddt, 
       g_xmdk_m.xmdkcnfid,g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid,g_xmdk_m.xmdkpstdt,g_xmdk_m.xmdk003_desc, 
       g_xmdk_m.xmdk004_desc,g_xmdk_m.xmdk007_desc,g_xmdk_m.xmdk009_desc,g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk202_desc, 
       g_xmdk_m.xmdk030_desc,g_xmdk_m.xmdk010_desc,g_xmdk_m.xmdk011_desc,g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdkownid_desc, 
       g_xmdk_m.xmdkowndp_desc,g_xmdk_m.xmdkcrtid_desc,g_xmdk_m.xmdkcrtdp_desc,g_xmdk_m.xmdkmodid_desc, 
       g_xmdk_m.xmdkcnfid_desc,g_xmdk_m.xmdkpstid_desc
   
   
   #檢查是否允許此動作
   IF NOT axmt600_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_xmdk_m_mask_o.* =  g_xmdk_m.*
   CALL axmt600_xmdk_t_mask()
   LET g_xmdk_m_mask_n.* =  g_xmdk_m.*
   
   CALL axmt600_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   #add by lixiang 150821-00016#1--start---
   #判斷資料來源為"EC"時，單頭不可刪除
   IF g_xmdk_m.xmdk046 = '2' THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = g_xmdk_m.xmdkdocno
      LET g_errparam.code   = 'axm-00712' 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE axmt600_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   #add by lixiang 150821-00016#1--end---
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
                                                      
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:3)
      #刪除相關文件
      CALL axmt600_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_xmdkdocno_t = g_xmdk_m.xmdkdocno
 
 
      DELETE FROM xmdk_t
       WHERE xmdkent = g_enterprise AND xmdkdocno = g_xmdk_m.xmdkdocno
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
                                                      
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_xmdk_m.xmdkdocno,":",SQLERRMESSAGE  
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"

      IF NOT s_aooi200_del_docno(g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF

      #刪除稅額xrcd
      CALL s_axmt540_tax_delete(g_xmdk_m.xmdkdocno,'','1') RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF

      #刪除備註
      CALL s_aooi360_del('6',g_prog,g_xmdk_m.xmdkdocno,'','','','','','','','','4') RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF

      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      #150821-xianghui-b
      CALL s_axmt540_update_inao(g_xmdk_m.xmdkdocno,'','','','','0','3') RETURNING l_success
      DELETE FROM inao_t
         WHERE inaoent = g_enterprise AND inaosite = g_site AND inaodocno = g_xmdk_m.xmdkdocno
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "inao_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()
 
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
      CALL s_lot_clear_detail()
      #150821-xianghui-e           

      #150310-00003#19 add by lixh 20160215
      IF g_xmdk_m.xmdk085 = '3' THEN
         #回寫已轉數量
         LET l_sql = " SELECT xmdl018,xmdl094,xmdl095 FROM xmdl_t ",
                     "  WHERE xmdlent = '",g_enterprise,"' ",
                     "    AND xmdldocno = '",g_xmdk_m.xmdkdocno,"'"
                     
         PREPARE s_axmt600_gene_pre FROM l_sql
         DECLARE s_axmt600_gene_cur CURSOR FOR s_axmt600_gene_pre
         LET r_success = TRUE
         FOREACH s_axmt600_gene_cur INTO l_xmdl018,l_xmdl094,l_xmdl095
            UPDATE rmcb_t SET rmcb010 = rmcb010 - l_xmdl018
             WHERE rmcbent = g_enterprise
               AND rmcbsite = g_site
               AND rmcbdocno = l_xmdl094  #來源單號   
               AND rmcbseq = l_xmdl095
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "UPDATE:"
               LET g_errparam.popup = TRUE
               CALL cl_err()     
               LET r_success = FALSE
               EXIT FOREACH
            END IF          
         END FOREACH
         IF NOT r_success THEN
            CALL s_transaction_end('N','0')
            RETURN
         END IF   
      END IF      
      #150310-00003#19 add by lixh 20160215 
      #end add-point
      
      DELETE FROM xmdl_t
       WHERE xmdlent = g_enterprise AND xmdldocno = g_xmdk_m.xmdkdocno
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
                                                      
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdl_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
                                                      
      #end add-point
      
            
                                                               
      #add-point:單身刪除前 name="delete.body.b_delete2"
                                                      
      #end add-point
      DELETE FROM xmdm_t
       WHERE xmdment = g_enterprise AND
             xmdmdocno = g_xmdk_m.xmdkdocno
      #add-point:單身刪除中 name="delete.body.m_delete2"
                                                      
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdl_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete2"
      #2015/07/23 by stellar add ----- (S)
      #若資料來源=2:銷售合約差異處理或4:銷售折扣合約結算，則更新xmde_t的該筆資料未處理
      IF g_xmdk_m.xmdk085 = '2' OR g_xmdk_m.xmdk085 = '4' THEN
         UPDATE xmde_t SET xmde025 = '1',
                           xmde027 = NULL,
                           xmde028 = NULL
          WHERE xmdeent = g_enterprise
            AND xmde027 = g_xmdk_m.xmdkdocno
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmde_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = FALSE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
            RETURN
         END IF
      END IF
      #2015/07/23 by stellar add ----- (E)
     
      #150310-00003#19 add by lixh 20160128
      SELECT inbadocno INTO l_inbadocno FROM inba_t
       WHERE inbaent = g_enterprise
         AND inba001 = '1'
         AND inba005 = '10'
         AND inba006 = g_xmdk_m.xmdkdocno
      DELETE FROM inba_t WHERE inbaent = g_enterprise AND inbadocno = l_inbadocno
      DELETE FROM inbb_t WHERE inbbent = g_enterprise AND inbbdocno = l_inbadocno
      DELETE FROM inbc_t WHERE inbcent = g_enterprise AND inbcdocno = l_inbadocno
      DELETE FROM inao_t WHERE inaoent = g_enterprise AND inaodocno = l_inbadocno  
      #150310-00003#19 add by lixh 20160128
      
      #end add-point
 
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE axmt600_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_xmdl_d.clear() 
      CALL g_xmdl2_d.clear()       
      CALL g_xmdl3_d.clear()       
 
     
      CALL axmt600_ui_browser_refresh()  
      #CALL axmt600_ui_headershow()  
      #CALL axmt600_ui_detailshow()
      
      IF g_browser_cnt > 0 THEN 
         #CALL axmt600_browser_fill("")
         CALL axmt600_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
 
 
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE axmt600_cl
 
   #功能已完成,通報訊息中心
   CALL axmt600_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="axmt600.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION axmt600_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"

   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   DEFINE l_success  LIKE type_t.num5
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"

   #end add-point
   
   #清空第一階單身
   CALL g_xmdl_d.clear()
   CALL g_xmdl2_d.clear()
   CALL g_xmdl3_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
 
   #end add-point
   
   #判斷是否填充
   IF axmt600_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN  #160512-00004#2-add-'xmdl058,xmdl057'
         LET g_sql = "SELECT  DISTINCT xmdlsite,xmdlseq,xmdl001,xmdl002,xmdl003,xmdl004,xmdl005,xmdl006, 
             xmdl007,xmdl008,xmdl009,xmdl033,xmdl011,xmdl012,xmdl050,xmdl094,xmdl095,xmdl017,xmdl018, 
             xmdl019,xmdl020,xmdl010,xmdl013,xmdl014,xmdl015,xmdl016,xmdl052,xmdl021,xmdl022,xmdl023, 
             xmdl041,xmdl030,xmdl031,xmdl032,xmdl058,xmdl057,xmdl051,xmdl088,xmdlseq,xmdl048,xmdl049,xmdl024,xmdl025, 
             xmdl026,xmdl027,xmdl028,xmdl029,xmdl042,xmdl043,xmdl044,xmdl045,xmdl046,xmdl087 ,t1.imaal003 , 
             t2.imaal004 ,t3.oocql004 ,t4.oocal003 ,t5.oocal003 ,t6.inayl003 ,t7.inab003 ,t8.oocal003 , 
             t9.pjbal003 ,t10.pjbbl004 ,t11.pjbml004 FROM xmdl_t",   
                     " INNER JOIN xmdk_t ON xmdkent = '" ||g_enterprise|| "' AND xmdkdocno = xmdldocno ",
 
                     #"",
                     
                     "",
                                    " LEFT JOIN imaal_t t1 ON t1.imaalent='"||g_enterprise||"' AND t1.imaal001=xmdl008 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t2 ON t2.imaalent='"||g_enterprise||"' AND t2.imaal001=xmdl008 AND t2.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t3 ON t3.oocqlent='"||g_enterprise||"' AND t3.oocql001='221' AND t3.oocql002=xmdl011 AND t3.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t4 ON t4.oocalent='"||g_enterprise||"' AND t4.oocal001=xmdl017 AND t4.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t5 ON t5.oocalent='"||g_enterprise||"' AND t5.oocal001=xmdl019 AND t5.oocal002='"||g_dlang||"' ",
               " LEFT JOIN inayl_t t6 ON t6.inaylent='"||g_enterprise||"' AND t6.inayl001=xmdl014 AND t6.inayl002='"||g_dlang||"' ",
               " LEFT JOIN inab_t t7 ON t7.inabent='"||g_enterprise||"' AND t7.inabsite=xmdlsite AND t7.inab001=xmdl014 AND t7.inab002=xmdl015  ",
               " LEFT JOIN oocal_t t8 ON t8.oocalent='"||g_enterprise||"' AND t8.oocal001=xmdl021 AND t8.oocal002='"||g_dlang||"' ",
               " LEFT JOIN pjbal_t t9 ON t9.pjbalent='"||g_enterprise||"' AND t9.pjbal001=xmdl030 AND t9.pjbal002='"||g_dlang||"' ",
               " LEFT JOIN pjbbl_t t10 ON t10.pjbblent='"||g_enterprise||"' AND t10.pjbbl001=xmdl030 AND t10.pjbbl002=xmdl031 AND t10.pjbbl003='"||g_dlang||"' ",
               " LEFT JOIN pjbml_t t11 ON t11.pjbmlent='"||g_enterprise||"' AND t11.pjbml001=xmdl030 AND t11.pjbml002=xmdl032 AND t11.pjbml003='"||g_dlang||"' ",
 
                     " WHERE xmdlent=? AND xmdldocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
                                                      
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xmdl_t.xmdlseq"
         
         #add-point:單身填充控制 name="b_fill.sql"
                                                      
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axmt600_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR axmt600_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_xmdk_m.xmdkdocno
      #160512-00004#2-add-'xmdl058,xmdl057' 欄位                                         
      FOREACH b_fill_cs INTO g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdlseq,g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002, 
          g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,g_xmdl_d[l_ac].xmdl005,g_xmdl_d[l_ac].xmdl006, 
          g_xmdl_d[l_ac].xmdl007,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,g_xmdl_d[l_ac].xmdl033, 
          g_xmdl_d[l_ac].xmdl011,g_xmdl_d[l_ac].xmdl012,g_xmdl_d[l_ac].xmdl050,g_xmdl_d[l_ac].xmdl094, 
          g_xmdl_d[l_ac].xmdl095,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,g_xmdl_d[l_ac].xmdl019, 
          g_xmdl_d[l_ac].xmdl020,g_xmdl_d[l_ac].xmdl010,g_xmdl_d[l_ac].xmdl013,g_xmdl_d[l_ac].xmdl014, 
          g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,g_xmdl_d[l_ac].xmdl052,g_xmdl_d[l_ac].xmdl021, 
          g_xmdl_d[l_ac].xmdl022,g_xmdl_d[l_ac].xmdl023,g_xmdl_d[l_ac].xmdl041,g_xmdl_d[l_ac].xmdl030, 
          g_xmdl_d[l_ac].xmdl031,g_xmdl_d[l_ac].xmdl032,g_xmdl_d[l_ac].xmdl058,g_xmdl_d[l_ac].xmdl057,
          g_xmdl_d[l_ac].xmdl051,g_xmdl_d[l_ac].xmdl088, 
          g_xmdl2_d[l_ac].xmdlseq,g_xmdl2_d[l_ac].xmdl048,g_xmdl2_d[l_ac].xmdl049,g_xmdl2_d[l_ac].xmdl024, 
          g_xmdl2_d[l_ac].xmdl025,g_xmdl2_d[l_ac].xmdl026,g_xmdl2_d[l_ac].xmdl027,g_xmdl2_d[l_ac].xmdl028, 
          g_xmdl2_d[l_ac].xmdl029,g_xmdl2_d[l_ac].xmdl042,g_xmdl2_d[l_ac].xmdl043,g_xmdl2_d[l_ac].xmdl044, 
          g_xmdl2_d[l_ac].xmdl045,g_xmdl2_d[l_ac].xmdl046,g_xmdl2_d[l_ac].xmdl087,g_xmdl_d[l_ac].xmdl008_desc, 
          g_xmdl_d[l_ac].xmdl008_desc_desc,g_xmdl_d[l_ac].xmdl011_desc,g_xmdl_d[l_ac].xmdl017_desc,g_xmdl_d[l_ac].xmdl019_desc, 
          g_xmdl_d[l_ac].xmdl014_desc,g_xmdl_d[l_ac].xmdl015_desc,g_xmdl_d[l_ac].xmdl021_desc,g_xmdl_d[l_ac].xmdl030_desc, 
          g_xmdl_d[l_ac].xmdl031_desc,g_xmdl_d[l_ac].xmdl032_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         
         CALL axmt600_xmdl050_ref()

         #產品特徵
         CALL s_feature_description(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,g_xmdl_d[l_ac].xmdl009_desc
      
         #150120新增"客戶訂單號碼"  earl(s)
         SELECT xmda033 INTO g_xmdl_d[l_ac].xmda033
           FROM xmda_t
          WHERE xmdaent = g_enterprise
            AND xmdadocno = g_xmdl_d[l_ac].xmdl003
         #150120新增"客戶訂單號碼"  earl(e)
         
         CALL s_desc_get_tax_desc1(g_site,g_xmdl2_d[l_ac].xmdl025) RETURNING g_xmdl2_d[l_ac].xmdl025_desc
         
         #add by lixiang 2015/06/18--s--
         CALL s_desc_get_project_desc(g_xmdl_d[l_ac].xmdl030) RETURNING g_xmdl_d[l_ac].xmdl030_desc
         DISPLAY BY NAME g_xmdl_d[l_ac].xmdl030_desc

         CALL s_desc_get_wbs_desc(g_xmdl_d[l_ac].xmdl030,g_xmdl_d[l_ac].xmdl031) RETURNING g_xmdl_d[l_ac].xmdl031_desc
         DISPLAY BY NAME g_xmdl_d[l_ac].xmdl031_desc

         CALL s_desc_get_activity_desc(g_xmdl_d[l_ac].xmdl030,g_xmdl_d[l_ac].xmdl032) RETURNING g_xmdl_d[l_ac].xmdl032_desc
         DISPLAY BY NAME g_xmdl_d[l_ac].xmdl032_desc
         #add by lixiang 2015/06/18--e--
         SELECT pmao009,pmao010
           INTO g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
           FROM pmao_t
          WHERE pmaoent = g_enterprise
            AND pmao001 = g_xmdk_m.xmdk007
            AND pmao002 = g_xmdl_d[l_ac].xmdl008
            AND pmao003 = g_xmdl_d[l_ac].xmdl009
            AND pmao004 = g_xmdl_d[l_ac].xmdl033                     
         CALL axmt600_xmdl_display()                                                                        
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
   #判斷是否填充
   IF axmt600_fill_chk(2) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  DISTINCT xmdmsite,xmdmseq,xmdmseq1,xmdm001,xmdm002,xmdm003,xmdm004,xmdm005, 
             xmdm006,xmdm007,xmdm033,xmdm008,xmdm009,xmdm010,xmdm011 ,t12.imaal003 ,t13.imaal004 ,t14.inayl003 , 
             t15.inab003 ,t16.oocal003 ,t17.oocal003 FROM xmdm_t",   
                     " INNER JOIN  xmdk_t ON xmdkent = '" ||g_enterprise|| "' AND xmdkdocno = xmdmdocno ",
 
                     "",
                     
                                    " LEFT JOIN imaal_t t12 ON t12.imaalent='"||g_enterprise||"' AND t12.imaal001=xmdm001 AND t12.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t13 ON t13.imaalent='"||g_enterprise||"' AND t13.imaal001=xmdm001 AND t13.imaal002='"||g_dlang||"' ",
               " LEFT JOIN inayl_t t14 ON t14.inaylent='"||g_enterprise||"' AND t14.inayl001=xmdm005 AND t14.inayl002='"||g_dlang||"' ",
               " LEFT JOIN inab_t t15 ON t15.inabent='"||g_enterprise||"' AND t15.inabsite=xmdmsite AND t15.inab001=xmdm005 AND t15.inab002=xmdm006  ",
               " LEFT JOIN oocal_t t16 ON t16.oocalent='"||g_enterprise||"' AND t16.oocal001=xmdm008 AND t16.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t17 ON t17.oocalent='"||g_enterprise||"' AND t17.oocal001=xmdm010 AND t17.oocal002='"||g_dlang||"' ",
 
                     " WHERE xmdment=? AND xmdmdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body2.fill_sql"
                                                      
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xmdm_t.xmdmseq,xmdm_t.xmdmseq1"
         
         #add-point:單身填充控制 name="b_fill.sql2"
                                                      
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axmt600_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR axmt600_pb2
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_xmdk_m.xmdkdocno
                                               
      FOREACH b_fill_cs2 INTO g_xmdl3_d[l_ac].xmdmsite,g_xmdl3_d[l_ac].xmdmseq,g_xmdl3_d[l_ac].xmdmseq1, 
          g_xmdl3_d[l_ac].xmdm001,g_xmdl3_d[l_ac].xmdm002,g_xmdl3_d[l_ac].xmdm003,g_xmdl3_d[l_ac].xmdm004, 
          g_xmdl3_d[l_ac].xmdm005,g_xmdl3_d[l_ac].xmdm006,g_xmdl3_d[l_ac].xmdm007,g_xmdl3_d[l_ac].xmdm033, 
          g_xmdl3_d[l_ac].xmdm008,g_xmdl3_d[l_ac].xmdm009,g_xmdl3_d[l_ac].xmdm010,g_xmdl3_d[l_ac].xmdm011, 
          g_xmdl3_d[l_ac].xmdm001_desc,g_xmdl3_d[l_ac].xmdm001_desc_desc,g_xmdl3_d[l_ac].xmdm005_desc, 
          g_xmdl3_d[l_ac].xmdm006_desc,g_xmdl3_d[l_ac].xmdm008_desc,g_xmdl3_d[l_ac].xmdm010_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill2.fill"

         #產品特徵
         CALL s_feature_description(g_xmdl3_d[l_ac].xmdm001,g_xmdl3_d[l_ac].xmdm002) RETURNING l_success,g_xmdl3_d[l_ac].xmdm002_desc
         
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   IF NOT cl_null(g_xmdk_m.xmdkdocno) THEN
      CALL s_lot_b_fill('1',g_site,'2',g_xmdk_m.xmdkdocno,'','','1')
   END IF
   #end add-point
   
   CALL g_xmdl_d.deleteElement(g_xmdl_d.getLength())
   CALL g_xmdl2_d.deleteElement(g_xmdl2_d.getLength())
   CALL g_xmdl3_d.deleteElement(g_xmdl3_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE axmt600_pb
   FREE axmt600_pb2
 
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_xmdl_d.getLength()
      LET g_xmdl_d_mask_o[l_ac].* =  g_xmdl_d[l_ac].*
      CALL axmt600_xmdl_t_mask()
      LET g_xmdl_d_mask_n[l_ac].* =  g_xmdl_d[l_ac].*
   END FOR
   
   LET g_xmdl2_d_mask_o.* =  g_xmdl2_d.*
   FOR l_ac = 1 TO g_xmdl2_d.getLength()
      LET g_xmdl2_d_mask_o[l_ac].* =  g_xmdl2_d[l_ac].*
      CALL axmt600_xmdl_t_mask()
      LET g_xmdl2_d_mask_n[l_ac].* =  g_xmdl2_d[l_ac].*
   END FOR
   LET g_xmdl3_d_mask_o.* =  g_xmdl3_d.*
   FOR l_ac = 1 TO g_xmdl3_d.getLength()
      LET g_xmdl3_d_mask_o[l_ac].* =  g_xmdl3_d[l_ac].*
      CALL axmt600_xmdm_t_mask()
      LET g_xmdl3_d_mask_n[l_ac].* =  g_xmdl3_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
 
{</section>}
 
{<section id="axmt600.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION axmt600_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
                           
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
                                                      
      #end add-point    
      DELETE FROM xmdl_t
       WHERE xmdlent = g_enterprise AND
         xmdldocno = ps_keys_bak[1] AND xmdlseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
                                                      
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_xmdl_d.deleteElement(li_idx) 
      END IF 
      IF ps_page <> "'2'" THEN 
         CALL g_xmdl2_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete2"
                                                      
      #end add-point    
      DELETE FROM xmdm_t
       WHERE xmdment = g_enterprise AND
             xmdmdocno = ps_keys_bak[1] AND xmdmseq = ps_keys_bak[2] AND xmdmseq1 = ps_keys_bak[3]
      #add-point:delete_b段刪除中 name="delete_b.m_delete2"
                                                      
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdm_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_xmdl3_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete2"
                                                      
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other name="delete_b.other"
                           
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="axmt600.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION axmt600_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"

   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
                           
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"

   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
                                                      
      #end add-point 
      INSERT INTO xmdl_t
                  (xmdlent,
                   xmdldocno,
                   xmdlseq
                   ,xmdlsite,xmdl001,xmdl002,xmdl003,xmdl004,xmdl005,xmdl006,xmdl007,xmdl008,xmdl009,xmdl033,xmdl011,xmdl012,xmdl050,xmdl094,xmdl095,xmdl017,xmdl018,xmdl019,xmdl020,xmdl010,xmdl013,xmdl014,xmdl015,xmdl016,xmdl052,xmdl021,xmdl022,xmdl023,xmdl041,xmdl030,xmdl031,xmdl032,
                   xmdl058,xmdl057,  #160512-00004#2-add
                   xmdl051,xmdl088,xmdl048,xmdl049,xmdl024,xmdl025,xmdl026,xmdl027,xmdl028,xmdl029,xmdl042,xmdl043,xmdl044,xmdl045,xmdl046,xmdl087) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_xmdl_d[g_detail_idx].xmdlsite,g_xmdl_d[g_detail_idx].xmdl001,g_xmdl_d[g_detail_idx].xmdl002, 
                       g_xmdl_d[g_detail_idx].xmdl003,g_xmdl_d[g_detail_idx].xmdl004,g_xmdl_d[g_detail_idx].xmdl005, 
                       g_xmdl_d[g_detail_idx].xmdl006,g_xmdl_d[g_detail_idx].xmdl007,g_xmdl_d[g_detail_idx].xmdl008, 
                       g_xmdl_d[g_detail_idx].xmdl009,g_xmdl_d[g_detail_idx].xmdl033,g_xmdl_d[g_detail_idx].xmdl011, 
                       g_xmdl_d[g_detail_idx].xmdl012,g_xmdl_d[g_detail_idx].xmdl050,g_xmdl_d[g_detail_idx].xmdl094, 
                       g_xmdl_d[g_detail_idx].xmdl095,g_xmdl_d[g_detail_idx].xmdl017,g_xmdl_d[g_detail_idx].xmdl018, 
                       g_xmdl_d[g_detail_idx].xmdl019,g_xmdl_d[g_detail_idx].xmdl020,g_xmdl_d[g_detail_idx].xmdl010, 
                       g_xmdl_d[g_detail_idx].xmdl013,g_xmdl_d[g_detail_idx].xmdl014,g_xmdl_d[g_detail_idx].xmdl015, 
                       g_xmdl_d[g_detail_idx].xmdl016,g_xmdl_d[g_detail_idx].xmdl052,g_xmdl_d[g_detail_idx].xmdl021, 
                       g_xmdl_d[g_detail_idx].xmdl022,g_xmdl_d[g_detail_idx].xmdl023,g_xmdl_d[g_detail_idx].xmdl041, 
                       g_xmdl_d[g_detail_idx].xmdl030,g_xmdl_d[g_detail_idx].xmdl031,g_xmdl_d[g_detail_idx].xmdl032, 
                       g_xmdl_d[g_detail_idx].xmdl058,g_xmdl_d[g_detail_idx].xmdl057,  #160512-00004#2-add
                       g_xmdl_d[g_detail_idx].xmdl051,g_xmdl_d[g_detail_idx].xmdl088,g_xmdl2_d[g_detail_idx].xmdl048, 
                       g_xmdl2_d[g_detail_idx].xmdl049,g_xmdl2_d[g_detail_idx].xmdl024,g_xmdl2_d[g_detail_idx].xmdl025, 
                       g_xmdl2_d[g_detail_idx].xmdl026,g_xmdl2_d[g_detail_idx].xmdl027,g_xmdl2_d[g_detail_idx].xmdl028, 
                       g_xmdl2_d[g_detail_idx].xmdl029,g_xmdl2_d[g_detail_idx].xmdl042,g_xmdl2_d[g_detail_idx].xmdl043, 
                       g_xmdl2_d[g_detail_idx].xmdl044,g_xmdl2_d[g_detail_idx].xmdl045,g_xmdl2_d[g_detail_idx].xmdl046, 
                       g_xmdl2_d[g_detail_idx].xmdl087)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
                                                      
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdl_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_xmdl_d.insertElement(li_idx) 
      END IF 
      IF ps_page <> "'2'" THEN 
         CALL g_xmdl2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
                                                      
      #end add-point 
   END IF
   
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert2"
                                                      
      #end add-point 
      INSERT INTO xmdm_t
                  (xmdment,
                   xmdmdocno,
                   xmdmseq,xmdmseq1
                   ,xmdmsite,xmdm001,xmdm002,xmdm003,xmdm004,xmdm005,xmdm006,xmdm007,xmdm033,xmdm008,xmdm009,xmdm010,xmdm011) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_xmdl3_d[g_detail_idx].xmdmsite,g_xmdl3_d[g_detail_idx].xmdm001,g_xmdl3_d[g_detail_idx].xmdm002, 
                       g_xmdl3_d[g_detail_idx].xmdm003,g_xmdl3_d[g_detail_idx].xmdm004,g_xmdl3_d[g_detail_idx].xmdm005, 
                       g_xmdl3_d[g_detail_idx].xmdm006,g_xmdl3_d[g_detail_idx].xmdm007,g_xmdl3_d[g_detail_idx].xmdm033, 
                       g_xmdl3_d[g_detail_idx].xmdm008,g_xmdl3_d[g_detail_idx].xmdm009,g_xmdl3_d[g_detail_idx].xmdm010, 
                       g_xmdl3_d[g_detail_idx].xmdm011)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert2"
                                                      
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdm_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_xmdl3_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert2"
                                                      
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other name="insert_b.other"
                           
   #end add-point     
   
END FUNCTION
 
{</section>}
 
{<section id="axmt600.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION axmt600_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"

   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
                           
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"

   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmdl_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
                                                      
      #end add-point 
      
      #將遮罩欄位還原
      CALL axmt600_xmdl_t_mask_restore('restore_mask_o')
               
      UPDATE xmdl_t 
         SET (xmdldocno,
              xmdlseq
              ,xmdlsite,xmdl001,xmdl002,xmdl003,xmdl004,xmdl005,xmdl006,xmdl007,xmdl008,xmdl009,xmdl033,xmdl011,xmdl012,xmdl050,xmdl094,xmdl095,xmdl017,xmdl018,xmdl019,xmdl020,xmdl010,xmdl013,xmdl014,xmdl015,xmdl016,xmdl052,xmdl021,xmdl022,xmdl023,xmdl041,xmdl030,xmdl031,xmdl032,
              xmdl058,xmdl057, #160512-00004#2-add
              xmdl051,xmdl088,xmdl048,xmdl049,xmdl024,xmdl025,xmdl026,xmdl027,xmdl028,xmdl029,xmdl042,xmdl043,xmdl044,xmdl045,xmdl046,xmdl087) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_xmdl_d[g_detail_idx].xmdlsite,g_xmdl_d[g_detail_idx].xmdl001,g_xmdl_d[g_detail_idx].xmdl002, 
                  g_xmdl_d[g_detail_idx].xmdl003,g_xmdl_d[g_detail_idx].xmdl004,g_xmdl_d[g_detail_idx].xmdl005, 
                  g_xmdl_d[g_detail_idx].xmdl006,g_xmdl_d[g_detail_idx].xmdl007,g_xmdl_d[g_detail_idx].xmdl008, 
                  g_xmdl_d[g_detail_idx].xmdl009,g_xmdl_d[g_detail_idx].xmdl033,g_xmdl_d[g_detail_idx].xmdl011, 
                  g_xmdl_d[g_detail_idx].xmdl012,g_xmdl_d[g_detail_idx].xmdl050,g_xmdl_d[g_detail_idx].xmdl094, 
                  g_xmdl_d[g_detail_idx].xmdl095,g_xmdl_d[g_detail_idx].xmdl017,g_xmdl_d[g_detail_idx].xmdl018, 
                  g_xmdl_d[g_detail_idx].xmdl019,g_xmdl_d[g_detail_idx].xmdl020,g_xmdl_d[g_detail_idx].xmdl010, 
                  g_xmdl_d[g_detail_idx].xmdl013,g_xmdl_d[g_detail_idx].xmdl014,g_xmdl_d[g_detail_idx].xmdl015, 
                  g_xmdl_d[g_detail_idx].xmdl016,g_xmdl_d[g_detail_idx].xmdl052,g_xmdl_d[g_detail_idx].xmdl021, 
                  g_xmdl_d[g_detail_idx].xmdl022,g_xmdl_d[g_detail_idx].xmdl023,g_xmdl_d[g_detail_idx].xmdl041, 
                  g_xmdl_d[g_detail_idx].xmdl030,g_xmdl_d[g_detail_idx].xmdl031,g_xmdl_d[g_detail_idx].xmdl032,
                  g_xmdl_d[g_detail_idx].xmdl058,g_xmdl_d[g_detail_idx].xmdl057, #160512-00004#2-add                  
                  g_xmdl_d[g_detail_idx].xmdl051,g_xmdl_d[g_detail_idx].xmdl088,g_xmdl2_d[g_detail_idx].xmdl048, 
                  g_xmdl2_d[g_detail_idx].xmdl049,g_xmdl2_d[g_detail_idx].xmdl024,g_xmdl2_d[g_detail_idx].xmdl025, 
                  g_xmdl2_d[g_detail_idx].xmdl026,g_xmdl2_d[g_detail_idx].xmdl027,g_xmdl2_d[g_detail_idx].xmdl028, 
                  g_xmdl2_d[g_detail_idx].xmdl029,g_xmdl2_d[g_detail_idx].xmdl042,g_xmdl2_d[g_detail_idx].xmdl043, 
                  g_xmdl2_d[g_detail_idx].xmdl044,g_xmdl2_d[g_detail_idx].xmdl045,g_xmdl2_d[g_detail_idx].xmdl046, 
                  g_xmdl2_d[g_detail_idx].xmdl087) 
         WHERE xmdlent = g_enterprise AND xmdldocno = ps_keys_bak[1] AND xmdlseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update"
                                                      
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmdl_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmdl_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL axmt600_xmdl_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
                                                      
      #end add-point  
   END IF
   
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmdm_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update2"
                                                      
      #end add-point  
      
      #將遮罩欄位還原
      CALL axmt600_xmdm_t_mask_restore('restore_mask_o')
               
      UPDATE xmdm_t 
         SET (xmdmdocno,
              xmdmseq,xmdmseq1
              ,xmdmsite,xmdm001,xmdm002,xmdm003,xmdm004,xmdm005,xmdm006,xmdm007,xmdm033,xmdm008,xmdm009,xmdm010,xmdm011) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_xmdl3_d[g_detail_idx].xmdmsite,g_xmdl3_d[g_detail_idx].xmdm001,g_xmdl3_d[g_detail_idx].xmdm002, 
                  g_xmdl3_d[g_detail_idx].xmdm003,g_xmdl3_d[g_detail_idx].xmdm004,g_xmdl3_d[g_detail_idx].xmdm005, 
                  g_xmdl3_d[g_detail_idx].xmdm006,g_xmdl3_d[g_detail_idx].xmdm007,g_xmdl3_d[g_detail_idx].xmdm033, 
                  g_xmdl3_d[g_detail_idx].xmdm008,g_xmdl3_d[g_detail_idx].xmdm009,g_xmdl3_d[g_detail_idx].xmdm010, 
                  g_xmdl3_d[g_detail_idx].xmdm011) 
         WHERE xmdment = g_enterprise AND xmdmdocno = ps_keys_bak[1] AND xmdmseq = ps_keys_bak[2] AND xmdmseq1 = ps_keys_bak[3]
      #add-point:update_b段修改中 name="update_b.m_update2"
                                                      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmdm_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmdm_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL axmt600_xmdm_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update2"
                                                      
      #end add-point  
   END IF
 
 
   
 
   
   #add-point:update_b段other name="update_b.other"
                           
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axmt600.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION axmt600_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="axmt600.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION axmt600_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="axmt600.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION axmt600_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
                           
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
    
   #先刷新資料
   #CALL axmt600_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1','2',"
   #僅鎖定自身table
   LET ls_group = "xmdl_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN axmt600_bcl USING g_enterprise,
                                       g_xmdk_m.xmdkdocno,g_xmdl_d[g_detail_idx].xmdlseq     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "axmt600_bcl:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "xmdm_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN axmt600_bcl2 USING g_enterprise,
                                             g_xmdk_m.xmdkdocno,g_xmdl3_d[g_detail_idx].xmdmseq,g_xmdl3_d[g_detail_idx].xmdmseq1 
 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "axmt600_bcl2:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other name="lock_b.other"
                           
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axmt600.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION axmt600_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
                           
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
    
   LET ls_group = "'1','2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmt600_bcl
   END IF
   
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmt600_bcl2
   END IF
 
 
   
 
 
   #add-point:unlock_b段other name="unlock_b.other"
                           
   #end add-point  
 
END FUNCTION
 
{</section>}
 
{<section id="axmt600.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION axmt600_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
                           
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   CALL cl_set_comp_entry("xmdkdocno",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("xmdkdocno",TRUE)
      CALL cl_set_comp_entry("xmdkdocdt",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      CALL cl_set_comp_entry("xmdkdocdt",TRUE)
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   CALL cl_set_comp_entry("xmdk005",TRUE)
   CALL cl_set_comp_entry("xmdk007,xmdk008,xmdk009,xmdk010,xmdk011,xmdk012,xmdk015",TRUE)
   CALL cl_set_comp_entry("xmdk016,xmdk018,xmdk042,xmdk045,xmdk202",TRUE)  #140725
   
   CALL cl_set_comp_entry("xmdk044",TRUE)
   CALL cl_set_comp_entry("xmdk086",TRUE)  #add by lixh 20150522
   CALL cl_set_comp_entry("xmdl058,xmdl057",TRUE) #160512-00004#2-add
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="axmt600.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION axmt600_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   DEFINE l_success  LIKE type_t.num5
   DEFINE l_slip     LIKE ooba_t.ooba001
   DEFINE l_fields   STRING
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("xmdkdocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      CALL cl_set_comp_entry("xmdkdocdt",FALSE)                                                
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("xmdkdocno",FALSE)
   END IF 
 
   IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("xmdkdocdt",FALSE)
      END IF
   END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"

   IF NOT cl_null(g_xmdk_m.xmdkdocno) THEN
      #aooi200預設不可更改
      LET l_fields = ''
      #161020-00019#1 add --(S)--
      #若與原單據別不同時先將原單別的控卡還原
      IF (g_xmdk_m.xmdkdocno <> g_xmdkdocno_o) THEN
         CALL s_aooi200_get_doc_fields(g_site,'1',g_xmdkdocno_o) RETURNING l_fields
         CALL cl_set_comp_entry(l_fields,TRUE)
         LET l_fields = ''
      END IF   
      #161020-00019#1 add --(E)--
      CALL s_aooi200_get_doc_fields(g_site,'1',g_xmdk_m.xmdkdocno) RETURNING l_fields
      CALL cl_set_comp_entry(l_fields,FALSE)

      #若單據參數設定銷退來源不需對應出貨單時
      #160225-00028#1-mark-(S) 銷貨來源單不管是否為出貨單，都可以輸入
#      CALL s_aooi200_get_slip(g_xmdk_m.xmdkdocno) RETURNING l_success,l_slip
#      IF l_success THEN
#         IF cl_get_doc_para(g_enterprise,g_site,l_slip,'D-BAS-0082') = 'N' THEN
#            CALL cl_set_comp_entry("xmdk005",FALSE)
#         END IF
#      END IF
      #160225-00028#1-mark-(E)
   END IF

   #若已輸入來源單據
   IF NOT cl_null(g_xmdk_m.xmdk005) THEN
      CALL cl_set_comp_entry("xmdk007,xmdk008,xmdk009,xmdk010,xmdk011,xmdk012,xmdk015",FALSE)
      CALL cl_set_comp_entry("xmdk016,xmdk018,xmdk042,xmdk045,xmdk202",FALSE)
   END IF

   #若單身已有輸入值
   IF axmt600_detail_count() THEN
      CALL cl_set_comp_entry("xmdk005",FALSE)
      CALL cl_set_comp_entry("xmdk007,xmdk008,xmdk009,xmdk010,xmdk011,xmdk012,xmdk015",FALSE)
      CALL cl_set_comp_entry("xmdk016,xmdk018,xmdk042,xmdk045,xmdk202",FALSE)
      CALL cl_set_comp_entry("xmdk044",FALSE)
   END IF
  
   #沒輸入來源或輸入的訂單是『3統銷統收』時，才開放輸入
   IF g_xmdk_m.xmdk045 <> '3' AND NOT cl_null(g_xmdk_m.xmdk005) THEN
      CALL cl_set_comp_entry("xmdk044",FALSE)
   END IF
  
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="axmt600.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION axmt600_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   CALL cl_set_comp_entry("xmdl001,xmdl002",TRUE)
   CALL cl_set_comp_entry("xmdl008,xmdl009",TRUE)  #料件編號,產品特徵
   CALL cl_set_comp_entry("xmdl020,xmdl022",TRUE)  #參考數量,計價數量
   CALL cl_set_comp_entry("xmdl014,xmdl015,xmdl016,xmdl052",TRUE) #庫儲批
   CALL cl_set_comp_entry("xmdl057,xmdl058",TRUE)  #有效日期、製造日期  #160512-00004#2
   CALL cl_set_comp_entry("xmdl017",TRUE)  #單位
   CALL cl_set_comp_entry("xmdl025",TRUE)  #稅別
   CALL cl_set_comp_entry("l_pmao009,l_pmao010",TRUE)
   CALL cl_set_comp_required("xmdl052",TRUE)    #160519-00008#10
   #end add-point  
END FUNCTION
 
{</section>}
 
{<section id="axmt600.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION axmt600_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   DEFINE l_success    LIKE type_t.num5
   DEFINE l_slip       LIKE ooba_t.ooba001
   DEFINE l_imaa005    LIKE imaa_t.imaa005
   DEFINE l_imaf055    LIKE imaf_t.imaf055  #160125-00022 by whitney add
   DEFINE l_imaf061    LIKE imaf_t.imaf061  #160125-00022 by whitney add
   DEFINE l_inad014    LIKE inad_t.inad014  #160512-00004#2-add
   DEFINE l_inad011    LIKE inad_t.inad011  #160512-00004#2-add
   DEFINE l_xmdl014    LIKE xmdl_t.xmdl014      #160815-00023#1
   DEFINE l_xmdl015    LIKE xmdl_t.xmdl015      #160815-00023#1
   DEFINE l_xmdl052    LIKE xmdl_t.xmdl052      #160815-00023#1
   DEFINE l_sbas0043   LIKE type_t.chr500       #160815-00023#1
   DEFINE l_cnt        LIKE type_t.num5         #160815-00023#1
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   CALL s_aooi200_get_slip(g_xmdk_m.xmdkdocno) RETURNING l_success,l_slip

   IF NOT cl_null(g_xmdk_m.xmdk005) THEN
      CALL cl_set_comp_entry("xmdl001",FALSE)   #帶單頭
   ELSE
      #160225-00028#1-mark-(S) 銷貨來源單不管是否為出貨單，都可以輸入
#      IF cl_get_doc_para(g_enterprise,g_site,l_slip,'D-BAS-0082') = 'N' THEN    #銷退單來源不為出貨單
#         CALL cl_set_comp_entry("xmdl001,xmdl002",FALSE)
#      END IF
      #160225-00028#1-mark-(E)
   END IF     

   IF NOT cl_null(g_xmdl_d[l_ac].xmdl001) THEN
      CALL cl_set_comp_entry("xmdl008,xmdl009",FALSE)  #料件編號,產品特徵
   END IF

   #若為多庫儲批出貨
   IF g_xmdl_d[l_ac].xmdl013 = 'Y' THEN
      CALL cl_set_comp_entry("xmdl014,xmdl015,xmdl016,xmdl052",FALSE)
   END IF

   #儲位控管若為5.不使用儲位控管  
   IF NOT s_axmt540_inaa007_chk(g_xmdl_d[l_ac].xmdl014) THEN
      CALL cl_set_comp_entry("xmdl015",FALSE)
   END IF
   
   #160125-00022 by whitney mark start
   #IF NOT s_axmt540_imaf061_chk(g_xmdl_d[l_ac].xmdl008) THEN
   #   CALL cl_set_comp_entry("xmdl016",FALSE)
   #END IF
   #160125-00022 by whitney mark end
   #160125-00022 by whitney add start
   #庫存管理特微
   CALL s_axmt540_get_imaf(g_xmdl_d[l_ac].xmdl008) RETURNING l_imaf055,l_imaf061
   
   #160519-00008#10--(S)
   IF l_imaf055 <> '1' THEN
      CALL cl_set_comp_required("xmdl052",FALSE)
   END IF
   IF l_imaf055 = '1' AND cl_null(g_xmdl_d[l_ac].xmdl052) THEN
      LET g_xmdl_d[l_ac].xmdl052 = ''
   END IF      
   #160519-00008#10--(E)
   
   IF l_imaf055 = '2' THEN
      LET g_xmdl_d[l_ac].xmdl052 = ''  #160519-00008#10
      CALL cl_set_comp_entry("xmdl052",FALSE)
   END IF
   #檢查料件是否使用批號
   IF l_imaf061 = '2' THEN
      CALL cl_set_comp_entry("xmdl016",FALSE)
   END IF
   #160125-00022 by whitney add end

   #若無參考單位則不可輸入參考數量
   IF cl_null(g_xmdl_d[l_ac].xmdl019) THEN
      CALL cl_set_comp_entry("xmdl020",FALSE)
   END IF
   
   #判斷料件是否存在產品特徵
   IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) THEN
      CALL s_axmt500_get_imaa005(g_enterprise,g_xmdl_d[l_ac].xmdl008) RETURNING l_imaa005
      IF cl_null(l_imaa005) THEN
         CALL cl_set_comp_entry("xmdl009",FALSE)
      END IF
   END IF

   #整體參數未使用採購計價單位
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0007') = "N" THEN  
      CALL cl_set_comp_entry("xmdl022",FALSE)
   END IF
   
   #稅別應用為'1'正常稅率
   IF g_oodb011 = '1' THEN
      CALL cl_set_comp_entry("xmdl025",FALSE)
   END IF

   #有來源
   IF NOT cl_null(g_xmdl_d[l_ac].xmdl002) THEN
      CALL cl_set_comp_entry("xmdl017",FALSE)  #單位
   END IF
   IF g_pmao_flag = 'Y' THEN
   ELSE
      CALL cl_set_comp_entry("l_pmao009,l_pmao010",FALSE) 
   END IF
   #160512-00004#2-add-(S)
   #製造日期、有效日期 default
   IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) AND NOT cl_null(g_xmdl_d[l_ac].xmdl016) THEN
      LET l_inad011 = ''
      LET l_inad014 = ''
      SELECT inad014,inad011 INTO l_inad014,l_inad011
        FROM inad_t
       WHERE inadent = g_enterprise
         AND inadsite = g_site
         AND inad001 = g_xmdl_d[l_ac].xmdl008
         AND inad002 = g_xmdl_d[l_ac].xmdl009
         AND inad003 = g_xmdl_d[l_ac].xmdl016
      #製造日期
      IF NOT cl_null(l_inad014) THEN
         LET g_xmdl_d[l_ac].xmdl058 = l_inad014
         CALL cl_set_comp_entry("xmdl058",FALSE)
      END IF
      #有效日期
      IF NOT cl_null(l_inad011) THEN
         LET g_xmdl_d[l_ac].xmdl057 = l_inad011
         CALL cl_set_comp_entry("xmdl057",FALSE)
      END IF
      DISPLAY BY NAME g_xmdl_d[l_ac].xmdl057,g_xmdl_d[l_ac].xmdl058
   END IF
   #160512-00004#2-add-(E)
   #160815-00023#1--s
   IF NOT cl_null(g_xmdl_d[l_ac].xmdl001) AND NOT cl_null(g_xmdl_d[l_ac].xmdl002) THEN
      SELECT xmdl014,xmdl015,xmdl052
        INTO l_xmdl014,l_xmdl015,l_xmdl052
        FROM xmdl_t
       WHERE xmdlent = g_enterprise
         AND xmdldocno = g_xmdl_d[l_ac].xmdl001 AND xmdlseq = g_xmdl_d[l_ac].xmdl002
      CALL cl_get_para(g_enterprise,g_xmdl_d[l_ac].xmdlsite,'S-BAS-0043') RETURNING l_sbas0043
      SELECT count(*) INTO l_cnt
        FROM inac_t
       WHERE inacent = g_enterprise AND inacsite = g_xmdl_d[l_ac].xmdlsite
         AND inac001 = l_xmdl014 AND inac003 = l_sbas0043
      IF l_cnt > 0 THEN
         CALL cl_set_comp_entry("xmdl014,xmdl015,xmdl052",FALSE)
      END IF
   END IF
   #160815-00023#1--e
   #end add-point     
END FUNCTION
 
{</section>}
 
{<section id="axmt600.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION axmt600_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   
   #150721-00001#1  2016/01/08 By earl mod s
   #整體單據Action控制
   CALL cl_set_act_visible("insert", TRUE)
   
   IF NOT cl_null(g_xmdk_m.xmdkdocno) THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
      CALL cl_set_act_visible("aisp320_cmd,axmt600_gen_order,axmt600_modify_price",TRUE)
      CALL cl_set_act_visible("axmt600_call_axmt540_01,s_lot_sel",TRUE)
   END IF
   #150721-00001#1  2016/01/08 By earl mod e
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="axmt600.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION axmt600_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   DEFINE l_n         LIKE type_t.num5
   #150721-00001#1  2016/01/08 By earl add s
   DEFINE l_success     LIKE type_t.num5
   DEFINE l_flag        LIKE type_t.num5
   #150721-00001#1  2016/01/08 By earl add e
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"

   CASE g_xmdk_m.xmdkstus
      WHEN 'N'   #未確認
         CALL cl_set_act_visible("axmt600_gen_order",FALSE)       #產生換貨訂單         

      WHEN 'S'   #已扣帳
         CALL cl_set_act_visible("modify,delete,modify_detail",FALSE)

         IF g_xmdk_m.xmdk082 <> '3' AND g_xmdk_m.xmdk082 <> '5' THEN
            CALL cl_set_act_visible("axmt600_gen_order",FALSE)    #產生換貨訂單         
         END IF         
                  
      WHEN 'D'   #抽單
         CALL cl_set_act_visible("axmt600_gen_order",FALSE)       #產生換貨訂單         
         
      WHEN 'R'   #已拒絕
         CALL cl_set_act_visible("axmt600_gen_order",FALSE)       #產生換貨訂單                  

      WHEN 'A'   #已核准
         CALL cl_set_act_visible("modify,delete,modify_detail",FALSE)
         CALL cl_set_act_visible("axmt600_gen_order",FALSE)       #產生換貨訂單         
         
      WHEN 'Y'   #已確認
         CALL cl_set_act_visible("modify,delete,modify_detail",FALSE)
         CALL cl_set_act_visible("axmt600_gen_order",FALSE)       #產生換貨訂單               
      
      WHEN 'W'   #送簽中
         CALL cl_set_act_visible("modify,delete,modify_detail",FALSE)
         CALL cl_set_act_visible("axmt600_gen_order",FALSE)       #產生換貨訂單               
      
      WHEN 'X'   #作廢
         CALL cl_set_act_visible("modify,delete,modify_detail",FALSE)
         CALL cl_set_act_visible("axmt600_gen_order",FALSE)       #產生換貨訂單               
      
   END CASE

   #已產生換貨訂單
   LET l_n = 0
   SELECT COUNT(xmdadocno) INTO l_n
     FROM xmda_t
    WHERE xmdaent = g_enterprise
      AND xmda008 = g_xmdk_m.xmdkdocno
      AND xmdastus <> 'X'

   IF l_n > 0 THEN
      CALL cl_set_act_visible("axmt600_gen_order",FALSE)
   END IF

   #add--2015/08/27 By shiun--(S)
   IF g_xmdk_m.xmdkstus <> 'S' THEN
      CALL cl_set_act_visible("aisp320_cmd",FALSE)
   END IF
   #add--2015/08/27 By shiun--(E)
   
   #150721-00001#1  2016/01/08 By earl add s
   CALL s_control_chk_group('5','2',g_user,g_dept,g_site,'','','','') RETURNING l_success,l_flag
   IF NOT l_success OR NOT l_flag THEN    #處理狀態為FALSE 或 不在控制組範圍內
      CALL cl_set_act_visible("insert", FALSE)
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", FALSE)
      CALL cl_set_act_visible("aisp320_cmd,axmt600_gen_order,axmt600_modify_price",FALSE)
      CALL cl_set_act_visible("axmt600_call_axmt540_01,s_lot_sel",FALSE)
   END IF
   #150721-00001#1  2016/01/08 By earl add e
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="axmt600.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION axmt600_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   CALL cl_set_act_visible("s_lot_sel",TRUE)
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="axmt600.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION axmt600_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   DEFINE l_imaf071         LIKE imaf_t.imaf071
   DEFINE l_imaf081         LIKE imaf_t.imaf081
   #150721-00001#1  2016/01/08 By earl add s
   DEFINE l_success     LIKE type_t.num5
   DEFINE l_flag        LIKE type_t.num5
   #150721-00001#1  2016/01/08 By earl add e
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   IF l_ac > 0 THEN    
      #抓取料件據點進銷存相關資訊
      LET l_imaf071 = NULL
      LET l_imaf081 = NULL
      SELECT imaf071,imaf081 INTO l_imaf071,l_imaf081 
        FROM imaf_t 
       WHERE imafent = g_enterprise
         AND imafsite = g_site AND imaf001 = g_xmdl_d[l_ac].xmdl008
      IF l_imaf071 ='2' AND l_imaf081 ='2' THEN 
         CALL cl_set_act_visible("s_lot_sel",FALSE)
      END IF
   END IF
   
   #150721-00001#1  2016/01/08 By earl add s
   CALL s_control_chk_group('5','2',g_user,g_dept,g_site,'','','','') RETURNING l_success,l_flag
   IF NOT l_success OR NOT l_flag THEN    #處理狀態為FALSE 或 不在控制組範圍內
      CALL cl_set_act_visible("s_lot_sel",FALSE)
   END IF
   #150721-00001#1  2016/01/08 By earl add e
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="axmt600.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION axmt600_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
                           
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
                           
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " xmdkdocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   LET ls_wc = ''
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = " xmdkdocno IN ('",g_argv[01],"') AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc,g_argv[02],"  AND "
   END IF
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
         INITIALIZE g_wc2_table2 TO NULL
 
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "xmdk_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "xmdl_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "xmdm_t" 
                  LET g_wc2_table2 = la_wc[li_idx].wc
 
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
            OR NOT cl_null(g_wc2_table2)
 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
            IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
            END IF
 
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
                           
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
 
{</section>}
 
{<section id="axmt600.state_change" >}
   #應用 a09 樣板自動產生(Version:16)
#+ 確認碼變更 
PRIVATE FUNCTION axmt600_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   DEFINE l_success LIKE type_t.num5
   DEFINE l_slip    LIKE ooba_t.ooba001
   
   #150630---earl---add---s
   DEFINE la_param   RECORD
          prog          STRING,
          actionid      STRING,
          background    LIKE type_t.chr1,
          param         DYNAMIC ARRAY OF STRING
                     END RECORD

   DEFINE ls_js         STRING
   DEFINE l_xmdk083       LIKE xmdk_t.xmdk083
   #150630---earl---add---e
   
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
                           
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_xmdk_m.xmdkdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN axmt600_cl USING g_enterprise,g_xmdk_m.xmdkdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axmt600_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE axmt600_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE axmt600_master_referesh USING g_xmdk_m.xmdkdocno INTO g_xmdk_m.xmdk000,g_xmdk_m.xmdksite, 
       g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001,g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdkstus, 
       g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk007,g_xmdk_m.xmdk009,g_xmdk_m.xmdk008,g_xmdk_m.xmdk202, 
       g_xmdk_m.xmdk045,g_xmdk_m.xmdk082,g_xmdk_m.xmdk030,g_xmdk_m.xmdk054,g_xmdk_m.xmdk010,g_xmdk_m.xmdk011, 
       g_xmdk_m.xmdk012,g_xmdk_m.xmdk013,g_xmdk_m.xmdk014,g_xmdk_m.xmdk015,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017, 
       g_xmdk_m.xmdk084,g_xmdk_m.xmdk018,g_xmdk_m.xmdk041,g_xmdk_m.xmdk037,g_xmdk_m.xmdk042,g_xmdk_m.xmdk043, 
       g_xmdk_m.xmdk031,g_xmdk_m.xmdk033,g_xmdk_m.xmdk085,g_xmdk_m.xmdk086,g_xmdk_m.xmdk087,g_xmdk_m.xmdk044, 
       g_xmdk_m.xmdk035,g_xmdk_m.xmdk046,g_xmdk_m.xmdk036,g_xmdk_m.xmdk083,g_xmdk_m.xmdkownid,g_xmdk_m.xmdkowndp, 
       g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtdp,g_xmdk_m.xmdkcrtdt,g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmoddt, 
       g_xmdk_m.xmdkcnfid,g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid,g_xmdk_m.xmdkpstdt,g_xmdk_m.xmdk003_desc, 
       g_xmdk_m.xmdk004_desc,g_xmdk_m.xmdk007_desc,g_xmdk_m.xmdk009_desc,g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk202_desc, 
       g_xmdk_m.xmdk030_desc,g_xmdk_m.xmdk010_desc,g_xmdk_m.xmdk011_desc,g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdkownid_desc, 
       g_xmdk_m.xmdkowndp_desc,g_xmdk_m.xmdkcrtid_desc,g_xmdk_m.xmdkcrtdp_desc,g_xmdk_m.xmdkmodid_desc, 
       g_xmdk_m.xmdkcnfid_desc,g_xmdk_m.xmdkpstid_desc
   
 
   #檢查是否允許此動作
   IF NOT axmt600_action_chk() THEN
      CLOSE axmt600_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_xmdk_m.xmdk000,g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocno_desc,g_xmdk_m.xmdkdocdt, 
       g_xmdk_m.xmdk001,g_xmdk_m.xmdk003,g_xmdk_m.xmdk003_desc,g_xmdk_m.xmdk004,g_xmdk_m.xmdk004_desc, 
       g_xmdk_m.xmdkstus,g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk007,g_xmdk_m.xmdk007_desc,g_xmdk_m.xmdk009, 
       g_xmdk_m.xmdk009_desc,g_xmdk_m.xmdk008,g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk202,g_xmdk_m.xmdk202_desc, 
       g_xmdk_m.xmdk045,g_xmdk_m.xmdk082,g_xmdk_m.xmdk030,g_xmdk_m.xmdk030_desc,g_xmdk_m.xmdk054,g_xmdk_m.xmdk010, 
       g_xmdk_m.xmdk010_desc,g_xmdk_m.xmdk011,g_xmdk_m.xmdk011_desc,g_xmdk_m.xmdk012,g_xmdk_m.xmdk012_desc, 
       g_xmdk_m.xmdk013,g_xmdk_m.xmdk014,g_xmdk_m.xmdk015,g_xmdk_m.xmdk015_desc,g_xmdk_m.xmdk016,g_xmdk_m.xmdk016_desc, 
       g_xmdk_m.xmdk017,g_xmdk_m.xmdk084,g_xmdk_m.xmdk018,g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdk041,g_xmdk_m.xmdk037, 
       g_xmdk_m.xmdk042,g_xmdk_m.xmdk043,g_xmdk_m.xmdk031,g_xmdk_m.xmdk031_desc,g_xmdk_m.xmdk033,g_xmdk_m.xmdk033_desc, 
       g_xmdk_m.xmdk085,g_xmdk_m.xmdk086,g_xmdk_m.xmdk087,g_xmdk_m.xmdk044,g_xmdk_m.xmdk035,g_xmdk_m.xmdk046, 
       g_xmdk_m.xmdk036,g_xmdk_m.xmdk083,g_xmdk_m.xmdkownid,g_xmdk_m.xmdkownid_desc,g_xmdk_m.xmdkowndp, 
       g_xmdk_m.xmdkowndp_desc,g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtid_desc,g_xmdk_m.xmdkcrtdp,g_xmdk_m.xmdkcrtdp_desc, 
       g_xmdk_m.xmdkcrtdt,g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmodid_desc,g_xmdk_m.xmdkmoddt,g_xmdk_m.xmdkcnfid, 
       g_xmdk_m.xmdkcnfid_desc,g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid,g_xmdk_m.xmdkpstid_desc,g_xmdk_m.xmdkpstdt 
 
 
   CASE g_xmdk_m.xmdkstus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "S"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "UH"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unhold.png")
      WHEN "H"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/hold.png")
      WHEN "Z"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_xmdk_m.xmdkstus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "S"
               HIDE OPTION "posted"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "UH"
               HIDE OPTION "unhold"
            WHEN "H"
               HIDE OPTION "hold"
            WHEN "Z"
               HIDE OPTION "unposted"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      #approved    已核准(不卡)
      #rejection   已拒絕(不卡)
      #signing     提交
      #withdraw    抽單

      #confirmed   確認
      #unconfirmed 取消確認
      #posted      過帳
      #unposted    取消過帳
      #invalid     作廢
      #unhold      取消留置(銷退單隱藏)
      #hold        留置(銷退單隱藏)
                  
      #提交和抽單一開始先無條件關
      CALL cl_set_act_visible("signing,withdraw",FALSE)
      CALL cl_set_act_visible("confirmed,unconfirmed,posted,unposted,invalid,unhold,hold",FALSE)
      
      CASE g_xmdk_m.xmdkstus
         WHEN "N"   #未確認
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            CALL cl_set_act_visible("invalid,confirmed",TRUE)

            IF cl_bpm_chk() THEN
               CALL cl_set_act_visible("signing",TRUE)
               CALL cl_set_act_visible("confirmed",FALSE)
            END IF

         WHEN "X"   #作廢
            CALL s_transaction_end('N','0')   #160812-00017#3 Add By Ken 160815
            RETURN

         WHEN "Y"   #已確認
            CALL cl_set_act_visible("unconfirmed,posted",TRUE)

         WHEN "S"   #已過帳
            CALL cl_set_act_visible("unposted",TRUE)

         WHEN "A"   #已核准
            CALL cl_set_act_visible("confirmed ",TRUE)

         WHEN "R"   #已拒絕
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
#            CALL cl_set_act_visible("invalid,confirmed",TRUE) #xujing mark
            CALL cl_set_act_visible("invalid",TRUE) #xujing add
#            IF cl_bpm_chk() THEN                      xujing mark
#               CALL cl_set_act_visible("signing",TRUE)
#               CALL cl_set_act_visible("confirmed",FALSE)
#            END IF

         WHEN "D"   #抽單
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
#            CALL cl_set_act_visible("invalid,confirmed",TRUE) #xujing mark
            CALL cl_set_act_visible("invalid",TRUE) #xujing add
#            IF cl_bpm_chk() THEN                      xujing mark
#               CALL cl_set_act_visible("signing",TRUE)
#               CALL cl_set_act_visible("confirmed",FALSE)
#            END IF

         WHEN "W"   #送簽中
            CALL cl_set_act_visible("withdraw",TRUE)

#         WHEN "H"  #留置
#         WHEN "UH" #取消留置
#         WHEN "Z"  #扣帳還原

      END CASE
                                              
      #end add-point
      
      #應用 a36 樣板自動產生(Version:5)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT axmt600_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE axmt600_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT axmt600_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE axmt600_cl
            RETURN
         END IF
 
 
 
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.unconfirmed"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.confirmed"
                                                                                 
            #end add-point
         END IF
         EXIT MENU
      ON ACTION posted
         IF cl_auth_chk_act("posted") THEN
            LET lc_state = "S"
            #add-point:action控制 name="statechange.posted"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制 name="statechange.approved"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制 name="statechange.withdraw"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制 name="statechange.rejection"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制 name="statechange.signing"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION unhold
         IF cl_auth_chk_act("unhold") THEN
            LET lc_state = "UH"
            #add-point:action控制 name="statechange.unhold"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION hold
         IF cl_auth_chk_act("hold") THEN
            LET lc_state = "H"
            #add-point:action控制 name="statechange.hold"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION unposted
         IF cl_auth_chk_act("unposted") THEN
            LET lc_state = "Z"
            #add-point:action控制 name="statechange.unposted"
            LET lc_state = "Y"
            #end add-point
         END IF
         EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.invalid"
                                                                                 
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
                                                      
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "S"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "UH"
      AND lc_state <> "H"
      AND lc_state <> "Z"
      AND lc_state <> "X"
      ) OR 
      g_xmdk_m.xmdkstus = lc_state OR cl_null(lc_state) THEN
      CLOSE axmt600_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   CALL cl_err_collect_init()
   
   CASE lc_state
      WHEN 'Y'
         IF g_xmdk_m.xmdkstus = 'N'  OR
            g_xmdk_m.xmdkstus = 'A' OR
            g_xmdk_m.xmdkstus = 'D' OR
            g_xmdk_m.xmdkstus = 'R' THEN   
            
            CALL s_axmt600_conf_chk(g_xmdk_m.xmdkdocno) RETURNING l_success
            IF NOT l_success THEN
               CALL cl_err_collect_show()
               CALL s_transaction_end('N','0')   #160812-00017#3 Add By Ken 160815
               RETURN
            ELSE
               IF NOT cl_ask_confirm('aim-00108') THEN   #是否執行確認？
                  CALL cl_err_collect_show()
                  CALL s_transaction_end('N','0')   #160812-00017#3 Add By Ken 160815
                  RETURN
               ELSE
                  CALL s_transaction_begin()
                  CALL s_axmt600_conf_upd(g_xmdk_m.xmdkdocno) RETURNING l_success
                  IF NOT l_success THEN
                     CALL s_transaction_end('N','0')
                     CALL cl_err_collect_show()
                     RETURN
                  ELSE
                     CALL s_aooi200_get_slip(g_xmdk_m.xmdkdocno) RETURNING l_success,l_slip
                     IF NOT l_success THEN
                        CALL s_transaction_end('N','0')
                        CALL cl_err_collect_show()
                        RETURN
                     END IF
                    
                     #銷退單單別參數設置"自動過帳"
                     IF cl_get_doc_para(g_enterprise,g_site,l_slip,'D-BAS-0083') = 'Y' THEN                  
                        LET lc_state = 'S'
                     END IF
                     
                     CALL s_transaction_end('Y','0')
                  END IF
               END IF
            END IF
         END IF   
    
         IF g_xmdk_m.xmdkstus = 'S' THEN   #取消過帳
            CALL s_axmt600_unpost_chk(g_xmdk_m.xmdkdocno) RETURNING l_success
            IF NOT l_success THEN
               CALL cl_err_collect_show()
               CALL s_transaction_end('N','0')   #160812-00017#3 Add By Ken 160815
               RETURN
            ELSE
               #銷退單在過帳還原時若xmdk085為'2.銷售合約差異處理'時，過帳還原時只能將此銷退單更新成作廢狀態
               IF g_xmdk_m.xmdk085 = '2' THEN
                  IF NOT cl_ask_confirm('axm-00621') THEN   #資料來源為"銷售合約差異"是否進行過帳還原，若選擇是則只能將銷退單更新為作廢！
                     CALL cl_err_collect_show()
                     CALL s_transaction_end('N','0')   #160812-00017#3 Add By Ken 160815
                     RETURN
                  END IF
                  
                  #150630---earl---add---s
                  CALL s_transaction_end('Y','0')
                  
                  #多角自動拋轉還原
                  IF cl_get_para(g_enterprise,'','E-BAS-0022') = 'Y' AND
                     g_xmdk_m.xmdk045 MATCHES '[27]' AND 
                     g_xmdk_m.xmdk044 IS NOT NULL THEN
                     
                     INITIALIZE la_param.* TO NULL
                     LET la_param.prog     = 'aicp710'
                     LET la_param.param[1] = g_xmdk_m.xmdkdocno
                     LET ls_js = util.JSON.stringify(la_param)
                     CALL cl_cmdrun_wait(ls_js)
                  END IF
                  
                  LET l_xmdk083 = ''
                  SELECT xmdk083 INTO l_xmdk083
                    FROM xmdk_t
                   WHERE xmdkent = g_enterprise
                     AND xmdkdocno = g_xmdk_m.xmdkdocno
                  
                  IF l_xmdk083 = 'Y' THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend = ""
                     LET g_errparam.code   = 'aic-00181'   #多角流程已拋轉之單據不可取消過帳！
                     LET g_errparam.popup  = TRUE
                     CALL cl_err()
                  
                     CALL cl_err_collect_show()
                     CLOSE axmt600_cl
                     CALL s_transaction_end('N','0')   #160812-00017#3 Add By Ken 160815
                     RETURN
                  END IF
                  
                  CALL s_transaction_begin()
                   
                  OPEN axmt600_cl USING g_enterprise,g_xmdk_m.xmdkdocno
                  IF STATUS THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend = "OPEN axmt600_cl:"
                     LET g_errparam.code   = STATUS
                     LET g_errparam.popup  = TRUE
                     CALL cl_err()
                     CLOSE axmt600_cl
                     CALL s_transaction_end('N','0')
                     CALL cl_err_collect_show()
                     RETURN
                  END IF
                  #150630---earl---add---e
                  
                  CALL s_transaction_begin()
                  CALL s_axmt600_unpost_upd(g_xmdk_m.xmdkdocno) RETURNING l_success
                  IF NOT l_success THEN
                     CALL s_transaction_end('N','0')
                     CALL cl_err_collect_show()
                     RETURN
                  END IF

                  CALL s_axmt600_unconf_chk(g_xmdk_m.xmdkdocno) RETURNING l_success
                  IF NOT l_success THEN
                     CALL s_transaction_end('N','0')
                     CALL cl_err_collect_show()
                     RETURN
                  ELSE
                     CALL s_axmt600_unconf_upd(g_xmdk_m.xmdkdocno) RETURNING l_success
                     IF NOT l_success THEN
                        CALL s_transaction_end('N','0')
                        CALL cl_err_collect_show()
                        RETURN
                     END IF
                  END IF

                  CALL s_axmt600_invalid_chk(g_xmdk_m.xmdkdocno) RETURNING l_success
                  IF NOT l_success THEN
                     CALL s_transaction_end('N','0')
                     CALL cl_err_collect_show()
                     RETURN
                  ELSE
                     CALL s_axmt600_invalid_upd(g_xmdk_m.xmdkdocno) RETURNING l_success
                     IF NOT l_success THEN
                        CALL s_transaction_end('N','0')
                        CALL cl_err_collect_show()
                        RETURN
                     END IF
                  END IF
                  
                  LET lc_state = 'X'  #作廢
                  
                  CALL s_transaction_end('Y','0')
               ELSE
                  IF NOT cl_ask_confirm('sub-00361') THEN   #是否執行取消過帳？
                     CALL cl_err_collect_show()
                     CALL s_transaction_end('N','0')   #160812-00017#3 Add By Ken 160815
                     RETURN
                  ELSE
                     #150630---earl---add---s
                     CALL s_transaction_end('Y','0')
                    
                     #多角自動拋轉還原
                     IF cl_get_para(g_enterprise,'','E-BAS-0022') = 'Y' AND
                        g_xmdk_m.xmdk045 MATCHES '[27]' AND 
                        g_xmdk_m.xmdk044 IS NOT NULL THEN
                     
                        INITIALIZE la_param.* TO NULL
                        LET la_param.prog     = 'aicp710'
                        LET la_param.param[1] = g_xmdk_m.xmdkdocno
                        LET ls_js = util.JSON.stringify(la_param)
                        CALL cl_cmdrun_wait(ls_js)
                     END IF
                    
                     LET l_xmdk083 = ''
                     SELECT xmdk083 INTO l_xmdk083
                       FROM xmdk_t
                      WHERE xmdkent = g_enterprise
                        AND xmdkdocno = g_xmdk_m.xmdkdocno
                    
                     IF l_xmdk083 = 'Y' THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.extend = ""
                        LET g_errparam.code   = 'aic-00181'   #多角流程已拋轉之單據不可取消過帳！
                        LET g_errparam.popup  = TRUE
                        CALL cl_err()
                    
                        CALL cl_err_collect_show()
                        CLOSE axmt600_cl
                        CALL s_transaction_end('N','0')   #160812-00017#3 Add By Ken 160815
                        RETURN
                     END IF
                     
                     CALL s_transaction_begin()

                     OPEN axmt600_cl USING g_enterprise,g_xmdk_m.xmdkdocno
                     IF STATUS THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.extend = "OPEN axmt600_cl:"
                        LET g_errparam.code   = STATUS
                        LET g_errparam.popup  = TRUE
                        CALL cl_err()
                        CLOSE axmt600_cl
                        CALL s_transaction_end('N','0')
                        CALL cl_err_collect_show()
                        RETURN
                     END IF
                     #150630---earl---add---e

                     CALL s_transaction_begin()
                     CALL s_axmt600_unpost_upd(g_xmdk_m.xmdkdocno) RETURNING l_success
                     IF NOT l_success THEN
                        CALL s_transaction_end('N','0')
                        CALL cl_err_collect_show()
                        RETURN
                     ELSE
                        CALL s_transaction_end('Y','0')
                     END IF
                  END IF
               END IF
               
            END IF
         END IF              
      
          
      WHEN 'X'
         CALL s_axmt600_invalid_chk(g_xmdk_m.xmdkdocno) RETURNING l_success
         IF NOT l_success THEN
            CALL cl_err_collect_show()
            CALL s_transaction_end('N','0')   #160812-00017#3 Add By Ken 160815
            RETURN
         ELSE
            IF NOT cl_ask_confirm('aim-00109') THEN  #是否執行作廢？
               CALL cl_err_collect_show()
               CALL s_transaction_end('N','0')   #160812-00017#3 Add By Ken 160815
               RETURN
            ELSE
               CALL s_transaction_begin()
               CALL s_axmt600_invalid_upd(g_xmdk_m.xmdkdocno) RETURNING l_success
               #150821-xianghui-b
               IF l_success THEN 
                  CALL s_axmt540_update_inao(g_xmdk_m.xmdkdocno,'','','','','0','3') RETURNING l_success
               END IF
               #150821-xianghui-b   
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  CALL cl_err_collect_show()
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
            END IF
         END IF
      
    
      WHEN 'S'
         CALL s_axmt600_post_chk(g_xmdk_m.xmdkdocno) RETURNING l_success
         IF NOT l_success THEN
            CALL cl_err_collect_show()
            CALL s_transaction_end('N','0')   #160812-00017#3 Add By Ken 160815
            RETURN
         ELSE
            IF NOT cl_ask_confirm('sub-00360') THEN  #是否執行過帳？
               CALL cl_err_collect_show()
               CALL s_transaction_end('N','0')   #160812-00017#3 Add By Ken 160815
               RETURN
            ELSE
               CALL s_transaction_begin()
               IF NOT axmt600_post_input() THEN  #INPUT
                  CALL s_transaction_end('N','0')
                  CALL cl_err_collect_show()
                  RETURN
               END IF
               CALL s_axmt600_post_upd(g_xmdk_m.xmdkdocno,'') RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  CALL cl_err_collect_show()
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','0')
                  
                  #150630---earl---add---s
                  #多角自動拋轉
                  IF cl_get_para(g_enterprise,'','E-BAS-0022') = 'Y' AND
                     g_xmdk_m.xmdk045 MATCHES '[27]' AND 
                     g_xmdk_m.xmdk044 IS NOT NULL THEN
                     
                     INITIALIZE la_param.* TO NULL
                     LET la_param.prog     = 'aicp700'
                     LET la_param.param[1] = g_xmdk_m.xmdkdocno
                     LET ls_js = util.JSON.stringify(la_param)
                     CALL cl_cmdrun_wait(ls_js)
                  END IF
                  #150630---earl---add---e
                  
               END IF
            END IF
         END IF
      
    
      WHEN 'N'
         CALL s_axmt600_unconf_chk(g_xmdk_m.xmdkdocno) RETURNING l_success
         IF NOT l_success THEN
            CALL cl_err_collect_show()
            CALL s_transaction_end('N','0')   #160812-00017#3 Add By Ken 160815
            RETURN
         ELSE
            IF NOT cl_ask_confirm('aim-00110') THEN   #是否執行取消確認？
               CALL cl_err_collect_show()
               CALL s_transaction_end('N','0')   #160812-00017#3 Add By Ken 160815
               RETURN
            ELSE
               CALL s_transaction_begin()
               CALL s_axmt600_unconf_upd(g_xmdk_m.xmdkdocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  CALL cl_err_collect_show()
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
            END IF
         END IF
      
   END CASE
   
   CALL cl_err_collect_show()
   
   #end add-point
   
   LET g_xmdk_m.xmdkmodid = g_user
   LET g_xmdk_m.xmdkmoddt = cl_get_current()
   LET g_xmdk_m.xmdkstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE xmdk_t 
      SET (xmdkstus,xmdkmodid,xmdkmoddt) 
        = (g_xmdk_m.xmdkstus,g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmoddt)     
    WHERE xmdkent = g_enterprise AND xmdkdocno = g_xmdk_m.xmdkdocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "UH"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unhold.png")
         WHEN "H"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/hold.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE axmt600_master_referesh USING g_xmdk_m.xmdkdocno INTO g_xmdk_m.xmdk000,g_xmdk_m.xmdksite, 
          g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001,g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdkstus, 
          g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk007,g_xmdk_m.xmdk009,g_xmdk_m.xmdk008,g_xmdk_m.xmdk202, 
          g_xmdk_m.xmdk045,g_xmdk_m.xmdk082,g_xmdk_m.xmdk030,g_xmdk_m.xmdk054,g_xmdk_m.xmdk010,g_xmdk_m.xmdk011, 
          g_xmdk_m.xmdk012,g_xmdk_m.xmdk013,g_xmdk_m.xmdk014,g_xmdk_m.xmdk015,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017, 
          g_xmdk_m.xmdk084,g_xmdk_m.xmdk018,g_xmdk_m.xmdk041,g_xmdk_m.xmdk037,g_xmdk_m.xmdk042,g_xmdk_m.xmdk043, 
          g_xmdk_m.xmdk031,g_xmdk_m.xmdk033,g_xmdk_m.xmdk085,g_xmdk_m.xmdk086,g_xmdk_m.xmdk087,g_xmdk_m.xmdk044, 
          g_xmdk_m.xmdk035,g_xmdk_m.xmdk046,g_xmdk_m.xmdk036,g_xmdk_m.xmdk083,g_xmdk_m.xmdkownid,g_xmdk_m.xmdkowndp, 
          g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtdp,g_xmdk_m.xmdkcrtdt,g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmoddt, 
          g_xmdk_m.xmdkcnfid,g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid,g_xmdk_m.xmdkpstdt,g_xmdk_m.xmdk003_desc, 
          g_xmdk_m.xmdk004_desc,g_xmdk_m.xmdk007_desc,g_xmdk_m.xmdk009_desc,g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk202_desc, 
          g_xmdk_m.xmdk030_desc,g_xmdk_m.xmdk010_desc,g_xmdk_m.xmdk011_desc,g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdkownid_desc, 
          g_xmdk_m.xmdkowndp_desc,g_xmdk_m.xmdkcrtid_desc,g_xmdk_m.xmdkcrtdp_desc,g_xmdk_m.xmdkmodid_desc, 
          g_xmdk_m.xmdkcnfid_desc,g_xmdk_m.xmdkpstid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_xmdk_m.xmdk000,g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocno_desc, 
          g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001,g_xmdk_m.xmdk003,g_xmdk_m.xmdk003_desc,g_xmdk_m.xmdk004, 
          g_xmdk_m.xmdk004_desc,g_xmdk_m.xmdkstus,g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk007, 
          g_xmdk_m.xmdk007_desc,g_xmdk_m.xmdk009,g_xmdk_m.xmdk009_desc,g_xmdk_m.xmdk008,g_xmdk_m.xmdk008_desc, 
          g_xmdk_m.xmdk202,g_xmdk_m.xmdk202_desc,g_xmdk_m.xmdk045,g_xmdk_m.xmdk082,g_xmdk_m.xmdk030, 
          g_xmdk_m.xmdk030_desc,g_xmdk_m.xmdk054,g_xmdk_m.xmdk010,g_xmdk_m.xmdk010_desc,g_xmdk_m.xmdk011, 
          g_xmdk_m.xmdk011_desc,g_xmdk_m.xmdk012,g_xmdk_m.xmdk012_desc,g_xmdk_m.xmdk013,g_xmdk_m.xmdk014, 
          g_xmdk_m.xmdk015,g_xmdk_m.xmdk015_desc,g_xmdk_m.xmdk016,g_xmdk_m.xmdk016_desc,g_xmdk_m.xmdk017, 
          g_xmdk_m.xmdk084,g_xmdk_m.xmdk018,g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdk041,g_xmdk_m.xmdk037, 
          g_xmdk_m.xmdk042,g_xmdk_m.xmdk043,g_xmdk_m.xmdk031,g_xmdk_m.xmdk031_desc,g_xmdk_m.xmdk033, 
          g_xmdk_m.xmdk033_desc,g_xmdk_m.xmdk085,g_xmdk_m.xmdk086,g_xmdk_m.xmdk087,g_xmdk_m.xmdk044, 
          g_xmdk_m.xmdk035,g_xmdk_m.xmdk046,g_xmdk_m.xmdk036,g_xmdk_m.xmdk083,g_xmdk_m.xmdkownid,g_xmdk_m.xmdkownid_desc, 
          g_xmdk_m.xmdkowndp,g_xmdk_m.xmdkowndp_desc,g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtid_desc,g_xmdk_m.xmdkcrtdp, 
          g_xmdk_m.xmdkcrtdp_desc,g_xmdk_m.xmdkcrtdt,g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmodid_desc,g_xmdk_m.xmdkmoddt, 
          g_xmdk_m.xmdkcnfid,g_xmdk_m.xmdkcnfid_desc,g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid,g_xmdk_m.xmdkpstid_desc, 
          g_xmdk_m.xmdkpstdt
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
                           
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   
   #單身Action隱藏
   CALL axmt600_detail_action_hidden(g_detail_idx)
   
   #end add-point  
 
   CLOSE axmt600_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL axmt600_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axmt600.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION axmt600_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
                           
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_xmdl_d.getLength() THEN
         LET g_detail_idx = g_xmdl_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmdl_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmdl_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_xmdl2_d.getLength() THEN
         LET g_detail_idx = g_xmdl2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmdl2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmdl2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_xmdl3_d.getLength() THEN
         LET g_detail_idx = g_xmdl3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmdl3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmdl3_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other name="idx_chk.other"

   #單身Action隱藏
   CALL axmt600_detail_action_hidden(g_detail_idx)

   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axmt600.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION axmt600_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
                           
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
                           
   #end add-point
    
   LET l_ac = li_ac
   
   CALL axmt600_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
 
{</section>}
 
{<section id="axmt600.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION axmt600_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
                           
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
                                                      
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axmt600.status_show" >}
PRIVATE FUNCTION axmt600_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="axmt600.mask_functions" >}
&include "erp/axm/axmt600_mask.4gl"
 
{</section>}
 
{<section id="axmt600.signature" >}
   #應用 a39 樣板自動產生(Version:10)
#+ BPM提交
PRIVATE FUNCTION axmt600_send()
   #add-point:send段define(客製用) name="send.define_customerization"
   
   #end add-point 
   #add-point:send段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="send.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="send.pre_function"
   
   #end add-point
   
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
   LET g_wc2_table2 = " 1=1"
 
 
   CALL axmt600_show()
   CALL axmt600_set_pk_array()
   
   #add-point: 初始化的ADP name="send.before_send"
   #確認前檢核段
   IF NOT s_axmt600_conf_chk(g_xmdk_m.xmdkdocno) THEN
      CLOSE axmt600_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_xmdk_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_xmdl_d))
   CALL cl_bpm_set_detail_data("s_detail2", util.JSONArray.fromFGL(g_xmdl2_d))
   CALL cl_bpm_set_detail_data("s_detail3", util.JSONArray.fromFGL(g_xmdl3_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP name="send.before_cli"
   
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP name="send.after_send"
   
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL axmt600_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL axmt600_ui_headershow()
   CALL axmt600_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
#應用 a40 樣板自動產生(Version:9)
#+ BPM抽單
PRIVATE FUNCTION axmt600_draw_out()
   #add-point:draw段define name="draw.define_customerization"
   
   #end add-point
   #add-point:draw段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="draw.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="draw.pre_function"
   
   #end add-point
   
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_idx].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL axmt600_ui_headershow()  
   CALL axmt600_ui_detailshow()
 
   #add-point:Function後置處理  name="draw.after_function"
   
   #end add-point
 
   RETURN TRUE
   
END FUNCTION
 
 
 
 
 
{</section>}
 
{<section id="axmt600.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION axmt600_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_xmdk_m.xmdkdocno
   LET g_pk_array[1].column = 'xmdkdocno'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axmt600.other_dialog" readonly="Y" >}
   
 
{</section>}
 
{<section id="axmt600.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION axmt600_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL axmt600_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_xmdk_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axmt600.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION axmt600_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   #160818-00017#43-s
   SELECT xmdkstus INTO g_xmdk_m.xmdkstus FROM xmdk_t
    WHERE xmdkent = g_enterprise
      AND xmdksite = g_site
      AND xmdkdocno = g_xmdk_m.xmdkdocno
   IF (g_action_choice="modify" OR g_action_choice="delete" OR g_action_choice="modify_detail")  THEN
     LET g_errno = NULL
     CASE g_xmdk_m.xmdkstus
        WHEN 'W'
           LET g_errno = 'sub-01347'
        WHEN 'X'
           LET g_errno = 'sub-00229'
        WHEN 'Y'
           LET g_errno = 'sub-00178'
        WHEN 'S'
           LET g_errno = 'sub-00230'
        WHEN 'Z'
           LET g_errno = 'sub-01351'
        WHEN "UH"
           LET g_errno = 'sub-01358'
        WHEN "H"
           LET g_errno = 'sub-01348'
     END CASE

     IF NOT cl_null(g_errno) THEN
        INITIALIZE g_errparam TO NULL
        LET g_errparam.code = g_errno
        LET g_errparam.extend = g_xmdk_m.xmdkdocno
        LET g_errparam.popup = TRUE
        CALL cl_err()
        LET g_errno = NULL
        CALL axmt600_set_act_visible()
        CALL axmt600_set_act_no_visible()
        CALL axmt600_show()
        RETURN FALSE
     END IF
   END IF      
   #160818-00017#43-e
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="axmt600.other_function" readonly="Y" >}
################################################################################
# Descriptions...: 帶出出貨單資料
# Memo...........:
# Usage..........: CALL axmt600_xmdk005_default()
#                  
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 140407 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt600_xmdk005_default()
   DEFINE l_xmdk000     LIKE xmdk_t.xmdk000
   DEFINE l_xmdk005     LIKE xmdk_t.xmdk005
   DEFINE l_xmdk035     LIKE xmdk_t.xmdk035  #151124-00004#1  2015/12/11 By earl  add
   
   LET l_xmdk000 = ''
   LET l_xmdk005 = ''
   LET l_xmdk035 = ''  #151124-00004#1  2015/12/11 By earl  add
   
   SELECT xmdk000,xmdk005,
          xmdk035,     #151124-00004#1  2015/12/11 By earl  add
          xmdk006,xmdk007,xmdk008,xmdk009,
          xmdk030,
          xmdk010,xmdk011,xmdk012,xmdk013,xmdk014,
          xmdk015,xmdk016,xmdk017,xmdk018,xmdk037,
          xmdk042,xmdk043,xmdk044,xmdk045,
          xmdk031,xmdk033,
          #xmdk036,      #160202-00011 mark
          xmdk202,
          xmdk003,xmdk004                #150408---earl---add
          #xmdk087         #add by lixiang 2015/12/30   #160801-00009#1 mark
     INTO l_xmdk000,l_xmdk005,
          l_xmdk035,   #151124-00004#1  2015/12/11 By earl  add
          g_xmdk_m.xmdk006,g_xmdk_m.xmdk007,g_xmdk_m.xmdk008,g_xmdk_m.xmdk009,
          g_xmdk_m.xmdk030,
          g_xmdk_m.xmdk010,g_xmdk_m.xmdk011,g_xmdk_m.xmdk012,g_xmdk_m.xmdk013,g_xmdk_m.xmdk014,     
          g_xmdk_m.xmdk015,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,g_xmdk_m.xmdk018,g_xmdk_m.xmdk037,
          g_xmdk_m.xmdk042,g_xmdk_m.xmdk043,g_xmdk_m.xmdk044,g_xmdk_m.xmdk045,
          g_xmdk_m.xmdk031,g_xmdk_m.xmdk033,
          #g_xmdk_m.xmdk036,    #160202-00011 mark
          g_xmdk_m.xmdk202,
          g_xmdk_m.xmdk003,g_xmdk_m.xmdk004   #150408---earl---add
          #g_xmdk_m.xmdk087    #add by lixiang 2015/12/30  #160801-00009#1 mark
     FROM xmdk_t
    WHERE xmdkent = g_enterprise
      AND xmdk000 IN ('1','2','4')
      AND xmdkdocno = g_xmdk_m.xmdk005

   IF l_xmdk000 = '4' AND cl_null(g_xmdk_m.xmdk030) THEN  #簽收單無銷售通路，回抓出貨單
      SELECT xmdk030
        INTO g_xmdk_m.xmdk030
        FROM xmdk_t
       WHERE xmdkent = g_enterprise
         AND xmdkdocno = l_xmdk005
   END IF

   #151124-00004#1  2015/12/11 By earl  add s
   #多角性質
   CALL axmt600_xmdk045_default(g_xmdk_m.xmdk045,g_xmdk_m.xmdk044,l_xmdk035) RETURNING g_xmdk_m.xmdk045
   #151124-00004#1  2015/12/11 By earl  add e

   CALL axmt600_get_exchange()
   
   CALL s_desc_get_person_desc(g_xmdk_m.xmdk003) RETURNING g_xmdk_m.xmdk003_desc      #150408---earl---add
   CALL s_desc_get_department_desc(g_xmdk_m.xmdk004) RETURNING g_xmdk_m.xmdk004_desc  #150408---earl---add
   
   CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk007) RETURNING g_xmdk_m.xmdk007_desc

   CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk008) RETURNING g_xmdk_m.xmdk008_desc   

   CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk009) RETURNING g_xmdk_m.xmdk009_desc
   
   CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk202) RETURNING g_xmdk_m.xmdk202_desc

   CALL s_desc_get_ooib002_desc(g_xmdk_m.xmdk010) RETURNING g_xmdk_m.xmdk010_desc
   
   CALL s_desc_get_acc_desc('238',g_xmdk_m.xmdk011) RETURNING g_xmdk_m.xmdk011_desc

   CALL s_desc_get_tax_desc1(g_site,g_xmdk_m.xmdk012) RETURNING g_xmdk_m.xmdk012_desc

   CALL s_desc_get_invoice_type_desc1(g_site,g_xmdk_m.xmdk015) RETURNING g_xmdk_m.xmdk015_desc

   CALL s_desc_get_currency_desc(g_xmdk_m.xmdk016) RETURNING g_xmdk_m.xmdk016_desc
   
   #160621-00003#3 20160629 modify by beckxie---S
   #CALL s_desc_get_acc_desc('275',g_xmdk_m.xmdk030) RETURNING g_xmdk_m.xmdk030_desc
   CALL s_desc_get_oojdl003_desc(g_xmdk_m.xmdk030) RETURNING g_xmdk_m.xmdk030_desc
   #160621-00003#3 20160629 modify by beckxie---E

   CALL s_desc_get_acc_desc('295',g_xmdk_m.xmdk031) RETURNING g_xmdk_m.xmdk031_desc

   CALL s_desc_get_acc_desc('209',g_xmdk_m.xmdk033) RETURNING g_xmdk_m.xmdk033_desc

   LET g_xmdk_m_o.* = g_xmdk_m.*
   DISPLAY BY NAME g_xmdk_m.*
   
END FUNCTION
################################################################################
# Descriptions...: 檢查單身是否有輸入出貨單號
# Memo...........:
# Usage..........: CALL axmt600_detail_count()
#                  
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 140305 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt600_detail_count()
   DEFINE l_num      LIKE type_t.num5
   DEFINE r_success  LIKE type_t.num5
   
   LET r_success = TRUE   
   LET l_num = 0
   
   IF NOT cl_null(g_xmdk_m.xmdkdocno) THEN         
      SELECT COUNT(xmdl001) INTO l_num
        FROM xmdl_t
       WHERE xmdlent = g_enterprise
         AND xmdldocno = g_xmdk_m.xmdkdocno
   END IF
   
   IF l_num > 0 THEN
      LET r_success = TRUE
   ELSE
      LET r_success = FALSE
   END IF
   
   RETURN r_success
END FUNCTION

PRIVATE FUNCTION axmt600_xmdl001_xmdl002_chk()
   DEFINE l_num        LIKE xmdl_t.xmdl018
   DEFINE r_success    LIKE type_t.num5
#  DEFINE l_seq        LIKE xmdl_t.xmdlseq   #160315-00002#1 mark
 
   LET r_success = TRUE 
  
   IF NOT cl_null(g_xmdl_d[l_ac].xmdl001) AND
      NOT cl_null(g_xmdl_d[l_ac].xmdl002) THEN

#160315-00002#1 mark str
#SA表示同一個出貨單+出貨項次應可以輸入多次,只需要檢查加總起來的數量不可超過可銷退量
#      #檢查該筆項次是否已輸入單身
#      LET l_seq = g_xmdl_d_t.xmdlseq
#      IF cl_null(l_seq) THEN
#         LET l_seq = g_xmdl_d[l_ac].xmdlseq
#      END IF
#
#      LET l_num = 0
#      SELECT COUNT(xmdlseq) INTO l_num
#        FROM xmdl_t
#       WHERE xmdlent = g_enterprise
#         AND xmdldocno = g_xmdk_m.xmdkdocno
#         AND xmdl001 = g_xmdl_d[l_ac].xmdl001
#         AND xmdl002 = g_xmdl_d[l_ac].xmdl002
#         AND xmdlseq <> l_seq    #排除該項次
#      
#      IF l_num > 0 THEN
#         INITIALIZE g_errparam TO NULL
#         LET g_errparam.code = 'axm-00245'   #該單據%1項次%2已存在此單身，不可重複輸入！
#         LET g_errparam.extend = ''
#         LET g_errparam.popup = TRUE
#         LET g_errparam.replace[1] = g_xmdl_d[l_ac].xmdl001 
#         LET g_errparam.replace[2] =  g_xmdl_d[l_ac].xmdl002
#         CALL cl_err()
#
#         LET r_success = FALSE
#         RETURN r_success
#      END IF
#160315-00002#1 mark end

      #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
      INITIALIZE g_chkparam.* TO NULL

      #設定g_chkparam.*的參數
      LET g_chkparam.arg1 = g_xmdl_d[l_ac].xmdl001
      LET g_chkparam.arg2 = g_xmdl_d[l_ac].xmdl002

      #呼叫檢查存在並帶值的library
      IF NOT cl_chk_exist("v_xmdlseq") THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
      
      #可銷退量不可以小於等於0
      LET l_num = 0
      CALL s_axmt600_return_max(g_xmdk_m.xmdkdocno,g_xmdl_d_t.xmdlseq,g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002) RETURNING l_num
      IF l_num <= 0 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'axm-00369'  #該單據%1項次%2可銷退量為%3，不可輸入！
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         LET g_errparam.replace[1] = g_xmdl_d[l_ac].xmdl001 
         LET g_errparam.replace[2] =  g_xmdl_d[l_ac].xmdl002 
         LET g_errparam.replace[3] =  l_num
         CALL cl_err()

         LET r_success = FALSE
         RETURN r_success
      END IF
      
   END IF
   
   RETURN r_success
END FUNCTION

PRIVATE FUNCTION axmt600_xmdl001_xmdl002_default()
   DEFINE r_success     LIKE type_t.num5
   DEFINE l_xmdk000     LIKE xmdk_t.xmdk000
   DEFINE l_xmdl001     LIKE xmdl_t.xmdl001
   DEFINE l_xmdl002     LIKE xmdl_t.xmdl002
   DEFINE l_xmdl014     LIKE xmdl_t.xmdl014  #160815-00023#1
   DEFINE l_xmdl015     LIKE xmdl_t.xmdl015  #160815-00023#1
   DEFINE l_xmdl052     LIKE xmdl_t.xmdl052  #160815-00023#1
   DEFINE l_sbas0043    LIKE type_t.chr500   #160815-00023#1
   DEFINE l_cnt         LIKE type_t.num5     #160815-00023#1
   
   LET r_success = TRUE

   IF NOT cl_null(g_xmdl_d[l_ac].xmdl001) AND NOT cl_null(g_xmdl_d[l_ac].xmdl002) THEN

      LET g_xmdl_d[l_ac].xmdl013 = 'N'  #多庫儲批
#150917 by whitney mark start
#      LET g_xmdl_d[l_ac].xmdl014 = ''   #庫位
#      LET g_xmdl_d[l_ac].xmdl015 = ''   #儲位
#150917 by whitney mark end
      
      SELECT xmdk000,
             xmdl003,xmdl004,xmdl005,
             xmdl006,xmdl007,xmdl008,xmdl009,xmdl010,                                       
             xmdl011,xmdl012,
             xmdl016,xmdl017,xmdl019,
             xmdl021,xmdl023,
             xmdl030,xmdl031,xmdl032,  #add by lixiang 2015/06/29         
             xmdl033,
             xmdl052,
             xmdl041,
             xmdl058,xmdl057, #160512-00004#2-add
             xmdl051,xmdl088,
             #價格資訊頁籤
             xmdl024,xmdl025,xmdl026,
             xmdl042,xmdl043,xmdl044,xmdl045,
             xmdl046,xmdl048,xmdl049,             
             xmdl087
        INTO l_xmdk000,
             g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,g_xmdl_d[l_ac].xmdl005,
             g_xmdl_d[l_ac].xmdl006,g_xmdl_d[l_ac].xmdl007,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,g_xmdl_d[l_ac].xmdl010,
             g_xmdl_d[l_ac].xmdl011,g_xmdl_d[l_ac].xmdl012,
             g_xmdl_d[l_ac].xmdl016,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl019,
             g_xmdl_d[l_ac].xmdl021,g_xmdl_d[l_ac].xmdl023,
             g_xmdl_d[l_ac].xmdl030,g_xmdl_d[l_ac].xmdl031,g_xmdl_d[l_ac].xmdl032, #add by lixiang 2015/06/29   
             g_xmdl_d[l_ac].xmdl033,
             g_xmdl_d[l_ac].xmdl052,
             g_xmdl_d[l_ac].xmdl041,
             g_xmdl_d[l_ac].xmdl058,g_xmdl_d[l_ac].xmdl057,  #160512-00004#2-add
             g_xmdl_d[l_ac].xmdl051,g_xmdl_d[l_ac].xmdl088,
             #價格資訊頁籤
             g_xmdl2_d[l_ac].xmdl024,g_xmdl2_d[l_ac].xmdl025,g_xmdl2_d[l_ac].xmdl026,
             g_xmdl2_d[l_ac].xmdl042,g_xmdl2_d[l_ac].xmdl043,g_xmdl2_d[l_ac].xmdl044,g_xmdl2_d[l_ac].xmdl045,
             g_xmdl2_d[l_ac].xmdl046,g_xmdl2_d[l_ac].xmdl048,g_xmdl2_d[l_ac].xmdl049,
             g_xmdl2_d[l_ac].xmdl087
             
        FROM xmdk_t,xmdl_t
       WHERE xmdkent = xmdlent AND xmdlent = g_enterprise
         AND xmdkdocno = xmdldocno AND xmdldocno = g_xmdl_d[l_ac].xmdl001
         AND xmdlseq = g_xmdl_d[l_ac].xmdl002

      #來源為簽收單
      IF l_xmdk000 <> '1' AND l_xmdk000 <> '2' THEN
         #抓出貨單
         LET l_xmdl001 = ''
         LET l_xmdl002 = ''
         SELECT xmdl001,xmdl002 INTO l_xmdl001,l_xmdl002
           FROM xmdl_t
          WHERE xmdlent = g_enterprise
            AND xmdldocno = g_xmdl_d[l_ac].xmdl001
            AND xmdlseq = g_xmdl_d[l_ac].xmdl002
      
         SELECT xmdl023,xmdl041,xmdl087
           INTO g_xmdl_d[l_ac].xmdl023,g_xmdl_d[l_ac].xmdl041,g_xmdl2_d[l_ac].xmdl087
           FROM xmdl_t
          WHERE xmdlent = g_enterprise
            AND xmdldocno = l_xmdl001
            AND xmdlseq = l_xmdl002
      END IF

      CALL s_desc_get_item_desc(g_xmdl_d[l_ac].xmdl008) RETURNING g_xmdl_d[l_ac].xmdl008_desc,g_xmdl_d[l_ac].xmdl008_desc_desc
      CALL s_desc_get_acc_desc('221',g_xmdl_d[l_ac].xmdl011) RETURNING g_xmdl_d[l_ac].xmdl011_desc      
      CALL s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl017) RETURNING g_xmdl_d[l_ac].xmdl017_desc
      CALL s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl019) RETURNING g_xmdl_d[l_ac].xmdl019_desc
      
#150917 by whitney mark start
#      CALL s_desc_get_stock_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014) RETURNING g_xmdl_d[l_ac].xmdl014_desc
#      CALL s_desc_get_locator_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015) RETURNING g_xmdl_d[l_ac].xmdl015_desc
#150917 by whitney mark end
      CALL s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl021) RETURNING g_xmdl_d[l_ac].xmdl021_desc
  
      #add by lixiang 2015/06/18--s--
      CALL s_desc_get_project_desc(g_xmdl_d[l_ac].xmdl030) RETURNING g_xmdl_d[l_ac].xmdl030_desc
      DISPLAY BY NAME g_xmdl_d[l_ac].xmdl030_desc
       
      CALL s_desc_get_wbs_desc(g_xmdl_d[l_ac].xmdl030,g_xmdl_d[l_ac].xmdl031) RETURNING g_xmdl_d[l_ac].xmdl031_desc
      DISPLAY BY NAME g_xmdl_d[l_ac].xmdl031_desc
       
      CALL s_desc_get_activity_desc(g_xmdl_d[l_ac].xmdl030,g_xmdl_d[l_ac].xmdl032) RETURNING g_xmdl_d[l_ac].xmdl032_desc
      DISPLAY BY NAME g_xmdl_d[l_ac].xmdl032_desc
      #add by lixiang 2015/06/18--e-- 
      
      #ming 20150703 add ---------------------------(S) 
      CALL axmt600_get_invoice_num(g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002)
           RETURNING g_xmdl2_d[l_ac].xmdl048,g_xmdl2_d[l_ac].xmdl049
      DISPLAY BY NAME g_xmdl2_d[l_ac].xmdl048,g_xmdl2_d[l_ac].xmdl049
      #ming 20150703 add ---------------------------(E) 
      
      #160829-00022#1  add -------------------------- (S)
      IF NOT cl_null(g_xmdl_d[l_ac].xmdl003) THEN
         SELECT xmda033 INTO g_xmdl_d[l_ac].xmda033
           FROM xmda_t
          WHERE xmdaent = g_enterprise
            AND xmdadocno = g_xmdl_d[l_ac].xmdl003      
      END IF      
      #160829-00022#1  add -------------------------- (E) 
      
      CALL axmt600_xmdl050_ref()
      
      #20151102 by stellar remark 151102-00010#1 ----- (S)
      #銷退純折讓 倉庫預設為出貨倉庫
      IF NOT cl_null(g_xmdk_m.xmdk082) AND g_xmdk_m.xmdk082 = '4' THEN
         DECLARE axmt600_xmdl001_xmdl002_default_xmdm_cs CURSOR FOR
          SELECT xmdm005,xmdm006,xmdm007 
            FROM xmdm_t
           WHERE xmdment = g_enterprise
             AND xmdmdocno = g_xmdl_d[l_ac].xmdl001
             AND xmdmseq = g_xmdl_d[l_ac].xmdl002
           ORDER BY xmdmseq1
         FOREACH axmt600_xmdl001_xmdl002_default_xmdm_cs INTO g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016
            EXIT FOREACH
         END FOREACH
         
         CALL s_desc_get_stock_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014) RETURNING g_xmdl_d[l_ac].xmdl014_desc
         CALL s_desc_get_locator_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015) RETURNING g_xmdl_d[l_ac].xmdl015_desc
      END IF
      #20151102 by stellar remark 151102-00010#1 ----- (E)
      #160815-00023#1--s
      SELECT xmdl014,xmdl015,xmdl052
        INTO l_xmdl014,l_xmdl015,l_xmdl052
        FROM xmdl_t
       WHERE xmdlent = g_enterprise
         AND xmdldocno = g_xmdl_d[l_ac].xmdl001 AND xmdlseq = g_xmdl_d[l_ac].xmdl002
      CALL cl_get_para(g_enterprise,g_xmdl_d[l_ac].xmdlsite,'S-BAS-0043') RETURNING l_sbas0043
      SELECT count(*) INTO l_cnt
        FROM inac_t
       WHERE inacent = g_enterprise AND inacsite = g_xmdl_d[l_ac].xmdlsite
         AND inac001 = l_xmdl014 AND inac003 = l_sbas0043
      IF l_cnt > 0 THEN
         LET g_xmdl_d[l_ac].xmdl014 = l_xmdl014
         LET g_xmdl_d[l_ac].xmdl015 = l_xmdl015
         LET g_xmdl_d[l_ac].xmdl052 = l_xmdl052
         CALL s_desc_get_stock_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014) RETURNING g_xmdl_d[l_ac].xmdl014_desc
         CALL s_desc_get_locator_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015) RETURNING g_xmdl_d[l_ac].xmdl015_desc
      END IF
      #160815-00023#1--e
      
      LET g_xmdl_d_o.* = g_xmdl_d[l_ac].*
      LET g_xmdl2_d_o.* = g_xmdl2_d[l_ac].*
      
   END IF
   
   RETURN r_success
END FUNCTION

PRIVATE FUNCTION axmt600_xmdl005_count()
   DEFINE l_n          LIKE type_t.num5
   #若只有一筆項序自動帶出
   IF NOT cl_null(g_xmdl_d[l_ac].xmdl003) AND
      NOT cl_null(g_xmdl_d[l_ac].xmdl004) THEN
      
      LET l_n = 0
      
      SELECT COUNT(xmddseq1) INTO l_n
        FROM xmdd_t
       WHERE xmddent = g_enterprise
         AND xmdddocno = g_xmdl_d[l_ac].xmdl003
         AND xmddseq = g_xmdl_d[l_ac].xmdl004
      
      IF l_n = 1 THEN
         SELECT xmddseq1 INTO g_xmdl_d[l_ac].xmdl005
           FROM xmdd_t
          WHERE xmddent = g_enterprise
            AND xmdddocno = g_xmdl_d[l_ac].xmdl003
            AND xmddseq = g_xmdl_d[l_ac].xmdl004
      END IF
   END IF
   
   LET g_xmdl_d_o.xmdl005 = g_xmdl_d[l_ac].xmdl005
END FUNCTION

PRIVATE FUNCTION axmt600_xmdl050_ref()
#160705-00001 by whitney mark start
#   DEFINE l_gzcb004     LIKE gzcb_t.gzcb004
#   LET l_gzcb004 = ''
#   SELECT gzcb004
#     INTO l_gzcb004
#     FROM gzcb_t
#    WHERE gzcb001 = '24'
#      AND gzcb002 = g_prog
#160705-00001 by whitney mark end
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_gzcb004  #160705-00001 by whitney modify l_gzcb004 -> g_gzcb004
   LET g_ref_fields[2] = g_xmdl_d[l_ac].xmdl050
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001=? AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmdl_d[l_ac].xmdl050_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmdl_d[l_ac].xmdl050_desc
END FUNCTION

################################################################################
# Descriptions...: 理由碼check
# Memo...........:
# Usage..........: CALL axmt600_xmdl050_chk(p_xmdl050,p_prog)
#                  
# Input parameter: p_xmdl050   理由碼
#                : p_prog      程式代號
# Return code....: r_success   執行結果(TRUE/FALSE)
#                : 
# Date & Author..: 140414 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt600_xmdl050_chk(p_xmdl050,p_prog)
   DEFINE p_xmdl050     LIKE xmdl_t.xmdl050
   DEFINE p_prog        LIKE type_t.chr10
#   DEFINE l_gzcb004     LIKE gzcb_t.gzcb004  #160705-00001 by whitney mark
   DEFINE r_success     LIKE type_t.num5
   
   LET r_success = TRUE
#160705-00001 by whitney mark start
#   LET l_gzcb004 = ''
#   SELECT gzcb004
#     INTO l_gzcb004
#     FROM gzcb_t
#    WHERE gzcb001 = '24'
#      AND gzcb002 = p_prog
#160705-00001 by whitney mark end
   CALL s_azzi650_chk_exist(g_gzcb004,p_xmdl050) RETURNING r_success  #160705-00001 by whitney modify l_gzcb004 -> g_gzcb004
   IF NOT r_success THEN
      RETURN r_success
   END IF
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 檢查來源單號
# Memo...........:
# Usage..........: CALL axmt600_ship_chk(p_slip,p_type)
#                  RETURNING r_success
# Input parameter: p_slip     出貨/簽收單號
#                : p_type     1.單頭2.單身
# Return code....: r_success  執行結果
#                : 
# Date & Author..: 140701 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt600_ship_chk(p_slip,p_type)
   DEFINE p_slip       LIKE xmdk_t.xmdkdocno   #出貨/簽收單號
   DEFINE p_type       LIKE type_t.chr1        #1.單頭2.單身

   DEFINE l_gzze003    LIKE gzze_t.gzze003
   DEFINE l_errno      DYNAMIC ARRAY OF LIKE type_t.chr10
   DEFINE l_errnum     LIKE type_t.num5

   DEFINE r_success    LIKE type_t.num5
   
   DEFINE l_xmdk RECORD
      xmdkstus   LIKE xmdk_t.xmdkstus,   #狀態碼
      xmdk000    LIKE xmdk_t.xmdk000,    #單據性質
      xmdk002    LIKE xmdk_t.xmdk002,    #出貨性質
      xmdk007    LIKE xmdk_t.xmdk007,    #訂單客戶
      xmdk008    LIKE xmdk_t.xmdk008,    #收款客戶
      xmdk009    LIKE xmdk_t.xmdk009,    #收貨客戶
      xmdk010    LIKE xmdk_t.xmdk010,    #收款條件
      xmdk011    LIKE xmdk_t.xmdk011,    #交易條件
      xmdk012    LIKE xmdk_t.xmdk012,    #稅別
      xmdk015    LIKE xmdk_t.xmdk015,    #發票類型
      xmdk016    LIKE xmdk_t.xmdk016,    #幣別
      xmdk018    LIKE xmdk_t.xmdk018,    #取價方式
      xmdk042    LIKE xmdk_t.xmdk042,    #內外銷
      xmdk043    LIKE xmdk_t.xmdk043,    #匯率計算基準
      xmdk044    LIKE xmdk_t.xmdk044,    #多角流程代碼
      xmdk045    LIKE xmdk_t.xmdk045,    #多角性質
      xmdk083    LIKE xmdk_t.xmdk083,
      xmdk202    LIKE xmdk_t.xmdk202,    #發票客戶
      xmdk035    LIKE xmdk_t.xmdk035     #多角流程序號   #151124-00004#1  2015/12/11 By earl  add
   END RECORD   
   
   #151210-00009#1  2015/12/30 By earl s
   DEFINE l_sql      STRING
   DEFINE l_slip1    LIKE ooba_t.ooba001
   DEFINE l_slip2    LIKE ooba_t.ooba001
   DEFINE l_success  LIKE type_t.num5
   #151210-00009#1  2015/12/30 By earl e
   
   DEFINE l_num    LIKE type_t.num10
   
   LET r_success = TRUE
   LET l_errnum = 0
   INITIALIZE l_errno TO NULL

   CALL cl_err_collect_init()

   #檢核前後置單別的合理性
   IF NOT s_aooi210_check_doc(g_site,'',p_slip,g_xmdk_m.xmdkdocno,'4','') THEN
      LET r_success = FALSE
   END IF
   
   IF NOT axmt600_xmdk082_chk(p_slip,g_xmdk_m.xmdk082) THEN
      LET r_success = FALSE
   END IF
   
   INITIALIZE l_xmdk.* TO NULL
   SELECT xmdkstus,xmdk000,
          xmdk002,xmdk007,xmdk008,xmdk009,
          xmdk010,xmdk011,xmdk012,xmdk015,xmdk016,xmdk018,
          xmdk042,xmdk043,xmdk044,xmdk045,xmdk083,
          xmdk202,
          xmdk035 #多角流程序號   #151124-00004#1  2015/12/11 By earl  add
     INTO l_xmdk.xmdkstus,l_xmdk.xmdk000,
          l_xmdk.xmdk002,l_xmdk.xmdk007,l_xmdk.xmdk008,l_xmdk.xmdk009,
          l_xmdk.xmdk010,l_xmdk.xmdk011,l_xmdk.xmdk012,l_xmdk.xmdk015,l_xmdk.xmdk016,l_xmdk.xmdk018,
          l_xmdk.xmdk042,l_xmdk.xmdk043,l_xmdk.xmdk044,l_xmdk.xmdk045,l_xmdk.xmdk083,
          l_xmdk.xmdk202,
          l_xmdk.xmdk035 #多角流程序號   #151124-00004#1  2015/12/11 By earl  add
     FROM xmdk_t
     WHERE xmdkent = g_enterprise
       AND xmdksite = g_site
       AND xmdkdocno = p_slip
       AND xmdk000 IN ('1','2','4')   #出貨、無訂單出貨、簽收

   IF SQLCA.sqlcode THEN
      IF SQLCA.sqlcode = 100 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'sub-00029'  #查無資料
         LET g_errparam.extend = p_slip
         LET g_errparam.popup = TRUE
         CALL cl_err()
         
         LET r_success = FALSE
      ELSE
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = p_slip
         LET g_errparam.popup = TRUE
         CALL cl_err()
         
         LET r_success = FALSE
      END IF
   END IF
   
   #151124-00004#1  2015/12/11 By earl  add s
   #多角性質
   CALL axmt600_xmdk045_default(l_xmdk.xmdk045,l_xmdk.xmdk044,l_xmdk.xmdk035) RETURNING l_xmdk.xmdk045
   #151124-00004#1  2015/12/11 By earl  add e
   
   CASE l_xmdk.xmdk000
      WHEN '4'   #簽收單
      
         CALL cl_getmsg('axm-00606',g_dlang) RETURNING l_gzze003   #出貨簽收單維護作業axmt580
      
         IF l_xmdk.xmdkstus <> 'Y' THEN
            LET l_errnum = l_errnum + 1
#            LET l_errno[l_errnum] = 'axm-00399'       #該單據未確認！   #160318-00005#50  mark
            LET l_errno[l_errnum] = 'sub-01332'       #該單據未確認！    #160318-00005#50  add
         END IF

         IF l_xmdk.xmdk007 <> g_xmdk_m.xmdk007 AND p_type = '2' THEN
            LET l_errnum = l_errnum + 1
            LET l_errno[l_errnum] = 'axm-00400'       #簽收單客戶編號與單頭資料不符！
         END IF

         IF l_xmdk.xmdk008 <> g_xmdk_m.xmdk008 AND p_type = '2' THEN
            LET l_errnum = l_errnum + 1
            LET l_errno[l_errnum] = 'axm-00401'       #簽收單收款客戶與單頭資料不符！
         END IF

         IF l_xmdk.xmdk009 <> g_xmdk_m.xmdk009 AND p_type = '2' THEN
            LET l_errnum = l_errnum + 1
            LET l_errno[l_errnum] = 'axm-00402'       #簽收單收貨客戶與單頭資料不符！
         END IF

         IF l_xmdk.xmdk202 <> g_xmdk_m.xmdk202 AND p_type = '2' THEN
            LET l_errnum = l_errnum + 1
            LET l_errno[l_errnum] = 'axm-00508'       #簽收單收貨客戶與單頭資料不符！
         END IF

         IF l_xmdk.xmdk010 <> g_xmdk_m.xmdk010 AND p_type = '2' THEN
            LET l_errnum = l_errnum + 1
            LET l_errno[l_errnum] = 'axm-00403'       #簽收單收款條件與單頭資料不符！
         END IF
         
         IF l_xmdk.xmdk011 <> g_xmdk_m.xmdk011 AND p_type = '2' THEN
            LET l_errnum = l_errnum + 1
            LET l_errno[l_errnum] = 'axm-00404'       #簽收單交易條件與單頭資料不符！
         END IF
         
         IF l_xmdk.xmdk012 <> g_xmdk_m.xmdk012 AND p_type = '2' THEN
            LET l_errnum = l_errnum + 1
            LET l_errno[l_errnum] = 'axm-00405'       #簽收單稅別與單頭資料不符！
         END IF
         
         IF l_xmdk.xmdk015 <> g_xmdk_m.xmdk015 AND p_type = '2' THEN
            LET l_errnum = l_errnum + 1
            LET l_errno[l_errnum] = 'axm-00406'       #簽收單發票類型與單頭資料不符！
         END IF
         
         IF l_xmdk.xmdk016 <> g_xmdk_m.xmdk016 AND p_type = '2' THEN
            LET l_errnum = l_errnum + 1
            LET l_errno[l_errnum] = 'axm-00407'       #簽收單幣別與單頭資料不符！
         END IF
         
         IF l_xmdk.xmdk018 <> g_xmdk_m.xmdk018 AND p_type = '2' THEN
            LET l_errnum = l_errnum + 1
            LET l_errno[l_errnum] = 'axm-00526'       #簽收單幣別與單頭資料不符！
         END IF
         
         IF l_xmdk.xmdk042 <> g_xmdk_m.xmdk042 AND p_type = '2' THEN
            LET l_errnum = l_errnum + 1
            LET l_errno[l_errnum] = 'axm-00356'       #單據內外銷與單頭資料不符！
         END IF
         
         IF l_xmdk.xmdk045 <> g_xmdk_m.xmdk045 AND p_type = '2' THEN
            LET l_errnum = l_errnum + 1
            LET l_errno[l_errnum] = 'axm-00507'       #單據對應的多角性質與單頭多角性質不一致！
         END IF

         IF l_xmdk.xmdk044 <> g_xmdk_m.xmdk044 AND p_type = '2' THEN
            LET l_errnum = l_errnum + 1
            LET l_errno[l_errnum] = 'axm-00272'  #單身多角流程代碼需一致！
         END IF

      OTHERWISE  #出貨單、無訂單出貨單
         
         IF l_xmdk.xmdk000 = '1' THEN
            CALL cl_getmsg('axm-00601',g_dlang) RETURNING l_gzze003   #出貨單維護作業axmt540
         ELSE
            CALL cl_getmsg('axm-00605',g_dlang) RETURNING l_gzze003   #無訂單出貨單維護作業axmt541
         END IF
      
         IF l_xmdk.xmdk002 = '3' THEN
            LET l_errnum = l_errnum + 1
            LET l_errno[l_errnum] = 'axm-00353'       #出貨單的出貨性質為"3:簽收訂單"，請輸入簽收單
         END IF

         IF l_xmdk.xmdkstus <> 'S' THEN
            LET l_errnum = l_errnum + 1
            LET l_errno[l_errnum] = 'axm-00600'       #該單據未過帳！
         END IF

         IF l_xmdk.xmdk007 <> g_xmdk_m.xmdk007 AND p_type = '2' THEN
            LET l_errnum = l_errnum + 1
            LET l_errno[l_errnum] = 'axm-00330'       #出貨單客戶編號與單頭資料不符！
         END IF

         IF l_xmdk.xmdk008 <> g_xmdk_m.xmdk008 AND p_type = '2' THEN
            LET l_errnum = l_errnum + 1
            LET l_errno[l_errnum] = 'axm-00331'       #出貨單收款客戶與單頭資料不符！
         END IF

         IF l_xmdk.xmdk009 <> g_xmdk_m.xmdk009 AND p_type = '2' THEN
            LET l_errnum = l_errnum + 1
            LET l_errno[l_errnum] = 'axm-00332'       #出貨單收貨客戶與單頭資料不符！
         END IF

         IF l_xmdk.xmdk010 <> g_xmdk_m.xmdk010 AND p_type = '2' THEN
            LET l_errnum = l_errnum + 1
            LET l_errno[l_errnum] = 'axm-00333'       #出貨單收款條件與單頭資料不符！
         END IF

         IF l_xmdk.xmdk011 <> g_xmdk_m.xmdk011 AND p_type = '2' THEN
            LET l_errnum = l_errnum + 1
            LET l_errno[l_errnum] = 'axm-00334'       #出貨單交易條件與單頭資料不符！
         END IF

         IF l_xmdk.xmdk012 <> g_xmdk_m.xmdk012 AND p_type = '2' THEN
            LET l_errnum = l_errnum + 1
            LET l_errno[l_errnum] = 'axm-00335'       #出貨單稅別與單頭資料不符！
         END IF

         IF l_xmdk.xmdk015 <> g_xmdk_m.xmdk015 AND p_type = '2' THEN
            LET l_errnum = l_errnum + 1
            LET l_errno[l_errnum] = 'axm-00336'       #出貨單發票類型與單頭資料不符！
         END IF

         IF l_xmdk.xmdk016 <> g_xmdk_m.xmdk016 AND p_type = '2' THEN
            LET l_errnum = l_errnum + 1
            LET l_errno[l_errnum] = 'axm-00337'       #出貨單幣別與單頭資料不符！
         END IF

         IF l_xmdk.xmdk018 <> g_xmdk_m.xmdk018 AND p_type = '2' THEN
            LET l_errnum = l_errnum + 1
            LET l_errno[l_errnum] = 'axm-00527'       #出貨單取價方式與單頭資料不符！
         END IF

         IF l_xmdk.xmdk042 <> g_xmdk_m.xmdk042 AND p_type = '2' THEN
            LET l_errnum = l_errnum + 1
            LET l_errno[l_errnum] = 'axm-00356'       #單據內外銷與單頭資料不符！
         END IF

         IF l_xmdk.xmdk045 <> g_xmdk_m.xmdk045 AND p_type = '2' THEN
            LET l_errnum = l_errnum + 1
            LET l_errno[l_errnum] = 'axm-00507'       #單據對應的多角性質與單頭多角性質不一致！
         END IF

         IF l_xmdk.xmdk202 <> g_xmdk_m.xmdk202 AND p_type = '2' THEN
            LET l_errnum = l_errnum + 1
            LET l_errno[l_errnum] = 'axm-00509'       #出貨單發票客戶與單頭資料不符！
         END IF

         IF l_xmdk.xmdk044 <> g_xmdk_m.xmdk044 AND p_type = '2' THEN
            LET l_errnum = l_errnum + 1
            LET l_errno[l_errnum] = 'axm-00272'  #單身多角流程代碼需一致！
         END IF

   END CASE

   FOR l_num = 1 TO l_errno.getlength()
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = l_errno[l_num]
      LET g_errparam.extend = p_slip
      LET g_errparam.popup = TRUE
      #160318-00005#50 --s add
      CASE g_errparam.code
         WHEN 'sub-01332'
            LET g_errparam.replace[1] = 'axmt580'
            LET g_errparam.replace[2] = cl_get_progname('axmt580',g_lang,"2")
            LET g_errparam.exeprog = 'axmt580'
      END CASE
      #160318-00005#50 --e add
      LET g_errparam.replace[1] = l_gzze003

      CALL cl_err()

      LET r_success = FALSE
   END FOR

   #客戶編號檢查
   IF NOT cl_null(l_xmdk.xmdk007) THEN               
      IF NOT s_axmt540_client_chk(g_xmdk_m.xmdkdocno,'1',l_xmdk.xmdk007,'') THEN
         LET r_success = FALSE
      END IF
   END IF

   #多角check
   #多角性質為："2.銷售多角,5.中間交易,7:代採購出貨"
   IF l_xmdk.xmdk045 = '2' OR
      l_xmdk.xmdk045 = '5' OR
      l_xmdk.xmdk045 = '7' THEN
      
      IF NOT axmt600_xmdk045_xmdk082_chk(l_xmdk.xmdk045,g_xmdk_m.xmdk082) THEN
         LET r_success = FALSE
      END IF
      
      IF cl_null(l_xmdk.xmdk044) THEN          #"多角流程代碼"為空白,則不可於出貨單身被挑選
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'axm-00496'     #訂單多角性質為"多角銷售"時，"多角流程代碼"不可為空！
         LET g_errparam.extend = p_slip
         LET g_errparam.popup = TRUE

         LET g_errparam.replace[1] = l_gzze003
         
         CALL cl_err()

         LET r_success = FALSE
      #151124-00004#1  2015/12/11 By earl  mark s        修正多角銷退邏輯，每站皆可新增銷退單
      #ELSE
      #   INITIALIZE g_chkparam.* TO NULL
      #
      #   #設定g_chkparam.*的參數
      #   LET g_chkparam.arg1 = l_xmdk.xmdk044
      #   LET g_chkparam.arg2 = g_site
      #
      #   #呼叫檢查存在並帶值的library
      #   IF NOT cl_chk_exist("v_icaa001_3") THEN
      #      LET r_success = FALSE
      #   END IF
      #151124-00004#1  2015/12/11 By earl  mark e        修正多角銷退邏輯，每站皆可新增銷退單
      END IF
      
      IF l_xmdk.xmdk083 <> 'Y' THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'axm-00517'     #來源需為"多角貿易已拋轉"之單據！
         LET g_errparam.extend = p_slip
         LET g_errparam.popup = TRUE
         
         LET g_errparam.replace[1] = l_gzze003
         
         CALL cl_err()

         LET r_success = FALSE
      END IF      
   END IF

   #151210-00009#1  2015/12/30 By earl s
   IF NOT cl_null(g_xmdk_m.xmdkdocno) THEN
      IF g_aic_doc THEN
         LET l_slip1 = ''
         LET l_slip2 = ''
         CALL s_aooi200_get_slip(g_xmdk_m.xmdkdocno) RETURNING l_success,l_slip1
         CALL s_aooi200_get_slip(p_slip) RETURNING l_success,l_slip2

         LET l_sql = "SELECT COUNT(*)",
                     "  FROM icab_t,icac_t",
                     " WHERE icabent = icacent AND icacent = ",g_enterprise,
                     "   AND icab001 = icac001",
                     "   AND icab002 = icac002",
                     "   AND icab003 = '",g_site,"'",
                     "   AND icac009 = '",l_slip1,"'"
         PREPARE axmt600_ship_pre1 FROM l_sql

         LET l_sql = l_sql," AND (icac008 = '",l_slip2,"' OR icac007 = '",l_slip2,"' OR icac015 = '",l_slip2,"')"
         PREPARE axmt600_ship_pre2 FROM l_sql

         LET l_num = 0
         EXECUTE axmt600_ship_pre1 INTO l_num
         
         IF l_num > 0 THEN
            LET l_num = 0
            EXECUTE axmt600_ship_pre2 INTO l_num
            IF l_num = 0 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "aic-00211"   #多角貿易設定為"多角單據流水號保持一致"時前後單別需存在對應關係！
               LET g_errparam.extend = ""
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET r_success = FALSE
            END IF

         END IF

      END IF
   END IF
   #151210-00009#1  2015/12/30 By earl e

   CALL cl_err_collect_show()
   RETURN r_success 
END FUNCTION

PRIVATE FUNCTION axmt600_xmdl_display()
LET g_xmdl2_d[l_ac].xmdlseq = g_xmdl_d[l_ac].xmdlseq   #項次
LET g_xmdl2_d[l_ac].xmdl0071 = g_xmdl_d[l_ac].xmdl007  #子料件特性
LET g_xmdl2_d[l_ac].xmdl0081 = g_xmdl_d[l_ac].xmdl008  #料件編號

LET g_xmdl2_d[l_ac].xmdl0091 = g_xmdl_d[l_ac].xmdl009  #產品特徵
LET g_xmdl2_d[l_ac].xmdl0091_desc = g_xmdl_d[l_ac].xmdl009_desc  #產品特徵說明

LET g_xmdl2_d[l_ac].xmdl0111 = g_xmdl_d[l_ac].xmdl011  #作業編號
LET g_xmdl2_d[l_ac].xmdl0121 = g_xmdl_d[l_ac].xmdl012  #製成序

LET g_xmdl2_d[l_ac].xmdl0171 = g_xmdl_d[l_ac].xmdl017  #出貨單位
LET g_xmdl2_d[l_ac].xmdl0171_desc = g_xmdl_d[l_ac].xmdl017_desc  #單位名稱
LET g_xmdl2_d[l_ac].xmdl0181 = g_xmdl_d[l_ac].xmdl018  #數量

LET g_xmdl2_d[l_ac].xmdl0211 = g_xmdl_d[l_ac].xmdl021  #計價單位
LET g_xmdl2_d[l_ac].xmdl0211_desc = g_xmdl_d[l_ac].xmdl021_desc  #單位名稱
LET g_xmdl2_d[l_ac].xmdl0221 = g_xmdl_d[l_ac].xmdl022  #計價數量

LET g_xmdl2_d[l_ac].xmdl0081_desc = g_xmdl_d[l_ac].xmdl008_desc  #品名
LET g_xmdl2_d[l_ac].xmdl0081_desc_desc = g_xmdl_d[l_ac].xmdl008_desc_desc  #規格
END FUNCTION

################################################################################
# Descriptions...: 銷退單過帳input
# Memo...........:
# Usage..........: CALL axmt600_post_input()
#                  RETURNING r_success
# Input parameter: 
#                : 
# Return code....: r_success  執行結果
#                : 
# Date & Author..: 140729 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt600_post_input()
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_para_data     LIKE type_t.chr80          #接參數用
   
   LET r_success = TRUE
   
   INPUT BY NAME g_xmdk_m.xmdk001 ATTRIBUTE(WITHOUT DEFAULTS)

      BEFORE INPUT         
         IF cl_null(g_xmdk_m.xmdk001) THEN
            LET g_xmdk_m.xmdk001 = g_today
         END IF
         DISPLAY BY NAME g_xmdk_m.xmdk001

      AFTER FIELD xmdk001
         IF NOT cl_null(g_xmdk_m.xmdk001) THEN
            #151120-00003#1 20151120 mark by beckxie---S
            #IF g_xmdk_m.xmdk001 < g_xmdk_m.xmdkdocdt THEN
            #   INITIALIZE g_errparam TO NULL
            #   LET g_errparam.code = 'axm-00267'   #扣帳日期不可小於單據日期！
            #   LET g_errparam.extend = g_xmdk_m.xmdk001
            #   LET g_errparam.popup = TRUE
            #   CALL cl_err()
            #
            #   LET g_xmdk_m.xmdk001 = g_xmdk_m_t.xmdk001
            #   NEXT FIELD CURRENT
            #END IF
            #151120-00003#1 20151120 mark by beckxie---E      
            CALL cl_get_para(g_enterprise,g_site,'S-MFG-0031') RETURNING l_para_data
            IF g_xmdk_m.xmdk001 <= l_para_data THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00619'   #銷退日期小於關帳日期，請重新輸入！
               LET g_errparam.extend = g_xmdk_m.xmdk001
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_xmdk_m.xmdk001 = g_xmdk_m_t.xmdk001
               NEXT FIELD CURRENT
            END IF
         END IF
            
     AFTER INPUT
         IF INT_FLAG THEN
            EXIT INPUT
         END IF

         ON ACTION accept
            ACCEPT INPUT

         ON ACTION cancel
            LET INT_FLAG = TRUE
            EXIT INPUT

         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT INPUT

         ON ACTION close
            LET INT_FLAG = TRUE
            EXIT INPUT

   END INPUT

   IF INT_FLAG THEN
      LET INT_FLAG = FALSE
      LET r_success = FALSE
      RETURN r_success
   END IF

   UPDATE xmdk_t
      SET xmdk001 = g_xmdk_m.xmdk001
    WHERE xmdkent = g_enterprise
      AND xmdkdocno = g_xmdk_m.xmdkdocno

   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE:"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      LET r_success = FALSE
      RETURN r_success
   END IF
  
   RETURN r_success 
END FUNCTION

################################################################################
# Descriptions...: 客戶編號帶值
# Memo...........: 自動帶出客戶預設資料
# Usage..........: CALL axmt600_xmdk007_default()
#                  
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 140622 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt600_xmdk007_default()
   DEFINE l_xmdk       RECORD
      xmdk003             LIKE xmdk_t.xmdk003,   #業務人員   #2015/03/04 by earl add
      xmdk004             LIKE xmdk_t.xmdk004,   #業務部門   #2015/03/04 by earl add
      
      xmdk010             LIKE xmdk_t.xmdk010,   #收款條件
      xmdk011             LIKE xmdk_t.xmdk011,   #交易條件
      xmdk012             LIKE xmdk_t.xmdk012,   #稅別
      xmdk015             LIKE xmdk_t.xmdk015,   #發票類型
      xmdk016             LIKE xmdk_t.xmdk016,   #幣別
      xmdk018             LIKE xmdk_t.xmdk018,   #取價方式
      xmdk022             LIKE xmdk_t.xmdk022,   #運輸方式
      xmdk023             LIKE xmdk_t.xmdk023,   #交運起點
      xmdk024             LIKE xmdk_t.xmdk024,   #交運終點
      xmdk030             LIKE xmdk_t.xmdk030,   #銷售通路
      xmdk031             LIKE xmdk_t.xmdk031,   #銷售分類
      xmdk042             LIKE xmdk_t.xmdk042,   #內外銷
      xmdk043             LIKE xmdk_t.xmdk043    #取匯率方式
                       END RECORD
                       
   DEFINE l_success       LIKE type_t.num5
   DEFINE l_oodbl004      LIKE oodbl_t.oodbl004
   DEFINE l_oodb005       LIKE oodb_t.oodb005
   DEFINE l_oodb006       LIKE oodb_t.oodb006
   DEFINE l_oodb011       LIKE oodb_t.oodb011
   DEFINE l_slip          LIKE ooba_t.ooba002    #150721-00001#1 160118 earl add
   
   IF NOT cl_null(g_xmdk_m.xmdk007) THEN
      #150721-00001#1 160118 earl add s
      CALL s_aooi200_get_slip(g_xmdk_m.xmdkdocno) RETURNING l_success,l_slip
      #150721-00001#1 160118 earl add e
   
      CALL s_axmt540_client_default(g_xmdk_m.xmdk007,g_xmdk_m.xmdk003,g_xmdk_m.xmdk004) RETURNING l_xmdk.*
      
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',l_slip,'xmdk003') THEN #150721-00001#1 160118 earl add
         LET g_xmdk_m.xmdk003 = l_xmdk.xmdk003   #業務人員   #2015/03/04 by earl add
      END IF
      
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',l_slip,'xmdk004') THEN #150721-00001#1 160118 earl add
         LET g_xmdk_m.xmdk004 = l_xmdk.xmdk004   #業務人員   #2015/03/04 by earl add
      END IF
      
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',l_slip,'xmdk011') THEN #150721-00001#1 160118 earl add
         LET g_xmdk_m.xmdk011 = l_xmdk.xmdk011   #收款條件
      END IF
      
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',l_slip,'xmdk012') THEN #150721-00001#1 160118 earl add
         LET g_xmdk_m.xmdk012 = l_xmdk.xmdk012   #稅別
      END IF
      
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',l_slip,'xmdk015') THEN #150721-00001#1 160118 earl add
         LET g_xmdk_m.xmdk015 = l_xmdk.xmdk015   #發票類型
      END IF
      
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',l_slip,'xmdk016') THEN #150721-00001#1 160118 earl add
         LET g_xmdk_m.xmdk016 = l_xmdk.xmdk016   #幣別
      END IF
      
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',l_slip,'xmdk018') THEN #150721-00001#1 160118 earl add
         LET g_xmdk_m.xmdk018 = l_xmdk.xmdk018   #取價方式
      END IF
      
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',l_slip,'xmdk030') THEN #150721-00001#1 160118 earl add
         LET g_xmdk_m.xmdk030 = l_xmdk.xmdk030   #銷售通路
      END IF
      
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',l_slip,'xmdk031') THEN #150721-00001#1 160118 earl add
         LET g_xmdk_m.xmdk031 = l_xmdk.xmdk031   #銷售分類
      END IF
      
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',l_slip,'xmdk042') THEN #150721-00001#1 160118 earl add
         LET g_xmdk_m.xmdk042 = l_xmdk.xmdk042   #內外銷
      END IF
      
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',l_slip,'xmdk043') THEN #150721-00001#1 160118 earl add
         LET g_xmdk_m.xmdk043 = l_xmdk.xmdk043   #取匯率方式
      END IF

      #檢查收款條件
      IF NOT s_axmt540_receive_condition_chk(g_xmdk_m.xmdk007,l_xmdk.xmdk010) THEN
         LET g_xmdk_m.xmdk010 = ''
      ELSE
         LET g_xmdk_m.xmdk010 = l_xmdk.xmdk010
      END IF

      CALL axmt600_xmdk018_ref()

      CALL s_desc_get_person_desc(g_xmdk_m.xmdk003) RETURNING g_xmdk_m.xmdk003_desc  #2015/03/04 by earl add
      
      CALL s_desc_get_department_desc(g_xmdk_m.xmdk004) RETURNING g_xmdk_m.xmdk004_desc  #2015/03/04 by earl add

      CALL s_desc_get_ooib002_desc(g_xmdk_m.xmdk010) RETURNING g_xmdk_m.xmdk010_desc

      CALL s_desc_get_acc_desc('238',g_xmdk_m.xmdk011) RETURNING g_xmdk_m.xmdk011_desc

      CALL s_desc_get_tax_desc1(g_site,g_xmdk_m.xmdk012) RETURNING g_xmdk_m.xmdk012_desc

      CALL s_desc_get_invoice_type_desc1(g_site,g_xmdk_m.xmdk015) RETURNING g_xmdk_m.xmdk015_desc

      CALL s_desc_get_currency_desc(g_xmdk_m.xmdk016) RETURNING g_xmdk_m.xmdk016_desc

      #160621-00003#3 20160629 modify by beckxie---S
      #CALL s_desc_get_acc_desc('275',g_xmdk_m.xmdk030) RETURNING g_xmdk_m.xmdk030_desc
      CALL s_desc_get_oojdl003_desc(g_xmdk_m.xmdk030) RETURNING g_xmdk_m.xmdk030_desc
      #160621-00003#3 20160629 modify by beckxie---E

      CALL s_desc_get_acc_desc('295',g_xmdk_m.xmdk031) RETURNING g_xmdk_m.xmdk031_desc

      #取得稅別、單價含稅否
      CALL s_tax_chk(g_site,g_xmdk_m.xmdk012)
      RETURNING l_success,l_oodbl004,l_oodb005,l_oodb006,l_oodb011
      
      LET g_xmdk_m.xmdk013 = l_oodb006
      LET g_xmdk_m.xmdk014 = l_oodb005
      
      CALL axmt600_get_exchange()

      LET g_xmdk_m_o.* = g_xmdk_m.*
      DISPLAY BY NAME g_xmdk_m.*
      
   END IF
END FUNCTION
################################################################################
# Descriptions...: 料件編號檢查
# Memo...........:
# Usage..........: CALL axmt600_xmdl008_chk(p_xmdl008)
#                  RETURNING r_success
# Input parameter: p_xmdl008 料號
#                : 
# Return code....: r_success 執行結果
#                :
# Date & Author..: 1400707 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt600_xmdl008_chk(p_xmdl008)
   DEFINE p_xmdl008              LIKE xmdl_t.xmdl008
   DEFINE l_success              LIKE type_t.num5
   DEFINE l_flag                 LIKE type_t.num5
   DEFINE l_xmdl008              LIKE xmdl_t.xmdl008
   DEFINE r_success              LIKE type_t.num5
   
   LET r_success = TRUE

   IF NOT cl_null(p_xmdl008) THEN                   
      #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
      INITIALIZE g_chkparam.* TO NULL
               
      #設定g_chkparam.*的參數
      LET g_chkparam.arg1 = g_xmdl_d[l_ac].xmdl008
                 
      #呼叫檢查存在並帶值的library
      IF NOT cl_chk_exist("v_imaf001_14") THEN
         LET r_success = FALSE
         RETURN r_success
      END IF

      #檢核輸入的料件的生命週期是否在單據別限制範圍內
      CALL s_control_chk_doc('4',g_xmdk_m.xmdkdocno,p_xmdl008,'','','','')
      RETURNING l_success,l_flag
               
      IF NOT l_success OR NOT l_flag THEN
         LET r_success = FALSE
         RETURN r_success
      END IF                

      #檢核輸入的料件的產品分類是否在單據別限制範圍內
      CALL s_control_chk_doc('5',g_xmdk_m.xmdkdocno,p_xmdl008,'','','','')
      RETURNING l_success,l_flag

      IF NOT l_success OR NOT l_flag THEN
         LET r_success = FALSE
         RETURN r_success
      END IF

      #產品特徵檢查
      IF NOT axmt600_xmdl008_xmdl009_chk() THEN
         LET r_success = FALSE
         RETURN r_success
      END IF

   END IF 
   
   RETURN r_success
END FUNCTION

PRIVATE FUNCTION axmt600_xmdl015_chk()
   DEFINE r_success    LIKE type_t.num5
   
   LET r_success = TRUE
   
   IF NOT cl_null(g_xmdl_d[l_ac].xmdl015) THEN
   
      IF cl_null(g_xmdl_d[l_ac].xmdl014) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'sub-00126'    #庫位不可為空
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET r_success = FALSE
         RETURN r_success
      END IF

      #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
      INITIALIZE g_chkparam.* TO NULL
                     
      #設定g_chkparam.*的參數
      LET g_chkparam.arg1 = g_xmdk_m.xmdksite
      LET g_chkparam.arg2 = g_xmdl_d[l_ac].xmdl014
      LET g_chkparam.arg3 = g_xmdl_d[l_ac].xmdl015
                        
      #呼叫檢查存在並帶值的library
      IF NOT cl_chk_exist("v_inab002") THEN
         LET r_success = FALSE
         RETURN r_success
      END IF  

   END IF
   
   RETURN r_success
END FUNCTION

PRIVATE FUNCTION axmt600_xmdl016_chk()
   DEFINE r_success    LIKE type_t.num5
   DEFINE l_n          LIKE type_t.num5

   LET r_success = TRUE
   
   IF NOT cl_null(g_xmdl_d[l_ac].xmdl016) THEN
   
      IF cl_null(g_xmdl_d[l_ac].xmdl008) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'sub-00123'    #料件編號不可為空
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET r_success = FALSE
         RETURN r_success
      END IF

#150306修改銷退不檢查批號，因可能銷退開帳前的批號
#      IF NOT g_xmdl_d[l_ac].xmdl009 IS NULL THEN
##         #若無產品特徵給' '
##         IF cl_null(g_xmdl_d[l_ac].xmdl009) THEN
##            LET g_xmdl_d[l_ac].xmdl009 = ' '
##         END IF
#
#         #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
#         INITIALIZE g_chkparam.* TO NULL
#
#         #設定g_chkparam.*的參數
#         LET g_chkparam.arg1 = g_xmdk_m.xmdksite
#         LET g_chkparam.arg2 = g_xmdl_d[l_ac].xmdl008
#         LET g_chkparam.arg3 = g_xmdl_d[l_ac].xmdl009
#         LET g_chkparam.arg4 = g_xmdl_d[l_ac].xmdl016
#       
#         #呼叫檢查存在並帶值的library
#         IF NOT cl_chk_exist("v_inad001_1") THEN
#            LET r_success = FALSE
#            RETURN r_success
#         END IF
#      END IF

      #檢查是否存在來源單據
      IF NOT cl_null(g_xmdl_d[l_ac].xmdl001) AND NOT cl_null(g_xmdl_d[l_ac].xmdl002) THEN
      
         LET l_n = 0
         SELECT COUNT(xmdmseq1) INTO l_n
           FROM xmdm_t
          WHERE xmdment = g_enterprise
            AND xmdmdocno = g_xmdl_d[l_ac].xmdl001
            AND xmdmseq = g_xmdl_d[l_ac].xmdl002
            AND COALESCE(xmdm007,' ') = COALESCE(g_xmdl_d[l_ac].xmdl016,' ')
   
         IF l_n < 1 THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'axm-00388'  #該批號不存在來源單據！
            LET g_errparam.extend = ''
            LET g_errparam.popup = TRUE
            CALL cl_err()

            LET r_success = FALSE
            RETURN r_success
         END IF
      END IF
   END IF

   RETURN r_success
END FUNCTION

PRIVATE FUNCTION axmt600_xmdl014_chk()
   DEFINE r_success    LIKE type_t.num5
   DEFINE l_type       LIKE type_t.chr1
   DEFINE l_flag       LIKE type_t.num5    #151021 earl add
   
   LET r_success = TRUE
   
   IF NOT cl_null(g_xmdl_d[l_ac].xmdl014)THEN
      #得出來源成本庫否
      CALL s_axmt600_warehouse_cost(g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002)
      RETURNING l_type                  
                     
      #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
      INITIALIZE g_chkparam.* TO NULL
     
      #替換錯誤訊息
      LET g_chkparam.err_str[1] = "axm-00197:axm-00387"
               
      #設定g_chkparam.*的參數
      LET g_chkparam.arg1 = g_xmdk_m.xmdksite
      LET g_chkparam.arg2 = g_xmdl_d[l_ac].xmdl014    #庫位
      LET g_chkparam.arg3 = l_type
               
      #呼叫檢查存在並帶值的library
      IF NOT cl_chk_exist("v_inaa001_6") THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
            
      #151021 earl add s
      #檢核輸入的庫位(From)是否在單據別限制範圍內
      IF NOT cl_null(g_xmdk_m.xmdkdocno) THEN
         CALL s_control_chk_doc('6',g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdl014,'','','','')
         RETURNING r_success,l_flag
         
         IF NOT r_success OR NOT l_flag THEN
            LET r_success = FALSE
            RETURN r_success
         END IF
      END IF
      #151021 earl add e
      
   END IF

   RETURN r_success

END FUNCTION

PRIVATE FUNCTION axmt600_xmdkdocdt_xmdk001_chk()
   DEFINE r_success    LIKE type_t.num5

   LET r_success = TRUE
   #151120-00003#1 20151120 mark by beckxie---S
   #IF NOT cl_null(g_xmdk_m.xmdk001) AND NOT cl_null(g_xmdk_m.xmdkdocdt) THEN
   #   IF g_xmdk_m.xmdk001 < g_xmdk_m.xmdkdocdt THEN
   #      INITIALIZE g_errparam TO NULL
   #      LET g_errparam.code = 'axm-00267'    #扣帳日期不可小於單據日期！
   #      LET g_errparam.extend = ''
   #      LET g_errparam.popup = TRUE
   #      CALL cl_err()
   #      
   #      LET r_success = FALSE
   #      RETURN r_success
   #   END IF
   #END IF
   #151120-00003#1 20151120 mark by beckxie---E
   RETURN r_success   
END FUNCTION

################################################################################
# Descriptions...: ROW檢查
# Memo...........:
# Usage..........: CALL axmt600_row_default()
#                  
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 140731 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt600_row_default()
  
   #先將可能為NULL欄位預設為' '
   IF cl_null(g_xmdl_d[l_ac].xmdl009) THEN LET g_xmdl_d[l_ac].xmdl009 = ' ' END IF  #產品特徵
   
   IF cl_null(g_xmdl_d[l_ac].xmdl014) THEN LET g_xmdl_d[l_ac].xmdl014 = ' ' END IF  #庫位
   IF cl_null(g_xmdl_d[l_ac].xmdl015) THEN LET g_xmdl_d[l_ac].xmdl015 = ' ' END IF  #儲位
   IF cl_null(g_xmdl_d[l_ac].xmdl016) THEN LET g_xmdl_d[l_ac].xmdl016 = ' ' END IF  #批號 
   IF cl_null(g_xmdl_d[l_ac].xmdl052) THEN LET g_xmdl_d[l_ac].xmdl052 = ' ' END IF  #庫存管理特徵
   
   
END FUNCTION

################################################################################
# Descriptions...: 修改多庫儲批Action
# Memo...........:
# Usage..........: CALL axmt600_call_axmt540_01()
#                  
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 140915 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt600_call_axmt540_01()
   DEFINE l_success  LIKE type_t.num5
   DEFINE l_rollback LIKE type_t.num5 
   DEFINE l_xmdl014  LIKE xmdl_t.xmdl014
   DEFINE l_xmdl015  LIKE xmdl_t.xmdl015
   DEFINE l_xmdl016  LIKE xmdl_t.xmdl016
   DEFINE l_xmdl052  LIKE xmdl_t.xmdl052

   CALL s_transaction_begin()
   
   OPEN axmt600_cl USING g_enterprise,g_xmdk_m.xmdkdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code =  STATUS
      LET g_errparam.extend = "OPEN axmt600_cl:"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CLOSE axmt600_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF   
   
   #150821-xianghui-b         
   INSERT INTO axmt600_inao SELECT * FROM inao_t 
                               WHERE inaoent = g_enterprise 
                                 AND inaodocno = g_xmdk_m.xmdkdocno
                                 AND inaoseq = g_xmdl_d[g_detail_idx].xmdlseq  
   #150821-xianghui-e
   
   #開啟多庫儲批
   CALL axmt540_01('6',g_xmdk_m.xmdksite,g_xmdk_m.xmdk082,g_xmdk_m.xmdkdocno,
                   g_xmdl_d[g_detail_idx].xmdlseq,g_xmdl_d[g_detail_idx].xmdl008,g_xmdl_d[g_detail_idx].xmdl009,
                   g_xmdl_d[g_detail_idx].xmdl011,g_xmdl_d[g_detail_idx].xmdl012,
                   g_xmdl_d[g_detail_idx].xmdl017,g_xmdl_d[g_detail_idx].xmdl018,'',
                   g_xmdl_d[g_detail_idx].xmdl019,g_xmdl_d[g_detail_idx].xmdl020,'',
                   g_xmdl_d[g_detail_idx].xmdl001,g_xmdl_d[g_detail_idx].xmdl002,g_xmdl_d[g_detail_idx].xmdl003,g_xmdl_d[g_detail_idx].xmdl004,g_xmdl_d[g_detail_idx].xmdl030)
                   RETURNING l_success,l_rollback,l_xmdl014,l_xmdl015,l_xmdl016,l_xmdl052                               
   #150821-xianghui-b                
   IF l_success = FALSE AND l_rollback = FALSE THEN 
      DELETE FROM inao_t 
       WHERE inaoent = g_enterprise 
         AND inaodocno = g_xmdk_m.xmdkdocno
         AND inaoseq = g_xmdl_d[g_detail_idx].xmdlseq       
      #將資料塞回原table   
      INSERT INTO inao_t SELECT * FROM axmt600_inao
   END IF
   #150821-xianghui-e                    
   IF l_rollback OR NOT l_success THEN
      CLOSE axmt600_cl
      CALL s_transaction_end('N','0')
      RETURN
      
   ELSE

      IF NOT cl_null(l_xmdl014) THEN  #只有一筆         
         UPDATE xmdl_t
            SET xmdl013 = 'N',
                xmdl014 = l_xmdl014,
                xmdl015 = l_xmdl015,
                xmdl016 = l_xmdl016,
                xmdl052 = l_xmdl052
          WHERE xmdlent = g_enterprise
            AND xmdldocno = g_xmdk_m.xmdkdocno
            AND xmdlseq = g_xmdl_d[g_detail_idx].xmdlseq

      ELSE
         UPDATE xmdl_t
            SET xmdl013 = 'Y',
                xmdl014 = l_xmdl014,
                xmdl015 = l_xmdl015,
                xmdl016 = l_xmdl016,
                xmdl052 = l_xmdl052
          WHERE xmdlent = g_enterprise
            AND xmdldocno = g_xmdk_m.xmdkdocno
            AND xmdlseq = g_xmdl_d[g_detail_idx].xmdlseq
            
      END IF

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE:"
         LET g_errparam.popup = TRUE
         CALL cl_err()
     
         CLOSE axmt600_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF            

   END IF   

   CLOSE axmt600_cl
   CALL s_transaction_end('Y','0')
   
   CALL axmt600_show()
END FUNCTION

################################################################################
# Descriptions...: 單身Action隱藏
# Memo...........:
# Usage..........: CALL axmt600_detail_action_hidden(p_ac)
#                 
# Input parameter: p_ac   單身所在項次
#                : 
# Return code....: 
#                : 
# Date & Author..: 140915 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt600_detail_action_hidden(p_ac)
   DEFINE p_ac      LIKE type_t.num5

   DEFINE l_slip     LIKE ooba_t.ooba001
   DEFINE l_success  LIKE type_t.num5
   DEFINE l_onebyone LIKE type_t.chr80
   DEFINE l_xmdl013  LIKE xmdl_t.xmdl013  #多庫儲批
   DEFINE l_xmdl014  LIKE xmdl_t.xmdl014  #庫位
   DEFINE l_xmdl015  LIKE xmdl_t.xmdl015  #單儲位
   DEFINE l_xmdl016  LIKE xmdl_t.xmdl016  #批號
   DEFINE l_xmdl052  LIKE xmdl_t.xmdl052  #庫存管理特徵

   CALL cl_set_act_visible("axmt600_call_axmt540_01",FALSE)  #多庫儲批

   IF g_xmdk_m.xmdkstus = 'N' OR
      g_xmdk_m.xmdkstus = 'Y' OR
      g_xmdk_m.xmdkstus = 'D' OR
      g_xmdk_m.xmdkstus = 'R' OR
      g_xmdk_m.xmdkstus = 'A' THEN
         
      IF NOT cl_null(p_ac) AND p_ac > 0 THEN
         CALL cl_set_act_visible("axmt600_call_axmt540_01",TRUE)
         
      END IF
   END IF
   
END FUNCTION

PRIVATE FUNCTION axmt600_xmdk004_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmdk_m.xmdk004
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmdk_m.xmdk004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmdk_m.xmdk004_desc
END FUNCTION

PRIVATE FUNCTION axmt600_xmdk003_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmdk_m.xmdk003
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_xmdk_m.xmdk003_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmdk_m.xmdk003_desc
END FUNCTION

################################################################################
# Descriptions...: 單身稅額計算UPDATE單頭
# Memo...........:
# Usage..........: CALL axmt600_tax_recount(p_xmdkdocno)
#                  RETURNING r_success
# Input parameter: p_xmdkdocno    單據單號
#                : 
# Return code....: r_success      執行結果
#                : 
# Date & Author..: 140918 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt600_tax_recount(p_xmdkdocno)
   DEFINE p_xmdkdocno    LIKE xmdk_t.xmdkdocno
   DEFINE r_success      LIKE type_t.num5

   DEFINE l_xrcd      RECORD
             xrcd103      LIKE xrcd_t.xrcd103,
             xrcd104      LIKE xrcd_t.xrcd104,
             xrcd105      LIKE xrcd_t.xrcd105,
             xrcd113      LIKE xrcd_t.xrcd113,
             xrcd114      LIKE xrcd_t.xrcd114,
             xrcd115      LIKE xrcd_t.xrcd115
                      END RECORD
   
   LET r_success = TRUE
   
   INITIALIZE l_xrcd.* TO NULL
   #重新計算整單的未稅、含稅總金額
   CALL s_tax_recount(p_xmdkdocno) RETURNING l_xrcd.xrcd103,l_xrcd.xrcd104,l_xrcd.xrcd105,l_xrcd.xrcd113,l_xrcd.xrcd114,l_xrcd.xrcd115
   
   UPDATE xmdk_t SET xmdk051 = l_xrcd.xrcd103,
                     xmdk052 = l_xrcd.xrcd105,
                     xmdk053 = l_xrcd.xrcd104
    WHERE xmdkent = g_enterprise
      AND xmdkdocno = p_xmdkdocno
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL       
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = 'UPDATE'
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 修改單價Input
# Memo...........:
# Usage..........: CALL axmt600_modify_price()
#                  
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 140919 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt600_modify_price()
   DEFINE l_success         LIKE type_t.num5
   DEFINE l_oodbl004        LIKE oodbl_t.oodbl004
   DEFINE l_oodb005         LIKE oodb_t.oodb005
   DEFINE l_oodb006         LIKE oodb_t.oodb006
   DEFINE l_oodb011         LIKE oodb_t.oodb011

   DEFINE l_xmdl038         LIKE xmdl_t.xmdl038
   DEFINE l_xmdl053         LIKE xmdl_t.xmdl053
   DEFINE l_xmdl047         LIKE xmdl_t.xmdl047

   LET l_success = TRUE

   #顯示價格資訊頁籤
   CALL cl_set_comp_visible("page_7",TRUE)

   IF g_xmdl_d.getLength() = 0 THEN
      RETURN   #僅顯示不可修改單價
   END IF

   CALL cl_err_collect_init()

   IF g_xmdk_m.xmdkstus = 'X' THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "axm-00552"   #此單據已作廢，僅顯示不可修改！
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()
   
      LET l_success = FALSE
   END IF
   
   #財務檢查(立帳、暫估、發票)
   LET l_xmdl038 = 0
   LET l_xmdl053 = 0
   LET l_xmdl047 = 0
   SELECT SUM(COALESCE(xmdl038,0)) + SUM(COALESCE(xmdl039,0)) + SUM(COALESCE(xmdl040,0)),
          SUM(COALESCE(xmdl053,0)) + SUM(COALESCE(xmdl054,0)) + SUM(COALESCE(xmdl055,0)),
          SUM(COALESCE(xmdl047,0))
     INTO l_xmdl038,l_xmdl053,l_xmdl047
     FROM xmdl_t
    WHERE xmdlent = g_enterprise
      AND xmdldocno = g_xmdk_m.xmdkdocno
   
   IF l_xmdl038 <> 0 AND NOT cl_null(l_xmdl038) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "axm-00549"   #此單據已立帳，僅顯示不可修改！
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()
      
      LET l_success = FALSE
   END IF

   IF l_xmdl053 <> 0 AND NOT cl_null(l_xmdl053) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "axm-00550"   #此單據已有暫估資料，僅顯示不可修改！
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()
      
      LET l_success = FALSE
   END IF
   
   IF l_xmdl047 <> 0 AND NOT cl_null(l_xmdl047) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "axm-00551"   #此單據已有發票資料，僅顯示不可修改！
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()
      
      LET l_success = FALSE
   END IF   

   CALL cl_err_collect_show()

   IF NOT l_success THEN
      RETURN   #僅顯示不可修改單價
   END IF

   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      INPUT ARRAY g_xmdl2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                   INSERT ROW = FALSE,
                   DELETE ROW = FALSE,
                   APPEND ROW = FALSE)                 
   
         BEFORE INPUT
            CALL axmt600_b_fill()
            LET g_rec_b = g_xmdl2_d.getLength()
            #160512-00004#2-add-'xmdl058,xmdl057'
            LET g_forupd_sql = "SELECT xmdlsite,xmdlseq,xmdl001,xmdl002,xmdl003,xmdl004,xmdl005,xmdl006,xmdl007, 
                xmdl008,xmdl009,xmdl033,xmdl011,xmdl012,xmdl050,xmdl017,xmdl018,xmdl019,xmdl020,xmdl010,xmdl013, 
                xmdl014,xmdl015,xmdl016,xmdl052,xmdl021,xmdl022,xmdl023,xmdl041,xmdl058,xmdl057,xmdl051,xmdl088,xmdlseq,xmdl048, 
                xmdl049,xmdl024,xmdl025,xmdl026,xmdl027,xmdl028,xmdl029,xmdl042,xmdl043,xmdl044,xmdl045,xmdl046, 
                xmdl087 FROM xmdl_t WHERE xmdlent=? AND xmdldocno=? AND xmdlseq=? FOR UPDATE"        
           
            LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
            LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
            DECLARE axmt600_bcl_p CURSOR FROM g_forupd_sql
      
   
         BEFORE ROW
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
   
            DISPLAY l_ac TO FORMONLY.idx
            
            CALL s_transaction_begin()
            OPEN axmt600_cl USING g_enterprise,g_xmdk_m.xmdkdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axmt600_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               
               CLOSE axmt600_cl
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            END IF
               
            LET g_rec_b = g_xmdl2_d.getLength()
               
            IF g_rec_b >= l_ac  AND g_xmdl2_d[l_ac].xmdlseq IS NOT NULL THEN 
               LET g_xmdl2_d_t.* = g_xmdl2_d[l_ac].*  #BACKUP
               LET g_xmdl2_d_o.* = g_xmdl2_d[l_ac].*  #BACKUP
   
               CALL axmt600_set_entry_b('p')
               CALL axmt600_set_no_entry_b('p')
   
               OPEN axmt600_bcl_p USING g_enterprise,g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq     
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "axmt600_bcl" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()        
   
                  CLOSE axmt600_cl
                  CLOSE axmt600_bcl_p
                  CALL s_transaction_end('N','0')
                  EXIT DIALOG
               END IF
   
               FETCH axmt600_bcl_p INTO g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdlseq,g_xmdl_d[l_ac].xmdl001, 
                   g_xmdl_d[l_ac].xmdl002,g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,g_xmdl_d[l_ac].xmdl005, 
                   g_xmdl_d[l_ac].xmdl006,g_xmdl_d[l_ac].xmdl007,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009, 
                   g_xmdl_d[l_ac].xmdl033,g_xmdl_d[l_ac].xmdl011,g_xmdl_d[l_ac].xmdl012,g_xmdl_d[l_ac].xmdl050, 
                   g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl020, 
                   g_xmdl_d[l_ac].xmdl010,g_xmdl_d[l_ac].xmdl013,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015, 
                   g_xmdl_d[l_ac].xmdl016,g_xmdl_d[l_ac].xmdl052,g_xmdl_d[l_ac].xmdl021,g_xmdl_d[l_ac].xmdl022, 
                   g_xmdl_d[l_ac].xmdl023,g_xmdl_d[l_ac].xmdl041,
                   g_xmdl_d[l_ac].xmdl058,g_xmdl_d[l_ac].xmdl057,  #160512-00004#2-add
                   g_xmdl_d[l_ac].xmdl051,g_xmdl_d[l_ac].xmdl088, 
                   g_xmdl2_d[l_ac].xmdlseq,g_xmdl2_d[l_ac].xmdl048,g_xmdl2_d[l_ac].xmdl049,g_xmdl2_d[l_ac].xmdl024, 
                   g_xmdl2_d[l_ac].xmdl025,g_xmdl2_d[l_ac].xmdl026,g_xmdl2_d[l_ac].xmdl027,g_xmdl2_d[l_ac].xmdl028, 
                   g_xmdl2_d[l_ac].xmdl029,g_xmdl2_d[l_ac].xmdl042,g_xmdl2_d[l_ac].xmdl043,g_xmdl2_d[l_ac].xmdl044, 
                   g_xmdl2_d[l_ac].xmdl045,g_xmdl2_d[l_ac].xmdl046,g_xmdl2_d[l_ac].xmdl087
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = '' 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
               END IF
   
               CALL axmt600_b_fill()
               CALL cl_show_fld_cont()
            END IF
    
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_xmdl2_d[l_ac].* = g_xmdl2_d_t.*
               
               CLOSE axmt600_cl            
               CLOSE axmt600_bcl_p
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            END IF
                                             
            UPDATE xmdl_t SET xmdl048 = g_xmdl2_d[l_ac].xmdl048,
                              xmdl049 = g_xmdl2_d[l_ac].xmdl049,
                              xmdl024 = g_xmdl2_d[l_ac].xmdl024,
                              xmdl025 = g_xmdl2_d[l_ac].xmdl025,
                              xmdl026 = g_xmdl2_d[l_ac].xmdl026,
                              xmdl027 = g_xmdl2_d[l_ac].xmdl027,
                              xmdl028 = g_xmdl2_d[l_ac].xmdl028,
                              xmdl029 = g_xmdl2_d[l_ac].xmdl029,
                              xmdl042 = g_xmdl2_d[l_ac].xmdl042,
                              xmdl043 = g_xmdl2_d[l_ac].xmdl043,
                              xmdl044 = g_xmdl2_d[l_ac].xmdl044,
                              xmdl045 = g_xmdl2_d[l_ac].xmdl045
             WHERE xmdlent = g_enterprise AND xmdldocno = g_xmdk_m.xmdkdocno
               AND xmdlseq = g_xmdl2_d_t.xmdlseq
    
            CASE
               WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "xmdl_t" 
                  LET g_errparam.code   = "std-00009" 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  LET g_xmdl2_d[l_ac].* = g_xmdl2_d_t.*
                  
                  CLOSE axmt600_cl            
                  CLOSE axmt600_bcl_p
                  CALL s_transaction_end('N','0')
                  EXIT DIALOG
                  
               WHEN SQLCA.sqlcode #其他錯誤
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "xmdl_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  LET g_xmdl2_d[l_ac].* = g_xmdl2_d_t.*
                  
                  CLOSE axmt600_cl            
                  CLOSE axmt600_bcl_p
                  CALL s_transaction_end('N','0')
                  EXIT DIALOG
                                 
            END CASE
            
            #修改歷程記錄
            LET g_log1 = util.JSON.stringify(g_xmdk_m),util.JSON.stringify(g_xmdl2_d_t)
            LET g_log2 = util.JSON.stringify(g_xmdk_m),util.JSON.stringify(g_xmdl2_d[l_ac])
            IF NOT cl_log_modified_record(g_log1,g_log2) THEN
               CLOSE axmt600_cl
               CLOSE axmt600_bcl_p
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            END IF
                              
            #重新計算整單的未稅、含稅總金額
            CALL axmt600_tax_recount(g_xmdk_m.xmdkdocno) RETURNING l_success
            IF NOT l_success THEN
               LET g_xmdl2_d[l_ac].* = g_xmdl2_d_t.*
               
               CLOSE axmt600_cl
               CLOSE axmt600_bcl_p
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            END IF
   
         AFTER FIELD xmdl048
         
         AFTER FIELD xmdl049 
            #ming 20150703 add ------------------------------------------(S) 
            IF NOT cl_null(g_xmdl2_d[l_ac].xmdl049) THEN
               CALL axmt600_chk_xmdl049() RETURNING l_success
               IF NOT l_success THEN
                  LET g_xmdl2_d[l_ac].xmdl049 = g_xmdl2_d_o.xmdl049
                  NEXT FIELD CURRENT
               END IF
            END IF

            LET g_xmdl2_d_o.xmdl049 = g_xmdl2_d[l_ac].xmdl049
            #ming 20150703 add ------------------------------------------(E) 
   
         AFTER FIELD xmdl024
            IF NOT cl_ap_chk_range(g_xmdl2_d[l_ac].xmdl024,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xmdl024
            END IF
   
            IF NOT cl_null(g_xmdl2_d[l_ac].xmdl024) THEN 
               IF g_xmdl2_d[l_ac].xmdl024 <> g_xmdl2_d_o.xmdl024 OR cl_null(g_xmdl2_d_o.xmdl024) THEN
   
                  IF NOT s_axmt540_price_chk(g_xmdk_m.xmdk018,g_xmdl_d[l_ac].xmdl003,g_xmdl2_d[l_ac].xmdl024,g_xmdl2_d[l_ac].xmdl045) THEN
                     LET g_xmdl2_d[l_ac].xmdl024 = g_xmdl2_d_o.xmdl024
                     NEXT FIELD CURRENT
                  END IF
                     
                  #稅額計算                     
                  CALL s_axmt540_tax_count(g_xmdl2_d_t.xmdlseq,g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,g_site,g_xmdl2_d[l_ac].xmdl025,
                                           g_xmdl_d[l_ac].xmdl022,g_xmdl2_d[l_ac].xmdl024,
                                           g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,
                                           g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,g_xmdl_d[l_ac].xmdl018)
                  RETURNING g_xmdl2_d[l_ac].xmdl027,g_xmdl2_d[l_ac].xmdl028,g_xmdl2_d[l_ac].xmdl029
                  
               END IF
            END IF 
   
            LET g_xmdl2_d_o.xmdl024 = g_xmdl2_d[l_ac].xmdl024
   
         AFTER FIELD xmdl025
               CALL s_desc_get_tax_desc1(g_site,g_xmdl2_d[l_ac].xmdl025) RETURNING g_xmdl2_d[l_ac].xmdl025_desc
   
               IF NOT cl_null(g_xmdl2_d[l_ac].xmdl025) THEN
                  IF g_xmdl2_d[l_ac].xmdl025 <> g_xmdl2_d_o.xmdl025 OR cl_null(g_xmdl2_d_o.xmdl025) THEN
   
                     #檢查、取得稅別、單價含稅否
                     CALL s_tax_chk(g_site,g_xmdl2_d[l_ac].xmdl025)
                     RETURNING l_success,l_oodbl004,l_oodb005,l_oodb006,l_oodb011
   
                     IF NOT l_success THEN
                        LET g_xmdl2_d[l_ac].xmdl025 = g_xmdl2_d_o.xmdl025
                        CALL s_desc_get_tax_desc1(g_site,g_xmdl2_d[l_ac].xmdl025) RETURNING g_xmdl2_d[l_ac].xmdl025_desc
   
                        NEXT FIELD CURRENT
                     END IF
   
                     LET g_xmdl2_d[l_ac].xmdl026 = l_oodb006  #稅率
                     
                     #稅額計算
                     CALL s_axmt540_tax_count(g_xmdl2_d_t.xmdlseq,g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,g_site,g_xmdl2_d[l_ac].xmdl025,
                                              g_xmdl_d[l_ac].xmdl022,g_xmdl2_d[l_ac].xmdl024,
                                              g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,
                                              g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,g_xmdl_d[l_ac].xmdl018)
                     RETURNING g_xmdl2_d[l_ac].xmdl027,g_xmdl2_d[l_ac].xmdl028,g_xmdl2_d[l_ac].xmdl029
   
                  END IF
               END IF
   
               LET g_xmdl2_d_o.xmdl025 = g_xmdl2_d[l_ac].xmdl025
   
         ON ACTION controlp INFIELD xmdl048
         
         ON ACTION controlp INFIELD xmdl049
   
         ON ACTION controlp INFIELD xmdl025
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdl2_d[l_ac].xmdl025             #給予default值
   
            LET g_qryparam.arg1 = g_site
   
            CALL q_oodb002_3()                                #呼叫開窗
   
            LET g_xmdl2_d[l_ac].xmdl025 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY BY NAME g_xmdl2_d[l_ac].xmdl025
   
            CALL s_desc_get_tax_desc1(g_site,g_xmdl2_d[l_ac].xmdl025) RETURNING g_xmdl2_d[l_ac].xmdl025_desc
   
            NEXT FIELD xmdl025                          #返回原欄位
   
         AFTER ROW
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.extend = ''
               LET g_errparam.code   = 9001
               LET g_errparam.popup  = FALSE
               CALL cl_err()
               LET INT_FLAG = 0
   
               LET g_xmdl2_d[l_ac].* = g_xmdl2_d_t.*
   
               CLOSE axmt600_cl
               CLOSE axmt600_bcl_p
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            END IF
            
            CLOSE axmt600_cl
            CLOSE axmt600_bcl_p
            
            CALL s_transaction_end('Y','0')
    
         AFTER INPUT
            CLOSE axmt600_cl
            CLOSE axmt600_bcl_p
            
            CALL axmt600_b_fill()
            
      END INPUT
      
      BEFORE DIALOG 
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
         CALL DIALOG.setCurrentRow("s_detail2",g_detail_idx)
         CALL DIALOG.setCurrentRow("s_detail3",g_detail_idx)
    
         ON ACTION controlf
            CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
            CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
    
         ON ACTION controlr
            CALL cl_show_req_fields()
    
         ON ACTION controls
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         ON ACTION accept
            ACCEPT DIALOG
           
         ON ACTION cancel      #在dialog button (放棄)
            LET INT_FLAG = TRUE 
            LET g_detail_idx  = 1
            LET g_detail_idx2 = 1
            
            ACCEPT DIALOG
#            EXIT DIALOG         #ACCEPT DIALOG才會把lock cursor關閉
    
         ON ACTION close       #在dialog 右上角 (X)
            ACCEPT DIALOG
#            EXIT DIALOG         #ACCEPT DIALOG才會把lock cursor關閉
    
         ON ACTION exit        #toolbar 離開
            ACCEPT DIALOG
#            EXIT DIALOG         #ACCEPT DIALOG才會把lock cursor關閉
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
   END DIALOG

END FUNCTION

################################################################################
# Descriptions...: 無來源時，料號預帶欄位(子件特性、包裝容器、出貨單位、參考單位、計價單位、出貨庫位、出貨儲位)並且重算參考數量、計價數量
#                : 有來源時，料號預帶欄位(出貨庫位、出貨儲位)
# Memo...........:
# Usage..........: CALL axmt600_xmdl008_default()
#                  
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 141002 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt600_xmdl008_default()
   DEFINE l_success     LIKE type_t.num5
   DEFINE l_controlno   LIKE ooha_t.ooha001
   
   DEFINE l_xmdl   RECORD
             xmdl007    LIKE xmdl_t.xmdl007,  #子件特性
             xmdl010    LIKE xmdl_t.xmdl010,  #包裝容器
             xmdl017    LIKE xmdl_t.xmdl017,  #出貨單位
             xmdl019    LIKE xmdl_t.xmdl019,  #參考單位
             xmdl021    LIKE xmdl_t.xmdl021,  #計價單位
             xmdl014    LIKE xmdl_t.xmdl014,  #出貨庫位
             xmdl015    LIKE xmdl_t.xmdl015   #出貨儲位
                   END RECORD

   #151209-00018#1  2015/12/10 By earl add s
   DEFINE l_price   RECORD
      source           LIKE xmdc_t.xmdc040,
      docno            LIKE xmdc_t.xmdcdocno,
      seq              LIKE xmdc_t.xmdcseq,
      price            LIKE xmdc_t.xmdc043
      
                    END RECORD
   #151209-00018#1  2015/12/10 By earl add e

   IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) AND
      NOT g_xmdl_d[l_ac].xmdl009 IS NULL THEN

#      #產品特徵
#      IF cl_null(g_xmdl_d[l_ac].xmdl009) THEN
#         LET g_xmdl_d[l_ac].xmdl009 = ' '
#      END IF

      #預帶料件預設值
      CALL s_axmt540_materials_search(g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdk007,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009)
      RETURNING l_xmdl.xmdl007,l_xmdl.xmdl010,l_xmdl.xmdl017,l_xmdl.xmdl019,l_xmdl.xmdl021,l_xmdl.xmdl014,l_xmdl.xmdl015
      
      #151209-00018#1  2015/12/09 By earl add s
      IF cl_null(l_xmdl.xmdl021) THEN
         LET l_xmdl.xmdl021 = l_xmdl.xmdl017
      END IF
      #151209-00018#1  2015/12/09 By earl add e
      
      #無來源預設
      IF cl_null(g_xmdl_d[l_ac].xmdl001) THEN
         IF NOT cl_null(l_xmdl.xmdl007) THEN
            LET g_xmdl_d[l_ac].xmdl007 = '1'  #子件特性
         END IF
         
         IF NOT cl_null(l_xmdl.xmdl010) THEN
            LET g_xmdl_d[l_ac].xmdl010 = l_xmdl.xmdl010  #包裝容器
         END IF
         
         LET g_xmdl_d[l_ac].xmdl017 = l_xmdl.xmdl017  #單位
         CALL s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl017) RETURNING g_xmdl_d[l_ac].xmdl017_desc
         
         IF cl_null(l_xmdl.xmdl014) THEN  #150917 by whitney add
            LET g_xmdl_d[l_ac].xmdl014 = l_xmdl.xmdl014  #庫位
            CALL s_desc_get_stock_desc(g_site,g_xmdl_d[l_ac].xmdl014) RETURNING g_xmdl_d[l_ac].xmdl014_desc
            
            LET g_xmdl_d[l_ac].xmdl015 = l_xmdl.xmdl015  #儲位
            CALL s_desc_get_locator_desc(g_site,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015) RETURNING g_xmdl_d[l_ac].xmdl015_desc         
         END IF  #150917 by whitney add
         
         #營運據點是否使用參考單位(若不使用為'')
         IF cl_get_para(g_enterprise,g_site,'S-BAS-0028') = "N" THEN
            LET g_xmdl_d[l_ac].xmdl019 = ''  #參考單位
         ELSE
            LET g_xmdl_d[l_ac].xmdl019 = l_xmdl.xmdl019  #參考單位
         END IF
         CALL s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl019) RETURNING g_xmdl_d[l_ac].xmdl019_desc
      
         #推算參考數量
         IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) AND NOT cl_null(g_xmdl_d[l_ac].xmdl017) AND
            NOT cl_null(g_xmdl_d[l_ac].xmdl019) AND NOT cl_null(g_xmdl_d[l_ac].xmdl018) THEN
         
            CALL s_aooi250_convert_qty(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl018)
            RETURNING l_success,g_xmdl_d[l_ac].xmdl020
         ELSE
            LET g_xmdl_d[l_ac].xmdl020 = ''
         END IF
         
         #營運據點是否使用計價單位(若不使用為出貨單位)
         IF cl_get_para(g_enterprise,g_site,'S-BAS-0007') = "N" THEN
            LET g_xmdl_d[l_ac].xmdl021 = l_xmdl.xmdl017
            LET g_xmdl_d_o.xmdl021 = g_xmdl_d[l_ac].xmdl021
         ELSE
            LET g_xmdl_d[l_ac].xmdl021 = l_xmdl.xmdl021  #計價單位
            LET g_xmdl_d_o.xmdl021 = g_xmdl_d[l_ac].xmdl021
         END IF      
         CALL s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl021) RETURNING g_xmdl_d[l_ac].xmdl021_desc   

         #推算計價數量
         IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) AND NOT cl_null(g_xmdl_d[l_ac].xmdl017) AND
            NOT cl_null(g_xmdl_d[l_ac].xmdl021) AND NOT cl_null(g_xmdl_d[l_ac].xmdl018) THEN
         
            CALL s_aooi250_convert_qty(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl021,g_xmdl_d[l_ac].xmdl018)
            RETURNING l_success,g_xmdl_d[l_ac].xmdl022
            LET g_xmdl_d_o.xmdl022 = g_xmdl_d[l_ac].xmdl022
         ELSE
            LET g_xmdl_d[l_ac].xmdl022 = ''
            LET g_xmdl_d_o.xmdl022 = g_xmdl_d[l_ac].xmdl022
         END IF
         
         #取價
         #151209-00018#1  2015/12/10 By earl mod s
         IF cl_null(g_xmdl_d[l_ac].xmdl001) THEN   #無來源且有輸入料號、產品特徵時才做取價
            INITIALIZE l_price.* TO NULL
            CALL axmt600_get_price(l_ac)
            RETURNING l_price.source,l_price.docno,l_price.seq,l_price.price
            #重新取價
            IF cl_null(g_xmdl2_d[l_ac].xmdl042) THEN
               LET g_xmdl2_d[l_ac].xmdl042 = l_price.source
               LET g_xmdl2_d[l_ac].xmdl043 = l_price.docno
               LET g_xmdl2_d[l_ac].xmdl044 = l_price.seq
               LET g_xmdl2_d[l_ac].xmdl045 = l_price.price
            ELSE
               IF g_xmdl2_d[l_ac].xmdl045 <> l_price.price THEN
                  IF cl_ask_confirm('axm-00230') THEN
                     LET g_xmdl2_d[l_ac].xmdl042 = l_price.source
                     LET g_xmdl2_d[l_ac].xmdl043 = l_price.docno
                     LET g_xmdl2_d[l_ac].xmdl044 = l_price.seq
                     LET g_xmdl2_d[l_ac].xmdl045 = l_price.price
                  END IF
               END IF
            END IF
         #151209-00018#1  2015/12/10 By earl mod e
            
            LET g_xmdl2_d[l_ac].xmdl024 = g_xmdl2_d[l_ac].xmdl045
            LET g_xmdl2_d_o.xmdl024 = g_xmdl2_d[l_ac].xmdl024
         END IF
                          
      ELSE       #有來源預設 
         IF cl_null(g_xmdl_d[l_ac].xmdl014) THEN
            LET g_xmdl_d[l_ac].xmdl014 = l_xmdl.xmdl014  #庫位
            CALL s_desc_get_stock_desc(g_site,g_xmdl_d[l_ac].xmdl014) RETURNING g_xmdl_d[l_ac].xmdl014_desc
      
#            IF cl_null(g_xmdl_d[l_ac].xmdl015) THEN  #150917 by whitney mark
               LET g_xmdl_d[l_ac].xmdl015 = l_xmdl.xmdl015  #儲位
               CALL s_desc_get_locator_desc(g_site,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015) RETURNING g_xmdl_d[l_ac].xmdl015_desc
#            END IF  #150917 by whitney mark
         END IF
            
      END IF

      
   END IF
   
END FUNCTION

PRIVATE FUNCTION axmt600_xmdl018_chk()
   DEFINE r_success         LIKE type_t.num5
   DEFINE l_success         LIKE type_t.num5
   DEFINE l_num             LIKE xmdl_t.xmdl018
   DEFINE l_amount  LIKE xmdl_t.xmdl018  #160122-00020#1
   #151209-00018#1  2015/12/10 By earl add s
   DEFINE l_price   RECORD
      source           LIKE xmdc_t.xmdc040,
      docno            LIKE xmdc_t.xmdcdocno,
      seq              LIKE xmdc_t.xmdcseq,
      price            LIKE xmdc_t.xmdc043
      
                    END RECORD
   #151209-00018#1  2015/12/10 By earl add e
   
   LET r_success = TRUE

   IF NOT cl_null(g_xmdl_d[l_ac].xmdl001) AND NOT cl_null(g_xmdl_d[l_ac].xmdl002) THEN  #有來源
   
      CALL s_axmt600_return_max(g_xmdk_m.xmdkdocno,g_xmdl_d_t.xmdlseq,g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002)
      RETURNING l_num
                  
      IF l_num < g_xmdl_d[l_ac].xmdl018 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'axm-00369'   #該單據%1項次%2可銷退量為%3，不可輸入！
         LET g_errparam.extend = g_xmdl_d[l_ac].xmdl018
         LET g_errparam.popup = TRUE
         LET g_errparam.replace[1] = g_xmdl_d[l_ac].xmdl001 
         LET g_errparam.replace[2] = g_xmdl_d[l_ac].xmdl002 
         LET g_errparam.replace[3] = l_num                     
         CALL cl_err()

         LET r_success = FALSE
         RETURN r_success
      END IF

      #檢查是否超出來源單的多庫儲批
      IF g_xmdl_d[l_ac].xmdl013 <> 'Y' THEN      
         CALL s_axmt600_return_max1(g_xmdk_m.xmdkdocno,g_xmdl_d_t.xmdlseq,g_xmdl_d[l_ac].xmdl016,g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002)
         RETURNING l_num 
         
         IF l_num < g_xmdl_d[l_ac].xmdl018 THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'axm-00369'   #該單據%1項次%2可銷退量為%3，不可輸入！
            LET g_errparam.extend = g_xmdl_d[l_ac].xmdl018
            LET g_errparam.popup = TRUE
            LET g_errparam.replace[1] = g_xmdl_d[l_ac].xmdl001 
            LET g_errparam.replace[2] = g_xmdl_d[l_ac].xmdl002 
            LET g_errparam.replace[3] = l_num                     
            CALL cl_err()
        
            LET r_success = FALSE
            RETURN r_success
         END IF
      END IF
   END IF

   #取位
   IF NOT cl_null(g_xmdl_d[l_ac].xmdl017) AND NOT cl_null(g_xmdl_d[l_ac].xmdl018) THEN
      CALL s_aooi250_take_decimals(g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018) RETURNING l_success,g_xmdl_d[l_ac].xmdl018
   END IF

   #推算參考數量
   IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) AND NOT cl_null(g_xmdl_d[l_ac].xmdl017) AND
      NOT cl_null(g_xmdl_d[l_ac].xmdl019) AND NOT cl_null(g_xmdl_d[l_ac].xmdl018) THEN
      
      CALL s_aooi250_convert_qty(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl018)
      RETURNING l_success,g_xmdl_d[l_ac].xmdl020
      LET g_xmdl_d_o.xmdl020 = g_xmdl_d[l_ac].xmdl020
   ELSE
      LET g_xmdl_d[l_ac].xmdl020 = ''
      LET g_xmdl_d_o.xmdl020 = g_xmdl_d[l_ac].xmdl020
   END IF
   
   #推算計價數量
   IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) AND NOT cl_null(g_xmdl_d[l_ac].xmdl017) AND
      NOT cl_null(g_xmdl_d[l_ac].xmdl021) AND NOT cl_null(g_xmdl_d[l_ac].xmdl018) THEN
      
      CALL s_aooi250_convert_qty(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl021,g_xmdl_d[l_ac].xmdl018)
      RETURNING l_success,g_xmdl_d[l_ac].xmdl022
      LET g_xmdl_d_o.xmdl022 = g_xmdl_d[l_ac].xmdl022
   ELSE
      LET g_xmdl_d[l_ac].xmdl022 = ''
      LET g_xmdl_d_o.xmdl022 = g_xmdl_d[l_ac].xmdl022
   END IF
   
   #取價
   #151209-00018#1  2015/12/10 By earl mod s
   IF cl_null(g_xmdl_d[l_ac].xmdl001) THEN   #無來源且有輸入料號、產品特徵時才做取價
      INITIALIZE l_price.* TO NULL
      CALL axmt600_get_price(l_ac)
      RETURNING l_price.source,l_price.docno,l_price.seq,l_price.price
      
      #重新取價
      IF cl_null(g_xmdl2_d[l_ac].xmdl042) THEN
         LET g_xmdl2_d[l_ac].xmdl042 = l_price.source
         LET g_xmdl2_d[l_ac].xmdl043 = l_price.docno
         LET g_xmdl2_d[l_ac].xmdl044 = l_price.seq
         LET g_xmdl2_d[l_ac].xmdl045 = l_price.price
      ELSE
         IF g_xmdl2_d[l_ac].xmdl045 <> l_price.price THEN
            IF cl_ask_confirm('axm-00230') THEN
               LET g_xmdl2_d[l_ac].xmdl042 = l_price.source
               LET g_xmdl2_d[l_ac].xmdl043 = l_price.docno
               LET g_xmdl2_d[l_ac].xmdl044 = l_price.seq
               LET g_xmdl2_d[l_ac].xmdl045 = l_price.price
            END IF
         END IF
      END IF
   #151209-00018#1  2015/12/10 By earl mod e
   
      LET g_xmdl2_d[l_ac].xmdl024 = g_xmdl2_d[l_ac].xmdl045
      LET g_xmdl2_d_o.xmdl024 = g_xmdl2_d[l_ac].xmdl024     
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 單頭更改時單身更新重新取價計算
# Memo...........:
# Usage..........: CALL axmt600_detail_update(p_oodb006,p_oodb011,p_xmdk017,p_type)
#                  RETURNING r_success
# Input parameter: p_oodb006  #稅率      p_type為1時使用
#                : p_oodb011  #稅別應用  p_type為1時使用
#                : p_xmdk017  #匯率
#                : p_type     #1.更改稅別2.更改幣別
# Return code....: r_success  #執行結果
#                : 
# Date & Author..: 141002 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt600_detail_update(p_oodb006,p_oodb011,p_xmdk017,p_type)
   DEFINE p_oodb006     LIKE oodb_t.oodb006
   DEFINE p_oodb011     LIKE oodb_t.oodb011
   DEFINE p_xmdk017     LIKE xmdk_t.xmdk017
   DEFINE p_type        LIKE type_t.chr1
   DEFINE r_success     LIKE type_t.num5

   DEFINE l_num         LIKE type_t.num5
   DEFINE l_sql         STRING

   DEFINE l_xmdl027     LIKE xmdl_t.xmdl027
   DEFINE l_xmdl028     LIKE xmdl_t.xmdl028
   DEFINE l_xmdl029     LIKE xmdl_t.xmdl029

   DEFINE l_xmdl     RECORD
             xmdlseq       LIKE xmdl_t.xmdlseq,
             xmdl001       LIKE xmdl_t.xmdl001,
             xmdl003       LIKE xmdl_t.xmdl003,
             xmdl004       LIKE xmdl_t.xmdl004,
             xmdl008       LIKE xmdl_t.xmdl008,
             xmdl009       LIKE xmdl_t.xmdl009,
             xmdl018       LIKE xmdl_t.xmdl018,
             xmdl021       LIKE xmdl_t.xmdl021,
             xmdl022       LIKE xmdl_t.xmdl022,
             xmdl024       LIKE xmdl_t.xmdl024,
             xmdl025       LIKE xmdl_t.xmdl025,
             xmdl026       LIKE xmdl_t.xmdl026,
             xmdl042       LIKE xmdl_t.xmdl042,
             xmdl043       LIKE xmdl_t.xmdl043,
             xmdl044       LIKE xmdl_t.xmdl044,
             xmdl045       LIKE xmdl_t.xmdl045
                     END RECORD

   DEFINE l_source  LIKE xmdc_t.xmdc040
   DEFINE l_price   LIKE xmdc_t.xmdc043
   DEFINE l_docno   LIKE xmdc_t.xmdcdocno
   DEFINE l_seq     LIKE xmdc_t.xmdcseq

   LET r_success = TRUE
   
   IF cl_null(p_type) THEN
      RETURN r_success
   END IF

   LET l_sql = "SELECT xmdlseq,xmdl001,xmdl003,xmdl004,",
               "       xmdl008,xmdl009,",
               "       xmdl018,xmdl021,xmdl022,",
               "       xmdl024,xmdl025,xmdl026",
               "  FROM xmdl_t",
               " WHERE xmdlent = '",g_enterprise,"'",
               "   AND xmdldocno = '",g_xmdk_m.xmdkdocno,"'"
   PREPARE axmt600_detail_pre FROM l_sql
   DECLARE axmt600_detail_cs CURSOR WITH HOLD FOR axmt600_detail_pre

   #無設定幣別、內外銷不更新
   IF cl_null(g_xmdk_m.xmdk016) OR cl_null(g_xmdk_m.xmdk042) THEN
      RETURN r_success
   END IF

   LET l_num = 0
   SELECT COUNT(xmdlseq) INTO l_num
     FROM xmdl_t
    WHERE xmdlent = g_enterprise
      AND xmdldocno = g_xmdk_m.xmdkdocno
      
   IF l_num = 0 THEN
      RETURN r_success  #無單身不更新
   END IF

   CASE p_type
      WHEN '1' #稅別
         IF cl_null(g_xmdk_m.xmdk012) THEN
            RETURN r_success
         END IF
                  
         #稅別應用為'1'正常稅率
         IF p_oodb011 = '1' THEN
            IF NOT cl_ask_confirm('axm-00230') THEN  #條件已變更，是否重新取價，並重新計算含税、未税金额
               LET r_success = FALSE
               RETURN r_success
            END IF
         END IF
           
      WHEN '2' #幣別
         IF NOT cl_ask_confirm('axm-00230') THEN  #條件已變更，是否重新取價，並重新計算含税、未税金额
            LET r_success = FALSE
            RETURN r_success
         END IF
         
   END CASE

   INITIALIZE l_xmdl.* TO NULL
   FOREACH axmt600_detail_cs INTO l_xmdl.xmdlseq,l_xmdl.xmdl001,l_xmdl.xmdl003,l_xmdl.xmdl004,
                                  l_xmdl.xmdl008,l_xmdl.xmdl009,
                                  l_xmdl.xmdl018,l_xmdl.xmdl021,l_xmdl.xmdl022,
                                  l_xmdl.xmdl024,l_xmdl.xmdl025,l_xmdl.xmdl026
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'FOREACH'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET r_success = FALSE
         EXIT FOREACH
      END IF

      IF p_type = '1' AND p_oodb011 = '1' THEN  #稅別修改、正常稅率
         LET l_xmdl.xmdl025 = g_xmdk_m.xmdk012  #稅別
         LET l_xmdl.xmdl026 = p_oodb006         #稅率
      END IF

      #稅額計算                     
      CALL s_axmt540_tax_count('',g_xmdk_m.xmdkdocno,l_xmdl.xmdlseq,g_site,g_xmdk_m.xmdk012,
                               l_xmdl.xmdl022,l_xmdl.xmdl024,g_xmdk_m.xmdk016,p_xmdk017,
                               l_xmdl.xmdl003,l_xmdl.xmdl004,l_xmdl.xmdl018)
      RETURNING l_xmdl027,l_xmdl028,l_xmdl029

      UPDATE xmdl_t
         SET xmdl025 = l_xmdl.xmdl025,   #稅別
             xmdl026 = l_xmdl.xmdl026,   #稅率
             xmdl027 = l_xmdl027,        #未稅金額
             xmdl028 = l_xmdl028,        #含稅金額
             xmdl029 = l_xmdl029         #稅額
       WHERE xmdlent = g_enterprise
         AND xmdldocno = g_xmdk_m.xmdkdocno
         AND xmdlseq = l_xmdl.xmdlseq

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'UPDATE'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET r_success = FALSE
         EXIT FOREACH
      END IF      
   END FOREACH

   IF NOT r_success THEN
      RETURN r_success
   END IF

   #重新計算整單的未稅、含稅總金額
   CALL axmt600_tax_recount(g_xmdk_m.xmdkdocno) RETURNING r_success
   
   #更新單身顯示
   CALL axmt600_b_fill()
   
   RETURN r_success
END FUNCTION

#產品特徵檢查
PRIVATE FUNCTION axmt600_xmdl008_xmdl009_chk()
   DEFINE r_success    LIKE type_t.num5
   
   DEFINE l_xmdl008              LIKE xmdl_t.xmdl008
   DEFINE l_xmdl009              LIKE xmdl_t.xmdl009
   
   LET r_success = TRUE
   
   IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) AND NOT cl_null(g_xmdl_d[l_ac].xmdl009) THEN
         
      #產品特徵檢查
      IF NOT s_feature_check (g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF      
      
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 取得單據別設定帶出單頭預設值
# Memo...........:
# Usage..........: CALL axmt600_doc_default()
#                 
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 141202 By earl
# Modify.........: aooi200設定之預設值
################################################################################
PRIVATE FUNCTION axmt600_doc_default()
   DEFINE  l_success    LIKE type_t.num5
   DEFINE  l_slip       LIKE oobal_t.oobal002
   DEFINE  l_oodbl004   LIKE oodbl_t.oodbl004  #稅別名稱
   DEFINE  l_oodb005    LIKE oodb_t.oodb005    #含稅否
   DEFINE  l_oodb006    LIKE oodb_t.oodb006    #稅率
   DEFINE  l_oodb011    LIKE oodb_t.oodb011    #取得稅別類型1:正常稅率2:依料件設定

   #抓取單據別
   LET l_slip = ''
   CALL s_aooi200_get_slip(g_xmdk_m.xmdkdocno) RETURNING l_success,l_slip
   IF NOT l_success THEN
      RETURN
   END IF
   
   LET g_xmdk_m.xmdk001 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk001',g_xmdk_m.xmdk001)
   LET g_xmdk_m.xmdk003 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk003',g_xmdk_m.xmdk003)
   LET g_xmdk_m.xmdk004 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk004',g_xmdk_m.xmdk004)

   LET g_xmdk_m.xmdk007 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk007',g_xmdk_m.xmdk007)
   LET g_xmdk_m.xmdk008 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk008',g_xmdk_m.xmdk008)
   LET g_xmdk_m.xmdk009 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk009',g_xmdk_m.xmdk009)
   LET g_xmdk_m.xmdk010 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk010',g_xmdk_m.xmdk010)   
   LET g_xmdk_m.xmdk011 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk011',g_xmdk_m.xmdk011)
   LET g_xmdk_m.xmdk012 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk012',g_xmdk_m.xmdk012)
   
   LET g_xmdk_m.xmdk015 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk015',g_xmdk_m.xmdk015)
   LET g_xmdk_m.xmdk016 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk016',g_xmdk_m.xmdk016)
   
   LET g_xmdk_m.xmdk018 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk018',g_xmdk_m.xmdk018)
   
   LET g_xmdk_m.xmdk030 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk030',g_xmdk_m.xmdk030)
   LET g_xmdk_m.xmdk031 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk031',g_xmdk_m.xmdk031)

   LET g_xmdk_m.xmdk033 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk033',g_xmdk_m.xmdk033)

   LET g_xmdk_m.xmdk042 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk042',g_xmdk_m.xmdk042)
   LET g_xmdk_m.xmdk043 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk043',g_xmdk_m.xmdk043)
   LET g_xmdk_m.xmdk044 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk044',g_xmdk_m.xmdk044)
   LET g_xmdk_m.xmdk045 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk045',g_xmdk_m.xmdk045)
   LET g_xmdk_m.xmdk054 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk054',g_xmdk_m.xmdk054) 
   LET g_xmdk_m.xmdk082 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk082',g_xmdk_m.xmdk082)    #161020-00019#1 add   

   LET g_xmdk_m.xmdk202 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk202',g_xmdk_m.xmdk202)
   
   IF NOT cl_null(g_xmdk_m.xmdk012) THEN                   
      #檢查、取得稅別、單價含稅否
      CALL s_tax_chk(g_site,g_xmdk_m.xmdk012)
      RETURNING l_success,l_oodbl004,l_oodb005,l_oodb006,l_oodb011
      
      LET g_xmdk_m.xmdk013 = l_oodb006
      LET g_xmdk_m.xmdk014 = l_oodb005
   END IF
   
   CALL axmt600_get_exchange()
   
   CALL axmt600_xmdk018_ref()
   
   CALL s_desc_get_person_desc(g_xmdk_m.xmdk003) RETURNING g_xmdk_m.xmdk003_desc            
   CALL s_desc_get_department_desc(g_xmdk_m.xmdk004) RETURNING g_xmdk_m.xmdk004_desc
            
   CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk007) RETURNING g_xmdk_m.xmdk007_desc            
   CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk008) RETURNING g_xmdk_m.xmdk008_desc
   CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk009) RETURNING g_xmdk_m.xmdk009_desc
   CALL s_desc_get_ooib002_desc(g_xmdk_m.xmdk010) RETURNING g_xmdk_m.xmdk010_desc
   CALL s_desc_get_acc_desc('238',g_xmdk_m.xmdk011) RETURNING g_xmdk_m.xmdk011_desc
   CALL s_desc_get_tax_desc1(g_site,g_xmdk_m.xmdk012) RETURNING g_xmdk_m.xmdk012_desc
           
   CALL s_desc_get_invoice_type_desc1(g_site,g_xmdk_m.xmdk015) RETURNING g_xmdk_m.xmdk015_desc
   CALL s_desc_get_currency_desc(g_xmdk_m.xmdk016) RETURNING g_xmdk_m.xmdk016_desc   
            
   #160621-00003#3 20160629 modify by beckxie---S
   #CALL s_desc_get_acc_desc('275',g_xmdk_m.xmdk030) RETURNING g_xmdk_m.xmdk030_desc
   CALL s_desc_get_oojdl003_desc(g_xmdk_m.xmdk030) RETURNING g_xmdk_m.xmdk030_desc
   #160621-00003#3 20160629 modify by beckxie---E
   CALL s_desc_get_acc_desc('295',g_xmdk_m.xmdk031) RETURNING g_xmdk_m.xmdk031_desc
            
   CALL s_desc_get_acc_desc('209',g_xmdk_m.xmdk033) RETURNING g_xmdk_m.xmdk033_desc
               
   CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk202) RETURNING g_xmdk_m.xmdk202_desc
   
   LET g_xmdk_m_o.* = g_xmdk_m.*
   DISPLAY BY NAME g_xmdk_m.*
END FUNCTION
################################################################################
# Descriptions...: 依據取價方式抓取銷售單價
# Memo...........:
# Usage..........: CALL axmt600_get_price(p_seq)
#                  RETURNING r_source,r_docno,r_seq,r_price
# Input parameter: p_seq    單據項次
#                : 
# Return code....: r_source 取價來源
#                : r_docno  參考單號
#                : r_seq    參考項次
#                : r_price  取出單價
# Date & Author..: 141223 By Shiun
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt600_get_price(p_seq)
   DEFINE p_seq     LIKE xmdl_t.xmdlseq
   
   DEFINE r_source  LIKE xmdc_t.xmdc040
   DEFINE r_docno   LIKE xmdc_t.xmdcdocno
   DEFINE r_seq     LIKE xmdc_t.xmdcseq
   DEFINE r_price   LIKE xmdc_t.xmdc043

   LET r_source = ''
   LET r_price = 0
   LET r_docno = ''
   LET r_seq = ''

   IF NOT cl_null(g_xmdk_m.xmdk018) AND NOT cl_null(g_xmdk_m.xmdk007) AND NOT cl_null(g_xmdk_m.xmdk016)
      AND NOT cl_null(g_xmdk_m.xmdk010) AND NOT cl_null(g_xmdk_m.xmdk011) AND NOT cl_null(g_xmdk_m.xmdk030)
      AND NOT cl_null(g_xmdk_m.xmdkdocno) AND NOT cl_null(g_xmdk_m.xmdkdocdt) AND NOT cl_null(g_xmdk_m.xmdk042)
      AND NOT cl_null(g_xmdl_d[p_seq].xmdl008)
      AND NOT cl_null(g_xmdl_d[p_seq].xmdl021) AND NOT cl_null(g_xmdl_d[p_seq].xmdl022)
      AND NOT cl_null(g_xmdl2_d[p_seq].xmdl025) THEN

      IF cl_null(g_xmdl_d[p_seq].xmdl009) THEN  #產品特徵
         LET g_xmdl_d[p_seq].xmdl009 = ' '
      END IF
       
      CALL s_sale_price_get(g_xmdk_m.xmdk018,g_xmdk_m.xmdk007,g_xmdl_d[p_seq].xmdl008,g_xmdl_d[p_seq].xmdl009,g_xmdk_m.xmdk016,
                            g_xmdl2_d[p_seq].xmdl025,g_xmdk_m.xmdk010,g_xmdk_m.xmdk011,g_xmdk_m.xmdk030,g_xmdk_m.xmdkdocno,
                            g_xmdk_m.xmdkdocdt,g_xmdl_d[p_seq].xmdl021,g_xmdl_d[p_seq].xmdl022,g_site,'1',
                            g_xmdk_m.xmdk042)
      RETURNING r_source,r_price,r_docno,r_seq
         
   END IF

   RETURN r_source,r_docno,r_seq,r_price
END FUNCTION

PRIVATE FUNCTION axmt600_xmdk018_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmdk_m.xmdk018
   CALL ap_ref_array2(g_ref_fields,"SELECT xmahl003 FROM xmahl_t WHERE xmahlent='"||g_enterprise||"' AND xmahl001=? AND xmahl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmdk_m.xmdk018_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmdk_m.xmdk018_desc
END FUNCTION

PRIVATE FUNCTION axmt600_set_required_b(p_cmd)
   DEFINE p_cmd        LIKE type_t.chr1
   DEFINE l_imaa004    LIKE imaa_t.imaa004  #20151102 by stellar add 151102-00010#2
   DEFINE l_imaf055    LIKE imaf_t.imaf055  #160125-00022 by whitney add
   DEFINE l_imaf061    LIKE imaf_t.imaf061  #160125-00022 by whitney add
   DEFINE l_success    LIKE type_t.num5     #160225-00028#1-add
   DEFINE l_slip       LIKE ooba_t.ooba001  #160225-00028#1-add
   
   IF NOT cl_null(g_xmdl_d[l_ac].xmdl001) OR
      NOT cl_null(g_xmdl_d[l_ac].xmdl002) THEN
   
      CALL cl_set_comp_required("xmdl001,xmdl002",TRUE)
      
   END IF
   
   IF g_xmdk_m.xmdk082 <> '4' THEN  #4:銷貨折讓(純金額折價)  
      CALL cl_set_comp_required("xmdl014",TRUE)  #150615
   #20151102 by stellar add 151102-00010#2 ----- (S)
   ELSE
      #若不為費用性料號，則卡必輸
      IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) THEN
         SELECT imaa004 INTO l_imaa004 
           FROM imaa_t
          WHERE imaaent = g_enterprise
            AND imaa001 = g_xmdl_d[l_ac].xmdl008
         IF NOT cl_null(l_imaa004) AND l_imaa004 <> 'E' THEN
            CALL cl_set_comp_required("xmdl014",TRUE)
         END IF
      END IF
   #20151102 by stellar add 151102-00010#2 ----- (E)
   END IF   
   
   #160125-00022 by whitney add start
   #庫存管理特微
   CALL s_axmt540_get_imaf(g_xmdl_d[l_ac].xmdl008) RETURNING l_imaf055,l_imaf061
   IF l_imaf055 = '1' THEN
      CALL cl_set_comp_required("xmdl052",TRUE)
   END IF
   #批號
   IF l_imaf061 = '1' THEN
      CALL cl_set_comp_required("xmdl016",TRUE)
   END IF
   #160125-00022 by whitney add end 
   #160225-00028#1-add-(S)
   CALL s_aooi200_get_slip(g_xmdk_m.xmdkdocno) RETURNING l_success,l_slip
   IF l_success THEN
      IF cl_get_doc_para(g_enterprise,g_site,l_slip,'D-BAS-0082') = 'Y' THEN #銷貨來源單為出貨單
         CALL cl_set_comp_required("xmdl001,xmdl002",TRUE)
      END IF
   END IF
   #160225-00028#1-add-(E)   
END FUNCTION

PRIVATE FUNCTION axmt600_set_no_required_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1
   
   CALL cl_set_comp_required("xmdl001,xmdl002",FALSE)
   
   CALL cl_set_comp_required("xmdl014",FALSE)  #150615
   
   CALL cl_set_comp_required("xmdl052,xmdl016",FALSE)  #160125-00022 by whitney add 庫存管理特微 批
   CALL cl_set_comp_required("xmd001,xmdl002",FALSE)   #160225-00028#1-add
END FUNCTION

PRIVATE FUNCTION axmt600_set_required(p_cmd)
DEFINE p_cmd   LIKE type_t.chr1  
DEFINE l_success LIKE type_t.num5    #160225-00028#1-add
DEFINE l_slip    LIKE ooba_t.ooba001 #160225-00028#1-add
   IF g_xmdk_m.xmdk045 = '2' OR 
      g_xmdk_m.xmdk045 = '3' THEN  #2:銷售多角,3:统销统收
      CALL cl_set_comp_required("xmdk044",TRUE)
   END IF
   #160225-00028#1-add-(S)
   IF NOT cl_null(g_xmdk_m.xmdkdocno) THEN
      CALL s_aooi200_get_slip(g_xmdk_m.xmdkdocno) RETURNING l_success,l_slip
      IF l_success THEN
         IF cl_get_doc_para(g_enterprise,g_site,l_slip,'D-BAS-0082') = 'Y' THEN #銷貨來源單為出貨單
            CALL cl_set_comp_required("xmdk005",TRUE)
         END IF
      END IF
   END IF
   #160225-00028#1-add-(E)
      
END FUNCTION

PRIVATE FUNCTION axmt600_set_no_required(p_cmd)
DEFINE p_cmd   LIKE type_t.chr1  

   CALL cl_set_comp_required("xmdk044",FALSE)
   CALL cl_set_comp_required("xmdk005",FALSE) #160225-00028#1-add
END FUNCTION
################################################################################
# Descriptions...: 串查單號
# Memo...........:
# Usage..........: CALL axmt600_qrystr(p_docno)
# Input parameter: p_docno   查詢單號
# Date & Author..: 2015/04/29 By Shiun
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt600_qrystr(p_docno)
   DEFINE p_docno LIKE xmdk_t.xmdkdocno
   DEFINE l_slip     LIKE oobal_t.oobal002
   DEFINE l_prog     LIKE oobx_t.oobx004
   DEFINE l_success  LIKE type_t.num5
   DEFINE ls_js      STRING
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   #抓取單據別
   LET l_slip = ''
   LET l_prog = ''
   IF NOT cl_null(p_docno) THEN
      CALL s_aooi200_get_slip(p_docno) RETURNING l_success,l_slip
      IF NOT cl_null(l_slip) THEN
         #抓取程式名稱
         SELECT oobx004 INTO l_prog
           FROM oobx_t
          WHERE oobxent = g_enterprise
            AND oobx001 = l_slip
      END IF
      IF NOT cl_null(l_prog) THEN
         INITIALIZE la_param.* TO NULL
         LET la_param.prog     = l_prog
         LET la_param.param[1] = p_docno
         LET ls_js = util.JSON.stringify(la_param)
         CALL cl_cmdrun_wait(ls_js)
      END IF
   END IF
END FUNCTION

#銷退方式檢查
PRIVATE FUNCTION axmt600_xmdk082_chk(p_slip,p_xmdk082)
   DEFINE p_slip       LIKE xmdk_t.xmdkdocno   #出貨/簽收單號
   DEFINE p_xmdk082    LIKE xmdk_t.xmdk082     #銷退方式
   DEFINE r_success    LIKE type_t.num5
   DEFINE l_xmdk000    LIKE xmdk_t.xmdk000
   DEFINE l_num        LIKE type_t.num5
   
   LET r_success = TRUE
   LET l_num = 0
   
   IF NOT cl_null(p_slip) AND NOT cl_null(p_xmdk082) THEN
      IF p_xmdk082 = '2' THEN
         LET l_xmdk000 = ''
         SELECT xmdk000 INTO l_xmdk000
           FROM xmdk_t
          WHERE xmdkent = g_enterprise
            AND xmdkdocno = p_slip
         
         IF l_xmdk000 = '4' THEN   #簽收單
            SELECT COUNT(xmdkdocno) INTO l_num
              FROM xmdk_t
             WHERE xmdkent = g_enterprise
               AND xmdk000 = '2'
               AND xmdkdocno IN (SELECT xmdl001
                                   FROM xmdl_t
                                  WHERE xmdlent = g_enterprise
                                    AND xmdldocno = p_slip)
         ELSE
            IF l_xmdk000 = '2' THEN   #無訂單出貨單
               LET l_num = 1
            END IF
         END IF
      END IF
   END IF

   IF l_num > 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'axm-00643'  #來源為無訂單出貨單，銷退方式不可選擇"2:銷退依原訂單出貨"
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()
      
      LET r_success = FALSE
   END IF

   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 取得發票號碼
# Memo...........:
# Usage..........: CALL axmt600_get_invoice_num(p_xmdl001,p_xmdl002)
#                  RETURNING r_xmdl048,r_xmdl049
# Input parameter: p_xmdl001:單號
#                : p_xmdl002:項次
# Return code....: r_xmdl048:發票代碼
#                : r_xmdl049:發票號碼
# Date & Author..: 2015/07/06 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt600_get_invoice_num(p_xmdl001,p_xmdl002)
   DEFINE p_xmdl001     LIKE xmdl_t.xmdl001
   DEFINE p_xmdl002     LIKE xmdl_t.xmdl002

   DEFINE l_sql         STRING
   DEFINE r_xmdl048     LIKE xmdl_t.xmdl048     #發票代碼  
   DEFINE r_xmdl049     LIKE xmdl_t.xmdl049     #發票號碼  
   DEFINE l_money       LIKE isat_t.isat103
   DEFINE l_sum_xmdl027 LIKE xmdl_t.xmdl027

   LET r_xmdl048 = ''
   LET r_xmdl049 = ''

   IF cl_null(p_xmdl001) OR cl_null(p_xmdl002) THEN
      RETURN r_xmdl048,r_xmdl049
   END IF

   LET l_sql = " SELECT isat003,isat004,(isat103-isat106) ",
               "   FROM isaf_t,isag_t,isat_t ",
               "  WHERE isafent   = isagent ",
               "    AND isagent   = isatent ",
               "    AND isafcomp  = isagcomp ",
               "    AND isagcomp  = isatcomp ",
               "    AND isafdocno = isagdocno ",
               "    AND isagdocno = isatdocno ",
              #"    AND isagseq   = isatseq ",   #albireo 151007 mark
               "    AND isagent   = '",g_enterprise,"' ",
               "    AND isag002   = '",p_xmdl001,"' ", 
               "    AND isag003   = '",p_xmdl002,"' ",
               "    AND isat014   = '11' ",
               "    AND isat025  <> '12' ",     #151021-00014 #1 earl add
               "    AND isat103 - isat106 > 0 "
   PREPARE axmt600_isat_prep FROM l_sql
   DECLARE axmt600_isat_curs CURSOR FOR axmt600_isat_prep

   FOREACH axmt600_isat_curs INTO r_xmdl048,r_xmdl049,l_money

      LET l_sum_xmdl027 = 0
      SELECT SUM(xmdl027) INTO l_sum_xmdl027
        FROM xmdk_t,xmdl_t
       WHERE xmdkent   = xmdlent
         AND xmdkdocno = xmdldocno
         AND xmdkent   = g_enterprise
         AND xmdkdocno != g_xmdk_m.xmdkdocno   #排除自己這張單  
         AND xmdkstus  = 'Y'
         AND xmdk000   = '6'    #銷退單 
         AND xmdl038   = '0'
         AND xmdl049   = r_xmdl049

      IF cl_null(l_sum_xmdl027) THEN
         LET l_sum_xmdl027 = 0
      END IF

      IF l_money - l_sum_xmdl027 <=0 THEN
         LET r_xmdl048 = ''
         LET r_xmdl049 = ''
         CONTINUE FOREACH
      END IF 
      
      IF NOT cl_null(r_xmdl049) THEN
         EXIT FOREACH
      END IF

   END FOREACH

   RETURN r_xmdl048,r_xmdl049
   
END FUNCTION

################################################################################
# Descriptions...: 檢查發票欄位
# Memo...........:
# Usage..........: CALL axmt600_chk_xmdl049()
#                  RETURNING r_success
# Return code....: r_success: true/false
# Date & Author..: 2015/07/06 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt600_chk_xmdl049()
   DEFINE l_isat_money     LIKE isat_t.isat103
   DEFINE l_other_xmdl027  LIKE xmdl_t.xmdl027
   DEFINE l_xmdl027        LIKE xmdl_t.xmdl027
   DEFINE r_success        LIKE type_t.num5

   LET r_success = TRUE

   #取得發票可折金額 
   LET l_isat_money = 0
#151007 Sarah mod ------(S)
#   SELECT isat103 - isat106 INTO l_isat_money
#     FROM isaf_t,isag_t,isat_t
#    WHERE isafent   = isagent
#      AND isagent   = isatent
#      AND isafcomp  = isagcomp
#      AND isagcomp  = isatcomp
#      AND isafdocno = isagdocno
#      AND isagdocno = isatdocno
#      AND isagseq   = isatseq
#      AND isagent   = g_enterprise
#      AND isat004   = g_xmdl2_d[l_ac].xmdl049
#      AND isat014   = '11'
#      AND isat025  <> '12'   #151021-00014 #1 earl add
#      AND isat103 - isat106 > 0
   SELECT isat103 - isat106 INTO l_isat_money
     FROM isat_t
    WHERE isatent   = g_enterprise
      AND isat004   = g_xmdl2_d[l_ac].xmdl049
      AND isat014   = '11'
      AND isat025  <> '12'   #151021-00014 #1 earl add
      AND isat103 - isat106 > 0
#151007 Sarah mod ------(E)   
   IF cl_null(l_isat_money) THEN
      LET l_isat_money = 0
   END IF

   #取得其他單據的銷退金額  
   LET l_other_xmdl027 = 0
   SELECT SUM(xmdl027) INTO l_other_xmdl027
     FROM xmdk_t,xmdl_t
    WHERE xmdkent   = xmdlent
      AND xmdkdocno = xmdldocno
      AND xmdkent   = g_enterprise
      AND xmdkdocno != g_xmdk_m.xmdkdocno
      AND xmdkstus  = 'Y'
      AND xmdk000   = '6'
      AND xmdl038   = '0'
      AND xmdl049   = g_xmdl2_d[l_ac].xmdl049
   IF cl_null(l_other_xmdl027) THEN
      LET l_other_xmdl027 = 0
   END IF

   #取得本單據中相同的發票金額 
   LET l_xmdl027 = 0
   SELECT SUM(xmdl027) INTO l_xmdl027
     FROM xmdl_t
    WHERE xmdlent   = g_enterprise
      AND xmdldocno = g_xmdk_m.xmdkdocno
      AND xmdlseq   != g_xmdl_d[l_ac].xmdlseq
      AND xmdl038   = '0'
      AND xmdl049   = g_xmdl2_d[l_ac].xmdl049
   IF cl_null(l_xmdl027) THEN
      LET l_xmdl027 = 0
   END IF

   #151022-00013 by whitney modify start
   #銷退金額%1大於剩餘發票可折金額%2(發票可折金額%3-已折讓金額%4)
   IF l_isat_money - l_other_xmdl027 - l_xmdl027 < g_xmdl2_d[l_ac].xmdl027 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code  = 'axm-00698'
      LET g_errparam.popup = TRUE
      LET g_errparam.replace[1] = g_xmdl2_d[l_ac].xmdl027
      LET g_errparam.replace[2] = l_isat_money - l_other_xmdl027 - l_xmdl027
      LET g_errparam.replace[3] = l_isat_money
      LET g_errparam.replace[4] = l_isat_money + l_other_xmdl027
      CALL cl_err()
      LET r_success = FALSE
   END IF
   #151022-00013 by whitney modify end

   RETURN r_success
   
END FUNCTION

################################################################################
# Descriptions...: 多角銷退方式檢查
# Memo...........:
# Usage..........: CALL axmt600_xmdk045_xmdk082_chk(p_xmdk045,p_xmdk082)
#                  RETURNING r_success
# Input parameter: p_xmdk045 #多角性質
#                : p_xmdk082 #銷退方式
# Return code....: r_success
#                : 
# Date & Author..: 151113 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt600_xmdk045_xmdk082_chk(p_xmdk045,p_xmdk082)
   DEFINE p_xmdk045    LIKE xmdk_t.xmdk045     #多角性質
   DEFINE p_xmdk082    LIKE xmdk_t.xmdk082     #銷退方式
   DEFINE r_success    LIKE type_t.num5
   
   LET r_success = TRUE
   
   IF NOT cl_null(p_xmdk045) AND NOT cl_null(p_xmdk082) THEN
      #多角性質為："2.銷售多角,5.中間交易,7:代採購出貨"
      IF p_xmdk045 = '2' OR
         p_xmdk045 = '5' OR
         p_xmdk045 = '7' THEN
         
         #1:銷售退回            (pass並拋轉)
         #2:銷退依原訂單出貨     (pass並拋轉)
         #3:銷退產生新訂單出貨   (不pass不拋轉)
         #4:銷貨折讓(純金額折價) (pass不拋轉)
         #5:銷退換貨(與帳款無關) (不pass不拋轉)
         IF p_xmdk082 = '3' OR p_xmdk082 = '5' THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code  = 'axm-00733'   #多角拋轉之單據，銷退方式不可為"銷退產生新訂單出貨"或"銷退換貨(與帳款無關)"！
            LET g_errparam.popup = TRUE
            
            CALL cl_err()
            LET r_success = FALSE
         END IF
      END IF
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 計價單位修改
# Memo...........:
# Usage..........: CALL axmt600_xmdl021()
#                  
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 151209 By earl
# Modify.........: 151209-00018#1  2015/12/09 By earl         修正無來源時計價單位預設問題
################################################################################
PRIVATE FUNCTION axmt600_xmdl021()
   DEFINE l_xmdl   RECORD
             xmdl007    LIKE xmdl_t.xmdl007,  #子件特性
             xmdl010    LIKE xmdl_t.xmdl010,  #包裝容器
             xmdl017    LIKE xmdl_t.xmdl017,  #出貨單位
             xmdl019    LIKE xmdl_t.xmdl019,  #參考單位
             xmdl021    LIKE xmdl_t.xmdl021,  #計價單位
             xmdl014    LIKE xmdl_t.xmdl014,  #出貨庫位
             xmdl015    LIKE xmdl_t.xmdl015   #出貨儲位
                   END RECORD
      
      #預帶料件預設值
      CALL s_axmt540_materials_search(g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdk007,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009)
      RETURNING l_xmdl.xmdl007,l_xmdl.xmdl010,l_xmdl.xmdl017,l_xmdl.xmdl019,l_xmdl.xmdl021,l_xmdl.xmdl014,l_xmdl.xmdl015
      
      #無預設之計價單位
      IF cl_null(l_xmdl.xmdl021) THEN
         LET l_xmdl.xmdl021 = g_xmdl_d[l_ac].xmdl017
      END IF
      
      #營運據點是否使用計價單位(若不使用為出貨單位)
      IF cl_get_para(g_enterprise,g_site,'S-BAS-0007') = "N" THEN
         LET g_xmdl_d[l_ac].xmdl021 = g_xmdl_d[l_ac].xmdl017
      ELSE
         LET g_xmdl_d[l_ac].xmdl021 = l_xmdl.xmdl021  #計價單位
      END IF      
      
      LET g_xmdl_d_o.xmdl021 = g_xmdl_d[l_ac].xmdl021
      CALL s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl021) RETURNING g_xmdl_d[l_ac].xmdl021_desc 
      
END FUNCTION

################################################################################
# Descriptions...: 帶出發起站多角性質
# Memo...........:
# Usage..........: CALL axmt600_xmdk045_default(p_xmdk045,p_xmdk044,p_xmdk035)
#                  RETURNING r_xmdk045
# Input parameter: p_xmdk045   #多角性質
#                : p_xmdk044   #多角代碼
#                : p_xmdk035   #多角序號
# Return code....: r_xmdk045   #多角性質
#                : 
# Date & Author..: 151124-00004#1  2015/12/11 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt600_xmdk045_default(p_xmdk045,p_xmdk044,p_xmdk035)
   DEFINE p_xmdk045     LIKE xmdk_t.xmdk045  #多角性質
   DEFINE p_xmdk044     LIKE xmdk_t.xmdk044  #多角代碼
   DEFINE p_xmdk035     LIKE xmdk_t.xmdk035  #多角序號
   DEFINE r_xmdk045     LIKE xmdk_t.xmdk045  #多角性質
   
   DEFINE l_icaa004     LIKE icaa_t.icaa004
   
   LET r_xmdk045 = p_xmdk045
   
   #多角性質
   IF NOT cl_null(p_xmdk044) AND NOT cl_null(p_xmdk035) THEN
      LET l_icaa004 = ''
      SELECT icaa004
        INTO l_icaa004
        FROM icaa_t
       WHERE icaaent = g_enterprise
         AND icaa001 = p_xmdk044
      
      IF l_icaa004 = '1' THEN  #出貨單正拋
         #改抓第0站之多角性質
         SELECT xmdk045
           INTO r_xmdk045
           FROM xmdk_t
          WHERE xmdkent = g_enterprise
            AND xmdk035 = p_xmdk035
            AND xmdksite = (SELECT icab003
                              FROM icab_t
                             WHERE icabent = g_enterprise
                               AND icab001 = p_xmdk044
                               AND icab002 = 0)
      ELSE #出貨單逆拋
         #改抓最終站之多角性質
         SELECT xmdk045
           INTO r_xmdk045
           FROM xmdk_t
          WHERE xmdkent = g_enterprise
            AND xmdk035 = p_xmdk035
            AND xmdksite = (SELECT icab003
                              FROM icab_t
                             WHERE icabent = g_enterprise
                               AND icab001 = p_xmdk044
                               AND icab002 = (SELECT MAX(icab002)
                                                FROM icab_t
                                               WHERE icabent = g_enterprise
                                                 AND icab001 = p_xmdk044))
      END IF
   END IF
   
   RETURN r_xmdk045
END FUNCTION

################################################################################
# Descriptions...: 匯率
# Memo...........:
# Usage..........: CALL axmt600_get_exchange()
# Input parameter: 
# Return code....: 
# Date & Author..: 151210-00014 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt600_get_exchange()
DEFINE l_xrcadocdt  LIKE xrca_t.xrcadocdt

   IF NOT cl_null(g_xmdk_m.xmdk043) AND NOT cl_null(g_xmdk_m.xmdk005) THEN
      CASE g_xmdk_m.xmdk043
         WHEN '1'  #依訂單日匯率
            IF NOT cl_null(g_xmdk_m.xmdk006) THEN
               SELECT xmda016 INTO g_xmdk_m.xmdk017
                 FROM xmda_t
                WHERE xmdaent = g_enterprise
                  AND xmdadocno = g_xmdk_m.xmdk006
            END IF
         WHEN '2'  #依INVOICE日匯率
            SELECT xmdo017 INTO g_xmdk_m.xmdk017
              FROM xmdo_t,xmdk_t
             WHERE xmdoent = g_enterprise
               AND xmdkent = xmdoent
               AND xmdkdocno = g_xmdk_m.xmdk005
               AND (( xmdo004 = '1' AND xmdo005 = xmdk005 ) OR ( xmdo004 = '2' AND xmdo005 = xmdkdocno ))
               AND ROWNUM = 1
         WHEN '3'  #依出貨日匯率
            SELECT xmdk017 INTO g_xmdk_m.xmdk017
              FROM xmdk_t
             WHERE xmdkent = g_enterprise
               AND xmdkdocno = g_xmdk_m.xmdk005
         WHEN '4'  #依立帳日匯率
            SELECT xrca101 INTO g_xmdk_m.xmdk017
              FROM xrcb_t LEFT OUTER JOIN xrca_t ON xrcaent = xrcbent AND xrcadocno = xrcbdocno
             WHERE xrcbent = g_enterprise
               AND xrcb002 = g_xmdk_m.xmdk005
               AND ROWNUM = 1
         WHEN '5'  #依立帳日月平均匯率
            LET l_xrcadocdt = ''
            SELECT xrcadocdt INTO l_xrcadocdt
              FROM xrcb_t LEFT OUTER JOIN xrca_t ON xrcaent = xrcbent AND xrcadocno = xrcbdocno
             WHERE xrcbent = g_enterprise
               AND xrcb002 = g_xmdk_m.xmdk005
               AND ROWNUM = 1
            IF NOT cl_null(l_xrcadocdt) AND NOT cl_null(g_xmdk_m.xmdk042) AND NOT cl_null(g_xmdk_m.xmdk016) THEN
               CALL s_axmt540_get_exchange(g_xmdk_m.xmdk042,g_xmdk_m.xmdk016,l_xrcadocdt) RETURNING g_xmdk_m.xmdk017
            END IF
      END CASE
   ELSE
      IF NOT cl_null(g_xmdk_m.xmdk042) AND NOT cl_null(g_xmdk_m.xmdk016) THEN
         CALL s_axmt540_get_exchange(g_xmdk_m.xmdk042,g_xmdk_m.xmdk016,g_xmdk_m.xmdkdocdt) RETURNING g_xmdk_m.xmdk017
      END IF
   END IF
   
   DISPLAY BY NAME g_xmdk_m.xmdk017
END FUNCTION

################################################################################
# Descriptions...: 檢查是否為 有效日期>製造日期
# Memo...........:
# Usage..........: axmt600_xmdl058_xmdl057_chk(p_xmdl058,p_xmdl057)
#                  RETURNING r_success
# Input parameter: p_xmdl058      製造日期
#                : p_xmdl057      有效日期
# Return code....: r_success      TRUE/FALSE
# Date & Author..: 2016/06/20 By dorislai (#160512-00004#2)
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt600_xmdl058_xmdl057_chk(p_xmdl058,p_xmdl057)
   DEFINE p_xmdl058 LIKE xmdl_t.xmdl058
   DEFINE p_xmdl057 LIKE xmdl_t.xmdl057
   DEFINE r_success LIKE type_t.num5
   
   LET r_success = TRUE
   
   IF NOT cl_null(p_xmdl058) AND NOT cl_null(p_xmdl057) THEN
      #製造日期>有效日期
      IF p_xmdl058 > p_xmdl057 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = "ain-00311"  #有效日期不可以小於製造日期！
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         LET r_success = FALSE
      END IF
   END IF
   
   RETURN r_success
END FUNCTION

 
{</section>}
 
