#該程式未解開Section, 採用最新樣板產出!
{<section id="axmp580_03.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0006(2014-10-30 16:02:00), PR版次:0006(2016-09-06 17:52:50)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000085
#+ Filename...: axmp580_03
#+ Description: 引導式簽收維護作業-完成
#+ Creator....: 04543(2014-10-08 11:53:36)
#+ Modifier...: 04543 -SD/PR- 02097
 
{</section>}
 
{<section id="axmp580_03.global" >}
#應用 p00 樣板自動產生(Version:4)
#add-point:填寫註解說明
#151118-00012#1   2015/11/19 By shiun        新增s_axmt540_get_exchange傳入參數
#160107-00017#1   2016/01/11 By shiun        更改欄位xmdl030
#160114-00007#1   2016/01/14 By Sarah        按"查看簽收單"沒有串查出該張簽收單
#141227-00003#2   2016/03/07 By Sarah        產生多張簽收單時,按"查看簽收單"要串查出所有產生的簽收單
#160809-00031#1   2016/08/15 By 02097        加"簽收日期"欄位，預設TODAY,產生簽收單的簽收日期以此欄位為準
#160727-00019#24   2016/08/15 By 08742       系统中定义的临时表名称超过15码在执行时会出错,所以需要将系统中定义的临时表长度超过15码的全部改掉	
#                                            Mod   axmp580_02_temp_d1--> axmp580_tmp01   ，    axmp580_02_temp_d2--> axmp580_tmp02
#                                            Mod   axmp580_02_temp_d3--> axmp580_tmp03
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
#add-point:增加匯入項目
IMPORT util
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
#add-point:增加匯入變數檔
GLOBALS
   DEFINE g_xmdk001                 LIKE xmdk_t.xmdk001    #160809-00031#1   
END GLOBALS
#end add-point
 
{</section>}
 
{<section id="axmp580_03.free_style_variable" >}
#add-point:free_style模組變數(Module Variable)
#單身 type 宣告
 TYPE type_g_xmdk_d      RECORD
    keyno             LIKE type_t.num5,
    xmdkdocno         LIKE xmdk_t.xmdkdocno,
    xmdk007           LIKE xmdk_t.xmdk007, 
    xmdk007_desc      LIKE type_t.chr500, 
    xmdk009           LIKE xmdk_t.xmdk009, 
    xmdk009_desc      LIKE type_t.chr500, 
    xmdk008           LIKE xmdk_t.xmdk008, 
    xmdk008_desc      LIKE type_t.chr500,
    result_str        LIKE type_t.chr500
                         END RECORD

 TYPE type_g_xmdk2_d     RECORD
    keyno             LIKE type_t.num5,
    xmdlseq           LIKE xmdl_t.xmdlseq,
    xmdl001           LIKE xmdl_t.xmdl001,
    xmdl002           LIKE xmdl_t.xmdl002,
    xmdl003           LIKE xmdl_t.xmdl003,
    xmdl004           LIKE xmdl_t.xmdl004,
    xmdl005           LIKE xmdl_t.xmdl005,
    xmdl006           LIKE xmdl_t.xmdl006,
    xmda033           LIKE xmda_t.xmda033,   #150116新增"客戶訂購單號"
    xmdl007           LIKE xmdl_t.xmdl007,
    xmdl008           LIKE xmdl_t.xmdl008,
    xmdl008_desc      LIKE type_t.chr500,
    xmdl008_desc_desc LIKE type_t.chr500,
    xmdl009           LIKE xmdl_t.xmdl009,
    xmdl009_desc      LIKE type_t.chr500,
    xmdl011           LIKE xmdl_t.xmdl011,
    xmdl011_desc      LIKE type_t.chr500,
    xmdl012           LIKE xmdl_t.xmdl012,
    xmdl017           LIKE xmdl_t.xmdl017,
    xmdl017_desc      LIKE type_t.chr500,
    xmdl018           LIKE xmdl_t.xmdl018,
    xmdl081           LIKE xmdl_t.xmdl081,
    xmdl084           LIKE xmdl_t.xmdl084,
    xmdl084_desc      LIKE type_t.chr500,
    xmdl019           LIKE xmdl_t.xmdl019,
    xmdl019_desc      LIKE type_t.chr500,
    xmdl020           LIKE xmdl_t.xmdl020,
    xmdl082           LIKE xmdl_t.xmdl082,
    xmdl013           LIKE xmdl_t.xmdl013,
    xmdl014           LIKE xmdl_t.xmdl014,
    xmdl014_desc      LIKE type_t.chr500,
    xmdl015           LIKE xmdl_t.xmdl015,
    xmdl015_desc      LIKE type_t.chr500,
    xmdl016           LIKE xmdl_t.xmdl016,
    xmdl052           LIKE xmdl_t.xmdl052,
    xmdl021           LIKE xmdl_t.xmdl021,
    xmdl021_desc      LIKE type_t.chr500,
    xmdl022           LIKE xmdl_t.xmdl022,
    xmdl083           LIKE xmdl_t.xmdl083,
    xmdl050           LIKE xmdl_t.xmdl050,
    xmdl050_desc      LIKE type_t.chr500,
    xmdl051           LIKE xmdl_t.xmdl051 
                         END RECORD

 TYPE type_g_xmdk3_d     RECORD
    keyno             LIKE type_t.num5,
    xmdmseq           LIKE xmdm_t.xmdmseq,
    xmdmseq1          LIKE xmdm_t.xmdmseq1,
    xmdm001           LIKE xmdm_t.xmdm001,
    xmdm001_desc      LIKE type_t.chr500,
    xmdm001_desc_desc LIKE type_t.chr500,
    xmdm002           LIKE xmdm_t.xmdm002,
    xmdm002_desc      LIKE type_t.chr500,
    xmdm003           LIKE xmdm_t.xmdm003,
    xmdm004           LIKE xmdm_t.xmdm004,
    xmdm005           LIKE xmdm_t.xmdm005,
    xmdm005_desc      LIKE type_t.chr500,
    xmdm006           LIKE xmdm_t.xmdm006,
    xmdm006_desc      LIKE type_t.chr500,
    xmdm007           LIKE xmdm_t.xmdm007,
    xmdm033           LIKE xmdm_t.xmdm033,
    xmdm008           LIKE xmdm_t.xmdm008,
    xmdm008_desc      LIKE type_t.chr500,
    xmdm009           LIKE xmdm_t.xmdm009,
    xmdm010           LIKE xmdm_t.xmdm010,
    xmdm010_desc      LIKE type_t.chr500,
    xmdm011           LIKE xmdm_t.xmdm011
                         END RECORD

 TYPE type_g_xmdk5_d     RECORD
    keyno             LIKE type_t.num5,
    xmdlseq           LIKE xmdl_t.xmdlseq,
    xmdl007           LIKE xmdl_t.xmdl007,
    xmdl008           LIKE xmdl_t.xmdl008,
    xmdl008_desc      LIKE type_t.chr500,
    xmdl008_desc_desc LIKE type_t.chr500,
    xmdl009           LIKE xmdl_t.xmdl009,
    xmdl009_desc      LIKE type_t.chr500,
    xmdl011           LIKE xmdl_t.xmdl011,
    xmdl011_desc      LIKE type_t.chr500,
    xmdl012           LIKE xmdl_t.xmdl012,        
    xmdl017           LIKE xmdl_t.xmdl017,
    xmdl017_desc      LIKE type_t.chr500,
    xmdl018           LIKE xmdl_t.xmdl018,        
    xmdl021           LIKE xmdl_t.xmdl021,
    xmdl021_desc      LIKE type_t.chr500,
    xmdl022           LIKE xmdl_t.xmdl022,        
    xmdl024           LIKE xmdl_t.xmdl024,
    xmdl025           LIKE xmdl_t.xmdl025,
    xmdl025_desc      LIKE type_t.chr500,
    xmdl026           LIKE xmdl_t.xmdl026,        
    xmdl027           LIKE xmdl_t.xmdl027,
    xmdl028           LIKE xmdl_t.xmdl028,
    xmdl029           LIKE xmdl_t.xmdl029,        
    xmdl042           LIKE xmdl_t.xmdl042,
    xmdl043           LIKE xmdl_t.xmdl043,
    xmdl044           LIKE xmdl_t.xmdl044,
    xmdl045           LIKE xmdl_t.xmdl045,
    xmdl046           LIKE xmdl_t.xmdl046
                         END RECORD

DEFINE g_xmdk_d          DYNAMIC ARRAY OF type_g_xmdk_d
DEFINE g_xmdk2_d         DYNAMIC ARRAY OF type_g_xmdk2_d
DEFINE g_xmdk3_d         DYNAMIC ARRAY OF type_g_xmdk3_d
DEFINE g_xmdk5_d         DYNAMIC ARRAY OF type_g_xmdk5_d

DEFINE l_ac              LIKE type_t.num5
DEFINE g_master_idx      LIKE type_t.num5

DEFINE g_rec_b           LIKE type_t.num5
DEFINE g_rec_b2          LIKE type_t.num5
DEFINE g_rec_b3          LIKE type_t.num5
DEFINE g_rec_b4          LIKE type_t.num5
DEFINE g_rec_b5          LIKE type_t.num5
DEFINE g_success         LIKE type_t.chr1
DEFINE g_result_str      LIKE type_t.chr1000

 TYPE type_ins_xmdk      RECORD
    keyno             LIKE type_t.num5,
    xmdkent           LIKE xmdk_t.xmdkent,
    xmdksite          LIKE xmdk_t.xmdksite,
    xmdkdocno         LIKE xmdk_t.xmdkdocno,
    xmdkdocdt         LIKE xmdk_t.xmdkdocdt,
    xmdkstus          LIKE xmdk_t.xmdkstus,
    xmdk000           LIKE xmdk_t.xmdk000,
    xmdk001           LIKE xmdk_t.xmdk001,
    xmdk002           LIKE xmdk_t.xmdk002,
    xmdk003           LIKE xmdk_t.xmdk003,
    xmdk004           LIKE xmdk_t.xmdk004,
    xmdk007           LIKE xmdk_t.xmdk007,
    xmdk008           LIKE xmdk_t.xmdk008,
    xmdk009           LIKE xmdk_t.xmdk009,
    xmdk010           LIKE xmdk_t.xmdk010,
    xmdk011           LIKE xmdk_t.xmdk011,
    xmdk012           LIKE xmdk_t.xmdk012,
    xmdk013           LIKE xmdk_t.xmdk013,
    xmdk014           LIKE xmdk_t.xmdk014,
    xmdk015           LIKE xmdk_t.xmdk015,
    xmdk016           LIKE xmdk_t.xmdk016,
    xmdk017           LIKE xmdk_t.xmdk017,
    xmdk042           LIKE xmdk_t.xmdk042,
    xmdk043           LIKE xmdk_t.xmdk043,    
    xmdkownid         LIKE xmdk_t.xmdkownid,
    xmdkowndp         LIKE xmdk_t.xmdkowndp,
    xmdkcrtid         LIKE xmdk_t.xmdkcrtid,
    xmdkcrtdp         LIKE xmdk_t.xmdkcrtdp,
    xmdkcrtdt         LIKE xmdk_t.xmdkcrtdt,
    xmdk202           LIKE xmdk_t.xmdk202
                         END RECORD

#end add-point
 
{</section>}
 
{<section id="axmp580_03.global_variable" >}
#add-point:自定義模組變數(Module Variable)

#end add-point
 
{</section>}
 
{<section id="axmp580_03.other_dialog" >}

DIALOG axmp580_03_display()
   DISPLAY ARRAY g_xmdk_d TO s_detail1_axmp580_03.* ATTRIBUTE(COUNT = g_rec_b)
      BEFORE DISPLAY
         CALL FGL_SET_ARR_CURR(l_ac)

      BEFORE ROW
        LET l_ac = DIALOG.getCurrentRow("s_detail1_axmp580_03")
        LET g_master_idx = l_ac
        CALL axmp580_03_fetch('2')
        CALL axmp580_03_fetch('3')
        CALL axmp580_03_fetch('5')
   END DISPLAY
END DIALOG

DIALOG axmp580_03_display2()
   DISPLAY ARRAY g_xmdk2_d TO s_detail2_axmp580_03.* ATTRIBUTE(COUNT = g_rec_b2)
      BEFORE DISPLAY
         CALL FGL_SET_ARR_CURR(l_ac)
         CALL axmp580_02_fetch('2')

      BEFORE ROW
        LET l_ac = DIALOG.getCurrentRow("s_detail2_axmp580_03")

   END DISPLAY
END DIALOG

DIALOG axmp580_03_display3()
   DISPLAY ARRAY g_xmdk3_d TO s_detail3_axmp580_03.* ATTRIBUTE(COUNT = g_rec_b3)
      BEFORE DISPLAY
         CALL FGL_SET_ARR_CURR(l_ac)
         CALL axmp580_02_fetch('3')

      BEFORE ROW
        LET l_ac = DIALOG.getCurrentRow("s_detail3_axmp580_03")

   END DISPLAY
END DIALOG

DIALOG axmp580_03_display5()
   DISPLAY ARRAY g_xmdk5_d TO s_detail5_axmp580_03.* ATTRIBUTE(COUNT = g_rec_b5)
      BEFORE DISPLAY
         CALL FGL_SET_ARR_CURR(l_ac)
         CALL axmp580_02_fetch('5')

      BEFORE ROW
        LET l_ac = DIALOG.getCurrentRow("s_detail5_axmp580_03")

   END DISPLAY
END DIALOG

 
{</section>}
 
{<section id="axmp580_03.other_function" readonly="Y" >}

PUBLIC FUNCTION axmp580_03(--)
   #add-point:input段變數傳入

   #end add-point
   )
   #add-point:input段define
   #end add-point

END FUNCTION

PUBLIC FUNCTION axmp580_03_init()
   CALL cl_set_combo_scc('xmdl007_d2_03','2055')
   
   CALL cl_set_combo_scc('xmdl007_d5_03','2055')
   CALL cl_set_combo_scc('xmdl042_d5_03','2067')

   #判斷據點參數若不使用產品特徵時，則產品特徵需隱藏不可以維護(據點參數:S-BAS-0036)
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0036') = 'N' THEN
      CALL cl_set_comp_visible("xmdl009_d2_03,xmdl009_d2_03_desc,
                                xmdm002_d3_03,xmdm002_d3_03_desc,
                                xmdl009_d5_03,xmdl009_d5_03_desc",FALSE)
   END IF

   #判斷據點參數若不使用參考單位時，則參考單位、數量需隱藏不可以維護(據點參數:S-BAS-0028)
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0028') = 'N' THEN
      CALL cl_set_comp_visible("xmdl019_d2_03,xmdl019_d2_03_desc,xmdl020_d2_03,xmdl082_d2_03,
                                xmdm010_d3_03,xmdm010_d3_03_desc,xmdm011_d3_03",FALSE)
   END IF

   #整體參數未使用採購計價單位
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0007') = "N" THEN
      CALL cl_set_comp_visible("xmdl021_d2_03,xmdl021_d2_03_desc,xmdl022_d2_03,xmdl083_d2_03,
                                xmdl021_d5_03,xmdl021_d5_03_desc,xmdl022_d5_03",FALSE)
   END IF
   
END FUNCTION

PUBLIC FUNCTION axmp580_03_fetch(p_cmd)
   DEFINE p_cmd       LIKE type_t.chr1
   DEFINE l_ac_t      LIKE type_t.num5   
   DEFINE l_sql       STRING

   CASE p_cmd
      WHEN '2'
         CALL g_xmdk2_d.clear()
         
         LET l_sql = "SELECT keyno,xmdlseq,",
                     "       xmdl001,xmdl002,xmdl003,xmdl004,xmdl005,",
                     "       xmdl006,",
                     "       xmda033,",   #150116新增"客戶訂購單號"
                     "       xmdl007,",
                     "       xmdl008,'','',",
                     "       xmdl009,'',",
                     "       xmdl011,'',",
                     "       xmdl012,",
                     "       xmdl017,'',",
                     "       xmdl018,xmdl081,",
                     "       xmdl084,'',",
                     "       xmdl019,'',",
                     "       xmdl020,xmdl082,xmdl013,",
                     "       xmdl014,'',",
                     "       xmdl015,'',",
                     "       xmdl016,xmdl052,",
                     "       xmdl021,'',",
                     "       xmdl022,xmdl083,",
                     "       xmdl050,'',",
                     "       xmdl051",
                     "  FROM axmp580_tmp02",            #160727-00019#24 Mod  axmp580_02_temp_d2--> axmp580_tmp02
                     " WHERE keyno = ",g_xmdk_d[g_master_idx].keyno CLIPPED,
                     " ORDER BY keyno,xmdlseq"
         
         PREPARE axmp580_03_temp_d2_sel FROM l_sql
         DECLARE axmp580_03_temp_d2_b_fill_curs CURSOR FOR axmp580_03_temp_d2_sel
         
         LET l_ac_t = l_ac
         LET l_ac = 1

        FOREACH axmp580_03_temp_d2_b_fill_curs INTO g_xmdk2_d[l_ac].*
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "FOREACH:axmp580_03_temp_d2_b_fill_curs"
               LET g_errparam.popup = TRUE
               CALL cl_err()
         
               EXIT FOREACH
            END IF
         
            CALL axmp580_03_detail_show("'2'")
            
            LET l_ac = l_ac + 1
            IF l_ac > g_max_rec THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code =  9035
               LET g_errparam.extend =  ""
               LET g_errparam.popup = TRUE
               CALL cl_err()
         
               EXIT FOREACH
            END IF
         END FOREACH

         LET g_rec_b2 = l_ac - 1
         CALL g_xmdk2_d.deleteElement(l_ac)
         LET l_ac = l_ac_t
         CLOSE axmp580_03_temp_d2_b_fill_curs
         FREE axmp580_03_temp_d2_sel
   
      WHEN '3'
         CALL g_xmdk3_d.clear()
        
         LET l_sql = "SELECT keyno,xmdmseq,xmdmseq1,",
                     "       xmdm001,'','',",
                     "       xmdm002,'',",
                     "       xmdm003,xmdm004,",
                     "       xmdm005,'',",
                     "       xmdm006,'',",
                     "       xmdm007,xmdm033,",
                     "       xmdm008,'',",
                     "       xmdm009,",
                     "       xmdm010,'',",
                     "       xmdm011",
                     "  FROM axmp580_tmp03",         #160727-00019#24 Mod  axmp580_02_temp_d3--> axmp580_tmp03
                     " WHERE keyno = ",g_xmdk_d[g_master_idx].keyno CLIPPED,
                     " ORDER BY keyno,xmdmseq,xmdmseq1"
                     
         PREPARE axmp580_03_temp_d3_sel FROM l_sql
         DECLARE axmp580_03_temp_d3_b_fill_curs CURSOR FOR axmp580_03_temp_d3_sel
         
         LET l_ac_t = l_ac
         LET l_ac = 1
        
         FOREACH axmp580_03_temp_d3_b_fill_curs INTO g_xmdk3_d[l_ac].*
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "FOREACH:axmp580_03_temp_d3_b_fill_curs"
               LET g_errparam.popup = TRUE
               CALL cl_err()
        
               EXIT FOREACH
            END IF
            
            CALL axmp580_03_detail_show("'3'")
            
            LET l_ac = l_ac + 1
            IF l_ac > g_max_rec THEN
               INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  9035
                  LET g_errparam.extend =  ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
        
               EXIT FOREACH
            END IF
         END FOREACH
         
         LET g_rec_b3 = l_ac - 1
         CALL g_xmdk3_d.deleteElement(l_ac)
         LET l_ac = l_ac_t
         CLOSE axmp580_03_temp_d3_b_fill_curs
         FREE axmp580_03_temp_d3_sel
   
      WHEN '5'
         CALL g_xmdk5_d.clear()
         
         LET l_sql = "SELECT keyno,xmdlseq,",
                     "       xmdl007,",
                     "       xmdl008,'','',",
                     "       xmdl009,'',",
                     "       xmdl011,'',",
                     "       xmdl012,",
                     "       xmdl017,'',",
                     "       xmdl018,",
                     "       xmdl021,'',",
                     "       xmdl022,xmdl024,",
                     "       xmdl025,'',",
                     "       xmdl026,xmdl027,xmdl028,xmdl029,",
                     "       xmdl042,xmdl043,xmdl044,xmdl045,",
                     "       xmdl046",
                     "  FROM axmp580_tmp02",               #160727-00019#24 Mod  axmp580_02_temp_d2--> axmp580_tmp02
                     " WHERE keyno = ",g_xmdk_d[g_master_idx].keyno CLIPPED,
                     " ORDER BY keyno,xmdlseq"

         PREPARE axmp580_03_temp_d5_sel FROM l_sql
         DECLARE axmp580_03_temp_d5_b_fill_curs CURSOR FOR axmp580_03_temp_d5_sel
         
         LET l_ac_t = l_ac
         LET l_ac = 1

         FOREACH axmp580_03_temp_d5_b_fill_curs INTO g_xmdk5_d[l_ac].*
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "FOREACH:axmp580_03_temp_d5_b_fill_curs"
               LET g_errparam.popup = TRUE
               CALL cl_err()
        
               EXIT FOREACH
            END IF
        
            CALL axmp580_03_detail_show("'5'")
            
            LET l_ac = l_ac + 1
            IF l_ac > g_max_rec THEN
               INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  9035
                  LET g_errparam.extend =  ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
        
               EXIT FOREACH
            END IF
         END FOREACH
         
         LET g_rec_b5 = l_ac - 1
         CALL g_xmdk5_d.deleteElement(l_ac)
         LET l_ac = l_ac_t
         CLOSE axmp580_03_temp_d5_b_fill_curs
         FREE axmp580_03_temp_d5_sel
   
   END CASE

END FUNCTION

PUBLIC FUNCTION axmp580_03_b_fill()
   DEFINE l_sql        STRING
   DEFINE l_ac_t       LIKE type_t.num5
   
   LET l_sql = "SELECT keyno,result_docno,",
               "       xmdk007,'',xmdk009,'',xmdk008,'',",
               "       result_str",
               "  FROM axmp580_tmp01",          #160727-00019#24 Mod  axmp580_02_temp_d1--> axmp580_tmp01
               " ORDER BY keyno"
   PREPARE axmp580_03_temp_d1_sel FROM l_sql
   DECLARE axmp580_03_temp_d1_b_fill_curs CURSOR FOR axmp580_03_temp_d1_sel

   CALL g_xmdk_d.clear()
   LET g_master_idx = 1

   LET l_ac_t = g_master_idx
   LET l_ac = 1
   ERROR "Searching!"

   FOREACH axmp580_03_temp_d1_b_fill_curs INTO g_xmdk_d[l_ac].*         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:axmp580_03_temp_d1_b_fill_curs"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF

      CALL axmp580_03_detail_show("'1'")

      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ""
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
   END FOREACH
   
   LET g_rec_b = l_ac - 1
   CALL g_xmdk_d.deleteElement(l_ac)
   LET l_ac = l_ac_t
   
   CLOSE axmp580_03_temp_d1_b_fill_curs
   FREE axmp580_03_temp_d1_sel
   
   LET g_master_idx = l_ac

   CALL axmp580_03_fetch('2')
   CALL axmp580_03_fetch('3')
   CALL axmp580_03_fetch('5')
   
END FUNCTION

PRIVATE FUNCTION axmp580_03_detail_show(p_page)
   DEFINE p_page      STRING
   DEFINE l_success   LIKE type_t.num5
   
   IF p_page.getIndexOf("'1'",1) > 0 THEN
      #訂單客戶
      CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_d[l_ac].xmdk007)
      RETURNING g_xmdk_d[l_ac].xmdk007_desc
      #收貨客戶
      CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_d[l_ac].xmdk009)
      RETURNING g_xmdk_d[l_ac].xmdk009_desc
      #收款客戶
      CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_d[l_ac].xmdk008)
      RETURNING g_xmdk_d[l_ac].xmdk008_desc      

   END IF
   
   IF p_page.getIndexOf("'2'",1) > 0 THEN
      #料件編號
      CALL s_desc_get_item_desc(g_xmdk2_d[l_ac].xmdl008)
      RETURNING g_xmdk2_d[l_ac].xmdl008_desc,g_xmdk2_d[l_ac].xmdl008_desc_desc
      #產品特徵
      CALL s_feature_description(g_xmdk2_d[l_ac].xmdl008,g_xmdk2_d[l_ac].xmdl009)
      RETURNING l_success,g_xmdk2_d[l_ac].xmdl009_desc
      #作業編號
      CALL s_desc_get_acc_desc('221',g_xmdk2_d[l_ac].xmdl011)
      RETURNING g_xmdk2_d[l_ac].xmdl011_desc
      #出貨單位
      CALL s_desc_get_unit_desc(g_xmdk2_d[l_ac].xmdl017)
      RETURNING g_xmdk2_d[l_ac].xmdl017_desc
      #簽退理由碼
      CALL axmp580_01_reason_ref(g_xmdk2_d[l_ac].xmdl084,'axmt590')
      RETURNING g_xmdk2_d[l_ac].xmdl084_desc
      #參考單位
      CALL s_desc_get_unit_desc(g_xmdk2_d[l_ac].xmdl019)
      RETURNING g_xmdk2_d[l_ac].xmdl019_desc
      #庫位
      CALL s_desc_get_stock_desc(g_site,g_xmdk2_d[l_ac].xmdl014)
      RETURNING g_xmdk2_d[l_ac].xmdl014_desc
      #儲位
      CALL s_desc_get_locator_desc(g_site,g_xmdk2_d[l_ac].xmdl014,g_xmdk2_d[l_ac].xmdl015)
      RETURNING g_xmdk2_d[l_ac].xmdl015_desc
      #計價單位
      CALL s_desc_get_unit_desc(g_xmdk2_d[l_ac].xmdl021)
      RETURNING g_xmdk2_d[l_ac].xmdl021_desc
      #理由碼
      CALL axmp580_01_reason_ref(g_xmdk2_d[l_ac].xmdl050,'axmt580')
      RETURNING g_xmdk2_d[l_ac].xmdl050_desc
      
   END IF
   
   IF p_page.getIndexOf("'3'",1) > 0 THEN
      #料件編號
      CALL s_desc_get_item_desc(g_xmdk3_d[l_ac].xmdm001)
      RETURNING g_xmdk3_d[l_ac].xmdm001_desc,g_xmdk3_d[l_ac].xmdm001_desc_desc   
      #產品特徵
      CALL s_feature_description(g_xmdk3_d[l_ac].xmdm001,g_xmdk3_d[l_ac].xmdm002)
      RETURNING l_success,g_xmdk3_d[l_ac].xmdm002_desc
      #庫位
      CALL s_desc_get_stock_desc(g_site,g_xmdk3_d[l_ac].xmdm005)
      RETURNING g_xmdk3_d[l_ac].xmdm005_desc
      #儲位
      CALL s_desc_get_locator_desc(g_site,g_xmdk3_d[l_ac].xmdm005,g_xmdk3_d[l_ac].xmdm006)
      RETURNING g_xmdk3_d[l_ac].xmdm006_desc
      #出貨單位
      CALL s_desc_get_unit_desc(g_xmdk3_d[l_ac].xmdm008)
      RETURNING g_xmdk3_d[l_ac].xmdm008_desc
      #參考單位
      CALL s_desc_get_unit_desc(g_xmdk3_d[l_ac].xmdm010)
      RETURNING g_xmdk3_d[l_ac].xmdm010_desc
      
   END IF
   
   IF p_page.getIndexOf("'5'",1) > 0 THEN
      #料件編號
      CALL s_desc_get_item_desc(g_xmdk5_d[l_ac].xmdl008)
      RETURNING g_xmdk5_d[l_ac].xmdl008_desc,g_xmdk5_d[l_ac].xmdl008_desc_desc
      #產品特徵
      CALL s_feature_description(g_xmdk5_d[l_ac].xmdl008,g_xmdk5_d[l_ac].xmdl009)
      RETURNING l_success,g_xmdk5_d[l_ac].xmdl009_desc
      #作業編號
      CALL s_desc_get_acc_desc('221',g_xmdk5_d[l_ac].xmdl011)
      RETURNING g_xmdk5_d[l_ac].xmdl011_desc
      #出貨單位
      CALL s_desc_get_unit_desc(g_xmdk5_d[l_ac].xmdl017)
      RETURNING g_xmdk5_d[l_ac].xmdl017_desc
      #計價單位
      CALL s_desc_get_unit_desc(g_xmdk5_d[l_ac].xmdl021)
      RETURNING g_xmdk5_d[l_ac].xmdl021_desc
      #稅別
      CALL s_desc_get_tax_desc1(g_site,g_xmdk5_d[l_ac].xmdl025)
      RETURNING g_xmdk5_d[l_ac].xmdl025_desc
      
   END IF
   
END FUNCTION

#產生簽收單資料
PUBLIC FUNCTION axmp580_03_gen_data(p_xmdkdocno,p_xmdk003)
   DEFINE p_xmdkdocno      LIKE xmdk_t.xmdkdocno
   DEFINE p_xmdk003        LIKE xmdk_t.xmdk003
   
   DEFINE l_sql            STRING

   DEFINE l_xmdk           type_ins_xmdk

   DEFINE l_success        LIKE type_t.num5

   DEFINE l_oodbl004       LIKE oodbl_t.oodbl004
   DEFINE l_oodb005        LIKE oodb_t.oodb005
   DEFINE l_oodb006        LIKE oodb_t.oodb006
   DEFINE l_oodb011        LIKE oodb_t.oodb011

   LET l_sql = " SELECT keyno,",
               "        xmdk007,xmdk009,xmdk008,",
               "        xmdk202,",
               "        xmdk010,xmdk011,xmdk012,",
               "        xmdk015,xmdk016,xmdk042",
               "   FROM axmp580_tmp01",           #160727-00019#24 Mod  axmp580_02_temp_d1--> axmp580_tmp01
               "   ORDER BY keyno " 
   PREPARE axmp580_03_temp_d1_pre FROM l_sql
   DECLARE axmp580_03_temp_d1_curs CURSOR WITH HOLD FOR axmp580_03_temp_d1_pre

   INITIALIZE l_xmdk.* TO NULL
   FOREACH axmp580_03_temp_d1_curs INTO l_xmdk.keyno,
                                        l_xmdk.xmdk007,l_xmdk.xmdk009,l_xmdk.xmdk008,
                                        l_xmdk.xmdk202,
                                        l_xmdk.xmdk010,l_xmdk.xmdk011,l_xmdk.xmdk012,
                                        l_xmdk.xmdk015,l_xmdk.xmdk016,l_xmdk.xmdk042

      CALL s_transaction_begin()
      
      LET g_result_str = ''
      LET g_success = 'Y'

      LET l_xmdk.xmdkent   = g_enterprise
      LET l_xmdk.xmdksite  = g_site
      LET l_xmdk.xmdkdocno = p_xmdkdocno
      LET l_xmdk.xmdkownid = g_user
      LET l_xmdk.xmdkowndp = g_dept
      LET l_xmdk.xmdkcrtid = g_user
      LET l_xmdk.xmdkcrtdp = g_dept
      LET l_xmdk.xmdkcrtdt = cl_get_current()

      LET l_xmdk.xmdk000 = '4'          #簽收單

      LET l_xmdk.xmdk002 = '3'          #簽收訂單
      LET l_xmdk.xmdk003 = p_xmdk003    #業務人員
      
      LET l_xmdk.xmdk043 = '1'          #預設匯率計算基準
      
     #LET l_xmdk.xmdkdocdt = g_today      #單據日期
     #LET l_xmdk.xmdk001 = g_today        #簽收日期
      LET l_xmdk.xmdkdocdt = g_xmdk001    #單據日期    #160809-00031#1
      LET l_xmdk.xmdk001 = g_xmdk001      #簽收日期    #160809-00031#1
      LET l_xmdk.xmdkstus = 'N'

      #帶出歸屬部門ooag003
      SELECT ooag003 INTO l_xmdk.xmdk004
        FROM ooag_t
       WHERE ooagent = l_xmdk.xmdkent
         AND ooag001 = l_xmdk.xmdk003

      #檢查、取得稅別、單價含稅否
      CALL s_tax_chk(l_xmdk.xmdksite,l_xmdk.xmdk012)
      RETURNING l_success,l_oodbl004,l_oodb005,l_oodb006,l_oodb011
      
      IF NOT l_success THEN
         LET g_result_str = cl_getmsg('apm-00549',g_dlang)   #稅別資料校驗失敗
         LET g_success = 'N'
      ELSE
         LET l_xmdk.xmdk013 = l_oodb006  #稅率
         LET l_xmdk.xmdk014 = l_oodb005  #單價含稅否
      END IF

      IF g_success = 'Y' THEN
         CALL axmp580_03_chk_headers(l_xmdk.*)
      END IF
      
      #匯率
      CALL s_axmt540_get_exchange(l_xmdk.xmdk042,l_xmdk.xmdk016,g_today) RETURNING l_xmdk.xmdk017   #modify--151118-00012#1 By shiun   新增傳入參數g_today
            
      IF g_success = 'Y' THEN
         #自動產生單號
         CALL s_aooi200_gen_docno(g_site,l_xmdk.xmdkdocno,l_xmdk.xmdkdocdt,'axmt580')
         RETURNING l_success,l_xmdk.xmdkdocno
      
         IF NOT l_success THEN
            LET l_xmdk.xmdkdocno = ''
            LET g_result_str = cl_getmsg('amm-00001',g_dlang)   #自動生成單號失敗！
            LET g_success = 'N'
         END IF
      END IF

      IF g_success = 'Y' THEN
         
         INSERT INTO xmdk_t(xmdkent,xmdksite,xmdkdocno,
                            xmdkownid,xmdkowndp,
                            xmdkcrtid,xmdkcrtdp,xmdkcrtdt,
                            xmdkdocdt,xmdkstus,
                            xmdk000,xmdk001,xmdk002,xmdk003,xmdk004,
                            xmdk007,xmdk008,xmdk009,xmdk010,
                            xmdk011,xmdk012,xmdk013,xmdk014,xmdk015,
                            xmdk016,xmdk017,
                            xmdk042,xmdk043,
                            xmdk202)
         VALUES (l_xmdk.xmdkent,l_xmdk.xmdksite,l_xmdk.xmdkdocno,
                 l_xmdk.xmdkownid,l_xmdk.xmdkowndp,
                 l_xmdk.xmdkcrtid,l_xmdk.xmdkcrtdp,l_xmdk.xmdkcrtdt,
                 l_xmdk.xmdkdocdt,l_xmdk.xmdkstus,
                 l_xmdk.xmdk000,l_xmdk.xmdk001,l_xmdk.xmdk002,l_xmdk.xmdk003,l_xmdk.xmdk004,
                 l_xmdk.xmdk007,l_xmdk.xmdk008,l_xmdk.xmdk009,l_xmdk.xmdk010,
                 l_xmdk.xmdk011,l_xmdk.xmdk012,l_xmdk.xmdk013,l_xmdk.xmdk014,l_xmdk.xmdk015,
                 l_xmdk.xmdk016,l_xmdk.xmdk017,
                 l_xmdk.xmdk042,l_xmdk.xmdk043,
                 l_xmdk.xmdk202)
           
         IF SQLCA.sqlcode THEN
             LET g_result_str = "INSERT INTO xmdk_t",cl_getmsg(SQLCA.sqlcode,g_dlang)
             LET g_success = 'N'
         END IF
      END IF

      IF g_success = 'Y' THEN
         #簽收單身資料 insert
         CALL axmp580_03_ins_xmdl(l_xmdk.keyno,l_xmdk.xmdkdocno,l_xmdk.xmdk016,l_xmdk.xmdk017)
      END IF
      
      IF g_success = 'Y' THEN
         CALL s_transaction_end('Y','0')
         LET g_result_str = cl_getmsg('apm-00538',g_dlang)        #建立成功   
      ELSE
         CALL s_transaction_end('N','0')
         #因為執行失敗 所以不給予單號 
          LET l_xmdk.xmdkdocno = ''
      END IF

      #寫入顯示結果是成功或錯誤訊息
      UPDATE axmp580_tmp01             #160727-00019#24 Mod  axmp580_02_temp_d1--> axmp580_tmp01
         SET result_docno = l_xmdk.xmdkdocno,
             result_str = g_result_str
       WHERE keyno = l_xmdk.keyno
   
      INITIALIZE l_xmdk.* TO NULL
   END FOREACH   
   
END FUNCTION

PRIVATE FUNCTION axmp580_03_ins_xmdl(p_keyno,p_xmdkdocno,p_xmdk016,p_xmdk017)
   DEFINE p_keyno            LIKE type_t.num5
   DEFINE p_xmdkdocno        LIKE xmdk_t.xmdkdocno   
   DEFINE p_xmdk016          LIKE xmdk_t.xmdk016
   DEFINE p_xmdk017          LIKE xmdk_t.xmdk017
   DEFINE l_sql              STRING 
   DEFINE l_seq              LIKE xmdl_t.xmdlseq
   DEFINE l_num              LIKE type_t.num5
   DEFINE l_xmdl001          LIKE xmdl_t.xmdl001
   DEFINE l_xmdk      RECORD
              xmdk005   LIKE xmdk_t.xmdk005,
              xmdk006   LIKE xmdk_t.xmdk006,
              xmdk018   LIKE xmdk_t.xmdk018,
              xmdk019   LIKE xmdk_t.xmdk019,
              xmdk035   LIKE xmdk_t.xmdk035,
              xmdk037   LIKE xmdk_t.xmdk037,
              xmdk043   LIKE xmdk_t.xmdk043
                       END RECORD
   DEFINE l_xmdl       RECORD
              xmdlent    LIKE xmdl_t.xmdlent,
              xmdlsite   LIKE xmdl_t.xmdlsite,
              xmdldocno  LIKE xmdl_t.xmdldocno,
              xmdlseq    LIKE xmdl_t.xmdlseq,
              xmdl001    LIKE xmdl_t.xmdl001,
              xmdl002    LIKE xmdl_t.xmdl002,
              xmdl003    LIKE xmdl_t.xmdl003,
              xmdl004    LIKE xmdl_t.xmdl004,
              xmdl005    LIKE xmdl_t.xmdl005,
              xmdl006    LIKE xmdl_t.xmdl006,
              xmdl007    LIKE xmdl_t.xmdl007,
              xmdl008    LIKE xmdl_t.xmdl008,
              xmdl009    LIKE xmdl_t.xmdl009,
              xmdl010    LIKE xmdl_t.xmdl010,
              xmdl011    LIKE xmdl_t.xmdl011,
              xmdl012    LIKE xmdl_t.xmdl012,
              xmdl013    LIKE xmdl_t.xmdl013,
              xmdl014    LIKE xmdl_t.xmdl014,
              xmdl015    LIKE xmdl_t.xmdl015,
              xmdl016    LIKE xmdl_t.xmdl016,
              xmdl017    LIKE xmdl_t.xmdl017,
              xmdl018    LIKE xmdl_t.xmdl018,
              xmdl019    LIKE xmdl_t.xmdl019,
              xmdl020    LIKE xmdl_t.xmdl020,
              xmdl021    LIKE xmdl_t.xmdl021,
              xmdl022    LIKE xmdl_t.xmdl022,

              xmdl024    LIKE xmdl_t.xmdl024,
              xmdl025    LIKE xmdl_t.xmdl025,
              xmdl026    LIKE xmdl_t.xmdl026,
              xmdl027    LIKE xmdl_t.xmdl027,
              xmdl028    LIKE xmdl_t.xmdl028,
              xmdl029    LIKE xmdl_t.xmdl029,

              xmdl030    LIKE xmdl_t.xmdl030,   #add by lixiang 2015/06/29
              xmdl031    LIKE xmdl_t.xmdl031,   #add by lixiang 2015/06/29
              xmdl032    LIKE xmdl_t.xmdl032,   #add by lixiang 2015/06/29
              xmdl033    LIKE xmdl_t.xmdl033,

              xmdl042    LIKE xmdl_t.xmdl042,
              xmdl043    LIKE xmdl_t.xmdl043,
              xmdl044    LIKE xmdl_t.xmdl044,
              xmdl045    LIKE xmdl_t.xmdl045,
              xmdl046    LIKE xmdl_t.xmdl046,

              xmdl050    LIKE xmdl_t.xmdl050,
              xmdl051    LIKE xmdl_t.xmdl051,
              xmdl052    LIKE xmdl_t.xmdl052,

              xmdl081    LIKE xmdl_t.xmdl081,
              xmdl082    LIKE xmdl_t.xmdl082,
              xmdl083    LIKE xmdl_t.xmdl083,
              xmdl084    LIKE xmdl_t.xmdl084
              
                       END RECORD

   LET l_sql = " SELECT xmdlseq,",
               "        xmdl001,xmdl002,xmdl003,xmdl004,xmdl005,",
               "        xmdl006,xmdl007,xmdl008,xmdl009,xmdl010,",
               "        xmdl011,xmdl012,xmdl013,xmdl014,xmdl015,",
               "        xmdl016,xmdl017,xmdl018,xmdl019,xmdl020,",
               "        xmdl021,xmdl022,xmdl024,xmdl025,",
               "        xmdl026,'','','',",
               "        xmdl030,xmdl031,xmdl032,",  #add by lixiang 2015/06/29   #modify--160107-00017#1 By shiun
               "        xmdl033,",
               "        xmdl042,xmdl043,xmdl044,xmdl045,xmdl046,",
               "        xmdl050,xmdl051,xmdl052,",
               "        xmdl081,xmdl082,xmdl083,xmdl084",
               "   FROM axmp580_tmp02 ",        #160727-00019#24 Mod  axmp580_02_temp_d2--> axmp580_tmp02
               "  WHERE keyno = ? "

   PREPARE axmp580_03_temp_d2_pre FROM l_sql
   DECLARE axmp580_03_temp_d2_curs CURSOR FOR axmp580_03_temp_d2_pre

   LET l_sql = " SELECT MAX(xmdlseq) + 1 ",
               "   FROM xmdl_t",
               "  WHERE xmdlent = ",g_enterprise,
               "    AND xmdldocno = ?"
   PREPARE axmp580_03_temp_d2_pre02 FROM l_sql
   
   LET l_sql = " SELECT COUNT(DISTINCT xmdl001)",
               "   FROM xmdl_t",
               "  WHERE xmdlent = ",g_enterprise,
               "    AND xmdldocno = ?"
   PREPARE axmp580_03_temp_d2_pre03 FROM l_sql
   
   LET l_sql = " SELECT xmdk006,xmdk018,xmdk019,",
               "        xmdk035,xmdk037,xmdk043",
               "   FROM xmdk_t",
               "  WHERE xmdkent = ",g_enterprise,
               "    AND xmdkdocno = ?"
   PREPARE axmp580_03_temp_d2_pre04 FROM l_sql
   
   INITIALIZE l_xmdl.* TO NULL
   FOREACH axmp580_03_temp_d2_curs USING p_keyno
      INTO l_seq,
           l_xmdl.xmdl001,l_xmdl.xmdl002,l_xmdl.xmdl003,l_xmdl.xmdl004,l_xmdl.xmdl005,
           l_xmdl.xmdl006,l_xmdl.xmdl007,l_xmdl.xmdl008,l_xmdl.xmdl009,l_xmdl.xmdl010,
           l_xmdl.xmdl011,l_xmdl.xmdl012,l_xmdl.xmdl013,l_xmdl.xmdl014,l_xmdl.xmdl015,
           l_xmdl.xmdl016,l_xmdl.xmdl017,l_xmdl.xmdl018,l_xmdl.xmdl019,l_xmdl.xmdl020,
           l_xmdl.xmdl021,l_xmdl.xmdl022,l_xmdl.xmdl024,l_xmdl.xmdl025,
           l_xmdl.xmdl026,l_xmdl.xmdl027,l_xmdl.xmdl028,l_xmdl.xmdl029, 
           l_xmdl.xmdl030,l_xmdl.xmdl031,l_xmdl.xmdl032,   #add by lixiang 2015/06/29
           l_xmdl.xmdl033,
           l_xmdl.xmdl042,l_xmdl.xmdl043,l_xmdl.xmdl044,l_xmdl.xmdl045,l_xmdl.xmdl046,           
           l_xmdl.xmdl050,l_xmdl.xmdl051,l_xmdl.xmdl052,
           l_xmdl.xmdl081,l_xmdl.xmdl082,l_xmdl.xmdl083,l_xmdl.xmdl084

      #無簽收簽退
      IF l_xmdl.xmdl018 + l_xmdl.xmdl081 <= 0 THEN
         CONTINUE FOREACH
      END IF

      LET l_xmdl.xmdlent  = g_enterprise
      LET l_xmdl.xmdlsite = g_site
      LET l_xmdl.xmdldocno = p_xmdkdocno
      
      EXECUTE axmp580_03_temp_d2_pre02 USING l_xmdl.xmdldocno INTO l_xmdl.xmdlseq
      IF cl_null(l_xmdl.xmdlseq) THEN
         LET l_xmdl.xmdlseq = 1
      END IF
      
      #稅額計算
      CALL s_axmt540_tax_count('',l_xmdl.xmdldocno,l_xmdl.xmdlseq,l_xmdl.xmdlsite,l_xmdl.xmdl025,
                               l_xmdl.xmdl022,l_xmdl.xmdl024,p_xmdk016,p_xmdk017,
                               l_xmdl.xmdl003,l_xmdl.xmdl004,l_xmdl.xmdl018)
      RETURNING l_xmdl.xmdl027,l_xmdl.xmdl028,l_xmdl.xmdl029

      
      #多倉儲批 insert
      CALL axmp580_03_ins_xmdm(p_keyno,l_seq,l_xmdl.xmdldocno,l_xmdl.xmdlseq)
      IF g_success = 'N' THEN
         EXIT FOREACH
      END IF

      INSERT INTO xmdl_t (xmdlent,xmdlsite,xmdldocno,xmdlseq,
                          xmdl001,xmdl002,xmdl003,xmdl004,xmdl005,
                          xmdl006,xmdl007,xmdl008,xmdl009,xmdl010,
                          xmdl011,xmdl012,xmdl013,xmdl014,xmdl015,
                          xmdl016,xmdl017,xmdl018,xmdl019,xmdl020,
                          xmdl021,xmdl022,xmdl024,xmdl025,
                          xmdl026,xmdl027,xmdl028,xmdl029,
                          xmdl030,xmdl031,xmdl032,   #add by lixiang 2015/06/29
                          xmdl033,xmdl035,xmdl036,xmdl037,
                          xmdl042,xmdl043,xmdl044,xmdl045,xmdl046,
                          xmdl050,xmdl051,xmdl052,
                          xmdl081,xmdl082,xmdl083,xmdl084)
           VALUES (l_xmdl.xmdlent,l_xmdl.xmdlsite,l_xmdl.xmdldocno,l_xmdl.xmdlseq,
                   l_xmdl.xmdl001,l_xmdl.xmdl002,l_xmdl.xmdl003,l_xmdl.xmdl004,l_xmdl.xmdl005,
                   l_xmdl.xmdl006,l_xmdl.xmdl007,l_xmdl.xmdl008,l_xmdl.xmdl009,l_xmdl.xmdl010,
                   l_xmdl.xmdl011,l_xmdl.xmdl012,l_xmdl.xmdl013,l_xmdl.xmdl014,l_xmdl.xmdl015,
                   l_xmdl.xmdl016,l_xmdl.xmdl017,l_xmdl.xmdl018,l_xmdl.xmdl019,l_xmdl.xmdl020,
                   l_xmdl.xmdl021,l_xmdl.xmdl022,l_xmdl.xmdl024,l_xmdl.xmdl025,
                   l_xmdl.xmdl026,l_xmdl.xmdl027,l_xmdl.xmdl028,l_xmdl.xmdl029,
                   l_xmdl.xmdl030,l_xmdl.xmdl031,l_xmdl.xmdl032,   #add by lixiang 2015/06/29
                   l_xmdl.xmdl033,0,0,0,
                   l_xmdl.xmdl042,l_xmdl.xmdl043,l_xmdl.xmdl044,l_xmdl.xmdl045,l_xmdl.xmdl046,
                   l_xmdl.xmdl050,l_xmdl.xmdl051,l_xmdl.xmdl052,
                   l_xmdl.xmdl081,l_xmdl.xmdl082,l_xmdl.xmdl083,l_xmdl.xmdl084)
      
      IF SQLCA.sqlcode THEN
         LET g_result_str = "INSERT INTO xmdl_t",cl_getmsg(SQLCA.sqlcode,g_dlang)
         LET g_success = 'N'
         EXIT FOREACH
      END IF
      
      LET l_xmdl001 = l_xmdl.xmdl001   #備份出貨單號
      INITIALIZE l_xmdl.* TO NULL
   END FOREACH
   
   IF g_success = 'Y' THEN
      LET l_seq = ''
      EXECUTE axmp580_03_temp_d2_pre02 USING p_xmdkdocno INTO l_seq
      IF cl_null(l_sql) THEN
         LET g_result_str = cl_getmsg('axm-00090',g_dlang)   #單身無資料！
         LET g_success = 'N'
         
      END IF
   END IF
   
   IF g_success = 'Y' THEN   
      #重新計算整單的未稅、含稅總金額
      IF NOT s_axmt580_tax_recount(p_xmdkdocno) THEN
         LET g_result_str = cl_getmsg('axm-00495',g_dlang)   #更新單據"總未稅金額"、"總含稅金額"、"總稅額"失敗！
         LET g_success = 'N'         
      END IF
   END IF
   
   IF g_success = 'Y' THEN
      LET l_num = ''
      EXECUTE axmp580_03_temp_d2_pre03 USING p_xmdkdocno INTO l_num
      
      IF l_num = 1 THEN  #單身來源為同一出貨單
         INITIALIZE l_xmdk.* TO NULL
         
         LET l_xmdk.xmdk005 = l_xmdl001 #出貨單號
         
         EXECUTE axmp580_03_temp_d2_pre04 USING l_xmdk.xmdk005
         INTO l_xmdk.xmdk006,l_xmdk.xmdk018,l_xmdk.xmdk019,
              l_xmdk.xmdk035,l_xmdk.xmdk037,l_xmdk.xmdk043

         UPDATE xmdk_t
            SET xmdk005 = l_xmdk.xmdk005,
                xmdk006 = l_xmdk.xmdk006,
                xmdk018 = l_xmdk.xmdk018,
                xmdk019 = l_xmdk.xmdk019,
                xmdk035 = l_xmdk.xmdk035,
                xmdk037 = l_xmdk.xmdk037,
                xmdk043 = l_xmdk.xmdk043
          WHERE xmdkent = g_enterprise
            AND xmdkdocno = p_xmdkdocno
            
         IF SQLCA.sqlcode THEN
            LET g_result_str = "UPDATE xmdl_t",cl_getmsg(SQLCA.sqlcode,g_dlang)
            LET g_success = 'N'
         END IF
      
      END IF
      
   END IF
   
END FUNCTION

PRIVATE FUNCTION axmp580_03_ins_xmdm(p_keyno,p_seq,p_xmdmdocno,p_xmdmseq)
   DEFINE p_keyno            LIKE type_t.num5
   DEFINE p_seq              LIKE xmdl_t.xmdlseq
   DEFINE p_xmdmdocno        LIKE xmdm_t.xmdmdocno
   DEFINE p_xmdmseq          LIKE xmdm_t.xmdmseq
   DEFINE l_seq1             LIKE xmdm_t.xmdmseq1
   DEFINE l_sql              STRING 
   DEFINE l_xmdm       RECORD
            xmdment       LIKE xmdm_t.xmdment,
            xmdmsite      LIKE xmdm_t.xmdmsite,
            xmdmdocno     LIKE xmdm_t.xmdmdocno,
            xmdmseq       LIKE xmdm_t.xmdmseq,
            xmdmseq1      LIKE xmdm_t.xmdmseq1,
            xmdm001       LIKE xmdm_t.xmdm001,
            xmdm002       LIKE xmdm_t.xmdm002,
            xmdm003       LIKE xmdm_t.xmdm003,
            xmdm004       LIKE xmdm_t.xmdm004,
            xmdm005       LIKE xmdm_t.xmdm005,
            xmdm006       LIKE xmdm_t.xmdm006,
            xmdm007       LIKE xmdm_t.xmdm007,
            xmdm008       LIKE xmdm_t.xmdm008,
            xmdm009       LIKE xmdm_t.xmdm009,
            xmdm010       LIKE xmdm_t.xmdm010,
            xmdm011       LIKE xmdm_t.xmdm011,
            xmdm031       LIKE xmdm_t.xmdm031,
            xmdm032       LIKE xmdm_t.xmdm032,
            xmdm033       LIKE xmdm_t.xmdm033            
                       END RECORD
   DEFINE l_xmdl001    LIKE xmdl_t.xmdl001   #20150914--xianghui
   DEFINE l_xmdl002    LIKE xmdl_t.xmdl002   #20150914--xianghui
   DEFINE l_success    LIKE type_t.num5      #160114-00007#1
          
   LET l_sql = " SELECT xmdmseq1,",
               "        xmdm001,xmdm002,xmdm003,xmdm004,xmdm005,",
               "        xmdm006,xmdm007,xmdm008,xmdm009,xmdm010,",
               "        xmdm011,",
               "        xmdm031,xmdm032,xmdm033",
               "   FROM axmp580_tmp03 ",            #160727-00019#24 Mod  axmp580_02_temp_d3--> axmp580_tmp03
               "  WHERE keyno = ? ",
               "    AND xmdmseq = ?"
               
   PREPARE axmp580_03_temp_d3_pre FROM l_sql
   DECLARE axmp580_03_temp_d3_curs CURSOR FOR axmp580_03_temp_d3_pre

   LET l_sql = " SELECT MAX(xmdmseq1) + 1 ",
               "   FROM xmdm_t",
               "  WHERE xmdment = ",g_enterprise,
               "    AND xmdmdocno = ?",
               "    AND xmdmseq = ?"
   PREPARE axmp580_03_temp_d3_pre02 FROM l_sql

   INITIALIZE l_xmdm.* TO NULL
   FOREACH axmp580_03_temp_d3_curs USING p_keyno,p_seq
      INTO l_seq1,
           l_xmdm.xmdm001,l_xmdm.xmdm002,l_xmdm.xmdm003,l_xmdm.xmdm004,l_xmdm.xmdm005,
           l_xmdm.xmdm006,l_xmdm.xmdm007,l_xmdm.xmdm008,l_xmdm.xmdm009,l_xmdm.xmdm010,
           l_xmdm.xmdm011,
           l_xmdm.xmdm031,l_xmdm.xmdm032,l_xmdm.xmdm033

      LET l_xmdm.xmdment = g_enterprise
      LET l_xmdm.xmdmsite = g_site
      LET l_xmdm.xmdmdocno = p_xmdmdocno
      LET l_xmdm.xmdmseq = p_xmdmseq

      EXECUTE axmp580_03_temp_d3_pre02 USING l_xmdm.xmdmdocno,l_xmdm.xmdmseq INTO l_xmdm.xmdmseq1
      IF cl_null(l_xmdm.xmdmseq1) THEN
         LET l_xmdm.xmdmseq1 = 1
      END IF      

      INSERT INTO xmdm_t (xmdment,xmdmsite,xmdmdocno,xmdmseq,xmdmseq1,      
                          xmdm001,xmdm002,xmdm003,xmdm004,xmdm005,                          
                          xmdm006,xmdm007,xmdm008,xmdm009,xmdm010,                          
                          xmdm011,xmdm012,xmdm013,xmdm014,                          
                          xmdm031,xmdm032,xmdm033)
           VALUES (l_xmdm.xmdment,l_xmdm.xmdmsite,l_xmdm.xmdmdocno,l_xmdm.xmdmseq,l_xmdm.xmdmseq1,           
                   l_xmdm.xmdm001,l_xmdm.xmdm002,l_xmdm.xmdm003,l_xmdm.xmdm004,l_xmdm.xmdm005,                   
                   l_xmdm.xmdm006,l_xmdm.xmdm007,l_xmdm.xmdm008,l_xmdm.xmdm009,l_xmdm.xmdm010,                   
                   l_xmdm.xmdm011,0,0,0,
                   l_xmdm.xmdm031,l_xmdm.xmdm032,l_xmdm.xmdm033)

      IF SQLCA.sqlcode THEN
         LET g_result_str = "INSERT INTO xmdm_t",cl_getmsg(SQLCA.sqlcode,g_dlang)
         LET g_success = 'N'
         EXIT FOREACH
      END IF
      #20150914--xianghui--add--b
      IF g_success = 'Y' THEN 
         SELECT xmdl001,xmdl002 INTO l_xmdl001,l_xmdl002
           FROM xmdl_t
          WHERE xmdlent = l_xmdm.xmdment
            AND xmdldocno = l_xmdm.xmdmdocno
            AND xmdlseq = l_xmdm.xmdmseq       
         CALL s_lot_auto_sel('2',l_xmdm.xmdmdocno,l_xmdm.xmdmseq,l_xmdm.xmdmseq1,l_xmdm.xmdm009,
                             '1','axmt580',l_xmdl001,l_xmdl002)
              RETURNING l_success   #160114-00007#1 mod
        #160114-00007#1 add start
         IF l_success THEN
            LET g_success = 'Y' 
         ELSE 
            LET g_success = 'N'
         END  IF
        #160114-00007#1 add end
      END IF
      #20150914--xianghui--add--e      
      INITIALIZE l_xmdm.* TO NULL   
   END FOREACH
   
END FUNCTION

#簽收單頭檢查
PUBLIC FUNCTION axmp580_03_chk_headers(p_xmdk)
   DEFINE p_xmdk          type_ins_xmdk
   
   #客戶編號檢查
   IF NOT cl_null(p_xmdk.xmdk007) THEN
      IF NOT s_axmt540_client_chk(p_xmdk.xmdkdocno,'1',p_xmdk.xmdk007,'') THEN
         LET g_result_str = cl_getmsg('axm-00494',g_dlang)   #客戶資料檢查失敗!
         LET g_success = 'N'
      END IF
   END IF
   
END FUNCTION

################################################################################
# Descriptions...: 帶所有此次產生的簽收單資料
# Memo...........:
# Usage..........: CALL axmp580_03_open_axmt580()
#                  
# Input parameter: 
# Return code....: 
# Date & Author..: 150205 By whitney
# Modify.........:
################################################################################
PUBLIC FUNCTION axmp580_03_open_axmt580()
DEFINE la_param  RECORD
    prog         STRING,
    param        DYNAMIC ARRAY OF STRING
             END RECORD
DEFINE ls_js     STRING
DEFINE i         LIKE type_t.num5   #141227-00003#2 add
DEFINE l_str     STRING             #141227-00003#2 add

  #141227-00003#2 mod str
   LET l_str = ''

   FOR i = 1 TO g_xmdk_d.getLength()
       IF cl_null(l_str) THEN
          LET l_str = g_xmdk_d[i].xmdkdocno,"','"
       ELSE
          LET l_str = l_str,g_xmdk_d[i].xmdkdocno,"','"
       END IF
   END FOR

   LET l_str = l_str.subString(1,l_str.getLength()-3)

   IF NOT cl_null(l_str) THEN
      LET la_param.prog = 'axmt580'
      LET la_param.param[1] = l_str
      LET ls_js = util.JSON.stringify( la_param )
      CALL cl_cmdrun(ls_js)
   END IF  
  #IF NOT cl_null(g_xmdk_d[g_master_idx].xmdkdocno) THEN
  #   LET la_param.prog = 'axmt580'
  #   LET la_param.param[1] = g_xmdk_d[g_master_idx].xmdkdocno  #160114-00007#1 mod
  #   LET ls_js = util.JSON.stringify( la_param )
  #   CALL cl_cmdrun(ls_js)
  #END IF
  #141227-00003#2 mod end   

END FUNCTION

 
{</section>}
 
