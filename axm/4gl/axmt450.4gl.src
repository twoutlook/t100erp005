#該程式未解開Section, 採用最新樣板產出!
{<section id="axmt450.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0019(2017-02-22 02:19:06), PR版次:0019(2017-02-23 18:57:05)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000285
#+ Filename...: axmt450
#+ Description: 銷售合約變更單維護作業
#+ Creator....: 02040(2014-05-26 00:00:00)
#+ Modifier...: 08992 -SD/PR- 08992
 
{</section>}
 
{<section id="axmt450.global" >}
#應用 t01 樣板自動產生(Version:79)
#add-point:填寫註解說明 name="global.memo" 
#151224-00025#5   2015/12/29  By dorishsu 產品特徵欄位若無開窗輸入反而自行手動輸入時,則無法新增至inam_t
#160314-00009#4   2016/03/17  By zhujing  各程式增加产品特征是否需要自动开窗的程式段处理
#160408-00034#1   2016/04/08  By dorislai 把FUNCTION axmt450_xmeadocno_default()的g_xmeb_d[l_ac]換成g_xmeb_d[l_i]
#160318-00025#17  2016/04/11  By 07900    校验代码的重复错误讯息修改
#150810-00021#1   2016/05/26  By shiun    aoos020中参数设置不使用产品特征时，请隐藏“已转订单状况”页签中的产品特征相关栏位
#160705-00042#12  2016/07/15  By 02159    把gzcb002=固定寫死的作業代號改成g_prog,然後gzcb_t要多JOIN gzzz_t
#160812-00017#6   2016/08/18  By 06814    在satatchange( )的FUNCTION中，有RETURN指令但沒有加上transaction_end( ) 造成transaction沒有結束就直接RETURN
#160818-00017#43  2016/08/29  By lixh     单据类作业修改，删除时需重新检查状态
#161109-00085#6   2016/11/10  By 08993    整批調整系統星號寫法
#161109-00085#73  2016/12/13  By 08171    整批調整系統星號寫法
#161221-00064#15  2017/01/10  By zhujing  增加pmao000(1-采购，2-销售),用于区分axmi120和apmi120数据显示
#161031-00025#22  2017/02/06  By 08992    1.將aooi360_01以嵌入的方式，用頁籤放在axmt450單頭多帳期頁籤與異動資訊頁籤中間
#                                           要可修改
#                                           控制類型 =3:內部資訊傳遞 取消不要了
#                                           項次固定寫入0
#                                         2.原axmt450的備註action，改為確認後可執行，直接修改單頭新的"備註"頁籤
#                                         3.axmt450單身最後面增加顯示"長備註"欄位，一樣抓取aooi360的備註顯示
#                                           項次 = 單身項次
#                                           控制類型 = 列印在後
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"
IMPORT FGL aoo_aooi360_01   #161031-00025#22
#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"
GLOBALS
DEFINE g_xmed007      LIKE xmek_t.xmek007
END GLOBALS
#161031-00025#22-s
GLOBALS
TYPE type_g_ooff_d        RECORD
       ooff001 LIKE ooff_t.ooff001, 
   ooff002 LIKE ooff_t.ooff002, 
   ooff004 LIKE ooff_t.ooff004, 
   ooff005 LIKE ooff_t.ooff005, 
   ooff006 LIKE ooff_t.ooff006, 
   ooff007 LIKE ooff_t.ooff007, 
   ooff008 LIKE ooff_t.ooff008, 
   ooff009 LIKE ooff_t.ooff009, 
   ooff010 LIKE ooff_t.ooff010, 
   ooff011 LIKE ooff_t.ooff011, 
   ooff003 LIKE ooff_t.ooff003, 
   ooff012 LIKE ooff_t.ooff012, 
   ooff013 LIKE ooff_t.ooff013, 
   ooff014 LIKE ooff_t.ooff014
       END RECORD
 
DEFINE g_ooff_d4          DYNAMIC ARRAY OF type_g_ooff_d

DEFINE g_detail_insert   LIKE type_t.num5   #單身的新增權限
DEFINE g_detail_delete   LIKE type_t.num5   #單身的刪除權限
DEFINE g_wc2_i36001      STRING             #备注单身QBE條件
DEFINE g_d_idx_i36001    LIKE type_t.num5   #备注单身所在筆數
DEFINE g_d_cnt_i36001    LIKE type_t.num5   #备注单身總筆數
DEFINE g_appoint_idx     LIKE type_t.num5   #指定進入單身行數
DEFINE g_ooff001_d       LIKE ooff_t.ooff001
DEFINE g_ooff002_d       LIKE ooff_t.ooff002
DEFINE g_ooff003_d       LIKE ooff_t.ooff003
DEFINE g_ooff004_d       LIKE ooff_t.ooff004
DEFINE g_ooff005_d       LIKE ooff_t.ooff005
DEFINE g_ooff006_d       LIKE ooff_t.ooff006
DEFINE g_ooff007_d       LIKE ooff_t.ooff007
DEFINE g_ooff008_d       LIKE ooff_t.ooff008
DEFINE g_ooff009_d       LIKE ooff_t.ooff009
DEFINE g_ooff010_d       LIKE ooff_t.ooff010
DEFINE g_ooff011_d       LIKE ooff_t.ooff011
END GLOBALS
#161031-00025#22-e
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_xmea_m        RECORD
       xmeadocno LIKE xmea_t.xmeadocno, 
   xmea900 LIKE xmea_t.xmea900, 
   xmeadocno_desc LIKE type_t.chr80, 
   xmea901 LIKE xmea_t.xmea901, 
   xmea902 LIKE xmea_t.xmea902, 
   xmea000 LIKE xmea_t.xmea000, 
   xmeadocdt LIKE xmea_t.xmeadocdt, 
   xmea002 LIKE xmea_t.xmea002, 
   xmea002_desc LIKE type_t.chr80, 
   xmea003 LIKE xmea_t.xmea003, 
   xmea003_desc LIKE type_t.chr80, 
   xmeastus LIKE xmea_t.xmeastus, 
   xmea004 LIKE xmea_t.xmea004, 
   xmea004_desc LIKE type_t.chr80, 
   xmeaacti LIKE xmea_t.xmeaacti, 
   xmea005 LIKE xmea_t.xmea005, 
   xmea005_desc LIKE type_t.chr80, 
   xmea006 LIKE xmea_t.xmea006, 
   xmea006_desc LIKE type_t.chr80, 
   xmea007 LIKE xmea_t.xmea007, 
   xmea008 LIKE xmea_t.xmea008, 
   xmea009 LIKE xmea_t.xmea009, 
   xmea009_desc LIKE type_t.chr80, 
   xmea011 LIKE xmea_t.xmea011, 
   xmea011_desc LIKE type_t.chr80, 
   xmea030 LIKE xmea_t.xmea030, 
   xmea016 LIKE xmea_t.xmea016, 
   xmea017 LIKE xmea_t.xmea017, 
   xmea018 LIKE xmea_t.xmea018, 
   xmea019 LIKE xmea_t.xmea019, 
   xmea020 LIKE xmea_t.xmea020, 
   xmea010 LIKE xmea_t.xmea010, 
   xmea012 LIKE xmea_t.xmea012, 
   xmea001 LIKE xmea_t.xmea001, 
   xmea014 LIKE xmea_t.xmea014, 
   xmea015 LIKE xmea_t.xmea015, 
   xmeasite LIKE xmea_t.xmeasite, 
   xmea903 LIKE xmea_t.xmea903, 
   xmea903_desc LIKE type_t.chr80, 
   xmea904 LIKE xmea_t.xmea904, 
   xmeaownid LIKE xmea_t.xmeaownid, 
   xmeaownid_desc LIKE type_t.chr80, 
   xmeaowndp LIKE xmea_t.xmeaowndp, 
   xmeaowndp_desc LIKE type_t.chr80, 
   xmeacrtid LIKE xmea_t.xmeacrtid, 
   xmeacrtid_desc LIKE type_t.chr80, 
   xmeacrtdp LIKE xmea_t.xmeacrtdp, 
   xmeacrtdp_desc LIKE type_t.chr80, 
   xmeacrtdt LIKE xmea_t.xmeacrtdt, 
   xmeamodid LIKE xmea_t.xmeamodid, 
   xmeamodid_desc LIKE type_t.chr80, 
   xmeamoddt LIKE xmea_t.xmeamoddt, 
   xmeacnfid LIKE xmea_t.xmeacnfid, 
   xmeacnfid_desc LIKE type_t.chr80, 
   xmeacnfdt LIKE xmea_t.xmeacnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_xmeb_d        RECORD
       xmebsite LIKE xmeb_t.xmebsite, 
   xmebseq LIKE xmeb_t.xmebseq, 
   xmeb002 LIKE xmeb_t.xmeb002, 
   xmeb002_desc LIKE type_t.chr500, 
   xmeb002_desc_desc LIKE type_t.chr500, 
   xmeb003 LIKE xmeb_t.xmeb003, 
   xmeb003_desc LIKE type_t.chr500, 
   xmeb005 LIKE xmeb_t.xmeb005, 
   xmeb005_desc LIKE type_t.chr500, 
   xmeb005_desc_desc LIKE type_t.chr500, 
   xmeb006 LIKE xmeb_t.xmeb006, 
   xmeb006_desc LIKE type_t.chr500, 
   xmeb007 LIKE xmeb_t.xmeb007, 
   xmeb014 LIKE xmeb_t.xmeb014, 
   xmeb014_desc LIKE type_t.chr500, 
   xmeb008 LIKE xmeb_t.xmeb008, 
   xmeb008_desc LIKE type_t.chr500, 
   xmeb009 LIKE xmeb_t.xmeb009, 
   xmeb010 LIKE xmeb_t.xmeb010, 
   xmeb024 LIKE xmeb_t.xmeb024, 
   xmeb011 LIKE xmeb_t.xmeb011, 
   xmeb011_desc LIKE type_t.chr500, 
   xmeb012 LIKE xmeb_t.xmeb012, 
   xmeb017 LIKE xmeb_t.xmeb017, 
   xmeb018 LIKE xmeb_t.xmeb018, 
   xmeb019 LIKE xmeb_t.xmeb019, 
   xmeb013 LIKE xmeb_t.xmeb013, 
   xmeb013_desc LIKE type_t.chr500, 
   xmeb004 LIKE xmeb_t.xmeb004, 
   xmeb030 LIKE xmeb_t.xmeb030, 
   xmeb901 LIKE xmeb_t.xmeb901, 
   xmeb902 LIKE xmeb_t.xmeb902, 
   xmeb902_desc LIKE type_t.chr500, 
   xmeb903 LIKE xmeb_t.xmeb903, 
   xmeb001 LIKE xmeb_t.xmeb001, 
   ooff013 LIKE type_t.chr500
       END RECORD
PRIVATE TYPE type_g_xmeb2_d RECORD
       xmebseq LIKE xmeb_t.xmebseq, 
   xmeb0022 LIKE type_t.chr500, 
   xmeb002_2_desc LIKE type_t.chr500, 
   xmeb002_2_desc_desc LIKE type_t.chr500, 
   xmeb0032 LIKE type_t.chr500, 
   xmeb0032_desc LIKE type_t.chr500, 
   xmeb0062 LIKE type_t.chr10, 
   xmeb0062_desc LIKE type_t.chr500, 
   xmeb0072 LIKE type_t.chr10, 
   xmeb0082 LIKE type_t.chr10, 
   xmeb0082_desc LIKE type_t.chr500, 
   xmeb0092 LIKE type_t.num20_6, 
   xmeb0102 LIKE type_t.num20_6, 
   xmeb020 LIKE xmeb_t.xmeb020, 
   xmeb021 LIKE xmeb_t.xmeb021, 
   xmeb022 LIKE xmeb_t.xmeb022, 
   xmeb023 LIKE xmeb_t.xmeb023, 
   xmeb0202 LIKE type_t.num20_6, 
   xmeb0212 LIKE type_t.num20_6, 
   xmeb0222 LIKE type_t.num20_6, 
   xmeb0232 LIKE type_t.num20_6
       END RECORD
PRIVATE TYPE type_g_xmeb3_d RECORD
       xmecsite LIKE xmec_t.xmecsite, 
   xmecseq LIKE xmec_t.xmecseq, 
   xmecseq1 LIKE xmec_t.xmecseq1, 
   xmec001 LIKE xmec_t.xmec001, 
   xmec002 LIKE xmec_t.xmec002, 
   xmec003 LIKE xmec_t.xmec003, 
   xmec004 LIKE xmec_t.xmec004, 
   xmec005 LIKE xmec_t.xmec005, 
   xmec901 LIKE xmec_t.xmec901, 
   xmec902 LIKE xmec_t.xmec902, 
   xmec902_desc LIKE type_t.chr500, 
   xmec903 LIKE xmec_t.xmec903
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_xmeadocno LIKE xmea_t.xmeadocno,
      b_xmea902 LIKE xmea_t.xmea902,
      b_xmea000 LIKE xmea_t.xmea000,
      b_xmea004 LIKE xmea_t.xmea004,
   b_xmea004_desc LIKE type_t.chr80,
      b_xmea002 LIKE xmea_t.xmea002,
   b_xmea002_desc LIKE type_t.chr80,
      b_xmea003 LIKE xmea_t.xmea003,
   b_xmea003_desc LIKE type_t.chr80,
      b_xmea900 LIKE xmea_t.xmea900
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE g_gzcb004             LIKE gzcb_t.gzcb004  #應用欄位二
DEFINE g_gzcb008             LIKE gzcb_t.gzcb008  #應用欄位六

#顏色處理
DEFINE g_xmeb_d_color  DYNAMIC ARRAY OF RECORD
    xmebsite           STRING,
    xmebseq            STRING,
    xmeb002            STRING,
    xmeb002_desc       STRING,
    xmeb002_desc_desc  STRING,
    xmeb003            STRING,
    xmeb003_desc       STRING,
    xmeb005            STRING,
    xmeb005_desc       STRING,
    xmeb005_desc_desc  STRING,
    xmeb006            STRING,
    xmeb006_desc       STRING,
    xmeb007            STRING,
    xmeb014            STRING,
    xmeb014_desc       STRING,
    xmeb008            STRING,
    xmeb008_desc       STRING,
    xmeb009            STRING,
    xmeb010            STRING,
    xmeb024            STRING,
    xmeb011            STRING,
    xmeb011_desc       STRING,
    xmeb012            STRING,
    xmeb017            STRING,
    xmeb018            STRING,
    xmeb019            STRING,
    xmeb013            STRING,
    xmeb013_desc       STRING,
    xmeb004            STRING,
    xmeb030            STRING,
    xmeb901            STRING,
    xmeb902            STRING,
    xmeb902_desc       STRING,
    xmeb903            STRING,
    xmeb001            STRING,
    ooff013            STRING   #161031-00025#22 add
                   END RECORD     
DEFINE g_xmeb2_d_color DYNAMIC ARRAY OF RECORD
   xmebseq             STRING,
   xmeb0022            STRING,
   xmeb002_2_desc      STRING,
   xmeb002_2_desc_desc STRING,
   xmeb0032            STRING,
   xmeb0032_desc       STRING,
   xmeb0062            STRING,
   xmeb0062_desc       STRING,
   xmeb0072            STRING,
   xmeb0082            STRING,
   xmeb0082_desc       STRING,
   xmeb0092            STRING,
   xmeb0102            STRING,
   xmeb020             STRING,
   xmeb021             STRING,
   xmeb022             STRING,
   xmeb023             STRING,
   xmeb0202            STRING,
   xmeb0212            STRING,
   xmeb0222            STRING,
   xmeb0232            STRING
                   END RECORD
DEFINE g_xmeb3_d_color DYNAMIC ARRAY OF RECORD
   xmecseq             STRING,
   xmecseq1            STRING,
   xmec001             STRING,
   xmec002             STRING,
   xmec003             STRING,
   xmec004             STRING,
   xmec005             STRING,
   xmec901             STRING,
   xmec902             STRING,
   xmec902_desc        STRING,
   xmec903             STRING
                   END RECORD
#161031-00025#22-s add
DEFINE g_ooff_d4_color DYNAMIC ARRAY OF RECORD
ooff001                STRING ,
   ooff002             STRING ,
   ooff004             STRING ,
   ooff005             STRING ,
   ooff006             STRING ,
   ooff007             STRING ,
   ooff008             STRING ,
   ooff009             STRING ,
   ooff010             STRING ,
   ooff011             STRING ,
   ooff003             STRING ,
   ooff012             STRING ,
   ooff013             STRING ,
   ooff014             STRING
                   END RECORD
DEFINE g_detail_id          STRING           #紀錄停留在哪個Page
#161031-00025#22-e add
#end add-point
       
#模組變數(Module Variables)
DEFINE g_xmea_m          type_g_xmea_m
DEFINE g_xmea_m_t        type_g_xmea_m
DEFINE g_xmea_m_o        type_g_xmea_m
DEFINE g_xmea_m_mask_o   type_g_xmea_m #轉換遮罩前資料
DEFINE g_xmea_m_mask_n   type_g_xmea_m #轉換遮罩後資料
 
   DEFINE g_xmeadocno_t LIKE xmea_t.xmeadocno
DEFINE g_xmea900_t LIKE xmea_t.xmea900
 
 
DEFINE g_xmeb_d          DYNAMIC ARRAY OF type_g_xmeb_d
DEFINE g_xmeb_d_t        type_g_xmeb_d
DEFINE g_xmeb_d_o        type_g_xmeb_d
DEFINE g_xmeb_d_mask_o   DYNAMIC ARRAY OF type_g_xmeb_d #轉換遮罩前資料
DEFINE g_xmeb_d_mask_n   DYNAMIC ARRAY OF type_g_xmeb_d #轉換遮罩後資料
DEFINE g_xmeb2_d          DYNAMIC ARRAY OF type_g_xmeb2_d
DEFINE g_xmeb2_d_t        type_g_xmeb2_d
DEFINE g_xmeb2_d_o        type_g_xmeb2_d
DEFINE g_xmeb2_d_mask_o   DYNAMIC ARRAY OF type_g_xmeb2_d #轉換遮罩前資料
DEFINE g_xmeb2_d_mask_n   DYNAMIC ARRAY OF type_g_xmeb2_d #轉換遮罩後資料
DEFINE g_xmeb3_d          DYNAMIC ARRAY OF type_g_xmeb3_d
DEFINE g_xmeb3_d_t        type_g_xmeb3_d
DEFINE g_xmeb3_d_o        type_g_xmeb3_d
DEFINE g_xmeb3_d_mask_o   DYNAMIC ARRAY OF type_g_xmeb3_d #轉換遮罩前資料
DEFINE g_xmeb3_d_mask_n   DYNAMIC ARRAY OF type_g_xmeb3_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
DEFINE g_wc2_table2   STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="axmt450.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axm","")
 
   #add-point:作業初始化 name="main.init"
   
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " SELECT xmeadocno,xmea900,'',xmea901,xmea902,xmea000,xmeadocdt,xmea002,'',xmea003, 
       '',xmeastus,xmea004,'',xmeaacti,xmea005,'',xmea006,'',xmea007,xmea008,xmea009,'',xmea011,'',xmea030, 
       xmea016,xmea017,xmea018,xmea019,xmea020,xmea010,xmea012,xmea001,xmea014,xmea015,xmeasite,xmea903, 
       '',xmea904,xmeaownid,'',xmeaowndp,'',xmeacrtid,'',xmeacrtdp,'',xmeacrtdt,xmeamodid,'',xmeamoddt, 
       xmeacnfid,'',xmeacnfdt", 
                      " FROM xmea_t",
                      " WHERE xmeaent= ? AND xmeadocno=? AND xmea900=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt450_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.xmeadocno,t0.xmea900,t0.xmea901,t0.xmea902,t0.xmea000,t0.xmeadocdt, 
       t0.xmea002,t0.xmea003,t0.xmeastus,t0.xmea004,t0.xmeaacti,t0.xmea005,t0.xmea006,t0.xmea007,t0.xmea008, 
       t0.xmea009,t0.xmea011,t0.xmea030,t0.xmea016,t0.xmea017,t0.xmea018,t0.xmea019,t0.xmea020,t0.xmea010, 
       t0.xmea012,t0.xmea001,t0.xmea014,t0.xmea015,t0.xmeasite,t0.xmea903,t0.xmea904,t0.xmeaownid,t0.xmeaowndp, 
       t0.xmeacrtid,t0.xmeacrtdp,t0.xmeacrtdt,t0.xmeamodid,t0.xmeamoddt,t0.xmeacnfid,t0.xmeacnfdt,t1.ooag011 , 
       t2.ooefl003 ,t3.pmaal004 ,t4.ooail003 ,t5.ooibl004 ,t6.oocql004 ,t7.ooag011 ,t8.ooefl003 ,t9.ooag011 , 
       t10.ooefl003 ,t11.ooag011 ,t12.ooag011",
               " FROM xmea_t t0",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent="||g_enterprise||" AND t1.ooag001=t0.xmea002  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=t0.xmea003 AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t3 ON t3.pmaalent="||g_enterprise||" AND t3.pmaal001=t0.xmea004 AND t3.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN ooail_t t4 ON t4.ooailent="||g_enterprise||" AND t4.ooail001=t0.xmea005 AND t4.ooail002='"||g_dlang||"' ",
               " LEFT JOIN ooibl_t t5 ON t5.ooiblent="||g_enterprise||" AND t5.ooibl002=t0.xmea009 AND t5.ooibl003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t6 ON t6.oocqlent="||g_enterprise||" AND t6.oocql001='238' AND t6.oocql002=t0.xmea011 AND t6.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent="||g_enterprise||" AND t7.ooag001=t0.xmeaownid  ",
               " LEFT JOIN ooefl_t t8 ON t8.ooeflent="||g_enterprise||" AND t8.ooefl001=t0.xmeaowndp AND t8.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t9 ON t9.ooagent="||g_enterprise||" AND t9.ooag001=t0.xmeacrtid  ",
               " LEFT JOIN ooefl_t t10 ON t10.ooeflent="||g_enterprise||" AND t10.ooefl001=t0.xmeacrtdp AND t10.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t11 ON t11.ooagent="||g_enterprise||" AND t11.ooag001=t0.xmeamodid  ",
               " LEFT JOIN ooag_t t12 ON t12.ooagent="||g_enterprise||" AND t12.ooag001=t0.xmeacnfid  ",
 
               " WHERE t0.xmeaent = " ||g_enterprise|| " AND t0.xmeadocno = ? AND t0.xmea900 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE axmt450_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axmt450 WITH FORM cl_ap_formpath("axm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axmt450_init()   
 
      #進入選單 Menu (="N")
      CALL axmt450_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axmt450
      
   END IF 
   
   CLOSE axmt450_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="axmt450.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION axmt450_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('xmeastus','13','N,Y,A,D,R,W,C,X')
 
      CALL cl_set_combo_scc('xmea016','2046') 
   CALL cl_set_combo_scc('xmea017','2042') 
   CALL cl_set_combo_scc('xmea018','2066') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1','2',","1")
   CALL g_idx_group.addAttribute("'3',","1")
   CALL g_idx_group.addAttribute("","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   #161031-00025#22-s
   #子程式畫面取代主程式元件
   CALL cl_ui_replace_sub_window(cl_ap_formpath("aoo", "aooi360_01"), "grid_remarks", "Table", "s_detail1_aooi360_01")
   CALL cl_set_combo_scc_part('ooff012','11','1,2,4')
   CALL cl_set_comp_visible("ooff003",FALSE)
   #161031-00025#22-e    
   LET g_gzcb004 = ''
   LET g_gzcb008 = ''
   #160705-00042#12 160715 by sakura mark(S)   
   #SELECT gzcb004,gzcb008 INTO g_gzcb004,g_gzcb008
   #  FROM gzcb_t
   # WHERE gzcb001 = '24'
   #   AND gzcb002 = 'axmt440'
   #160705-00042#12 160715 by sakura mark(E)
   #160705-00042#12 160715 by sakura add(S)      
   SELECT gzcb004,gzcb008 INTO g_gzcb004,g_gzcb008
     FROM gzcb_t,gzzz_t 
    WHERE gzcb001 = '24' 
      AND gzcb002 = gzzz006 
      AND gzzz001 = g_prog
   #160705-00042#12 160715 by sakura add(E)      
      
   #160314-00009#4 zhujing add 2016-3-17---(S)
   #判斷據點參數若不使用產品特徵時，則產品特徵需隱藏不可以維護(據點參數:S-BAS-0036)
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0036') = 'N' THEN
      CALL cl_set_comp_visible("xmeb003,xmeb003_desc,xmeb0032,xmeb0032_desc",FALSE)   #mod--150810-00021#1 By shiun  增加xmeb0032,xmeb0032_desc
   END IF
   #160314-00009#4 zhujing add 2016-3-17---(E)

   #end add-point
   
   #初始化搜尋條件
   CALL axmt450_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="axmt450.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION axmt450_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   DEFINE l_ooff013_d_t  LIKE ooff_t.ooff013   #161031-00025#22 add
   DEFINE l_ooff013_d    LIKE ooff_t.ooff013   #161031-00025#22 add
   DEFINE ls_value       LIKE xmed_t.xmed004   #161031-00025#22 add
   DEFINE l_i            LIKE type_t.num5      #161031-00025#22 add
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL axmt450_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
            
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
      
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
 
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_xmea_m.* TO NULL
         CALL g_xmeb_d.clear()
         CALL g_xmeb2_d.clear()
         CALL g_xmeb3_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL axmt450_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL axmt450_fetch('') # reload data
               LET l_ac = 1
               CALL axmt450_ui_detailshow() #Setting the current row 
         
               CALL axmt450_idx_chk()
               #NEXT FIELD xmebseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_xmeb_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axmt450_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1','2',",l_ac)
               CALL axmt450_b_fill2('2')
 
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               CALL s_hint_show('xmed_t','xmeb_t','xmdy_t',g_xmea_m.xmeadocno,g_xmea_m.xmea900,g_xmeb_d[g_detail_idx].xmebseq,'','')
               #161031-00025#22-s add  長備註顯示showhint
               SELECT xmed004,xmed005 INTO l_ooff013_d_t,l_ooff013_d
                 FROM xmed_t
                WHERE xmedent = g_enterprise
                  AND xmeddocno = g_xmea_m.xmeadocno
                  AND xmed001 = g_xmea_m.xmea900
                  AND xmedseq = g_xmeb_d[g_detail_idx].xmebseq
                  AND xmed002 = 'ooff013'
               IF (l_ooff013_d <> l_ooff013_d_t OR (cl_null(l_ooff013_d) AND NOT cl_null(l_ooff013_d_t)) OR
                  (cl_null(l_ooff013_d_t) AND NOT cl_null(l_ooff013_d)) ) THEN
                  LET ls_value = cl_getmsg('sub-00358',g_dlang)," ",l_ooff013_d_t
                  CALL s_hint_show_set_comments('ooff013_1',ls_value)
               END IF
               #161031-00025#22-s add
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1','2',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL axmt450_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               CALL DIALOG.setCellAttributes(g_xmeb_d_color)
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_xmeb2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axmt450_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[2] = l_ac
               CALL g_idx_group.addAttribute("'3',",l_ac)
               CALL axmt450_b_fill2('2')
 
               #add-point:page2, before row動作 name="ui_dialog.body2.before_row"
               CALL s_hint_show('xmed_t','xmeb_t','xmdy_t',g_xmea_m.xmeadocno,g_xmea_m.xmea900,g_xmeb_d[g_detail_idx].xmebseq,'','')
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL axmt450_idx_chk()
               #add-point:page2自定義行為 name="ui_dialog.body2.before_display"
               CALL DIALOG.setCellAttributes(g_xmeb2_d_color)
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為 name="ui_dialog.body2.action"
            
            #end add-point
         
         END DISPLAY
 
         
         #第二階單身段落
         DISPLAY ARRAY g_xmeb3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axmt450_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx2 = l_ac
               LET g_detail_idx_list[3] = l_ac
               CALL g_idx_group.addAttribute("",l_ac)
               
               #add-point:page3, before row動作 name="ui_dialog.body3.before_row"
               CALL s_hint_show('xmed_t','xmec_t','xmdz_t',g_xmea_m.xmeadocno,g_xmea_m.xmea900,
                                 g_xmeb3_d[g_detail_idx].xmecseq,g_xmeb3_d[g_detail_idx].xmecseq1,'')
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在下階單身則控制筆數位置
               IF g_loc = 'd' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue(""))
               END IF
               LET g_loc = 'd'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
               #顯示單身筆數
               CALL axmt450_idx_chk()
               #add-point:page3自定義行為 name="ui_dialog.body3.before_display"
               CALL DIALOG.setCellAttributes(g_xmeb3_d_color)
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為 name="ui_dialog.body3.action"
            
            #end add-point
         
         END DISPLAY
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         SUBDIALOG aoo_aooi360_01.aooi360_01_display     #161031-00025#22 add
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL axmt450_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL axmt450_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL axmt450_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL axmt450_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         #161031-00025#22-s
         ON ACTION remarks_page
            LET g_detail_id = "remarks_page"
            FOR l_i = 1 TO g_ooff_d4.getLength()
                #單身文字的顏色顯示
                CALL axmt450_ooff_color(l_i)
            END FOR
            CALL DIALOG.setCellAttributes(g_ooff_d4_color)
            NEXT FIELD ooff012
         #161031-00025#22-e
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL axmt450_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL axmt450_set_act_visible()   
            CALL axmt450_set_act_no_visible()
            IF NOT (g_xmea_m.xmeadocno IS NULL
              OR g_xmea_m.xmea900 IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " xmeaent = " ||g_enterprise|| " AND",
                                  " xmeadocno = '", g_xmea_m.xmeadocno, "' "
                                  ," AND xmea900 = '", g_xmea_m.xmea900, "' "
 
               #填到對應位置
               CALL axmt450_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:3)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status name="menu.bpm_status"
            
            #END add-point
 
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "xmea_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmeb_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL axmt450_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "xmea_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmeb_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL axmt450_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code = "-100" 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL axmt450_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:4)
            #過濾瀏覽頁資料
            ON ACTION filter
               LET g_action_choice = "fetch"
               #add-point:filter action name="ui_dialog.action.filter"
               
               #end add-point
               CALL axmt450_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL axmt450_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt450_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL axmt450_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt450_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL axmt450_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt450_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL axmt450_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt450_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL axmt450_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt450_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_xmeb_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_xmeb2_d)
                  LET g_export_id[2]   = "s_detail2"
                  LET g_export_node[3] = base.typeInfo.create(g_xmeb3_d)
                  LET g_export_id[3]   = "s_detail3"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  #161031-00025#22-s
                  LET g_export_node[4] = base.typeInfo.create(g_ooff_d4)
                  LET g_export_id[4]   = "s_detail1_aooi360_01"
                  #161031-00025#22-e
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD xmebseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL axmt450_modify()
               #add-point:ON ACTION modify name="menu.modify"
               CALL axmt450_fetch('') 
               CALL axmt450_show()
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL axmt450_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               CALL axmt450_fetch('') 
               CALL axmt450_show()
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL axmt450_delete()
               #add-point:ON ACTION delete name="menu.delete"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL axmt450_insert()
               #add-point:ON ACTION insert name="menu.insert"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION axmt450_01
            LET g_action_choice="axmt450_01"
            IF cl_auth_chk_act("axmt450_01") THEN
               
               #add-point:ON ACTION axmt450_01 name="menu.axmt450_01"
               IF NOT cl_null(g_xmeb_d[l_ac].xmebseq) THEN
                  CALL axmt450_01('2',g_xmea_m.xmeadocno,g_xmeb_d[l_ac].xmebseq,g_xmea_m.xmea900)
                  CALL axmt450_upd_xmeb024()
                  CALL axmt450_fetch('') 
                  CALL axmt450_show()
               END IF
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               LET g_rep_wc = " xmeaent = '",g_enterprise,"' AND xmea900 = '",g_xmea_m.xmea900,"' AND xmeadocno = '",g_xmea_m.xmeadocno,"' "
               #END add-point
               &include "erp/axm/axmt450_rep.4gl"
               #add-point:ON ACTION output.after name="menu.after_output"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION quickprint
            LET g_action_choice="quickprint"
            IF cl_auth_chk_act("quickprint") THEN
               
               #add-point:ON ACTION quickprint name="menu.quickprint"
               LET g_rep_wc = " xmeaent = '",g_enterprise,"' AND xmea900 = '",g_xmea_m.xmea900,"' AND xmeadocno = '",g_xmea_m.xmeadocno,"' "
               #END add-point
               &include "erp/axm/axmt450_rep.4gl"
               #add-point:ON ACTION quickprint.after name="menu.after_quickprint"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL axmt450_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL axmt450_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
               CALL g_curr_diag.setCurrentRow("s_detail3",1)
 
 
 
 
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL axmt450_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL axmt450_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL axmt450_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow(g_xmea_m.xmeadocdt)
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
 
      #(ver:79) ---add start---
      #add-point:ui_dialog段 after dialog name="ui_dialog.exit_dialog"
      
      #end add-point
      #(ver:79) --- add end ---
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
 
{</section>}
 
{<section id="axmt450.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION axmt450_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   #161031-00025#22-s
   IF cl_null(g_add_browse) THEN
      CALL aooi360_01_clear_detail()   #清除备注单身
   END IF
   #161031-00025#22-e
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   IF cl_null(g_wc) THEN
      LET g_wc = " xmeasite = '",g_site,"' "
   ELSE
      LET g_wc = g_wc," AND xmeasite = '",g_site,"' "
   END IF

   IF g_argv[01] = '2' THEN
      LET g_wc = g_wc," AND xmea001 = 'Y' "
   ELSE
      LET g_wc = g_wc," AND xmea001 = 'N' "
   END IF

   LET l_wc  = g_wc.trim()
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT xmeadocno,xmea900 ",
                      " FROM xmea_t ",
                      " ",
                      " LEFT JOIN xmeb_t ON xmebent = xmeaent AND xmeadocno = xmebdocno AND xmea900 = xmeb900 ", "  ",
                      #add-point:browser_fill段sql(xmeb_t1) name="browser_fill.cnt.join.}"
                      
                      #end add-point
 
                      " LEFT JOIN xmec_t ON xmecent = xmeaent AND xmebdocno = xmecdocno AND xmeb900 = xmec900 AND xmebseq = xmecseq", "  ",
                      #add-point:browser_fill段sql(xmec_t1) name="browser_fill.cnt.join.xmec_t1"
                      " LEFT JOIN ooff_t ON ooffent = xmeaent AND ooff001 = '7' 
                              AND ooff002 = '",g_prog,"' AND ooff003 = xmeadocno  AND ooff004 = xmebseq 
                              AND ooff005 = xmea900 ",  "  ",   #161031-00025#22 add
                      #end add-point
 
 
                      " ", 
                      " ", 
 
                      " ",
 
 
                      " WHERE xmeaent = " ||g_enterprise|| " AND xmebent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("xmea_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT xmeadocno,xmea900 ",
                      " FROM xmea_t ", 
                      "  ",
                      "  ",
                      " WHERE xmeaent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("xmea_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   #161031-00025#22-s
   IF NOT cl_null(g_wc2_i36001) AND g_wc2_i36001 <> " 1=1" THEN
      LET l_sub_sql = l_sub_sql CLIPPED, " AND EXISTS (SELECT 1 FROM ooff_t 
                                                        WHERE ooffent = ",g_enterprise," AND ooff001 = '6' 
                                                          AND ooff002 = '",g_prog,"'
                                                          AND ooff003 = xmeadocno
                                                          AND ooff004 = '0'    
                                                          AND ooff005 = xmea900                                                          
                                                          AND ",g_wc2_i36001 CLIPPED ,")" 
   END IF                                                    
   #161031-00025#22-e
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
 
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code = 9035 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_xmea_m.* TO NULL
      CALL g_xmeb_d.clear()        
      CALL g_xmeb2_d.clear() 
      CALL g_xmeb3_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.xmeadocno,t0.xmea902,t0.xmea000,t0.xmea004,t0.xmea002,t0.xmea003,t0.xmea900 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.xmeastus,t0.xmeadocno,t0.xmea902,t0.xmea000,t0.xmea004,t0.xmea002, 
          t0.xmea003,t0.xmea900,t1.pmaal004 ,t2.ooag011 ,t3.ooefl003 ",
                  " FROM xmea_t t0",
                  "  ",
                  "  LEFT JOIN xmeb_t ON xmebent = xmeaent AND xmeadocno = xmebdocno AND xmea900 = xmeb900 ", "  ", 
                  #add-point:browser_fill段sql(xmeb_t1) name="browser_fill.join.xmeb_t1"
                  
                  #end add-point
 
                  "  LEFT JOIN xmec_t ON xmecent = xmeaent AND xmebdocno = xmecdocno AND xmeb900 = xmec900 AND xmebseq = xmecseq", "  ", 
                  #add-point:browser_fill段sql(xmec_t1) name="browser_fill.join.xmec_t1"
                  " LEFT JOIN ooff_t ON ooffent = xmeaent AND ooff001 = '7' 
                          AND ooff002 = '",g_prog,"' AND ooff003 = xmeadocno AND ooff004 = xmebseq AND ooff005 = xmea900 ",  "  ",   #161031-00025#22 add
                  #end add-point
 
 
                  " ", 
 
                  " ",
 
 
                                 " LEFT JOIN pmaal_t t1 ON t1.pmaalent="||g_enterprise||" AND t1.pmaal001=t0.xmea004 AND t1.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent="||g_enterprise||" AND t2.ooag001=t0.xmea002  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent="||g_enterprise||" AND t3.ooefl001=t0.xmea003 AND t3.ooefl002='"||g_dlang||"' ",
 
                  " WHERE t0.xmeaent = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("xmea_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.xmeastus,t0.xmeadocno,t0.xmea902,t0.xmea000,t0.xmea004,t0.xmea002, 
          t0.xmea003,t0.xmea900,t1.pmaal004 ,t2.ooag011 ,t3.ooefl003 ",
                  " FROM xmea_t t0",
                  "  ",
                                 " LEFT JOIN pmaal_t t1 ON t1.pmaalent="||g_enterprise||" AND t1.pmaal001=t0.xmea004 AND t1.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent="||g_enterprise||" AND t2.ooag001=t0.xmea002  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent="||g_enterprise||" AND t3.ooefl001=t0.xmea003 AND t3.ooefl002='"||g_dlang||"' ",
 
                  " WHERE t0.xmeaent = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("xmea_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   #161031-00025#22-s
   IF NOT cl_null(g_wc2_i36001) AND g_wc2_i36001 <> " 1=1" THEN
      LET g_sql = g_sql CLIPPED," AND EXISTS (SELECT 1 FROM ooff_t 
                                                        WHERE ooffent = ",g_enterprise," AND ooff001 = '6' 
                                                          AND ooff002 = '",g_prog,"'
                                                          AND ooff003 = xmeadocno
                                                          AND ooff004 = '0'    
                                                          AND ooff005 = xmea900                                                          
                                                          AND ",g_wc2_i36001 CLIPPED ,")"
   END IF                                                    
   #161031-00025#22-e
   #end add-point
   LET g_sql = g_sql, " ORDER BY xmeadocno,xmea900 ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
 
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"xmea_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_xmeadocno,g_browser[g_cnt].b_xmea902, 
          g_browser[g_cnt].b_xmea000,g_browser[g_cnt].b_xmea004,g_browser[g_cnt].b_xmea002,g_browser[g_cnt].b_xmea003, 
          g_browser[g_cnt].b_xmea900,g_browser[g_cnt].b_xmea004_desc,g_browser[g_cnt].b_xmea002_desc, 
          g_browser[g_cnt].b_xmea003_desc
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
 
         #end add-point
      
         #遮罩相關處理
         CALL axmt450_browser_mask()
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "C"
            LET g_browser[g_cnt].b_statepic = "stus/16/closed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_xmeadocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   
   #end add-point   
 
END FUNCTION
 
{</section>}
 
{<section id="axmt450.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION axmt450_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_xmea_m.xmeadocno = g_browser[g_current_idx].b_xmeadocno   
   LET g_xmea_m.xmea900 = g_browser[g_current_idx].b_xmea900   
 
   EXECUTE axmt450_master_referesh USING g_xmea_m.xmeadocno,g_xmea_m.xmea900 INTO g_xmea_m.xmeadocno, 
       g_xmea_m.xmea900,g_xmea_m.xmea901,g_xmea_m.xmea902,g_xmea_m.xmea000,g_xmea_m.xmeadocdt,g_xmea_m.xmea002, 
       g_xmea_m.xmea003,g_xmea_m.xmeastus,g_xmea_m.xmea004,g_xmea_m.xmeaacti,g_xmea_m.xmea005,g_xmea_m.xmea006, 
       g_xmea_m.xmea007,g_xmea_m.xmea008,g_xmea_m.xmea009,g_xmea_m.xmea011,g_xmea_m.xmea030,g_xmea_m.xmea016, 
       g_xmea_m.xmea017,g_xmea_m.xmea018,g_xmea_m.xmea019,g_xmea_m.xmea020,g_xmea_m.xmea010,g_xmea_m.xmea012, 
       g_xmea_m.xmea001,g_xmea_m.xmea014,g_xmea_m.xmea015,g_xmea_m.xmeasite,g_xmea_m.xmea903,g_xmea_m.xmea904, 
       g_xmea_m.xmeaownid,g_xmea_m.xmeaowndp,g_xmea_m.xmeacrtid,g_xmea_m.xmeacrtdp,g_xmea_m.xmeacrtdt, 
       g_xmea_m.xmeamodid,g_xmea_m.xmeamoddt,g_xmea_m.xmeacnfid,g_xmea_m.xmeacnfdt,g_xmea_m.xmea002_desc, 
       g_xmea_m.xmea003_desc,g_xmea_m.xmea004_desc,g_xmea_m.xmea005_desc,g_xmea_m.xmea009_desc,g_xmea_m.xmea011_desc, 
       g_xmea_m.xmeaownid_desc,g_xmea_m.xmeaowndp_desc,g_xmea_m.xmeacrtid_desc,g_xmea_m.xmeacrtdp_desc, 
       g_xmea_m.xmeamodid_desc,g_xmea_m.xmeacnfid_desc
   
   CALL axmt450_xmea_t_mask()
   CALL axmt450_show()
      
END FUNCTION
 
{</section>}
 
{<section id="axmt450.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION axmt450_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="axmt450.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION axmt450_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_xmeadocno = g_xmea_m.xmeadocno 
         AND g_browser[l_i].b_xmea900 = g_xmea_m.xmea900 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="axmt450.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION axmt450_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   CALL aooi360_01_clear_detail()   #清除备注单身  #161031-00025#22
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_xmea_m.* TO NULL
   CALL g_xmeb_d.clear()        
   CALL g_xmeb2_d.clear() 
   CALL g_xmeb3_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON xmeadocno,xmea900,xmea901,xmea902,xmea000,xmeadocdt,xmea002,xmea003, 
          xmeastus,xmea004,xmeaacti,xmea005,xmea006,xmea007,xmea008,xmea009,xmea011,xmea030,xmea016, 
          xmea017,xmea018,xmea019,xmea020,xmea010,xmea012,xmea001,xmea014,xmea015,xmeasite,xmea903,xmea904, 
          xmeaownid,xmeaowndp,xmeacrtid,xmeacrtdp,xmeacrtdt,xmeamodid,xmeamoddt,xmeacnfid,xmeacnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<xmeacrtdt>>----
         AFTER FIELD xmeacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<xmeamoddt>>----
         AFTER FIELD xmeamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmeacnfdt>>----
         AFTER FIELD xmeacnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmeapstdt>>----
 
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.xmeadocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeadocno
            #add-point:ON ACTION controlp INFIELD xmeadocno name="construct.c.xmeadocno"
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            IF g_argv[01] = '"2"' THEN
               LET g_qryparam.where = " xmea001 = 'Y' "
            ELSE
               LET g_qryparam.where = " xmea001 = 'N' "
            END IF 			   
            CALL q_xmeadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmeadocno  #顯示到畫面上
            NEXT FIELD xmeadocno                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeadocno
            #add-point:BEFORE FIELD xmeadocno name="construct.b.xmeadocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeadocno
            
            #add-point:AFTER FIELD xmeadocno name="construct.a.xmeadocno"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea900
            #add-point:BEFORE FIELD xmea900 name="construct.b.xmea900"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea900
            
            #add-point:AFTER FIELD xmea900 name="construct.a.xmea900"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmea900
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea900
            #add-point:ON ACTION controlp INFIELD xmea900 name="construct.c.xmea900"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea901
            #add-point:BEFORE FIELD xmea901 name="construct.b.xmea901"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea901
            
            #add-point:AFTER FIELD xmea901 name="construct.a.xmea901"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmea901
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea901
            #add-point:ON ACTION controlp INFIELD xmea901 name="construct.c.xmea901"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea902
            #add-point:BEFORE FIELD xmea902 name="construct.b.xmea902"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea902
            
            #add-point:AFTER FIELD xmea902 name="construct.a.xmea902"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmea902
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea902
            #add-point:ON ACTION controlp INFIELD xmea902 name="construct.c.xmea902"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea000
            #add-point:BEFORE FIELD xmea000 name="construct.b.xmea000"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea000
            
            #add-point:AFTER FIELD xmea000 name="construct.a.xmea000"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmea000
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea000
            #add-point:ON ACTION controlp INFIELD xmea000 name="construct.c.xmea000"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeadocdt
            #add-point:BEFORE FIELD xmeadocdt name="construct.b.xmeadocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeadocdt
            
            #add-point:AFTER FIELD xmeadocdt name="construct.a.xmeadocdt"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmeadocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeadocdt
            #add-point:ON ACTION controlp INFIELD xmeadocdt name="construct.c.xmeadocdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmea002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea002
            #add-point:ON ACTION controlp INFIELD xmea002 name="construct.c.xmea002"
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
	   		LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmea002  #顯示到畫面上
            NEXT FIELD xmea002                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea002
            #add-point:BEFORE FIELD xmea002 name="construct.b.xmea002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea002
            
            #add-point:AFTER FIELD xmea002 name="construct.a.xmea002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmea003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea003
            #add-point:ON ACTION controlp INFIELD xmea003 name="construct.c.xmea003"
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
	   		LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmea003  #顯示到畫面上
            NEXT FIELD xmea003                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea003
            #add-point:BEFORE FIELD xmea003 name="construct.b.xmea003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea003
            
            #add-point:AFTER FIELD xmea003 name="construct.a.xmea003"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeastus
            #add-point:BEFORE FIELD xmeastus name="construct.b.xmeastus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeastus
            
            #add-point:AFTER FIELD xmeastus name="construct.a.xmeastus"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmeastus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeastus
            #add-point:ON ACTION controlp INFIELD xmeastus name="construct.c.xmeastus"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmea004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea004
            #add-point:ON ACTION controlp INFIELD xmea004 name="construct.c.xmea004"
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.arg1 = g_site
            CALL q_pmaa001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmea004  #顯示到畫面上
            NEXT FIELD xmea004                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea004
            #add-point:BEFORE FIELD xmea004 name="construct.b.xmea004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea004
            
            #add-point:AFTER FIELD xmea004 name="construct.a.xmea004"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeaacti
            #add-point:BEFORE FIELD xmeaacti name="construct.b.xmeaacti"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeaacti
            
            #add-point:AFTER FIELD xmeaacti name="construct.a.xmeaacti"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmeaacti
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeaacti
            #add-point:ON ACTION controlp INFIELD xmeaacti name="construct.c.xmeaacti"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmea005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea005
            #add-point:ON ACTION controlp INFIELD xmea005 name="construct.c.xmea005"
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
   			LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_xmea_m.xmeasite
            CALL q_ooaj002_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmea005  #顯示到畫面上
            NEXT FIELD xmea005                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea005
            #add-point:BEFORE FIELD xmea005 name="construct.b.xmea005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea005
            
            #add-point:AFTER FIELD xmea005 name="construct.a.xmea005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmea006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea006
            #add-point:ON ACTION controlp INFIELD xmea006 name="construct.c.xmea006"
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
	   		LET g_qryparam.reqry = FALSE
            CALL q_oodb002_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmea006  #顯示到畫面上
            NEXT FIELD xmea006                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea006
            #add-point:BEFORE FIELD xmea006 name="construct.b.xmea006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea006
            
            #add-point:AFTER FIELD xmea006 name="construct.a.xmea006"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea007
            #add-point:BEFORE FIELD xmea007 name="construct.b.xmea007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea007
            
            #add-point:AFTER FIELD xmea007 name="construct.a.xmea007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmea007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea007
            #add-point:ON ACTION controlp INFIELD xmea007 name="construct.c.xmea007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea008
            #add-point:BEFORE FIELD xmea008 name="construct.b.xmea008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea008
            
            #add-point:AFTER FIELD xmea008 name="construct.a.xmea008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmea008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea008
            #add-point:ON ACTION controlp INFIELD xmea008 name="construct.c.xmea008"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmea009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea009
            #add-point:ON ACTION controlp INFIELD xmea009 name="construct.c.xmea009"
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
	   		LET g_qryparam.reqry = FALSE
            CALL q_pmad002_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmea009  #顯示到畫面上
            NEXT FIELD xmea009                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea009
            #add-point:BEFORE FIELD xmea009 name="construct.b.xmea009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea009
            
            #add-point:AFTER FIELD xmea009 name="construct.a.xmea009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmea011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea011
            #add-point:ON ACTION controlp INFIELD xmea011 name="construct.c.xmea011"
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
	    		LET g_qryparam.arg1 = '238'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmea011  #顯示到畫面上
            NEXT FIELD xmea011                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea011
            #add-point:BEFORE FIELD xmea011 name="construct.b.xmea011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea011
            
            #add-point:AFTER FIELD xmea011 name="construct.a.xmea011"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea030
            #add-point:BEFORE FIELD xmea030 name="construct.b.xmea030"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea030
            
            #add-point:AFTER FIELD xmea030 name="construct.a.xmea030"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmea030
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea030
            #add-point:ON ACTION controlp INFIELD xmea030 name="construct.c.xmea030"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea016
            #add-point:BEFORE FIELD xmea016 name="construct.b.xmea016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea016
            
            #add-point:AFTER FIELD xmea016 name="construct.a.xmea016"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmea016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea016
            #add-point:ON ACTION controlp INFIELD xmea016 name="construct.c.xmea016"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea017
            #add-point:BEFORE FIELD xmea017 name="construct.b.xmea017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea017
            
            #add-point:AFTER FIELD xmea017 name="construct.a.xmea017"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmea017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea017
            #add-point:ON ACTION controlp INFIELD xmea017 name="construct.c.xmea017"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea018
            #add-point:BEFORE FIELD xmea018 name="construct.b.xmea018"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea018
            
            #add-point:AFTER FIELD xmea018 name="construct.a.xmea018"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmea018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea018
            #add-point:ON ACTION controlp INFIELD xmea018 name="construct.c.xmea018"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea019
            #add-point:BEFORE FIELD xmea019 name="construct.b.xmea019"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea019
            
            #add-point:AFTER FIELD xmea019 name="construct.a.xmea019"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmea019
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea019
            #add-point:ON ACTION controlp INFIELD xmea019 name="construct.c.xmea019"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea020
            #add-point:BEFORE FIELD xmea020 name="construct.b.xmea020"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea020
            
            #add-point:AFTER FIELD xmea020 name="construct.a.xmea020"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmea020
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea020
            #add-point:ON ACTION controlp INFIELD xmea020 name="construct.c.xmea020"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea010
            #add-point:BEFORE FIELD xmea010 name="construct.b.xmea010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea010
            
            #add-point:AFTER FIELD xmea010 name="construct.a.xmea010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmea010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea010
            #add-point:ON ACTION controlp INFIELD xmea010 name="construct.c.xmea010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea012
            #add-point:BEFORE FIELD xmea012 name="construct.b.xmea012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea012
            
            #add-point:AFTER FIELD xmea012 name="construct.a.xmea012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmea012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea012
            #add-point:ON ACTION controlp INFIELD xmea012 name="construct.c.xmea012"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea001
            #add-point:BEFORE FIELD xmea001 name="construct.b.xmea001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea001
            
            #add-point:AFTER FIELD xmea001 name="construct.a.xmea001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmea001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea001
            #add-point:ON ACTION controlp INFIELD xmea001 name="construct.c.xmea001"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea014
            #add-point:BEFORE FIELD xmea014 name="construct.b.xmea014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea014
            
            #add-point:AFTER FIELD xmea014 name="construct.a.xmea014"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmea014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea014
            #add-point:ON ACTION controlp INFIELD xmea014 name="construct.c.xmea014"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea015
            #add-point:BEFORE FIELD xmea015 name="construct.b.xmea015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea015
            
            #add-point:AFTER FIELD xmea015 name="construct.a.xmea015"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmea015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea015
            #add-point:ON ACTION controlp INFIELD xmea015 name="construct.c.xmea015"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeasite
            #add-point:BEFORE FIELD xmeasite name="construct.b.xmeasite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeasite
            
            #add-point:AFTER FIELD xmeasite name="construct.a.xmeasite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmeasite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeasite
            #add-point:ON ACTION controlp INFIELD xmeasite name="construct.c.xmeasite"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmea903
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea903
            #add-point:ON ACTION controlp INFIELD xmea903 name="construct.c.xmea903"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_gzcb008
            CALL q_oocq002()                            #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmea903  #顯示到畫面上
            NEXT FIELD xmea903                     #返回原欄位                         #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea903
            #add-point:BEFORE FIELD xmea903 name="construct.b.xmea903"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea903
            
            #add-point:AFTER FIELD xmea903 name="construct.a.xmea903"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea904
            #add-point:BEFORE FIELD xmea904 name="construct.b.xmea904"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea904
            
            #add-point:AFTER FIELD xmea904 name="construct.a.xmea904"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmea904
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea904
            #add-point:ON ACTION controlp INFIELD xmea904 name="construct.c.xmea904"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmeaownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeaownid
            #add-point:ON ACTION controlp INFIELD xmeaownid name="construct.c.xmeaownid"
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
	   		LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmeaownid  #顯示到畫面上
            NEXT FIELD xmeaownid                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeaownid
            #add-point:BEFORE FIELD xmeaownid name="construct.b.xmeaownid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeaownid
            
            #add-point:AFTER FIELD xmeaownid name="construct.a.xmeaownid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmeaowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeaowndp
            #add-point:ON ACTION controlp INFIELD xmeaowndp name="construct.c.xmeaowndp"
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
	   		LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmeaowndp  #顯示到畫面上
            NEXT FIELD xmeaowndp                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeaowndp
            #add-point:BEFORE FIELD xmeaowndp name="construct.b.xmeaowndp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeaowndp
            
            #add-point:AFTER FIELD xmeaowndp name="construct.a.xmeaowndp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmeacrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeacrtid
            #add-point:ON ACTION controlp INFIELD xmeacrtid name="construct.c.xmeacrtid"
    			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
	   		LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmeacrtid  #顯示到畫面上
            NEXT FIELD xmeacrtid                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeacrtid
            #add-point:BEFORE FIELD xmeacrtid name="construct.b.xmeacrtid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeacrtid
            
            #add-point:AFTER FIELD xmeacrtid name="construct.a.xmeacrtid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmeacrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeacrtdp
            #add-point:ON ACTION controlp INFIELD xmeacrtdp name="construct.c.xmeacrtdp"
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
	   		LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmeacrtdp  #顯示到畫面上
            NEXT FIELD xmeacrtdp                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeacrtdp
            #add-point:BEFORE FIELD xmeacrtdp name="construct.b.xmeacrtdp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeacrtdp
            
            #add-point:AFTER FIELD xmeacrtdp name="construct.a.xmeacrtdp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeacrtdt
            #add-point:BEFORE FIELD xmeacrtdt name="construct.b.xmeacrtdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmeamodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeamodid
            #add-point:ON ACTION controlp INFIELD xmeamodid name="construct.c.xmeamodid"
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
	   		LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmeamodid  #顯示到畫面上
            NEXT FIELD xmeamodid                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeamodid
            #add-point:BEFORE FIELD xmeamodid name="construct.b.xmeamodid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeamodid
            
            #add-point:AFTER FIELD xmeamodid name="construct.a.xmeamodid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeamoddt
            #add-point:BEFORE FIELD xmeamoddt name="construct.b.xmeamoddt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmeacnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeacnfid
            #add-point:ON ACTION controlp INFIELD xmeacnfid name="construct.c.xmeacnfid"
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
	   		LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmeacnfid  #顯示到畫面上
            NEXT FIELD xmeacnfid                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeacnfid
            #add-point:BEFORE FIELD xmeacnfid name="construct.b.xmeacnfid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeacnfid
            
            #add-point:AFTER FIELD xmeacnfid name="construct.a.xmeacnfid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeacnfdt
            #add-point:BEFORE FIELD xmeacnfdt name="construct.b.xmeacnfdt"
            
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON xmebsite,xmebseq,xmeb002,xmeb003,xmeb003_desc,xmeb005,xmeb006,xmeb007, 
          xmeb014,xmeb008,xmeb009,xmeb010,xmeb024,xmeb011,xmeb012,xmeb017,xmeb018,xmeb019,xmeb013,xmeb004, 
          xmeb030,xmeb901,xmeb902,xmeb903,ooff013,xmeb0022,xmeb0032,xmeb0032_desc,xmeb0062,xmeb0072, 
          xmeb0082,xmeb0092,xmeb0102,xmeb020,xmeb021,xmeb022,xmeb023,xmeb0202,xmeb0212,xmeb0222,xmeb0232 
 
           FROM s_detail1[1].xmebsite,s_detail1[1].xmebseq,s_detail1[1].xmeb002,s_detail1[1].xmeb003, 
               s_detail1[1].xmeb003_desc,s_detail1[1].xmeb005,s_detail1[1].xmeb006,s_detail1[1].xmeb007, 
               s_detail1[1].xmeb014,s_detail1[1].xmeb008,s_detail1[1].xmeb009,s_detail1[1].xmeb010,s_detail1[1].xmeb024, 
               s_detail1[1].xmeb011,s_detail1[1].xmeb012,s_detail1[1].xmeb017,s_detail1[1].xmeb018,s_detail1[1].xmeb019, 
               s_detail1[1].xmeb013,s_detail1[1].xmeb004,s_detail1[1].xmeb030,s_detail1[1].xmeb901,s_detail1[1].xmeb902, 
               s_detail1[1].xmeb903,s_detail1[1].ooff013,s_detail2[1].xmeb0022,s_detail2[1].xmeb0032, 
               s_detail2[1].xmeb0032_desc,s_detail2[1].xmeb0062,s_detail2[1].xmeb0072,s_detail2[1].xmeb0082, 
               s_detail2[1].xmeb0092,s_detail2[1].xmeb0102,s_detail2[1].xmeb020,s_detail2[1].xmeb021, 
               s_detail2[1].xmeb022,s_detail2[1].xmeb023,s_detail2[1].xmeb0202,s_detail2[1].xmeb0212, 
               s_detail2[1].xmeb0222,s_detail2[1].xmeb0232
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmebsite
            #add-point:BEFORE FIELD xmebsite name="construct.b.page1.xmebsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmebsite
            
            #add-point:AFTER FIELD xmebsite name="construct.a.page1.xmebsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmebsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmebsite
            #add-point:ON ACTION controlp INFIELD xmebsite name="construct.c.page1.xmebsite"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmebseq
            #add-point:BEFORE FIELD xmebseq name="construct.b.page1.xmebseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmebseq
            
            #add-point:AFTER FIELD xmebseq name="construct.a.page1.xmebseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmebseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmebseq
            #add-point:ON ACTION controlp INFIELD xmebseq name="construct.c.page1.xmebseq"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmeb002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb002
            #add-point:ON ACTION controlp INFIELD xmeb002 name="construct.c.page1.xmeb002"
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
	   		LET g_qryparam.reqry = FALSE
            CALL q_imaf001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmeb002  #顯示到畫面上
            NEXT FIELD xmeb002                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb002
            #add-point:BEFORE FIELD xmeb002 name="construct.b.page1.xmeb002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb002
            
            #add-point:AFTER FIELD xmeb002 name="construct.a.page1.xmeb002"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb003
            #add-point:BEFORE FIELD xmeb003 name="construct.b.page1.xmeb003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb003
            
            #add-point:AFTER FIELD xmeb003 name="construct.a.page1.xmeb003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmeb003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb003
            #add-point:ON ACTION controlp INFIELD xmeb003 name="construct.c.page1.xmeb003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb003_desc
            #add-point:BEFORE FIELD xmeb003_desc name="construct.b.page1.xmeb003_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb003_desc
            
            #add-point:AFTER FIELD xmeb003_desc name="construct.a.page1.xmeb003_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmeb003_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb003_desc
            #add-point:ON ACTION controlp INFIELD xmeb003_desc name="construct.c.page1.xmeb003_desc"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmeb005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb005
            #add-point:ON ACTION controlp INFIELD xmeb005 name="construct.c.page1.xmeb005"
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
	   		LET g_qryparam.reqry = FALSE
            CALL q_pmao004_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmeb005  #顯示到畫面上
            NEXT FIELD xmeb005                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb005
            #add-point:BEFORE FIELD xmeb005 name="construct.b.page1.xmeb005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb005
            
            #add-point:AFTER FIELD xmeb005 name="construct.a.page1.xmeb005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmeb006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb006
            #add-point:ON ACTION controlp INFIELD xmeb006 name="construct.c.page1.xmeb006"
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
   			LET g_qryparam.reqry = FALSE
   			LET g_qryparam.arg1 = '221'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmeb006  #顯示到畫面上
            NEXT FIELD xmeb006                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb006
            #add-point:BEFORE FIELD xmeb006 name="construct.b.page1.xmeb006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb006
            
            #add-point:AFTER FIELD xmeb006 name="construct.a.page1.xmeb006"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb007
            #add-point:BEFORE FIELD xmeb007 name="construct.b.page1.xmeb007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb007
            
            #add-point:AFTER FIELD xmeb007 name="construct.a.page1.xmeb007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmeb007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb007
            #add-point:ON ACTION controlp INFIELD xmeb007 name="construct.c.page1.xmeb007"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmeb014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb014
            #add-point:ON ACTION controlp INFIELD xmeb014 name="construct.c.page1.xmeb014"
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
	   		LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_gzcb004
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmeb014  #顯示到畫面上
            NEXT FIELD xmeb014                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb014
            #add-point:BEFORE FIELD xmeb014 name="construct.b.page1.xmeb014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb014
            
            #add-point:AFTER FIELD xmeb014 name="construct.a.page1.xmeb014"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmeb008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb008
            #add-point:ON ACTION controlp INFIELD xmeb008 name="construct.c.page1.xmeb008"
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
	   		LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmeb008  #顯示到畫面上
            NEXT FIELD xmeb008                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb008
            #add-point:BEFORE FIELD xmeb008 name="construct.b.page1.xmeb008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb008
            
            #add-point:AFTER FIELD xmeb008 name="construct.a.page1.xmeb008"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb009
            #add-point:BEFORE FIELD xmeb009 name="construct.b.page1.xmeb009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb009
            
            #add-point:AFTER FIELD xmeb009 name="construct.a.page1.xmeb009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmeb009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb009
            #add-point:ON ACTION controlp INFIELD xmeb009 name="construct.c.page1.xmeb009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb010
            #add-point:BEFORE FIELD xmeb010 name="construct.b.page1.xmeb010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb010
            
            #add-point:AFTER FIELD xmeb010 name="construct.a.page1.xmeb010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmeb010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb010
            #add-point:ON ACTION controlp INFIELD xmeb010 name="construct.c.page1.xmeb010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb024
            #add-point:BEFORE FIELD xmeb024 name="construct.b.page1.xmeb024"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb024
            
            #add-point:AFTER FIELD xmeb024 name="construct.a.page1.xmeb024"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmeb024
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb024
            #add-point:ON ACTION controlp INFIELD xmeb024 name="construct.c.page1.xmeb024"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmeb011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb011
            #add-point:ON ACTION controlp INFIELD xmeb011 name="construct.c.page1.xmeb011"
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
	   		LET g_qryparam.reqry = FALSE
            CALL q_oodb002_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmeb011  #顯示到畫面上
            NEXT FIELD xmeb011                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb011
            #add-point:BEFORE FIELD xmeb011 name="construct.b.page1.xmeb011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb011
            
            #add-point:AFTER FIELD xmeb011 name="construct.a.page1.xmeb011"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb012
            #add-point:BEFORE FIELD xmeb012 name="construct.b.page1.xmeb012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb012
            
            #add-point:AFTER FIELD xmeb012 name="construct.a.page1.xmeb012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmeb012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb012
            #add-point:ON ACTION controlp INFIELD xmeb012 name="construct.c.page1.xmeb012"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb017
            #add-point:BEFORE FIELD xmeb017 name="construct.b.page1.xmeb017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb017
            
            #add-point:AFTER FIELD xmeb017 name="construct.a.page1.xmeb017"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmeb017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb017
            #add-point:ON ACTION controlp INFIELD xmeb017 name="construct.c.page1.xmeb017"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb018
            #add-point:BEFORE FIELD xmeb018 name="construct.b.page1.xmeb018"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb018
            
            #add-point:AFTER FIELD xmeb018 name="construct.a.page1.xmeb018"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmeb018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb018
            #add-point:ON ACTION controlp INFIELD xmeb018 name="construct.c.page1.xmeb018"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb019
            #add-point:BEFORE FIELD xmeb019 name="construct.b.page1.xmeb019"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb019
            
            #add-point:AFTER FIELD xmeb019 name="construct.a.page1.xmeb019"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmeb019
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb019
            #add-point:ON ACTION controlp INFIELD xmeb019 name="construct.c.page1.xmeb019"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmeb013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb013
            #add-point:ON ACTION controlp INFIELD xmeb013 name="construct.c.page1.xmeb013"
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
	   		LET g_qryparam.reqry = FALSE
	   		LET g_qryparam.arg1 = '263'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmeb013  #顯示到畫面上
            NEXT FIELD xmeb013                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb013
            #add-point:BEFORE FIELD xmeb013 name="construct.b.page1.xmeb013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb013
            
            #add-point:AFTER FIELD xmeb013 name="construct.a.page1.xmeb013"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmeb004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb004
            #add-point:ON ACTION controlp INFIELD xmeb004 name="construct.c.page1.xmeb004"
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
	   		LET g_qryparam.reqry = FALSE
            CALL q_imaf001_12()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmeb004  #顯示到畫面上
            NEXT FIELD xmeb004                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb004
            #add-point:BEFORE FIELD xmeb004 name="construct.b.page1.xmeb004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb004
            
            #add-point:AFTER FIELD xmeb004 name="construct.a.page1.xmeb004"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb030
            #add-point:BEFORE FIELD xmeb030 name="construct.b.page1.xmeb030"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb030
            
            #add-point:AFTER FIELD xmeb030 name="construct.a.page1.xmeb030"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmeb030
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb030
            #add-point:ON ACTION controlp INFIELD xmeb030 name="construct.c.page1.xmeb030"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb901
            #add-point:BEFORE FIELD xmeb901 name="construct.b.page1.xmeb901"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb901
            
            #add-point:AFTER FIELD xmeb901 name="construct.a.page1.xmeb901"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmeb901
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb901
            #add-point:ON ACTION controlp INFIELD xmeb901 name="construct.c.page1.xmeb901"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmeb902
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb902
            #add-point:ON ACTION controlp INFIELD xmeb902 name="construct.c.page1.xmeb902"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_gzcb008
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmeb902  #顯示到畫面上
            NEXT FIELD xmeb902                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb902
            #add-point:BEFORE FIELD xmeb902 name="construct.b.page1.xmeb902"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb902
            
            #add-point:AFTER FIELD xmeb902 name="construct.a.page1.xmeb902"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb903
            #add-point:BEFORE FIELD xmeb903 name="construct.b.page1.xmeb903"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb903
            
            #add-point:AFTER FIELD xmeb903 name="construct.a.page1.xmeb903"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmeb903
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb903
            #add-point:ON ACTION controlp INFIELD xmeb903 name="construct.c.page1.xmeb903"
 
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD ooff013
            #add-point:BEFORE FIELD ooff013 name="construct.b.page1.ooff013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD ooff013
            
            #add-point:AFTER FIELD ooff013 name="construct.a.page1.ooff013"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.ooff013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD ooff013
            #add-point:ON ACTION controlp INFIELD ooff013 name="construct.c.page1.ooff013"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.xmeb0022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb0022
            #add-point:ON ACTION controlp INFIELD xmeb0022 name="construct.c.page2.xmeb0022"
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_imaf001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmeb0022     #顯示到畫面上
            NEXT FIELD xmeb0022                        #返回原欄位 

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb0022
            #add-point:BEFORE FIELD xmeb0022 name="construct.b.page2.xmeb0022"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb0022
            
            #add-point:AFTER FIELD xmeb0022 name="construct.a.page2.xmeb0022"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb0032
            #add-point:BEFORE FIELD xmeb0032 name="construct.b.page2.xmeb0032"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb0032
            
            #add-point:AFTER FIELD xmeb0032 name="construct.a.page2.xmeb0032"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmeb0032
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb0032
            #add-point:ON ACTION controlp INFIELD xmeb0032 name="construct.c.page2.xmeb0032"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb0032_desc
            #add-point:BEFORE FIELD xmeb0032_desc name="construct.b.page2.xmeb0032_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb0032_desc
            
            #add-point:AFTER FIELD xmeb0032_desc name="construct.a.page2.xmeb0032_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmeb0032_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb0032_desc
            #add-point:ON ACTION controlp INFIELD xmeb0032_desc name="construct.c.page2.xmeb0032_desc"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.xmeb0062
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb0062
            #add-point:ON ACTION controlp INFIELD xmeb0062 name="construct.c.page2.xmeb0062"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
   			LET g_qryparam.arg1 = '221'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmeb0062  #顯示到畫面上
            NEXT FIELD xmeb0062                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb0062
            #add-point:BEFORE FIELD xmeb0062 name="construct.b.page2.xmeb0062"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb0062
            
            #add-point:AFTER FIELD xmeb0062 name="construct.a.page2.xmeb0062"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb0072
            #add-point:BEFORE FIELD xmeb0072 name="construct.b.page2.xmeb0072"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb0072
            
            #add-point:AFTER FIELD xmeb0072 name="construct.a.page2.xmeb0072"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmeb0072
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb0072
            #add-point:ON ACTION controlp INFIELD xmeb0072 name="construct.c.page2.xmeb0072"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.xmeb0082
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb0082
            #add-point:ON ACTION controlp INFIELD xmeb0082 name="construct.c.page2.xmeb0082"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmeb0082  #顯示到畫面上
            NEXT FIELD xmeb0082                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb0082
            #add-point:BEFORE FIELD xmeb0082 name="construct.b.page2.xmeb0082"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb0082
            
            #add-point:AFTER FIELD xmeb0082 name="construct.a.page2.xmeb0082"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb0092
            #add-point:BEFORE FIELD xmeb0092 name="construct.b.page2.xmeb0092"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb0092
            
            #add-point:AFTER FIELD xmeb0092 name="construct.a.page2.xmeb0092"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmeb0092
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb0092
            #add-point:ON ACTION controlp INFIELD xmeb0092 name="construct.c.page2.xmeb0092"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb0102
            #add-point:BEFORE FIELD xmeb0102 name="construct.b.page2.xmeb0102"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb0102
            
            #add-point:AFTER FIELD xmeb0102 name="construct.a.page2.xmeb0102"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmeb0102
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb0102
            #add-point:ON ACTION controlp INFIELD xmeb0102 name="construct.c.page2.xmeb0102"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb020
            #add-point:BEFORE FIELD xmeb020 name="construct.b.page2.xmeb020"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb020
            
            #add-point:AFTER FIELD xmeb020 name="construct.a.page2.xmeb020"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmeb020
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb020
            #add-point:ON ACTION controlp INFIELD xmeb020 name="construct.c.page2.xmeb020"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb021
            #add-point:BEFORE FIELD xmeb021 name="construct.b.page2.xmeb021"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb021
            
            #add-point:AFTER FIELD xmeb021 name="construct.a.page2.xmeb021"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmeb021
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb021
            #add-point:ON ACTION controlp INFIELD xmeb021 name="construct.c.page2.xmeb021"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb022
            #add-point:BEFORE FIELD xmeb022 name="construct.b.page2.xmeb022"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb022
            
            #add-point:AFTER FIELD xmeb022 name="construct.a.page2.xmeb022"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmeb022
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb022
            #add-point:ON ACTION controlp INFIELD xmeb022 name="construct.c.page2.xmeb022"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb023
            #add-point:BEFORE FIELD xmeb023 name="construct.b.page2.xmeb023"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb023
            
            #add-point:AFTER FIELD xmeb023 name="construct.a.page2.xmeb023"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmeb023
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb023
            #add-point:ON ACTION controlp INFIELD xmeb023 name="construct.c.page2.xmeb023"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb0202
            #add-point:BEFORE FIELD xmeb0202 name="construct.b.page2.xmeb0202"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb0202
            
            #add-point:AFTER FIELD xmeb0202 name="construct.a.page2.xmeb0202"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmeb0202
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb0202
            #add-point:ON ACTION controlp INFIELD xmeb0202 name="construct.c.page2.xmeb0202"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb0212
            #add-point:BEFORE FIELD xmeb0212 name="construct.b.page2.xmeb0212"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb0212
            
            #add-point:AFTER FIELD xmeb0212 name="construct.a.page2.xmeb0212"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmeb0212
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb0212
            #add-point:ON ACTION controlp INFIELD xmeb0212 name="construct.c.page2.xmeb0212"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb0222
            #add-point:BEFORE FIELD xmeb0222 name="construct.b.page2.xmeb0222"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb0222
            
            #add-point:AFTER FIELD xmeb0222 name="construct.a.page2.xmeb0222"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmeb0222
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb0222
            #add-point:ON ACTION controlp INFIELD xmeb0222 name="construct.c.page2.xmeb0222"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb0232
            #add-point:BEFORE FIELD xmeb0232 name="construct.b.page2.xmeb0232"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb0232
            
            #add-point:AFTER FIELD xmeb0232 name="construct.a.page2.xmeb0232"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmeb0232
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb0232
            #add-point:ON ACTION controlp INFIELD xmeb0232 name="construct.c.page2.xmeb0232"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
      
 
      
      CONSTRUCT g_wc2_table2 ON xmecseq,xmecseq1,xmec001,xmec002,xmec003,xmec004,xmec005,xmec901,xmec902, 
          xmec903
           FROM s_detail3[1].xmecseq,s_detail3[1].xmecseq1,s_detail3[1].xmec001,s_detail3[1].xmec002, 
               s_detail3[1].xmec003,s_detail3[1].xmec004,s_detail3[1].xmec005,s_detail3[1].xmec901,s_detail3[1].xmec902, 
               s_detail3[1].xmec903
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body2.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmecseq
            #add-point:BEFORE FIELD xmecseq name="construct.b.page3.xmecseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmecseq
            
            #add-point:AFTER FIELD xmecseq name="construct.a.page3.xmecseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmecseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmecseq
            #add-point:ON ACTION controlp INFIELD xmecseq name="construct.c.page3.xmecseq"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmecseq1
            #add-point:BEFORE FIELD xmecseq1 name="construct.b.page3.xmecseq1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmecseq1
            
            #add-point:AFTER FIELD xmecseq1 name="construct.a.page3.xmecseq1"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmecseq1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmecseq1
            #add-point:ON ACTION controlp INFIELD xmecseq1 name="construct.c.page3.xmecseq1"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmec001
            #add-point:BEFORE FIELD xmec001 name="construct.b.page3.xmec001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmec001
            
            #add-point:AFTER FIELD xmec001 name="construct.a.page3.xmec001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmec001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmec001
            #add-point:ON ACTION controlp INFIELD xmec001 name="construct.c.page3.xmec001"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmec002
            #add-point:BEFORE FIELD xmec002 name="construct.b.page3.xmec002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmec002
            
            #add-point:AFTER FIELD xmec002 name="construct.a.page3.xmec002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmec002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmec002
            #add-point:ON ACTION controlp INFIELD xmec002 name="construct.c.page3.xmec002"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmec003
            #add-point:BEFORE FIELD xmec003 name="construct.b.page3.xmec003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmec003
            
            #add-point:AFTER FIELD xmec003 name="construct.a.page3.xmec003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmec003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmec003
            #add-point:ON ACTION controlp INFIELD xmec003 name="construct.c.page3.xmec003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmec004
            #add-point:BEFORE FIELD xmec004 name="construct.b.page3.xmec004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmec004
            
            #add-point:AFTER FIELD xmec004 name="construct.a.page3.xmec004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmec004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmec004
            #add-point:ON ACTION controlp INFIELD xmec004 name="construct.c.page3.xmec004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmec005
            #add-point:BEFORE FIELD xmec005 name="construct.b.page3.xmec005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmec005
            
            #add-point:AFTER FIELD xmec005 name="construct.a.page3.xmec005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmec005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmec005
            #add-point:ON ACTION controlp INFIELD xmec005 name="construct.c.page3.xmec005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmec901
            #add-point:BEFORE FIELD xmec901 name="construct.b.page3.xmec901"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmec901
            
            #add-point:AFTER FIELD xmec901 name="construct.a.page3.xmec901"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmec901
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmec901
            #add-point:ON ACTION controlp INFIELD xmec901 name="construct.c.page3.xmec901"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page3.xmec902
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmec902
            #add-point:ON ACTION controlp INFIELD xmec902 name="construct.c.page3.xmec902"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_gzcb008
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmec902  #顯示到畫面上
            NEXT FIELD xmec902                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmec902
            #add-point:BEFORE FIELD xmec902 name="construct.b.page3.xmec902"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmec902
            
            #add-point:AFTER FIELD xmec902 name="construct.a.page3.xmec902"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmec903
            #add-point:BEFORE FIELD xmec903 name="construct.b.page3.xmec903"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmec903
            
            #add-point:AFTER FIELD xmec903 name="construct.a.page3.xmec903"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmec903
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmec903
            #add-point:ON ACTION controlp INFIELD xmec903 name="construct.c.page3.xmec903"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      SUBDIALOG aoo_aooi360_01.aooi360_01_construct   #备注单身  #161031-00025#22
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "xmea_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "xmeb_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   IF g_argv[01] = '"2"' THEN 
      LET g_wc = g_wc, " AND xmea001 = 'Y' "
   ELSE
      LET g_wc = g_wc, " AND xmea001 = 'N' "
   END IF
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="axmt450.filter" >}
#應用 a50 樣板自動產生(Version:8)
#+ filter過濾功能
PRIVATE FUNCTION axmt450_filter()
   #add-point:filter段define name="filter.define_customerization"
   
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="filter.pre_function"
   
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON xmeadocno,xmea902,xmea000,xmea004,xmea002,xmea003,xmea900
                          FROM s_browse[1].b_xmeadocno,s_browse[1].b_xmea902,s_browse[1].b_xmea000,s_browse[1].b_xmea004, 
                              s_browse[1].b_xmea002,s_browse[1].b_xmea003,s_browse[1].b_xmea900
 
         BEFORE CONSTRUCT
               DISPLAY axmt450_filter_parser('xmeadocno') TO s_browse[1].b_xmeadocno
            DISPLAY axmt450_filter_parser('xmea902') TO s_browse[1].b_xmea902
            DISPLAY axmt450_filter_parser('xmea000') TO s_browse[1].b_xmea000
            DISPLAY axmt450_filter_parser('xmea004') TO s_browse[1].b_xmea004
            DISPLAY axmt450_filter_parser('xmea002') TO s_browse[1].b_xmea002
            DISPLAY axmt450_filter_parser('xmea003') TO s_browse[1].b_xmea003
            DISPLAY axmt450_filter_parser('xmea900') TO s_browse[1].b_xmea900
      
         #add-point:filter段cs_ctrl name="filter.cs_ctrl"
         
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL axmt450_filter_show('xmeadocno')
   CALL axmt450_filter_show('xmea902')
   CALL axmt450_filter_show('xmea000')
   CALL axmt450_filter_show('xmea004')
   CALL axmt450_filter_show('xmea002')
   CALL axmt450_filter_show('xmea003')
   CALL axmt450_filter_show('xmea900')
 
END FUNCTION
 
{</section>}
 
{<section id="axmt450.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION axmt450_filter_parser(ps_field)
   #add-point:filter段define name="filter_parser.define_customerization"
   
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="axmt450.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION axmt450_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = axmt450_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="axmt450.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION axmt450_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_xmeb_d.clear()
   CALL g_xmeb2_d.clear()
   CALL g_xmeb3_d.clear()
 
   
   #add-point:query段other name="query.other"
   CALL aooi360_01_clear_detail()   #清除备注单身  #161031-00025#22 add
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL axmt450_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL axmt450_browser_fill("")
      CALL axmt450_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL axmt450_filter_show('xmeadocno')
   CALL axmt450_filter_show('xmea902')
   CALL axmt450_filter_show('xmea000')
   CALL axmt450_filter_show('xmea004')
   CALL axmt450_filter_show('xmea002')
   CALL axmt450_filter_show('xmea003')
   CALL axmt450_filter_show('xmea900')
   CALL axmt450_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "-100" 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
   ELSE
      CALL axmt450_fetch("F") 
      #顯示單身筆數
      CALL axmt450_idx_chk()
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="axmt450.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION axmt450_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
   CALL g_xmeb3_d.clear()
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_xmea_m.xmeadocno = g_browser[g_current_idx].b_xmeadocno
   LET g_xmea_m.xmea900 = g_browser[g_current_idx].b_xmea900
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE axmt450_master_referesh USING g_xmea_m.xmeadocno,g_xmea_m.xmea900 INTO g_xmea_m.xmeadocno, 
       g_xmea_m.xmea900,g_xmea_m.xmea901,g_xmea_m.xmea902,g_xmea_m.xmea000,g_xmea_m.xmeadocdt,g_xmea_m.xmea002, 
       g_xmea_m.xmea003,g_xmea_m.xmeastus,g_xmea_m.xmea004,g_xmea_m.xmeaacti,g_xmea_m.xmea005,g_xmea_m.xmea006, 
       g_xmea_m.xmea007,g_xmea_m.xmea008,g_xmea_m.xmea009,g_xmea_m.xmea011,g_xmea_m.xmea030,g_xmea_m.xmea016, 
       g_xmea_m.xmea017,g_xmea_m.xmea018,g_xmea_m.xmea019,g_xmea_m.xmea020,g_xmea_m.xmea010,g_xmea_m.xmea012, 
       g_xmea_m.xmea001,g_xmea_m.xmea014,g_xmea_m.xmea015,g_xmea_m.xmeasite,g_xmea_m.xmea903,g_xmea_m.xmea904, 
       g_xmea_m.xmeaownid,g_xmea_m.xmeaowndp,g_xmea_m.xmeacrtid,g_xmea_m.xmeacrtdp,g_xmea_m.xmeacrtdt, 
       g_xmea_m.xmeamodid,g_xmea_m.xmeamoddt,g_xmea_m.xmeacnfid,g_xmea_m.xmeacnfdt,g_xmea_m.xmea002_desc, 
       g_xmea_m.xmea003_desc,g_xmea_m.xmea004_desc,g_xmea_m.xmea005_desc,g_xmea_m.xmea009_desc,g_xmea_m.xmea011_desc, 
       g_xmea_m.xmeaownid_desc,g_xmea_m.xmeaowndp_desc,g_xmea_m.xmeacrtid_desc,g_xmea_m.xmeacrtdp_desc, 
       g_xmea_m.xmeamodid_desc,g_xmea_m.xmeacnfid_desc
   
   #遮罩相關處理
   LET g_xmea_m_mask_o.* =  g_xmea_m.*
   CALL axmt450_xmea_t_mask()
   LET g_xmea_m_mask_n.* =  g_xmea_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt450_set_act_visible()   
   CALL axmt450_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
   CALL cl_set_act_visible("delete,modify,modify_detail",TRUE)
   CASE g_xmea_m.xmeastus
      WHEN "N"
         CALL cl_set_act_visible("delete,modify,modify_detail",TRUE)
      WHEN "Y"
         CALL cl_set_act_visible("delete,modify,modify_detail",FALSE)
      WHEN "X"
         CALL cl_set_act_visible("delete,modify,modify_detail",FALSE)
   END CASE    
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   
   #end add-point
   
   #保存單頭舊值
   LET g_xmea_m_t.* = g_xmea_m.*
   LET g_xmea_m_o.* = g_xmea_m.*
   
   LET g_data_owner = g_xmea_m.xmeaownid      
   LET g_data_dept  = g_xmea_m.xmeaowndp
   
   #重新顯示   
   CALL axmt450_show()
 
   #應用 a56 樣板自動產生(Version:3)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
 
END FUNCTION
 
{</section>}
 
{<section id="axmt450.insert" >}
#+ 資料新增
PRIVATE FUNCTION axmt450_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_xmeb_d.clear()   
   CALL g_xmeb2_d.clear()  
   CALL g_xmeb3_d.clear()  
 
 
   INITIALIZE g_xmea_m.* TO NULL             #DEFAULT 設定
   
   LET g_xmeadocno_t = NULL
   LET g_xmea900_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   CALL aooi360_01_clear_detail()   #清除备注单身  #161031-00025#22
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_xmea_m.xmeaownid = g_user
      LET g_xmea_m.xmeaowndp = g_dept
      LET g_xmea_m.xmeacrtid = g_user
      LET g_xmea_m.xmeacrtdp = g_dept 
      LET g_xmea_m.xmeacrtdt = cl_get_current()
      LET g_xmea_m.xmeamodid = g_user
      LET g_xmea_m.xmeamoddt = cl_get_current()
      LET g_xmea_m.xmeastus = 'N'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_xmea_m.xmea900 = "0"
      LET g_xmea_m.xmea901 = "N"
      LET g_xmea_m.xmea000 = "0"
      LET g_xmea_m.xmeastus = "N"
      LET g_xmea_m.xmeaacti = "N"
      LET g_xmea_m.xmea008 = "N"
      LET g_xmea_m.xmea016 = "1"
      LET g_xmea_m.xmea017 = "1"
      LET g_xmea_m.xmea018 = "1"
      LET g_xmea_m.xmea019 = "N"
      LET g_xmea_m.xmea020 = "N"
      LET g_xmea_m.xmea010 = "N"
      LET g_xmea_m.xmea012 = "N"
 
  
      #add-point:單頭預設值 name="insert.default"
      CALL s_hint_show('xmed_t','xmea_t','xmdx_t',' ',' ','','','')
      CALL s_hint_show('xmed_t','xmeb_t','xmdy_t',' ',' ','','','')
      CALL s_hint_show('xmed_t','xmec_t','xmdz_t',' ',' ','','','')
      
      LET g_xmea_m.xmeasite = g_site
      LET g_xmea_m.xmea902 = g_today
      LET g_xmea_m.xmea002 = g_user
      LET g_xmea_m.xmea003 = g_dept
      CALL s_desc_get_person_desc(g_xmea_m.xmea002) RETURNING g_xmea_m.xmea002_desc
      CALL s_desc_get_department_desc(g_xmea_m.xmea003) RETURNING g_xmea_m.xmea003_desc
      DISPLAY BY NAME g_xmea_m.xmea002_desc,g_xmea_m.xmea003_desc
      
      #委外否
      IF g_argv[01] = '2' THEN 
         LET g_xmea_m.xmea001 = 'Y'
      ELSE
         LET g_xmea_m.xmea001 = 'N'
      END IF
      
      LET g_xmea_m_t.* = g_xmea_m.*
      LET g_xmea_m_o.* = g_xmea_m.*  

      #161031-00025#22-s
      LET g_ooff001_d = '6'   #6.單據單頭備註
      LET g_ooff002_d = g_prog
      LET g_ooff003_d = g_xmea_m.xmeadocno    #单号
      LET g_ooff004_d = '0'     #项次
      LET g_ooff005_d = g_xmea_m.xmea900      #變更序
      LET g_ooff006_d = ' '
      LET g_ooff007_d = ' '
      LET g_ooff008_d = ' '
      LET g_ooff009_d = ' '
      LET g_ooff010_d = ' '
      LET g_ooff011_d = ' '
      #161031-00025#22-e
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_xmea_m_t.* = g_xmea_m.*
      LET g_xmea_m_o.* = g_xmea_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_xmea_m.xmeastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
    
      CALL axmt450_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_xmea_m.* TO NULL
         INITIALIZE g_xmeb_d TO NULL
         INITIALIZE g_xmeb2_d TO NULL
         INITIALIZE g_xmeb3_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         
         #end add-point 
         CALL axmt450_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_xmeb_d.clear()
      #CALL g_xmeb2_d.clear()
      #CALL g_xmeb3_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt450_set_act_visible()   
   CALL axmt450_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_xmeadocno_t = g_xmea_m.xmeadocno
   LET g_xmea900_t = g_xmea_m.xmea900
 
   
   #組合新增資料的條件
   LET g_add_browse = " xmeaent = " ||g_enterprise|| " AND",
                      " xmeadocno = '", g_xmea_m.xmeadocno, "' "
                      ," AND xmea900 = '", g_xmea_m.xmea900, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axmt450_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE axmt450_cl
   
   CALL axmt450_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE axmt450_master_referesh USING g_xmea_m.xmeadocno,g_xmea_m.xmea900 INTO g_xmea_m.xmeadocno, 
       g_xmea_m.xmea900,g_xmea_m.xmea901,g_xmea_m.xmea902,g_xmea_m.xmea000,g_xmea_m.xmeadocdt,g_xmea_m.xmea002, 
       g_xmea_m.xmea003,g_xmea_m.xmeastus,g_xmea_m.xmea004,g_xmea_m.xmeaacti,g_xmea_m.xmea005,g_xmea_m.xmea006, 
       g_xmea_m.xmea007,g_xmea_m.xmea008,g_xmea_m.xmea009,g_xmea_m.xmea011,g_xmea_m.xmea030,g_xmea_m.xmea016, 
       g_xmea_m.xmea017,g_xmea_m.xmea018,g_xmea_m.xmea019,g_xmea_m.xmea020,g_xmea_m.xmea010,g_xmea_m.xmea012, 
       g_xmea_m.xmea001,g_xmea_m.xmea014,g_xmea_m.xmea015,g_xmea_m.xmeasite,g_xmea_m.xmea903,g_xmea_m.xmea904, 
       g_xmea_m.xmeaownid,g_xmea_m.xmeaowndp,g_xmea_m.xmeacrtid,g_xmea_m.xmeacrtdp,g_xmea_m.xmeacrtdt, 
       g_xmea_m.xmeamodid,g_xmea_m.xmeamoddt,g_xmea_m.xmeacnfid,g_xmea_m.xmeacnfdt,g_xmea_m.xmea002_desc, 
       g_xmea_m.xmea003_desc,g_xmea_m.xmea004_desc,g_xmea_m.xmea005_desc,g_xmea_m.xmea009_desc,g_xmea_m.xmea011_desc, 
       g_xmea_m.xmeaownid_desc,g_xmea_m.xmeaowndp_desc,g_xmea_m.xmeacrtid_desc,g_xmea_m.xmeacrtdp_desc, 
       g_xmea_m.xmeamodid_desc,g_xmea_m.xmeacnfid_desc
   
   
   #遮罩相關處理
   LET g_xmea_m_mask_o.* =  g_xmea_m.*
   CALL axmt450_xmea_t_mask()
   LET g_xmea_m_mask_n.* =  g_xmea_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_xmea_m.xmeadocno,g_xmea_m.xmea900,g_xmea_m.xmeadocno_desc,g_xmea_m.xmea901,g_xmea_m.xmea902, 
       g_xmea_m.xmea000,g_xmea_m.xmeadocdt,g_xmea_m.xmea002,g_xmea_m.xmea002_desc,g_xmea_m.xmea003,g_xmea_m.xmea003_desc, 
       g_xmea_m.xmeastus,g_xmea_m.xmea004,g_xmea_m.xmea004_desc,g_xmea_m.xmeaacti,g_xmea_m.xmea005,g_xmea_m.xmea005_desc, 
       g_xmea_m.xmea006,g_xmea_m.xmea006_desc,g_xmea_m.xmea007,g_xmea_m.xmea008,g_xmea_m.xmea009,g_xmea_m.xmea009_desc, 
       g_xmea_m.xmea011,g_xmea_m.xmea011_desc,g_xmea_m.xmea030,g_xmea_m.xmea016,g_xmea_m.xmea017,g_xmea_m.xmea018, 
       g_xmea_m.xmea019,g_xmea_m.xmea020,g_xmea_m.xmea010,g_xmea_m.xmea012,g_xmea_m.xmea001,g_xmea_m.xmea014, 
       g_xmea_m.xmea015,g_xmea_m.xmeasite,g_xmea_m.xmea903,g_xmea_m.xmea903_desc,g_xmea_m.xmea904,g_xmea_m.xmeaownid, 
       g_xmea_m.xmeaownid_desc,g_xmea_m.xmeaowndp,g_xmea_m.xmeaowndp_desc,g_xmea_m.xmeacrtid,g_xmea_m.xmeacrtid_desc, 
       g_xmea_m.xmeacrtdp,g_xmea_m.xmeacrtdp_desc,g_xmea_m.xmeacrtdt,g_xmea_m.xmeamodid,g_xmea_m.xmeamodid_desc, 
       g_xmea_m.xmeamoddt,g_xmea_m.xmeacnfid,g_xmea_m.xmeacnfid_desc,g_xmea_m.xmeacnfdt
   
   #add-point:新增結束後 name="insert.after"
   
   #end add-point 
   
   LET g_data_owner = g_xmea_m.xmeaownid      
   LET g_data_dept  = g_xmea_m.xmeaowndp
   
   #功能已完成,通報訊息中心
   CALL axmt450_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="axmt450.modify" >}
#+ 資料修改
PRIVATE FUNCTION axmt450_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
   DEFINE l_wc2_table2   STRING
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
 
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   #保存單頭舊值
   LET g_xmea_m_t.* = g_xmea_m.*
   LET g_xmea_m_o.* = g_xmea_m.*
   
   IF g_xmea_m.xmeadocno IS NULL
   OR g_xmea_m.xmea900 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_xmeadocno_t = g_xmea_m.xmeadocno
   LET g_xmea900_t = g_xmea_m.xmea900
 
   CALL s_transaction_begin()
   
   OPEN axmt450_cl USING g_enterprise,g_xmea_m.xmeadocno,g_xmea_m.xmea900
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axmt450_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE axmt450_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axmt450_master_referesh USING g_xmea_m.xmeadocno,g_xmea_m.xmea900 INTO g_xmea_m.xmeadocno, 
       g_xmea_m.xmea900,g_xmea_m.xmea901,g_xmea_m.xmea902,g_xmea_m.xmea000,g_xmea_m.xmeadocdt,g_xmea_m.xmea002, 
       g_xmea_m.xmea003,g_xmea_m.xmeastus,g_xmea_m.xmea004,g_xmea_m.xmeaacti,g_xmea_m.xmea005,g_xmea_m.xmea006, 
       g_xmea_m.xmea007,g_xmea_m.xmea008,g_xmea_m.xmea009,g_xmea_m.xmea011,g_xmea_m.xmea030,g_xmea_m.xmea016, 
       g_xmea_m.xmea017,g_xmea_m.xmea018,g_xmea_m.xmea019,g_xmea_m.xmea020,g_xmea_m.xmea010,g_xmea_m.xmea012, 
       g_xmea_m.xmea001,g_xmea_m.xmea014,g_xmea_m.xmea015,g_xmea_m.xmeasite,g_xmea_m.xmea903,g_xmea_m.xmea904, 
       g_xmea_m.xmeaownid,g_xmea_m.xmeaowndp,g_xmea_m.xmeacrtid,g_xmea_m.xmeacrtdp,g_xmea_m.xmeacrtdt, 
       g_xmea_m.xmeamodid,g_xmea_m.xmeamoddt,g_xmea_m.xmeacnfid,g_xmea_m.xmeacnfdt,g_xmea_m.xmea002_desc, 
       g_xmea_m.xmea003_desc,g_xmea_m.xmea004_desc,g_xmea_m.xmea005_desc,g_xmea_m.xmea009_desc,g_xmea_m.xmea011_desc, 
       g_xmea_m.xmeaownid_desc,g_xmea_m.xmeaowndp_desc,g_xmea_m.xmeacrtid_desc,g_xmea_m.xmeacrtdp_desc, 
       g_xmea_m.xmeamodid_desc,g_xmea_m.xmeacnfid_desc
   
   #檢查是否允許此動作
   IF NOT axmt450_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_xmea_m_mask_o.* =  g_xmea_m.*
   CALL axmt450_xmea_t_mask()
   LET g_xmea_m_mask_n.* =  g_xmea_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
 
   
   CALL axmt450_show()
   #add-point:modify段show之後 name="modify.after_show"
   
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
   #LET  g_wc2_table2 = l_wc2_table2 
 
 
    
   WHILE TRUE
      LET g_xmeadocno_t = g_xmea_m.xmeadocno
      LET g_xmea900_t = g_xmea_m.xmea900
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_xmea_m.xmeamodid = g_user 
LET g_xmea_m.xmeamoddt = cl_get_current()
LET g_xmea_m.xmeamodid_desc = cl_get_username(g_xmea_m.xmeamodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      #「D抽單 / R已拒絕」狀況碼更改資料後，需還原為「N未確認」
      IF g_xmea_m.xmeastus MATCHES "[DR]" THEN 
         LET g_xmea_m.xmeastus = "N"
      END IF
      
      LET g_xmea_m_t.* = g_xmea_m.*
      LET g_xmea_m_o.* = g_xmea_m.*          
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL axmt450_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE xmea_t SET (xmeamodid,xmeamoddt) = (g_xmea_m.xmeamodid,g_xmea_m.xmeamoddt)
          WHERE xmeaent = g_enterprise AND xmeadocno = g_xmeadocno_t
            AND xmea900 = g_xmea900_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_xmea_m.* = g_xmea_m_t.*
            CALL axmt450_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_xmea_m.xmeadocno != g_xmea_m_t.xmeadocno
      OR g_xmea_m.xmea900 != g_xmea_m_t.xmea900
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         
         #end add-point
         
         #更新單身key值
         UPDATE xmeb_t SET xmebdocno = g_xmea_m.xmeadocno
                                       ,xmeb900 = g_xmea_m.xmea900
 
          WHERE xmebent = g_enterprise AND xmebdocno = g_xmea_m_t.xmeadocno
            AND xmeb900 = g_xmea_m_t.xmea900
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "xmeb_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmeb_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         
         #end add-point
         
 
         
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update2"
         
         #end add-point
         UPDATE xmec_t
            SET xmecdocno = g_xmea_m.xmeadocno
               ,xmec900 = g_xmea_m.xmea900
 
          WHERE xmecent = g_enterprise AND
                xmecdocno = g_xmeadocno_t
            AND xmec900 = g_xmea900_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update2"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmec_t" 
               LET g_errparam.code = "std-00009" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmec_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update2"
         
         #end add-point
 
 
         
         #UPDATE 多語言table key值
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt450_set_act_visible()   
   CALL axmt450_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " xmeaent = " ||g_enterprise|| " AND",
                      " xmeadocno = '", g_xmea_m.xmeadocno, "' "
                      ," AND xmea900 = '", g_xmea_m.xmea900, "' "
 
   #填到對應位置
   CALL axmt450_browser_fill("")
 
   CLOSE axmt450_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL axmt450_msgcentre_notify('modify')
 
END FUNCTION 
 
{</section>}
 
{<section id="axmt450.input" >}
#+ 資料輸入
PRIVATE FUNCTION axmt450_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE l_success        LIKE type_t.num5
   DEFINE l_flag           LIKE type_t.num5
   DEFINE l_ooba002        LIKE ooba_t.ooba002
   DEFINE l_oodb005        LIKE oodb_t.oodb005
   DEFINE l_oodb011        LIKE oodb_t.oodb011
   DEFINE l_oodbl004       LIKE oodbl_t.oodbl004
   DEFINE l_ooef001        LIKE ooef_t.ooef001
   DEFINE l_ooef019        LIKE ooef_t.ooef019
   DEFINE l_mm             LIKE type_t.num5
   DEFINE l_where          STRING
   DEFINE l_inam           DYNAMIC ARRAY OF RECORD   #記錄產品特徵
             inam001       LIKE inam_t.inam001,
             inam002       LIKE inam_t.inam002,
             inam004       LIKE inam_t.inam004
                       END RECORD
   DEFINE l_xmebseq        LIKE xmeb_t.xmebseq
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xmea_m.xmeadocno,g_xmea_m.xmea900,g_xmea_m.xmeadocno_desc,g_xmea_m.xmea901,g_xmea_m.xmea902, 
       g_xmea_m.xmea000,g_xmea_m.xmeadocdt,g_xmea_m.xmea002,g_xmea_m.xmea002_desc,g_xmea_m.xmea003,g_xmea_m.xmea003_desc, 
       g_xmea_m.xmeastus,g_xmea_m.xmea004,g_xmea_m.xmea004_desc,g_xmea_m.xmeaacti,g_xmea_m.xmea005,g_xmea_m.xmea005_desc, 
       g_xmea_m.xmea006,g_xmea_m.xmea006_desc,g_xmea_m.xmea007,g_xmea_m.xmea008,g_xmea_m.xmea009,g_xmea_m.xmea009_desc, 
       g_xmea_m.xmea011,g_xmea_m.xmea011_desc,g_xmea_m.xmea030,g_xmea_m.xmea016,g_xmea_m.xmea017,g_xmea_m.xmea018, 
       g_xmea_m.xmea019,g_xmea_m.xmea020,g_xmea_m.xmea010,g_xmea_m.xmea012,g_xmea_m.xmea001,g_xmea_m.xmea014, 
       g_xmea_m.xmea015,g_xmea_m.xmeasite,g_xmea_m.xmea903,g_xmea_m.xmea903_desc,g_xmea_m.xmea904,g_xmea_m.xmeaownid, 
       g_xmea_m.xmeaownid_desc,g_xmea_m.xmeaowndp,g_xmea_m.xmeaowndp_desc,g_xmea_m.xmeacrtid,g_xmea_m.xmeacrtid_desc, 
       g_xmea_m.xmeacrtdp,g_xmea_m.xmeacrtdp_desc,g_xmea_m.xmeacrtdt,g_xmea_m.xmeamodid,g_xmea_m.xmeamodid_desc, 
       g_xmea_m.xmeamoddt,g_xmea_m.xmeacnfid,g_xmea_m.xmeacnfid_desc,g_xmea_m.xmeacnfdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT xmebsite,xmebseq,xmeb002,xmeb003,xmeb005,xmeb006,xmeb007,xmeb014,xmeb008, 
       xmeb009,xmeb010,xmeb024,xmeb011,xmeb012,xmeb017,xmeb018,xmeb019,xmeb013,xmeb004,xmeb030,xmeb901, 
       xmeb902,xmeb903,xmeb001,xmebseq,xmeb020,xmeb021,xmeb022,xmeb023 FROM xmeb_t WHERE xmebent=? AND  
       xmebdocno=? AND xmeb900=? AND xmebseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
      
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt450_bcl CURSOR FROM g_forupd_sql
   
 
   
   #add-point:input段define_sql name="input.define_sql2"
   
   #end add-point 
   LET g_forupd_sql = "SELECT xmecsite,xmecseq,xmecseq1,xmec001,xmec002,xmec003,xmec004,xmec005,xmec901, 
       xmec902,xmec903 FROM xmec_t WHERE xmecent=? AND xmecdocno=? AND xmec900=? AND xmecseq=? AND xmecseq1=?  
       FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql2"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt450_bcl2 CURSOR FROM g_forupd_sql
 
 
 
   #add-point:input段define_sql name="input.other_sql"
 
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL axmt450_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   #將單身輸入權限放入共用變數給嵌入的子程式用, 若子程式要自己控管, 還是可以從子程式中覆蓋掉值
   #161031-00025#22-s
   LET g_detail_insert = l_allow_insert
   LET g_detail_delete = l_allow_delete
   #161031-00025#22-e
   #end add-point
   CALL axmt450_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_xmea_m.xmeadocno,g_xmea_m.xmea901,g_xmea_m.xmea902,g_xmea_m.xmeadocdt,g_xmea_m.xmea002, 
       g_xmea_m.xmea003,g_xmea_m.xmeastus,g_xmea_m.xmea004,g_xmea_m.xmeaacti,g_xmea_m.xmea005,g_xmea_m.xmea006, 
       g_xmea_m.xmea007,g_xmea_m.xmea008,g_xmea_m.xmea009,g_xmea_m.xmea011,g_xmea_m.xmea030,g_xmea_m.xmea016, 
       g_xmea_m.xmea017,g_xmea_m.xmea018,g_xmea_m.xmea019,g_xmea_m.xmea020,g_xmea_m.xmea010,g_xmea_m.xmea012, 
       g_xmea_m.xmea001,g_xmea_m.xmea014,g_xmea_m.xmea015,g_xmea_m.xmeasite,g_xmea_m.xmea903,g_xmea_m.xmea904 
 
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   LET g_errshow = 1
   
   LET l_ooef001 = ''
   LET l_ooef019 = ''
   SELECT ooef001,ooef019 INTO l_ooef001,l_ooef019
     FROM ooef_t
    WHERE ooefent = g_enterprise
      AND ooef001 = g_site

   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="axmt450.input.head" >}
      #單頭段
      INPUT BY NAME g_xmea_m.xmeadocno,g_xmea_m.xmea901,g_xmea_m.xmea902,g_xmea_m.xmeadocdt,g_xmea_m.xmea002, 
          g_xmea_m.xmea003,g_xmea_m.xmeastus,g_xmea_m.xmea004,g_xmea_m.xmeaacti,g_xmea_m.xmea005,g_xmea_m.xmea006, 
          g_xmea_m.xmea007,g_xmea_m.xmea008,g_xmea_m.xmea009,g_xmea_m.xmea011,g_xmea_m.xmea030,g_xmea_m.xmea016, 
          g_xmea_m.xmea017,g_xmea_m.xmea018,g_xmea_m.xmea019,g_xmea_m.xmea020,g_xmea_m.xmea010,g_xmea_m.xmea012, 
          g_xmea_m.xmea001,g_xmea_m.xmea014,g_xmea_m.xmea015,g_xmea_m.xmeasite,g_xmea_m.xmea903,g_xmea_m.xmea904  
 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN axmt450_cl USING g_enterprise,g_xmea_m.xmeadocno,g_xmea_m.xmea900
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axmt450_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE axmt450_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL axmt450_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            
            #end add-point
            CALL axmt450_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeadocno
            
            #add-point:AFTER FIELD xmeadocno name="input.a.xmeadocno"
            LET g_xmea_m.xmeadocno_desc = ''
            DISPLAY BY NAME g_xmea_m.xmeadocno_desc
            IF cl_null(g_xmea_m.xmeadocno) THEN
               NEXT FIELD CURRENT
            ELSE
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmea_m.xmeadocno != g_xmeadocno_t OR g_xmeadocno_t IS NULL )) THEN
                  IF NOT axmt450_xmeadocno_chk() THEN
                     LET g_xmea_m.xmeadocno = g_xmeadocno_t
                     DISPLAY BY NAME g_xmea_m.xmeadocno
                     CALL s_aooi200_get_slip_desc(g_xmea_m.xmeadocno) RETURNING g_xmea_m.xmeadocno_desc
                     DISPLAY BY NAME g_xmea_m.xmeadocno_desc
                     NEXT FIELD CURRENT
                  END IF
                  #變更序=變更序最大值+1
                  SELECT MAX(xmea900)+1 INTO g_xmea_m.xmea900
                    FROM xmea_t
                   WHERE xmeaent = g_enterprise
                     AND xmeadocno = g_xmea_m.xmeadocno
                  DISPLAY BY NAME g_xmea_m.xmea900
                  IF cl_null(g_xmea_m.xmea900) THEN
                     LET g_xmea_m.xmea900 = 1
                  END IF
                  CALL axmt450_xmeadocno_default()
               END IF
            END IF            
            CALL s_aooi200_get_slip_desc(g_xmea_m.xmeadocno) RETURNING g_xmea_m.xmeadocno_desc
            #161031-00025#24-s
            LET g_ooff001_d = '6'   #6.單據單頭備註
            LET g_ooff002_d = g_prog
            LET g_ooff003_d = g_xmea_m.xmeadocno   #单号
            LET g_ooff004_d = '0'
            LET g_ooff005_d = g_xmea_m.xmea900
            LET g_ooff006_d = ' '
            LET g_ooff007_d = ' '
            LET g_ooff008_d = ' '
            LET g_ooff009_d = ' '
            LET g_ooff010_d = ' '
            LET g_ooff011_d = ' '
            CALL aooi360_01_b_fill(g_ooff001_d,g_ooff002_d,g_ooff003_d,g_ooff004_d,g_ooff005_d,g_ooff006_d,g_ooff007_d,g_ooff008_d,g_ooff009_d,g_ooff010_d,g_ooff011_d)   #备注单身
            #161031-00025#24-e
            DISPLAY BY NAME g_xmea_m.xmeadocno_desc
            CALL axmt450_set_entry(p_cmd)
            CALL axmt450_set_no_entry(p_cmd)
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeadocno
            #add-point:BEFORE FIELD xmeadocno name="input.b.xmeadocno"
 
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmeadocno
            #add-point:ON CHANGE xmeadocno name="input.g.xmeadocno"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea901
            #add-point:BEFORE FIELD xmea901 name="input.b.xmea901"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea901
            
            #add-point:AFTER FIELD xmea901 name="input.a.xmea901"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmea901
            #add-point:ON CHANGE xmea901 name="input.g.xmea901"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea902
            #add-point:BEFORE FIELD xmea902 name="input.b.xmea902"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea902
            
            #add-point:AFTER FIELD xmea902 name="input.a.xmea902"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmea902
            #add-point:ON CHANGE xmea902 name="input.g.xmea902"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeadocdt
            #add-point:BEFORE FIELD xmeadocdt name="input.b.xmeadocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeadocdt
            
            #add-point:AFTER FIELD xmeadocdt name="input.a.xmeadocdt"
            IF cl_null(g_xmea_m.xmeadocdt) THEN
               NEXT FIELD CURRENT
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmeadocdt
            #add-point:ON CHANGE xmeadocdt name="input.g.xmeadocdt"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea002
            
            #add-point:AFTER FIELD xmea002 name="input.a.xmea002"
            LET g_xmea_m.xmea002_desc = ''
            DISPLAY BY NAME g_xmea_m.xmea002_desc
            IF NOT cl_null(g_xmea_m.xmea002) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmea_m.xmea002 != g_xmea_m_o.xmea002 OR g_xmea_m_o.xmea002 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmea_m.xmea002
                  #160318-00025#17  by 07900 --add-str
                  LET g_errshow = TRUE #是否開窗                   
                  LET g_chkparam.err_str[1] ="aim-00070:sub-01302|aooi130|",cl_get_progname("aooi130",g_lang,"2"),"|:EXEPROGaooi130"
                  #160318-00025#17  by 07900 --add-end
                  IF cl_chk_exist("v_ooag001") THEN
                     #抓取業務人員對應的部門預設到xmdg003
                     SELECT ooag003 INTO g_xmea_m.xmea003
                       FROM ooag_t
                      WHERE ooagent = g_enterprise
                        AND ooag001 = g_xmea_m.xmea002
                     CALL s_desc_get_department_desc(g_xmea_m.xmea003) RETURNING g_xmea_m.xmea003_desc
                     DISPLAY BY NAME g_xmea_m.xmea003,g_xmea_m.xmea003_desc
                  ELSE
                     LET g_xmea_m.xmea002 = g_xmea_m_o.xmea002 
                     CALL s_desc_get_person_desc(g_xmea_m.xmea002) RETURNING g_xmea_m.xmea002_desc
                     DISPLAY BY NAME g_xmea_m.xmea002_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_person_desc(g_xmea_m.xmea002) RETURNING g_xmea_m.xmea002_desc
            DISPLAY BY NAME g_xmea_m.xmea002_desc
            LET g_xmea_m_o.xmea002 = g_xmea_m.xmea002
            LET g_xmea_m_o.xmea003 = g_xmea_m.xmea003
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea002
            #add-point:BEFORE FIELD xmea002 name="input.b.xmea002"
 
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmea002
            #add-point:ON CHANGE xmea002 name="input.g.xmea002"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea003
            
            #add-point:AFTER FIELD xmea003 name="input.a.xmea003"
            LET g_xmea_m.xmea003_desc = ''
            DISPLAY BY NAME g_xmea_m.xmea003_desc
            IF NOT cl_null(g_xmea_m.xmea003) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmea_m.xmea003 != g_xmea_m_o.xmea003 OR g_xmea_m_o.xmea003 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmea_m.xmea003
                  LET g_chkparam.arg2 = g_xmea_m.xmeadocdt
                  #160318-00025#17  by 07900 --add-str
                  LET g_errshow = TRUE #是否開窗                   
                  LET g_chkparam.err_str[1] ="aoo-00029:sub-01302|aooi125|",cl_get_progname("aooi125",g_lang,"2"),"|:EXEPROGaooi125"
                  #160318-00025#17  by 07900 --add-end
                  IF NOT cl_chk_exist("v_ooeg001") THEN
                     LET g_xmea_m.xmea003 = g_xmea_m_o.xmea003 
                     CALL s_desc_get_department_desc(g_xmea_m.xmea003) RETURNING g_xmea_m.xmea003_desc
                     DISPLAY BY NAME g_xmea_m.xmea003,g_xmea_m.xmea003_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_department_desc(g_xmea_m.xmea003) RETURNING g_xmea_m.xmea003_desc
            DISPLAY BY NAME g_xmea_m.xmea003_desc
            LET g_xmea_m_o.xmea003 = g_xmea_m.xmea003
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea003
            #add-point:BEFORE FIELD xmea003 name="input.b.xmea003"
 
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmea003
            #add-point:ON CHANGE xmea003 name="input.g.xmea003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeastus
            #add-point:BEFORE FIELD xmeastus name="input.b.xmeastus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeastus
            
            #add-point:AFTER FIELD xmeastus name="input.a.xmeastus"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmeastus
            #add-point:ON CHANGE xmeastus name="input.g.xmeastus"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea004
            
            #add-point:AFTER FIELD xmea004 name="input.a.xmea004"
            LET g_xmea_m.xmea004_desc = ''
            DISPLAY BY NAME g_xmea_m.xmea004_desc
            IF NOT cl_null(g_xmea_m.xmea004) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmea_m.xmea004 != g_xmea_m_o.xmea004 OR g_xmea_m_o.xmea004 IS NULL )) THEN
                  IF NOT axmt450_xmea004_chk() THEN
                     LET g_xmea_m.xmea004 = g_xmea_m_o.xmea004 
                     CALL s_desc_get_department_desc(g_xmea_m.xmea004) RETURNING g_xmea_m.xmea004_desc
                     DISPLAY BY NAME g_xmea_m.xmea004,g_xmea_m.xmea004_desc
                     NEXT FIELD CURRENT
                  END IF
                  CALL axmt450_xmea004_default()
                  CALL axmt450_recount(p_cmd)
               END IF
            END IF
            CALL s_desc_get_trading_partner_abbr_desc(g_xmea_m.xmea004) RETURNING g_xmea_m.xmea004_desc
            DISPLAY BY NAME g_xmea_m.xmea004_desc
            LET g_xmea_m_o.xmea004 = g_xmea_m.xmea004
            LET g_xmea_m_o.xmea005 = g_xmea_m.xmea005
            LET g_xmea_m_o.xmea006 = g_xmea_m.xmea006
            LET g_xmea_m_o.xmea009 = g_xmea_m.xmea009
            LET g_xmea_m_o.xmea011 = g_xmea_m.xmea011
            CALL axmt450_set_entry(p_cmd)
            CALL axmt450_set_no_entry(p_cmd)
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea004
            #add-point:BEFORE FIELD xmea004 name="input.b.xmea004"
 
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmea004
            #add-point:ON CHANGE xmea004 name="input.g.xmea004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeaacti
            #add-point:BEFORE FIELD xmeaacti name="input.b.xmeaacti"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeaacti
            
            #add-point:AFTER FIELD xmeaacti name="input.a.xmeaacti"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmeaacti
            #add-point:ON CHANGE xmeaacti name="input.g.xmeaacti"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea005
            
            #add-point:AFTER FIELD xmea005 name="input.a.xmea005"
            LET g_xmea_m.xmea005_desc = ''
            DISPLAY BY NAME g_xmea_m.xmea005_desc
            IF NOT cl_null(g_xmea_m.xmea005) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmea_m.xmea005 != g_xmea_m_o.xmea005 OR g_xmea_m_o.xmea005 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_site
                  LET g_chkparam.arg2 = g_xmea_m.xmea005
                  #160318-00025#17  by 07900 --add-str
                  LET g_errshow = TRUE #是否開窗                   
                  LET g_chkparam.err_str[1] ="aoo-00176:sub-01302|aooi150|",cl_get_progname("aooi150",g_lang,"2"),"|:EXEPROGaooi150"
                  #160318-00025#17  by 07900 --add-end
                  IF NOT cl_chk_exist("v_ooaj002") THEN
                     LET g_xmea_m.xmea005 = g_xmea_m_o.xmea005
                     CALL s_desc_get_currency_desc(g_xmea_m.xmea005) RETURNING g_xmea_m.xmea005_desc
                     DISPLAY BY NAME g_xmea_m.xmea005,g_xmea_m.xmea005_desc
                     NEXT FIELD CURRENT
                  END IF
                  CALL axmt450_recount(p_cmd)
               END IF
            END IF
            CALL s_desc_get_currency_desc(g_xmea_m.xmea005) RETURNING g_xmea_m.xmea005_desc
            DISPLAY BY NAME g_xmea_m.xmea005_desc
            LET g_xmea_m_o.xmea005 = g_xmea_m.xmea005
            CALL axmt450_set_entry(p_cmd)
            CALL axmt450_set_no_entry(p_cmd)
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea005
            #add-point:BEFORE FIELD xmea005 name="input.b.xmea005"
 
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmea005
            #add-point:ON CHANGE xmea005 name="input.g.xmea005"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea006
            
            #add-point:AFTER FIELD xmea006 name="input.a.xmea006"
            LET g_xmea_m.xmea006_desc = ''
            DISPLAY BY NAME g_xmea_m.xmea006_desc
            IF NOT cl_null(g_xmea_m.xmea006) THEN
#               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmea_m.xmea006 != g_xmea_m_o.xmea006 OR g_xmea_m_o.xmea006 IS NULL )) THEN
               IF g_xmea_m.xmea006 != g_xmea_m_o.xmea006 OR g_xmea_m_o.xmea006 IS NULL THEN
                  CALL s_tax_chk(g_site,g_xmea_m.xmea006)
                       RETURNING l_success,g_xmea_m.xmea006_desc,g_xmea_m.xmea008,g_xmea_m.xmea007,l_oodb011
                  DISPLAY BY NAME g_xmea_m.xmea006_desc,g_xmea_m.xmea008,g_xmea_m.xmea007
                  IF NOT l_success THEN
                     LET g_xmea_m.xmea006 = g_xmea_m_o.xmea006
                     LET g_xmea_m.xmea008 = g_xmea_m_o.xmea008
                     LET g_xmea_m.xmea007 = g_xmea_m_o.xmea007
                     CALL s_desc_get_tax_desc1(g_site,g_xmea_m.xmea006) RETURNING g_xmea_m.xmea006_desc
                     DISPLAY BY NAME g_xmea_m.xmea006_desc,g_xmea_m.xmea008,g_xmea_m.xmea007,g_xmea_m.xmea006_desc
                     NEXT FIELD CURRENT
                  END IF
                  IF cl_ask_confirm('apm-00351') THEN
                     CALL axmt450_recount(p_cmd)
                  END IF
               END IF
            END IF
            CALL s_desc_get_tax_desc1(g_site,g_xmea_m.xmea006) RETURNING g_xmea_m.xmea006_desc
            DISPLAY BY NAME g_xmea_m.xmea006_desc
            LET g_xmea_m_o.xmea006 = g_xmea_m.xmea006
            LET g_xmea_m_o.xmea008 = g_xmea_m.xmea008
            LET g_xmea_m_o.xmea007 = g_xmea_m.xmea007
            CALL axmt450_set_entry(p_cmd)
            CALL axmt450_set_no_entry(p_cmd)
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea006
            #add-point:BEFORE FIELD xmea006 name="input.b.xmea006"
 
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmea006
            #add-point:ON CHANGE xmea006 name="input.g.xmea006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea007
            #add-point:BEFORE FIELD xmea007 name="input.b.xmea007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea007
            
            #add-point:AFTER FIELD xmea007 name="input.a.xmea007"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmea007
            #add-point:ON CHANGE xmea007 name="input.g.xmea007"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea008
            #add-point:BEFORE FIELD xmea008 name="input.b.xmea008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea008
            
            #add-point:AFTER FIELD xmea008 name="input.a.xmea008"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmea008
            #add-point:ON CHANGE xmea008 name="input.g.xmea008"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea009
            
            #add-point:AFTER FIELD xmea009 name="input.a.xmea009"
            LET g_xmea_m.xmea009_desc = ''
            DISPLAY BY NAME g_xmea_m.xmea009_desc
            IF NOT cl_null(g_xmea_m.xmea009) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmea_m.xmea009 != g_xmea_m_o.xmea009 OR g_xmea_m_o.xmea009 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmea_m.xmea004
                  LET g_chkparam.arg2 = g_xmea_m.xmea009
                  IF NOT cl_chk_exist("v_pmad002_2") THEN
                     LET g_xmea_m.xmea009 = g_xmea_m_o.xmea009
                     CALL s_desc_get_ooib002_desc(g_xmea_m.xmea009) RETURNING g_xmea_m.xmea009_desc
                     DISPLAY BY NAME g_xmea_m.xmea009,g_xmea_m.xmea009_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            ELSE
               LET g_xmea_m.xmea010 = 'N'
            END IF
            CALL s_desc_get_ooib002_desc(g_xmea_m.xmea009) RETURNING g_xmea_m.xmea009_desc
            DISPLAY BY NAME g_xmea_m.xmea009_desc
            LET g_xmea_m_o.xmea009 = g_xmea_m.xmea009
            CALL axmt450_set_entry(p_cmd)
            CALL axmt450_set_no_entry(p_cmd)
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea009
            #add-point:BEFORE FIELD xmea009 name="input.b.xmea009"
 
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmea009
            #add-point:ON CHANGE xmea009 name="input.g.xmea009"
 
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea011
            
            #add-point:AFTER FIELD xmea011 name="input.a.xmea011"
            LET g_xmea_m.xmea011_desc = ''
            DISPLAY BY NAME g_xmea_m.xmea011_desc
            IF NOT cl_null(g_xmea_m.xmea011) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmea_m.xmea011 != g_xmea_m_o.xmea011 OR g_xmea_m_o.xmea011 IS NULL )) THEN
                  IF NOT s_azzi650_chk_exist('238',g_xmea_m.xmea011) THEN
                     LET g_xmea_m.xmea011 = g_xmea_m_o.xmea011
                     CALL s_desc_get_acc_desc('238',g_xmea_m.xmea011) RETURNING g_xmea_m.xmea011_desc
                     DISPLAY BY NAME g_xmea_m.xmea011,g_xmea_m.xmea011_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            ELSE
               LET g_xmea_m.xmea012 = 'N'
            END IF
            CALL s_desc_get_acc_desc('238',g_xmea_m.xmea011) RETURNING g_xmea_m.xmea011_desc
            DISPLAY BY NAME g_xmea_m.xmea011_desc
            LET g_xmea_m_o.xmea011 = g_xmea_m.xmea011
            CALL axmt450_set_entry(p_cmd)
            CALL axmt450_set_no_entry(p_cmd)
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea011
            #add-point:BEFORE FIELD xmea011 name="input.b.xmea011"
 
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmea011
            #add-point:ON CHANGE xmea011 name="input.g.xmea011"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea030
            #add-point:BEFORE FIELD xmea030 name="input.b.xmea030"
 
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea030
            
            #add-point:AFTER FIELD xmea030 name="input.a.xmea030"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmea030
            #add-point:ON CHANGE xmea030 name="input.g.xmea030"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea016
            #add-point:BEFORE FIELD xmea016 name="input.b.xmea016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea016
            
            #add-point:AFTER FIELD xmea016 name="input.a.xmea016"
            CALL axmt450_set_entry(p_cmd)
            CALL axmt450_set_no_entry(p_cmd)

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmea016
            #add-point:ON CHANGE xmea016 name="input.g.xmea016"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea017
            #add-point:BEFORE FIELD xmea017 name="input.b.xmea017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea017
            
            #add-point:AFTER FIELD xmea017 name="input.a.xmea017"
            CALL axmt450_set_entry(p_cmd)
            CALL axmt450_set_no_entry(p_cmd)

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmea017
            #add-point:ON CHANGE xmea017 name="input.g.xmea017"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea018
            #add-point:BEFORE FIELD xmea018 name="input.b.xmea018"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea018
            
            #add-point:AFTER FIELD xmea018 name="input.a.xmea018"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmea018
            #add-point:ON CHANGE xmea018 name="input.g.xmea018"
 
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea019
            #add-point:BEFORE FIELD xmea019 name="input.b.xmea019"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea019
            
            #add-point:AFTER FIELD xmea019 name="input.a.xmea019"
            CALL axmt450_set_entry(p_cmd)
            CALL axmt450_set_no_entry(p_cmd)

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmea019
            #add-point:ON CHANGE xmea019 name="input.g.xmea019"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea020
            #add-point:BEFORE FIELD xmea020 name="input.b.xmea020"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea020
            
            #add-point:AFTER FIELD xmea020 name="input.a.xmea020"
            CALL axmt450_set_entry(p_cmd)
            CALL axmt450_set_no_entry(p_cmd)

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmea020
            #add-point:ON CHANGE xmea020 name="input.g.xmea020"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea010
            #add-point:BEFORE FIELD xmea010 name="input.b.xmea010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea010
            
            #add-point:AFTER FIELD xmea010 name="input.a.xmea010"
            CALL axmt450_set_entry(p_cmd)
            CALL axmt450_set_no_entry(p_cmd)

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmea010
            #add-point:ON CHANGE xmea010 name="input.g.xmea010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea012
            #add-point:BEFORE FIELD xmea012 name="input.b.xmea012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea012
            
            #add-point:AFTER FIELD xmea012 name="input.a.xmea012"
            CALL axmt450_set_entry(p_cmd)
            CALL axmt450_set_no_entry(p_cmd)

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmea012
            #add-point:ON CHANGE xmea012 name="input.g.xmea012"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea001
            #add-point:BEFORE FIELD xmea001 name="input.b.xmea001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea001
            
            #add-point:AFTER FIELD xmea001 name="input.a.xmea001"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmea001
            #add-point:ON CHANGE xmea001 name="input.g.xmea001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea014
            #add-point:BEFORE FIELD xmea014 name="input.b.xmea014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea014
            
            #add-point:AFTER FIELD xmea014 name="input.a.xmea014"
            IF NOT cl_null(g_xmea_m.xmea014) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmea_m.xmea014 != g_xmea_m_o.xmea014 OR g_xmea_m_o.xmea014 IS NULL )) THEN
                  IF NOT cl_null(g_xmea_m.xmea015) THEN 
                     IF g_xmea_m.xmea015 < g_xmea_m.xmea014 THEN 
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = '-9913'
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        LET g_xmea_m.xmea014 = g_xmea_m_o.xmea014
                        DISPLAY BY NAME g_xmea_m.xmea014
                        NEXT FIELD CURRENT
                     END IF
                  END IF
                  CALL s_aooi200_get_slip(g_xmea_m.xmeadocno) RETURNING l_success,l_ooba002
                  CALL cl_get_doc_para(g_enterprise,g_xmea_m.xmeasite,l_ooba002,'D-BAS-0080') RETURNING l_mm
                  CALL s_date_get_date(g_xmea_m.xmea014,l_mm,0) RETURNING g_xmea_m.xmea015
                  DISPLAY BY NAME g_xmea_m.xmea015
               END IF
            END IF
            LET g_xmea_m_o.xmea014 = g_xmea_m.xmea014
            LET g_xmea_m_o.xmea015 = g_xmea_m.xmea015
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmea014
            #add-point:ON CHANGE xmea014 name="input.g.xmea014"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea015
            #add-point:BEFORE FIELD xmea015 name="input.b.xmea015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea015
            
            #add-point:AFTER FIELD xmea015 name="input.a.xmea015"
            IF NOT cl_null(g_xmea_m.xmea015) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmea_m.xmea015 != g_xmea_m_o.xmea015 OR g_xmea_m_o.xmea015 IS NULL )) THEN
                  IF NOT cl_null(g_xmea_m.xmea014) THEN 
                     IF g_xmea_m.xmea015 < g_xmea_m.xmea014 THEN 
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = '-9913'
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        LET g_xmea_m.xmea015 = g_xmea_m_o.xmea015
                        DISPLAY BY NAME g_xmea_m.xmea015
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF
            LET g_xmea_m_o.xmea015 = g_xmea_m.xmea015
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmea015
            #add-point:ON CHANGE xmea015 name="input.g.xmea015"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeasite
            #add-point:BEFORE FIELD xmeasite name="input.b.xmeasite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeasite
            
            #add-point:AFTER FIELD xmeasite name="input.a.xmeasite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmeasite
            #add-point:ON CHANGE xmeasite name="input.g.xmeasite"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea903
            
            #add-point:AFTER FIELD xmea903 name="input.a.xmea903"
            LET g_xmea_m.xmea903_desc = ''
            DISPLAY BY NAME g_xmea_m.xmea903_desc
            IF NOT cl_null(g_xmea_m.xmea903) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmea_m.xmea903 != g_xmea_m_o.xmea903 OR g_xmea_m_o.xmea903 IS NULL )) THEN
                  IF NOT axmt450_xmea903_chk(g_gzcb008,g_xmea_m.xmea903) THEN
                     LET g_xmea_m.xmea903 = g_xmea_m_o.xmea903
                     CALL s_desc_get_acc_desc(g_gzcb008,g_xmea_m.xmea903) RETURNING g_xmea_m.xmea903_desc
                     DISPLAY BY NAME g_xmea_m.xmea903,g_xmea_m.xmea903_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_acc_desc(g_gzcb008,g_xmea_m.xmea903) RETURNING g_xmea_m.xmea903_desc
            DISPLAY BY NAME g_xmea_m.xmea903_desc
            LET g_xmea_m_o.xmea903 = g_xmea_m.xmea903
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea903
            #add-point:BEFORE FIELD xmea903 name="input.b.xmea903"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmea903
            #add-point:ON CHANGE xmea903 name="input.g.xmea903"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmea904
            #add-point:BEFORE FIELD xmea904 name="input.b.xmea904"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmea904
            
            #add-point:AFTER FIELD xmea904 name="input.a.xmea904"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmea904
            #add-point:ON CHANGE xmea904 name="input.g.xmea904"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.xmeadocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeadocno
            #add-point:ON ACTION controlp INFIELD xmeadocno name="input.c.xmeadocno"
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmea_m.xmeadocno             #給予default值
            IF g_argv[01] = '"2"' THEN
               LET g_qryparam.where = " xmdx001 = 'Y' AND xmdxstus = 'Y' "
            ELSE
               LET g_qryparam.where = " xmdx001 = 'N' AND xmdxstus = 'Y' "
            END IF            
            CALL q_xmdxdocno()                                #呼叫開窗
            LET g_xmea_m.xmeadocno = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmea_m.xmeadocno TO xmeadocno              #顯示到畫面上
            CALL s_aooi200_get_slip_desc(g_xmea_m.xmeadocno) RETURNING g_xmea_m.xmeadocno_desc
            DISPLAY BY NAME g_xmea_m.xmeadocno_desc
            NEXT FIELD xmeadocno                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmea901
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea901
            #add-point:ON ACTION controlp INFIELD xmea901 name="input.c.xmea901"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmea902
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea902
            #add-point:ON ACTION controlp INFIELD xmea902 name="input.c.xmea902"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmeadocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeadocdt
            #add-point:ON ACTION controlp INFIELD xmeadocdt name="input.c.xmeadocdt"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmea002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea002
            #add-point:ON ACTION controlp INFIELD xmea002 name="input.c.xmea002"
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
   			LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmea_m.xmea002             #給予default值
            CALL q_ooag001()                                #呼叫開窗
            LET g_xmea_m.xmea002 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmea_m.xmea002 TO xmea002              #顯示到畫面上
            CALL s_desc_get_person_desc(g_xmea_m.xmea002) RETURNING g_xmea_m.xmea002_desc
            DISPLAY BY NAME g_xmea_m.xmea002_desc
            NEXT FIELD xmea002                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmea003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea003
            #add-point:ON ACTION controlp INFIELD xmea003 name="input.c.xmea003"
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
	   		LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmea_m.xmea003             #給予default值
            #給予arg
            LET g_qryparam.arg1 = g_xmea_m.xmeadocdt
            CALL q_ooeg001()                                #呼叫開窗
            LET g_xmea_m.xmea003 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmea_m.xmea003 TO xmea003              #顯示到畫面上
            CALL s_desc_get_department_desc(g_xmea_m.xmea003) RETURNING g_xmea_m.xmea003_desc
            DISPLAY BY NAME g_xmea_m.xmea003_desc
            NEXT FIELD xmea003                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmeastus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeastus
            #add-point:ON ACTION controlp INFIELD xmeastus name="input.c.xmeastus"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmea004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea004
            #add-point:ON ACTION controlp INFIELD xmea004 name="input.c.xmea004"
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
	   		LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmea_m.xmea004             #給予default值
            CALL s_control_get_customer_sql('2',g_site,g_user,g_dept,g_xmea_m.xmeadocno) RETURNING g_success,l_where
            LET g_qryparam.where = l_where
            #給予arg
            LET g_qryparam.arg1 = g_site
            CALL q_pmaa001_6()                                #呼叫開窗
            LET g_xmea_m.xmea004 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmea_m.xmea004 TO xmea004              #顯示到畫面上
            CALL s_desc_get_trading_partner_abbr_desc(g_xmea_m.xmea004) RETURNING g_xmea_m.xmea004_desc
            DISPLAY BY NAME g_xmea_m.xmea004_desc
            NEXT FIELD xmea004                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmeaacti
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeaacti
            #add-point:ON ACTION controlp INFIELD xmeaacti name="input.c.xmeaacti"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmea005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea005
            #add-point:ON ACTION controlp INFIELD xmea005 name="input.c.xmea005"
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
	   		LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmea_m.xmea005             #給予default值
            #給予arg
            LET g_qryparam.arg1 = g_xmea_m.xmeasite
            CALL q_ooaj002_3()                                #呼叫開窗
            LET g_xmea_m.xmea005 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmea_m.xmea005 TO xmea005              #顯示到畫面上
            CALL s_desc_get_currency_desc(g_xmea_m.xmea005) RETURNING g_xmea_m.xmea005_desc
            DISPLAY BY NAME g_xmea_m.xmea005_desc
            NEXT FIELD xmea005                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmea006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea006
            #add-point:ON ACTION controlp INFIELD xmea006 name="input.c.xmea006"
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
	   		LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmea_m.xmea006             #給予default值
            LET g_qryparam.default2 = g_xmea_m.xmea006_desc #稅別代碼
            LET g_qryparam.where = " oodb001 = '",l_ooef019,"'"
            CALL q_oodb002_4()                                #呼叫開窗
            LET g_xmea_m.xmea006 = g_qryparam.return1              #將開窗取得的值回傳到變數
            LET g_xmea_m.xmea006_desc = g_qryparam.return2 #稅別代碼
            DISPLAY g_xmea_m.xmea006 TO xmea006              #顯示到畫面上
            DISPLAY g_xmea_m.xmea006_desc TO xmea006_desc #稅別代碼
            NEXT FIELD xmea006                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmea007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea007
            #add-point:ON ACTION controlp INFIELD xmea007 name="input.c.xmea007"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmea008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea008
            #add-point:ON ACTION controlp INFIELD xmea008 name="input.c.xmea008"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmea009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea009
            #add-point:ON ACTION controlp INFIELD xmea009 name="input.c.xmea009"
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
	   		LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmea_m.xmea009             #給予default值
            #給予arg
            LET g_qryparam.arg1 = g_xmea_m.xmea004
            CALL q_pmad002_3()                                #呼叫開窗
            LET g_xmea_m.xmea009 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmea_m.xmea009 TO xmea009              #顯示到畫面上
            CALL s_desc_get_ooib002_desc(g_xmea_m.xmea009) RETURNING g_xmea_m.xmea009_desc
            DISPLAY BY NAME g_xmea_m.xmea009_desc
            NEXT FIELD xmea009                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmea011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea011
            #add-point:ON ACTION controlp INFIELD xmea011 name="input.c.xmea011"
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
	   		LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmea_m.xmea011             #給予default值
            #給予arg
            LET g_qryparam.arg1 = '238'
            CALL q_oocq002()                                #呼叫開窗
            LET g_xmea_m.xmea011 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmea_m.xmea011 TO xmea011              #顯示到畫面上
            CALL s_desc_get_acc_desc('238',g_xmea_m.xmea011) RETURNING g_xmea_m.xmea011_desc
            DISPLAY BY NAME g_xmea_m.xmea011_desc
            NEXT FIELD xmea011                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmea030
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea030
            #add-point:ON ACTION controlp INFIELD xmea030 name="input.c.xmea030"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmea016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea016
            #add-point:ON ACTION controlp INFIELD xmea016 name="input.c.xmea016"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmea017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea017
            #add-point:ON ACTION controlp INFIELD xmea017 name="input.c.xmea017"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmea018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea018
            #add-point:ON ACTION controlp INFIELD xmea018 name="input.c.xmea018"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmea019
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea019
            #add-point:ON ACTION controlp INFIELD xmea019 name="input.c.xmea019"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmea020
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea020
            #add-point:ON ACTION controlp INFIELD xmea020 name="input.c.xmea020"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmea010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea010
            #add-point:ON ACTION controlp INFIELD xmea010 name="input.c.xmea010"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmea012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea012
            #add-point:ON ACTION controlp INFIELD xmea012 name="input.c.xmea012"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmea001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea001
            #add-point:ON ACTION controlp INFIELD xmea001 name="input.c.xmea001"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmea014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea014
            #add-point:ON ACTION controlp INFIELD xmea014 name="input.c.xmea014"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmea015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea015
            #add-point:ON ACTION controlp INFIELD xmea015 name="input.c.xmea015"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmeasite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeasite
            #add-point:ON ACTION controlp INFIELD xmeasite name="input.c.xmeasite"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmea903
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea903
            #add-point:ON ACTION controlp INFIELD xmea903 name="input.c.xmea903"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmea_m.xmea903             #給予default值
            #給予arg
            LET g_qryparam.arg1 = g_gzcb008
            CALL q_oocq002()                                #呼叫開窗
            LET g_xmea_m.xmea903 = g_qryparam.return1              
            DISPLAY g_xmea_m.xmea903 TO xmea903              #
            CALL s_desc_get_acc_desc(g_gzcb008,g_xmea_m.xmea903) RETURNING g_xmea_m.xmea903_desc
            DISPLAY BY NAME g_xmea_m.xmea903_desc
            NEXT FIELD xmea903                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmea904
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmea904
            #add-point:ON ACTION controlp INFIELD xmea904 name="input.c.xmea904"
            
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_xmea_m.xmeadocno,g_xmea_m.xmea900
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
 
               #end add-point
               
               INSERT INTO xmea_t (xmeaent,xmeadocno,xmea900,xmea901,xmea902,xmea000,xmeadocdt,xmea002, 
                   xmea003,xmeastus,xmea004,xmeaacti,xmea005,xmea006,xmea007,xmea008,xmea009,xmea011, 
                   xmea030,xmea016,xmea017,xmea018,xmea019,xmea020,xmea010,xmea012,xmea001,xmea014,xmea015, 
                   xmeasite,xmea903,xmea904,xmeaownid,xmeaowndp,xmeacrtid,xmeacrtdp,xmeacrtdt,xmeamodid, 
                   xmeamoddt,xmeacnfid,xmeacnfdt)
               VALUES (g_enterprise,g_xmea_m.xmeadocno,g_xmea_m.xmea900,g_xmea_m.xmea901,g_xmea_m.xmea902, 
                   g_xmea_m.xmea000,g_xmea_m.xmeadocdt,g_xmea_m.xmea002,g_xmea_m.xmea003,g_xmea_m.xmeastus, 
                   g_xmea_m.xmea004,g_xmea_m.xmeaacti,g_xmea_m.xmea005,g_xmea_m.xmea006,g_xmea_m.xmea007, 
                   g_xmea_m.xmea008,g_xmea_m.xmea009,g_xmea_m.xmea011,g_xmea_m.xmea030,g_xmea_m.xmea016, 
                   g_xmea_m.xmea017,g_xmea_m.xmea018,g_xmea_m.xmea019,g_xmea_m.xmea020,g_xmea_m.xmea010, 
                   g_xmea_m.xmea012,g_xmea_m.xmea001,g_xmea_m.xmea014,g_xmea_m.xmea015,g_xmea_m.xmeasite, 
                   g_xmea_m.xmea903,g_xmea_m.xmea904,g_xmea_m.xmeaownid,g_xmea_m.xmeaowndp,g_xmea_m.xmeacrtid, 
                   g_xmea_m.xmeacrtdp,g_xmea_m.xmeacrtdt,g_xmea_m.xmeamodid,g_xmea_m.xmeamoddt,g_xmea_m.xmeacnfid, 
                   g_xmea_m.xmeacnfdt) 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_xmea_m:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               #將累計定價資料新增到資料庫內               
               IF NOT axmt450_gen_detail() THEN
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               LET g_ooff003_d = g_xmea_m.xmeadocno   #161031-00025#22 add
               #end add-point
               
               
               
               
               #add-point:單頭新增後 name="input.head.a_insert"
               IF NOT axmt450_xmea_ins_xmed() THEN
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL axmt450_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL axmt450_b_fill()
                  CALL axmt450_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
 
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               
               #end add-point
               
               #將遮罩欄位還原
               CALL axmt450_xmea_t_mask_restore('restore_mask_o')
               
               UPDATE xmea_t SET (xmeadocno,xmea900,xmea901,xmea902,xmea000,xmeadocdt,xmea002,xmea003, 
                   xmeastus,xmea004,xmeaacti,xmea005,xmea006,xmea007,xmea008,xmea009,xmea011,xmea030, 
                   xmea016,xmea017,xmea018,xmea019,xmea020,xmea010,xmea012,xmea001,xmea014,xmea015,xmeasite, 
                   xmea903,xmea904,xmeaownid,xmeaowndp,xmeacrtid,xmeacrtdp,xmeacrtdt,xmeamodid,xmeamoddt, 
                   xmeacnfid,xmeacnfdt) = (g_xmea_m.xmeadocno,g_xmea_m.xmea900,g_xmea_m.xmea901,g_xmea_m.xmea902, 
                   g_xmea_m.xmea000,g_xmea_m.xmeadocdt,g_xmea_m.xmea002,g_xmea_m.xmea003,g_xmea_m.xmeastus, 
                   g_xmea_m.xmea004,g_xmea_m.xmeaacti,g_xmea_m.xmea005,g_xmea_m.xmea006,g_xmea_m.xmea007, 
                   g_xmea_m.xmea008,g_xmea_m.xmea009,g_xmea_m.xmea011,g_xmea_m.xmea030,g_xmea_m.xmea016, 
                   g_xmea_m.xmea017,g_xmea_m.xmea018,g_xmea_m.xmea019,g_xmea_m.xmea020,g_xmea_m.xmea010, 
                   g_xmea_m.xmea012,g_xmea_m.xmea001,g_xmea_m.xmea014,g_xmea_m.xmea015,g_xmea_m.xmeasite, 
                   g_xmea_m.xmea903,g_xmea_m.xmea904,g_xmea_m.xmeaownid,g_xmea_m.xmeaowndp,g_xmea_m.xmeacrtid, 
                   g_xmea_m.xmeacrtdp,g_xmea_m.xmeacrtdt,g_xmea_m.xmeamodid,g_xmea_m.xmeamoddt,g_xmea_m.xmeacnfid, 
                   g_xmea_m.xmeacnfdt)
                WHERE xmeaent = g_enterprise AND xmeadocno = g_xmeadocno_t
                  AND xmea900 = g_xmea900_t
 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "xmea_t:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL axmt450_xmea_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_xmea_m_t)
               LET g_log2 = util.JSON.stringify(g_xmea_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               IF NOT axmt450_xmea_ins_xmed() THEN
                  CONTINUE DIALOG
               END IF
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_xmeadocno_t = g_xmea_m.xmeadocno
            LET g_xmea900_t = g_xmea_m.xmea900
 
            
      END INPUT
   
 
{</section>}
 
{<section id="axmt450.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_xmeb_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xmeb_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axmt450_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1','2',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_xmeb_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            CALL axmt450_b_fill2('2')
 
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN axmt450_cl USING g_enterprise,g_xmea_m.xmeadocno,g_xmea_m.xmea900
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axmt450_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE axmt450_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_xmeb_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xmeb_d[l_ac].xmebseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xmeb_d_t.* = g_xmeb_d[l_ac].*  #BACKUP
               LET g_xmeb_d_o.* = g_xmeb_d[l_ac].*  #BACKUP
               CALL axmt450_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
 
               #end add-point  
               CALL axmt450_set_no_entry_b(l_cmd)
               IF NOT axmt450_lock_b("xmeb_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axmt450_bcl INTO g_xmeb_d[l_ac].xmebsite,g_xmeb_d[l_ac].xmebseq,g_xmeb_d[l_ac].xmeb002, 
                      g_xmeb_d[l_ac].xmeb003,g_xmeb_d[l_ac].xmeb005,g_xmeb_d[l_ac].xmeb006,g_xmeb_d[l_ac].xmeb007, 
                      g_xmeb_d[l_ac].xmeb014,g_xmeb_d[l_ac].xmeb008,g_xmeb_d[l_ac].xmeb009,g_xmeb_d[l_ac].xmeb010, 
                      g_xmeb_d[l_ac].xmeb024,g_xmeb_d[l_ac].xmeb011,g_xmeb_d[l_ac].xmeb012,g_xmeb_d[l_ac].xmeb017, 
                      g_xmeb_d[l_ac].xmeb018,g_xmeb_d[l_ac].xmeb019,g_xmeb_d[l_ac].xmeb013,g_xmeb_d[l_ac].xmeb004, 
                      g_xmeb_d[l_ac].xmeb030,g_xmeb_d[l_ac].xmeb901,g_xmeb_d[l_ac].xmeb902,g_xmeb_d[l_ac].xmeb903, 
                      g_xmeb_d[l_ac].xmeb001,g_xmeb2_d[l_ac].xmebseq,g_xmeb2_d[l_ac].xmeb020,g_xmeb2_d[l_ac].xmeb021, 
                      g_xmeb2_d[l_ac].xmeb022,g_xmeb2_d[l_ac].xmeb023
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_xmeb_d_t.xmebseq,":",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_xmeb_d_mask_o[l_ac].* =  g_xmeb_d[l_ac].*
                  CALL axmt450_xmeb_t_mask()
                  LET g_xmeb_d_mask_n[l_ac].* =  g_xmeb_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL axmt450_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
 
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
 
            #其他table進行lock
            
 
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmeb_d[l_ac].* TO NULL 
            INITIALIZE g_xmeb_d_t.* TO NULL 
            INITIALIZE g_xmeb_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_xmeb_d[l_ac].xmeb024 = "N"
      LET g_xmeb_d[l_ac].xmeb012 = "0"
 
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            
            #end add-point
            LET g_xmeb_d_t.* = g_xmeb_d[l_ac].*     #新輸入資料
            LET g_xmeb_d_o.* = g_xmeb_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axmt450_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            
            #end add-point
            CALL axmt450_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmeb_d[li_reproduce_target].* = g_xmeb_d[li_reproduce].*
               LET g_xmeb2_d[li_reproduce_target].* = g_xmeb2_d[li_reproduce].*
 
               LET g_xmeb_d[li_reproduce_target].xmebseq = NULL
 
            END IF
            
 
 
            #add-point:modify段before insert name="input.body.before_insert"
            LET g_xmeb_d[l_ac].xmebsite = g_xmea_m.xmeasite
            LET g_xmeb_d[l_ac].xmeb001 = g_xmea_m.xmea001
            LET g_xmeb_d[l_ac].xmeb003 = ' '
            LET g_xmeb_d[l_ac].xmeb004 = ' '
            LET g_xmeb_d[l_ac].xmeb006 = ' '
            LET g_xmeb_d[l_ac].xmeb007 = ' '
            LET g_xmeb_d[l_ac].xmeb901 = '3'  #單身新增
            
            SELECT MAX(xmebseq)+1 INTO g_xmeb_d[l_ac].xmebseq
              FROM xmeb_t
             WHERE xmebent = g_enterprise
               AND xmebdocno = g_xmea_m.xmeadocno
               AND xmeb900 = g_xmea_m.xmea900
            IF cl_null(g_xmeb_d[l_ac].xmebseq) THEN
               LET g_xmeb_d[l_ac].xmebseq = 1
            END IF
            
            LET g_xmeb_d_t.* = g_xmeb_d[l_ac].*
            LET g_xmeb_d_o.* = g_xmeb_d[l_ac].*            
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            IF g_xmeb_d[l_ac].xmeb024 = 'N' THEN
               DELETE FROM xmec_t
                WHERE xmecent = g_enterprise
                  AND xmecdocno = g_xmea_m.xmeadocno
                  AND xmecseq = g_xmeb_d[l_ac].xmebseq
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "del xmec_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  CANCEL INSERT
               END IF
            END IF
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM xmeb_t 
             WHERE xmebent = g_enterprise AND xmebdocno = g_xmea_m.xmeadocno
               AND xmeb900 = g_xmea_m.xmea900
 
               AND xmebseq = g_xmeb_d[l_ac].xmebseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmea_m.xmeadocno
               LET gs_keys[2] = g_xmea_m.xmea900
               LET gs_keys[3] = g_xmeb_d[g_detail_idx].xmebseq
               CALL axmt450_insert_b('xmeb_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               #161031-00025#22-s
               IF NOT cl_null(g_xmeb_d[l_ac].ooff013) THEN
                  CALL s_aooi360_gen('7',g_prog,g_xmea_m.xmeadocno,g_xmeb_d[l_ac].xmebseq,g_xmea_m.xmea900,'','','','','','','1',g_xmeb_d[l_ac].ooff013) RETURNING l_success
               END IF
               #161031-00025#22-e
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               INITIALIZE g_xmeb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmeb_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axmt450_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               #將單身資料寫入歷程檔中
               IF NOT axmt450_xmeb_ins_xmed(g_xmeb_d[l_ac].*,g_xmeb2_d[l_ac].*) THEN
                  LET g_xmeb_d[l_ac].* = g_xmeb_d_t.*
                  CALL s_transaction_end('N','0')
                  CANCEL INSERT
               END IF

               CALL s_transaction_end('Y','0')
               CALL s_transaction_begin()
               IF l_inam.getLength() > 1 THEN  #因為第一筆資料已呈現在畫面並寫入DB,從第二筆開始處理
                  LET l_xmebseq = ''
                  SELECT MAX(xmebseq)+1 INTO l_xmebseq
                    FROM xmeb_t
                   WHERE xmebent = g_enterprise
                     AND xmebdocno = g_xmea_m.xmeadocno
                     AND xmeb900 = g_xmea_m.xmea900
                  IF cl_null(l_xmebseq) THEN LET l_xmebseq = 1 END IF
                  IF l_xmebseq > 1 THEN
                     FOR l_i = 2 TO l_inam.getLength()
                        IF NOT cl_null(g_xmeb_d[l_ac].xmeb008) AND NOT cl_null(l_inam[l_i].inam004) THEN
                           CALL s_aooi250_take_decimals(g_xmeb_d[l_ac].xmeb008,l_inam[l_i].inam004)
                                RETURNING l_success,l_inam[l_i].inam004
                        END IF
                        INSERT INTO xmeb_t(xmebent,xmebsite,xmebdocno,xmebseq,
                                           xmeb001,xmeb002,xmeb003,xmeb004,xmeb005,
                                           xmeb006,xmeb007,xmeb008,xmeb009,xmeb010,
                                           xmeb011,xmeb012,xmeb013,xmeb014,xmeb017,
                                           xmeb018,xmeb019,xmeb020,xmeb021,xmeb022,
                                           xmeb023,xmeb024,xmeb030,xmeb900,xmeb901,
                                           xmeb902,xmeb903)
                             VALUES(g_enterprise,g_site,g_xmea_m.xmeadocno,l_xmebseq,
                                    g_xmeb_d[l_ac].xmeb001,g_xmeb_d[l_ac].xmeb002,l_inam[l_i].inam002,g_xmeb_d[l_ac].xmeb004,g_xmeb_d[l_ac].xmeb005,
                                    g_xmeb_d[l_ac].xmeb006,g_xmeb_d[l_ac].xmeb007,g_xmeb_d[l_ac].xmeb008,l_inam[l_i].inam004,g_xmeb_d[l_ac].xmeb010,
                                    g_xmeb_d[l_ac].xmeb011,g_xmeb_d[l_ac].xmeb012,g_xmeb_d[l_ac].xmeb013,g_xmeb_d[l_ac].xmeb014,g_xmeb_d[l_ac].xmeb017,
                                    g_xmeb_d[l_ac].xmeb018,g_xmeb_d[l_ac].xmeb019,g_xmeb2_d[l_ac].xmeb020,g_xmeb2_d[l_ac].xmeb021,g_xmeb2_d[l_ac].xmeb022,
                                    g_xmeb2_d[l_ac].xmeb023,g_xmeb_d[l_ac].xmeb024,g_xmeb_d[l_ac].xmeb030,g_xmea_m.xmea900,g_xmeb_d[l_ac].xmeb901,
                                    g_xmeb_d[l_ac].xmeb902,g_xmeb_d[l_ac].xmeb903)
                        IF SQLCA.sqlcode THEN
                           CALL s_transaction_end('N','0')
                           EXIT FOR
                        END IF
                        LET l_xmebseq = l_xmebseq + 1    
                        #161031-00025#22-s
                        IF NOT cl_null(g_xmeb_d[l_ac].ooff013) THEN
                           CALL s_aooi360_gen('7',g_prog,g_xmea_m.xmeadocno,g_xmeb_d[l_ac].xmebseq,g_xmea_m.xmea900,'','','','','','','1',g_xmeb_d[l_ac].ooff013) RETURNING l_success
                        END IF
                        #161031-00025#22-e                        
                     END FOR
                  END IF
               END IF
               CALL axmt450_b_fill()

               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               #若單身該筆項次對應的xmeb901(單身變更類型)不等於"3:單身新增"時，則不允許做刪除動作
               LET l_n = 0
              #SELECT COUNT(*) INTO l_n   #161031-00025#22 mark
               SELECT COUNT(1) INTO l_n   #161031-00025#22 mod
                 FROM xmdy_t
                WHERE xmdyent = g_enterprise
                  AND xmdydocno = g_xmea_m.xmeadocno
                  AND xmdyseq = g_xmeb_d_t.xmebseq
               IF l_n > 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'axm-00238'
                  LET g_errparam.extend = g_xmeb_d[l_ac].xmebseq
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE
               END IF
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_xmea_m.xmeadocno
               LET gs_keys[gs_keys.getLength()+1] = g_xmea_m.xmea900
 
               LET gs_keys[gs_keys.getLength()+1] = g_xmeb_d_t.xmebseq
 
            
               #刪除同層單身
               IF NOT axmt450_delete_b('xmeb_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt450_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT axmt450_key_delete_b(gs_keys,'xmeb_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt450_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
               #161031-00025#22-s
               CALL s_aooi360_del('7',g_prog,g_xmea_m.xmeadocno,g_xmeb_d_t.xmebseq,g_xmea_m.xmea900,'','','','','','','1') RETURNING l_success
               #161031-00025#22-e 
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE axmt450_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
               DELETE FROM xmec_t
                WHERE xmecent = g_enterprise
                  AND xmecdocno = g_xmea_m.xmeadocno
                  AND xmecseq = g_xmeb_d_t.xmebseq
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "del xmec_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF                         
               #end add-point
               LET l_count = g_xmeb_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_xmeb_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmebsite
            #add-point:BEFORE FIELD xmebsite name="input.b.page1.xmebsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmebsite
            
            #add-point:AFTER FIELD xmebsite name="input.a.page1.xmebsite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmebsite
            #add-point:ON CHANGE xmebsite name="input.g.page1.xmebsite"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmebseq
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmeb_d[l_ac].xmebseq,"0","0","","","azz-00079",1) THEN
               NEXT FIELD xmebseq
            END IF 
 
 
 
            #add-point:AFTER FIELD xmebseq name="input.a.page1.xmebseq"
            IF  g_xmea_m.xmeadocno IS NOT NULL AND g_xmeb_d[g_detail_idx].xmebseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmea_m.xmeadocno != g_xmeadocno_t OR g_xmeb_d[g_detail_idx].xmebseq != g_xmeb_d_t.xmebseq)) THEN 
                 #IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmeb_t WHERE "||"xmebent = '" ||g_enterprise|| "' AND "||"xmebdocno = '"||g_xmea_m.xmeadocno ||"' AND "||"xmeb900 = '"||g_xmea_m.xmea900 ||"' AND "|| "xmebseq = '"||g_xmeb_d[g_detail_idx].xmebseq ||"'",'std-00004',0) THEN  #161031-00025#22 mark
                  IF NOT ap_chk_notDup("","SELECT COUNT(1) FROM xmeb_t WHERE "||"xmebent = '" ||g_enterprise|| "' AND "||"xmebdocno = '"||g_xmea_m.xmeadocno ||"' AND "||"xmeb900 = '"||g_xmea_m.xmea900 ||"' AND "|| "xmebseq = '"||g_xmeb_d[g_detail_idx].xmebseq ||"'",'std-00004',0) THEN  #161031-00025#22 mod
                     LET g_xmeb_d[l_ac].xmebseq = g_xmeb_d_t.xmebseq
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmebseq
            #add-point:BEFORE FIELD xmebseq name="input.b.page1.xmebseq"
 
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmebseq
            #add-point:ON CHANGE xmebseq name="input.g.page1.xmebseq"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb002
            
            #add-point:AFTER FIELD xmeb002 name="input.a.page1.xmeb002"
            LET g_xmeb_d[l_ac].xmeb002_desc = ''
            LET g_xmeb_d[l_ac].xmeb002_desc_desc = ''
            IF NOT cl_null(g_xmeb_d[l_ac].xmeb002) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_xmeb_d[l_ac].xmeb002 != g_xmeb_d_o.xmeb002 OR g_xmeb_d_o.xmeb002 IS NULL )) THEN
                  IF NOT axmt450_xmeb002_chk() THEN
                     LET g_xmeb_d[l_ac].xmeb002 = g_xmeb_d_o.xmeb002
                     CALL s_desc_get_item_desc(g_xmeb_d[l_ac].xmeb002)
                          RETURNING g_xmeb_d[l_ac].xmeb002_desc,g_xmeb_d[l_ac].xmeb002_desc_desc
                     NEXT FIELD CURRENT
                  END IF
                  CALL axmt450_xmeb002_default()
               END IF
            END IF
            CALL s_desc_get_item_desc(g_xmeb_d[l_ac].xmeb002)
                 RETURNING g_xmeb_d[l_ac].xmeb002_desc,g_xmeb_d[l_ac].xmeb002_desc_desc
            LET g_xmeb_d_o.xmeb002 = g_xmeb_d[l_ac].xmeb002
            CALL axmt450_set_entry_b('')
            CALL axmt450_set_no_entry_b('')
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb002
            #add-point:BEFORE FIELD xmeb002 name="input.b.page1.xmeb002"
 
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmeb002
            #add-point:ON CHANGE xmeb002 name="input.g.page1.xmeb002"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb003
            
            #add-point:AFTER FIELD xmeb003 name="input.a.page1.xmeb003"
            LET g_xmeb_d[l_ac].xmeb003_desc = ''
            IF NOT cl_null(g_xmeb_d[l_ac].xmeb003) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_xmeb_d[l_ac].xmeb003 != g_xmeb_d_o.xmeb003 OR g_xmeb_d_o.xmeb003 IS NULL )) THEN
                  IF NOT s_feature_check(g_xmeb_d[l_ac].xmeb002,g_xmeb_d[l_ac].xmeb003) THEN
                     CALL s_feature_description(g_xmeb_d[l_ac].xmeb002,g_xmeb_d[l_ac].xmeb003)
                          RETURNING l_success,g_xmeb_d[l_ac].xmeb003_desc
                     LET g_xmeb_d[l_ac].xmeb003 = g_xmeb_d_t.xmeb003
                     NEXT FIELD CURRENT
                  END IF
                  #151224-00025#5---dorishsu---151228---add--
                  IF NOT s_feature_direct_input(g_xmeb_d[l_ac].xmeb002,g_xmeb_d[l_ac].xmeb003,g_xmeb_d_t.xmeb003,g_xmea_m.xmeadocno,g_xmea_m.xmeasite) THEN
                     NEXT FIELD CURRENT
                  END IF
                  #151224-00025#5---dorishsu---151228---end--
                  #161221-00064#15 mod-S
#                  CALL s_apmi070_get_pmao004(g_xmea_m.xmea004,g_xmeb_d[l_ac].xmeb002,g_xmeb_d[l_ac].xmeb003)
#                       RETURNING l_success,g_xmeb_d[l_ac].xmeb005
                  CALL s_apmi070_get_pmao004_2(g_xmea_m.xmea004,g_xmeb_d[l_ac].xmeb002,g_xmeb_d[l_ac].xmeb003,'2')
                       RETURNING l_success,g_xmeb_d[l_ac].xmeb005
                  #161221-00064#15 mod-E
               END IF
            ELSE
               LET g_xmeb_d[l_ac].xmeb003 = ' '
            END IF
            CALL s_feature_description(g_xmeb_d[l_ac].xmeb002,g_xmeb_d[l_ac].xmeb003)
                 RETURNING l_success,g_xmeb_d[l_ac].xmeb003_desc
            LET g_xmeb_d_o.xmeb003 = g_xmeb_d[l_ac].xmeb003
            LET g_xmeb_d_o.xmeb005 = g_xmeb_d[l_ac].xmeb005
            SELECT pmao009,pmao010
              INTO g_xmeb_d[l_ac].xmeb005_desc,g_xmeb_d[l_ac].xmeb005_desc_desc
              FROM pmao_t
             WHERE pmaoent = g_enterprise
               AND pmao001 = g_xmea_m.xmea004
               AND pmao002 = g_xmeb_d[l_ac].xmeb002
               AND pmao003 = g_xmeb_d[l_ac].xmeb003
               AND pmao004 = g_xmeb_d[l_ac].xmeb005  
               AND pmao000 = '2' #161221-00064#15 add               
            DISPLAY BY NAME g_xmeb_d[l_ac].xmeb005_desc,g_xmeb_d[l_ac].xmeb005_desc_desc
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb003
            #add-point:BEFORE FIELD xmeb003 name="input.b.page1.xmeb003"
#            IF axmt450_imaa005_exists() AND cl_null(g_xmeb_d[l_ac].xmeb003) THEN               #160314-00009#4 zhujing marked 2016-3-17
            IF s_feature_auto_chk(g_xmeb_d[l_ac].xmeb002) AND cl_null(g_xmeb_d[l_ac].xmeb003) THEN       #160314-00009#4 zhujing mod 2016-3-17
               CALL s_feature_single(g_xmeb_d[l_ac].xmeb002,g_xmeb_d[l_ac].xmeb003,g_site,g_xmea_m.xmeadocno)
                  RETURNING l_success,g_xmeb_d[l_ac].xmeb003
            END IF
            CALL s_feature_description(g_xmeb_d[l_ac].xmeb002,g_xmeb_d[l_ac].xmeb003)
                 RETURNING l_success,g_xmeb_d[l_ac].xmeb003_desc
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmeb003
            #add-point:ON CHANGE xmeb003 name="input.g.page1.xmeb003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb003_desc
            #add-point:BEFORE FIELD xmeb003_desc name="input.b.page1.xmeb003_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb003_desc
            
            #add-point:AFTER FIELD xmeb003_desc name="input.a.page1.xmeb003_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmeb003_desc
            #add-point:ON CHANGE xmeb003_desc name="input.g.page1.xmeb003_desc"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb005
            
            #add-point:AFTER FIELD xmeb005 name="input.a.page1.xmeb005"
            IF NOT cl_null(g_xmeb_d[l_ac].xmeb005) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_xmeb_d[l_ac].xmeb005 != g_xmeb_d_o.xmeb005 OR g_xmeb_d_o.xmeb005 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmea_m.xmea004
                  LET g_chkparam.arg2 = g_xmeb_d[l_ac].xmeb002
                  LET g_chkparam.arg3 = g_xmeb_d[l_ac].xmeb003
                  LET g_chkparam.arg4 = g_xmeb_d[l_ac].xmeb005
                  #160318-00025#17  by 07900 --add-str
                  LET g_errshow = TRUE #是否開窗                   
                  LET g_chkparam.err_str[1] ="apm-00397:sub-01302|apmi070|",cl_get_progname("apmi070",g_lang,"2"),"|:EXEPROGapmi070"
                 #160318-00025#17  by 07900 --add-end
                  IF NOT cl_chk_exist("v_pmao004_2") THEN
                     LET g_xmeb_d[l_ac].xmeb005 = g_xmeb_d_o.xmeb005
                     LET g_xmeb_d[l_ac].xmeb005_desc = g_xmeb_d_o.xmeb005_desc
                     LET g_xmeb_d[l_ac].xmeb005_desc_desc = g_xmeb_d_o.xmeb005_desc_desc
                     DISPLAY BY NAME g_xmeb_d[l_ac].xmeb005_desc,g_xmeb_d[l_ac].xmeb005_desc_desc
                     NEXT FIELD CURRENT
                  END IF
                  #161221-00064#15 mod-S
#                  CALL s_apmi070_get_pmao002_pmao003(g_xmea_m.xmea004,g_xmeb_d[l_ac].xmeb005)
#                       RETURNING l_success,g_xmeb_d[l_ac].xmeb002,g_xmeb_d[l_ac].xmeb003
                  CALL s_apmi070_get_pmao002_pmao003_2(g_xmea_m.xmea004,g_xmeb_d[l_ac].xmeb005,'2')
                       RETURNING l_success,g_xmeb_d[l_ac].xmeb002,g_xmeb_d[l_ac].xmeb003
                  #161221-00064#15 mod-E
               END IF
               SELECT pmao009,pmao010
                 INTO g_xmeb_d[l_ac].xmeb005_desc,g_xmeb_d[l_ac].xmeb005_desc_desc
                 FROM pmao_t
                WHERE pmaoent = g_enterprise
                  AND pmao001 = g_xmea_m.xmea004
                  AND pmao002 = g_xmeb_d[l_ac].xmeb002
                  AND pmao003 = g_xmeb_d[l_ac].xmeb003
                  AND pmao004 = g_xmeb_d[l_ac].xmeb005
                  AND pmao000 = '2' #161221-00064#15 add                  
               DISPLAY BY NAME g_xmeb_d[l_ac].xmeb005_desc,g_xmeb_d[l_ac].xmeb005_desc_desc
            ELSE
               LET g_xmeb_d[l_ac].xmeb005_desc = ''
               LET g_xmeb_d[l_ac].xmeb005_desc_desc = ''
               DISPLAY BY NAME g_xmeb_d[l_ac].xmeb005_desc,g_xmeb_d[l_ac].xmeb005_desc_desc
            END IF
            LET g_xmeb_d_o.xmeb002 = g_xmeb_d[l_ac].xmeb002
            LET g_xmeb_d_o.xmeb003 = g_xmeb_d[l_ac].xmeb003
            LET g_xmeb_d_o.xmeb005 = g_xmeb_d[l_ac].xmeb005
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb005
            #add-point:BEFORE FIELD xmeb005 name="input.b.page1.xmeb005"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmeb005
            #add-point:ON CHANGE xmeb005 name="input.g.page1.xmeb005"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb006
            
            #add-point:AFTER FIELD xmeb006 name="input.a.page1.xmeb006"
            LET g_xmeb_d[l_ac].xmeb006_desc = ''
            IF NOT cl_null(g_xmeb_d[l_ac].xmeb006) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_xmeb_d[l_ac].xmeb006 != g_xmeb_d_o.xmeb006 OR g_xmeb_d_o.xmeb006 IS NULL )) THEN
                  IF NOT s_azzi650_chk_exist('221',g_xmeb_d[l_ac].xmeb006) THEN
                     LET g_xmeb_d[l_ac].xmeb006 = g_xmeb_d_o.xmeb006
                     CALL s_desc_get_acc_desc('221',g_xmeb_d[l_ac].xmeb006)
                          RETURNING g_xmeb_d[l_ac].xmeb006_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            ELSE
               LET g_xmeb_d[l_ac].xmeb006 = ' '
            END IF
            CALL s_desc_get_acc_desc('221',g_xmeb_d[l_ac].xmeb006)
                 RETURNING g_xmeb_d[l_ac].xmeb006_desc
            LET g_xmeb_d_o.xmeb006 = g_xmeb_d[l_ac].xmeb006
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb006
            #add-point:BEFORE FIELD xmeb006 name="input.b.page1.xmeb006"
 
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmeb006
            #add-point:ON CHANGE xmeb006 name="input.g.page1.xmeb006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb007
            #add-point:BEFORE FIELD xmeb007 name="input.b.page1.xmeb007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb007
            
            #add-point:AFTER FIELD xmeb007 name="input.a.page1.xmeb007"
            IF g_xmeb_d[l_ac].xmeb007 IS NOT NULL THEN 
               LET g_xmeb_d[l_ac].xmeb007 = ' '
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmeb007
            #add-point:ON CHANGE xmeb007 name="input.g.page1.xmeb007"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb014
            
            #add-point:AFTER FIELD xmeb014 name="input.a.page1.xmeb014"
            LET g_xmeb_d[l_ac].xmeb014_desc = ''
            IF NOT cl_null(g_xmeb_d[l_ac].xmeb014) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_xmeb_d[l_ac].xmeb014 != g_xmeb_d_o.xmeb014 OR g_xmeb_d_o.xmeb014 IS NULL )) THEN
                  IF NOT axmt450_xmea903_chk(g_gzcb004,g_xmeb_d[l_ac].xmeb014) THEN
                     LET g_xmeb_d[l_ac].xmeb014 = g_xmeb_d_o.xmeb014
                     CALL s_desc_get_acc_desc(g_gzcb004,g_xmeb_d[l_ac].xmeb014)
                          RETURNING g_xmeb_d[l_ac].xmeb014_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_acc_desc(g_gzcb004,g_xmeb_d[l_ac].xmeb014)
                 RETURNING g_xmeb_d[l_ac].xmeb014_desc
            LET g_xmeb_d_o.xmeb014 = g_xmeb_d[l_ac].xmeb014
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb014
            #add-point:BEFORE FIELD xmeb014 name="input.b.page1.xmeb014"
 
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmeb014
            #add-point:ON CHANGE xmeb014 name="input.g.page1.xmeb014"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb008
            
            #add-point:AFTER FIELD xmeb008 name="input.a.page1.xmeb008"
            LET g_xmeb_d[l_ac].xmeb008_desc = ''
            IF NOT cl_null(g_xmeb_d[l_ac].xmeb008) THEN 
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_xmeb_d[l_ac].xmeb008 != g_xmeb_d_o.xmeb008 OR g_xmeb_d_o.xmeb008 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmeb_d[l_ac].xmeb002
                  LET g_chkparam.arg2 = g_xmeb_d[l_ac].xmeb008
                  IF NOT cl_chk_exist("v_imao002") THEN
                     LET g_xmeb_d[l_ac].xmeb008 = g_xmeb_d_o.xmeb008
                     CALL s_desc_get_unit_desc(g_xmeb_d[l_ac].xmeb008)
                          RETURNING g_xmeb_d[l_ac].xmeb008_desc
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT cl_null(g_xmeb_d[l_ac].xmeb009) THEN
                     #對出貨進行取位
                     CALL s_aooi250_take_decimals(g_xmeb_d[l_ac].xmeb008,g_xmeb_d[l_ac].xmeb009)
                          RETURNING l_success,g_xmeb_d[l_ac].xmeb009
                     #重新計算未稅金額、含稅金額、稅額
                     CALL axmt450_get_amount(g_xmeb_d[l_ac].xmebseq,g_xmeb_d[l_ac].xmeb009,g_xmeb_d[l_ac].xmeb010,g_xmeb_d[l_ac].xmeb011)  
                          RETURNING g_xmeb_d[l_ac].xmeb017,g_xmeb_d[l_ac].xmeb018,g_xmeb_d[l_ac].xmeb019
                  END IF
               END IF
            END IF
            CALL s_desc_get_unit_desc(g_xmeb_d[l_ac].xmeb008)
                 RETURNING g_xmeb_d[l_ac].xmeb008_desc
            LET g_xmeb_d_o.xmeb008 = g_xmeb_d[l_ac].xmeb008
            LET g_xmeb_d_o.xmeb009 = g_xmeb_d[l_ac].xmeb009
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb008
            #add-point:BEFORE FIELD xmeb008 name="input.b.page1.xmeb008"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmeb008
            #add-point:ON CHANGE xmeb008 name="input.g.page1.xmeb008"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb009
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmeb_d[l_ac].xmeb009,"0","0","","","azz-00079",1) THEN
               NEXT FIELD xmeb009
            END IF 
 
 
 
            #add-point:AFTER FIELD xmeb009 name="input.a.page1.xmeb009"
            IF NOT cl_null(g_xmeb_d[l_ac].xmeb009) THEN 
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_xmeb_d[l_ac].xmeb009 != g_xmeb_d_o.xmeb009 OR g_xmeb_d_o.xmeb009 IS NULL )) THEN
                  IF NOT cl_null(g_xmeb_d[l_ac].xmeb008) THEN
                     #對出貨進行取位
                     CALL s_aooi250_take_decimals(g_xmeb_d[l_ac].xmeb008,g_xmeb_d[l_ac].xmeb009)
                          RETURNING l_success,g_xmeb_d[l_ac].xmeb009
                     #重新計算未稅金額、含稅金額、稅額
                     CALL axmt450_get_amount(g_xmeb_d[l_ac].xmebseq,g_xmeb_d[l_ac].xmeb009,g_xmeb_d[l_ac].xmeb010,g_xmeb_d[l_ac].xmeb011)  
                          RETURNING g_xmeb_d[l_ac].xmeb017,g_xmeb_d[l_ac].xmeb018,g_xmeb_d[l_ac].xmeb019
                  END IF
               END IF
            END IF
            LET g_xmeb_d_o.xmeb008 = g_xmeb_d[l_ac].xmeb008
            LET g_xmeb_d_o.xmeb009 = g_xmeb_d[l_ac].xmeb009
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb009
            #add-point:BEFORE FIELD xmeb009 name="input.b.page1.xmeb009"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmeb009
            #add-point:ON CHANGE xmeb009 name="input.g.page1.xmeb009"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb010
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmeb_d[l_ac].xmeb010,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD xmeb010
            END IF 
 
 
 
            #add-point:AFTER FIELD xmeb010 name="input.a.page1.xmeb010"
            IF NOT cl_null(g_xmeb_d[l_ac].xmeb010) THEN 
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_xmeb_d[l_ac].xmeb010 != g_xmeb_d_o.xmeb010 OR g_xmeb_d_o.xmeb010 IS NULL )) THEN
                  CALL s_curr_round(l_ooef001,g_xmea_m.xmea005,g_xmeb_d[l_ac].xmeb010,'1')
                       RETURNING g_xmeb_d[l_ac].xmeb010
                  CALL axmt450_get_amount(g_xmeb_d[l_ac].xmebseq,g_xmeb_d[l_ac].xmeb009,g_xmeb_d[l_ac].xmeb010,g_xmeb_d[l_ac].xmeb011)  
                       RETURNING g_xmeb_d[l_ac].xmeb017,g_xmeb_d[l_ac].xmeb018,g_xmeb_d[l_ac].xmeb019
               END IF
            END IF
            LET g_xmeb_d_o.xmeb010 = g_xmeb_d[l_ac].xmeb010
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb010
            #add-point:BEFORE FIELD xmeb010 name="input.b.page1.xmeb010"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmeb010
            #add-point:ON CHANGE xmeb010 name="input.g.page1.xmeb010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb024
            #add-point:BEFORE FIELD xmeb024 name="input.b.page1.xmeb024"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb024
            
            #add-point:AFTER FIELD xmeb024 name="input.a.page1.xmeb024"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmeb024
            #add-point:ON CHANGE xmeb024 name="input.g.page1.xmeb024"

            IF g_xmeb_d[l_ac].xmeb024 = 'Y' THEN 
               CALL s_transaction_end('Y','0')
               CALL axmt450_01('1',g_xmea_m.xmeadocno,g_xmeb_d[l_ac].xmebseq,g_xmea_m.xmea900)
               CALL axmt450_upd_xmeb024()
               CALL s_transaction_begin()                
            END IF
           
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb011
            
            #add-point:AFTER FIELD xmeb011 name="input.a.page1.xmeb011"
            LET g_xmeb_d[l_ac].xmeb011_desc = ''
            IF NOT cl_null(g_xmeb_d[l_ac].xmeb011) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_xmeb_d[l_ac].xmeb011 != g_xmeb_d_o.xmeb011 OR g_xmeb_d_o.xmeb011 IS NULL )) THEN
                  CALL s_tax_chk(g_site,g_xmeb_d[l_ac].xmeb011)
                       RETURNING l_success,g_xmeb_d[l_ac].xmeb011_desc,l_oodb005,g_xmeb_d[l_ac].xmeb012,l_oodb011
                  IF NOT l_success THEN
                     LET g_xmeb_d[l_ac].xmeb011 = g_xmeb_d_o.xmeb011
                     LET g_xmeb_d[l_ac].xmeb012 = g_xmeb_d_o.xmeb012
                     CALL s_desc_get_tax_desc1(g_site,g_xmeb_d[l_ac].xmeb011)
                          RETURNING g_xmeb_d[l_ac].xmeb011_desc
                     NEXT FIELD CURRENT
                  END IF
                  CALL axmt450_get_amount(g_xmeb_d[l_ac].xmebseq,g_xmeb_d[l_ac].xmeb009,g_xmeb_d[l_ac].xmeb010,g_xmeb_d[l_ac].xmeb011)  
                     RETURNING g_xmeb_d[l_ac].xmeb017,g_xmeb_d[l_ac].xmeb018,g_xmeb_d[l_ac].xmeb019
               END IF
            END IF
            CALL s_desc_get_tax_desc1(g_site,g_xmeb_d[l_ac].xmeb011)
                 RETURNING g_xmeb_d[l_ac].xmeb011_desc
            LET g_xmeb_d_o.xmeb011 = g_xmeb_d[l_ac].xmeb011
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb011
            #add-point:BEFORE FIELD xmeb011 name="input.b.page1.xmeb011"
 
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmeb011
            #add-point:ON CHANGE xmeb011 name="input.g.page1.xmeb011"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb013
            
            #add-point:AFTER FIELD xmeb013 name="input.a.page1.xmeb013"
            LET g_xmeb_d[l_ac].xmeb013_desc = ''
            IF NOT cl_null(g_xmeb_d[l_ac].xmeb013) THEN 
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_xmeb_d[l_ac].xmeb013 != g_xmeb_d_o.xmeb013 OR g_xmeb_d_o.xmeb013 IS NULL )) THEN
                  IF NOT s_azzi650_chk_exist('263',g_xmeb_d[l_ac].xmeb013) THEN
                     LET g_xmeb_d[l_ac].xmeb013 = g_xmeb_d_o.xmeb013
                     CALL s_desc_get_acc_desc('263',g_xmeb_d[l_ac].xmeb013)
                          RETURNING g_xmeb_d[l_ac].xmeb013_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_acc_desc('263',g_xmeb_d[l_ac].xmeb013)
                 RETURNING g_xmeb_d[l_ac].xmeb013_desc
            LET g_xmeb_d_o.xmeb013 = g_xmeb_d[l_ac].xmeb013
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb013
            #add-point:BEFORE FIELD xmeb013 name="input.b.page1.xmeb013"
 
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmeb013
            #add-point:ON CHANGE xmeb013 name="input.g.page1.xmeb013"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb004
            
            #add-point:AFTER FIELD xmeb004 name="input.a.page1.xmeb004"
            IF NOT cl_null(g_xmeb_d[l_ac].xmeb004) THEN 
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_xmeb_d[l_ac].xmeb004 != g_xmeb_d_o.xmeb004 OR g_xmeb_d_o.xmeb004 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmeb_d[l_ac].xmeb004
                  #160318-00025#17  by 07900 --add-str
                  LET g_errshow = TRUE #是否開窗                   
                  LET g_chkparam.err_str[1] ="aim-00002:sub-01302|aimm200|",cl_get_progname("aimm200",g_lang,"2"),"|:EXEPROGaimm200"
                  #160318-00025#17  by 07900 --add-end 
                  IF NOT cl_chk_exist("v_imaf001_2") THEN
                     LET g_xmeb_d[l_ac].xmeb004 = g_xmeb_d_o.xmeb004
                     NEXT FIELD CURRENT
                  END IF
               END IF
            ELSE
               LET g_xmeb_d[l_ac].xmeb004 = ' '
            END IF
            LET g_xmeb_d_o.xmeb004 = g_xmeb_d[l_ac].xmeb004

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb004
            #add-point:BEFORE FIELD xmeb004 name="input.b.page1.xmeb004"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmeb004
            #add-point:ON CHANGE xmeb004 name="input.g.page1.xmeb004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb030
            #add-point:BEFORE FIELD xmeb030 name="input.b.page1.xmeb030"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb030
            
            #add-point:AFTER FIELD xmeb030 name="input.a.page1.xmeb030"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmeb030
            #add-point:ON CHANGE xmeb030 name="input.g.page1.xmeb030"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb901
            #add-point:BEFORE FIELD xmeb901 name="input.b.page1.xmeb901"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb901
            
            #add-point:AFTER FIELD xmeb901 name="input.a.page1.xmeb901"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmeb901
            #add-point:ON CHANGE xmeb901 name="input.g.page1.xmeb901"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb902
            
            #add-point:AFTER FIELD xmeb902 name="input.a.page1.xmeb902"
            LET g_xmeb_d[l_ac].xmeb902_desc = ''
            IF NOT cl_null(g_xmeb_d[l_ac].xmeb902) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_xmeb_d[l_ac].xmeb902 != g_xmeb_d_o.xmeb902 OR g_xmeb_d_o.xmeb902 IS NULL )) THEN
                  IF NOT axmt450_xmea903_chk(g_gzcb008,g_xmeb_d[l_ac].xmeb902) THEN
                     LET g_xmeb_d[l_ac].xmeb902 = g_xmeb_d_o.xmeb902
                     CALL s_desc_get_acc_desc(g_gzcb008,g_xmeb_d[l_ac].xmeb902)
                          RETURNING g_xmeb_d[l_ac].xmeb902
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_acc_desc(g_gzcb008,g_xmeb_d[l_ac].xmeb902)
                 RETURNING g_xmeb_d[l_ac].xmeb902_desc
            LET g_xmeb_d_o.xmeb902 = g_xmeb_d[l_ac].xmeb902
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb902
            #add-point:BEFORE FIELD xmeb902 name="input.b.page1.xmeb902"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmeb902
            #add-point:ON CHANGE xmeb902 name="input.g.page1.xmeb902"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb903
            #add-point:BEFORE FIELD xmeb903 name="input.b.page1.xmeb903"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb903
            
            #add-point:AFTER FIELD xmeb903 name="input.a.page1.xmeb903"
 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmeb903
            #add-point:ON CHANGE xmeb903 name="input.g.page1.xmeb903"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD ooff013
            #add-point:BEFORE FIELD ooff013 name="input.b.page1.ooff013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD ooff013
            
            #add-point:AFTER FIELD ooff013 name="input.a.page1.ooff013"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE ooff013
            #add-point:ON CHANGE ooff013 name="input.g.page1.ooff013"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.xmebsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmebsite
            #add-point:ON ACTION controlp INFIELD xmebsite name="input.c.page1.xmebsite"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmebseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmebseq
            #add-point:ON ACTION controlp INFIELD xmebseq name="input.c.page1.xmebseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmeb002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb002
            #add-point:ON ACTION controlp INFIELD xmeb002 name="input.c.page1.xmeb002"
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
	   		LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmeb_d[l_ac].xmeb002             #給予default值
            #給予arg
            CALL q_imaf001()                                #呼叫開窗
            LET g_xmeb_d[l_ac].xmeb002 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmeb_d[l_ac].xmeb002 TO xmeb002              #顯示到畫面上
            CALL s_desc_get_item_desc(g_xmeb_d[l_ac].xmeb002)
                 RETURNING g_xmeb_d[l_ac].xmeb002_desc,g_xmeb_d[l_ac].xmeb002_desc_desc
            NEXT FIELD xmeb002                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.page1.xmeb003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb003
            #add-point:ON ACTION controlp INFIELD xmeb003 name="input.c.page1.xmeb003"
            IF axmt450_imaa005_exists() THEN
               IF l_cmd = 'a' THEN            
                  CALL l_inam.clear()            
                  CALL s_feature(l_cmd,g_xmeb_d[l_ac].xmeb002,'','',g_site,g_xmea_m.xmeadocno)
                       RETURNING l_success,l_inam
                  LET g_xmeb_d[l_ac].xmeb003 = l_inam[1].inam002
                  LET g_xmeb_d[l_ac].xmeb009 = l_inam[1].inam004
               END IF
               IF l_cmd = 'u' THEN
                  CALL s_feature_single(g_xmeb_d[l_ac].xmeb002,g_xmeb_d[l_ac].xmeb003,g_site,g_xmea_m.xmeadocno)
                     RETURNING l_success,g_xmeb_d[l_ac].xmeb003
               END IF
            END IF
            CALL s_feature_description(g_xmeb_d[l_ac].xmeb002,g_xmeb_d[l_ac].xmeb003)
                 RETURNING l_success,g_xmeb_d[l_ac].xmeb003_desc
#            NEXT FIELD xmeb003                          #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmeb003_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb003_desc
            #add-point:ON ACTION controlp INFIELD xmeb003_desc name="input.c.page1.xmeb003_desc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmeb005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb005
            #add-point:ON ACTION controlp INFIELD xmeb005 name="input.c.page1.xmeb005"
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
	   		LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmeb_d[l_ac].xmeb005             #給予default值
            IF NOT cl_null(g_xmeb_d[l_ac].xmeb002) THEN 
               LET g_qryparam.where = " pmao002 = '",g_xmeb_d[l_ac].xmeb002,"'"
            END IF
            IF NOT cl_null(g_xmeb_d[l_ac].xmeb003) THEN 
               LET g_qryparam.where = g_qryparam.where," AND pmao003 = '",g_xmeb_d[l_ac].xmeb003,"'"
            END IF 
            #給予arg
            LET g_qryparam.arg1 = g_xmea_m.xmea004
            CALL q_pmao004_2()                                #呼叫開窗
            LET g_xmeb_d[l_ac].xmeb005 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmeb_d[l_ac].xmeb005 TO xmeb005              #顯示到畫面上
            NEXT FIELD xmeb005                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.page1.xmeb006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb006
            #add-point:ON ACTION controlp INFIELD xmeb006 name="input.c.page1.xmeb006"
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
	   		LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmeb_d[l_ac].xmeb006             #給予default值
            #給予arg
            LET g_qryparam.arg1 = '221'
            CALL q_oocq002()                                #呼叫開窗
            LET g_xmeb_d[l_ac].xmeb006 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmeb_d[l_ac].xmeb006 TO xmeb006              #顯示到畫面上
            CALL s_desc_get_acc_desc('221',g_xmeb_d[l_ac].xmeb006)
                 RETURNING g_xmeb_d[l_ac].xmeb006_desc
            NEXT FIELD xmeb006                          #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmeb007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb007
            #add-point:ON ACTION controlp INFIELD xmeb007 name="input.c.page1.xmeb007"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmeb014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb014
            #add-point:ON ACTION controlp INFIELD xmeb014 name="input.c.page1.xmeb014"
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
	   		LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmeb_d[l_ac].xmeb014             #給予default值
            #給予arg
            LET g_qryparam.arg1 = g_gzcb004
            CALL q_oocq002()                                #呼叫開窗
            LET g_xmeb_d[l_ac].xmeb014 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmeb_d[l_ac].xmeb014 TO xmeb014              #顯示到畫面上
            CALL s_desc_get_acc_desc(g_gzcb004,g_xmeb_d[l_ac].xmeb014)
                 RETURNING g_xmeb_d[l_ac].xmeb014_desc
            NEXT FIELD xmeb014                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.page1.xmeb008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb008
            #add-point:ON ACTION controlp INFIELD xmeb008 name="input.c.page1.xmeb008"
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmeb_d[l_ac].xmeb008             #給予default值
            #給予arg
            LET g_qryparam.arg1 = g_xmeb_d[l_ac].xmeb002
            CALL q_imao002()                                #呼叫開窗
            LET g_xmeb_d[l_ac].xmeb008 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmeb_d[l_ac].xmeb008 TO xmeb008              #顯示到畫面上
            CALL s_desc_get_unit_desc(g_xmeb_d[l_ac].xmeb008) RETURNING g_xmeb_d[l_ac].xmeb008_desc
            DISPLAY BY NAME g_xmeb_d[l_ac].xmeb008_desc 
            NEXT FIELD xmeb008                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.page1.xmeb009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb009
            #add-point:ON ACTION controlp INFIELD xmeb009 name="input.c.page1.xmeb009"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmeb010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb010
            #add-point:ON ACTION controlp INFIELD xmeb010 name="input.c.page1.xmeb010"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmeb024
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb024
            #add-point:ON ACTION controlp INFIELD xmeb024 name="input.c.page1.xmeb024"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmeb011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb011
            #add-point:ON ACTION controlp INFIELD xmeb011 name="input.c.page1.xmeb011"
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
	   		LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmeb_d[l_ac].xmeb011             #給予default值
            LET g_qryparam.default2 = g_xmeb_d[l_ac].xmeb011_desc #稅別代碼
            LET g_qryparam.where = " oodb001 = '",l_ooef019,"'"
            #給予arg
            CALL q_oodb002_4()                                #呼叫開窗
            LET g_xmeb_d[l_ac].xmeb011 = g_qryparam.return1              #將開窗取得的值回傳到變數
            LET g_xmeb_d[l_ac].xmeb011_desc = g_qryparam.return2 #稅別代碼
            DISPLAY g_xmeb_d[l_ac].xmeb011 TO xmeb011              #顯示到畫面上
            DISPLAY g_xmeb_d[l_ac].xmeb011_desc TO xmeb011_desc #稅別代碼
            NEXT FIELD xmeb011                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.page1.xmeb013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb013
            #add-point:ON ACTION controlp INFIELD xmeb013 name="input.c.page1.xmeb013"
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
	   		LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmeb_d[l_ac].xmeb013             #給予default值
            #給予arg
            LET g_qryparam.arg1 = '263'
            CALL q_oocq002()                                #呼叫開窗
            LET g_xmeb_d[l_ac].xmeb013 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmeb_d[l_ac].xmeb013 TO xmeb013              #顯示到畫面上
            NEXT FIELD xmeb013                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.page1.xmeb004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb004
            #add-point:ON ACTION controlp INFIELD xmeb004 name="input.c.page1.xmeb004"
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
	   		LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmeb_d[l_ac].xmeb004             #給予default值
            CALL q_imaf001_12()                                #呼叫開窗
            LET g_xmeb_d[l_ac].xmeb004 = g_qryparam.return1              #將開窗取得的值回傳到變數
            #LET g_xmeb_d[l_ac].imaal003 = g_qryparam.return2 #品名
            DISPLAY g_xmeb_d[l_ac].xmeb004 TO xmeb004              #顯示到畫面上
            #DISPLAY g_xmeb_d[l_ac].imaal003 TO imaal003 #品名
            NEXT FIELD xmeb004                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.page1.xmeb030
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb030
            #add-point:ON ACTION controlp INFIELD xmeb030 name="input.c.page1.xmeb030"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmeb901
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb901
            #add-point:ON ACTION controlp INFIELD xmeb901 name="input.c.page1.xmeb901"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmeb902
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb902
            #add-point:ON ACTION controlp INFIELD xmeb902 name="input.c.page1.xmeb902"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmeb_d[l_ac].xmeb902             #給予default值
            #給予arg
            LET g_qryparam.arg1 = g_gzcb008
            CALL q_oocq002()                                             #呼叫開窗
            LET g_xmeb_d[l_ac].xmeb902 = g_qryparam.return1       
            DISPLAY g_xmeb_d[l_ac].xmeb902 TO xmeb902              
            CALL s_desc_get_acc_desc(g_gzcb008,g_xmeb_d[l_ac].xmeb902)
                 RETURNING g_xmeb_d[l_ac].xmeb902_desc
            NEXT FIELD xmeb902                                           #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.page1.xmeb903
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb903
            #add-point:ON ACTION controlp INFIELD xmeb903 name="input.c.page1.xmeb903"
   
            #END add-point
 
 
         #Ctrlp:input.c.page1.ooff013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD ooff013
            #add-point:ON ACTION controlp INFIELD ooff013 name="input.c.page1.ooff013"
            #161031-00025#22-s
            IF NOT cl_null(g_xmea_m.xmeadocno) AND l_ac > 0 THEN
               CALL aooi360_02('7',g_prog,g_xmea_m.xmeadocno,g_xmeb_d[l_ac].xmebseq,g_xmea_m.xmea900,'','','','','','','1')
               CALL s_aooi360_sel('7',g_prog,g_xmea_m.xmeadocno,g_xmeb_d[l_ac].xmebseq,g_xmea_m.xmea900,'','','','','','','1') RETURNING l_success,g_xmeb_d[l_ac].ooff013               
               IF g_xmeb_d[l_ac].ooff013 != g_xmeb_d_o.ooff013 THEN
                  IF g_xmeb_d[l_ac].xmeb901 = '1' THEN
                     LET g_xmeb_d[l_ac].xmeb901 = '2'
                  END IF
               END IF
               #將單身資料寫入歷程檔中
               IF NOT axmt450_xmeb_ins_xmed(g_xmeb_d[l_ac].*,g_xmeb2_d[l_ac].*) THEN
                  LET g_xmeb_d[l_ac].* = g_xmeb_d_t.*
               END IF  
            END IF
            #161031-00025#22-e
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_xmeb_d[l_ac].* = g_xmeb_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE axmt450_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_xmeb_d[l_ac].xmebseq 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_xmeb_d[l_ac].* = g_xmeb_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               IF g_xmeb_d[l_ac].xmeb901 = '1' THEN
                  LET g_xmeb_d[l_ac].xmeb901 = '2'
               END IF
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL axmt450_xmeb_t_mask_restore('restore_mask_o')
      
               UPDATE xmeb_t SET (xmebdocno,xmeb900,xmebsite,xmebseq,xmeb002,xmeb003,xmeb005,xmeb006, 
                   xmeb007,xmeb014,xmeb008,xmeb009,xmeb010,xmeb024,xmeb011,xmeb012,xmeb017,xmeb018,xmeb019, 
                   xmeb013,xmeb004,xmeb030,xmeb901,xmeb902,xmeb903,xmeb001,xmeb020,xmeb021,xmeb022,xmeb023) = (g_xmea_m.xmeadocno, 
                   g_xmea_m.xmea900,g_xmeb_d[l_ac].xmebsite,g_xmeb_d[l_ac].xmebseq,g_xmeb_d[l_ac].xmeb002, 
                   g_xmeb_d[l_ac].xmeb003,g_xmeb_d[l_ac].xmeb005,g_xmeb_d[l_ac].xmeb006,g_xmeb_d[l_ac].xmeb007, 
                   g_xmeb_d[l_ac].xmeb014,g_xmeb_d[l_ac].xmeb008,g_xmeb_d[l_ac].xmeb009,g_xmeb_d[l_ac].xmeb010, 
                   g_xmeb_d[l_ac].xmeb024,g_xmeb_d[l_ac].xmeb011,g_xmeb_d[l_ac].xmeb012,g_xmeb_d[l_ac].xmeb017, 
                   g_xmeb_d[l_ac].xmeb018,g_xmeb_d[l_ac].xmeb019,g_xmeb_d[l_ac].xmeb013,g_xmeb_d[l_ac].xmeb004, 
                   g_xmeb_d[l_ac].xmeb030,g_xmeb_d[l_ac].xmeb901,g_xmeb_d[l_ac].xmeb902,g_xmeb_d[l_ac].xmeb903, 
                   g_xmeb_d[l_ac].xmeb001,g_xmeb2_d[l_ac].xmeb020,g_xmeb2_d[l_ac].xmeb021,g_xmeb2_d[l_ac].xmeb022, 
                   g_xmeb2_d[l_ac].xmeb023)
                WHERE xmebent = g_enterprise AND xmebdocno = g_xmea_m.xmeadocno 
                  AND xmeb900 = g_xmea_m.xmea900 
 
                  AND xmebseq = g_xmeb_d_t.xmebseq #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_xmeb_d[l_ac].* = g_xmeb_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmeb_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_xmeb_d[l_ac].* = g_xmeb_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmeb_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmea_m.xmeadocno
               LET gs_keys_bak[1] = g_xmeadocno_t
               LET gs_keys[2] = g_xmea_m.xmea900
               LET gs_keys_bak[2] = g_xmea900_t
               LET gs_keys[3] = g_xmeb_d[g_detail_idx].xmebseq
               LET gs_keys_bak[3] = g_xmeb_d_t.xmebseq
               CALL axmt450_update_b('xmeb_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL axmt450_xmeb_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_xmeb_d[g_detail_idx].xmebseq = g_xmeb_d_t.xmebseq 
 
                  ) THEN
                  LET gs_keys[01] = g_xmea_m.xmeadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_xmea_m.xmea900
 
                  LET gs_keys[gs_keys.getLength()+1] = g_xmeb_d_t.xmebseq
 
                  CALL axmt450_key_update_b(gs_keys,'xmeb_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_xmea_m),util.JSON.stringify(g_xmeb_d_t)
               LET g_log2 = util.JSON.stringify(g_xmea_m),util.JSON.stringify(g_xmeb_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               IF g_xmeb_d[l_ac].xmebseq != g_xmeb_d_t.xmebseq THEN
                  UPDATE xmec_t
                     SET xmecseq = g_xmeb_d[l_ac].xmebseq
                   WHERE xmecent = g_enterprise
                     AND xmecdocno = g_xmea_m.xmeadocno
                     AND xmecseq = g_xmeb_d_t.xmebseq
                  IF SQLCA.SQLcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "xmec_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                  END IF
               END IF
               IF g_xmeb_d[l_ac].xmeb024 = 'N' THEN
                  DELETE FROM xmec_t
                   WHERE xmecent = g_enterprise
                    AND xmecdocno = g_xmea_m.xmeadocno
                    AND xmecseq = g_xmeb_d[l_ac].xmebseq
                  IF SQLCA.SQLcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "xmec_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                  END IF
               END IF
               #161031-00025#22-s
               CALL s_aooi360_del('7',g_prog,g_xmea_m.xmeadocno,g_xmeb_d_t.xmebseq,g_xmea_m.xmea900,'','','','','','','1') RETURNING l_success
               IF NOT cl_null(g_xmeb_d[l_ac].ooff013) THEN
                  CALL s_aooi360_gen('7',g_prog,g_xmea_m.xmeadocno,g_xmeb_d[l_ac].xmebseq,g_xmea_m.xmea900,'','','','','','','1',g_xmeb_d[l_ac].ooff013) RETURNING l_success
               END IF
               #161031-00025#22-e
               #將單身資料寫入歷程檔中
               IF NOT axmt450_xmeb_ins_xmed(g_xmeb_d[l_ac].*,g_xmeb2_d[l_ac].*) THEN
                  LET g_xmeb_d[l_ac].* = g_xmeb_d_t.*
                  CALL s_transaction_end('N','0')
               END IF               
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
 
            #end add-point
            CALL axmt450_unlock_b("xmeb_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
            
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_xmeb_d[li_reproduce_target].* = g_xmeb_d[li_reproduce].*
               LET g_xmeb2_d[li_reproduce_target].* = g_xmeb2_d[li_reproduce].*
 
               LET g_xmeb_d[li_reproduce_target].xmebseq = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_xmeb_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_xmeb_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_xmeb2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = FALSE, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = FALSE,
                 APPEND ROW = FALSE)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body2.before_input2"
            
            #end add-point
            
            CALL axmt450_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_xmeb2_d.getLength()
            #add-point:資料輸入前 name="input.body2.before_input"
            
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmeb2_d[l_ac].* TO NULL 
            INITIALIZE g_xmeb2_d_t.* TO NULL 
            INITIALIZE g_xmeb2_d_o.* TO NULL 
            #公用欄位給值(單身2)
            
            #自定義預設值(單身2)
            
            #add-point:modify段before備份 name="input.body2.insert.before_bak"
            
            #end add-point
            LET g_xmeb2_d_t.* = g_xmeb2_d[l_ac].*     #新輸入資料
            LET g_xmeb2_d_o.* = g_xmeb2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axmt450_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body2.insert.after_set_entry_b"
            
            #end add-point
            CALL axmt450_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmeb_d[li_reproduce_target].* = g_xmeb_d[li_reproduce].*
               LET g_xmeb2_d[li_reproduce_target].* = g_xmeb2_d[li_reproduce].*
 
               LET g_xmeb2_d[li_reproduce_target].xmebseq = NULL
            END IF
            
 
 
            #add-point:modify段before insert name="input.body2.before_insert"
            
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body2.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[2] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 2
            CALL axmt450_b_fill2('2')
  
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN axmt450_cl USING g_enterprise,g_xmea_m.xmeadocno,g_xmea_m.xmea900
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axmt450_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE axmt450_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_xmeb2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xmeb2_d[l_ac].xmebseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_xmeb2_d_t.* = g_xmeb2_d[l_ac].*  #BACKUP
               LET g_xmeb2_d_o.* = g_xmeb2_d[l_ac].*  #BACKUP
               CALL axmt450_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body2.after_set_entry_b"
               
               #end add-point  
               CALL axmt450_set_no_entry_b(l_cmd)
               IF NOT axmt450_lock_b("xmeb_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axmt450_bcl INTO g_xmeb_d[l_ac].xmebsite,g_xmeb_d[l_ac].xmebseq,g_xmeb_d[l_ac].xmeb002, 
                      g_xmeb_d[l_ac].xmeb003,g_xmeb_d[l_ac].xmeb005,g_xmeb_d[l_ac].xmeb006,g_xmeb_d[l_ac].xmeb007, 
                      g_xmeb_d[l_ac].xmeb014,g_xmeb_d[l_ac].xmeb008,g_xmeb_d[l_ac].xmeb009,g_xmeb_d[l_ac].xmeb010, 
                      g_xmeb_d[l_ac].xmeb024,g_xmeb_d[l_ac].xmeb011,g_xmeb_d[l_ac].xmeb012,g_xmeb_d[l_ac].xmeb017, 
                      g_xmeb_d[l_ac].xmeb018,g_xmeb_d[l_ac].xmeb019,g_xmeb_d[l_ac].xmeb013,g_xmeb_d[l_ac].xmeb004, 
                      g_xmeb_d[l_ac].xmeb030,g_xmeb_d[l_ac].xmeb901,g_xmeb_d[l_ac].xmeb902,g_xmeb_d[l_ac].xmeb903, 
                      g_xmeb_d[l_ac].xmeb001,g_xmeb2_d[l_ac].xmebseq,g_xmeb2_d[l_ac].xmeb020,g_xmeb2_d[l_ac].xmeb021, 
                      g_xmeb2_d[l_ac].xmeb022,g_xmeb2_d[l_ac].xmeb023
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_xmeb2_d_mask_o[l_ac].* =  g_xmeb2_d[l_ac].*
                  CALL axmt450_xmeb_t_mask()
                  LET g_xmeb2_d_mask_n[l_ac].* =  g_xmeb2_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL axmt450_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body2.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
 
            #其他table進行lock
            
 
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body2.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body2.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前 name="input.body2.b_delete"
               
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_xmea_m.xmeadocno
               LET gs_keys[gs_keys.getLength()+1] = g_xmea_m.xmea900
               LET gs_keys[gs_keys.getLength()+1] = g_xmeb2_d_t.xmebseq
            
               #刪除同層單身
               IF NOT axmt450_delete_b('xmeb_t',gs_keys,"'2'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt450_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT axmt450_key_delete_b(gs_keys,'xmeb_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt450_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
 
               
               #add-point:單身2刪除中 name="input.body2.m_delete"
               
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE axmt450_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身2刪除後 name="input.body2.a_delete"
               
               #end add-point
               LET l_count = g_xmeb_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body2.after_delete"
               
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_xmeb2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前 name="input.body2.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM xmeb_t 
             WHERE xmebent = g_enterprise AND xmebdocno = g_xmea_m.xmeadocno
               AND xmeb900 = g_xmea_m.xmea900
               AND xmebseq = g_xmeb2_d[l_ac].xmebseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前 name="input.body2.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmea_m.xmeadocno
               LET gs_keys[2] = g_xmea_m.xmea900
               LET gs_keys[3] = g_xmeb2_d[g_detail_idx].xmebseq
               CALL axmt450_insert_b('xmeb_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2 name="input.body2.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_xmeb_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmeb_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axmt450_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body2.after_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_xmeb2_d[l_ac].* = g_xmeb2_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE axmt450_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_xmeb2_d[l_ac].* = g_xmeb2_d_t.*
            ELSE
               #add-point:單身page2修改前 name="input.body2.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               #將遮罩欄位還原
               CALL axmt450_xmeb_t_mask_restore('restore_mask_o')
                              
               UPDATE xmeb_t SET (xmebdocno,xmeb900,xmebsite,xmebseq,xmeb002,xmeb003,xmeb005,xmeb006, 
                   xmeb007,xmeb014,xmeb008,xmeb009,xmeb010,xmeb024,xmeb011,xmeb012,xmeb017,xmeb018,xmeb019, 
                   xmeb013,xmeb004,xmeb030,xmeb901,xmeb902,xmeb903,xmeb001,xmeb020,xmeb021,xmeb022,xmeb023) = (g_xmea_m.xmeadocno, 
                   g_xmea_m.xmea900,g_xmeb_d[l_ac].xmebsite,g_xmeb_d[l_ac].xmebseq,g_xmeb_d[l_ac].xmeb002, 
                   g_xmeb_d[l_ac].xmeb003,g_xmeb_d[l_ac].xmeb005,g_xmeb_d[l_ac].xmeb006,g_xmeb_d[l_ac].xmeb007, 
                   g_xmeb_d[l_ac].xmeb014,g_xmeb_d[l_ac].xmeb008,g_xmeb_d[l_ac].xmeb009,g_xmeb_d[l_ac].xmeb010, 
                   g_xmeb_d[l_ac].xmeb024,g_xmeb_d[l_ac].xmeb011,g_xmeb_d[l_ac].xmeb012,g_xmeb_d[l_ac].xmeb017, 
                   g_xmeb_d[l_ac].xmeb018,g_xmeb_d[l_ac].xmeb019,g_xmeb_d[l_ac].xmeb013,g_xmeb_d[l_ac].xmeb004, 
                   g_xmeb_d[l_ac].xmeb030,g_xmeb_d[l_ac].xmeb901,g_xmeb_d[l_ac].xmeb902,g_xmeb_d[l_ac].xmeb903, 
                   g_xmeb_d[l_ac].xmeb001,g_xmeb2_d[l_ac].xmeb020,g_xmeb2_d[l_ac].xmeb021,g_xmeb2_d[l_ac].xmeb022, 
                   g_xmeb2_d[l_ac].xmeb023) #自訂欄位頁簽
                WHERE xmebent = g_enterprise AND xmebdocno = g_xmea_m.xmeadocno
                  AND xmeb900 = g_xmea_m.xmea900
                  AND xmebseq = g_xmeb2_d_t.xmebseq #項次 
                  
               #add-point:單身page2修改中 name="input.body2.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_xmeb2_d[l_ac].* = g_xmeb2_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmeb_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_xmeb2_d[l_ac].* = g_xmeb2_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmeb_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmea_m.xmeadocno
               LET gs_keys_bak[1] = g_xmeadocno_t
               LET gs_keys[2] = g_xmea_m.xmea900
               LET gs_keys_bak[2] = g_xmea900_t
               LET gs_keys[3] = g_xmeb2_d[g_detail_idx].xmebseq
               LET gs_keys_bak[3] = g_xmeb2_d_t.xmebseq
               CALL axmt450_update_b('xmeb_t',gs_keys,gs_keys_bak,"'2'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL axmt450_xmeb_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_xmeb2_d[g_detail_idx].xmebseq = g_xmeb2_d_t.xmebseq 
                  ) THEN
                  LET gs_keys[01] = g_xmea_m.xmeadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_xmea_m.xmea900
                  LET gs_keys[gs_keys.getLength()+1] = g_xmeb2_d_t.xmebseq
                  CALL axmt450_key_update_b(gs_keys,'xmeb_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_xmea_m),util.JSON.stringify(g_xmeb2_d_t)
               LET g_log2 = util.JSON.stringify(g_xmea_m),util.JSON.stringify(g_xmeb2_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後 name="input.body2.a_update"
               
               #end add-point
            END IF
         
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb0032
            
            #add-point:AFTER FIELD xmeb0032 name="input.a.page2.xmeb0032"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb0032
            #add-point:BEFORE FIELD xmeb0032 name="input.b.page2.xmeb0032"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmeb0032
            #add-point:ON CHANGE xmeb0032 name="input.g.page2.xmeb0032"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmeb0032_desc
            #add-point:BEFORE FIELD xmeb0032_desc name="input.b.page2.xmeb0032_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmeb0032_desc
            
            #add-point:AFTER FIELD xmeb0032_desc name="input.a.page2.xmeb0032_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmeb0032_desc
            #add-point:ON CHANGE xmeb0032_desc name="input.g.page2.xmeb0032_desc"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page2.xmeb0032
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb0032
            #add-point:ON ACTION controlp INFIELD xmeb0032 name="input.c.page2.xmeb0032"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.xmeb0032_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmeb0032_desc
            #add-point:ON ACTION controlp INFIELD xmeb0032_desc name="input.c.page2.xmeb0032_desc"
            
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row name="input.body2.after_row"
            
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_xmeb2_d[l_ac].* = g_xmeb2_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE axmt450_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL axmt450_unlock_b("xmeb_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2 name="input.body2.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body2.after_input"
            
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_xmeb_d[li_reproduce_target].* = g_xmeb_d[li_reproduce].*
               LET g_xmeb2_d[li_reproduce_target].* = g_xmeb2_d[li_reproduce].*
 
               LET g_xmeb2_d[li_reproduce_target].xmebseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_xmeb2_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_xmeb2_d.getLength()+1
            END IF
            
      END INPUT
 
      
 
 
      DISPLAY ARRAY g_xmeb3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW 
            CALL axmt450_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail3")
            LET g_detail_idx2 = l_ac
            
            #add-point:page3, before row動作 name="input.body3.before_row"
            
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身2則控制筆數位置
            IF g_loc = 'd' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue(""))
            END IF
            LET g_loc = 'd'
            LET l_ac = DIALOG.getCurrentRow("s_detail3")
            CALL axmt450_idx_chk()
            LET g_current_page = 3
      
         #自訂ACTION(detail_show,page_3)
         
      
         #add-point:page3自定義行為 name="input.body3.action"
         
         #end add-point
      
      END DISPLAY
 
 
{</section>}
 
{<section id="axmt450.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      SUBDIALOG aoo_aooi360_01.aooi360_01_input   #备注单身  #161031-00025#22
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         #161031-00025#22-s
         #為了修改功能doubleClick可以直接進入單身, 需指定要進入哪一個單身
         IF NOT cl_null(p_cmd) AND p_cmd != 'a' THEN
            CASE g_aw
               WHEN "s_detail1_aooi360_01"
                  NEXT FIELD ooff012     
            END CASE
         END IF
         #161031-00025#22-e
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1','2',"))      
         CALL DIALOG.setCurrentRow("s_detail2",g_idx_group.getValue("'3',"))
         CALL DIALOG.setCurrentRow("s_detail3",g_idx_group.getValue(""))
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            
            #end add-point  
            NEXT FIELD xmeadocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xmebsite
               WHEN "s_detail2"
                  NEXT FIELD xmebseq_2
               WHEN "s_detail3"
                  NEXT FIELD xmecsite
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         #單頭備註寫入變更歷程檔xmed_t
         CALL axmt450_ooff_ins_xmed() RETURNING l_success   #161031-00025#22 add
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   IF INT_FLAG AND l_ac > 0 THEN
      DELETE FROM xmec_t
       WHERE xmecent = g_enterprise
         AND xmecdocno = g_xmea_m.xmeadocno
         AND xmecseq = g_xmeb_d[l_ac].xmebseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "xmec_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()
         CALL s_transaction_end('N','0')
      END IF
   END IF
   #end add-point    
 
END FUNCTION
 
{</section>}
 
{<section id="axmt450.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION axmt450_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   DEFINE l_n       LIKE type_t.num5 
   DEFINE l_success LIKE type_t.num5

   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL axmt450_b_fill() #單身填充
      CALL axmt450_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL axmt450_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
   CALL s_aooi200_get_slip_desc(g_xmea_m.xmeadocno) RETURNING g_xmea_m.xmeadocno_desc
   
   CALL s_desc_get_tax_desc1(g_site,g_xmea_m.xmea006) RETURNING g_xmea_m.xmea006_desc

   CALL s_desc_get_acc_desc(g_gzcb008,g_xmea_m.xmea903) RETURNING g_xmea_m.xmea903_desc

   #end add-point
   
   #遮罩相關處理
   LET g_xmea_m_mask_o.* =  g_xmea_m.*
   CALL axmt450_xmea_t_mask()
   LET g_xmea_m_mask_n.* =  g_xmea_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xmea_m.xmeadocno,g_xmea_m.xmea900,g_xmea_m.xmeadocno_desc,g_xmea_m.xmea901,g_xmea_m.xmea902, 
       g_xmea_m.xmea000,g_xmea_m.xmeadocdt,g_xmea_m.xmea002,g_xmea_m.xmea002_desc,g_xmea_m.xmea003,g_xmea_m.xmea003_desc, 
       g_xmea_m.xmeastus,g_xmea_m.xmea004,g_xmea_m.xmea004_desc,g_xmea_m.xmeaacti,g_xmea_m.xmea005,g_xmea_m.xmea005_desc, 
       g_xmea_m.xmea006,g_xmea_m.xmea006_desc,g_xmea_m.xmea007,g_xmea_m.xmea008,g_xmea_m.xmea009,g_xmea_m.xmea009_desc, 
       g_xmea_m.xmea011,g_xmea_m.xmea011_desc,g_xmea_m.xmea030,g_xmea_m.xmea016,g_xmea_m.xmea017,g_xmea_m.xmea018, 
       g_xmea_m.xmea019,g_xmea_m.xmea020,g_xmea_m.xmea010,g_xmea_m.xmea012,g_xmea_m.xmea001,g_xmea_m.xmea014, 
       g_xmea_m.xmea015,g_xmea_m.xmeasite,g_xmea_m.xmea903,g_xmea_m.xmea903_desc,g_xmea_m.xmea904,g_xmea_m.xmeaownid, 
       g_xmea_m.xmeaownid_desc,g_xmea_m.xmeaowndp,g_xmea_m.xmeaowndp_desc,g_xmea_m.xmeacrtid,g_xmea_m.xmeacrtid_desc, 
       g_xmea_m.xmeacrtdp,g_xmea_m.xmeacrtdp_desc,g_xmea_m.xmeacrtdt,g_xmea_m.xmeamodid,g_xmea_m.xmeamodid_desc, 
       g_xmea_m.xmeamoddt,g_xmea_m.xmeacnfid,g_xmea_m.xmeacnfid_desc,g_xmea_m.xmeacnfdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_xmea_m.xmeastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_xmeb_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
      CALL s_desc_get_tax_desc1(g_site,g_xmeb_d[l_ac].xmeb011)
           RETURNING g_xmeb_d[l_ac].xmeb011_desc
      CALL s_feature_description(g_xmeb_d[l_ac].xmeb002,g_xmeb_d[l_ac].xmeb003)
           RETURNING l_success,g_xmeb_d[l_ac].xmeb003_desc
      CALL s_desc_get_acc_desc(g_gzcb004,g_xmeb_d[l_ac].xmeb014)
           RETURNING g_xmeb_d[l_ac].xmeb014_desc
      CALL s_desc_get_acc_desc(g_gzcb008,g_xmeb_d[l_ac].xmeb902)
           RETURNING g_xmeb_d[l_ac].xmeb902_desc

      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_xmeb2_d.getLength()
      #add-point:show段單身reference name="show.body2.reference"
      LET g_xmeb2_d[l_ac].xmeb002_2_desc = g_xmeb_d[l_ac].xmeb002_desc
      LET g_xmeb2_d[l_ac].xmeb002_2_desc_desc = g_xmeb_d[l_ac].xmeb002_desc_desc
      LET g_xmeb2_d[l_ac].xmeb0032_desc = g_xmeb_d[l_ac].xmeb003_desc
      LET g_xmeb2_d[l_ac].xmeb0082_desc = g_xmeb_d[l_ac].xmeb008_desc

      #end add-point
   END FOR
   FOR l_ac = 1 TO g_xmeb3_d.getLength()
      #add-point:show段單身reference name="show.body3.reference"
      CALL s_desc_get_acc_desc(g_gzcb008,g_xmeb3_d[l_ac].xmec902)
           RETURNING g_xmeb3_d[l_ac].xmec902_desc

      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other name="show.other"
   
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL axmt450_detail_show()
 
   #add-point:show段之後 name="show.after"
   CALL axmt450_head_color()
   CALL s_hint_show('xmed_t','xmea_t','xmdx_t',g_xmea_m.xmeadocno,g_xmea_m.xmea900,0,'','')
   IF g_detail_idx > 0 THEN
      CALL s_hint_show('xmed_t','xmeb_t','xmdy_t',g_xmea_m.xmeadocno,g_xmea_m.xmea900,g_xmeb_d[g_detail_idx].xmebseq,'','')
      CALL s_hint_show('xmed_t','xmec_t','xmdz_t',g_xmea_m.xmeadocno,g_xmea_m.xmea900,g_xmeb3_d[g_detail_idx].xmecseq,g_xmeb3_d[g_detail_idx].xmecseq1,'')
   END IF   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="axmt450.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION axmt450_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
 
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="axmt450.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION axmt450_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   
   #end add-point   
   DEFINE l_newno     LIKE xmea_t.xmeadocno 
   DEFINE l_oldno     LIKE xmea_t.xmeadocno 
   DEFINE l_newno02     LIKE xmea_t.xmea900 
   DEFINE l_oldno02     LIKE xmea_t.xmea900 
 
   DEFINE l_master    RECORD LIKE xmea_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE xmeb_t.* #此變數樣板目前無使用
 
   DEFINE l_detail2    RECORD LIKE xmec_t.* #此變數樣板目前無使用
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_xmea_m.xmeadocno IS NULL
   OR g_xmea_m.xmea900 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_xmeadocno_t = g_xmea_m.xmeadocno
   LET g_xmea900_t = g_xmea_m.xmea900
 
    
   LET g_xmea_m.xmeadocno = ""
   LET g_xmea_m.xmea900 = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_xmea_m.xmeaownid = g_user
      LET g_xmea_m.xmeaowndp = g_dept
      LET g_xmea_m.xmeacrtid = g_user
      LET g_xmea_m.xmeacrtdp = g_dept 
      LET g_xmea_m.xmeacrtdt = cl_get_current()
      LET g_xmea_m.xmeamodid = g_user
      LET g_xmea_m.xmeamoddt = cl_get_current()
      LET g_xmea_m.xmeastus = 'N'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   LET g_xmea_m.xmeadocdt = g_today
   LET g_xmea_m.xmea002 = g_user
   LET g_xmea_m.xmea003 = g_dept
   CALL s_desc_get_person_desc(g_xmea_m.xmea002) RETURNING g_xmea_m.xmea002_desc
   CALL s_desc_get_department_desc(g_xmea_m.xmea003) RETURNING g_xmea_m.xmea003_desc
   DISPLAY BY NAME g_xmea_m.xmea002_desc,g_xmea_m.xmea003_desc
   LET g_xmea_m.xmeacnfid = ""
   LET g_xmea_m.xmeacnfdt = ""
   LET g_xmea_m.xmeastus = "N"
   LET g_xmea_m_t.* = g_xmea_m.*
   LET g_xmea_m_o.* = g_xmea_m.*

   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_xmea_m.xmeastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
      LET g_xmea_m.xmeadocno_desc = ''
   DISPLAY BY NAME g_xmea_m.xmeadocno_desc
 
   
   CALL axmt450_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_xmea_m.* TO NULL
      INITIALIZE g_xmeb_d TO NULL
      INITIALIZE g_xmeb2_d TO NULL
      INITIALIZE g_xmeb3_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      
      #end add-point
      CALL axmt450_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code = 9001 
      LET g_errparam.popup = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt450_set_act_visible()   
   CALL axmt450_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_xmeadocno_t = g_xmea_m.xmeadocno
   LET g_xmea900_t = g_xmea_m.xmea900
 
   
   #組合新增資料的條件
   LET g_add_browse = " xmeaent = " ||g_enterprise|| " AND",
                      " xmeadocno = '", g_xmea_m.xmeadocno, "' "
                      ," AND xmea900 = '", g_xmea_m.xmea900, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axmt450_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   CALL axmt450_idx_chk()
   
   LET g_data_owner = g_xmea_m.xmeaownid      
   LET g_data_dept  = g_xmea_m.xmeaowndp
   
   #功能已完成,通報訊息中心
   CALL axmt450_msgcentre_notify('reproduce')
 
END FUNCTION
 
{</section>}
 
{<section id="axmt450.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION axmt450_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE xmeb_t.* #此變數樣板目前無使用
 
   DEFINE l_detail2    RECORD LIKE xmec_t.* #此變數樣板目前無使用
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
 
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE axmt450_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xmeb_t
    WHERE xmebent = g_enterprise AND xmebdocno = g_xmeadocno_t
     AND xmeb900 = g_xmea900_t
 
    INTO TEMP axmt450_detail
 
   #將key修正為調整後   
   UPDATE axmt450_detail 
      #更新key欄位
      SET xmebdocno = g_xmea_m.xmeadocno
          , xmeb900 = g_xmea_m.xmea900
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO xmeb_t SELECT * FROM axmt450_detail
   
   IF SQLCA.SQLCODE THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmt450_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   
   #end add-point
 
 
   
   #add-point:單身複製前 name="detail_reproduce.body.table2.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xmec_t 
    WHERE xmecent = g_enterprise AND xmecdocno = g_xmeadocno_t
    AND xmec900 = g_xmea900_t   
 
    INTO TEMP axmt450_detail
 
   #將key修正為調整後   
   UPDATE axmt450_detail SET xmecdocno = g_xmea_m.xmeadocno
                                       , xmec900 = g_xmea_m.xmea900
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table2.b_update"
   
   #end add-point    
  
   #將資料塞回原table   
   INSERT INTO xmec_t SELECT * FROM axmt450_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table2.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmt450_detail
   
   LET g_data_owner = g_xmea_m.xmeaownid      
   LET g_data_dept  = g_xmea_m.xmeaowndp
   
   #add-point:單身複製後 name="detail_reproduce.body.table2.a_insert"
   CALL axmt450_upd_xmeb005() 
   CALL axmt450_recount('u')  

   #end add-point
 
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_xmeadocno_t = g_xmea_m.xmeadocno
   LET g_xmea900_t = g_xmea_m.xmea900
 
   
END FUNCTION
 
{</section>}
 
{<section id="axmt450.delete" >}
#+ 資料刪除
PRIVATE FUNCTION axmt450_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   DEFINE l_success  LIKE type_t.num5
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_xmea_m.xmeadocno IS NULL
   OR g_xmea_m.xmea900 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN axmt450_cl USING g_enterprise,g_xmea_m.xmeadocno,g_xmea_m.xmea900
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axmt450_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE axmt450_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axmt450_master_referesh USING g_xmea_m.xmeadocno,g_xmea_m.xmea900 INTO g_xmea_m.xmeadocno, 
       g_xmea_m.xmea900,g_xmea_m.xmea901,g_xmea_m.xmea902,g_xmea_m.xmea000,g_xmea_m.xmeadocdt,g_xmea_m.xmea002, 
       g_xmea_m.xmea003,g_xmea_m.xmeastus,g_xmea_m.xmea004,g_xmea_m.xmeaacti,g_xmea_m.xmea005,g_xmea_m.xmea006, 
       g_xmea_m.xmea007,g_xmea_m.xmea008,g_xmea_m.xmea009,g_xmea_m.xmea011,g_xmea_m.xmea030,g_xmea_m.xmea016, 
       g_xmea_m.xmea017,g_xmea_m.xmea018,g_xmea_m.xmea019,g_xmea_m.xmea020,g_xmea_m.xmea010,g_xmea_m.xmea012, 
       g_xmea_m.xmea001,g_xmea_m.xmea014,g_xmea_m.xmea015,g_xmea_m.xmeasite,g_xmea_m.xmea903,g_xmea_m.xmea904, 
       g_xmea_m.xmeaownid,g_xmea_m.xmeaowndp,g_xmea_m.xmeacrtid,g_xmea_m.xmeacrtdp,g_xmea_m.xmeacrtdt, 
       g_xmea_m.xmeamodid,g_xmea_m.xmeamoddt,g_xmea_m.xmeacnfid,g_xmea_m.xmeacnfdt,g_xmea_m.xmea002_desc, 
       g_xmea_m.xmea003_desc,g_xmea_m.xmea004_desc,g_xmea_m.xmea005_desc,g_xmea_m.xmea009_desc,g_xmea_m.xmea011_desc, 
       g_xmea_m.xmeaownid_desc,g_xmea_m.xmeaowndp_desc,g_xmea_m.xmeacrtid_desc,g_xmea_m.xmeacrtdp_desc, 
       g_xmea_m.xmeamodid_desc,g_xmea_m.xmeacnfid_desc
   
   
   #檢查是否允許此動作
   IF NOT axmt450_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_xmea_m_mask_o.* =  g_xmea_m.*
   CALL axmt450_xmea_t_mask()
   LET g_xmea_m_mask_n.* =  g_xmea_m.*
   
   CALL axmt450_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
      
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL axmt450_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_xmeadocno_t = g_xmea_m.xmeadocno
      LET g_xmea900_t = g_xmea_m.xmea900
 
 
      DELETE FROM xmea_t
       WHERE xmeaent = g_enterprise AND xmeadocno = g_xmea_m.xmeadocno
         AND xmea900 = g_xmea_m.xmea900
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
      
      #end add-point
       
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_xmea_m.xmeadocno,":",SQLERRMESSAGE  
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      #161031-00025#22-s
      #单头的aooi360_01的备注单身资料同步删除
      DELETE FROM ooff_t
       WHERE ooffent = g_enterprise AND ooff001 IN ('6','7')
         AND ooff002 = g_prog AND ooff003 = g_xmea_m.xmeadocno
         AND ooff005 = g_xmea_m.xmea900
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_xmea_m.xmeadocno,":",SQLERRMESSAGE  
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF   
      CALL aooi360_01_clear_detail()   #清除备注单身  
      #161031-00025#22-e
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      
      #end add-point
      
      DELETE FROM xmeb_t
       WHERE xmebent = g_enterprise AND xmebdocno = g_xmea_m.xmeadocno
         AND xmeb900 = g_xmea_m.xmea900
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
      CALL s_aooi360_del('6',g_prog,g_xmea_m.xmeadocno,'','','','','','','','','4') RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      #end add-point
         
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmeb_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      
      #end add-point
      
            
                                                               
 
 
      #add-point:單身刪除前 name="delete.body.b_delete2"
      
      #end add-point
      DELETE FROM xmec_t
       WHERE xmecent = g_enterprise AND
             xmecdocno = g_xmea_m.xmeadocno AND xmec900 = g_xmea_m.xmea900
      #add-point:單身刪除中 name="delete.body.m_delete2"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmec_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete2"
      #刪除變更歷程檔
      DELETE FROM xmed_t
       WHERE xmedent = g_enterprise
         AND xmeddocno = g_xmea_m.xmeadocno
         AND xmed001 = g_xmea_m.xmea900
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "xmed_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()
 
         CALL s_transaction_end('N','0')
         RETURN
      END IF          
      #end add-point
 
 
      
      #修改歷程記錄(刪除)
      LET g_log1 = util.JSON.stringify(g_xmea_m)   #(ver:78)
      IF NOT cl_log_modified_record(g_log1,'') THEN    #(ver:78)
         CLOSE axmt450_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_xmeb_d.clear() 
      CALL g_xmeb2_d.clear()       
      CALL g_xmeb3_d.clear()       
 
     
      CALL axmt450_ui_browser_refresh()  
      #CALL axmt450_ui_headershow()  
      #CALL axmt450_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL axmt450_browser_fill("")
         CALL axmt450_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE axmt450_cl
 
   #功能已完成,通報訊息中心
   CALL axmt450_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="axmt450.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION axmt450_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   DEFINE l_success  LIKE type_t.num5
   DEFINE l_i        LIKE type_t.num5   #161031-00025#22 add
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #清空第一階單身
   CALL g_xmeb_d.clear()
   CALL g_xmeb2_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   
   #end add-point
   
   #判斷是否填充
   IF axmt450_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT xmebsite,xmebseq,xmeb002,xmeb003,xmeb005,xmeb006,xmeb007,xmeb014, 
             xmeb008,xmeb009,xmeb010,xmeb024,xmeb011,xmeb012,xmeb017,xmeb018,xmeb019,xmeb013,xmeb004, 
             xmeb030,xmeb901,xmeb902,xmeb903,xmeb001,xmebseq,xmeb020,xmeb021,xmeb022,xmeb023 ,t1.imaal003 , 
             t2.imaal004 ,t5.oocql004 ,t6.oocal003 ,t7.oocql004 ,t8.imaal004 ,t9.oocql004 FROM xmeb_t", 
                
                     " INNER JOIN xmea_t ON xmeaent = " ||g_enterprise|| " AND xmeadocno = xmebdocno ",
                     " AND xmea900 = xmeb900 ",
 
                     #"",
                     " LEFT JOIN xmec_t ON xmebent = xmecent AND xmebdocno = xmecdocno AND xmeb900 = xmec900 AND xmebseq = xmecseq ",
                     "",
                     #下層單身所需的join條件
                     " ",
 
 
                                    " LEFT JOIN imaal_t t1 ON t1.imaalent="||g_enterprise||" AND t1.imaal001=xmeb002 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t2 ON t2.imaalent="||g_enterprise||" AND t2.imaal001=xmeb002 AND t2.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t5 ON t5.oocqlent="||g_enterprise||" AND t5.oocql001='221' AND t5.oocql002=xmeb006 AND t5.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t6 ON t6.oocalent="||g_enterprise||" AND t6.oocal001=xmeb008 AND t6.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t7 ON t7.oocqlent="||g_enterprise||" AND t7.oocql001='263' AND t7.oocql002=xmeb013 AND t7.oocql003='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t8 ON t8.imaalent="||g_enterprise||" AND t8.imaal001=xmeb002 AND t8.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t9 ON t9.oocqlent="||g_enterprise||" AND t9.oocql001='221' AND t9.oocql002=xmeb006 AND t9.oocql003='"||g_dlang||"' ",
 
                     " WHERE xmebent=? AND xmebdocno=? AND xmeb900=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         #161031-00025#22-s
         LET g_sql = "SELECT  DISTINCT xmebsite,xmebseq,xmeb002,xmeb003,xmeb005,xmeb006,xmeb007,xmeb014, 
             xmeb008,xmeb009,xmeb010,xmeb024,xmeb011,xmeb012,xmeb017,xmeb018,xmeb019,xmeb013,xmeb004, 
             xmeb030,xmeb901,xmeb902,xmeb903,xmeb001,xmebseq,xmeb020,xmeb021,xmeb022,xmeb023 ,t1.imaal003 , 
             t2.imaal004 ,t5.oocql004 ,t6.oocal003 ,t7.oocql004 ,t8.imaal004 ,t9.oocql004 FROM xmeb_t", 
                
                     " INNER JOIN xmea_t ON xmeaent = " ||g_enterprise|| " AND xmeadocno = xmebdocno ",
                     " AND xmea900 = xmeb900 ",
 
                     #"",
                     " LEFT JOIN xmec_t ON xmebent = xmecent AND xmebdocno = xmecdocno AND xmeb900 = xmec900 AND xmebseq = xmecseq ",
                     "",
                     #下層單身所需的join條件
                     " ",
 
 
                                    " LEFT JOIN imaal_t t1 ON t1.imaalent="||g_enterprise||" AND t1.imaal001=xmeb002 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t2 ON t2.imaalent="||g_enterprise||" AND t2.imaal001=xmeb002 AND t2.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t5 ON t5.oocqlent="||g_enterprise||" AND t5.oocql001='221' AND t5.oocql002=xmeb006 AND t5.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t6 ON t6.oocalent="||g_enterprise||" AND t6.oocal001=xmeb008 AND t6.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t7 ON t7.oocqlent="||g_enterprise||" AND t7.oocql001='263' AND t7.oocql002=xmeb013 AND t7.oocql003='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t8 ON t8.imaalent="||g_enterprise||" AND t8.imaal001=xmeb002 AND t8.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t9 ON t9.oocqlent="||g_enterprise||" AND t9.oocql001='221' AND t9.oocql002=xmeb006 AND t9.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooff_t  ON ooffent="||g_enterprise||" AND ooff002 = '",g_prog,"' AND ooff003 = xmebdocno AND ooff004 = xmebseq AND ooff005 = xmeb900 ",
               " WHERE xmebent=? AND xmebdocno=? AND xmeb900=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #161031-00025#22-e 
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
            IF NOT cl_null(g_wc2_table2) THEN 
      LET g_sql = g_sql CLIPPED," AND ", g_wc2_table2 CLIPPED
   END IF 
 
         
         LET g_sql = g_sql, " ORDER BY xmeb_t.xmebseq"
         
         #add-point:單身填充控制 name="b_fill.sql"
 
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axmt450_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR axmt450_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
   #  OPEN b_fill_cs USING g_enterprise,g_xmea_m.xmeadocno,g_xmea_m.xmea900   #(ver:78)
                                               
      FOREACH b_fill_cs USING g_enterprise,g_xmea_m.xmeadocno,g_xmea_m.xmea900 INTO g_xmeb_d[l_ac].xmebsite, 
          g_xmeb_d[l_ac].xmebseq,g_xmeb_d[l_ac].xmeb002,g_xmeb_d[l_ac].xmeb003,g_xmeb_d[l_ac].xmeb005, 
          g_xmeb_d[l_ac].xmeb006,g_xmeb_d[l_ac].xmeb007,g_xmeb_d[l_ac].xmeb014,g_xmeb_d[l_ac].xmeb008, 
          g_xmeb_d[l_ac].xmeb009,g_xmeb_d[l_ac].xmeb010,g_xmeb_d[l_ac].xmeb024,g_xmeb_d[l_ac].xmeb011, 
          g_xmeb_d[l_ac].xmeb012,g_xmeb_d[l_ac].xmeb017,g_xmeb_d[l_ac].xmeb018,g_xmeb_d[l_ac].xmeb019, 
          g_xmeb_d[l_ac].xmeb013,g_xmeb_d[l_ac].xmeb004,g_xmeb_d[l_ac].xmeb030,g_xmeb_d[l_ac].xmeb901, 
          g_xmeb_d[l_ac].xmeb902,g_xmeb_d[l_ac].xmeb903,g_xmeb_d[l_ac].xmeb001,g_xmeb2_d[l_ac].xmebseq, 
          g_xmeb2_d[l_ac].xmeb020,g_xmeb2_d[l_ac].xmeb021,g_xmeb2_d[l_ac].xmeb022,g_xmeb2_d[l_ac].xmeb023, 
          g_xmeb_d[l_ac].xmeb002_desc,g_xmeb_d[l_ac].xmeb002_desc_desc,g_xmeb_d[l_ac].xmeb006_desc,g_xmeb_d[l_ac].xmeb008_desc, 
          g_xmeb_d[l_ac].xmeb013_desc,g_xmeb2_d[l_ac].xmeb002_2_desc_desc,g_xmeb2_d[l_ac].xmeb0062_desc  
            #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         LET g_xmeb2_d[l_ac].xmebseq = g_xmeb_d[l_ac].xmebseq
         LET g_xmeb2_d[l_ac].xmeb0022 = g_xmeb_d[l_ac].xmeb002
         LET g_xmeb2_d[l_ac].xmeb0032 = g_xmeb_d[l_ac].xmeb003
         LET g_xmeb2_d[l_ac].xmeb0062 = g_xmeb_d[l_ac].xmeb006
         LET g_xmeb2_d[l_ac].xmeb0072 = g_xmeb_d[l_ac].xmeb007
         LET g_xmeb2_d[l_ac].xmeb0082 = g_xmeb_d[l_ac].xmeb008
         LET g_xmeb2_d[l_ac].xmeb0092 = g_xmeb_d[l_ac].xmeb009
         LET g_xmeb2_d[l_ac].xmeb0102 = g_xmeb_d[l_ac].xmeb010
         LET g_xmeb2_d[l_ac].xmeb0202 = g_xmeb_d[l_ac].xmeb009 - g_xmeb2_d[l_ac].xmeb020
         LET g_xmeb2_d[l_ac].xmeb0212 = g_xmeb_d[l_ac].xmeb017 - g_xmeb2_d[l_ac].xmeb021
         LET g_xmeb2_d[l_ac].xmeb0222 = g_xmeb_d[l_ac].xmeb018 - g_xmeb2_d[l_ac].xmeb022
         LET g_xmeb2_d[l_ac].xmeb0232 = g_xmeb_d[l_ac].xmeb019 - g_xmeb2_d[l_ac].xmeb023
         
         CALL s_desc_get_tax_desc1(g_site,g_xmeb_d[l_ac].xmeb011)
              RETURNING g_xmeb_d[l_ac].xmeb011_desc
         CALL s_feature_description(g_xmeb_d[l_ac].xmeb002,g_xmeb_d[l_ac].xmeb003)
              RETURNING l_success,g_xmeb_d[l_ac].xmeb003_desc
         CALL s_desc_get_acc_desc(g_gzcb004,g_xmeb_d[l_ac].xmeb014)
              RETURNING g_xmeb_d[l_ac].xmeb014_desc
         CALL s_desc_get_acc_desc(g_gzcb008,g_xmeb_d[l_ac].xmeb902)
              RETURNING g_xmeb_d[l_ac].xmeb902_desc
         LET g_xmeb2_d[l_ac].xmeb002_2_desc = g_xmeb_d[l_ac].xmeb002_desc
         LET g_xmeb2_d[l_ac].xmeb002_2_desc_desc = g_xmeb_d[l_ac].xmeb002_desc_desc
         LET g_xmeb2_d[l_ac].xmeb0032_desc = g_xmeb_d[l_ac].xmeb003_desc
         LET g_xmeb2_d[l_ac].xmeb0082_desc = g_xmeb_d[l_ac].xmeb008_desc
         #161031-00025#22-s
         CALL s_aooi360_sel('7',g_prog,g_xmea_m.xmeadocno,g_xmeb_d[l_ac].xmebseq,g_xmea_m.xmea900,'','','','','','','1') RETURNING l_success,g_xmeb_d[l_ac].ooff013
         #161031-00025#22-e
         SELECT pmao009,pmao010
           INTO g_xmeb_d[l_ac].xmeb005_desc,g_xmeb_d[l_ac].xmeb005_desc_desc
           FROM pmao_t
          WHERE pmaoent = g_enterprise
            AND pmao001 = g_xmea_m.xmea004
            AND pmao002 = g_xmeb_d[l_ac].xmeb002
            AND pmao003 = g_xmeb_d[l_ac].xmeb003
            AND pmao004 = g_xmeb_d[l_ac].xmeb005    
            AND pmao000 = '2'    #161221-00064#15 add            
         #單身文字顏色顯示
         CALL axmt450_detail_color()              
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code = 9035 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   #161031-00025#22-s
   LET g_ooff001_d = '6'                  #6.單據單頭備註
   LET g_ooff002_d = g_prog
   LET g_ooff003_d = g_xmea_m.xmeadocno   #单号
   LET g_ooff004_d = '0'                  #项次
   LET g_ooff005_d = g_xmea_m.xmea900     #變更序
   LET g_ooff006_d = ' '
   LET g_ooff007_d = ' '
   LET g_ooff008_d = ' '
   LET g_ooff009_d = ' '
   LET g_ooff010_d = ' '
   LET g_ooff011_d = ' '
   CALL aooi360_01_b_fill(g_ooff001_d,g_ooff002_d,g_ooff003_d,g_ooff004_d,g_ooff005_d,g_ooff006_d,g_ooff007_d,g_ooff008_d,g_ooff009_d,g_ooff010_d,g_ooff011_d)   #备注单身 
   FOR l_i = 1 TO g_ooff_d4.getLength()
       #單身文字的顏色顯示
       CALL axmt450_ooff_color(l_i)
   END FOR   
   #161031-00025#22-e 
   #end add-point
   
   CALL g_xmeb_d.deleteElement(g_xmeb_d.getLength())
   CALL g_xmeb2_d.deleteElement(g_xmeb2_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE axmt450_pb
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_xmeb_d.getLength()
      LET g_xmeb_d_mask_o[l_ac].* =  g_xmeb_d[l_ac].*
      CALL axmt450_xmeb_t_mask()
      LET g_xmeb_d_mask_n[l_ac].* =  g_xmeb_d[l_ac].*
   END FOR
   
   LET g_xmeb2_d_mask_o.* =  g_xmeb2_d.*
   FOR l_ac = 1 TO g_xmeb2_d.getLength()
      LET g_xmeb2_d_mask_o[l_ac].* =  g_xmeb2_d[l_ac].*
      CALL axmt450_xmeb_t_mask()
      LET g_xmeb2_d_mask_n[l_ac].* =  g_xmeb2_d[l_ac].*
   END FOR
   LET g_xmeb3_d_mask_o.* =  g_xmeb3_d.*
   FOR l_ac = 1 TO g_xmeb3_d.getLength()
      LET g_xmeb3_d_mask_o[l_ac].* =  g_xmeb3_d[l_ac].*
      CALL axmt450_xmec_t_mask()
      LET g_xmeb3_d_mask_n[l_ac].* =  g_xmeb3_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
 
{</section>}
 
{<section id="axmt450.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION axmt450_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      
      #end add-point    
      DELETE FROM xmeb_t
       WHERE xmebent = g_enterprise AND
         xmebdocno = ps_keys_bak[1] AND xmeb900 = ps_keys_bak[2] AND xmebseq = ps_keys_bak[3]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_xmeb_d.deleteElement(li_idx) 
      END IF 
      IF ps_page <> "'2'" THEN 
         CALL g_xmeb2_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
 
   
   LET ls_group = "'3',"
   #判斷是否是同一群組的table2
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete2"
      
      #end add-point    
      DELETE FROM xmec_t
       WHERE xmecent = g_enterprise AND
             xmecdocno = ps_keys_bak[1] AND xmec900 = ps_keys_bak[2] AND xmecseq = ps_keys_bak[3] AND xmecseq1 = ps_keys_bak[4]
      #add-point:delete_b段刪除中 name="delete_b.m_delete2"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmec_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
    
      LET li_idx = g_detail_idx2
      IF ps_page <> "'3'" THEN 
         CALL g_xmeb3_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete2"
      
      #end add-point    
   END IF
 
 
   
   #add-point:delete_b段other name="delete_b.other"
   
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="axmt450.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION axmt450_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      
      #end add-point 
      INSERT INTO xmeb_t
                  (xmebent,
                   xmebdocno,xmeb900,
                   xmebseq
                   ,xmebsite,xmeb002,xmeb003,xmeb005,xmeb006,xmeb007,xmeb014,xmeb008,xmeb009,xmeb010,xmeb024,xmeb011,xmeb012,xmeb017,xmeb018,xmeb019,xmeb013,xmeb004,xmeb030,xmeb901,xmeb902,xmeb903,xmeb001,xmeb020,xmeb021,xmeb022,xmeb023) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_xmeb_d[g_detail_idx].xmebsite,g_xmeb_d[g_detail_idx].xmeb002,g_xmeb_d[g_detail_idx].xmeb003, 
                       g_xmeb_d[g_detail_idx].xmeb005,g_xmeb_d[g_detail_idx].xmeb006,g_xmeb_d[g_detail_idx].xmeb007, 
                       g_xmeb_d[g_detail_idx].xmeb014,g_xmeb_d[g_detail_idx].xmeb008,g_xmeb_d[g_detail_idx].xmeb009, 
                       g_xmeb_d[g_detail_idx].xmeb010,g_xmeb_d[g_detail_idx].xmeb024,g_xmeb_d[g_detail_idx].xmeb011, 
                       g_xmeb_d[g_detail_idx].xmeb012,g_xmeb_d[g_detail_idx].xmeb017,g_xmeb_d[g_detail_idx].xmeb018, 
                       g_xmeb_d[g_detail_idx].xmeb019,g_xmeb_d[g_detail_idx].xmeb013,g_xmeb_d[g_detail_idx].xmeb004, 
                       g_xmeb_d[g_detail_idx].xmeb030,g_xmeb_d[g_detail_idx].xmeb901,g_xmeb_d[g_detail_idx].xmeb902, 
                       g_xmeb_d[g_detail_idx].xmeb903,g_xmeb_d[g_detail_idx].xmeb001,g_xmeb2_d[g_detail_idx].xmeb020, 
                       g_xmeb2_d[g_detail_idx].xmeb021,g_xmeb2_d[g_detail_idx].xmeb022,g_xmeb2_d[g_detail_idx].xmeb023) 
 
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      
      #end add-point 
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmeb_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_xmeb_d.insertElement(li_idx) 
      END IF 
      IF ps_page <> "'2'" THEN 
         CALL g_xmeb2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
      
      #end add-point 
   END IF
   
 
   
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert2"
      
      #end add-point 
      INSERT INTO xmec_t
                  (xmecent,
                   xmecdocno,xmec900,xmecseq,
                   xmecseq1
                   ,xmecsite,xmec001,xmec002,xmec003,xmec004,xmec005,xmec901,xmec902,xmec903) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
                   ,g_xmeb3_d[g_detail_idx2].xmecsite,g_xmeb3_d[g_detail_idx2].xmec001,g_xmeb3_d[g_detail_idx2].xmec002, 
                       g_xmeb3_d[g_detail_idx2].xmec003,g_xmeb3_d[g_detail_idx2].xmec004,g_xmeb3_d[g_detail_idx2].xmec005, 
                       g_xmeb3_d[g_detail_idx2].xmec901,g_xmeb3_d[g_detail_idx2].xmec902,g_xmeb3_d[g_detail_idx2].xmec903) 
 
      #add-point:insert_b段資料新增中 name="insert_b.m_insert2"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmec_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx2
      IF ps_page <> "'3'" THEN 
         CALL g_xmeb3_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert2"
      
      #end add-point
   END IF
 
 
   
   #add-point:insert_b段other name="insert_b.other"
   
   #end add-point     
   
END FUNCTION
 
{</section>}
 
{<section id="axmt450.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION axmt450_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmeb_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      
      #end add-point 
      
      #將遮罩欄位還原
      CALL axmt450_xmeb_t_mask_restore('restore_mask_o')
               
      UPDATE xmeb_t 
         SET (xmebdocno,xmeb900,
              xmebseq
              ,xmebsite,xmeb002,xmeb003,xmeb005,xmeb006,xmeb007,xmeb014,xmeb008,xmeb009,xmeb010,xmeb024,xmeb011,xmeb012,xmeb017,xmeb018,xmeb019,xmeb013,xmeb004,xmeb030,xmeb901,xmeb902,xmeb903,xmeb001,xmeb020,xmeb021,xmeb022,xmeb023) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_xmeb_d[g_detail_idx].xmebsite,g_xmeb_d[g_detail_idx].xmeb002,g_xmeb_d[g_detail_idx].xmeb003, 
                  g_xmeb_d[g_detail_idx].xmeb005,g_xmeb_d[g_detail_idx].xmeb006,g_xmeb_d[g_detail_idx].xmeb007, 
                  g_xmeb_d[g_detail_idx].xmeb014,g_xmeb_d[g_detail_idx].xmeb008,g_xmeb_d[g_detail_idx].xmeb009, 
                  g_xmeb_d[g_detail_idx].xmeb010,g_xmeb_d[g_detail_idx].xmeb024,g_xmeb_d[g_detail_idx].xmeb011, 
                  g_xmeb_d[g_detail_idx].xmeb012,g_xmeb_d[g_detail_idx].xmeb017,g_xmeb_d[g_detail_idx].xmeb018, 
                  g_xmeb_d[g_detail_idx].xmeb019,g_xmeb_d[g_detail_idx].xmeb013,g_xmeb_d[g_detail_idx].xmeb004, 
                  g_xmeb_d[g_detail_idx].xmeb030,g_xmeb_d[g_detail_idx].xmeb901,g_xmeb_d[g_detail_idx].xmeb902, 
                  g_xmeb_d[g_detail_idx].xmeb903,g_xmeb_d[g_detail_idx].xmeb001,g_xmeb2_d[g_detail_idx].xmeb020, 
                  g_xmeb2_d[g_detail_idx].xmeb021,g_xmeb2_d[g_detail_idx].xmeb022,g_xmeb2_d[g_detail_idx].xmeb023)  
 
         WHERE xmebent = g_enterprise AND xmebdocno = ps_keys_bak[1] AND xmeb900 = ps_keys_bak[2] AND xmebseq = ps_keys_bak[3]
      #add-point:update_b段修改中 name="update_b.m_update"
      
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmeb_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmeb_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL axmt450_xmeb_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
 
   
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmec_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update2"
      
      #end add-point
      
      #將遮罩欄位還原
      CALL axmt450_xmec_t_mask_restore('restore_mask_o')
               
      UPDATE xmec_t 
         SET (xmecdocno,xmec900,xmecseq,
              xmecseq1
              ,xmecsite,xmec001,xmec002,xmec003,xmec004,xmec005,xmec901,xmec902,xmec903) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
              ,g_xmeb3_d[g_detail_idx2].xmecsite,g_xmeb3_d[g_detail_idx2].xmec001,g_xmeb3_d[g_detail_idx2].xmec002, 
                  g_xmeb3_d[g_detail_idx2].xmec003,g_xmeb3_d[g_detail_idx2].xmec004,g_xmeb3_d[g_detail_idx2].xmec005, 
                  g_xmeb3_d[g_detail_idx2].xmec901,g_xmeb3_d[g_detail_idx2].xmec902,g_xmeb3_d[g_detail_idx2].xmec903)  
 
         WHERE xmecent = g_enterprise AND xmecdocno = ps_keys_bak[1] AND xmec900 = ps_keys_bak[2] AND xmecseq = ps_keys_bak[3] AND xmecseq1 = ps_keys_bak[4]
      #add-point:update_b段修改中 name="update_b.m_update2"
 
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmec_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmec_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL axmt450_xmec_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update2"
 
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
 
   
   #add-point:update_b段other name="update_b.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axmt450.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION axmt450_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
   #如果是上層單身則進行update
   IF ps_table = 'xmeb_t' THEN
      #add-point:update_b段修改前 name="key_update_b.before_update2"
      
      #end add-point
      
      UPDATE xmec_t 
         SET (xmecdocno,xmec900,xmecseq) 
              = 
             (g_xmea_m.xmeadocno,g_xmea_m.xmea900,g_xmeb_d[g_detail_idx].xmebseq) 
         WHERE xmecent = g_enterprise AND
               xmecdocno = ps_keys_bak[1] AND xmec900 = ps_keys_bak[2] AND xmecseq = ps_keys_bak[3]
 
      #add-point:update_b段修改中 name="key_update_b.m_update2"
      
      #end add-point
              
      CASE
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmec_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
            #若有多語言table資料一同更新
            
      END CASE
      
      #add-point:update_b段修改後 name="key_update_b.after_update2"
      
      #end add-point
   END IF
 
 
   
END FUNCTION
 
{</section>}
 
{<section id="axmt450.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION axmt450_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
   #如果是上層單身則進行delete
   IF ps_table = 'xmeb_t' THEN
      #add-point:delete_b段修改前 name="key_delete_b.before_delete2"
      
      #end add-point
      
      DELETE FROM xmec_t 
            WHERE xmecent = g_enterprise AND
                  xmecdocno = ps_keys_bak[1] AND xmec900 = ps_keys_bak[2] AND xmecseq = ps_keys_bak[3]
 
      #add-point:delete_b段修改中 name="key_delete_b.m_delete2"
      
      #end add-point
              
      CASE
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmec_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            RETURN FALSE
         OTHERWISE
      END CASE
 
       
 
      #add-point:delete_b段修改後 name="key_delete_b.after_delete2"
      
      #end add-point
   END IF
 
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="axmt450.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION axmt450_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
    
   #先刷新資料
   #CALL axmt450_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1','2',"
   #僅鎖定自身table
   LET ls_group = "xmeb_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN axmt450_bcl USING g_enterprise,
                                       g_xmea_m.xmeadocno,g_xmea_m.xmea900,g_xmeb_d[g_detail_idx].xmebseq  
                                               
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "axmt450_bcl:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
 
   
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "xmec_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN axmt450_bcl2 USING g_enterprise,
                                             g_xmea_m.xmeadocno,g_xmea_m.xmea900,g_xmeb_d[g_detail_idx].xmebseq, 
 
                                             g_xmeb3_d[g_detail_idx2].xmecseq1
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "axmt450_bcl2:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
   #add-point:lock_b段other name="lock_b.other"
   
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axmt450.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION axmt450_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
    
   LET ls_group = "'1','2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmt450_bcl
   END IF
   
 
   
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmt450_bcl2
   END IF
 
 
 
   #add-point:unlock_b段other name="unlock_b.other"
   
   #end add-point  
 
END FUNCTION
 
{</section>}
 
{<section id="axmt450.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION axmt450_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   CALL cl_set_comp_entry("xmeadocno",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("xmeadocno,xmea900",TRUE)
      CALL cl_set_comp_entry("xmeadocdt",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   CALL cl_set_comp_entry("xmea004,xmea016,xmea017",TRUE)
   CALL cl_set_comp_entry("xmea005,xmea006,xmea009,xmea011",TRUE)
   CALL cl_set_comp_entry("xmea010,xmea012,xmea019,xmea020",TRUE)
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="axmt450.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION axmt450_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   DEFINE l_cnt   LIKE type_t.num5
   DEFINE l_i     LIKE type_t.num5

   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("xmeadocno,xmea900",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("xmeadocno",FALSE)
   END IF 
 
#  IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正) #(ver:78)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("xmeadocdt",FALSE)
      END IF
#  END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   LET l_cnt = 0
   IF p_cmd = 'a' THEN
      FOR l_i = 1 TO g_xmeb2_d.getLength()
         IF (g_xmeb2_d[l_i].xmeb020 > 0) OR (g_xmeb2_d[l_i].xmeb021 > 0) THEN
            LET l_cnt = 1
            EXIT FOR
         END IF
      END FOR
   ELSE
     #SELECT COUNT(*) INTO l_cnt  #161031-00025#22 mark
      SELECT COUNT(1) INTO l_cnt  #161031-00025#22 mod
        FROM xmeb_t
       WHERE xmebent = g_enterprise
         AND xmebdocno = g_xmea_m.xmeadocno
         AND xmeb900 = g_xmea_m.xmea900
         AND ((xmeb020 > 0) OR (xmeb021 > 0))
   END IF
   #修改客戶時需判斷該銷售合約是否已有轉訂單
   #若有則不允許修改客戶、合約對象管制、合約使用管制
   IF NOT cl_null(l_cnt) AND l_cnt > 0 THEN
      CALL cl_set_comp_entry("xmea004,xmea016,xmea017",FALSE)
      #修改幣別時需判斷該銷售合約是否已有轉訂單，若有且[C:限定幣別]='Y'，則不允許修改幣別
      IF g_xmea_m.xmea019 = 'Y' THEN
         CALL cl_set_comp_entry("xmea005",FALSE)
      END IF
      #修改稅別時需判斷該銷售合約是否已有轉訂單，若有且[C:限定稅別]='Y'，則不允許修改稅別
      IF g_xmea_m.xmea020 = 'Y' THEN
         CALL cl_set_comp_entry("xmea006",FALSE)
      END IF
      #修改收款條件時需判斷該銷售合約是否已有轉訂單，若有且[C:限定收款條件]='Y'，則不允許修改收款條件
      IF g_xmea_m.xmea010 = 'Y' THEN
         CALL cl_set_comp_entry("xmea009",FALSE)
      END IF
      #修改交易條件時需判斷該銷售合約是否已有轉訂單，若有且[C:限定交易條件]='Y'，則不允許修改交易條件
      IF g_xmea_m.xmea012 = 'Y' THEN
         CALL cl_set_comp_entry("xmea011",FALSE)
      END IF
   END IF

   #若收款條件沒有輸入時，則此欄位不可以勾選
   IF cl_null(g_xmea_m.xmea005) THEN 
      CALL cl_set_comp_entry("xmea019",FALSE)    
   END IF
   #若交易條件沒有輸入時，則此欄位不可以勾選
   IF cl_null(g_xmea_m.xmea006) THEN 
      CALL cl_set_comp_entry("xmea020",FALSE)    
   END IF  
   #若收款條件沒有輸入時，則此欄位不可以勾選
   IF cl_null(g_xmea_m.xmea009) THEN 
      CALL cl_set_comp_entry("xmea010",FALSE)
   END IF
   #若交易條件沒有輸入時，則此欄位不可以勾選
   IF cl_null(g_xmea_m.xmea011) THEN 
      CALL cl_set_comp_entry("xmea012",FALSE)
   END IF

   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="axmt450.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION axmt450_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
 
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   CALL cl_set_comp_entry("xmeb003",TRUE)
   CALL cl_set_comp_entry("xmeb002",TRUE)

   #end add-point  
END FUNCTION
 
{</section>}
 
{<section id="axmt450.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION axmt450_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
 
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   #當料件有使用產品特徵功能時產品特徵欄位才可輸入
   IF NOT axmt450_imaa005_exists() THEN 
      CALL cl_set_comp_entry("xmeb003",FALSE)
      LET g_xmeb_d[l_ac].xmeb003 = ' '
   END IF

   IF (g_xmeb2_d[l_ac].xmeb020 > 0) OR (g_xmeb2_d[l_ac].xmeb021 > 0) THEN
      CALL cl_set_comp_entry("xmeb002",FALSE)
   END IF

   #end add-point     
END FUNCTION
 
{</section>}
 
{<section id="axmt450.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION axmt450_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="axmt450.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION axmt450_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   #應用 a63 樣板自動產生(Version:1)
   IF g_xmea_m.xmeastus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF


   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="axmt450.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION axmt450_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="axmt450.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION axmt450_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="axmt450.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION axmt450_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
 
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " xmeadocno = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " xmea900 = '", g_argv[02], "' AND "
   END IF
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   LET ls_wc = ""
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = " xmeadocno = '",g_argv[02],"' AND "
   END IF
   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc, " xmea900 = '", g_argv[03], "' AND "
   END IF
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "xmea_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "xmeb_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   IF NOT cl_null(g_argv[01]) THEN
      IF g_argv[01] = '"2"' THEN 
         LET g_wc = g_wc, " AND xmea001 = 'Y' "
      ELSE
         LET g_wc = g_wc, " AND xmea001 = 'N' "
      END IF      
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE 
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " xmeasite = '",g_site,"' "
   ELSE
      LET g_wc = g_wc CLIPPED," AND xmeasite = '",g_site,"'"
   END IF    
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
 
{</section>}
 
{<section id="axmt450.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION axmt450_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   DEFINE l_success  LIKE type_t.num5
   DEFINE l_success2  LIKE type_t.num5
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   IF g_xmea_m.xmeastus MATCHES '[YX]' THEN
      RETURN
   END IF
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_xmea_m.xmeadocno IS NULL
      OR g_xmea_m.xmea900 IS NULL
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN axmt450_cl USING g_enterprise,g_xmea_m.xmeadocno,g_xmea_m.xmea900
   IF STATUS THEN
      CLOSE axmt450_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axmt450_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE axmt450_master_referesh USING g_xmea_m.xmeadocno,g_xmea_m.xmea900 INTO g_xmea_m.xmeadocno, 
       g_xmea_m.xmea900,g_xmea_m.xmea901,g_xmea_m.xmea902,g_xmea_m.xmea000,g_xmea_m.xmeadocdt,g_xmea_m.xmea002, 
       g_xmea_m.xmea003,g_xmea_m.xmeastus,g_xmea_m.xmea004,g_xmea_m.xmeaacti,g_xmea_m.xmea005,g_xmea_m.xmea006, 
       g_xmea_m.xmea007,g_xmea_m.xmea008,g_xmea_m.xmea009,g_xmea_m.xmea011,g_xmea_m.xmea030,g_xmea_m.xmea016, 
       g_xmea_m.xmea017,g_xmea_m.xmea018,g_xmea_m.xmea019,g_xmea_m.xmea020,g_xmea_m.xmea010,g_xmea_m.xmea012, 
       g_xmea_m.xmea001,g_xmea_m.xmea014,g_xmea_m.xmea015,g_xmea_m.xmeasite,g_xmea_m.xmea903,g_xmea_m.xmea904, 
       g_xmea_m.xmeaownid,g_xmea_m.xmeaowndp,g_xmea_m.xmeacrtid,g_xmea_m.xmeacrtdp,g_xmea_m.xmeacrtdt, 
       g_xmea_m.xmeamodid,g_xmea_m.xmeamoddt,g_xmea_m.xmeacnfid,g_xmea_m.xmeacnfdt,g_xmea_m.xmea002_desc, 
       g_xmea_m.xmea003_desc,g_xmea_m.xmea004_desc,g_xmea_m.xmea005_desc,g_xmea_m.xmea009_desc,g_xmea_m.xmea011_desc, 
       g_xmea_m.xmeaownid_desc,g_xmea_m.xmeaowndp_desc,g_xmea_m.xmeacrtid_desc,g_xmea_m.xmeacrtdp_desc, 
       g_xmea_m.xmeamodid_desc,g_xmea_m.xmeacnfid_desc
   
 
   #檢查是否允許此動作
   IF NOT axmt450_action_chk() THEN
      CLOSE axmt450_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_xmea_m.xmeadocno,g_xmea_m.xmea900,g_xmea_m.xmeadocno_desc,g_xmea_m.xmea901,g_xmea_m.xmea902, 
       g_xmea_m.xmea000,g_xmea_m.xmeadocdt,g_xmea_m.xmea002,g_xmea_m.xmea002_desc,g_xmea_m.xmea003,g_xmea_m.xmea003_desc, 
       g_xmea_m.xmeastus,g_xmea_m.xmea004,g_xmea_m.xmea004_desc,g_xmea_m.xmeaacti,g_xmea_m.xmea005,g_xmea_m.xmea005_desc, 
       g_xmea_m.xmea006,g_xmea_m.xmea006_desc,g_xmea_m.xmea007,g_xmea_m.xmea008,g_xmea_m.xmea009,g_xmea_m.xmea009_desc, 
       g_xmea_m.xmea011,g_xmea_m.xmea011_desc,g_xmea_m.xmea030,g_xmea_m.xmea016,g_xmea_m.xmea017,g_xmea_m.xmea018, 
       g_xmea_m.xmea019,g_xmea_m.xmea020,g_xmea_m.xmea010,g_xmea_m.xmea012,g_xmea_m.xmea001,g_xmea_m.xmea014, 
       g_xmea_m.xmea015,g_xmea_m.xmeasite,g_xmea_m.xmea903,g_xmea_m.xmea903_desc,g_xmea_m.xmea904,g_xmea_m.xmeaownid, 
       g_xmea_m.xmeaownid_desc,g_xmea_m.xmeaowndp,g_xmea_m.xmeaowndp_desc,g_xmea_m.xmeacrtid,g_xmea_m.xmeacrtid_desc, 
       g_xmea_m.xmeacrtdp,g_xmea_m.xmeacrtdp_desc,g_xmea_m.xmeacrtdt,g_xmea_m.xmeamodid,g_xmea_m.xmeamodid_desc, 
       g_xmea_m.xmeamoddt,g_xmea_m.xmeacnfid,g_xmea_m.xmeacnfid_desc,g_xmea_m.xmeacnfdt
 
   CASE g_xmea_m.xmeastus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "C"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_xmea_m.xmeastus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "C"
               HIDE OPTION "closed"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      CALL cl_set_act_visible("unconfirmed,invalid,confirmed",TRUE)
      #提交和抽單一開始先無條件關
      CALL cl_set_act_visible("signing,withdraw",FALSE)      
      CASE g_xmea_m.xmeastus
         WHEN "N"
            CALL cl_set_act_visible("unconfirmed,closed",FALSE)
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            IF cl_bpm_chk() THEN
               CALL cl_set_act_visible("signing",TRUE)
               CALL cl_set_act_visible("confirmed",FALSE)
            END IF

         WHEN "X"
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed",FALSE)

         WHEN "Y"
            CALL cl_set_act_visible("invalid,confirmed",FALSE)
            
         #已核准只能顯示確認;其餘應用功能皆隱藏
         WHEN "A"     
             CALL cl_set_act_visible("confirmed ",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid",FALSE)
             
         #保留修改的功能(如作廢)，隱藏其他應用功能
         WHEN "R"   
            CALL cl_set_act_visible("confirmed,unconfirmed",FALSE)
            
         WHEN "D"  
            CALL cl_set_act_visible("confirmed,unconfirmed",FALSE)
            
         #送簽中只能顯示抽單;其餘應用功能皆隱藏
         WHEN "W"   
            CALL cl_set_act_visible("withdraw",TRUE)  
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed",FALSE)            
      END CASE      
      #end add-point
      
      #應用 a36 樣板自動產生(Version:5)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT axmt450_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE axmt450_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT axmt450_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE axmt450_cl
            RETURN
         END IF
 
 
 
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.unconfirmed"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.confirmed"
 
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制 name="statechange.approved"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制 name="statechange.withdraw"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制 name="statechange.rejection"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制 name="statechange.signing"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION closed
         IF cl_auth_chk_act("closed") THEN
            LET lc_state = "C"
            #add-point:action控制 name="statechange.closed"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.invalid"
 
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "C"
      AND lc_state <> "X"
      ) OR 
      g_xmea_m.xmeastus = lc_state OR cl_null(lc_state) THEN
      CLOSE axmt450_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   CALL cl_err_collect_init()

   IF lc_state = 'Y' THEN
      CALL s_axmt450_conf_chk(g_xmea_m.xmeadocno,g_xmea_m.xmea900) RETURNING l_success
      IF l_success THEN
      CALL s_aooi360_gen('7','axmt440',g_xmea_m.xmeadocno,g_xmeb_d[l_ac].xmebseq,'','','','','','','','1',g_xmeb_d[l_ac].ooff013) RETURNING l_success2
      END IF
      IF NOT l_success THEN
         CALL cl_err_collect_show()
         CALL s_transaction_end('N','0')   #160812-00017#6 20160818 add by beckxie
         RETURN
      ELSE
         IF NOT cl_ask_confirm('aim-00108') THEN
            CALL cl_err_collect_show()
            CALL s_transaction_end('N','0')   #160812-00017#6 20160818 add by beckxie
            RETURN
         ELSE
            CALL s_transaction_begin()
            CALL s_axmt450_conf_upd(g_xmea_m.xmeadocno,g_xmea_m.xmea900) RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
               CALL cl_err_collect_show()
               RETURN
            ELSE
               LET g_xmea_m.xmeacnfid = g_user
               LET g_xmea_m.xmeacnfdt = cl_get_current()
               DISPLAY BY NAME g_xmea_m.xmeacnfid,g_xmea_m.xmeacnfdt
            END IF
            CALL s_transaction_end('Y','0')
         END IF
      END IF
   END IF

   IF lc_state = 'X' THEN
      CALL s_axmt450_invalid_chk(g_xmea_m.xmeadocno,g_xmea_m.xmea900) RETURNING l_success
      IF NOT l_success THEN
         CALL cl_err_collect_show()
         CALL s_transaction_end('N','0')   #160812-00017#6 20160818 add by beckxie
         RETURN
      ELSE
         IF NOT cl_ask_confirm('aim-00109') THEN
            CALL s_transaction_end('N','0')   #160812-00017#6 20160818 add by beckxie
            CALL cl_err_collect_show()
            RETURN
         ELSE
            CALL s_transaction_begin()
            CALL s_axmt450_invalid_upd(g_xmea_m.xmeadocno,g_xmea_m.xmea900) RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
               CALL cl_err_collect_show()
               RETURN
            END IF
            CALL s_transaction_end('Y','0')
         END IF
      END IF
   END IF  

   CALL cl_err_collect_show()

   #end add-point
   
   LET g_xmea_m.xmeamodid = g_user
   LET g_xmea_m.xmeamoddt = cl_get_current()
   LET g_xmea_m.xmeastus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE xmea_t 
      SET (xmeastus,xmeamodid,xmeamoddt) 
        = (g_xmea_m.xmeastus,g_xmea_m.xmeamodid,g_xmea_m.xmeamoddt)     
    WHERE xmeaent = g_enterprise AND xmeadocno = g_xmea_m.xmeadocno
      AND xmea900 = g_xmea_m.xmea900
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE axmt450_master_referesh USING g_xmea_m.xmeadocno,g_xmea_m.xmea900 INTO g_xmea_m.xmeadocno, 
          g_xmea_m.xmea900,g_xmea_m.xmea901,g_xmea_m.xmea902,g_xmea_m.xmea000,g_xmea_m.xmeadocdt,g_xmea_m.xmea002, 
          g_xmea_m.xmea003,g_xmea_m.xmeastus,g_xmea_m.xmea004,g_xmea_m.xmeaacti,g_xmea_m.xmea005,g_xmea_m.xmea006, 
          g_xmea_m.xmea007,g_xmea_m.xmea008,g_xmea_m.xmea009,g_xmea_m.xmea011,g_xmea_m.xmea030,g_xmea_m.xmea016, 
          g_xmea_m.xmea017,g_xmea_m.xmea018,g_xmea_m.xmea019,g_xmea_m.xmea020,g_xmea_m.xmea010,g_xmea_m.xmea012, 
          g_xmea_m.xmea001,g_xmea_m.xmea014,g_xmea_m.xmea015,g_xmea_m.xmeasite,g_xmea_m.xmea903,g_xmea_m.xmea904, 
          g_xmea_m.xmeaownid,g_xmea_m.xmeaowndp,g_xmea_m.xmeacrtid,g_xmea_m.xmeacrtdp,g_xmea_m.xmeacrtdt, 
          g_xmea_m.xmeamodid,g_xmea_m.xmeamoddt,g_xmea_m.xmeacnfid,g_xmea_m.xmeacnfdt,g_xmea_m.xmea002_desc, 
          g_xmea_m.xmea003_desc,g_xmea_m.xmea004_desc,g_xmea_m.xmea005_desc,g_xmea_m.xmea009_desc,g_xmea_m.xmea011_desc, 
          g_xmea_m.xmeaownid_desc,g_xmea_m.xmeaowndp_desc,g_xmea_m.xmeacrtid_desc,g_xmea_m.xmeacrtdp_desc, 
          g_xmea_m.xmeamodid_desc,g_xmea_m.xmeacnfid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_xmea_m.xmeadocno,g_xmea_m.xmea900,g_xmea_m.xmeadocno_desc,g_xmea_m.xmea901,g_xmea_m.xmea902, 
          g_xmea_m.xmea000,g_xmea_m.xmeadocdt,g_xmea_m.xmea002,g_xmea_m.xmea002_desc,g_xmea_m.xmea003, 
          g_xmea_m.xmea003_desc,g_xmea_m.xmeastus,g_xmea_m.xmea004,g_xmea_m.xmea004_desc,g_xmea_m.xmeaacti, 
          g_xmea_m.xmea005,g_xmea_m.xmea005_desc,g_xmea_m.xmea006,g_xmea_m.xmea006_desc,g_xmea_m.xmea007, 
          g_xmea_m.xmea008,g_xmea_m.xmea009,g_xmea_m.xmea009_desc,g_xmea_m.xmea011,g_xmea_m.xmea011_desc, 
          g_xmea_m.xmea030,g_xmea_m.xmea016,g_xmea_m.xmea017,g_xmea_m.xmea018,g_xmea_m.xmea019,g_xmea_m.xmea020, 
          g_xmea_m.xmea010,g_xmea_m.xmea012,g_xmea_m.xmea001,g_xmea_m.xmea014,g_xmea_m.xmea015,g_xmea_m.xmeasite, 
          g_xmea_m.xmea903,g_xmea_m.xmea903_desc,g_xmea_m.xmea904,g_xmea_m.xmeaownid,g_xmea_m.xmeaownid_desc, 
          g_xmea_m.xmeaowndp,g_xmea_m.xmeaowndp_desc,g_xmea_m.xmeacrtid,g_xmea_m.xmeacrtid_desc,g_xmea_m.xmeacrtdp, 
          g_xmea_m.xmeacrtdp_desc,g_xmea_m.xmeacrtdt,g_xmea_m.xmeamodid,g_xmea_m.xmeamodid_desc,g_xmea_m.xmeamoddt, 
          g_xmea_m.xmeacnfid,g_xmea_m.xmeacnfid_desc,g_xmea_m.xmeacnfdt
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
 
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   CALL cl_set_act_visible("delete,modify,modify_detail,axmt450_01",TRUE)
   CASE g_xmea_m.xmeastus
      WHEN "N"
         CALL cl_set_act_visible("delete,modify,modify_detail",TRUE)
      WHEN "Y"
         CALL cl_set_act_visible("delete,modify,modify_detail,axmt450_01",FALSE)
      WHEN "X"
         CALL cl_set_act_visible("delete,modify,modify_detail,axmt450_01",FALSE)
   END CASE  
   #end add-point  
 
   CLOSE axmt450_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL axmt450_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axmt450.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION axmt450_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_xmeb_d.getLength() THEN
         LET g_detail_idx = g_xmeb_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmeb_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmeb_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_xmeb2_d.getLength() THEN
         LET g_detail_idx = g_xmeb2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmeb2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmeb2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx2 = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx2 > g_xmeb3_d.getLength() THEN
         LET g_detail_idx2 = g_xmeb3_d.getLength()
      END IF
      IF g_detail_idx2 = 0 AND g_xmeb3_d.getLength() <> 0 THEN
         LET g_detail_idx2 = 1
      END IF
      DISPLAY g_detail_idx2 TO FORMONLY.idx
      DISPLAY g_xmeb3_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axmt450.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION axmt450_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"


   IF g_detail_idx = 0 OR cl_null(g_detail_idx)THEN 
      RETURN
   END IF
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
   IF axmt450_fill_chk(2) THEN
      IF (pi_idx = 2 OR pi_idx = 0 ) AND g_xmeb_d.getLength() > 0 THEN
               CALL g_xmeb3_d.clear()
 
         
         #取得該單身上階單身的idx
         LET g_detail_idx = g_detail_idx_list[1]
         
         LET g_sql = "SELECT  DISTINCT xmecsite,xmecseq,xmecseq1,xmec001,xmec002,xmec003,xmec004,xmec005, 
             xmec901,xmec902,xmec903  FROM xmec_t",    
                     "",
                     
                     " WHERE xmecent=? AND xmecdocno=? AND xmec900=? AND xmecseq=?"
         
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         LET g_sql = g_sql, " ORDER BY  xmec_t.xmecseq1" 
                            
         #add-point:單身填充前 name="b_fill2.before_fill2"
         
         #end add-point
         
         #先清空資料
               CALL g_xmeb3_d.clear()
 
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axmt450_pb2 FROM g_sql
         DECLARE b_fill_curs2 CURSOR FOR axmt450_pb2
         
      #  OPEN b_fill_curs2 USING g_enterprise,g_xmea_m.xmeadocno,g_xmea_m.xmea900,g_xmeb_d[g_detail_idx].xmebseq  
      #      #(ver:78)
         LET l_ac = 1
         FOREACH b_fill_curs2 USING g_enterprise,g_xmea_m.xmeadocno,g_xmea_m.xmea900,g_xmeb_d[g_detail_idx].xmebseq INTO g_xmeb3_d[l_ac].xmecsite, 
             g_xmeb3_d[l_ac].xmecseq,g_xmeb3_d[l_ac].xmecseq1,g_xmeb3_d[l_ac].xmec001,g_xmeb3_d[l_ac].xmec002, 
             g_xmeb3_d[l_ac].xmec003,g_xmeb3_d[l_ac].xmec004,g_xmeb3_d[l_ac].xmec005,g_xmeb3_d[l_ac].xmec901, 
             g_xmeb3_d[l_ac].xmec902,g_xmeb3_d[l_ac].xmec903   #(ver:78)
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               EXIT FOREACH
            END IF
            
            #add-point:b_fill段資料填充 name="b_fill2.fill2"
            CALL s_desc_get_acc_desc(g_gzcb008,g_xmeb3_d[l_ac].xmec902)
                 RETURNING g_xmeb3_d[l_ac].xmec902_desc

            #累計定價文字顏色顯示
            CALL axmt450_detail3_color()
            #end add-point
           
            IF l_ac > g_max_rec THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code = 9035 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               EXIT FOREACH
            END IF
            
            LET l_ac = l_ac + 1
            
         END FOREACH
               CALL g_xmeb3_d.deleteElement(g_xmeb3_d.getLength())
 
      END IF
   END IF
 
 
      
   LET g_xmeb3_d_mask_o.* =  g_xmeb3_d.*
   FOR l_ac = 1 TO g_xmeb3_d.getLength()
      LET g_xmeb3_d_mask_o[l_ac].* =  g_xmeb3_d[l_ac].*
      CALL axmt450_xmec_t_mask()
      LET g_xmeb3_d_mask_n[l_ac].* =  g_xmeb3_d[l_ac].*
   END FOR
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   
   #end add-point
    
   LET l_ac = li_ac
   
   CALL axmt450_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
 
{</section>}
 
{<section id="axmt450.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION axmt450_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axmt450.status_show" >}
PRIVATE FUNCTION axmt450_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="axmt450.mask_functions" >}
&include "erp/axm/axmt450_mask.4gl"
 
{</section>}
 
{<section id="axmt450.signature" >}
   #應用 a39 樣板自動產生(Version:10)
#+ BPM提交
PRIVATE FUNCTION axmt450_send()
   #add-point:send段define(客製用) name="send.define_customerization"
   
   #end add-point 
   #add-point:send段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="send.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="send.pre_function"
   
   #end add-point
   
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
 
 
   CALL axmt450_show()
   CALL axmt450_set_pk_array()
   
   #add-point: 初始化的ADP name="send.before_send"
   IF NOT s_axmt450_conf_chk(g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
      RETURN FALSE
   END IF
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_xmea_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_xmeb_d))
   CALL cl_bpm_set_detail_data("s_detail2", util.JSONArray.fromFGL(g_xmeb2_d))
   CALL cl_bpm_set_detail_data("s_detail3", util.JSONArray.fromFGL(g_xmeb3_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP name="send.before_cli"
   
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP name="send.after_send"
   
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL axmt450_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL axmt450_ui_headershow()
   CALL axmt450_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
#應用 a40 樣板自動產生(Version:9)
#+ BPM抽單
PRIVATE FUNCTION axmt450_draw_out()
   #add-point:draw段define name="draw.define_customerization"
   
   #end add-point
   #add-point:draw段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="draw.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="draw.pre_function"
   
   #end add-point
   
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_idx].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL axmt450_ui_headershow()  
   CALL axmt450_ui_detailshow()
 
   #add-point:Function後置處理  name="draw.after_function"
   
   #end add-point
 
   RETURN TRUE
   
END FUNCTION
 
 
 
 
 
{</section>}
 
{<section id="axmt450.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION axmt450_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_xmea_m.xmeadocno
   LET g_pk_array[1].column = 'xmeadocno'
   LET g_pk_array[2].values = g_xmea_m.xmea900
   LET g_pk_array[2].column = 'xmea900'
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axmt450.other_dialog" readonly="Y" >}
   
 
{</section>}
 
{<section id="axmt450.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION axmt450_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL axmt450_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_xmea_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axmt450.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION axmt450_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   #160818-00017#43-s
   SELECT xmeastus INTO g_xmea_m.xmeastus FROM xmea_t
    WHERE xmeaent = g_enterprise
      AND xmeasite = g_site
      AND xmeadocno = g_xmea_m.xmeadocno
      AND xmea900 = g_xmea_m.xmea900   #161031-00025#22 add
   IF (g_action_choice="modify" OR g_action_choice="delete" OR g_action_choice="modify_detail")  THEN
     LET g_errno = NULL
     CASE g_xmea_m.xmeastus
        WHEN 'W'
           LET g_errno = 'sub-01347'
        WHEN 'X'
           LET g_errno = 'sub-00229'
        WHEN 'Y'
           LET g_errno = 'sub-00178'
        WHEN 'C'
           LET g_errno = 'ain-00197'
     END CASE

     IF NOT cl_null(g_errno) THEN
        INITIALIZE g_errparam TO NULL
        LET g_errparam.code = g_errno
        LET g_errparam.extend = g_xmea_m.xmeadocno
        LET g_errparam.popup = TRUE
        CALL cl_err()
        LET g_errno = NULL
        CALL axmt450_set_act_visible()
        CALL axmt450_set_act_no_visible()
        CALL axmt450_show()
        RETURN FALSE
     END IF
   END IF      
   #160818-00017#43-e
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="axmt450.other_function" readonly="Y" >}

################################################################################
# Descriptions...: 帶出客戶預設值
# Memo...........:
# Usage..........: CALL axmt450_xmea004_default()
# Input parameter: no
# Return code....: no
# Date & Author..: 
# Modify.........: 150121 By whitney
################################################################################
PRIVATE FUNCTION axmt450_xmea004_default()

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmea_m.xmea004
   CALL ap_ref_array2(g_ref_fields,"SELECT pmab083,pmab084,pmab087,pmab103 FROM pmab_t WHERE pmabent='"||g_enterprise||"' AND pmabsite = '"||g_xmea_m.xmeasite||"' AND pmab001=? ","") RETURNING g_rtn_fields
   LET g_xmea_m.xmea005 = g_rtn_fields[1] 
   LET g_xmea_m.xmea006 = g_rtn_fields[2]
   LET g_xmea_m.xmea009 = g_rtn_fields[3] 
   LET g_xmea_m.xmea011 = g_rtn_fields[4]
   
   DISPLAY BY NAME g_xmea_m.xmea005,g_xmea_m.xmea006,g_xmea_m.xmea009,g_xmea_m.xmea011
   CALL s_desc_get_currency_desc(g_xmea_m.xmea005) RETURNING g_xmea_m.xmea005_desc
   DISPLAY BY NAME g_xmea_m.xmea005_desc
   CALL s_desc_get_tax_desc1(g_site,g_xmea_m.xmea006) RETURNING g_xmea_m.xmea006_desc
   DISPLAY BY NAME g_xmea_m.xmea006_desc
   CALL s_desc_get_ooib002_desc(g_xmea_m.xmea009) RETURNING g_xmea_m.xmea009_desc
   DISPLAY BY NAME g_xmea_m.xmea009_desc
   CALL s_desc_get_acc_desc('238',g_xmea_m.xmea011) RETURNING g_xmea_m.xmea011_desc
   DISPLAY BY NAME g_xmea_m.xmea011_desc
   
END FUNCTION

################################################################################
# Descriptions...: 帶出料號預設值
# Memo...........:
# Usage..........: CALL axmt450_xmeb002_default()
# Input parameter: no
# Return code....: no
# Date & Author..: 
# Modify.........: 150122 By whitney
################################################################################
PRIVATE FUNCTION axmt450_xmeb002_default()
DEFINE l_imaf123    LIKE imaf_t.imaf123   
DEFINE l_success    LIKE type_t.num5

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmeb_d[l_ac].xmeb002
   CALL ap_ref_array2(g_ref_fields,"SELECT imaf112,imaf113,imaf123 FROM imaf_t WHERE imafent='"||g_enterprise||"' AND imaf001=? AND imafsite='"||g_xmeb_d[l_ac].xmebsite||"'","") RETURNING g_rtn_fields
   LET g_xmeb_d[l_ac].xmeb008 = g_rtn_fields[1]
   LET l_imaf123 = g_rtn_fields[2]
   IF NOT cl_null(l_imaf123) THEN 
      LET g_xmeb_d[l_ac].xmeb008 = l_imaf123
   END IF   
   LET g_xmeb_d[l_ac].xmeb004 = g_rtn_fields[3]    
   CALL s_desc_get_unit_desc(g_xmeb_d[l_ac].xmeb008)
        RETURNING g_xmeb_d[l_ac].xmeb008_desc
   
   IF NOT cl_null(g_xmeb_d[l_ac].xmeb008) AND NOT cl_null(g_xmeb_d[l_ac].xmeb009) THEN
      #對出貨進行取位
      CALL s_aooi250_take_decimals(g_xmeb_d[l_ac].xmeb008,g_xmeb_d[l_ac].xmeb009)
           RETURNING l_success,g_xmeb_d[l_ac].xmeb009
   END IF
   
   CALL axmt450_get_tax(g_xmeb_d[l_ac].xmeb002)
        RETURNING g_xmeb_d[l_ac].xmeb011,g_xmeb_d[l_ac].xmeb012
   CALL s_desc_get_tax_desc1(g_site,g_xmeb_d[l_ac].xmeb011)
        RETURNING g_xmeb_d[l_ac].xmeb011_desc
   
   CALL axmt450_get_amount(g_xmeb_d[l_ac].xmebseq,g_xmeb_d[l_ac].xmeb009,g_xmeb_d[l_ac].xmeb010,g_xmeb_d[l_ac].xmeb011)  
        RETURNING g_xmeb_d[l_ac].xmeb017,g_xmeb_d[l_ac].xmeb018,g_xmeb_d[l_ac].xmeb019
                  
   LET g_xmeb_d[l_ac].xmeb003 = ' '
   LET g_xmeb_d[l_ac].xmeb003_desc = ' '
   #161221-00064#15 mod-S
#   CALL s_apmi070_get_pmao004(g_xmea_m.xmea004,g_xmeb_d[l_ac].xmeb002,g_xmeb_d[l_ac].xmeb003)
#        RETURNING l_success,g_xmeb_d[l_ac].xmeb005
   CALL s_apmi070_get_pmao004_2(g_xmea_m.xmea004,g_xmeb_d[l_ac].xmeb002,g_xmeb_d[l_ac].xmeb003,'2')
        RETURNING l_success,g_xmeb_d[l_ac].xmeb005
   #161221-00064#15 mod-E
        
   SELECT pmao009,pmao010
     INTO g_xmeb_d[l_ac].xmeb005_desc,g_xmeb_d[l_ac].xmeb005_desc_desc
     FROM pmao_t
    WHERE pmaoent = g_enterprise
      AND pmao001 = g_xmea_m.xmea004
      AND pmao002 = g_xmeb_d[l_ac].xmeb002
      AND pmao003 = g_xmeb_d[l_ac].xmeb003
      AND pmao004 = g_xmeb_d[l_ac].xmeb005  
      AND pmao000 = '2'    #161221-00064#15      
   DISPLAY BY NAME g_xmeb_d[l_ac].xmeb005_desc,g_xmeb_d[l_ac].xmeb005_desc_desc

   LET g_xmeb_d_o.xmeb003 = g_xmeb_d[l_ac].xmeb003
   LET g_xmeb_d_o.xmeb004 = g_xmeb_d[l_ac].xmeb004
   LET g_xmeb_d_o.xmeb005 = g_xmeb_d[l_ac].xmeb005
   LET g_xmeb_d_o.xmeb008 = g_xmeb_d[l_ac].xmeb008
   LET g_xmeb_d_o.xmeb011 = g_xmeb_d[l_ac].xmeb011
   LET g_xmeb_d_o.xmeb012 = g_xmeb_d[l_ac].xmeb012
   LET g_xmeb_d_o.xmeb017 = g_xmeb_d[l_ac].xmeb017
   LET g_xmeb_d_o.xmeb018 = g_xmeb_d[l_ac].xmeb018
   LET g_xmeb_d_o.xmeb019 = g_xmeb_d[l_ac].xmeb019

END FUNCTION

################################################################################
# Descriptions...: 單頭條件修改時，重計單身未稅金額、含稅金額、稅額
# Memo...........:
# Usage..........: CALL axmt450_recount(p_cmd)
# Input parameter: no
# Return code....: no
# Date & Author..: 
# Modify.........: 150123 By whitney
################################################################################
PRIVATE FUNCTION axmt450_recount(p_cmd)
DEFINE p_cmd        LIKE type_t.chr1
DEFINE l_i          LIKE type_t.num10
DEFINE l_xmeb  RECORD
    xmebseq    LIKE xmeb_t.xmebseq,
    xmeb002    LIKE xmeb_t.xmeb002,
    xmeb009    LIKE xmeb_t.xmeb009,
    xmeb010    LIKE xmeb_t.xmeb010,
    xmeb011    LIKE xmeb_t.xmeb011,
    xmeb012    LIKE xmeb_t.xmeb012,
    xmeb017    LIKE xmeb_t.xmeb017,
    xmeb018    LIKE xmeb_t.xmeb018,
    xmeb019    LIKE xmeb_t.xmeb019
           END RECORD

   #單頭新增時，因單身資料還沒insert到資料庫，所以只改變畫面上的顯示
   IF p_cmd = 'a' THEN
      FOR l_i = 1 TO g_xmeb_d.getLength()

         CALL axmt450_get_tax(g_xmeb_d[l_i].xmeb002)
              RETURNING g_xmeb_d[l_i].xmeb011,g_xmeb_d[l_i].xmeb012
         CALL s_desc_get_tax_desc1(g_site,g_xmeb_d[l_i].xmeb011)
              RETURNING g_xmeb_d[l_i].xmeb011_desc

         #重計未稅金額、含稅金額、稅額
         CALL axmt450_get_amount(g_xmeb_d[l_i].xmebseq,g_xmeb_d[l_i].xmeb009,
                                 g_xmeb_d[l_i].xmeb010,g_xmeb_d[l_i].xmeb011)
              RETURNING g_xmeb_d[l_i].xmeb017,g_xmeb_d[l_i].xmeb018,g_xmeb_d[l_i].xmeb019
      END FOR
   ELSE
      INITIALIZE l_xmeb.* TO NULL
      DECLARE axmt450_recount_cur CURSOR FOR
         SELECT xmebseq,xmeb002,xmeb009,xmeb010
           FROM xmeb_t
          WHERE xmebent = g_enterprise
            AND xmebdocno = g_xmea_m.xmeadocno
            AND xmeb900 = g_xmea_m.xmea900
      FOREACH axmt450_recount_cur INTO l_xmeb.xmebseq,l_xmeb.xmeb002,l_xmeb.xmeb009,l_xmeb.xmeb010
      
         CALL axmt450_get_tax(l_xmeb.xmeb002)
              RETURNING l_xmeb.xmeb011,l_xmeb.xmeb012

         #重計未稅金額、含稅金額、稅額
         CALL axmt450_get_amount(l_xmeb.xmebseq,l_xmeb.xmeb009,l_xmeb.xmeb010,l_xmeb.xmeb011)
              RETURNING l_xmeb.xmeb017,l_xmeb.xmeb018,l_xmeb.xmeb019

         UPDATE xmeb_t
            SET xmeb011 = l_xmeb.xmeb011,
                xmeb012 = l_xmeb.xmeb012,
                xmeb017 = l_xmeb.xmeb017,
                xmeb018 = l_xmeb.xmeb018,
                xmeb019 = l_xmeb.xmeb019
          WHERE xmebent = g_enterprise
            AND xmebdocno = g_xmea_m.xmeadocno
            AND xmeb900 = g_xmea_m.xmea900
            AND xmebseq = l_xmeb.xmebseq
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "xmeb_t:"
            LET g_errparam.popup = TRUE
            CALL cl_err()
            EXIT FOREACH
         END IF
         
         INITIALIZE l_xmeb.* TO NULL
      END FOREACH
      CALL axmt450_b_fill()
   END IF
END FUNCTION

################################################################################
# Descriptions...: 計算未稅金額、含稅金額、稅額
# Memo...........:
# Usage..........: CALL axmt450_get_amount(p_xmebseq,p_xmeb009,p_xmeb010,p_xmeb011)
# Input parameter: 
# Return code....: 
# Date & Author..: 
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt450_get_amount(p_xmebseq,p_xmeb009,p_xmeb010,p_xmeb011)
DEFINE p_xmebseq         LIKE xmeb_t.xmebseq
DEFINE p_xmeb009         LIKE xmeb_t.xmeb009
DEFINE p_xmeb010         LIKE xmeb_t.xmeb010
DEFINE p_xmeb011         LIKE xmeb_t.xmeb011
DEFINE r_xmeb017         LIKE xmeb_t.xmeb017
DEFINE r_xmeb018         LIKE xmeb_t.xmeb018
DEFINE r_xmeb019         LIKE xmeb_t.xmeb019
DEFINE l_money           LIKE xmeb_t.xmeb017
DEFINE l_xrcd113         LIKE xrcd_t.xrcd113
DEFINE l_xrcd114         LIKE xrcd_t.xrcd114
DEFINE l_xrcd115         LIKE xrcd_t.xrcd115
DEFINE l_xrcd123         LIKE xrcd_t.xrcd113
DEFINE l_xrcd124         LIKE xrcd_t.xrcd114
DEFINE l_xrcd125         LIKE xrcd_t.xrcd115
DEFINE l_xrcd133         LIKE xrcd_t.xrcd113
DEFINE l_xrcd134         LIKE xrcd_t.xrcd114
DEFINE l_xrcd135         LIKE xrcd_t.xrcd115

   LET r_xmeb017 = 0
   LET r_xmeb018 = 0
   LET r_xmeb019 = 0

   IF cl_null(p_xmebseq) OR cl_null(p_xmeb009) OR
      cl_null(p_xmeb010) OR cl_null(p_xmeb011) THEN
      RETURN r_xmeb017,r_xmeb018,r_xmeb019
   END IF

   LET l_money = p_xmeb009 * p_xmeb010
   CALL s_tax_ins(g_xmea_m.xmeadocno,p_xmebseq,0,g_xmea_m.xmeasite,l_money,p_xmeb011,
                  p_xmeb009,g_xmea_m.xmea005,1,' ',1,1)
        RETURNING r_xmeb017,r_xmeb019,r_xmeb018,l_xrcd113,l_xrcd114,l_xrcd115,
                  l_xrcd123,l_xrcd124,l_xrcd125,l_xrcd133,l_xrcd134,l_xrcd135

   IF cl_null(r_xmeb017) THEN LET r_xmeb017 = 0 END IF
   IF cl_null(r_xmeb018) THEN LET r_xmeb018 = 0 END IF
   IF cl_null(r_xmeb019) THEN LET r_xmeb019 = 0 END IF

   RETURN r_xmeb017,r_xmeb018,r_xmeb019
END FUNCTION

################################################################################
# Descriptions...: 單頭客戶異動，重帶單身的客戶料號
# Memo...........:
# Usage..........: CALL axmt450_upd_xmeb005()
# Input parameter: no
# Return code....: no
# Date & Author..: 
# Modify.........: 150121 By whitney
################################################################################
PRIVATE FUNCTION axmt450_upd_xmeb005()
DEFINE l_sql        STRING
DEFINE l_cnt        LIKE type_t.num5
DEFINE l_success    LIKE type_t.num5
DEFINE l_xmeb  RECORD
    xmebseq    LIKE xmeb_t.xmebseq,
    xmeb002    LIKE xmeb_t.xmeb002,
    xmeb003    LIKE xmeb_t.xmeb003,
    xmeb005    LIKE xmeb_t.xmeb005
           END RECORD

   LET l_cnt = 0
  #SELECT COUNT(*) INTO l_cnt  #161031-00025#22 mark
   SELECT COUNT(1) INTO l_cnt  #161031-00025#22 mod
     FROM xmeb_t
    WHERE xmebent = g_enterprise
      AND xmebdocno = g_xmea_m.xmeadocno
      AND xmeb900 = g_xmea_m.xmea900
   IF cl_null(l_cnt) OR l_cnt = 0 THEN
      RETURN
   END IF

   LET l_sql = " UPDATE xmeb_t ",
               "    SET xmeb005 = ? ",
               "  WHERE xmebent = '",g_enterprise,"' ",
               "    AND xmebdocno = '",g_xmea_m.xmeadocno,"' ",
               "    AND xmeb900 = '",g_xmea_m.xmea900,"' ",
               "    AND xmebseq = ? "
   PREPARE axmt450_upd_xmeb005_pre FROM l_sql

   LET l_sql = " SELECT xmebseq,xmeb002,xmeb003 ",
               "   FROM xmeb_t ",
               "  WHERE xmebent = '",g_enterprise,"' ",
               "    AND xmebdocno = '",g_xmea_m.xmeadocno,"' ",
               "    AND xmeb900 = '",g_xmea_m.xmea900,"' "
   PREPARE axmt450_upd_xmeb005_sel_pre FROM l_sql
   DECLARE axmt450_upd_xmeb005_cur CURSOR FOR axmt450_upd_xmeb005_sel_pre
   
   INITIALIZE l_xmeb.* TO NULL
   FOREACH axmt450_upd_xmeb005_cur INTO l_xmeb.xmebseq,l_xmeb.xmeb002,l_xmeb.xmeb003
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()
         EXIT FOREACH
      END IF
      
      #161221-00064#15 mod-S
#      CALL s_apmi070_get_pmao004(g_xmea_m.xmea004,l_xmeb.xmeb002,l_xmeb.xmeb003)
#           RETURNING l_success,l_xmeb.xmeb005
      CALL s_apmi070_get_pmao004_2(g_xmea_m.xmea004,l_xmeb.xmeb002,l_xmeb.xmeb003,'2')
           RETURNING l_success,l_xmeb.xmeb005
      #161221-00064#15 mod-E
      IF cl_null(l_xmeb.xmeb005) THEN LET l_xmeb.xmeb005 = ' ' END IF
      EXECUTE axmt450_upd_xmeb005_pre USING l_xmeb.xmeb005,l_xmeb.xmebseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'axmt450_upd_xmeb005_pre'
         LET g_errparam.popup = TRUE
         CALL cl_err()
         EXIT FOREACH
      END IF
   END FOREACH
   
   CALL axmt450_b_fill() 
END FUNCTION

################################################################################
# Descriptions...: 判斷是否有產品特徵類別
# Memo...........:
# Usage..........: CALL axmt450_imaa005_exists()
# Input parameter: 
# Return code....: TRUE OR FALSE
# Date & Author..: 
# Modify.........: 150123 By whitney
################################################################################
PRIVATE FUNCTION axmt450_imaa005_exists()
DEFINE l_imaa005    LIKE imaa_t.imaa005

   IF cl_null(g_xmeb_d[l_ac].xmeb002) THEN
      RETURN FALSE
   END IF
   
   SELECT imaa005 INTO l_imaa005
     FROM imaa_t
    WHERE imaaent = g_enterprise
      AND imaa001 =  g_xmeb_d[l_ac].xmeb002
   IF cl_null(l_imaa005) THEN
      RETURN FALSE
   END IF
   
   RETURN TRUE
END FUNCTION

################################################################################
# Descriptions...: 合約單號檢查
# Memo...........:
# Usage..........: CALL axmt450_xmeadocno_chk()
# Input parameter: no
# Return code....: TRUE OR FALSE
# Date & Author..: 
# Modify.........: 150121 By whitney
################################################################################
PRIVATE FUNCTION axmt450_xmeadocno_chk()
DEFINE l_n          LIKE type_t.num5
DEFINE r_success    LIKE type_t.num5

   LET r_success = TRUE

   #key值
   IF g_xmea_m.xmea900 IS NOT NULL THEN
     #IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmea_t WHERE "||"xmeaent = '" ||g_enterprise|| "' AND "||"xmeadocno = '"||g_xmea_m.xmeadocno ||"' AND "|| "xmea900 = '"||g_xmea_m.xmea900 ||"'",'std-00004',0) THEN  #161031-00025#22 mark
      IF NOT ap_chk_notDup("","SELECT COUNT(1) FROM xmea_t WHERE "||"xmeaent = '" ||g_enterprise|| "' AND "||"xmeadocno = '"||g_xmea_m.xmeadocno ||"' AND "|| "xmea900 = '"||g_xmea_m.xmea900 ||"'",'std-00004',0) THEN  #161031-00025#22 mod
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF

   INITIALIZE g_chkparam.* TO NULL
   LET g_chkparam.arg1 = g_xmea_m.xmeadocno
   IF g_argv[01] = '"2"' THEN
      LET g_chkparam.where = " xmdx001 = 'Y' "
   ELSE
      LET g_chkparam.where = " xmdx001 = 'N' "
   END IF
   IF NOT cl_chk_exist("v_xmdxdocno") THEN
      LET r_success = FALSE
      RETURN r_success
   END IF

   #同一張合約單不能同時有兩張以上未確認的變更單存在
   LET l_n = 0   
  #SELECT COUNT(*) INTO l_n  #161031-00025#22 mark
   SELECT COUNT(1) INTO l_n  #161031-00025#22 mod
     FROM xmea_t
    WHERE xmeaent = g_enterprise
      AND xmeadocno = g_xmea_m.xmeadocno
      AND xmeastus = 'N'
   IF NOT cl_null(l_n) AND l_n > 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'axm-00311'
      LET g_errparam.extend = g_xmea_m.xmeadocno
      LET g_errparam.popup = TRUE
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF

   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 依銷售合約單號，帶出合約單對應欄位值
# Memo...........:
# Usage..........: CALL axmt450_xmeadocno_default()
# Input parameter: no
# Return code....: no
# Date & Author..: 
# Modify.........: 150121 By whitney
################################################################################
PRIVATE FUNCTION axmt450_xmeadocno_default()
DEFINE l_i          LIKE type_t.num5
DEFINE l_success    LIKE type_t.num5

   #版本=合約的版本+1
   SELECT MAX(xmdx000)+1 INTO g_xmea_m.xmea000
     FROM xmdx_t
    WHERE xmdxent = g_enterprise
      AND xmdxdocno = g_xmea_m.xmeadocno
   IF cl_null(g_xmea_m.xmea000) THEN
      LET g_xmea_m.xmea000 = 1
   END IF

   #依銷售合約單號，帶出合約單對應欄位值
   SELECT xmdxsite,xmdxdocno,xmdxdocdt,
          xmdx001,xmdx002,xmdx003,xmdx004,xmdx005,
          xmdx006,xmdx007,xmdx008,xmdx009,xmdx010,
          xmdx011,xmdx012,xmdx014,xmdx015,xmdx016,
          xmdx017,xmdx018,xmdx019,xmdx020,xmdx030
     INTO g_xmea_m.xmeasite,g_xmea_m.xmeadocno,g_xmea_m.xmeadocdt,
          g_xmea_m.xmea001,g_xmea_m.xmea002,g_xmea_m.xmea003,g_xmea_m.xmea004,g_xmea_m.xmea005,
          g_xmea_m.xmea006,g_xmea_m.xmea007,g_xmea_m.xmea008,g_xmea_m.xmea009,g_xmea_m.xmea010,
          g_xmea_m.xmea011,g_xmea_m.xmea012,g_xmea_m.xmea014,g_xmea_m.xmea015,g_xmea_m.xmea016,
          g_xmea_m.xmea017,g_xmea_m.xmea018,g_xmea_m.xmea019,g_xmea_m.xmea020,g_xmea_m.xmea030
     FROM xmdx_t
    WHERE xmdxent = g_enterprise
      AND xmdxdocno = g_xmea_m.xmeadocno
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'sel xmdx_t'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN
   END IF   

   DISPLAY BY NAME g_xmea_m.xmea000,g_xmea_m.xmeasite,g_xmea_m.xmeadocno,g_xmea_m.xmeadocdt,
       g_xmea_m.xmea001,g_xmea_m.xmea002,g_xmea_m.xmea003,g_xmea_m.xmea004,g_xmea_m.xmea005,
       g_xmea_m.xmea006,g_xmea_m.xmea007,g_xmea_m.xmea008,g_xmea_m.xmea009,g_xmea_m.xmea010,
       g_xmea_m.xmea011,g_xmea_m.xmea012,g_xmea_m.xmea014,g_xmea_m.xmea015,g_xmea_m.xmea016,
       g_xmea_m.xmea017,g_xmea_m.xmea018,g_xmea_m.xmea019,g_xmea_m.xmea020,g_xmea_m.xmea030

   CALL s_desc_get_person_desc(g_xmea_m.xmea002) RETURNING g_xmea_m.xmea002_desc
   DISPLAY BY NAME g_xmea_m.xmea002_desc
   CALL s_desc_get_department_desc(g_xmea_m.xmea003) RETURNING g_xmea_m.xmea003_desc
   DISPLAY BY NAME g_xmea_m.xmea003_desc
   CALL s_desc_get_trading_partner_abbr_desc(g_xmea_m.xmea004) RETURNING g_xmea_m.xmea004_desc
   DISPLAY BY NAME g_xmea_m.xmea004_desc
   CALL s_desc_get_currency_desc(g_xmea_m.xmea005) RETURNING g_xmea_m.xmea005_desc
   DISPLAY BY NAME g_xmea_m.xmea005_desc
   CALL s_desc_get_tax_desc1(g_site,g_xmea_m.xmea006) RETURNING g_xmea_m.xmea006_desc
   DISPLAY BY NAME g_xmea_m.xmea006_desc
   CALL s_desc_get_ooib002_desc(g_xmea_m.xmea009) RETURNING g_xmea_m.xmea009_desc
   DISPLAY BY NAME g_xmea_m.xmea009_desc
   CALL s_desc_get_acc_desc('238',g_xmea_m.xmea011) RETURNING g_xmea_m.xmea011_desc
   DISPLAY BY NAME g_xmea_m.xmea011_desc
   
   CALL axmt450_ooff013_copy()      #161031-00025#22 add
   LET g_xmea_m_o.* = g_xmea_m.*

   #單身資料
   CALL g_xmeb_d.clear()
   CALL g_xmeb2_d.clear()
   CALL g_xmeb3_d.clear()

   #銷售合約單明細檔
   LET l_i = 1
   DECLARE sel_xmdy_cur CURSOR FOR
      SELECT xmdysite,xmdyseq,
             xmdy001,xmdy002,xmdy003,xmdy004,xmdy005,
             xmdy006,xmdy007,xmdy008,xmdy009,xmdy010,
             xmdy011,xmdy012,xmdy013,xmdy014,xmdy017,
             xmdy018,xmdy019,xmdy020,xmdy021,xmdy022,
             xmdy023,xmdy024,xmdy030
        FROM xmdy_t
       WHERE xmdyent = g_enterprise
         AND xmdydocno = g_xmea_m.xmeadocno
       ORDER BY xmdyseq
   FOREACH sel_xmdy_cur INTO g_xmeb_d[l_i].xmebsite,g_xmeb_d[l_i].xmebseq,
       g_xmeb_d[l_i].xmeb001,g_xmeb_d[l_i].xmeb002,g_xmeb_d[l_i].xmeb003,g_xmeb_d[l_i].xmeb004,g_xmeb_d[l_i].xmeb005,
       g_xmeb_d[l_i].xmeb006,g_xmeb_d[l_i].xmeb007,g_xmeb_d[l_i].xmeb008,g_xmeb_d[l_i].xmeb009,g_xmeb_d[l_i].xmeb010,
       g_xmeb_d[l_i].xmeb011,g_xmeb_d[l_i].xmeb012,g_xmeb_d[l_i].xmeb013,g_xmeb_d[l_i].xmeb014,g_xmeb_d[l_i].xmeb017,
       g_xmeb_d[l_i].xmeb018,g_xmeb_d[l_i].xmeb019,g_xmeb2_d[l_i].xmeb020,g_xmeb2_d[l_i].xmeb021,g_xmeb2_d[l_i].xmeb022,
       g_xmeb2_d[l_i].xmeb023,g_xmeb_d[l_i].xmeb024,g_xmeb_d[l_i].xmeb030
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'FOREACH:'
         LET g_errparam.popup = TRUE
         CALL cl_err()
         EXIT FOREACH
      END IF
                             
      LET g_xmeb_d[l_i].xmeb901 = '1'   #未變更
      CALL s_desc_get_item_desc(g_xmeb_d[l_i].xmeb002)
           RETURNING g_xmeb_d[l_i].xmeb002_desc,g_xmeb_d[l_i].xmeb002_desc_desc
      CALL s_feature_description(g_xmeb_d[l_i].xmeb002,g_xmeb_d[l_i].xmeb003)
           RETURNING l_success,g_xmeb_d[l_i].xmeb003_desc
      CALL s_desc_get_acc_desc('221',g_xmeb_d[l_i].xmeb006)
           RETURNING g_xmeb_d[l_i].xmeb006_desc
      CALL s_desc_get_acc_desc(g_gzcb004,g_xmeb_d[l_i].xmeb014)
           RETURNING g_xmeb_d[l_i].xmeb014_desc
      CALL s_desc_get_unit_desc(g_xmeb_d[l_i].xmeb008)
           RETURNING g_xmeb_d[l_i].xmeb008_desc
      CALL s_desc_get_tax_desc1(g_site,g_xmeb_d[l_i].xmeb011)
           RETURNING g_xmeb_d[l_i].xmeb011_desc
      CALL s_desc_get_acc_desc('263',g_xmeb_d[l_i].xmeb013)
           RETURNING g_xmeb_d[l_i].xmeb013_desc
      LET g_xmeb2_d[l_i].xmebseq = g_xmeb_d[l_i].xmebseq
      LET g_xmeb2_d[l_i].xmeb0022 = g_xmeb_d[l_i].xmeb002
      LET g_xmeb2_d[l_i].xmeb0032 = g_xmeb_d[l_i].xmeb003
      LET g_xmeb2_d[l_i].xmeb0062 = g_xmeb_d[l_i].xmeb006
      LET g_xmeb2_d[l_i].xmeb0072 = g_xmeb_d[l_i].xmeb007
      LET g_xmeb2_d[l_i].xmeb0082 = g_xmeb_d[l_i].xmeb008
      LET g_xmeb2_d[l_i].xmeb0092 = g_xmeb_d[l_i].xmeb009
      LET g_xmeb2_d[l_i].xmeb0102 = g_xmeb_d[l_i].xmeb010
      LET g_xmeb2_d[l_i].xmeb0202 = g_xmeb_d[l_i].xmeb009 - g_xmeb2_d[l_i].xmeb020
      LET g_xmeb2_d[l_i].xmeb0212 = g_xmeb_d[l_i].xmeb017 - g_xmeb2_d[l_i].xmeb021
      LET g_xmeb2_d[l_i].xmeb0222 = g_xmeb_d[l_i].xmeb018 - g_xmeb2_d[l_i].xmeb022
      LET g_xmeb2_d[l_i].xmeb0232 = g_xmeb_d[l_i].xmeb019 - g_xmeb2_d[l_i].xmeb023  
      LET g_xmeb2_d[l_i].xmeb002_2_desc = g_xmeb_d[l_i].xmeb002_desc
      LET g_xmeb2_d[l_i].xmeb002_2_desc_desc = g_xmeb_d[l_i].xmeb002_desc_desc
      LET g_xmeb2_d[l_i].xmeb0032_desc = g_xmeb_d[l_i].xmeb003_desc
      LET g_xmeb2_d[l_i].xmeb0082_desc = g_xmeb_d[l_i].xmeb008_desc
      #160408-00034#1-mod-(S)
#      SELECT pmao009,pmao010
#       INTO g_xmeb_d[l_ac].xmeb005_desc,g_xmeb_d[l_ac].xmeb005_desc_desc
#       FROM pmao_t
#      WHERE pmaoent = g_enterprise
#        AND pmao001 = g_xmea_m.xmea004
#        AND pmao002 = g_xmeb_d[l_ac].xmeb002
#        AND pmao003 = g_xmeb_d[l_ac].xmeb003
#        AND pmao004 = g_xmeb_d[l_ac].xmeb005
      SELECT pmao009,pmao010
       INTO g_xmeb_d[l_i].xmeb005_desc,g_xmeb_d[l_i].xmeb005_desc_desc
       FROM pmao_t
      WHERE pmaoent = g_enterprise
        AND pmao001 = g_xmea_m.xmea004
        AND pmao002 = g_xmeb_d[l_i].xmeb002
        AND pmao003 = g_xmeb_d[l_i].xmeb003
        AND pmao004 = g_xmeb_d[l_i].xmeb005 
        AND pmao000 = '2'  #161221-00064#15 add        
      #160408-00034#1-mod-(E)   
      LET l_i = l_i + 1
      IF l_i > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 9035
         LET g_errparam.popup = FALSE
         CALL cl_err()
         EXIT FOREACH
      END IF
   END FOREACH

   #銷售合約累計定價明細檔
   LET l_i = 1
   DECLARE sel_xmdz_cur CURSOR FOR
      SELECT xmdzseq,xmdzseq1,xmdz001,xmdz002,xmdz003,xmdz004,xmdz005
        FROM xmdz_t
       WHERE xmdzent = g_enterprise
         AND xmdzdocno = g_xmea_m.xmeadocno
       ORDER BY xmdzseq,xmdzseq1
   FOREACH sel_xmdz_cur INTO g_xmeb3_d[l_i].xmecseq,g_xmeb3_d[l_i].xmecseq1,g_xmeb3_d[l_i].xmec001,
                             g_xmeb3_d[l_i].xmec002,g_xmeb3_d[l_i].xmec003, 
                             g_xmeb3_d[l_i].xmec004,g_xmeb3_d[l_i].xmec005                                                                                                      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'FOREACH:'
         LET g_errparam.popup = TRUE
         CALL cl_err()
         EXIT FOREACH
      END IF

      LET g_xmeb3_d[l_i].xmec901 = '1'   #未變更 

      LET l_i = l_i + 1
      IF l_i > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 9035
         LET g_errparam.popup = FALSE
         CALL cl_err()
         EXIT FOREACH
      END IF
    END FOREACH
   #161031-00025#22-s
   CALL s_aooi360_sel('7',g_prog,g_xmea_m.xmeadocno,g_xmeb_d[l_ac].xmebseq,g_xmea_m.xmea900,'','','','','','','1') RETURNING l_success,g_xmeb_d[l_ac].ooff013
   #161031-00025#22-e
   CALL g_xmeb_d.deleteElement(g_xmeb_d.getLength())
   CALL g_xmeb2_d.deleteElement(g_xmeb2_d.getLength())
   CALL g_xmeb3_d.deleteElement(g_xmeb3_d.getLength())

   LET g_rec_b = l_i - 1

END FUNCTION

################################################################################
# Descriptions...: insert 單身
# Memo...........:
# Usage..........: CALL axmt450_gen_detail()
# Input parameter: no
# Return code....: TRUE OR FALSE
# Date & Author..: 
# Modify.........: 150121 By whitney
################################################################################
PRIVATE FUNCTION axmt450_gen_detail()
DEFINE r_success    LIKE type_t.num5
DEFINE l_i          LIKE type_t.num5
DEFINE l_sql        STRING

   LET r_success = TRUE

   #依合約單號帶出單身欄位的值
   IF cl_null(g_xmea_m.xmeadocno) THEN
      RETURN r_success
   END IF

   LET l_sql = " INSERT INTO xmeb_t ",
               " (xmebent,xmebsite,xmebdocno,xmebseq, ",
               "  xmeb001,xmeb002,xmeb003,xmeb004,xmeb005, ",
               "  xmeb006,xmeb007,xmeb008,xmeb009,xmeb010, ",
               "  xmeb011,xmeb012,xmeb013,xmeb014,xmeb017, ",
               "  xmeb018,xmeb019,xmeb020,xmeb021,xmeb022, ",
               "  xmeb023,xmeb024,xmeb030,xmeb900,xmeb901, ",
               "  xmeb902,xmeb903) ",
               " VALUES(?,?,?,?,?, ?,?,?,?,?, ",
               "        ?,?,?,?,?, ?,?,?,?,?, ",
               "        ?,?,?,?,?, ?,?,?,?,?,?) "
   PREPARE axmt450_ins_xmeb_pre FROM l_sql

   LET l_sql = " INSERT INTO xmec_t ",
               " (xmecent,xmecsite,xmecdocno,xmecseq,xmecseq1, ",
               "  xmec001,xmec002,xmec003,xmec004,xmec005, ",
               "  xmec900,xmec901,xmec902,xmec903) ",
               " VALUES(?,?,?,?,?, ?,?,?,?,?, ?,?,?,?) "
   PREPARE axmt450_ins_xmec_pre FROM l_sql

   FOR l_i = 1 TO g_xmeb_d.getLength()
      EXECUTE axmt450_ins_xmeb_pre USING
         g_enterprise,g_site,g_xmea_m.xmeadocno,g_xmeb_d[l_i].xmebseq,
         g_xmeb_d[l_i].xmeb001,g_xmeb_d[l_i].xmeb002,g_xmeb_d[l_i].xmeb003,g_xmeb_d[l_i].xmeb004,g_xmeb_d[l_i].xmeb005,
         g_xmeb_d[l_i].xmeb006,g_xmeb_d[l_i].xmeb007,g_xmeb_d[l_i].xmeb008,g_xmeb_d[l_i].xmeb009,g_xmeb_d[l_i].xmeb010,
         g_xmeb_d[l_i].xmeb011,g_xmeb_d[l_i].xmeb012,g_xmeb_d[l_i].xmeb013,g_xmeb_d[l_i].xmeb014,g_xmeb_d[l_i].xmeb017,
         g_xmeb_d[l_i].xmeb018,g_xmeb_d[l_i].xmeb019,g_xmeb2_d[l_i].xmeb020,g_xmeb2_d[l_i].xmeb021,g_xmeb2_d[l_i].xmeb022,
         g_xmeb2_d[l_i].xmeb023,g_xmeb_d[l_i].xmeb024,g_xmeb_d[l_i].xmeb030,g_xmea_m.xmea900,g_xmeb_d[l_i].xmeb901,
         g_xmeb_d[l_i].xmeb902,g_xmeb_d[l_i].xmeb903
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'axmt450_ins_xmeb_pre'
         LET g_errparam.popup = TRUE
         CALL cl_err()
         LET r_success = FALSE
         EXIT FOR
      END IF
   END FOR

   FOR l_i = 1 TO g_xmeb3_d.getLength()
      EXECUTE axmt450_ins_xmec_pre USING g_enterprise,g_site,g_xmea_m.xmeadocno,
                                         g_xmeb3_d[l_i].xmecseq,g_xmeb3_d[l_i].xmecseq1,g_xmeb3_d[l_i].xmec001,
                                         g_xmeb3_d[l_i].xmec002,g_xmeb3_d[l_i].xmec003,g_xmeb3_d[l_i].xmec004,
                                         g_xmeb3_d[l_i].xmec005,g_xmea_m.xmea900,g_xmeb3_d[l_i].xmec901,
                                         g_xmeb3_d[l_i].xmec902,g_xmeb3_d[l_i].xmec903
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'axmt450_ins_xmec_pre'
         LET g_errparam.popup = TRUE
         CALL cl_err()
         LET r_success = FALSE
         EXIT FOR
      END IF
   END FOR
   
   RETURN r_success
END FUNCTION
################################################################################
# Descriptions...: 將單頭有修改的欄位新增到變更歷程檔內
# Memo...........:
# Usage..........: CALL axmt450_xmea_ins_xmed()
#                  RETURNING r_success
# Input parameter: 
# Return code....: r_success       TRUE/FALSE
#                : 
# Date & Author..: 2014/05/27 By Polly
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt450_xmea_ins_xmed()
#161109-00085#6-mod-s
#DEFINE l_xmdx_m   RECORD LIKE xmdx_t.*   #161109-00085#6   mark
DEFINE l_xmdx_m     RECORD  #銷售合約單頭檔
       xmdxent LIKE xmdx_t.xmdxent, #企業編號
       xmdxsite LIKE xmdx_t.xmdxsite, #營運據點
       xmdxdocno LIKE xmdx_t.xmdxdocno, #合約單號
       xmdxdocdt LIKE xmdx_t.xmdxdocdt, #單據日期
       xmdx000 LIKE xmdx_t.xmdx000, #版本
       xmdx001 LIKE xmdx_t.xmdx001, #委外否
       xmdx002 LIKE xmdx_t.xmdx002, #銷售人員
       xmdx003 LIKE xmdx_t.xmdx003, #銷售部門
       xmdx004 LIKE xmdx_t.xmdx004, #客戶
       xmdx005 LIKE xmdx_t.xmdx005, #幣別
       xmdx006 LIKE xmdx_t.xmdx006, #稅別
       xmdx007 LIKE xmdx_t.xmdx007, #稅率
       xmdx008 LIKE xmdx_t.xmdx008, #單價含稅否
       xmdx009 LIKE xmdx_t.xmdx009, #收款條件
       xmdx010 LIKE xmdx_t.xmdx010, #限定收款條件否
       xmdx011 LIKE xmdx_t.xmdx011, #交易條件
       xmdx012 LIKE xmdx_t.xmdx012, #限定交易條件否
       xmdx013 LIKE xmdx_t.xmdx013, #核決內容
       xmdx014 LIKE xmdx_t.xmdx014, #生效日期
       xmdx015 LIKE xmdx_t.xmdx015, #失效日期
       xmdx016 LIKE xmdx_t.xmdx016, #合約對象管制
       xmdx017 LIKE xmdx_t.xmdx017, #合約使用管制
       xmdx018 LIKE xmdx_t.xmdx018, #合約使用管制
       xmdx019 LIKE xmdx_t.xmdx019, #限定幣別
       xmdx020 LIKE xmdx_t.xmdx020, #限定稅別
       xmdx030 LIKE xmdx_t.xmdx030, #備註
       xmdxownid LIKE xmdx_t.xmdxownid, #資料所有者
       xmdxowndp LIKE xmdx_t.xmdxowndp, #資料所屬部門
       xmdxcrtid LIKE xmdx_t.xmdxcrtid, #資料建立者
       xmdxcrtdp LIKE xmdx_t.xmdxcrtdp, #資料建立部門
       xmdxcrtdt LIKE xmdx_t.xmdxcrtdt, #資料創建日
       xmdxmodid LIKE xmdx_t.xmdxmodid, #資料修改者
       xmdxmoddt LIKE xmdx_t.xmdxmoddt, #最近修改日
       xmdxcnfid LIKE xmdx_t.xmdxcnfid, #資料確認者
       xmdxcnfdt LIKE xmdx_t.xmdxcnfdt, #資料確認日
      #xmdxstus LIKE xmdx_t.xmdxstus   #狀態碼 #161109-00085#73 mark
       #161109-00085#73 --s add
       xmdxstus LIKE xmdx_t.xmdxstus, #狀態碼
       xmdxud001 LIKE xmdx_t.xmdxud001, #自定義欄位(文字)001
       xmdxud002 LIKE xmdx_t.xmdxud002, #自定義欄位(文字)002
       xmdxud003 LIKE xmdx_t.xmdxud003, #自定義欄位(文字)003
       xmdxud004 LIKE xmdx_t.xmdxud004, #自定義欄位(文字)004
       xmdxud005 LIKE xmdx_t.xmdxud005, #自定義欄位(文字)005
       xmdxud006 LIKE xmdx_t.xmdxud006, #自定義欄位(文字)006
       xmdxud007 LIKE xmdx_t.xmdxud007, #自定義欄位(文字)007
       xmdxud008 LIKE xmdx_t.xmdxud008, #自定義欄位(文字)008
       xmdxud009 LIKE xmdx_t.xmdxud009, #自定義欄位(文字)009
       xmdxud010 LIKE xmdx_t.xmdxud010, #自定義欄位(文字)010
       xmdxud011 LIKE xmdx_t.xmdxud011, #自定義欄位(數字)011
       xmdxud012 LIKE xmdx_t.xmdxud012, #自定義欄位(數字)012
       xmdxud013 LIKE xmdx_t.xmdxud013, #自定義欄位(數字)013
       xmdxud014 LIKE xmdx_t.xmdxud014, #自定義欄位(數字)014
       xmdxud015 LIKE xmdx_t.xmdxud015, #自定義欄位(數字)015
       xmdxud016 LIKE xmdx_t.xmdxud016, #自定義欄位(數字)016
       xmdxud017 LIKE xmdx_t.xmdxud017, #自定義欄位(數字)017
       xmdxud018 LIKE xmdx_t.xmdxud018, #自定義欄位(數字)018
       xmdxud019 LIKE xmdx_t.xmdxud019, #自定義欄位(數字)019
       xmdxud020 LIKE xmdx_t.xmdxud020, #自定義欄位(數字)020
       xmdxud021 LIKE xmdx_t.xmdxud021, #自定義欄位(日期時間)021
       xmdxud022 LIKE xmdx_t.xmdxud022, #自定義欄位(日期時間)022
       xmdxud023 LIKE xmdx_t.xmdxud023, #自定義欄位(日期時間)023
       xmdxud024 LIKE xmdx_t.xmdxud024, #自定義欄位(日期時間)024
       xmdxud025 LIKE xmdx_t.xmdxud025, #自定義欄位(日期時間)025
       xmdxud026 LIKE xmdx_t.xmdxud026, #自定義欄位(日期時間)026
       xmdxud027 LIKE xmdx_t.xmdxud027, #自定義欄位(日期時間)027
       xmdxud028 LIKE xmdx_t.xmdxud028, #自定義欄位(日期時間)028
       xmdxud029 LIKE xmdx_t.xmdxud029, #自定義欄位(日期時間)029
       xmdxud030 LIKE xmdx_t.xmdxud030  #自定義欄位(日期時間)030
       #161109-00085#73 --e add
          END RECORD
#161109-00085#6-mod-e

DEFINE l_flag       LIKE type_t.num5      #記錄是否有欄位變更
DEFINE r_success    LIKE type_t.num5


   LET r_success = TRUE
   LET l_flag = FALSE

   #抓取銷售訂單單頭的值
   INITIALIZE l_xmdx_m.* TO NULL
   SELECT xmdxdocno,xmdx000,xmdxdocdt,xmdx002,xmdx004,
          xmdx003,xmdx005,xmdx006,xmdx007,xmdx008,
          xmdx009,xmdx011,xmdx030,xmdx016,xmdx017,
          xmdx018,xmdx019,xmdx020,xmdx010,xmdx012,
          xmdx001,xmdx014,xmdx015,xmdxsite
     INTO l_xmdx_m.xmdxdocno,l_xmdx_m.xmdx000,l_xmdx_m.xmdxdocdt,l_xmdx_m.xmdx002,l_xmdx_m.xmdx004,
          l_xmdx_m.xmdx003,l_xmdx_m.xmdx005,l_xmdx_m.xmdx006,l_xmdx_m.xmdx007,l_xmdx_m.xmdx008,
          l_xmdx_m.xmdx009,l_xmdx_m.xmdx011,l_xmdx_m.xmdx030,l_xmdx_m.xmdx016,l_xmdx_m.xmdx017,
          l_xmdx_m.xmdx018,l_xmdx_m.xmdx019,l_xmdx_m.xmdx020,l_xmdx_m.xmdx010,l_xmdx_m.xmdx012,
          l_xmdx_m.xmdx001,l_xmdx_m.xmdx014,l_xmdx_m.xmdx015,l_xmdx_m.xmdxsite      
     FROM xmdx_t
    WHERE xmdxent = g_enterprise
      AND xmdxdocno = g_xmea_m.xmeadocno

   #銷售人員
   IF (NOT cl_null(g_xmea_m.xmea002) AND (g_xmea_m.xmea002 != l_xmdx_m.xmdx002 OR cl_null(l_xmdx_m.xmdx002))) OR
      (cl_null(g_xmea_m.xmea002) AND NOT cl_null(l_xmdx_m.xmdx002)) THEN
      #其說明的SQL

      LET g_xmed007 = "SELECT oofa011 FROM oofa_t WHERE oofaent ='"||g_enterprise||"' AND oofa002 = '2' AND oofa003 ='"||l_xmdx_m.xmdx002||"' "
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(0,0,"xmdx002",'1',l_xmdx_m.xmdx002,g_xmea_m.xmea002,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      ELSE
         LET l_flag = TRUE     #有欄位變更，則更新為'Y'
      END IF
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(0,0,"xmdx002",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF 

   #銷售部門
   IF (NOT cl_null(g_xmea_m.xmea003) AND (g_xmea_m.xmea003 != l_xmdx_m.xmdx003 OR cl_null(l_xmdx_m.xmdx003))) OR
      (cl_null(g_xmea_m.xmea003) AND NOT cl_null(l_xmdx_m.xmdx003)) THEN
      #其說明的SQL
      LET g_xmed007 = "SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001='"||l_xmdx_m.xmdx003||"' AND ooefl002='"||g_dlang||"'"
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(0,0,"xmdx003",'1',l_xmdx_m.xmdx003,g_xmea_m.xmea003,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      ELSE
         LET l_flag = TRUE     #有欄位變更，則更新為'Y'
      END IF
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(0,0,"xmdx003",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF 

   #客戶
   IF (NOT cl_null(g_xmea_m.xmea004) AND (g_xmea_m.xmea004 != l_xmdx_m.xmdx004 OR cl_null(l_xmdx_m.xmdx004))) OR
      (cl_null(g_xmea_m.xmea004) AND NOT cl_null(l_xmdx_m.xmdx004)) THEN
      #其說明的SQL
      LET g_xmed007 = "SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001='"||l_xmdx_m.xmdx004||"' AND pmaal002='"||g_dlang||"'"
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(0,0,"xmdx004",'1',l_xmdx_m.xmdx004,g_xmea_m.xmea004,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      ELSE
         LET l_flag = TRUE     #有欄位變更，則更新為'Y'
      END IF
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(0,0,"xmdx004",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF 

   #幣別
   IF (NOT cl_null(g_xmea_m.xmea005) AND (g_xmea_m.xmea005 != l_xmdx_m.xmdx005 OR cl_null(l_xmdx_m.xmdx005))) OR
      (cl_null(g_xmea_m.xmea005) AND NOT cl_null(l_xmdx_m.xmdx005)) THEN
      #其說明的SQL
      LET g_xmed007 = "SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001='"||l_xmdx_m.xmdx005||"' AND ooail002='"||g_dlang||"'"
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(0,0,"xmdx005",'1',l_xmdx_m.xmdx005,g_xmea_m.xmea005,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      ELSE
         LET l_flag = TRUE     #有欄位變更，則更新為'Y'
      END IF
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(0,0,"xmdx005",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF 
   
   #稅別
   IF (NOT cl_null(g_xmea_m.xmea006) AND (g_xmea_m.xmea006 != l_xmdx_m.xmdx006 OR cl_null(l_xmdx_m.xmdx006))) OR
      (cl_null(g_xmea_m.xmea006) AND NOT cl_null(l_xmdx_m.xmdx006)) THEN
      #其說明的SQL
      LET g_xmed007 = "SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='221' AND oocql002='"||l_xmdx_m.xmdx006||"' AND oocql003='"||g_dlang||"'"
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(0,0,"xmdx006",'1',l_xmdx_m.xmdx006,g_xmea_m.xmea006,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      ELSE
         LET l_flag = TRUE     #有欄位變更，則更新為'Y'
      END IF
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(0,0,"xmdx006",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF 
   
   #稅率
   IF (NOT cl_null(g_xmea_m.xmea007) AND (g_xmea_m.xmea007 != l_xmdx_m.xmdx007 OR cl_null(l_xmdx_m.xmdx007))) OR
      (cl_null(g_xmea_m.xmea007) AND NOT cl_null(l_xmdx_m.xmdx007)) THEN
      #其說明的SQL
      LET g_xmed007 = NULL
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(0,0,"xmdx007",'1',l_xmdx_m.xmdx007,g_xmea_m.xmea007,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      ELSE
         LET l_flag = TRUE     #有欄位變更，則更新為'Y'
      END IF
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(0,0,"xmdx007",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF       

   #單價含稅否
   IF (NOT cl_null(g_xmea_m.xmea008) AND (g_xmea_m.xmea008 != l_xmdx_m.xmdx008 OR cl_null(l_xmdx_m.xmdx008))) OR
      (cl_null(g_xmea_m.xmea008) AND NOT cl_null(l_xmdx_m.xmdx008)) THEN
      #其說明的SQL
      LET g_xmed007 = NULL
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(0,0,"xmdx008",'1',l_xmdx_m.xmdx008,g_xmea_m.xmea008,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      ELSE
         LET l_flag = TRUE     #有欄位變更，則更新為'Y'
      END IF
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(0,0,"xmdx008",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF 
   
   #收款條件
   IF (NOT cl_null(g_xmea_m.xmea009) AND (g_xmea_m.xmea009 != l_xmdx_m.xmdx009 OR cl_null(l_xmdx_m.xmdx009))) OR
      (cl_null(g_xmea_m.xmea009) AND NOT cl_null(l_xmdx_m.xmdx009)) THEN
      #其說明的SQL
      LET g_xmed007 = "SELECT ooibl004 FROM ooibl_t WHERE ooiblent='"||g_enterprise||"' AND ooibl002='"||l_xmdx_m.xmdx009||"' AND ooibl003='"||g_dlang||"'"
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(0,0,"xmdx009",'1',l_xmdx_m.xmdx009,g_xmea_m.xmea009,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      ELSE
         LET l_flag = TRUE     #有欄位變更，則更新為'Y'
      END IF
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(0,0,"xmdx009",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF 
   
   #交易條件
   IF (NOT cl_null(g_xmea_m.xmea011) AND (g_xmea_m.xmea011 != l_xmdx_m.xmdx011 OR cl_null(l_xmdx_m.xmdx011))) OR
      (cl_null(g_xmea_m.xmea011) AND NOT cl_null(l_xmdx_m.xmdx011)) THEN
      #其說明的SQL
      LET g_xmed007 = "SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='238' AND oocql002='"||l_xmdx_m.xmdx011||"' AND oocql003='"||g_dlang||"'"
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(0,0,"xmdx011",'1',l_xmdx_m.xmdx011,g_xmea_m.xmea011,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      ELSE
         LET l_flag = TRUE     #有欄位變更，則更新為'Y'
      END IF
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(0,0,"xmdx011",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF 
   
   #備註
   IF (NOT cl_null(g_xmea_m.xmea030) AND (g_xmea_m.xmea030 != l_xmdx_m.xmdx030 OR cl_null(l_xmdx_m.xmdx030))) OR
      (cl_null(g_xmea_m.xmea030) AND NOT cl_null(l_xmdx_m.xmdx030)) THEN
      #其說明的SQL
      LET g_xmed007 = NULL
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(0,0,"xmdx030",'1',l_xmdx_m.xmdx030,g_xmea_m.xmea030,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      ELSE
         LET l_flag = TRUE     #有欄位變更，則更新為'Y'
      END IF
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(0,0,"xmdx030",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF 
   
   #合約對像管制
   IF (NOT cl_null(g_xmea_m.xmea016) AND (g_xmea_m.xmea016 != l_xmdx_m.xmdx016 OR cl_null(l_xmdx_m.xmdx016))) OR
      (cl_null(g_xmea_m.xmea016) AND NOT cl_null(l_xmdx_m.xmdx016)) THEN
      #其說明的SQL
      LET g_xmed007 = NULL
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(0,0,"xmdx016",'1',l_xmdx_m.xmdx016,g_xmea_m.xmea016,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      ELSE
         LET l_flag = TRUE     #有欄位變更，則更新為'Y'
      END IF
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(0,0,"xmdx016",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF             

   #合約使用管制
   IF (NOT cl_null(g_xmea_m.xmea017) AND (g_xmea_m.xmea017 != l_xmdx_m.xmdx017 OR cl_null(l_xmdx_m.xmdx017))) OR
      (cl_null(g_xmea_m.xmea017) AND NOT cl_null(l_xmdx_m.xmdx017)) THEN
      #其說明的SQL
      LET g_xmed007 = NULL
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(0,0,"xmdx017",'1',l_xmdx_m.xmdx017,g_xmea_m.xmea017,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      ELSE
         LET l_flag = TRUE     #有欄位變更，則更新為'Y'
      END IF
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(0,0,"xmdx017",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF 
   
   #管制方式
   IF (NOT cl_null(g_xmea_m.xmea018) AND (g_xmea_m.xmea018 != l_xmdx_m.xmdx018 OR cl_null(l_xmdx_m.xmdx018))) OR
      (cl_null(g_xmea_m.xmea018) AND NOT cl_null(l_xmdx_m.xmdx018)) THEN
      #其說明的SQL
      LET g_xmed007 = NULL
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(0,0,"xmdx018",'1',l_xmdx_m.xmdx018,g_xmea_m.xmea018,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      ELSE
         LET l_flag = TRUE     #有欄位變更，則更新為'Y'
      END IF
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(0,0,"xmdx018",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF 
   
   #限定幣別
   IF (NOT cl_null(g_xmea_m.xmea019) AND (g_xmea_m.xmea019 != l_xmdx_m.xmdx019 OR cl_null(l_xmdx_m.xmdx019))) OR
      (cl_null(g_xmea_m.xmea019) AND NOT cl_null(l_xmdx_m.xmdx019)) THEN
      #其說明的SQL
      LET g_xmed007 = NULL
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(0,0,"xmdx019",'1',l_xmdx_m.xmdx019,g_xmea_m.xmea019,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      ELSE
         LET l_flag = TRUE     #有欄位變更，則更新為'Y'
      END IF
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(0,0,"xmdx019",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF 
   
   #限定稅別
   IF (NOT cl_null(g_xmea_m.xmea020) AND (g_xmea_m.xmea020 != l_xmdx_m.xmdx020 OR cl_null(l_xmdx_m.xmdx020))) OR
      (cl_null(g_xmea_m.xmea020) AND NOT cl_null(l_xmdx_m.xmdx020)) THEN
      #其說明的SQL
      LET g_xmed007 = NULL
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(0,0,"xmdx020",'1',l_xmdx_m.xmdx020,g_xmea_m.xmea020,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      ELSE
         LET l_flag = TRUE     #有欄位變更，則更新為'Y'
      END IF
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(0,0,"xmdx020",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF  
   
   #限定收款條件
   IF (NOT cl_null(g_xmea_m.xmea010) AND (g_xmea_m.xmea010 != l_xmdx_m.xmdx010 OR cl_null(l_xmdx_m.xmdx010))) OR
      (cl_null(g_xmea_m.xmea010) AND NOT cl_null(l_xmdx_m.xmdx010)) THEN
      #其說明的SQL
      LET g_xmed007 = NULL
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(0,0,"xmdx010",'1',l_xmdx_m.xmdx010,g_xmea_m.xmea010,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      ELSE
         LET l_flag = TRUE     #有欄位變更，則更新為'Y'
      END IF
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(0,0,"xmdx010",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF  
   
   #限定交易條件
   IF (NOT cl_null(g_xmea_m.xmea012) AND (g_xmea_m.xmea012 != l_xmdx_m.xmdx012 OR cl_null(l_xmdx_m.xmdx012))) OR
      (cl_null(g_xmea_m.xmea012) AND NOT cl_null(l_xmdx_m.xmdx012)) THEN
      #其說明的SQL
      LET g_xmed007 = NULL
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(0,0,"xmdx012",'1',l_xmdx_m.xmdx012,g_xmea_m.xmea012,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      ELSE
         LET l_flag = TRUE     #有欄位變更，則更新為'Y'
      END IF
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(0,0,"xmdx012",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF  
   
   #生效日期
   IF (NOT cl_null(g_xmea_m.xmea014) AND (g_xmea_m.xmea014 != l_xmdx_m.xmdx014 OR cl_null(l_xmdx_m.xmdx014))) OR
      (cl_null(g_xmea_m.xmea014) AND NOT cl_null(l_xmdx_m.xmdx014)) THEN
      #其說明的SQL
      LET g_xmed007 = NULL
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(0,0,"xmdx014",'1',l_xmdx_m.xmdx014,g_xmea_m.xmea014,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      ELSE
         LET l_flag = TRUE     #有欄位變更，則更新為'Y'
      END IF
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(0,0,"xmdx014",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF   
   
   #失效日期
   IF (NOT cl_null(g_xmea_m.xmea015) AND (g_xmea_m.xmea015 != l_xmdx_m.xmdx015 OR cl_null(l_xmdx_m.xmdx015))) OR
      (cl_null(g_xmea_m.xmea015) AND NOT cl_null(l_xmdx_m.xmdx015)) THEN
      #其說明的SQL
      LET g_xmed007 = NULL
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(0,0,"xmdx015",'1',l_xmdx_m.xmdx015,g_xmea_m.xmea015,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      ELSE
         LET l_flag = TRUE     #有欄位變更，則更新為'Y'
      END IF
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(0,0,"xmdx015",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF                     
   
   IF l_flag THEN
      UPDATE xmea_t SET xmea901 = 'Y'
       WHERE xmeaent = g_enterprise
         AND xmeadocno = g_xmea_m.xmeadocno
         AND xmea900 = g_xmea_m.xmea900
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "upd xmea901"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF

   RETURN r_success  
END FUNCTION
################################################################################
# Descriptions...: 將單身有修改的欄位新增到變更歷程檔內
# Memo...........:
# Usage..........: CALL axmt450_xmeb_ins_xmed(p_xmeb_d,p_xmeb2_d)
#                  RETURNING r_success
# Input parameter: p_xmeb_d        單身ARRAY
#                : p_xmeb2_d       單身2ARRAY
# Return code....: r_success       TRUE/FALSE
#                : 
# Date & Author..: 2014/05/27 By Polly
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt450_xmeb_ins_xmed(p_xmeb_d,p_xmeb2_d)
DEFINE p_xmeb_d          type_g_xmeb_d
DEFINE p_xmeb2_d         type_g_xmeb2_d
DEFINE r_success         LIKE type_t.num5
#161109-00085#6-mod-s
#DEFINE l_xmdy            RECORD LIKE xmdy_t.*  #161109-00085#6   mark
DEFINE l_xmdy            RECORD  #銷售合約單明細檔
       xmdyent LIKE xmdy_t.xmdyent, #企業編號
       xmdysite LIKE xmdy_t.xmdysite, #營運據點
       xmdydocno LIKE xmdy_t.xmdydocno, #合約單號
       xmdyseq LIKE xmdy_t.xmdyseq, #項次
       xmdy001 LIKE xmdy_t.xmdy001, #委外否
       xmdy002 LIKE xmdy_t.xmdy002, #料件編號
       xmdy003 LIKE xmdy_t.xmdy003, #產品特徵
       xmdy004 LIKE xmdy_t.xmdy004, #包裝容器
       xmdy005 LIKE xmdy_t.xmdy005, #客戶料號
       xmdy006 LIKE xmdy_t.xmdy006, #作業編號
       xmdy007 LIKE xmdy_t.xmdy007, #製程式
       xmdy008 LIKE xmdy_t.xmdy008, #單位
       xmdy009 LIKE xmdy_t.xmdy009, #數量
       xmdy010 LIKE xmdy_t.xmdy010, #單價
       xmdy011 LIKE xmdy_t.xmdy011, #稅別
       xmdy012 LIKE xmdy_t.xmdy012, #稅率
       xmdy013 LIKE xmdy_t.xmdy013, #運輸方式
       xmdy014 LIKE xmdy_t.xmdy014, #理由碼
       xmdy017 LIKE xmdy_t.xmdy017, #未稅金額
       xmdy018 LIKE xmdy_t.xmdy018, #含稅金額
       xmdy019 LIKE xmdy_t.xmdy019, #稅額
       xmdy020 LIKE xmdy_t.xmdy020, #累計數量
       xmdy021 LIKE xmdy_t.xmdy021, #累計未稅金額
       xmdy022 LIKE xmdy_t.xmdy022, #累計含稅金額
       xmdy023 LIKE xmdy_t.xmdy023, #累計稅額
       xmdy024 LIKE xmdy_t.xmdy024, #累計量定價否
       #xmdy030 LIKE xmdy_t.xmdy030  #備註 #161109-00085#73 mark
       #161109-00085#73 --s mark
       xmdy030 LIKE xmdy_t.xmdy030, #備註
       xmdyud001 LIKE xmdy_t.xmdyud001, #自定義欄位(文字)001
       xmdyud002 LIKE xmdy_t.xmdyud002, #自定義欄位(文字)002
       xmdyud003 LIKE xmdy_t.xmdyud003, #自定義欄位(文字)003
       xmdyud004 LIKE xmdy_t.xmdyud004, #自定義欄位(文字)004
       xmdyud005 LIKE xmdy_t.xmdyud005, #自定義欄位(文字)005
       xmdyud006 LIKE xmdy_t.xmdyud006, #自定義欄位(文字)006
       xmdyud007 LIKE xmdy_t.xmdyud007, #自定義欄位(文字)007
       xmdyud008 LIKE xmdy_t.xmdyud008, #自定義欄位(文字)008
       xmdyud009 LIKE xmdy_t.xmdyud009, #自定義欄位(文字)009
       xmdyud010 LIKE xmdy_t.xmdyud010, #自定義欄位(文字)010
       xmdyud011 LIKE xmdy_t.xmdyud011, #自定義欄位(數字)011
       xmdyud012 LIKE xmdy_t.xmdyud012, #自定義欄位(數字)012
       xmdyud013 LIKE xmdy_t.xmdyud013, #自定義欄位(數字)013
       xmdyud014 LIKE xmdy_t.xmdyud014, #自定義欄位(數字)014
       xmdyud015 LIKE xmdy_t.xmdyud015, #自定義欄位(數字)015
       xmdyud016 LIKE xmdy_t.xmdyud016, #自定義欄位(數字)016
       xmdyud017 LIKE xmdy_t.xmdyud017, #自定義欄位(數字)017
       xmdyud018 LIKE xmdy_t.xmdyud018, #自定義欄位(數字)018
       xmdyud019 LIKE xmdy_t.xmdyud019, #自定義欄位(數字)019
       xmdyud020 LIKE xmdy_t.xmdyud020, #自定義欄位(數字)020
       xmdyud021 LIKE xmdy_t.xmdyud021, #自定義欄位(日期時間)021
       xmdyud022 LIKE xmdy_t.xmdyud022, #自定義欄位(日期時間)022
       xmdyud023 LIKE xmdy_t.xmdyud023, #自定義欄位(日期時間)023
       xmdyud024 LIKE xmdy_t.xmdyud024, #自定義欄位(日期時間)024
       xmdyud025 LIKE xmdy_t.xmdyud025, #自定義欄位(日期時間)025
       xmdyud026 LIKE xmdy_t.xmdyud026, #自定義欄位(日期時間)026
       xmdyud027 LIKE xmdy_t.xmdyud027, #自定義欄位(日期時間)027
       xmdyud028 LIKE xmdy_t.xmdyud028, #自定義欄位(日期時間)028
       xmdyud029 LIKE xmdy_t.xmdyud029, #自定義欄位(日期時間)029
       xmdyud030 LIKE xmdy_t.xmdyud030  #自定義欄位(日期時間)030
       #161109-00085#73 --e mark
          END RECORD
#161109-00085#6-mod-e
DEFINE l_xmedseq         LIKE xmed_t.xmedseq
DEFINE l_flag            LIKE type_t.num5      #單身是否有修改
DEFINE l_ooef019         LIKE ooef_t.ooef019
DEFINE l_success         LIKE type_t.num5     #161031-00025#22 add
DEFINE l_ooff013         LIKE ooff_t.ooff013  #161031-00025#22 add
DEFINE l_ooff013_1       LIKE ooff_t.ooff013  #161031-00025#22 add

   LET r_success = TRUE

   IF p_xmeb_d.xmeb901 = '1' THEN       #未變更不需寫入歷程檔內  
      RETURN r_success
   END IF

   INITIALIZE l_xmdy.* TO NULL
   LET l_flag = FALSE

   IF p_xmeb_d.xmeb901 = '2' THEN     
      SELECT xmdysite,xmdyseq,xmdy002,xmdy003,xmdy005,
             xmdy006,xmdy007,xmdy014,xmdy008,xmdy009,
             xmdy010,xmdy024,xmdy011,xmdy012,xmdy017,
             xmdy018,xmdy019,xmdy013,xmdy004,xmdy030,
             xmdy001,xmdy020,xmdy021,xmdy022,xmdy023 
        INTO l_xmdy.xmdysite,l_xmdy.xmdyseq,l_xmdy.xmdy002,l_xmdy.xmdy003,l_xmdy.xmdy005,
             l_xmdy.xmdy006,l_xmdy.xmdy007,l_xmdy.xmdy014,l_xmdy.xmdy008,l_xmdy.xmdy009,
             l_xmdy.xmdy010,l_xmdy.xmdy024,l_xmdy.xmdy011,l_xmdy.xmdy012,l_xmdy.xmdy017,
             l_xmdy.xmdy018,l_xmdy.xmdy019,l_xmdy.xmdy013,l_xmdy.xmdy004,l_xmdy.xmdy030,
             l_xmdy.xmdy001,l_xmdy.xmdy020,l_xmdy.xmdy021,l_xmdy.xmdy022,l_xmdy.xmdy023        
        FROM xmdy_t 
       WHERE xmdyent = g_enterprise
         AND xmdydocno = g_xmea_m.xmeadocno
         AND xmdyseq = p_xmeb_d.xmebseq   
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'sel xmdy_t'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET r_success = FALSE
         RETURN r_success
      END IF 
   END IF                    
   LET l_xmedseq = p_xmeb_d.xmebseq
   
   #項次
   IF p_xmeb_d.xmeb901 = '3' OR (p_xmeb_d.xmeb901 = '2' AND
      ((p_xmeb_d.xmebseq <> l_xmdy.xmdyseq) OR
      (p_xmeb_d.xmebseq IS NULL AND l_xmdy.xmdyseq IS NOT NULL) OR
      (p_xmeb_d.xmebseq IS NOT NULL AND l_xmdy.xmdyseq IS NULL))) THEN
      #其說明的SQL
      LET g_xmed007 = NULL
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(l_xmedseq,0,"xmdyseq",p_xmeb_d.xmeb901,l_xmdy.xmdyseq,p_xmeb_d.xmebseq,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
      LET l_flag = TRUE
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(l_xmedseq,0,"xmdyseq",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF

   #料件
   IF p_xmeb_d.xmeb901 = '3' OR (p_xmeb_d.xmeb901 = '2' AND
      ((p_xmeb_d.xmeb002 <> l_xmdy.xmdy002) OR
      (p_xmeb_d.xmeb002 IS NULL AND l_xmdy.xmdy002 IS NOT NULL) OR
      (p_xmeb_d.xmeb002 IS NOT NULL AND l_xmdy.xmdy002 IS NULL))) THEN
      #其說明的SQL
      LET g_xmed007 = "SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001='"||l_xmdy.xmdy002||"' AND imaal002='"||g_dlang||"'"
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(l_xmedseq,0,"xmdy002",p_xmeb_d.xmeb901,l_xmdy.xmdy002,p_xmeb_d.xmeb002,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
      LET l_flag = TRUE
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(l_xmedseq,0,"xmdy002",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF

   #產品特徵
   IF p_xmeb_d.xmeb901 = '3' OR (p_xmeb_d.xmeb901 = '2' AND
      ((p_xmeb_d.xmeb003 <> l_xmdy.xmdy003) OR
      (p_xmeb_d.xmeb003 IS NULL AND l_xmdy.xmdy003 IS NOT NULL) OR
      (p_xmeb_d.xmeb003 IS NOT NULL AND l_xmdy.xmdy003 IS NULL))) THEN
      #其說明的SQL
      LET g_xmed007 = NULL
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(l_xmedseq,0,"xmdy003",p_xmeb_d.xmeb901,l_xmdy.xmdy003,p_xmeb_d.xmeb003,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
      LET l_flag = TRUE
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(l_xmedseq,0,"xmdy003",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF
   
   #客戶料號
   IF p_xmeb_d.xmeb901 = '3' OR (p_xmeb_d.xmeb901 = '2' AND
      ((p_xmeb_d.xmeb005 <> l_xmdy.xmdy005) OR
      (p_xmeb_d.xmeb005 IS NULL AND l_xmdy.xmdy005 IS NOT NULL) OR
      (p_xmeb_d.xmeb005 IS NOT NULL AND l_xmdy.xmdy005 IS NULL))) THEN
      #其說明的SQL
      LET g_xmed007 = NULL
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(l_xmedseq,0,"xmdy005",p_xmeb_d.xmeb901,l_xmdy.xmdy005,p_xmeb_d.xmeb005,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
      LET l_flag = TRUE
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(l_xmedseq,0,"xmdy005",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF
   
   #作業編號
   IF p_xmeb_d.xmeb901 = '3' OR (p_xmeb_d.xmeb901 = '2' AND
      ((p_xmeb_d.xmeb006 <> l_xmdy.xmdy006) OR
      (p_xmeb_d.xmeb006 IS NULL AND l_xmdy.xmdy006 IS NOT NULL) OR
      (p_xmeb_d.xmeb006 IS NOT NULL AND l_xmdy.xmdy006 IS NULL))) THEN
      #其說明的SQL
      LET g_xmed007 = "SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='221' AND oocql002='"||l_xmdy.xmdy006||"' AND oocql003='"||g_dlang||"'"
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(l_xmedseq,0,"xmdy006",p_xmeb_d.xmeb901,l_xmdy.xmdy006,p_xmeb_d.xmeb006,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
      LET l_flag = TRUE
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(l_xmedseq,0,"xmdy006",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF   
   #製程序
   IF p_xmeb_d.xmeb901 = '3' OR (p_xmeb_d.xmeb901 = '2' AND
      ((p_xmeb_d.xmeb007 <> l_xmdy.xmdy007) OR
      (p_xmeb_d.xmeb007 IS NULL AND l_xmdy.xmdy007 IS NOT NULL) OR
      (p_xmeb_d.xmeb007 IS NOT NULL AND l_xmdy.xmdy007 IS NULL))) THEN
      #其說明的SQL
      LET g_xmed007 = NULL
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(l_xmedseq,0,"xmdy007",p_xmeb_d.xmeb901,l_xmdy.xmdy007,p_xmeb_d.xmeb007,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
      LET l_flag = TRUE
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(l_xmedseq,0,"xmdy007",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF

   #理由碼
   IF p_xmeb_d.xmeb901 = '3' OR (p_xmeb_d.xmeb901 = '2' AND
      ((p_xmeb_d.xmeb014 <> l_xmdy.xmdy014) OR
      (p_xmeb_d.xmeb014 IS NULL AND l_xmdy.xmdy014 IS NOT NULL) OR
      (p_xmeb_d.xmeb014 IS NOT NULL AND l_xmdy.xmdy014 IS NULL))) THEN
      #其說明的SQL
      LET g_xmed007 = "SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='277' AND oocql002='"||l_xmdy.xmdy014||"' AND oocql003='"||g_dlang||"'"
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(l_xmedseq,0,"xmdy014",p_xmeb_d.xmeb901,l_xmdy.xmdy014,p_xmeb_d.xmeb014,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
      LET l_flag = TRUE
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(l_xmedseq,0,"xmdy014",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF 
   
   #單價
   IF p_xmeb_d.xmeb901 = '3' OR (p_xmeb_d.xmeb901 = '2' AND
      ((p_xmeb_d.xmeb010 <> l_xmdy.xmdy010) OR
      (p_xmeb_d.xmeb010 IS NULL AND l_xmdy.xmdy010 IS NOT NULL) OR
      (p_xmeb_d.xmeb010 IS NOT NULL AND l_xmdy.xmdy010 IS NULL))) THEN
      #其說明的SQL
      LET g_xmed007 = NULL
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(l_xmedseq,0,"xmdy010",p_xmeb_d.xmeb901,l_xmdy.xmdy010,p_xmeb_d.xmeb010,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
      LET l_flag = TRUE
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(l_xmedseq,0,"xmdy010",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF
   
   #單位
   IF p_xmeb_d.xmeb901 = '3' OR (p_xmeb_d.xmeb901 = '2' AND
      ((p_xmeb_d.xmeb008 <> l_xmdy.xmdy008) OR
      (p_xmeb_d.xmeb008 IS NULL AND l_xmdy.xmdy008 IS NOT NULL) OR
      (p_xmeb_d.xmeb008 IS NOT NULL AND l_xmdy.xmdy008 IS NULL))) THEN
      #其說明的SQL
      LET g_xmed007 = "SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001='"||l_xmdy.xmdy008||"' AND oocal002='"||g_dlang||"'"
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(l_xmedseq,0,"xmdy008",p_xmeb_d.xmeb901,l_xmdy.xmdy008,p_xmeb_d.xmeb008,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
      LET l_flag = TRUE
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(l_xmedseq,0,"xmdy008",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF
   
   #數量
   IF p_xmeb_d.xmeb901 = '3' OR (p_xmeb_d.xmeb901 = '2' AND
      ((p_xmeb_d.xmeb009 <> l_xmdy.xmdy009) OR
      (p_xmeb_d.xmeb009 IS NULL AND l_xmdy.xmdy009 IS NOT NULL) OR
      (p_xmeb_d.xmeb009 IS NOT NULL AND l_xmdy.xmdy009 IS NULL))) THEN
      #其說明的SQL
      LET g_xmed007 = NULL
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(l_xmedseq,0,"xmdy009",p_xmeb_d.xmeb901,l_xmdy.xmdy009,p_xmeb_d.xmeb009,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
      LET l_flag = TRUE
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(l_xmedseq,0,"xmdy009",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF            

   #單價
   IF p_xmeb_d.xmeb901 = '3' OR (p_xmeb_d.xmeb901 = '2' AND
      ((p_xmeb_d.xmeb010 <> l_xmdy.xmdy010) OR
      (p_xmeb_d.xmeb010 IS NULL AND l_xmdy.xmdy010 IS NOT NULL) OR
      (p_xmeb_d.xmeb010 IS NOT NULL AND l_xmdy.xmdy010 IS NULL))) THEN
      #其說明的SQL
      LET g_xmed007 = NULL
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(l_xmedseq,0,"xmdy010",p_xmeb_d.xmeb901,l_xmdy.xmdy010,p_xmeb_d.xmeb010,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
      LET l_flag = TRUE
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(l_xmedseq,0,"xmdy010",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF
   
   #累計量定價否
   IF p_xmeb_d.xmeb901 = '3' OR (p_xmeb_d.xmeb901 = '2' AND
      ((p_xmeb_d.xmeb024 <> l_xmdy.xmdy024) OR
      (p_xmeb_d.xmeb024 IS NULL AND l_xmdy.xmdy024 IS NOT NULL) OR
      (p_xmeb_d.xmeb024 IS NOT NULL AND l_xmdy.xmdy024 IS NULL))) THEN
      #其說明的SQL
      LET g_xmed007 = NULL
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(l_xmedseq,0,"xmdy024",p_xmeb_d.xmeb901,l_xmdy.xmdy024,p_xmeb_d.xmeb024,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
      LET l_flag = TRUE
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(l_xmedseq,0,"xmdy024",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF
   
   #稅別
   IF p_xmeb_d.xmeb901 = '3' OR (p_xmeb_d.xmeb901 = '2' AND
      ((p_xmeb_d.xmeb011 <> l_xmdy.xmdy011) OR
      (p_xmeb_d.xmeb011 IS NULL AND l_xmdy.xmdy011 IS NOT NULL) OR
      (p_xmeb_d.xmeb011 IS NOT NULL AND l_xmdy.xmdy011 IS NULL))) THEN
      LET l_ooef019 = ''
      SELECT ooef019 INTO l_ooef019
        FROM ooef_t
       WHERE ooefent = g_enterprise
         AND ooef001 = g_site
      #其說明的SQL
      LET g_xmed007 = "SELECT oodb006 FROM oodb_t WHERE oodbent='"||g_enterprise||"' AND oodb001='"||l_ooef019||"' AND oodb002='"||l_xmdy.xmdy011||"'"
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(l_xmedseq,0,"xmdy011",p_xmeb_d.xmeb901,l_xmdy.xmdy011,p_xmeb_d.xmeb011,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
      LET l_flag = TRUE
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(l_xmedseq,0,"xmdy011",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF 
   
   #稅率
   IF p_xmeb_d.xmeb901 = '3' OR (p_xmeb_d.xmeb901 = '2' AND
      ((p_xmeb_d.xmeb012 <> l_xmdy.xmdy012) OR
      (p_xmeb_d.xmeb012 IS NULL AND l_xmdy.xmdy012 IS NOT NULL) OR
      (p_xmeb_d.xmeb012 IS NOT NULL AND l_xmdy.xmdy012 IS NULL))) THEN
      #其說明的SQL
      LET g_xmed007 = NULL
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(l_xmedseq,0,"xmdy012",p_xmeb_d.xmeb901,l_xmdy.xmdy012,p_xmeb_d.xmeb012,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
      LET l_flag = TRUE
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(l_xmedseq,0,"xmdy012",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF
   
   #未稅金額
   IF p_xmeb_d.xmeb901 = '3' OR (p_xmeb_d.xmeb901 = '2' AND
      ((p_xmeb_d.xmeb017 <> l_xmdy.xmdy017) OR
      (p_xmeb_d.xmeb017 IS NULL AND l_xmdy.xmdy017 IS NOT NULL) OR
      (p_xmeb_d.xmeb017 IS NOT NULL AND l_xmdy.xmdy017 IS NULL))) THEN
      #其說明的SQL
      LET g_xmed007 = NULL
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(l_xmedseq,0,"xmdy017",p_xmeb_d.xmeb901,l_xmdy.xmdy017,p_xmeb_d.xmeb017,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
      LET l_flag = TRUE
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(l_xmedseq,0,"xmdy017",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF
   
   #含稅金額
   IF p_xmeb_d.xmeb901 = '3' OR (p_xmeb_d.xmeb901 = '2' AND
      ((p_xmeb_d.xmeb018 <> l_xmdy.xmdy018) OR
      (p_xmeb_d.xmeb018 IS NULL AND l_xmdy.xmdy018 IS NOT NULL) OR
      (p_xmeb_d.xmeb018 IS NOT NULL AND l_xmdy.xmdy018 IS NULL))) THEN
      #其說明的SQL
      LET g_xmed007 = NULL
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(l_xmedseq,0,"xmdy018",p_xmeb_d.xmeb901,l_xmdy.xmdy018,p_xmeb_d.xmeb018,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
      LET l_flag = TRUE
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(l_xmedseq,0,"xmdy018",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF
   
   #稅額
   IF p_xmeb_d.xmeb901 = '3' OR (p_xmeb_d.xmeb901 = '2' AND
      ((p_xmeb_d.xmeb019 <> l_xmdy.xmdy019) OR
      (p_xmeb_d.xmeb019 IS NULL AND l_xmdy.xmdy019 IS NOT NULL) OR
      (p_xmeb_d.xmeb019 IS NOT NULL AND l_xmdy.xmdy019 IS NULL))) THEN
      #其說明的SQL
      LET g_xmed007 = NULL
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(l_xmedseq,0,"xmdy019",p_xmeb_d.xmeb901,l_xmdy.xmdy019,p_xmeb_d.xmeb019,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
      LET l_flag = TRUE
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(l_xmedseq,0,"xmdy019",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF      

   #運輸方式
   IF p_xmeb_d.xmeb901 = '3' OR (p_xmeb_d.xmeb901 = '2' AND
      ((p_xmeb_d.xmeb013 <> l_xmdy.xmdy013) OR
      (p_xmeb_d.xmeb013 IS NULL AND l_xmdy.xmdy013 IS NOT NULL) OR
      (p_xmeb_d.xmeb013 IS NOT NULL AND l_xmdy.xmdy013 IS NULL))) THEN
      #其說明的SQL
      LET g_xmed007 = "SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='263' AND oocql002='"||l_xmdy.xmdy013||"' AND oocql003='"||g_dlang||"'"
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(l_xmedseq,0,"xmdy013",p_xmeb_d.xmeb901,l_xmdy.xmdy013,p_xmeb_d.xmeb013,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
      LET l_flag = TRUE
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(l_xmedseq,0,"xmdy013",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF 
   
   #包裝容器
   IF p_xmeb_d.xmeb901 = '3' OR (p_xmeb_d.xmeb901 = '2' AND
      ((p_xmeb_d.xmeb004 <> l_xmdy.xmdy004) OR
      (p_xmeb_d.xmeb004 IS NULL AND l_xmdy.xmdy004 IS NOT NULL) OR
      (p_xmeb_d.xmeb004 IS NOT NULL AND l_xmdy.xmdy004 IS NULL))) THEN
      #其說明的SQL
      LET g_xmed007 = "SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='263' AND oocql002='"||l_xmdy.xmdy004||"' AND oocql003='"||g_dlang||"'"
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(l_xmedseq,0,"xmdy004",p_xmeb_d.xmeb901,l_xmdy.xmdy004,p_xmeb_d.xmeb004,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
      LET l_flag = TRUE
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(l_xmedseq,0,"xmdy004",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF 

   #備註
   IF p_xmeb_d.xmeb901 = '3' OR (p_xmeb_d.xmeb901 = '2' AND
      ((p_xmeb_d.xmeb030 <> l_xmdy.xmdy030) OR
      (p_xmeb_d.xmeb030 IS NULL AND l_xmdy.xmdy030 IS NOT NULL) OR
      (p_xmeb_d.xmeb030 IS NOT NULL AND l_xmdy.xmdy030 IS NULL))) THEN
      #其說明的SQL
      LET g_xmed007 = NULL
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(l_xmedseq,0,"xmdy030",p_xmeb_d.xmeb901,l_xmdy.xmdy030,p_xmeb_d.xmeb030,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
      LET l_flag = TRUE
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除
      IF NOT s_axmt450_del_xmed(l_xmedseq,0,"xmdy030",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF

   #161031-00025#22-s add
   #長備註
   CALL s_aooi360_sel('7','axmt440',g_xmea_m.xmeadocno,l_xmedseq,'','','','','','','','1')
        RETURNING l_success,l_ooff013
   CALL s_aooi360_sel('7',g_prog,g_xmea_m.xmeadocno,l_xmedseq,g_xmea_m.xmea900,'','','','','','','1')
        RETURNING l_success,l_ooff013_1
   IF p_xmeb_d.xmeb901 = '3' OR (p_xmeb_d.xmeb901 = '2' AND
      ((l_ooff013_1 <> l_ooff013) OR
       (l_ooff013_1 IS NULL AND l_ooff013 IS NOT NULL) OR
       (l_ooff013_1 IS NOT NULL AND l_ooff013 IS NULL))) THEN
      #其說明的SQL
      LET g_xmed007 = NULL
      #新增資料到變更歷程檔
      IF NOT s_axmt450_ins_xmed(l_xmedseq,0,"ooff013",p_xmeb_d.xmeb901,l_ooff013,l_ooff013_1,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
      LET l_flag = TRUE
   ELSE
      #資料一樣，表示無變更，將變更歷程檔刪除      
      IF NOT s_axmt450_del_xmed(l_xmedseq,0,"ooff013",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF
   #161031-00025#22-e add
   
   #表示此筆單身與訂單該筆單身一致
   IF l_flag = FALSE THEN
      UPDATE xmeb_t SET xmeb901 = '1'
       WHERE xmebent = g_enterprise
         AND xmebdocno = g_xmea_m.xmeadocno
         AND xmeb900 = g_xmea_m.xmea900
         AND xmebseq = p_xmeb_d.xmebseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'xmeb_t'
         LET g_errparam.popup = TRUE
         CALL cl_err()
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF

   RETURN r_success
   
END FUNCTION
#單頭文字顯示的初始化
PRIVATE FUNCTION axmt450_head_init_color()
   CALL cl_set_comp_font_color("xmeadocdt,xmeaacti,xmeastus,xmea000","black")
   CALL cl_set_comp_font_color("xmea001,xmea002,xmea003,xmea004,xmea005","black")
   CALL cl_set_comp_font_color("xmea006,xmea007,xmea008,xmea009,xmea010","black")
   CALL cl_set_comp_font_color("xmea011,xmea012,xmea014,xmea015,xmea016","black")
   CALL cl_set_comp_font_color("xmea017,xmea018,xmea019,xmea020,xmea030","black")
END FUNCTION
#單身文字顯示的初始化(s_detail1、s_detail2)
PRIVATE FUNCTION axmt450_detail_init_color()
   #s_detail1
   LET g_xmeb_d_color[l_ac].xmebsite      = 'black'
   LET g_xmeb_d_color[l_ac].xmebseq       = 'black'
   LET g_xmeb_d_color[l_ac].xmeb002       = 'black'
   LET g_xmeb_d_color[l_ac].xmeb002_desc  = 'black'
   LET g_xmeb_d_color[l_ac].xmeb002_desc_desc = 'black'
   LET g_xmeb_d_color[l_ac].xmeb003       = 'black'
   LET g_xmeb_d_color[l_ac].xmeb003_desc  = 'black'
   LET g_xmeb_d_color[l_ac].xmeb005       = 'black'
   LET g_xmeb_d_color[l_ac].xmeb005_desc  = 'black'
   LET g_xmeb_d_color[l_ac].xmeb005_desc_desc = 'black'
   LET g_xmeb_d_color[l_ac].xmeb006       = 'black'
   LET g_xmeb_d_color[l_ac].xmeb006_desc  = 'black'
   LET g_xmeb_d_color[l_ac].xmeb007       = 'black'
   LET g_xmeb_d_color[l_ac].xmeb014       = 'black'
   LET g_xmeb_d_color[l_ac].xmeb014_desc  = 'black'
   LET g_xmeb_d_color[l_ac].xmeb008       = 'black'
   LET g_xmeb_d_color[l_ac].xmeb008_desc  = 'black'
   LET g_xmeb_d_color[l_ac].xmeb009       = 'black'
   LET g_xmeb_d_color[l_ac].xmeb010       = 'black'
   LET g_xmeb_d_color[l_ac].xmeb024       = 'black'
   LET g_xmeb_d_color[l_ac].xmeb011       = 'black'
   LET g_xmeb_d_color[l_ac].xmeb011_desc  = 'black'
   LET g_xmeb_d_color[l_ac].xmeb012       = 'black'
   LET g_xmeb_d_color[l_ac].xmeb017       = 'black'
   LET g_xmeb_d_color[l_ac].xmeb018       = 'black'
   LET g_xmeb_d_color[l_ac].xmeb019       = 'black'
   LET g_xmeb_d_color[l_ac].xmeb013       = 'black'
   LET g_xmeb_d_color[l_ac].xmeb013_desc  = 'black'
   LET g_xmeb_d_color[l_ac].xmeb004       = 'black'
   LET g_xmeb_d_color[l_ac].xmeb030       = 'black'
   LET g_xmeb_d_color[l_ac].xmeb901       = 'black'
   LET g_xmeb_d_color[l_ac].xmeb902       = 'black'
   LET g_xmeb_d_color[l_ac].xmeb902_desc  = 'black'
   LET g_xmeb_d_color[l_ac].xmeb903       = 'black'
   LET g_xmeb_d_color[l_ac].xmeb001       = 'black'
   LET g_xmeb_d_color[l_ac].ooff013       = 'black'  #161031-00025#22 add
   #s_detail2
   LET g_xmeb2_d_color[l_ac].xmebseq         = 'black'
   LET g_xmeb2_d_color[l_ac].xmeb0022        = 'black'
   LET g_xmeb2_d_color[l_ac].xmeb002_2_desc  = 'black'
   LET g_xmeb2_d_color[l_ac].xmeb002_2_desc_desc = 'black'
   LET g_xmeb2_d_color[l_ac].xmeb0032        = 'black'
   LET g_xmeb2_d_color[l_ac].xmeb0032_desc   = 'black'
   LET g_xmeb2_d_color[l_ac].xmeb0062        = 'black'
   LET g_xmeb2_d_color[l_ac].xmeb0062_desc   = 'black'
   LET g_xmeb2_d_color[l_ac].xmeb0072        = 'black'
   LET g_xmeb2_d_color[l_ac].xmeb0082        = 'black'
   LET g_xmeb2_d_color[l_ac].xmeb0082_desc   = 'black'
   LET g_xmeb2_d_color[l_ac].xmeb0092        = 'black'
   LET g_xmeb2_d_color[l_ac].xmeb0102        = 'black'
   LET g_xmeb2_d_color[l_ac].xmeb020         = 'black'
   LET g_xmeb2_d_color[l_ac].xmeb021         = 'black'
   LET g_xmeb2_d_color[l_ac].xmeb022         = 'black'
   LET g_xmeb2_d_color[l_ac].xmeb023         = 'black'
   LET g_xmeb2_d_color[l_ac].xmeb0202        = 'black'
   LET g_xmeb2_d_color[l_ac].xmeb0212        = 'black'
   LET g_xmeb2_d_color[l_ac].xmeb0222        = 'black'
   LET g_xmeb2_d_color[l_ac].xmeb0232        = 'black'
END FUNCTION
#累計定價文字顯示的初始化
PRIVATE FUNCTION axmt450_detail3_init_color()
   LET g_xmeb3_d_color[l_ac].xmecseq      = 'black'
   LET g_xmeb3_d_color[l_ac].xmecseq1     = 'black'
   LET g_xmeb3_d_color[l_ac].xmec001      = 'black'
   LET g_xmeb3_d_color[l_ac].xmec002      = 'black'
   LET g_xmeb3_d_color[l_ac].xmec003      = 'black'
   LET g_xmeb3_d_color[l_ac].xmec004      = 'black'
   LET g_xmeb3_d_color[l_ac].xmec005      = 'black'
   LET g_xmeb3_d_color[l_ac].xmec901      = 'black'
   LET g_xmeb3_d_color[l_ac].xmec902      = 'black'
   LET g_xmeb3_d_color[l_ac].xmec902_desc = 'black'
   LET g_xmeb3_d_color[l_ac].xmec903      = 'black'
END FUNCTION
#單頭文字顏色顯示
PRIVATE FUNCTION axmt450_head_color()
DEFINE l_xmed002    LIKE xmed_t.xmed002   

   CALL axmt450_head_init_color()

   DECLARE sel_xmed_cs1 CURSOR FOR
      SELECT xmed002 FROM xmed_t
       WHERE xmedent = g_enterprise
         AND xmeddocno = g_xmea_m.xmeadocno
         AND xmed001 = g_xmea_m.xmea900
         AND xmedseq = 0
         AND xmedseq1= 0
   FOREACH sel_xmed_cs1 INTO l_xmed002
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()
         EXIT FOREACH
      END IF

      LET l_xmed002 = cl_replace_str(l_xmed002,'xmdx','xmea')

      CALL cl_set_comp_font_color(l_xmed002,"red")

   END FOREACH
END FUNCTION
#單身文字顏色顯示
PRIVATE FUNCTION axmt450_detail_color()
DEFINE l_xmed002    LIKE xmed_t.xmed002

   CALL axmt450_detail_init_color()

   DECLARE sel_xmed_cs CURSOR FOR
      SELECT xmed002 FROM xmed_t
       WHERE xmedent   = g_enterprise
         AND xmeddocno = g_xmea_m.xmeadocno
         AND xmed001   = g_xmea_m.xmea900
         AND xmedseq   = g_xmeb_d[l_ac].xmebseq
         AND xmedseq1  = 0
   FOREACH sel_xmed_cs INTO l_xmed002
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()
         EXIT FOREACH
      END IF

      LET l_xmed002 = cl_replace_str(l_xmed002,'xmdy','xmeb')

      CASE l_xmed002
         WHEN 'xmebseq'
            LET g_xmeb_d_color[l_ac].xmebseq          = 'red'
            LET g_xmeb2_d_color[l_ac].xmebseq         = 'red'
         WHEN 'xmeb002'
            LET g_xmeb_d_color[l_ac].xmeb002          = 'red'
            LET g_xmeb_d_color[l_ac].xmeb002_desc     = 'red'
            LET g_xmeb_d_color[l_ac].xmeb002_desc_desc    = 'red'
            LET g_xmeb2_d_color[l_ac].xmeb0022        = 'red'
            LET g_xmeb2_d_color[l_ac].xmeb002_2_desc  = 'red'
            LET g_xmeb2_d_color[l_ac].xmeb002_2_desc_desc = 'red'
         WHEN 'xmeb003'
            LET g_xmeb_d_color[l_ac].xmeb003          = 'red'
            LET g_xmeb_d_color[l_ac].xmeb003_desc     = 'red'
            LET g_xmeb2_d_color[l_ac].xmeb0032        = 'red'
            LET g_xmeb2_d_color[l_ac].xmeb0032_desc   = 'red'
         WHEN 'xmeb005'
            LET g_xmeb_d_color[l_ac].xmeb005          = 'red'
            LET g_xmeb_d_color[l_ac].xmeb005_desc     = 'red'
            LET g_xmeb_d_color[l_ac].xmeb005_desc_desc= 'red'
         WHEN 'xmeb006'
            LET g_xmeb_d_color[l_ac].xmeb006          = 'red'
            LET g_xmeb_d_color[l_ac].xmeb006_desc     = 'red'
            LET g_xmeb2_d_color[l_ac].xmeb0062        = 'red'
            LET g_xmeb2_d_color[l_ac].xmeb0062_desc   = 'red'
         WHEN 'xmeb007'
            LET g_xmeb_d_color[l_ac].xmeb007          = 'red'
            LET g_xmeb2_d_color[l_ac].xmeb0072        = 'red'
         WHEN 'xmeb014'
            LET g_xmeb_d_color[l_ac].xmeb014          = 'red'
            LET g_xmeb_d_color[l_ac].xmeb014_desc     = 'red'
         WHEN 'xmeb008'
            LET g_xmeb_d_color[l_ac].xmeb008          = 'red'
            LET g_xmeb_d_color[l_ac].xmeb008_desc     = 'red'
            LET g_xmeb2_d_color[l_ac].xmeb0082        = 'red'
            LET g_xmeb2_d_color[l_ac].xmeb0082_desc   = 'red'
         WHEN 'xmeb009'
            LET g_xmeb_d_color[l_ac].xmeb009          = 'red'
            LET g_xmeb2_d_color[l_ac].xmeb0092        = 'red'
            LET g_xmeb2_d_color[l_ac].xmeb0202        = 'red'
         WHEN 'xmeb010'
            LET g_xmeb_d_color[l_ac].xmeb010          = 'red'
            LET g_xmeb2_d_color[l_ac].xmeb0102        = 'red'
         WHEN 'xmeb024'
            LET g_xmeb_d_color[l_ac].xmeb024          = 'red'
         WHEN 'xmeb011'
            LET g_xmeb_d_color[l_ac].xmeb011          = 'red'
            LET g_xmeb_d_color[l_ac].xmeb011_desc     = 'red'
         WHEN 'xmeb012'
            LET g_xmeb_d_color[l_ac].xmeb012          = 'red'
         WHEN 'xmeb017'
            LET g_xmeb_d_color[l_ac].xmeb017          = 'red'
            LET g_xmeb2_d_color[l_ac].xmeb0212        = 'red'
         WHEN 'xmeb018'
            LET g_xmeb_d_color[l_ac].xmeb018          = 'red'
            LET g_xmeb2_d_color[l_ac].xmeb0222        = 'red'
         WHEN 'xmeb019'
            LET g_xmeb_d_color[l_ac].xmeb019          = 'red'
            LET g_xmeb2_d_color[l_ac].xmeb0232        = 'red'
         WHEN 'xmeb013'
            LET g_xmeb_d_color[l_ac].xmeb013          = 'red'
            LET g_xmeb_d_color[l_ac].xmeb013_desc     = 'red'
         WHEN 'xmeb004'
            LET g_xmeb_d_color[l_ac].xmeb004          = 'red'
         WHEN 'xmeb030'
            LET g_xmeb_d_color[l_ac].xmeb030          = 'red'
         WHEN 'xmeb001'
            LET g_xmeb_d_color[l_ac].xmeb001          = 'red'
         WHEN 'xmeb020'
            LET g_xmeb2_d_color[l_ac].xmeb020         = 'red'
            LET g_xmeb2_d_color[l_ac].xmeb0202        = 'red'
         WHEN 'xmeb021'
            LET g_xmeb2_d_color[l_ac].xmeb021         = 'red'
            LET g_xmeb2_d_color[l_ac].xmeb0212        = 'red'
         WHEN 'xmeb0222'
            LET g_xmeb2_d_color[l_ac].xmeb022         = 'red'
            LET g_xmeb2_d_color[l_ac].xmeb0222        = 'red'
         WHEN 'xmeb023'
            LET g_xmeb2_d_color[l_ac].xmeb023         = 'red'
            LET g_xmeb2_d_color[l_ac].xmeb0232        = 'red'
         #161031-00025#22-s add
         WHEN 'ooff013'
            LET g_xmeb_d_color[l_ac].ooff013          = 'red'
         #161031-00025#22-e add
      END CASE
   END FOREACH
END FUNCTION
#累計訂價文字顏色顯示
PRIVATE FUNCTION axmt450_detail3_color()
DEFINE l_xmed002    LIKE xmed_t.xmed002

   CALL axmt450_detail3_init_color()

   DECLARE sel_xmed_cs3 CURSOR FOR
      SELECT xmed002 FROM xmed_t
       WHERE xmedent   = g_enterprise
         AND xmeddocno = g_xmea_m.xmeadocno
         AND xmed001   = g_xmea_m.xmea900
         AND xmedseq   = g_xmeb3_d[l_ac].xmecseq
         AND xmedseq1  = g_xmeb3_d[l_ac].xmecseq1
   FOREACH sel_xmed_cs3 INTO l_xmed002
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()
         EXIT FOREACH
      END IF

      LET l_xmed002 = cl_replace_str(l_xmed002,'xmdz','xmec')

      CASE l_xmed002
         WHEN 'xmecseq'
            LET g_xmeb3_d_color[l_ac].xmecseq  = 'red'
         WHEN 'xmecseq1'
            LET g_xmeb3_d_color[l_ac].xmecseq1 = 'red'
         WHEN 'xmec001'
            LET g_xmeb3_d_color[l_ac].xmec001  = 'red'
         WHEN 'xmec002'
            LET g_xmeb3_d_color[l_ac].xmec002  = 'red'
         WHEN 'xmec003'
            LET g_xmeb3_d_color[l_ac].xmec003  = 'red'
         WHEN 'xmec004'
            LET g_xmeb3_d_color[l_ac].xmec004  = 'red'
         WHEN 'xmec005'
            LET g_xmeb3_d_color[l_ac].xmec005  = 'red'
      END CASE
   END FOREACH
END FUNCTION

################################################################################
# Descriptions...: 客戶檢核
# Memo...........:
# Usage..........: CALL axmt450_xmea004_chk()
# Input parameter: no
# Return code....: TRUE OR FALSE
# Date & Author..: 
# Modify.........: 150121 By whitney
################################################################################
PRIVATE FUNCTION axmt450_xmea004_chk()
DEFINE r_success    LIKE type_t.num5

   LET r_success = TRUE

   INITIALIZE g_chkparam.* TO NULL
   LET g_chkparam.arg1 = g_xmea_m.xmea004
   LET g_chkparam.arg2 = g_site
   #160318-00025#17  by 07900 --add-str
   LET g_errshow = TRUE #是否開窗                   
   LET g_chkparam.err_str[1] ="apm-00201:sub-01302|axmm200|",cl_get_progname("axmm200",g_lang,"2"),"|:EXEPROGaxmm200"
   #160318-00025#17  by 07900 --add-end
   IF NOT cl_chk_exist("v_pmaa001_3") THEN
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   IF NOT s_control_check_customer(g_xmea_m.xmea004,'2',g_site,g_user,g_dept,g_xmea_m.xmeadocno) THEN
      LET r_success = FALSE
      RETURN r_success
   END IF

   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 理由碼檢核
# Memo...........:
# Usage..........: CALL axmt450_xmea903_chk(p_oocq001,p_oocq002)
# Input parameter: p_type      應用分類
#                : p_oocq002   應用分類碼
# Return code....: TRUE OR FALSE
# Date & Author..: 
# Modify.........: 150121 By whitney
################################################################################
PRIVATE FUNCTION axmt450_xmea903_chk(p_oocq001,p_oocq002)
DEFINE p_oocq001    LIKE oocq_t.oocq001
DEFINE p_oocq002    LIKE oocq_t.oocq002
DEFINE r_success    LIKE type_t.num5
DEFINE l_success    LIKE type_t.num5
DEFINE l_flag       LIKE type_t.num5

   LET r_success = TRUE

   IF NOT s_azzi650_chk_exist(p_oocq001,p_oocq002) THEN
      LET r_success = FALSE
      RETURN r_success
   END IF

   CALL s_control_chk_doc('8',g_xmea_m.xmeadocno,p_oocq002,'','','','')
        RETURNING l_success,l_flag
   IF NOT l_success OR NOT l_flag THEN
      LET r_success = FALSE
      RETURN r_success
   END IF

   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 料件檢核
# Memo...........:
# Usage..........: CALL axmt450_xmeb002_chk()
# Input parameter: no
# Return code....: TRUE OR FALSE
# Date & Author..: 
# Modify.........: 150121 By whitney
################################################################################
PRIVATE FUNCTION axmt450_xmeb002_chk()
DEFINE r_success    LIKE type_t.num5

   LET r_success = TRUE

   INITIALIZE g_chkparam.* TO NULL
   LET g_chkparam.arg1 = g_xmeb_d[l_ac].xmeb002
   IF NOT cl_chk_exist("v_imaf001_14") THEN
      LET r_success = FALSE
      RETURN r_success
   END IF

   IF NOT s_control_check_item(g_xmeb_d[l_ac].xmeb002,'2',g_site,g_user,g_dept,g_xmea_m.xmeadocno) THEN
      LET r_success = FALSE
      RETURN r_success
   END IF

   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 依據單頭的稅別與單身的料號呼叫取稅率的應用元件
#                  取得單身稅別與稅率值後更新顯示在xmeb011與xmeb012欄位
# Memo...........:
# Usage..........: CALL axmt450_get_tax(p_xmeb002)
# Input parameter: p_xmeb002   料件編號
# Return code....: r_xmeb011   稅別
#                : r_xmeb012   稅率
# Date & Author..: 
# Modify.........: 150123 By whitney
################################################################################
PRIVATE FUNCTION axmt450_get_tax(p_xmeb002)
DEFINE p_xmeb002    LIKE xmeb_t.xmeb002
DEFINE r_xmeb011    LIKE xmeb_t.xmeb011
DEFINE r_xmeb012    LIKE xmeb_t.xmeb012
DEFINE l_success    LIKE type_t.num5
DEFINE l_oodbl004   LIKE oodbl_t.oodbl004
DEFINE l_oodb005    LIKE oodb_t.oodb005
DEFINE l_oodb006    LIKE oodb_t.oodb006
DEFINE l_oodb011    LIKE oodb_t.oodb011
DEFINE l_pmab089    LIKE pmab_t.pmab089

   CALL s_tax_chk(g_xmea_m.xmeasite,g_xmea_m.xmea006)
       RETURNING l_success,l_oodbl004,l_oodb005,l_oodb006,l_oodb011

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmea_m.xmea004
   CALL ap_ref_array2(g_ref_fields,"SELECT pmab089 FROM pmab_t WHERE pmabent='"||g_enterprise||"' AND pmabsite = '"||g_xmea_m.xmeasite||"' AND pmab001=? ","") RETURNING g_rtn_fields
   LET l_pmab089 = g_rtn_fields[1]

   IF l_oodb011 = '2' THEN
      #依料件設定
      CALL s_tax_chktype(g_xmea_m.xmeasite,g_xmea_m.xmea004,p_xmeb002,'1',l_pmab089)
           RETURNING l_success,r_xmeb011,r_xmeb012
   ELSE
      #依正常稅率
      LET r_xmeb011 = g_xmea_m.xmea006
      LET r_xmeb012 = g_xmea_m.xmea007
   END IF
   
   RETURN r_xmeb011,r_xmeb012
END FUNCTION

################################################################################
# Descriptions...: 更新累計量定價否
# Memo...........:
# Usage..........: CALL axmt450_upd_xmeb024()
# Input parameter: no
# Return code....: no
# Date & Author..: 
# Modify.........: 150126 By whitney
################################################################################
PRIVATE FUNCTION axmt450_upd_xmeb024()
DEFINE l_cnt        LIKE type_t.num5

   LET l_cnt = 0
  #SELECT COUNT(*) INTO l_cnt  #161031-00025#22 mark
   SELECT COUNT(1) INTO l_cnt  #161031-00025#22 mod
     FROM xmec_t
    WHERE xmecent = g_enterprise
      AND xmecdocno = g_xmea_m.xmeadocno
      AND xmec900 = g_xmea_m.xmea900
      AND xmecseq = g_xmeb_d[l_ac].xmebseq
   IF NOT cl_null(l_cnt) AND l_cnt > 0 THEN
      LET g_xmeb_d[l_ac].xmeb024 = 'Y'
   ELSE
      LET g_xmeb_d[l_ac].xmeb024 = 'N'
   END IF
   UPDATE xmeb_t SET xmeb024 = g_xmeb_d[l_ac].xmeb024
    WHERE xmebent = g_enterprise
      AND xmebdocno = g_xmea_m.xmeadocno
      AND xmeb900 = g_xmea_m.xmea900
      AND xmebseq = g_xmeb_d[l_ac].xmebseq

END FUNCTION

################################################################################
#161031-00025#22 add
#將axmt440備註資料轉為axmt450備註資料
################################################################################
PRIVATE FUNCTION axmt450_ooff013_copy()
DEFINE l_sql            STRING
   
   LET l_sql = "INSERT INTO ooff_t (ooffent,ooffstus,",
               "                    ooff001,ooff002,ooff003,ooff004,ooff005,",
               "                    ooff006,ooff007,ooff008,ooff009,ooff010,",
               "                    ooff011,ooff012,ooff013,ooff014,ooff015,",
               "                    ooffownid,ooffowndp,ooffcrtid,ooffcrtdp,ooffcrtdt) ",
               "(SELECT ooffent,ooffstus,",
               "        ooff001,'",g_prog,"',ooff003,ooff004,'"||g_xmea_m.xmea900||"',",
               "        ooff006,ooff007,ooff008,ooff009,ooff010,",
               "        ooff011,ooff012,ooff013,ooff014,ooff015,",
               "        ooffownid,ooffowndp,ooffcrtid,ooffcrtdp,ooffcrtdt",
               "   FROM ooff_t",
               "  WHERE ooffent = ",g_enterprise,
               "    AND ooff002 = 'axmt440'",
               "    AND ooff003 = '",g_xmea_m.xmeadocno,"')"
   DISPLAY 'l_sql:',l_sql
   EXECUTE IMMEDIATE l_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "axmt450_ooff013_copy"
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN
   END IF
   
END FUNCTION

################################################################################
# Descriptions...: 單頭備註單身文字顏色的初始化
# Memo...........:
# Usage..........: CALL axmt450_ooff_init_color(p_i)
# Input parameter: p_i    備註單身指標
# Return code....: 無
# Date & Author..: 2017/02/23 By 08992
# Modify.........: 161031-00025#22 add
################################################################################
PRIVATE FUNCTION axmt450_ooff_init_color(p_i)
DEFINE p_i               LIKE type_t.num5

   LET g_ooff_d4_color[p_i].ooff001 = 'black'
   LET g_ooff_d4_color[p_i].ooff002 = 'black'
   LET g_ooff_d4_color[p_i].ooff004 = 'black'
   LET g_ooff_d4_color[p_i].ooff005 = 'black'
   LET g_ooff_d4_color[p_i].ooff006 = 'black'
   LET g_ooff_d4_color[p_i].ooff007 = 'black'
   LET g_ooff_d4_color[p_i].ooff008 = 'black'
   LET g_ooff_d4_color[p_i].ooff009 = 'black'
   LET g_ooff_d4_color[p_i].ooff010 = 'black'
   LET g_ooff_d4_color[p_i].ooff011 = 'black'
   LET g_ooff_d4_color[p_i].ooff003 = 'black'
   LET g_ooff_d4_color[p_i].ooff012 = 'black'
   LET g_ooff_d4_color[p_i].ooff013 = 'black'
   LET g_ooff_d4_color[p_i].ooff014 = 'black'
   
END FUNCTION

################################################################################
# Descriptions...: 單頭備註單身文字顏色的顯示
# Memo...........:
# Usage..........: axmt450_ooff_color(p_i)
# Input parameter: p_i    備註單身指標
# Return code....: 無
# Date & Author..: 2017/02/23 By 08992
# Modify.........: 161031-00025#22 add
################################################################################
PRIVATE FUNCTION axmt450_ooff_color(p_i)
DEFINE p_i               LIKE type_t.num5
DEFINE l_xmed002         LIKE xmed_t.xmed002

   CALL axmt450_ooff_init_color(p_i)
   
   DECLARE sel_xmed_cs4 CURSOR FOR
      SELECT xmed002 FROM xmed_t
       WHERE xmedent   = g_enterprise
         AND xmeddocno = g_xmea_m.xmeadocno
         AND xmed001   = g_xmea_m.xmea900
         AND xmedseq   = 0
         AND xmedseq1  = g_ooff_d4[p_i].ooff012
   FOREACH sel_xmed_cs4 INTO l_xmed002
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF

      CASE l_xmed002
          WHEN 'ooff012'
            LET g_ooff_d4_color[p_i].ooff012 = 'red'
          WHEN 'ooff013'
            LET g_ooff_d4_color[p_i].ooff013 = 'red'
          WHEN 'ooff014'
            LET g_ooff_d4_color[p_i].ooff014 = 'red'
      END CASE
   END FOREACH
   
END FUNCTION

################################################################################
# Descriptions...: 單頭備註寫入變更歷程檔xmed_t
# Memo...........:
# Usage..........: CALL axmt450_ooff_ins_xmed()
#                :      RETURNING r_success
# Input parameter: 無
# Return code....: r_success   執行結果(TRUE/FALSE)
# Date & Author..: 17/02/22 By 
# Modify.........: 161031-00025#22 add
################################################################################
PRIVATE FUNCTION axmt450_ooff_ins_xmed()
DEFINE r_success         LIKE type_t.num5
DEFINE l_ooff012         LIKE ooff_t.ooff012
DEFINE l_ooff013         LIKE ooff_t.ooff013
DEFINE l_ooff014         LIKE ooff_t.ooff014
DEFINE l_n               LIKE type_t.num5
DEFINE l_ooff013_1       LIKE ooff_t.ooff013
DEFINE l_ooff014_1       LIKE ooff_t.ooff014

   LET r_success = TRUE

   DECLARE ooff_ins_xmed_cs CURSOR FOR
      SELECT ooff012,ooff013,ooff014
        FROM ooff_t
       WHERE ooffent = g_enterprise
         AND ooff001 = '6'
         AND ooff002 = g_prog
         AND ooff003 = g_xmea_m.xmeadocno
         AND ooff004 = 0
         AND ooff005 = g_xmea_m.xmea900
   FOREACH ooff_ins_xmed_cs INTO l_ooff012,l_ooff013,l_ooff014
      #判斷這筆備註是否存在銷售合同的備註中
      LET l_n = 0
      SELECT COUNT(1) INTO l_n
        FROM ooff_t
       WHERE ooffent = g_enterprise
         AND ooff001 = '6'
         AND ooff002 = 'axmt440'
         AND ooff003 = g_xmea_m.xmeadocno
         AND ooff004 = 0
         AND ooff012 = l_ooff012
         AND ooff013 = l_ooff013
         AND ooff014 = l_ooff014
      IF cl_null(l_n) OR l_n = 0 THEN
         #判斷相同的備註控制類型(1.列印在前 2.列印在後)的資料是否存在，
         #若存在，比對備註是否一致，若不一致，則說明是修改備註；否則則是新增備註資料
         SELECT ooff013,ooff014 INTO l_ooff013_1,l_ooff014_1
           FROM ooff_t
          WHERE ooffent = g_enterprise
            AND ooff001 = '6'
            AND ooff002 = 'axmt440'
            AND ooff003 = g_xmea_m.xmeadocno
            AND ooff004 = 0
            AND ooff012 = l_ooff012

         IF NOT cl_null(l_ooff013_1) THEN
            IF l_ooff013_1 <> l_ooff013 THEN
               #其說明的SQL
               LET g_xmed007 = NULL
               #新增資料到變更歷程檔
               IF NOT s_axmt450_ins_xmed(0,l_ooff012,"ooff013",'2',l_ooff013_1,l_ooff013,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
                  LET r_success = FALSE
                  RETURN r_success
               END IF
            END IF
            
            IF (l_ooff014 <> l_ooff014_1) OR
               (l_ooff014 IS NULL AND l_ooff014_1 IS NOT NULL) OR
               (l_ooff014 IS NOT NULL AND l_ooff014_1 IS NULL) THEN
               #其說明的SQL
               LET g_xmed007 = NULL
               #新增資料到變更歷程檔
               IF NOT s_axmt450_ins_xmed(0,l_ooff012,"ooff014",'2',l_ooff014_1,l_ooff014,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
                  LET r_success = FALSE
                  RETURN r_success
               END IF
            END IF
         ELSE
            #其說明的SQL
            LET g_xmed007 = NULL
            #新增資料到變更歷程檔(控制類型)
            IF NOT s_axmt450_ins_xmed(0,l_ooff012,"ooff012",'3','',l_ooff012,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
               LET r_success = FALSE
               RETURN r_success
            END IF
         
            #新增資料到變更歷程檔(備註)
            IF NOT s_axmt450_ins_xmed(0,l_ooff012,"ooff013",'3','',l_ooff013,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
               LET r_success = FALSE
               RETURN r_success
            END IF
            
            #新增資料到變更歷程檔(失效日期)
            IF NOT cl_null(l_ooff014) THEN
               IF NOT s_axmt450_ins_xmed(0,l_ooff012,"ooff014",'3','',l_ooff014,g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
                  LET r_success = FALSE
                  RETURN r_success
               END IF
            END IF
         END IF
      ELSE
         #資料一樣，表示無變更，將變更歷程檔刪除
         IF NOT s_axmt450_del_xmed(0,l_ooff012,"ooff012",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
            LET r_success = FALSE
            RETURN r_success
         END IF
         IF NOT s_axmt450_del_xmed(0,l_ooff012,"ooff013",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
            LET r_success = FALSE
            RETURN r_success
         END IF
         IF NOT s_axmt450_del_xmed(0,l_ooff012,"ooff014",g_xmea_m.xmeadocno,g_xmea_m.xmea900) THEN
            LET r_success = FALSE
            RETURN r_success
         END IF
      END IF
   END FOREACH

   RETURN r_success
   
END FUNCTION

 
{</section>}
 
