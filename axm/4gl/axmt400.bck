#該程式未解開Section, 採用最新樣板產出!
{<section id="axmt400.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0027(2017-02-02 10:22:47), PR版次:0027(2017-02-02 18:12:48)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000224
#+ Filename...: axmt400
#+ Description: 銷售估價單維護作業
#+ Creator....: 04441(2014-06-11 15:54:39)
#+ Modifier...: 08992 -SD/PR- 08992
 
{</section>}
 
{<section id="axmt400.global" >}
#應用 t01 樣板自動產生(Version:79)
#add-point:填寫註解說明 name="global.memo" 
#151224-00025#5   2015/12/28  By dorishsu 產品特徵欄位若無開窗輸入反而自行手動輸入時,則無法新增至inam_t 
#160229-00019#1   2016/03/02  By fengmy   从axmi390取单位工资和单位制费 
#160314-00009#13  2016/03/29  By xujing   产品特征自动开窗增加参数判断
#160318-00025#4   2016/04/12  By 07675    將重複內容的錯誤訊息置換為公用錯誤訊息(r.v）
#150810-00021#1   2016/05/26  By shiun    aoos020中参数设置不使用产品特征时，请隐藏“已转订单状况”页签中的产品特征相关栏位
#160818-00017#42  2016/08/23  By 08734    删除修改未重新判断状态码
#160902-00002#1   2016/10/13  By Sarah    修改了工時單位後,有重帶單位工資與單位製費,漏了重算工資單價與製費單價
#161102-00066#1   2016/11/03  By shiun    範本料號開窗要加抓正式料號的資料
#161109-00085#5   2016/11/10  By 08993    整批調整系統星號寫法
#160824-00007#212 2016/11/28  By sakura   新舊值備份處理
#161109-00085#69  2016/12/13  By 08171     整批調整系統星號寫法
#161031-00023#1   2016/12/30  By 08992    單頭選擇客戶是"一次性客戶"時,應該要有客戶全名, 聯絡人, 電話, 地址等基本資料欄位可供輸入
#170108-00002#1   2017/01/10  By ouhz     调整根据abmm210自动带出单身,维护币别后没自动带出单价问题
#161031-00025#18  2017/01/24  By 08992    1.將aooi360_01以嵌入的方式，用頁籤放在axmt400單頭多帳期頁籤與異動資訊頁籤中間
#                                           要可修改
#                                           控制類型 =3:內部資訊傳遞 取消不要了
#                                           項次固定寫入0
#                                         2.原axmt400的備註action，改為確認後可執行，直接修改單頭新的"備註"頁籤
#                                         3.axmt400單身最後面增加顯示"長備註"欄位，一樣抓取aooi360的備註顯示
#                                           項次 = 單身項次
#                                           控制類型 = 列印在後
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"
IMPORT FGL aoo_aooi360_01   #161031-00025#18
#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"
#161031-00025#18-s
GLOBALS
TYPE type_g_ooff_d        RECORD
       ooff001 LIKE ooff_t.ooff001, 
   ooff002 LIKE ooff_t.ooff002, 
   ooff004 LIKE ooff_t.ooff004, 
   ooff005 LIKE ooff_t.ooff005, 
   ooff006 LIKE ooff_t.ooff006, 
   ooff007 LIKE ooff_t.ooff007, 
   ooff008 LIKE ooff_t.ooff008, 
   ooff009 LIKE ooff_t.ooff009, 
   ooff010 LIKE ooff_t.ooff010, 
   ooff011 LIKE ooff_t.ooff011, 
   ooff003 LIKE ooff_t.ooff003, 
   ooff012 LIKE ooff_t.ooff012, 
   ooff013 LIKE ooff_t.ooff013, 
   ooff014 LIKE ooff_t.ooff014
       END RECORD
 
DEFINE g_ooff_d4          DYNAMIC ARRAY OF type_g_ooff_d

DEFINE g_detail_insert   LIKE type_t.num5   #單身的新增權限
DEFINE g_detail_delete   LIKE type_t.num5   #單身的刪除權限
DEFINE g_wc2_i36001      STRING             #备注单身QBE條件
DEFINE g_d_idx_i36001    LIKE type_t.num5   #备注单身所在筆數
DEFINE g_d_cnt_i36001    LIKE type_t.num5   #备注单身總筆數
DEFINE g_appoint_idx     LIKE type_t.num5   #指定進入單身行數
DEFINE g_ooff001_d       LIKE ooff_t.ooff001
DEFINE g_ooff002_d       LIKE ooff_t.ooff002
DEFINE g_ooff003_d       LIKE ooff_t.ooff003
DEFINE g_ooff004_d       LIKE ooff_t.ooff004
DEFINE g_ooff005_d       LIKE ooff_t.ooff005
DEFINE g_ooff006_d       LIKE ooff_t.ooff006
DEFINE g_ooff007_d       LIKE ooff_t.ooff007
DEFINE g_ooff008_d       LIKE ooff_t.ooff008
DEFINE g_ooff009_d       LIKE ooff_t.ooff009
DEFINE g_ooff010_d       LIKE ooff_t.ooff010
DEFINE g_ooff011_d       LIKE ooff_t.ooff011
END GLOBALS
#161031-00025#18-e
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_xmev_m        RECORD
       xmevdocno LIKE xmev_t.xmevdocno, 
   xmevdocno_desc LIKE type_t.chr80, 
   xmevdocdt LIKE xmev_t.xmevdocdt, 
   xmevsite LIKE xmev_t.xmevsite, 
   xmev001 LIKE xmev_t.xmev001, 
   xmev001_desc LIKE type_t.chr80, 
   xmev002 LIKE xmev_t.xmev002, 
   xmev002_desc LIKE type_t.chr80, 
   xmevstus LIKE xmev_t.xmevstus, 
   xmev003 LIKE xmev_t.xmev003, 
   xmev003_desc LIKE type_t.chr80, 
   xmev004 LIKE xmev_t.xmev004, 
   xmev004_desc LIKE type_t.chr80, 
   xmev019 LIKE xmev_t.xmev019, 
   xmev020 LIKE xmev_t.xmev020, 
   xmev005 LIKE xmev_t.xmev005, 
   xmev006 LIKE xmev_t.xmev006, 
   xmev006_desc LIKE type_t.chr80, 
   xmev007 LIKE xmev_t.xmev007, 
   xmev008 LIKE xmev_t.xmev008, 
   xmev008_desc LIKE type_t.chr80, 
   xmev009 LIKE xmev_t.xmev009, 
   xmev010 LIKE xmev_t.xmev010, 
   xmev011 LIKE xmev_t.xmev011, 
   xmev012 LIKE xmev_t.xmev012, 
   xmev012_desc LIKE type_t.chr80, 
   xmev013 LIKE xmev_t.xmev013, 
   xmevownid LIKE xmev_t.xmevownid, 
   xmevownid_desc LIKE type_t.chr80, 
   xmevowndp LIKE xmev_t.xmevowndp, 
   xmevowndp_desc LIKE type_t.chr80, 
   xmevcrtid LIKE xmev_t.xmevcrtid, 
   xmevcrtid_desc LIKE type_t.chr80, 
   xmevcrtdp LIKE xmev_t.xmevcrtdp, 
   xmevcrtdp_desc LIKE type_t.chr80, 
   xmevcrtdt LIKE xmev_t.xmevcrtdt, 
   xmevmodid LIKE xmev_t.xmevmodid, 
   xmevmodid_desc LIKE type_t.chr80, 
   xmevmoddt LIKE xmev_t.xmevmoddt, 
   xmevcnfid LIKE xmev_t.xmevcnfid, 
   xmevcnfid_desc LIKE type_t.chr80, 
   xmevcnfdt LIKE xmev_t.xmevcnfdt, 
   xmev014 LIKE xmev_t.xmev014, 
   xmev015 LIKE xmev_t.xmev015, 
   xmev016 LIKE xmev_t.xmev016, 
   xmev017 LIKE xmev_t.xmev017, 
   xmev018 LIKE xmev_t.xmev018
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_xmew_d        RECORD
       xmewsite LIKE xmew_t.xmewsite, 
   xmewseq LIKE xmew_t.xmewseq, 
   xmew001 LIKE xmew_t.xmew001, 
   xmew001_desc LIKE type_t.chr500, 
   xmew002 LIKE xmew_t.xmew002, 
   xmew002_desc LIKE type_t.chr500, 
   xmew003 LIKE xmew_t.xmew003, 
   xmew003_desc LIKE type_t.chr500, 
   xmew003_desc_desc LIKE type_t.chr500, 
   xmew004 LIKE xmew_t.xmew004, 
   xmew004_desc LIKE type_t.chr500, 
   xmew005 LIKE xmew_t.xmew005, 
   xmew006 LIKE xmew_t.xmew006, 
   xmew006_desc LIKE type_t.chr500, 
   xmew007 LIKE xmew_t.xmew007, 
   xmew008 LIKE xmew_t.xmew008, 
   xmew009 LIKE xmew_t.xmew009, 
   xmew010 LIKE xmew_t.xmew010, 
   xmew010_desc LIKE type_t.chr500, 
   xmew011 LIKE xmew_t.xmew011, 
   xmew012 LIKE xmew_t.xmew012, 
   xmew013 LIKE xmew_t.xmew013, 
   xmew013_desc LIKE type_t.chr500, 
   xmew014 LIKE xmew_t.xmew014, 
   xmew015 LIKE xmew_t.xmew015, 
   xmew016 LIKE xmew_t.xmew016, 
   ooff013 LIKE type_t.chr500
       END RECORD
PRIVATE TYPE type_g_xmew2_d RECORD
       xmexsite LIKE xmex_t.xmexsite, 
   xmexseq LIKE xmex_t.xmexseq, 
   xmex001 LIKE xmex_t.xmex001, 
   xmex001_desc LIKE type_t.chr500, 
   xmex002 LIKE xmex_t.xmex002, 
   xmex002_desc LIKE type_t.chr500, 
   xmex002_desc_desc LIKE type_t.chr500, 
   xmex003 LIKE xmex_t.xmex003, 
   xmex004 LIKE xmex_t.xmex004, 
   xmex004_desc LIKE type_t.chr500, 
   xmex005 LIKE xmex_t.xmex005, 
   xmex006 LIKE xmex_t.xmex006, 
   xmex006_desc LIKE type_t.chr500, 
   xmex007 LIKE xmex_t.xmex007, 
   xmex008 LIKE xmex_t.xmex008, 
   xmex009 LIKE xmex_t.xmex009, 
   xmex010 LIKE xmex_t.xmex010, 
   xmex011 LIKE xmex_t.xmex011, 
   xmex012 LIKE xmex_t.xmex012, 
   xmex013 LIKE xmex_t.xmex013, 
   xmex014 LIKE xmex_t.xmex014
       END RECORD
PRIVATE TYPE type_g_xmew3_d RECORD
       xmfisite LIKE xmfi_t.xmfisite, 
   xmfiseq LIKE xmfi_t.xmfiseq, 
   xmfi001 LIKE xmfi_t.xmfi001, 
   xmfi001_desc LIKE type_t.chr500, 
   xmfi001_desc_desc LIKE type_t.chr500, 
   xmfi002 LIKE xmfi_t.xmfi002, 
   xmfi002_desc LIKE type_t.chr500, 
   xmfi003 LIKE xmfi_t.xmfi003, 
   xmfi004 LIKE xmfi_t.xmfi004, 
   xmfi005 LIKE xmfi_t.xmfi005, 
   xmfi005_desc LIKE type_t.chr500, 
   xmfi006 LIKE xmfi_t.xmfi006
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_xmevdocno LIKE xmev_t.xmevdocno,
      b_xmevdocdt LIKE xmev_t.xmevdocdt,
      b_xmev001 LIKE xmev_t.xmev001,
   b_xmev001_desc LIKE type_t.chr80,
      b_xmev002 LIKE xmev_t.xmev002,
   b_xmev002_desc LIKE type_t.chr80
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE g_inam  DYNAMIC ARRAY OF RECORD   #記錄產品特徵
   inam001  LIKE inam_t.inam001,
   inam002  LIKE inam_t.inam002,
   inam004  LIKE inam_t.inam004
           END RECORD
#add--2015/07/20 By shiun--(S)
DEFINE g_item_ac  LIKE type_t.num5
DEFINE g_bmba     DYNAMIC ARRAY OF RECORD
       bmbaent    LIKE bmba_t.bmbaent,
       bmbasite   LIKE bmba_t.bmbasite,
       bmba001    LIKE bmba_t.bmba001,
       bmba002    LIKE bmba_t.bmba002,
       bmba003    LIKE bmba_t.bmba003,
       bmba004    LIKE bmba_t.bmba004,
       bmba005    DATETIME YEAR TO SECOND,
       bmba007    LIKE bmba_t.bmba007,
       bmba008    LIKE bmba_t.bmba008,
       bmba009    LIKE type_t.chr10,
       bmba010    LIKE bmba_t.bmba010,
       bmba011    LIKE bmba_t.bmba011,
       bmba012    LIKE bmba_t.bmba012,
       bmbc010    LIKE type_t.chr1000,
       ooff013    LIKE type_t.chr1000,
       l_ac       LIKE type_t.num5
END RECORD
#add--2015/07/20 By shiun--(E)
DEFINE g_pmaa004      LIKE pmaa_t.pmaa004      #法人類型  #161031-00023#1 add
DEFINE g_pmak003      LIKE pmak_t.pmak003        #161031-00023#1 add
DEFINE g_detail_id          STRING           #紀錄停留在哪個Page #161031-00025#18 add
#end add-point
       
#模組變數(Module Variables)
DEFINE g_xmev_m          type_g_xmev_m
DEFINE g_xmev_m_t        type_g_xmev_m
DEFINE g_xmev_m_o        type_g_xmev_m
DEFINE g_xmev_m_mask_o   type_g_xmev_m #轉換遮罩前資料
DEFINE g_xmev_m_mask_n   type_g_xmev_m #轉換遮罩後資料
 
   DEFINE g_xmevdocno_t LIKE xmev_t.xmevdocno
 
 
DEFINE g_xmew_d          DYNAMIC ARRAY OF type_g_xmew_d
DEFINE g_xmew_d_t        type_g_xmew_d
DEFINE g_xmew_d_o        type_g_xmew_d
DEFINE g_xmew_d_mask_o   DYNAMIC ARRAY OF type_g_xmew_d #轉換遮罩前資料
DEFINE g_xmew_d_mask_n   DYNAMIC ARRAY OF type_g_xmew_d #轉換遮罩後資料
DEFINE g_xmew2_d          DYNAMIC ARRAY OF type_g_xmew2_d
DEFINE g_xmew2_d_t        type_g_xmew2_d
DEFINE g_xmew2_d_o        type_g_xmew2_d
DEFINE g_xmew2_d_mask_o   DYNAMIC ARRAY OF type_g_xmew2_d #轉換遮罩前資料
DEFINE g_xmew2_d_mask_n   DYNAMIC ARRAY OF type_g_xmew2_d #轉換遮罩後資料
DEFINE g_xmew3_d          DYNAMIC ARRAY OF type_g_xmew3_d
DEFINE g_xmew3_d_t        type_g_xmew3_d
DEFINE g_xmew3_d_o        type_g_xmew3_d
DEFINE g_xmew3_d_mask_o   DYNAMIC ARRAY OF type_g_xmew3_d #轉換遮罩前資料
DEFINE g_xmew3_d_mask_n   DYNAMIC ARRAY OF type_g_xmew3_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"
DEFINE g_ooef004             LIKE ooef_t.ooef004
DEFINE g_ooef016             LIKE ooef_t.ooef016

#end add-point
 
{</section>}
 
{<section id="axmt400.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axm","")
 
   #add-point:作業初始化 name="main.init"
   
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " SELECT xmevdocno,'',xmevdocdt,xmevsite,xmev001,'',xmev002,'',xmevstus,xmev003, 
       '',xmev004,'',xmev019,xmev020,xmev005,xmev006,'',xmev007,xmev008,'',xmev009,xmev010,xmev011,xmev012, 
       '',xmev013,xmevownid,'',xmevowndp,'',xmevcrtid,'',xmevcrtdp,'',xmevcrtdt,xmevmodid,'',xmevmoddt, 
       xmevcnfid,'',xmevcnfdt,xmev014,xmev015,xmev016,xmev017,xmev018", 
                      " FROM xmev_t",
                      " WHERE xmevent= ? AND xmevdocno=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt400_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.xmevdocno,t0.xmevdocdt,t0.xmevsite,t0.xmev001,t0.xmev002,t0.xmevstus, 
       t0.xmev003,t0.xmev004,t0.xmev019,t0.xmev020,t0.xmev005,t0.xmev006,t0.xmev007,t0.xmev008,t0.xmev009, 
       t0.xmev010,t0.xmev011,t0.xmev012,t0.xmev013,t0.xmevownid,t0.xmevowndp,t0.xmevcrtid,t0.xmevcrtdp, 
       t0.xmevcrtdt,t0.xmevmodid,t0.xmevmoddt,t0.xmevcnfid,t0.xmevcnfdt,t0.xmev014,t0.xmev015,t0.xmev016, 
       t0.xmev017,t0.xmev018,t1.ooag011 ,t2.ooefl003 ,t3.pmaal004 ,t4.xmesl003 ,t5.ooail003 ,t6.oocal003 , 
       t7.ooag011 ,t8.ooefl003 ,t9.ooag011 ,t10.ooefl003 ,t11.ooag011 ,t12.ooag011",
               " FROM xmev_t t0",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent="||g_enterprise||" AND t1.ooag001=t0.xmev001  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=t0.xmev002 AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t3 ON t3.pmaalent="||g_enterprise||" AND t3.pmaal001=t0.xmev003 AND t3.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN xmesl_t t4 ON t4.xmeslent="||g_enterprise||" AND t4.xmesldocno=t0.xmev004 AND t4.xmesl002='"||g_dlang||"' ",
               " LEFT JOIN ooail_t t5 ON t5.ooailent="||g_enterprise||" AND t5.ooail001=t0.xmev006 AND t5.ooail002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t6 ON t6.oocalent="||g_enterprise||" AND t6.oocal001=t0.xmev012 AND t6.oocal002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent="||g_enterprise||" AND t7.ooag001=t0.xmevownid  ",
               " LEFT JOIN ooefl_t t8 ON t8.ooeflent="||g_enterprise||" AND t8.ooefl001=t0.xmevowndp AND t8.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t9 ON t9.ooagent="||g_enterprise||" AND t9.ooag001=t0.xmevcrtid  ",
               " LEFT JOIN ooefl_t t10 ON t10.ooeflent="||g_enterprise||" AND t10.ooefl001=t0.xmevcrtdp AND t10.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t11 ON t11.ooagent="||g_enterprise||" AND t11.ooag001=t0.xmevmodid  ",
               " LEFT JOIN ooag_t t12 ON t12.ooagent="||g_enterprise||" AND t12.ooag001=t0.xmevcnfid  ",
 
               " WHERE t0.xmevent = " ||g_enterprise|| " AND t0.xmevdocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE axmt400_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axmt400 WITH FORM cl_ap_formpath("axm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axmt400_init()   
 
      #進入選單 Menu (="N")
      CALL axmt400_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axmt400
      
   END IF 
   
   CLOSE axmt400_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="axmt400.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION axmt400_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('xmevstus','13','N,Y,A,D,R,W,X')
 
      CALL cl_set_combo_scc('xmev005','3027') 
   CALL cl_set_combo_scc('xmex009','3018') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1',","1")
   CALL g_idx_group.addAttribute("'2',","1")
   CALL g_idx_group.addAttribute("'3',","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   #161031-00025#18-s
   #子程式畫面取代主程式元件
   CALL cl_ui_replace_sub_window(cl_ap_formpath("aoo", "aooi360_01"), "grid_remarks", "Table", "s_detail1_aooi360_01")
   CALL cl_set_combo_scc_part('ooff012','11','1,2,4')
   CALL cl_set_comp_visible("ooff003",FALSE)
   #161031-00025#18-e
   #主幣別編號
   LET g_ooef004 = ''
   LET g_ooef016 = ''
   SELECT ooef004,ooef016 INTO g_ooef004,g_ooef016 FROM ooef_t
    WHERE ooefent = g_enterprise AND ooef001 = g_site
   #add--150810-00021#1 By shiun--(S)
   #判斷據點參數若不使用產品特徵時，則產品特徵需隱藏不可以維護(據點參數:S-BAS-0036)
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0036') = 'N' THEN
      CALL cl_set_comp_visible("xmew004,xmew004_desc",FALSE)
   END IF
   #add--150810-00021#1 By shiun--(S)
   #end add-point
   
   #初始化搜尋條件
   CALL axmt400_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="axmt400.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION axmt400_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL axmt400_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
            
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
      
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_xmev_m.* TO NULL
         CALL g_xmew_d.clear()
         CALL g_xmew2_d.clear()
         CALL g_xmew3_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL axmt400_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL axmt400_fetch('') # reload data
               LET l_ac = 1
               CALL axmt400_ui_detailshow() #Setting the current row 
         
               CALL axmt400_idx_chk()
               #NEXT FIELD xmewseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_xmew_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axmt400_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL axmt400_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_xmew2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axmt400_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[2] = l_ac
               CALL g_idx_group.addAttribute("'2',",l_ac)
               
               #add-point:page2, before row動作 name="ui_dialog.body2.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL axmt400_idx_chk()
               #add-point:page2自定義行為 name="ui_dialog.body2.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為 name="ui_dialog.body2.action"
            
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_xmew3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axmt400_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[3] = l_ac
               CALL g_idx_group.addAttribute("'3',",l_ac)
               
               #add-point:page3, before row動作 name="ui_dialog.body3.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
               #顯示單身筆數
               CALL axmt400_idx_chk()
               #add-point:page3自定義行為 name="ui_dialog.body3.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為 name="ui_dialog.body3.action"
            
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         #单头备注显示
         SUBDIALOG aoo_aooi360_01.aooi360_01_display     #161031-00025#18 add
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL axmt400_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL axmt400_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL axmt400_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL axmt400_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         #161031-00025#18-s
         ON ACTION remarks_page
            LET g_detail_id = "remarks_page"
            NEXT FIELD ooff012
         #161031-00025#18-e
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL axmt400_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL axmt400_set_act_visible()   
            CALL axmt400_set_act_no_visible()
            IF NOT (g_xmev_m.xmevdocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " xmevent = " ||g_enterprise|| " AND",
                                  " xmevdocno = '", g_xmev_m.xmevdocno, "' "
 
               #填到對應位置
               CALL axmt400_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:3)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status name="menu.bpm_status"
            
            #END add-point
 
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "xmev_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmew_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmex_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "xmfi_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL axmt400_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "xmev_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmew_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmex_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "xmfi_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL axmt400_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code = "-100" 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL axmt400_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:4)
            #過濾瀏覽頁資料
            ON ACTION filter
               LET g_action_choice = "fetch"
               #add-point:filter action name="ui_dialog.action.filter"
               
               #end add-point
               CALL axmt400_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL axmt400_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt400_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL axmt400_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt400_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL axmt400_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt400_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL axmt400_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt400_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL axmt400_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt400_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_xmew_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_xmew2_d)
                  LET g_export_id[2]   = "s_detail2"
                  LET g_export_node[3] = base.typeInfo.create(g_xmew3_d)
                  LET g_export_id[3]   = "s_detail3"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  #161031-00025#18-s
                  LET g_export_node[4] = base.typeInfo.create(g_ooff_d4)
                  LET g_export_id[4]   = "s_detail1_aooi360_01"
                  #161031-00025#18-e
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD xmewseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION axmt400_detail_upd
            LET g_action_choice="axmt400_detail_upd"
            IF cl_auth_chk_act("axmt400_detail_upd") THEN
               
               #add-point:ON ACTION axmt400_detail_upd name="menu.axmt400_detail_upd"
               IF NOT cl_null(g_xmev_m.xmev004) THEN
                  CALL axmt400_detail_upd()
               END IF
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL axmt400_modify()
               #add-point:ON ACTION modify name="menu.modify"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL axmt400_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION demo
            LET g_action_choice="demo"
            IF cl_auth_chk_act("demo") THEN
               
               #add-point:ON ACTION demo name="menu.demo"
               #161031-00025#18-s
               #CALL aooi360_02('6','axmt400',g_xmev_m.xmevdocno,'','','','','','','','','4')
               IF NOT cl_null(g_xmev_m.xmevdocno) THEN
                  CALL axmt400_remaks()
               END IF
               #161031-00025#18-e
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_apmi004_01
            LET g_action_choice="open_apmi004_01"
            IF cl_auth_chk_act("open_apmi004_01") THEN
               
               #add-point:ON ACTION open_apmi004_01 name="menu.open_apmi004_01"
               #161031-00023#1-s
               #若輸入供應商的法人類型為'2:一次性交易'或是'4:內部員工'時，則自動串apmi004_01
               #維護一次性交易對項基本資料，維護完基本資料後會回傳一個一次性交易對象識別碼，
               #將識別碼值預設給xmev020欄位
               IF NOT cl_null(g_xmev_m.xmev003) THEN
                  LET g_pmaa004 = ''
                  SELECT pmaa004 INTO g_pmaa004 FROM pmaa_t WHERE pmaaent = g_enterprise AND pmaa001 = g_xmev_m.xmev003
                  IF g_pmaa004 = '2' THEN   #一次性交易對象
                     CALL apmi004_01('1',g_xmev_m.xmev020,g_xmev_m.xmev003,g_xmev_m.xmevdocno) RETURNING g_xmev_m.xmev020
                  END IF
                  IF g_pmaa004 = '4' THEN   #內部員工
                     CALL apmi004_01('2',g_xmev_m.xmev020,g_xmev_m.xmev003,g_xmev_m.xmevdocno) RETURNING g_xmev_m.xmev020
                  END IF                       
               END IF   
               CALL axmt400_xmev003_get_desc()
               DISPLAY BY NAME g_xmev_m.xmev003_desc
               #161031-00023#1-e
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL axmt400_delete()
               #add-point:ON ACTION delete name="menu.delete"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL axmt400_insert()
               #add-point:ON ACTION insert name="menu.insert"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               #CALL axmr400_g01("xmevent ="|| g_enterprise ||"  AND xmevdocno ='"|| g_xmev_m.xmevdocno||"'",'Y')            
               LET g_rep_wc = "xmevent ="|| g_enterprise ||"  AND xmevdocno ='"|| g_xmev_m.xmevdocno||"'"   

               #END add-point
               &include "erp/axm/axmt400_rep.4gl"
               #add-point:ON ACTION output.after name="menu.after_output"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION quickprint
            LET g_action_choice="quickprint"
            IF cl_auth_chk_act("quickprint") THEN
               
               #add-point:ON ACTION quickprint name="menu.quickprint"
               #CALL axmr400_g01("xmevent ="|| g_enterprise ||"  AND xmevdocno ='"|| g_xmev_m.xmevdocno||"'",'Y')            
               LET g_rep_wc = "xmevent ="|| g_enterprise ||"  AND xmevdocno ='"|| g_xmev_m.xmevdocno||"'"   

               #END add-point
               &include "erp/axm/axmt400_rep.4gl"
               #add-point:ON ACTION quickprint.after name="menu.after_quickprint"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL axmt400_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL axmt400_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
               CALL g_curr_diag.setCurrentRow("s_detail3",1)
 
 
 
 
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION prog_xmev001
            LET g_action_choice="prog_xmev001"
            IF cl_auth_chk_act("prog_xmev001") THEN
               
               #add-point:ON ACTION prog_xmev001 name="menu.prog_xmev001"
               #+ 此段落由子樣板a45產生
               CALL cl_user_contact("aooi130", "ooag_t", "ooag002", "ooag001",g_xmev_m.xmev001)

               #END add-point
               
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL axmt400_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL axmt400_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL axmt400_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow(g_xmev_m.xmevdocdt)
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
 
      #(ver:79) ---add start---
      #add-point:ui_dialog段 after dialog name="ui_dialog.exit_dialog"
      
      #end add-point
      #(ver:79) --- add end ---
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
 
{</section>}
 
{<section id="axmt400.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION axmt400_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   #161031-00025#18-s
   IF cl_null(g_add_browse) THEN
      CALL aooi360_01_clear_detail()   #清除备注单身
   END IF
   #161031-00025#18-e
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   IF cl_null(g_wc) THEN
      LET g_wc = " xmevsite = '",g_site,"' "
   ELSE
      LET g_wc = g_wc," AND xmevsite = '",g_site,"' "
   END IF
   LET l_wc  = g_wc.trim()   
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT xmevdocno ",
                      " FROM xmev_t ",
                      " ",
                      " LEFT JOIN xmew_t ON xmewent = xmevent AND xmevdocno = xmewdocno ", "  ",
                      #add-point:browser_fill段sql(xmew_t1) name="browser_fill.cnt.join.}"
                      
                      #end add-point
                      " LEFT JOIN xmex_t ON xmexent = xmevent AND xmevdocno = xmexdocno", "  ",
                      #add-point:browser_fill段sql(xmex_t1) name="browser_fill.cnt.join.xmex_t1"
                      
                      #end add-point
 
                      " LEFT JOIN xmfi_t ON xmfient = xmevent AND xmevdocno = xmfidocno", "  ",
                      #add-point:browser_fill段sql(xmfi_t1) name="browser_fill.cnt.join.xmfi_t1"
                      " LEFT JOIN ooff_t ON ooffent = xmevent AND ooff001 = '7' 
                              AND ooff002 = 'axmt400' AND xmevdocno = ooff003  AND ooff004 = xmewseq ",  "  ",   #161031-00025#18 add
                      #end add-point
 
 
 
                      " ", 
                      " ", 
                      " ",                      
 
                      " ",                      
 
 
 
                      " WHERE xmevent = " ||g_enterprise|| " AND xmewent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("xmev_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT xmevdocno ",
                      " FROM xmev_t ", 
                      "  ",
                      "  ",
                      " WHERE xmevent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("xmev_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   #161031-00025#18-s
   IF NOT cl_null(g_wc2_i36001) AND g_wc2_i36001 <> " 1=1" THEN
      LET l_sub_sql = l_sub_sql CLIPPED, " AND EXISTS (SELECT ooff003 FROM ooff_t 
                                                        WHERE ooffent = ",g_enterprise," AND ooff001 = '6' 
                                                          AND ooff002 = 'axmt400' AND ooff003 = xmevdocno
                                                          AND ooff004 = '0' AND ",g_wc2_i36001 CLIPPED ,")" 
   END IF                                                    
   #161031-00025#18-e
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code = 9035 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_xmev_m.* TO NULL
      CALL g_xmew_d.clear()        
      CALL g_xmew2_d.clear() 
      CALL g_xmew3_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.xmevdocno,t0.xmevdocdt,t0.xmev001,t0.xmev002 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.xmevstus,t0.xmevdocno,t0.xmevdocdt,t0.xmev001,t0.xmev002,t1.ooag011 , 
          t2.ooefl003 ",
                  " FROM xmev_t t0",
                  "  ",
                  "  LEFT JOIN xmew_t ON xmewent = xmevent AND xmevdocno = xmewdocno ", "  ", 
                  #add-point:browser_fill段sql(xmew_t1) name="browser_fill.join.xmew_t1"
                  
                  #end add-point
                  "  LEFT JOIN xmex_t ON xmexent = xmevent AND xmevdocno = xmexdocno", "  ", 
                  #add-point:browser_fill段sql(xmex_t1) name="browser_fill.join.xmex_t1"
                  
                  #end add-point
 
                  "  LEFT JOIN xmfi_t ON xmfient = xmevent AND xmevdocno = xmfidocno", "  ", 
                  #add-point:browser_fill段sql(xmfi_t1) name="browser_fill.join.xmfi_t1"
                  " LEFT JOIN ooff_t ON ooffent = xmevent AND ooff001 = '7' 
                              AND ooff002 = 'axmt400' AND xmevdocno = ooff003  AND ooff004 = xmewseq ",  "  ",   #161031-00025#18 add
                  #end add-point
 
 
 
                  " ", 
                  " ",                      
 
                  " ",                      
 
 
 
                                 " LEFT JOIN ooag_t t1 ON t1.ooagent="||g_enterprise||" AND t1.ooag001=t0.xmev001  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=t0.xmev002 AND t2.ooefl002='"||g_dlang||"' ",
 
                  " WHERE t0.xmevent = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("xmev_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.xmevstus,t0.xmevdocno,t0.xmevdocdt,t0.xmev001,t0.xmev002,t1.ooag011 , 
          t2.ooefl003 ",
                  " FROM xmev_t t0",
                  "  ",
                                 " LEFT JOIN ooag_t t1 ON t1.ooagent="||g_enterprise||" AND t1.ooag001=t0.xmev001  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=t0.xmev002 AND t2.ooefl002='"||g_dlang||"' ",
 
                  " WHERE t0.xmevent = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("xmev_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   #161031-00025#18-s
   IF NOT cl_null(g_wc2_i36001) AND g_wc2_i36001 <> " 1=1" THEN
      LET g_sql = g_sql CLIPPED, " AND EXISTS (SELECT ooff003 FROM ooff_t 
                                                WHERE ooffent = ",g_enterprise," AND ooff001 = '6' 
                                                  AND ooff002 = 'axmt400' AND ooff003 = xmevdocno
                                                  AND ooff004 = '0' AND ",g_wc2_i36001 CLIPPED ,")" 
   END IF                                                    
   #161031-00025#18-e
   #end add-point
   LET g_sql = g_sql, " ORDER BY xmevdocno ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
 
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"xmev_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_xmevdocno,g_browser[g_cnt].b_xmevdocdt, 
          g_browser[g_cnt].b_xmev001,g_browser[g_cnt].b_xmev002,g_browser[g_cnt].b_xmev001_desc,g_browser[g_cnt].b_xmev002_desc 
 
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
         
         #end add-point
      
         #遮罩相關處理
         CALL axmt400_browser_mask()
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_xmevdocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   
   #end add-point   
 
END FUNCTION
 
{</section>}
 
{<section id="axmt400.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION axmt400_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_xmev_m.xmevdocno = g_browser[g_current_idx].b_xmevdocno   
 
   EXECUTE axmt400_master_referesh USING g_xmev_m.xmevdocno INTO g_xmev_m.xmevdocno,g_xmev_m.xmevdocdt, 
       g_xmev_m.xmevsite,g_xmev_m.xmev001,g_xmev_m.xmev002,g_xmev_m.xmevstus,g_xmev_m.xmev003,g_xmev_m.xmev004, 
       g_xmev_m.xmev019,g_xmev_m.xmev020,g_xmev_m.xmev005,g_xmev_m.xmev006,g_xmev_m.xmev007,g_xmev_m.xmev008, 
       g_xmev_m.xmev009,g_xmev_m.xmev010,g_xmev_m.xmev011,g_xmev_m.xmev012,g_xmev_m.xmev013,g_xmev_m.xmevownid, 
       g_xmev_m.xmevowndp,g_xmev_m.xmevcrtid,g_xmev_m.xmevcrtdp,g_xmev_m.xmevcrtdt,g_xmev_m.xmevmodid, 
       g_xmev_m.xmevmoddt,g_xmev_m.xmevcnfid,g_xmev_m.xmevcnfdt,g_xmev_m.xmev014,g_xmev_m.xmev015,g_xmev_m.xmev016, 
       g_xmev_m.xmev017,g_xmev_m.xmev018,g_xmev_m.xmev001_desc,g_xmev_m.xmev002_desc,g_xmev_m.xmev003_desc, 
       g_xmev_m.xmev004_desc,g_xmev_m.xmev006_desc,g_xmev_m.xmev012_desc,g_xmev_m.xmevownid_desc,g_xmev_m.xmevowndp_desc, 
       g_xmev_m.xmevcrtid_desc,g_xmev_m.xmevcrtdp_desc,g_xmev_m.xmevmodid_desc,g_xmev_m.xmevcnfid_desc 
 
   
   CALL axmt400_xmev_t_mask()
   CALL axmt400_show()
      
END FUNCTION
 
{</section>}
 
{<section id="axmt400.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION axmt400_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="axmt400.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION axmt400_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_xmevdocno = g_xmev_m.xmevdocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="axmt400.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION axmt400_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   CALL aooi360_01_clear_detail()   #清除备注单身  #161031-00025#18
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_xmev_m.* TO NULL
   CALL g_xmew_d.clear()        
   CALL g_xmew2_d.clear() 
   CALL g_xmew3_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
   INITIALIZE g_wc2_table3 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON xmevdocno,xmevdocdt,xmevsite,xmev001,xmev002,xmevstus,xmev003,xmev004, 
          xmev019,xmev020,xmev005,xmev006,xmev007,xmev008,xmev008_desc,xmev009,xmev010,xmev011,xmev012, 
          xmev013,xmevownid,xmevowndp,xmevcrtid,xmevcrtdp,xmevcrtdt,xmevmodid,xmevmoddt,xmevcnfid,xmevcnfdt, 
          xmev014,xmev015,xmev016,xmev017,xmev018
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<xmevcrtdt>>----
         AFTER FIELD xmevcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<xmevmoddt>>----
         AFTER FIELD xmevmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmevcnfdt>>----
         AFTER FIELD xmevcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmevpstdt>>----
 
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.xmevdocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmevdocno
            #add-point:ON ACTION controlp INFIELD xmevdocno name="construct.c.xmevdocno"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xmevdocno()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmevdocno  #顯示到畫面上
            NEXT FIELD xmevdocno                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmevdocno
            #add-point:BEFORE FIELD xmevdocno name="construct.b.xmevdocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmevdocno
            
            #add-point:AFTER FIELD xmevdocno name="construct.a.xmevdocno"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmevdocdt
            #add-point:BEFORE FIELD xmevdocdt name="construct.b.xmevdocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmevdocdt
            
            #add-point:AFTER FIELD xmevdocdt name="construct.a.xmevdocdt"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmevdocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmevdocdt
            #add-point:ON ACTION controlp INFIELD xmevdocdt name="construct.c.xmevdocdt"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmevsite
            #add-point:BEFORE FIELD xmevsite name="construct.b.xmevsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmevsite
            
            #add-point:AFTER FIELD xmevsite name="construct.a.xmevsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmevsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmevsite
            #add-point:ON ACTION controlp INFIELD xmevsite name="construct.c.xmevsite"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmev001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmev001
            #add-point:ON ACTION controlp INFIELD xmev001 name="construct.c.xmev001"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmev001  #顯示到畫面上
            NEXT FIELD xmev001                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmev001
            #add-point:BEFORE FIELD xmev001 name="construct.b.xmev001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmev001
            
            #add-point:AFTER FIELD xmev001 name="construct.a.xmev001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmev002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmev002
            #add-point:ON ACTION controlp INFIELD xmev002 name="construct.c.xmev002"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmev002  #顯示到畫面上
            NEXT FIELD xmev002                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmev002
            #add-point:BEFORE FIELD xmev002 name="construct.b.xmev002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmev002
            
            #add-point:AFTER FIELD xmev002 name="construct.a.xmev002"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmevstus
            #add-point:BEFORE FIELD xmevstus name="construct.b.xmevstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmevstus
            
            #add-point:AFTER FIELD xmevstus name="construct.a.xmevstus"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmevstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmevstus
            #add-point:ON ACTION controlp INFIELD xmevstus name="construct.c.xmevstus"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmev003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmev003
            #add-point:ON ACTION controlp INFIELD xmev003 name="construct.c.xmev003"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE 
            #ming 20141120 add --------------------------------(S) 
            LET g_qryparam.arg1 = g_site
            #ming 20141120 add --------------------------------(E) 
            CALL q_pmaa001_6()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmev003  #顯示到畫面上
            NEXT FIELD xmev003                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmev003
            #add-point:BEFORE FIELD xmev003 name="construct.b.xmev003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmev003
            
            #add-point:AFTER FIELD xmev003 name="construct.a.xmev003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmev004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmev004
            #add-point:ON ACTION controlp INFIELD xmev004 name="construct.c.xmev004"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            #mod--161102-00066#1 By shiun--(S)
#            CALL q_xmesdocno()                           #呼叫開窗
            CALL q_xmesdocno_1()
            #mod--161102-00066#1 By shiun--(E)
            DISPLAY g_qryparam.return1 TO xmev004  #顯示到畫面上
            NEXT FIELD xmev004                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmev004
            #add-point:BEFORE FIELD xmev004 name="construct.b.xmev004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmev004
            
            #add-point:AFTER FIELD xmev004 name="construct.a.xmev004"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmev019
            #add-point:BEFORE FIELD xmev019 name="construct.b.xmev019"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmev019
            
            #add-point:AFTER FIELD xmev019 name="construct.a.xmev019"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmev019
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmev019
            #add-point:ON ACTION controlp INFIELD xmev019 name="construct.c.xmev019"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmev020
            #add-point:BEFORE FIELD xmev020 name="construct.b.xmev020"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmev020
            
            #add-point:AFTER FIELD xmev020 name="construct.a.xmev020"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmev020
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmev020
            #add-point:ON ACTION controlp INFIELD xmev020 name="construct.c.xmev020"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmev005
            #add-point:BEFORE FIELD xmev005 name="construct.b.xmev005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmev005
            
            #add-point:AFTER FIELD xmev005 name="construct.a.xmev005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmev005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmev005
            #add-point:ON ACTION controlp INFIELD xmev005 name="construct.c.xmev005"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmev006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmev006
            #add-point:ON ACTION controlp INFIELD xmev006 name="construct.c.xmev006"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            CALL q_ooaj002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmev006  #顯示到畫面上
            NEXT FIELD xmev006                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmev006
            #add-point:BEFORE FIELD xmev006 name="construct.b.xmev006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmev006
            
            #add-point:AFTER FIELD xmev006 name="construct.a.xmev006"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmev007
            #add-point:BEFORE FIELD xmev007 name="construct.b.xmev007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmev007
            
            #add-point:AFTER FIELD xmev007 name="construct.a.xmev007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmev007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmev007
            #add-point:ON ACTION controlp INFIELD xmev007 name="construct.c.xmev007"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmev008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmev008
            #add-point:ON ACTION controlp INFIELD xmev008 name="construct.c.xmev008"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_oodb002_11()                    #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmev008  #顯示到畫面上
            NEXT FIELD xmev008                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmev008
            #add-point:BEFORE FIELD xmev008 name="construct.b.xmev008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmev008
            
            #add-point:AFTER FIELD xmev008 name="construct.a.xmev008"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmev008_desc
            #add-point:BEFORE FIELD xmev008_desc name="construct.b.xmev008_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmev008_desc
            
            #add-point:AFTER FIELD xmev008_desc name="construct.a.xmev008_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmev008_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmev008_desc
            #add-point:ON ACTION controlp INFIELD xmev008_desc name="construct.c.xmev008_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmev009
            #add-point:BEFORE FIELD xmev009 name="construct.b.xmev009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmev009
            
            #add-point:AFTER FIELD xmev009 name="construct.a.xmev009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmev009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmev009
            #add-point:ON ACTION controlp INFIELD xmev009 name="construct.c.xmev009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmev010
            #add-point:BEFORE FIELD xmev010 name="construct.b.xmev010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmev010
            
            #add-point:AFTER FIELD xmev010 name="construct.a.xmev010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmev010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmev010
            #add-point:ON ACTION controlp INFIELD xmev010 name="construct.c.xmev010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmev011
            #add-point:BEFORE FIELD xmev011 name="construct.b.xmev011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmev011
            
            #add-point:AFTER FIELD xmev011 name="construct.a.xmev011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmev011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmev011
            #add-point:ON ACTION controlp INFIELD xmev011 name="construct.c.xmev011"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmev012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmev012
            #add-point:ON ACTION controlp INFIELD xmev012 name="construct.c.xmev012"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmev012  #顯示到畫面上
            NEXT FIELD xmev012                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmev012
            #add-point:BEFORE FIELD xmev012 name="construct.b.xmev012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmev012
            
            #add-point:AFTER FIELD xmev012 name="construct.a.xmev012"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmev013
            #add-point:BEFORE FIELD xmev013 name="construct.b.xmev013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmev013
            
            #add-point:AFTER FIELD xmev013 name="construct.a.xmev013"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmev013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmev013
            #add-point:ON ACTION controlp INFIELD xmev013 name="construct.c.xmev013"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmevownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmevownid
            #add-point:ON ACTION controlp INFIELD xmevownid name="construct.c.xmevownid"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                         #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmevownid  #顯示到畫面上
            NEXT FIELD xmevownid                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmevownid
            #add-point:BEFORE FIELD xmevownid name="construct.b.xmevownid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmevownid
            
            #add-point:AFTER FIELD xmevownid name="construct.a.xmevownid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmevowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmevowndp
            #add-point:ON ACTION controlp INFIELD xmevowndp name="construct.c.xmevowndp"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmevowndp  #顯示到畫面上
            NEXT FIELD xmevowndp                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmevowndp
            #add-point:BEFORE FIELD xmevowndp name="construct.b.xmevowndp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmevowndp
            
            #add-point:AFTER FIELD xmevowndp name="construct.a.xmevowndp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmevcrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmevcrtid
            #add-point:ON ACTION controlp INFIELD xmevcrtid name="construct.c.xmevcrtid"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                         #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmevcrtid  #顯示到畫面上
            NEXT FIELD xmevcrtid                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmevcrtid
            #add-point:BEFORE FIELD xmevcrtid name="construct.b.xmevcrtid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmevcrtid
            
            #add-point:AFTER FIELD xmevcrtid name="construct.a.xmevcrtid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmevcrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmevcrtdp
            #add-point:ON ACTION controlp INFIELD xmevcrtdp name="construct.c.xmevcrtdp"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmevcrtdp  #顯示到畫面上
            NEXT FIELD xmevcrtdp                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmevcrtdp
            #add-point:BEFORE FIELD xmevcrtdp name="construct.b.xmevcrtdp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmevcrtdp
            
            #add-point:AFTER FIELD xmevcrtdp name="construct.a.xmevcrtdp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmevcrtdt
            #add-point:BEFORE FIELD xmevcrtdt name="construct.b.xmevcrtdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmevmodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmevmodid
            #add-point:ON ACTION controlp INFIELD xmevmodid name="construct.c.xmevmodid"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                         #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmevmodid  #顯示到畫面上
            NEXT FIELD xmevmodid                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmevmodid
            #add-point:BEFORE FIELD xmevmodid name="construct.b.xmevmodid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmevmodid
            
            #add-point:AFTER FIELD xmevmodid name="construct.a.xmevmodid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmevmoddt
            #add-point:BEFORE FIELD xmevmoddt name="construct.b.xmevmoddt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmevcnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmevcnfid
            #add-point:ON ACTION controlp INFIELD xmevcnfid name="construct.c.xmevcnfid"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                         #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmevcnfid  #顯示到畫面上
            NEXT FIELD xmevcnfid                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmevcnfid
            #add-point:BEFORE FIELD xmevcnfid name="construct.b.xmevcnfid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmevcnfid
            
            #add-point:AFTER FIELD xmevcnfid name="construct.a.xmevcnfid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmevcnfdt
            #add-point:BEFORE FIELD xmevcnfdt name="construct.b.xmevcnfdt"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmev014
            #add-point:BEFORE FIELD xmev014 name="construct.b.xmev014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmev014
            
            #add-point:AFTER FIELD xmev014 name="construct.a.xmev014"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmev014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmev014
            #add-point:ON ACTION controlp INFIELD xmev014 name="construct.c.xmev014"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmev015
            #add-point:BEFORE FIELD xmev015 name="construct.b.xmev015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmev015
            
            #add-point:AFTER FIELD xmev015 name="construct.a.xmev015"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmev015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmev015
            #add-point:ON ACTION controlp INFIELD xmev015 name="construct.c.xmev015"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmev016
            #add-point:BEFORE FIELD xmev016 name="construct.b.xmev016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmev016
            
            #add-point:AFTER FIELD xmev016 name="construct.a.xmev016"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmev016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmev016
            #add-point:ON ACTION controlp INFIELD xmev016 name="construct.c.xmev016"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmev017
            #add-point:BEFORE FIELD xmev017 name="construct.b.xmev017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmev017
            
            #add-point:AFTER FIELD xmev017 name="construct.a.xmev017"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmev017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmev017
            #add-point:ON ACTION controlp INFIELD xmev017 name="construct.c.xmev017"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmev018
            #add-point:BEFORE FIELD xmev018 name="construct.b.xmev018"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmev018
            
            #add-point:AFTER FIELD xmev018 name="construct.a.xmev018"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmev018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmev018
            #add-point:ON ACTION controlp INFIELD xmev018 name="construct.c.xmev018"
            
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON xmewsite,xmewseq,xmew001,xmew002,xmew003,xmew004,xmew005,xmew006,xmew007, 
          xmew008,xmew009,xmew010,xmew011,xmew012,xmew013,xmew014,xmew015,xmew016,ooff013
           FROM s_detail1[1].xmewsite,s_detail1[1].xmewseq,s_detail1[1].xmew001,s_detail1[1].xmew002, 
               s_detail1[1].xmew003,s_detail1[1].xmew004,s_detail1[1].xmew005,s_detail1[1].xmew006,s_detail1[1].xmew007, 
               s_detail1[1].xmew008,s_detail1[1].xmew009,s_detail1[1].xmew010,s_detail1[1].xmew011,s_detail1[1].xmew012, 
               s_detail1[1].xmew013,s_detail1[1].xmew014,s_detail1[1].xmew015,s_detail1[1].xmew016,s_detail1[1].ooff013 
 
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmewsite
            #add-point:BEFORE FIELD xmewsite name="construct.b.page1.xmewsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmewsite
            
            #add-point:AFTER FIELD xmewsite name="construct.a.page1.xmewsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmewsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmewsite
            #add-point:ON ACTION controlp INFIELD xmewsite name="construct.c.page1.xmewsite"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmewseq
            #add-point:BEFORE FIELD xmewseq name="construct.b.page1.xmewseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmewseq
            
            #add-point:AFTER FIELD xmewseq name="construct.a.page1.xmewseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmewseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmewseq
            #add-point:ON ACTION controlp INFIELD xmewseq name="construct.c.page1.xmewseq"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmew001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmew001
            #add-point:ON ACTION controlp INFIELD xmew001 name="construct.c.page1.xmew001"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '215'
            CALL q_oocq002_5()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmew001  #顯示到畫面上
            NEXT FIELD xmew001                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmew001
            #add-point:BEFORE FIELD xmew001 name="construct.b.page1.xmew001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmew001
            
            #add-point:AFTER FIELD xmew001 name="construct.a.page1.xmew001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmew002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmew002
            #add-point:ON ACTION controlp INFIELD xmew002 name="construct.c.page1.xmew002"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '221'
            CALL q_oocq002()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmew002  #顯示到畫面上
            NEXT FIELD xmew002                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmew002
            #add-point:BEFORE FIELD xmew002 name="construct.b.page1.xmew002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmew002
            
            #add-point:AFTER FIELD xmew002 name="construct.a.page1.xmew002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmew003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmew003
            #add-point:ON ACTION controlp INFIELD xmew003 name="construct.c.page1.xmew003"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaf001_15()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmew003  #顯示到畫面上
            NEXT FIELD xmew003                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmew003
            #add-point:BEFORE FIELD xmew003 name="construct.b.page1.xmew003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmew003
            
            #add-point:AFTER FIELD xmew003 name="construct.a.page1.xmew003"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmew004
            #add-point:BEFORE FIELD xmew004 name="construct.b.page1.xmew004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmew004
            
            #add-point:AFTER FIELD xmew004 name="construct.a.page1.xmew004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmew004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmew004
            #add-point:ON ACTION controlp INFIELD xmew004 name="construct.c.page1.xmew004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmew005
            #add-point:BEFORE FIELD xmew005 name="construct.b.page1.xmew005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmew005
            
            #add-point:AFTER FIELD xmew005 name="construct.a.page1.xmew005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmew005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmew005
            #add-point:ON ACTION controlp INFIELD xmew005 name="construct.c.page1.xmew005"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmew006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmew006
            #add-point:ON ACTION controlp INFIELD xmew006 name="construct.c.page1.xmew006"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmew006  #顯示到畫面上
            NEXT FIELD xmew006                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmew006
            #add-point:BEFORE FIELD xmew006 name="construct.b.page1.xmew006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmew006
            
            #add-point:AFTER FIELD xmew006 name="construct.a.page1.xmew006"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmew007
            #add-point:BEFORE FIELD xmew007 name="construct.b.page1.xmew007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmew007
            
            #add-point:AFTER FIELD xmew007 name="construct.a.page1.xmew007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmew007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmew007
            #add-point:ON ACTION controlp INFIELD xmew007 name="construct.c.page1.xmew007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmew008
            #add-point:BEFORE FIELD xmew008 name="construct.b.page1.xmew008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmew008
            
            #add-point:AFTER FIELD xmew008 name="construct.a.page1.xmew008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmew008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmew008
            #add-point:ON ACTION controlp INFIELD xmew008 name="construct.c.page1.xmew008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmew009
            #add-point:BEFORE FIELD xmew009 name="construct.b.page1.xmew009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmew009
            
            #add-point:AFTER FIELD xmew009 name="construct.a.page1.xmew009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmew009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmew009
            #add-point:ON ACTION controlp INFIELD xmew009 name="construct.c.page1.xmew009"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmew010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmew010
            #add-point:ON ACTION controlp INFIELD xmew010 name="construct.c.page1.xmew010"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            CALL q_ooaj002_1()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmew010  #顯示到畫面上
            NEXT FIELD xmew010                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmew010
            #add-point:BEFORE FIELD xmew010 name="construct.b.page1.xmew010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmew010
            
            #add-point:AFTER FIELD xmew010 name="construct.a.page1.xmew010"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmew011
            #add-point:BEFORE FIELD xmew011 name="construct.b.page1.xmew011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmew011
            
            #add-point:AFTER FIELD xmew011 name="construct.a.page1.xmew011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmew011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmew011
            #add-point:ON ACTION controlp INFIELD xmew011 name="construct.c.page1.xmew011"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmew012
            #add-point:BEFORE FIELD xmew012 name="construct.b.page1.xmew012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmew012
            
            #add-point:AFTER FIELD xmew012 name="construct.a.page1.xmew012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmew012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmew012
            #add-point:ON ACTION controlp INFIELD xmew012 name="construct.c.page1.xmew012"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmew013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmew013
            #add-point:ON ACTION controlp INFIELD xmew013 name="construct.c.page1.xmew013"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_3()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmew013  #顯示到畫面上
            NEXT FIELD xmew013                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmew013
            #add-point:BEFORE FIELD xmew013 name="construct.b.page1.xmew013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmew013
            
            #add-point:AFTER FIELD xmew013 name="construct.a.page1.xmew013"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmew014
            #add-point:BEFORE FIELD xmew014 name="construct.b.page1.xmew014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmew014
            
            #add-point:AFTER FIELD xmew014 name="construct.a.page1.xmew014"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmew014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmew014
            #add-point:ON ACTION controlp INFIELD xmew014 name="construct.c.page1.xmew014"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmew015
            #add-point:BEFORE FIELD xmew015 name="construct.b.page1.xmew015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmew015
            
            #add-point:AFTER FIELD xmew015 name="construct.a.page1.xmew015"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmew015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmew015
            #add-point:ON ACTION controlp INFIELD xmew015 name="construct.c.page1.xmew015"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmew016
            #add-point:BEFORE FIELD xmew016 name="construct.b.page1.xmew016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmew016
            
            #add-point:AFTER FIELD xmew016 name="construct.a.page1.xmew016"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmew016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmew016
            #add-point:ON ACTION controlp INFIELD xmew016 name="construct.c.page1.xmew016"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD ooff013
            #add-point:BEFORE FIELD ooff013 name="construct.b.page1.ooff013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD ooff013
            
            #add-point:AFTER FIELD ooff013 name="construct.a.page1.ooff013"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.ooff013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD ooff013
            #add-point:ON ACTION controlp INFIELD ooff013 name="construct.c.page1.ooff013"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON xmexsite,xmexseq,xmex001,xmex002,xmex003,xmex004,xmex005,xmex006,xmex007, 
          xmex008,xmex009,xmex010,xmex011,xmex012,xmex013,xmex014
           FROM s_detail2[1].xmexsite,s_detail2[1].xmexseq,s_detail2[1].xmex001,s_detail2[1].xmex002, 
               s_detail2[1].xmex003,s_detail2[1].xmex004,s_detail2[1].xmex005,s_detail2[1].xmex006,s_detail2[1].xmex007, 
               s_detail2[1].xmex008,s_detail2[1].xmex009,s_detail2[1].xmex010,s_detail2[1].xmex011,s_detail2[1].xmex012, 
               s_detail2[1].xmex013,s_detail2[1].xmex014
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body2.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmexsite
            #add-point:BEFORE FIELD xmexsite name="construct.b.page2.xmexsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmexsite
            
            #add-point:AFTER FIELD xmexsite name="construct.a.page2.xmexsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmexsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmexsite
            #add-point:ON ACTION controlp INFIELD xmexsite name="construct.c.page2.xmexsite"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmexseq
            #add-point:BEFORE FIELD xmexseq name="construct.b.page2.xmexseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmexseq
            
            #add-point:AFTER FIELD xmexseq name="construct.a.page2.xmexseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmexseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmexseq
            #add-point:ON ACTION controlp INFIELD xmexseq name="construct.c.page2.xmexseq"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.xmex001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmex001
            #add-point:ON ACTION controlp INFIELD xmex001 name="construct.c.page2.xmex001"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "215"
            CALL q_oocq002_5()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmex001  #顯示到畫面上
            NEXT FIELD xmex001                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmex001
            #add-point:BEFORE FIELD xmex001 name="construct.b.page2.xmex001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmex001
            
            #add-point:AFTER FIELD xmex001 name="construct.a.page2.xmex001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmex002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmex002
            #add-point:ON ACTION controlp INFIELD xmex002 name="construct.c.page2.xmex002"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaf001_15()                    #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmex002  #顯示到畫面上
            NEXT FIELD xmex002                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmex002
            #add-point:BEFORE FIELD xmex002 name="construct.b.page2.xmex002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmex002
            
            #add-point:AFTER FIELD xmex002 name="construct.a.page2.xmex002"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmex003
            #add-point:BEFORE FIELD xmex003 name="construct.b.page2.xmex003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmex003
            
            #add-point:AFTER FIELD xmex003 name="construct.a.page2.xmex003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmex003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmex003
            #add-point:ON ACTION controlp INFIELD xmex003 name="construct.c.page2.xmex003"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.xmex004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmex004
            #add-point:ON ACTION controlp INFIELD xmex004 name="construct.c.page2.xmex004"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '221'
            CALL q_oocq002()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmex004  #顯示到畫面上
            NEXT FIELD xmex004                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmex004
            #add-point:BEFORE FIELD xmex004 name="construct.b.page2.xmex004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmex004
            
            #add-point:AFTER FIELD xmex004 name="construct.a.page2.xmex004"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmex005
            #add-point:BEFORE FIELD xmex005 name="construct.b.page2.xmex005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmex005
            
            #add-point:AFTER FIELD xmex005 name="construct.a.page2.xmex005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmex005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmex005
            #add-point:ON ACTION controlp INFIELD xmex005 name="construct.c.page2.xmex005"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.xmex006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmex006
            #add-point:ON ACTION controlp INFIELD xmex006 name="construct.c.page2.xmex006"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ecaa001_1()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmex006  #顯示到畫面上
            NEXT FIELD xmex006                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmex006
            #add-point:BEFORE FIELD xmex006 name="construct.b.page2.xmex006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmex006
            
            #add-point:AFTER FIELD xmex006 name="construct.a.page2.xmex006"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmex007
            #add-point:BEFORE FIELD xmex007 name="construct.b.page2.xmex007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmex007
            
            #add-point:AFTER FIELD xmex007 name="construct.a.page2.xmex007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmex007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmex007
            #add-point:ON ACTION controlp INFIELD xmex007 name="construct.c.page2.xmex007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmex008
            #add-point:BEFORE FIELD xmex008 name="construct.b.page2.xmex008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmex008
            
            #add-point:AFTER FIELD xmex008 name="construct.a.page2.xmex008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmex008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmex008
            #add-point:ON ACTION controlp INFIELD xmex008 name="construct.c.page2.xmex008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmex009
            #add-point:BEFORE FIELD xmex009 name="construct.b.page2.xmex009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmex009
            
            #add-point:AFTER FIELD xmex009 name="construct.a.page2.xmex009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmex009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmex009
            #add-point:ON ACTION controlp INFIELD xmex009 name="construct.c.page2.xmex009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmex010
            #add-point:BEFORE FIELD xmex010 name="construct.b.page2.xmex010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmex010
            
            #add-point:AFTER FIELD xmex010 name="construct.a.page2.xmex010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmex010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmex010
            #add-point:ON ACTION controlp INFIELD xmex010 name="construct.c.page2.xmex010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmex011
            #add-point:BEFORE FIELD xmex011 name="construct.b.page2.xmex011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmex011
            
            #add-point:AFTER FIELD xmex011 name="construct.a.page2.xmex011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmex011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmex011
            #add-point:ON ACTION controlp INFIELD xmex011 name="construct.c.page2.xmex011"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmex012
            #add-point:BEFORE FIELD xmex012 name="construct.b.page2.xmex012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmex012
            
            #add-point:AFTER FIELD xmex012 name="construct.a.page2.xmex012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmex012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmex012
            #add-point:ON ACTION controlp INFIELD xmex012 name="construct.c.page2.xmex012"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmex013
            #add-point:BEFORE FIELD xmex013 name="construct.b.page2.xmex013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmex013
            
            #add-point:AFTER FIELD xmex013 name="construct.a.page2.xmex013"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmex013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmex013
            #add-point:ON ACTION controlp INFIELD xmex013 name="construct.c.page2.xmex013"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmex014
            #add-point:BEFORE FIELD xmex014 name="construct.b.page2.xmex014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmex014
            
            #add-point:AFTER FIELD xmex014 name="construct.a.page2.xmex014"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmex014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmex014
            #add-point:ON ACTION controlp INFIELD xmex014 name="construct.c.page2.xmex014"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON xmfisite,xmfiseq,xmfi001,xmfi002,xmfi003,xmfi004,xmfi005,xmfi006
           FROM s_detail3[1].xmfisite,s_detail3[1].xmfiseq,s_detail3[1].xmfi001,s_detail3[1].xmfi002, 
               s_detail3[1].xmfi003,s_detail3[1].xmfi004,s_detail3[1].xmfi005,s_detail3[1].xmfi006
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body3.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfisite
            #add-point:BEFORE FIELD xmfisite name="construct.b.page3.xmfisite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfisite
            
            #add-point:AFTER FIELD xmfisite name="construct.a.page3.xmfisite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmfisite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfisite
            #add-point:ON ACTION controlp INFIELD xmfisite name="construct.c.page3.xmfisite"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfiseq
            #add-point:BEFORE FIELD xmfiseq name="construct.b.page3.xmfiseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfiseq
            
            #add-point:AFTER FIELD xmfiseq name="construct.a.page3.xmfiseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmfiseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfiseq
            #add-point:ON ACTION controlp INFIELD xmfiseq name="construct.c.page3.xmfiseq"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page3.xmfi001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfi001
            #add-point:ON ACTION controlp INFIELD xmfi001 name="construct.c.page3.xmfi001"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaf001_17()
            DISPLAY g_qryparam.return1 TO xmfi001
            NEXT FIELD xmfi001
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfi001
            #add-point:BEFORE FIELD xmfi001 name="construct.b.page3.xmfi001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfi001
            
            #add-point:AFTER FIELD xmfi001 name="construct.a.page3.xmfi001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmfi002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfi002
            #add-point:ON ACTION controlp INFIELD xmfi002 name="construct.c.page3.xmfi002"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooaj002_1()
            DISPLAY g_qryparam.return1 TO xmfi002
            NEXT FIELD xmfi002
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfi002
            #add-point:BEFORE FIELD xmfi002 name="construct.b.page3.xmfi002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfi002
            
            #add-point:AFTER FIELD xmfi002 name="construct.a.page3.xmfi002"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfi003
            #add-point:BEFORE FIELD xmfi003 name="construct.b.page3.xmfi003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfi003
            
            #add-point:AFTER FIELD xmfi003 name="construct.a.page3.xmfi003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmfi003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfi003
            #add-point:ON ACTION controlp INFIELD xmfi003 name="construct.c.page3.xmfi003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfi004
            #add-point:BEFORE FIELD xmfi004 name="construct.b.page3.xmfi004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfi004
            
            #add-point:AFTER FIELD xmfi004 name="construct.a.page3.xmfi004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmfi004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfi004
            #add-point:ON ACTION controlp INFIELD xmfi004 name="construct.c.page3.xmfi004"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page3.xmfi005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfi005
            #add-point:ON ACTION controlp INFIELD xmfi005 name="construct.c.page3.xmfi005"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            CALL q_pmaa001_3()
            DISPLAY g_qryparam.return1 TO xmfi005
            NEXT FIELD xmfi005
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfi005
            #add-point:BEFORE FIELD xmfi005 name="construct.b.page3.xmfi005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfi005
            
            #add-point:AFTER FIELD xmfi005 name="construct.a.page3.xmfi005"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfi006
            #add-point:BEFORE FIELD xmfi006 name="construct.b.page3.xmfi006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfi006
            
            #add-point:AFTER FIELD xmfi006 name="construct.a.page3.xmfi006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmfi006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfi006
            #add-point:ON ACTION controlp INFIELD xmfi006 name="construct.c.page3.xmfi006"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      SUBDIALOG aoo_aooi360_01.aooi360_01_construct   #备注单身  #161031-00025#18      
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         LET g_xmew_d[1].xmewseq = ""
         DISPLAY ARRAY g_xmew_d TO s_detail1.*
            BEFORE DISPLAY
               EXIT DISPLAY
         END DISPLAY
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
            INITIALIZE g_wc2_table2 TO NULL
 
            INITIALIZE g_wc2_table3 TO NULL
 
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "xmev_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "xmew_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "xmex_t" 
                     LET g_wc2_table2 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "xmfi_t" 
                     LET g_wc2_table3 = la_wc[li_idx].wc
 
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
 
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="axmt400.filter" >}
#應用 a50 樣板自動產生(Version:8)
#+ filter過濾功能
PRIVATE FUNCTION axmt400_filter()
   #add-point:filter段define name="filter.define_customerization"
   
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="filter.pre_function"
   
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON xmevdocno,xmevdocdt,xmev001,xmev002
                          FROM s_browse[1].b_xmevdocno,s_browse[1].b_xmevdocdt,s_browse[1].b_xmev001, 
                              s_browse[1].b_xmev002
 
         BEFORE CONSTRUCT
               DISPLAY axmt400_filter_parser('xmevdocno') TO s_browse[1].b_xmevdocno
            DISPLAY axmt400_filter_parser('xmevdocdt') TO s_browse[1].b_xmevdocdt
            DISPLAY axmt400_filter_parser('xmev001') TO s_browse[1].b_xmev001
            DISPLAY axmt400_filter_parser('xmev002') TO s_browse[1].b_xmev002
      
         #add-point:filter段cs_ctrl name="filter.cs_ctrl"
         
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL axmt400_filter_show('xmevdocno')
   CALL axmt400_filter_show('xmevdocdt')
   CALL axmt400_filter_show('xmev001')
   CALL axmt400_filter_show('xmev002')
 
END FUNCTION
 
{</section>}
 
{<section id="axmt400.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION axmt400_filter_parser(ps_field)
   #add-point:filter段define name="filter_parser.define_customerization"
   
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="axmt400.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION axmt400_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = axmt400_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="axmt400.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION axmt400_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_xmew_d.clear()
   CALL g_xmew2_d.clear()
   CALL g_xmew3_d.clear()
 
   
   #add-point:query段other name="query.other"
   CALL aooi360_01_clear_detail()   #清除备注单身  #161031-00025#18
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL axmt400_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL axmt400_browser_fill("")
      CALL axmt400_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL axmt400_filter_show('xmevdocno')
   CALL axmt400_filter_show('xmevdocdt')
   CALL axmt400_filter_show('xmev001')
   CALL axmt400_filter_show('xmev002')
   CALL axmt400_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "-100" 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
   ELSE
      CALL axmt400_fetch("F") 
      #顯示單身筆數
      CALL axmt400_idx_chk()
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="axmt400.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION axmt400_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_xmev_m.xmevdocno = g_browser[g_current_idx].b_xmevdocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE axmt400_master_referesh USING g_xmev_m.xmevdocno INTO g_xmev_m.xmevdocno,g_xmev_m.xmevdocdt, 
       g_xmev_m.xmevsite,g_xmev_m.xmev001,g_xmev_m.xmev002,g_xmev_m.xmevstus,g_xmev_m.xmev003,g_xmev_m.xmev004, 
       g_xmev_m.xmev019,g_xmev_m.xmev020,g_xmev_m.xmev005,g_xmev_m.xmev006,g_xmev_m.xmev007,g_xmev_m.xmev008, 
       g_xmev_m.xmev009,g_xmev_m.xmev010,g_xmev_m.xmev011,g_xmev_m.xmev012,g_xmev_m.xmev013,g_xmev_m.xmevownid, 
       g_xmev_m.xmevowndp,g_xmev_m.xmevcrtid,g_xmev_m.xmevcrtdp,g_xmev_m.xmevcrtdt,g_xmev_m.xmevmodid, 
       g_xmev_m.xmevmoddt,g_xmev_m.xmevcnfid,g_xmev_m.xmevcnfdt,g_xmev_m.xmev014,g_xmev_m.xmev015,g_xmev_m.xmev016, 
       g_xmev_m.xmev017,g_xmev_m.xmev018,g_xmev_m.xmev001_desc,g_xmev_m.xmev002_desc,g_xmev_m.xmev003_desc, 
       g_xmev_m.xmev004_desc,g_xmev_m.xmev006_desc,g_xmev_m.xmev012_desc,g_xmev_m.xmevownid_desc,g_xmev_m.xmevowndp_desc, 
       g_xmev_m.xmevcrtid_desc,g_xmev_m.xmevcrtdp_desc,g_xmev_m.xmevmodid_desc,g_xmev_m.xmevcnfid_desc 
 
   
   #遮罩相關處理
   LET g_xmev_m_mask_o.* =  g_xmev_m.*
   CALL axmt400_xmev_t_mask()
   LET g_xmev_m_mask_n.* =  g_xmev_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt400_set_act_visible()   
   CALL axmt400_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
 
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   
   #end add-point
   
   #保存單頭舊值
   LET g_xmev_m_t.* = g_xmev_m.*
   LET g_xmev_m_o.* = g_xmev_m.*
   
   LET g_data_owner = g_xmev_m.xmevownid      
   LET g_data_dept  = g_xmev_m.xmevowndp
   
   #重新顯示   
   CALL axmt400_show()
 
   #應用 a56 樣板自動產生(Version:3)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
 
END FUNCTION
 
{</section>}
 
{<section id="axmt400.insert" >}
#+ 資料新增
PRIVATE FUNCTION axmt400_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_xmew_d.clear()   
   CALL g_xmew2_d.clear()  
   CALL g_xmew3_d.clear()  
 
 
   INITIALIZE g_xmev_m.* TO NULL             #DEFAULT 設定
   
   LET g_xmevdocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   CALL aooi360_01_clear_detail()   #清除备注单身  #161031-00025#18
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_xmev_m.xmevownid = g_user
      LET g_xmev_m.xmevowndp = g_dept
      LET g_xmev_m.xmevcrtid = g_user
      LET g_xmev_m.xmevcrtdp = g_dept 
      LET g_xmev_m.xmevcrtdt = cl_get_current()
      LET g_xmev_m.xmevmodid = g_user
      LET g_xmev_m.xmevmoddt = cl_get_current()
      LET g_xmev_m.xmevstus = 'N'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_xmev_m.xmev005 = "1"
      LET g_xmev_m.xmev010 = "N"
 
  
      #add-point:單頭預設值 name="insert.default"

      LET g_xmev_m.xmevsite = g_site
      LET g_xmev_m.xmevdocdt = g_today
      LET g_xmev_m.xmev001 = g_user
      CALL s_desc_get_person_desc(g_xmev_m.xmev001) RETURNING g_xmev_m.xmev001_desc
      DISPLAY BY NAME g_xmev_m.xmev001_desc
      LET g_xmev_m.xmev002 = g_dept
      CALL s_desc_get_department_desc(g_xmev_m.xmev002) RETURNING g_xmev_m.xmev002_desc
      DISPLAY BY NAME g_xmev_m.xmev002_desc
      LET g_xmev_m.xmev013 = g_today
      LET g_xmev_m_t.* = g_xmev_m.*
      LET g_xmev_m_o.* = g_xmev_m.*

      #161031-00025#18-s
      LET g_ooff001_d = '6'   #6.單據單頭備註
      LET g_ooff002_d = g_prog
      LET g_ooff003_d = ''    #单号
      LET g_ooff004_d = '0'     #项次
      LET g_ooff005_d = ' '
      LET g_ooff006_d = ' '
      LET g_ooff007_d = ' '
      LET g_ooff008_d = ' '
      LET g_ooff009_d = ' '
      LET g_ooff010_d = ' '
      LET g_ooff011_d = ' '
      #161031-00025#18-e
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_xmev_m_t.* = g_xmev_m.*
      LET g_xmev_m_o.* = g_xmev_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_xmev_m.xmevstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
    
      CALL axmt400_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_xmev_m.* TO NULL
         INITIALIZE g_xmew_d TO NULL
         INITIALIZE g_xmew2_d TO NULL
         INITIALIZE g_xmew3_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         
         #end add-point 
         CALL axmt400_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_xmew_d.clear()
      #CALL g_xmew2_d.clear()
      #CALL g_xmew3_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt400_set_act_visible()   
   CALL axmt400_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_xmevdocno_t = g_xmev_m.xmevdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " xmevent = " ||g_enterprise|| " AND",
                      " xmevdocno = '", g_xmev_m.xmevdocno, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axmt400_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE axmt400_cl
   
   CALL axmt400_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE axmt400_master_referesh USING g_xmev_m.xmevdocno INTO g_xmev_m.xmevdocno,g_xmev_m.xmevdocdt, 
       g_xmev_m.xmevsite,g_xmev_m.xmev001,g_xmev_m.xmev002,g_xmev_m.xmevstus,g_xmev_m.xmev003,g_xmev_m.xmev004, 
       g_xmev_m.xmev019,g_xmev_m.xmev020,g_xmev_m.xmev005,g_xmev_m.xmev006,g_xmev_m.xmev007,g_xmev_m.xmev008, 
       g_xmev_m.xmev009,g_xmev_m.xmev010,g_xmev_m.xmev011,g_xmev_m.xmev012,g_xmev_m.xmev013,g_xmev_m.xmevownid, 
       g_xmev_m.xmevowndp,g_xmev_m.xmevcrtid,g_xmev_m.xmevcrtdp,g_xmev_m.xmevcrtdt,g_xmev_m.xmevmodid, 
       g_xmev_m.xmevmoddt,g_xmev_m.xmevcnfid,g_xmev_m.xmevcnfdt,g_xmev_m.xmev014,g_xmev_m.xmev015,g_xmev_m.xmev016, 
       g_xmev_m.xmev017,g_xmev_m.xmev018,g_xmev_m.xmev001_desc,g_xmev_m.xmev002_desc,g_xmev_m.xmev003_desc, 
       g_xmev_m.xmev004_desc,g_xmev_m.xmev006_desc,g_xmev_m.xmev012_desc,g_xmev_m.xmevownid_desc,g_xmev_m.xmevowndp_desc, 
       g_xmev_m.xmevcrtid_desc,g_xmev_m.xmevcrtdp_desc,g_xmev_m.xmevmodid_desc,g_xmev_m.xmevcnfid_desc 
 
   
   
   #遮罩相關處理
   LET g_xmev_m_mask_o.* =  g_xmev_m.*
   CALL axmt400_xmev_t_mask()
   LET g_xmev_m_mask_n.* =  g_xmev_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_xmev_m.xmevdocno,g_xmev_m.xmevdocno_desc,g_xmev_m.xmevdocdt,g_xmev_m.xmevsite,g_xmev_m.xmev001, 
       g_xmev_m.xmev001_desc,g_xmev_m.xmev002,g_xmev_m.xmev002_desc,g_xmev_m.xmevstus,g_xmev_m.xmev003, 
       g_xmev_m.xmev003_desc,g_xmev_m.xmev004,g_xmev_m.xmev004_desc,g_xmev_m.xmev019,g_xmev_m.xmev020, 
       g_xmev_m.xmev005,g_xmev_m.xmev006,g_xmev_m.xmev006_desc,g_xmev_m.xmev007,g_xmev_m.xmev008,g_xmev_m.xmev008_desc, 
       g_xmev_m.xmev009,g_xmev_m.xmev010,g_xmev_m.xmev011,g_xmev_m.xmev012,g_xmev_m.xmev012_desc,g_xmev_m.xmev013, 
       g_xmev_m.xmevownid,g_xmev_m.xmevownid_desc,g_xmev_m.xmevowndp,g_xmev_m.xmevowndp_desc,g_xmev_m.xmevcrtid, 
       g_xmev_m.xmevcrtid_desc,g_xmev_m.xmevcrtdp,g_xmev_m.xmevcrtdp_desc,g_xmev_m.xmevcrtdt,g_xmev_m.xmevmodid, 
       g_xmev_m.xmevmodid_desc,g_xmev_m.xmevmoddt,g_xmev_m.xmevcnfid,g_xmev_m.xmevcnfid_desc,g_xmev_m.xmevcnfdt, 
       g_xmev_m.xmev014,g_xmev_m.xmev015,g_xmev_m.xmev016,g_xmev_m.xmev017,g_xmev_m.xmev018
   
   #add-point:新增結束後 name="insert.after"
   
   #end add-point 
   
   LET g_data_owner = g_xmev_m.xmevownid      
   LET g_data_dept  = g_xmev_m.xmevowndp
   
   #功能已完成,通報訊息中心
   CALL axmt400_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="axmt400.modify" >}
#+ 資料修改
PRIVATE FUNCTION axmt400_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING
 
   DEFINE l_wc2_table3   STRING
 
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   #保存單頭舊值
   LET g_xmev_m_t.* = g_xmev_m.*
   LET g_xmev_m_o.* = g_xmev_m.*
   
   IF g_xmev_m.xmevdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_xmevdocno_t = g_xmev_m.xmevdocno
 
   CALL s_transaction_begin()
   
   OPEN axmt400_cl USING g_enterprise,g_xmev_m.xmevdocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axmt400_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE axmt400_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axmt400_master_referesh USING g_xmev_m.xmevdocno INTO g_xmev_m.xmevdocno,g_xmev_m.xmevdocdt, 
       g_xmev_m.xmevsite,g_xmev_m.xmev001,g_xmev_m.xmev002,g_xmev_m.xmevstus,g_xmev_m.xmev003,g_xmev_m.xmev004, 
       g_xmev_m.xmev019,g_xmev_m.xmev020,g_xmev_m.xmev005,g_xmev_m.xmev006,g_xmev_m.xmev007,g_xmev_m.xmev008, 
       g_xmev_m.xmev009,g_xmev_m.xmev010,g_xmev_m.xmev011,g_xmev_m.xmev012,g_xmev_m.xmev013,g_xmev_m.xmevownid, 
       g_xmev_m.xmevowndp,g_xmev_m.xmevcrtid,g_xmev_m.xmevcrtdp,g_xmev_m.xmevcrtdt,g_xmev_m.xmevmodid, 
       g_xmev_m.xmevmoddt,g_xmev_m.xmevcnfid,g_xmev_m.xmevcnfdt,g_xmev_m.xmev014,g_xmev_m.xmev015,g_xmev_m.xmev016, 
       g_xmev_m.xmev017,g_xmev_m.xmev018,g_xmev_m.xmev001_desc,g_xmev_m.xmev002_desc,g_xmev_m.xmev003_desc, 
       g_xmev_m.xmev004_desc,g_xmev_m.xmev006_desc,g_xmev_m.xmev012_desc,g_xmev_m.xmevownid_desc,g_xmev_m.xmevowndp_desc, 
       g_xmev_m.xmevcrtid_desc,g_xmev_m.xmevcrtdp_desc,g_xmev_m.xmevmodid_desc,g_xmev_m.xmevcnfid_desc 
 
   
   #檢查是否允許此動作
   IF NOT axmt400_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_xmev_m_mask_o.* =  g_xmev_m.*
   CALL axmt400_xmev_t_mask()
   LET g_xmev_m_mask_n.* =  g_xmev_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
   #LET l_wc2_table3 = g_wc2_table3
   #LET l_wc2_table3 = " 1=1"
 
 
 
   
   CALL axmt400_show()
   #add-point:modify段show之後 name="modify.after_show"
   
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 
 
   #LET  g_wc2_table3 = l_wc2_table3 
 
 
 
    
   WHILE TRUE
      LET g_xmevdocno_t = g_xmev_m.xmevdocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_xmev_m.xmevmodid = g_user 
LET g_xmev_m.xmevmoddt = cl_get_current()
LET g_xmev_m.xmevmodid_desc = cl_get_username(g_xmev_m.xmevmodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      IF g_xmev_m.xmevstus MATCHES "[DR]" THEN
         LET g_xmev_m.xmevstus = "N"
      END IF
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL axmt400_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE xmev_t SET (xmevmodid,xmevmoddt) = (g_xmev_m.xmevmodid,g_xmev_m.xmevmoddt)
          WHERE xmevent = g_enterprise AND xmevdocno = g_xmevdocno_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_xmev_m.* = g_xmev_m_t.*
            CALL axmt400_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_xmev_m.xmevdocno != g_xmev_m_t.xmevdocno
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         
         #end add-point
         
         #更新單身key值
         UPDATE xmew_t SET xmewdocno = g_xmev_m.xmevdocno
 
          WHERE xmewent = g_enterprise AND xmewdocno = g_xmev_m_t.xmevdocno
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "xmew_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmew_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update2"
         
         #end add-point
         
         UPDATE xmex_t
            SET xmexdocno = g_xmev_m.xmevdocno
 
          WHERE xmexent = g_enterprise AND
                xmexdocno = g_xmevdocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update2"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "xmex_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmex_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update2"
         
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update3"
         
         #end add-point
         
         UPDATE xmfi_t
            SET xmfidocno = g_xmev_m.xmevdocno
 
          WHERE xmfient = g_enterprise AND
                xmfidocno = g_xmevdocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update3"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "xmfi_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmfi_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update3"
         
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt400_set_act_visible()   
   CALL axmt400_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " xmevent = " ||g_enterprise|| " AND",
                      " xmevdocno = '", g_xmev_m.xmevdocno, "' "
 
   #填到對應位置
   CALL axmt400_browser_fill("")
 
   CLOSE axmt400_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL axmt400_msgcentre_notify('modify')
 
END FUNCTION 
 
{</section>}
 
{<section id="axmt400.input" >}
#+ 資料輸入
PRIVATE FUNCTION axmt400_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE l_success              LIKE type_t.num5
   DEFINE l_slip                 LIKE ooba_t.ooba002
   DEFINE l_rate                 LIKE ooan_t.ooan005
   DEFINE l_controlno            LIKE ooha_t.ooha001
   DEFINE l_oodb011              LIKE oodb_t.oodb011
   DEFINE l_where                STRING
   DEFINE l_bmaa_cnt             LIKE type_t.num5  #add--2015/07/20 By shiun
   DEFINE l_xmew  RECORD
       xmewseq  LIKE xmew_t.xmewseq,
       xmew007  LIKE xmew_t.xmew007,
       xmew008  LIKE xmew_t.xmew008,
       xmew012  LIKE xmew_t.xmew012,
       xmew014  LIKE xmew_t.xmew014,
       xmew015  LIKE xmew_t.xmew015
                END RECORD
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xmev_m.xmevdocno,g_xmev_m.xmevdocno_desc,g_xmev_m.xmevdocdt,g_xmev_m.xmevsite,g_xmev_m.xmev001, 
       g_xmev_m.xmev001_desc,g_xmev_m.xmev002,g_xmev_m.xmev002_desc,g_xmev_m.xmevstus,g_xmev_m.xmev003, 
       g_xmev_m.xmev003_desc,g_xmev_m.xmev004,g_xmev_m.xmev004_desc,g_xmev_m.xmev019,g_xmev_m.xmev020, 
       g_xmev_m.xmev005,g_xmev_m.xmev006,g_xmev_m.xmev006_desc,g_xmev_m.xmev007,g_xmev_m.xmev008,g_xmev_m.xmev008_desc, 
       g_xmev_m.xmev009,g_xmev_m.xmev010,g_xmev_m.xmev011,g_xmev_m.xmev012,g_xmev_m.xmev012_desc,g_xmev_m.xmev013, 
       g_xmev_m.xmevownid,g_xmev_m.xmevownid_desc,g_xmev_m.xmevowndp,g_xmev_m.xmevowndp_desc,g_xmev_m.xmevcrtid, 
       g_xmev_m.xmevcrtid_desc,g_xmev_m.xmevcrtdp,g_xmev_m.xmevcrtdp_desc,g_xmev_m.xmevcrtdt,g_xmev_m.xmevmodid, 
       g_xmev_m.xmevmodid_desc,g_xmev_m.xmevmoddt,g_xmev_m.xmevcnfid,g_xmev_m.xmevcnfid_desc,g_xmev_m.xmevcnfdt, 
       g_xmev_m.xmev014,g_xmev_m.xmev015,g_xmev_m.xmev016,g_xmev_m.xmev017,g_xmev_m.xmev018
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT xmewsite,xmewseq,xmew001,xmew002,xmew003,xmew004,xmew005,xmew006,xmew007, 
       xmew008,xmew009,xmew010,xmew011,xmew012,xmew013,xmew014,xmew015,xmew016 FROM xmew_t WHERE xmewent=?  
       AND xmewdocno=? AND xmewseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt400_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql name="input.define_sql2"
   
   #end add-point    
   LET g_forupd_sql = "SELECT xmexsite,xmexseq,xmex001,xmex002,xmex003,xmex004,xmex005,xmex006,xmex007, 
       xmex008,xmex009,xmex010,xmex011,xmex012,xmex013,xmex014 FROM xmex_t WHERE xmexent=? AND xmexdocno=?  
       AND xmexseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql2"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt400_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql3"
   
   #end add-point    
   LET g_forupd_sql = "SELECT xmfisite,xmfiseq,xmfi001,xmfi002,xmfi003,xmfi004,xmfi005,xmfi006 FROM  
       xmfi_t WHERE xmfient=? AND xmfidocno=? AND xmfiseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql3"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt400_bcl3 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql name="input.other_sql"
   
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL axmt400_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   #將單身輸入權限放入共用變數給嵌入的子程式用, 若子程式要自己控管, 還是可以從子程式中覆蓋掉值
   #161031-00025#18-s
   LET g_detail_insert = l_allow_insert
   LET g_detail_delete = l_allow_delete
   #161031-00025#18-e
   #end add-point
   CALL axmt400_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_xmev_m.xmevdocno,g_xmev_m.xmevdocdt,g_xmev_m.xmevsite,g_xmev_m.xmev001,g_xmev_m.xmev002, 
       g_xmev_m.xmevstus,g_xmev_m.xmev003,g_xmev_m.xmev004,g_xmev_m.xmev019,g_xmev_m.xmev020,g_xmev_m.xmev005, 
       g_xmev_m.xmev006,g_xmev_m.xmev007,g_xmev_m.xmev008,g_xmev_m.xmev009,g_xmev_m.xmev010,g_xmev_m.xmev011, 
       g_xmev_m.xmev012,g_xmev_m.xmev013
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   LET g_errshow = 1
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="axmt400.input.head" >}
      #單頭段
      INPUT BY NAME g_xmev_m.xmevdocno,g_xmev_m.xmevdocdt,g_xmev_m.xmevsite,g_xmev_m.xmev001,g_xmev_m.xmev002, 
          g_xmev_m.xmevstus,g_xmev_m.xmev003,g_xmev_m.xmev004,g_xmev_m.xmev019,g_xmev_m.xmev020,g_xmev_m.xmev005, 
          g_xmev_m.xmev006,g_xmev_m.xmev007,g_xmev_m.xmev008,g_xmev_m.xmev009,g_xmev_m.xmev010,g_xmev_m.xmev011, 
          g_xmev_m.xmev012,g_xmev_m.xmev013 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN axmt400_cl USING g_enterprise,g_xmev_m.xmevdocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axmt400_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE axmt400_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL axmt400_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            LET g_xmev_m_t.* = g_xmev_m.*
            LET g_xmev_m_o.* = g_xmev_m.*
            #end add-point
            CALL axmt400_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmevdocno
            
            #add-point:AFTER FIELD xmevdocno name="input.a.xmevdocno"
            LET g_xmev_m.xmevdocno_desc = ' '
            DISPLAY BY NAME g_xmev_m.xmevdocno_desc
            IF  NOT cl_null(g_xmev_m.xmevdocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xmev_m.xmevdocno != g_xmevdocno_t )) THEN 
                  IF NOT axmt400_xmevdocno_chk() THEN 
                     LET g_xmev_m.xmevdocno = g_xmev_m_t.xmevdocno
                     CALL s_aooi200_get_slip_desc(g_xmev_m.xmevdocno) RETURNING g_xmev_m.xmevdocno_desc
                     DISPLAY BY NAME g_xmev_m.xmevdocno,g_xmev_m.xmevdocno_desc
                     NEXT FIELD CURRENT
                  END IF
                  CALL axmt400_doc_default()
               END IF
            ELSE
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'sub-00324'
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
               NEXT FIELD CURRENT
            END IF
            CALL s_aooi200_get_slip_desc(g_xmev_m.xmevdocno) RETURNING g_xmev_m.xmevdocno_desc
            DISPLAY BY NAME g_xmev_m.xmevdocno_desc
            CALL axmt400_set_entry(p_cmd)
            CALL axmt400_set_no_entry(p_cmd)

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmevdocno
            #add-point:BEFORE FIELD xmevdocno name="input.b.xmevdocno"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmevdocno
            #add-point:ON CHANGE xmevdocno name="input.g.xmevdocno"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmevdocdt
            #add-point:BEFORE FIELD xmevdocdt name="input.b.xmevdocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmevdocdt
            
            #add-point:AFTER FIELD xmevdocdt name="input.a.xmevdocdt"
            IF NOT cl_null(g_xmev_m.xmevdocdt) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmev_m.xmevdocdt != g_xmev_m_o.xmevdocdt OR g_xmev_m_o.xmevdocdt IS NULL )) THEN
                  CALL axmt400_xmev013_def()
               END IF
            END IF
            LET g_xmev_m_o.xmevdocdt = g_xmev_m.xmevdocdt
            LET g_xmev_m_o.xmev013 = g_xmev_m.xmev013

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmevdocdt
            #add-point:ON CHANGE xmevdocdt name="input.g.xmevdocdt"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmevsite
            #add-point:BEFORE FIELD xmevsite name="input.b.xmevsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmevsite
            
            #add-point:AFTER FIELD xmevsite name="input.a.xmevsite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmevsite
            #add-point:ON CHANGE xmevsite name="input.g.xmevsite"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmev001
            
            #add-point:AFTER FIELD xmev001 name="input.a.xmev001"
            LET g_xmev_m.xmev001_desc = ' '
            DISPLAY BY NAME g_xmev_m.xmev001_desc
            IF NOT cl_null(g_xmev_m.xmev001) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmev_m.xmev001 != g_xmev_m_o.xmev001 OR g_xmev_m_o.xmev001 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmev_m.xmev001
                  #160318-00025#4--add--str
                  LET g_errshow = TRUE 
                  LET g_chkparam.err_str[1] = "aim-00070:sub-01302|aooi130|",cl_get_progname("aooi130",g_lang,"2"),"|:EXEPROGaooi130"
                  #160318-00025#4--add--end
                  IF cl_chk_exist("v_ooag001") THEN
                     #歸屬部門
                     SELECT ooag003 INTO g_xmev_m.xmev002 FROM ooag_t
                      WHERE ooagent = g_enterprise AND ooag001 = g_xmev_m.xmev001
                     CALL s_desc_get_department_desc(g_xmev_m.xmev002) RETURNING g_xmev_m.xmev002_desc
                     DISPLAY BY NAME g_xmev_m.xmev002,g_xmev_m.xmev002_desc
                  ELSE
                     LET g_xmev_m.xmev001 = g_xmev_m_o.xmev001
                     CALL s_desc_get_person_desc(g_xmev_m.xmev001) RETURNING g_xmev_m.xmev001_desc
                     DISPLAY BY NAME g_xmev_m.xmev001,g_xmev_m.xmev001_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_person_desc(g_xmev_m.xmev001) RETURNING g_xmev_m.xmev001_desc
            DISPLAY BY NAME g_xmev_m.xmev001_desc
            LET g_xmev_m_o.xmev001 = g_xmev_m.xmev001
            LET g_xmev_m_o.xmev002 = g_xmev_m.xmev002

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmev001
            #add-point:BEFORE FIELD xmev001 name="input.b.xmev001"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmev001
            #add-point:ON CHANGE xmev001 name="input.g.xmev001"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmev002
            
            #add-point:AFTER FIELD xmev002 name="input.a.xmev002"
            LET g_xmev_m.xmev002_desc = ' '
            DISPLAY BY NAME g_xmev_m.xmev002_desc
            IF NOT cl_null(g_xmev_m.xmev002) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmev_m.xmev002 != g_xmev_m_o.xmev002 OR g_xmev_m_o.xmev002 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmev_m.xmev002
                  LET g_chkparam.arg2 = g_xmev_m.xmevdocdt
                  #160318-00025#4--add--str
                  LET g_errshow = TRUE 
                  LET g_chkparam.err_str[1] = "aoo-00029:sub-01302|aooi125|",cl_get_progname("aooi125",g_lang,"2"),"|:EXEPROGaooi125"
                  #160318-00025#4--add--end
                  IF NOT cl_chk_exist("v_ooeg001") THEN
                     LET g_xmev_m.xmev002 = g_xmev_m_o.xmev002
                     CALL s_desc_get_department_desc(g_xmev_m.xmev002) RETURNING g_xmev_m.xmev002_desc
                     DISPLAY BY NAME g_xmev_m.xmev002,g_xmev_m.xmev002_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_department_desc(g_xmev_m.xmev002) RETURNING g_xmev_m.xmev002_desc
            DISPLAY BY NAME g_xmev_m.xmev002_desc
            LET g_xmev_m_o.xmev002 = g_xmev_m.xmev002

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmev002
            #add-point:BEFORE FIELD xmev002 name="input.b.xmev002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmev002
            #add-point:ON CHANGE xmev002 name="input.g.xmev002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmevstus
            #add-point:BEFORE FIELD xmevstus name="input.b.xmevstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmevstus
            
            #add-point:AFTER FIELD xmevstus name="input.a.xmevstus"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmevstus
            #add-point:ON CHANGE xmevstus name="input.g.xmevstus"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmev003
            
            #add-point:AFTER FIELD xmev003 name="input.a.xmev003"
            LET g_xmev_m.xmev003_desc = ' '
            DISPLAY BY NAME g_xmev_m.xmev003_desc
            IF NOT cl_null(g_xmev_m.xmev003) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmev_m.xmev003 != g_xmev_m_o.xmev003 OR g_xmev_m_o.xmev003 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmev_m.xmev003
                  #ming 20141120 add -------------------------(S) 
                  LET g_chkparam.arg2 = g_site
                  #ming 20141120 add -------------------------(E) 
                  #160318-00025#4--add--str
                  LET g_errshow = TRUE 
                  LET g_chkparam.err_str[1] = "apm-00201:sub-01302|axmm200|",cl_get_progname("axmm200",g_lang,"2"),"|:EXEPROGaxmm200"
                  #160318-00025#4--add--end
                  IF NOT cl_chk_exist("v_pmaa001_3") THEN
                     LET g_xmev_m.xmev003 = g_xmev_m_o.xmev003
                     #CALL s_desc_get_trading_partner_full_desc(g_xmev_m.xmev003) RETURNING g_xmev_m.xmev003_desc #161031-00023#1 MARK
                     #161031-00023#1-s
                     CALL axmt400_xmev003_get_desc()
                     #161031-00023#1-e                      
                     DISPLAY BY NAME g_xmev_m.xmev003,g_xmev_m.xmev003_desc
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT s_control_check_customer(g_xmev_m.xmev003,'2',g_site,g_user,g_dept,g_xmev_m.xmevdocno) THEN
                     LET g_xmev_m.xmev003 = g_xmev_m_o.xmev003
                     #CALL s_desc_get_trading_partner_full_desc(g_xmev_m.xmev003) RETURNING g_xmev_m.xmev003_desc #161031-00023#1 MARK
                     #161031-00023#1-s
                     CALL axmt400_xmev003_get_desc()
                     #161031-00023#1-e
                     DISPLAY BY NAME g_xmev_m.xmev003,g_xmev_m.xmev003_desc
                     NEXT FIELD CURRENT
                  END IF
                  #如果客戶有修改，根據客戶帶值
                  #161031-00023#1-s
                  LET g_pmaa004 = ''
                  SELECT pmaa004 INTO g_pmaa004 FROM pmaa_t WHERE pmaaent = g_enterprise AND pmaa001 = g_xmev_m.xmev003
                  IF g_pmaa004 = '2' THEN   #一次性交易對象
                     CALL apmi004_01('1',g_xmev_m.xmev020,g_xmev_m.xmev003,g_xmev_m.xmevdocno) RETURNING g_xmev_m.xmev020
                  END IF
                  IF g_pmaa004 = '4' THEN   #內部員工
                     CALL apmi004_01('2',g_xmev_m.xmev020,g_xmev_m.xmev003,g_xmev_m.xmevdocno) RETURNING g_xmev_m.xmev020
                  END IF
                  #161031-00023#1-e
                  #控制組編號
                  CALL s_control_get_group('2',g_xmev_m.xmev001,g_xmev_m.xmev002) RETURNING l_success,l_controlno
                  IF l_success THEN
                     IF NOT s_aooi200_chk_doc_fields(g_site,'1',g_xmev_m.xmevdocno,'xmev006') THEN
                        #客戶慣用幣別
                        IF cl_null(l_controlno) THEN
                           SELECT pmab083 INTO g_xmev_m.xmev006 FROM pmab_t
                            WHERE pmabent = g_enterprise
                              AND pmabsite = g_site
                              AND pmab001 = g_xmev_m.xmev003
                        ELSE
                           SELECT xmae003 INTO g_xmev_m.xmev006 FROM xmae_t
                            WHERE xmaeent = g_enterprise
                              AND xmae001 = g_xmev_m.xmev003
                              AND xmae002 = l_controlno
                        END IF
                        DISPLAY BY NAME g_xmev_m.xmev006
                     END IF
                     IF NOT s_aooi200_chk_doc_fields(g_site,'1',g_xmev_m.xmevdocno,'xmev008') THEN
                        #客戶慣用稅別
                        IF cl_null(l_controlno) THEN
                           SELECT pmab084 INTO g_xmev_m.xmev008 FROM pmab_t
                            WHERE pmabent = g_enterprise
                              AND pmabsite = g_site
                              AND pmab001 = g_xmev_m.xmev003
                        ELSE
                           SELECT xmae004 INTO g_xmev_m.xmev008 FROM xmae_t
                            WHERE xmaeent = g_enterprise
                              AND xmae001 = g_xmev_m.xmev003
                              AND xmae002 = l_controlno
                        END IF
                        DISPLAY BY NAME g_xmev_m.xmev008
                     END IF
                  END IF
               END IF
            END IF
            #CALL s_desc_get_trading_partner_full_desc(g_xmev_m.xmev003) RETURNING g_xmev_m.xmev003_desc  #161031-00023#1 MARK
            #161031-00023#1-s
            CALL axmt400_xmev003_get_desc()
            #161031-00023#1-e            
            DISPLAY BY NAME g_xmev_m.xmev003_desc
            LET g_xmev_m_o.xmev003 = g_xmev_m.xmev003
            LET g_xmev_m_o.xmev006 = g_xmev_m.xmev006
            LET g_xmev_m_o.xmev008 = g_xmev_m.xmev008

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmev003
            #add-point:BEFORE FIELD xmev003 name="input.b.xmev003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmev003
            #add-point:ON CHANGE xmev003 name="input.g.xmev003"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmev004
            
            #add-point:AFTER FIELD xmev004 name="input.a.xmev004"
            LET g_xmev_m.xmev004_desc = ' '
            DISPLAY BY NAME g_xmev_m.xmev004_desc
            IF NOT cl_null(g_xmev_m.xmev004) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmev_m.xmev004 != g_xmev_m_o.xmev004 OR g_xmev_m_o.xmev004 IS NULL )) THEN
                  LET l_bmaa_cnt = 0
                  SELECT COUNT(*) INTO l_bmaa_cnt
                    FROM bmaa_t
                   WHERE bmaaent = g_enterprise
                     AND bmaasite = g_site
                     AND bmaa001 = g_xmev_m.xmev004
                     AND bmaa002 = ' '
                  IF l_bmaa_cnt = 0 THEN
                     INITIALIZE g_chkparam.* TO NULL
                     LET g_chkparam.arg1 = g_xmev_m.xmev004
                     #160318-00025#4--add--str
                     LET g_errshow = TRUE 
                     LET g_chkparam.err_str[1] = "axm-00320:sub-01302|axmi400|",cl_get_progname("axmi400",g_lang,"2"),"|:EXEPROGaxmi400"
                     #160318-00025#4--add--end
                     IF NOT cl_chk_exist("v_xmesdocno") THEN
                        LET g_xmev_m.xmev004 = g_xmev_m_o.xmev004
                        DISPLAY BY NAME g_xmev_m.xmev004
                        CALL axmt400_xmev004_ref()
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF
            CALL axmt400_xmev004_ref()
            LET g_xmev_m_o.xmev004 = g_xmev_m.xmev004

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmev004
            #add-point:BEFORE FIELD xmev004 name="input.b.xmev004"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmev004
            #add-point:ON CHANGE xmev004 name="input.g.xmev004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmev019
            #add-point:BEFORE FIELD xmev019 name="input.b.xmev019"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmev019
            
            #add-point:AFTER FIELD xmev019 name="input.a.xmev019"
            LET g_xmev_m_o.xmev019 = g_xmev_m.xmev019

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmev019
            #add-point:ON CHANGE xmev019 name="input.g.xmev019"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmev020
            #add-point:BEFORE FIELD xmev020 name="input.b.xmev020"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmev020
            
            #add-point:AFTER FIELD xmev020 name="input.a.xmev020"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmev020
            #add-point:ON CHANGE xmev020 name="input.g.xmev020"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmev005
            #add-point:BEFORE FIELD xmev005 name="input.b.xmev005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmev005
            
            #add-point:AFTER FIELD xmev005 name="input.a.xmev005"
            LET g_xmev_m_o.xmev005 = g_xmev_m.xmev005

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmev005
            #add-point:ON CHANGE xmev005 name="input.g.xmev005"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmev006
            
            #add-point:AFTER FIELD xmev006 name="input.a.xmev006"
            LET g_xmev_m.xmev006_desc = ' '
            DISPLAY BY NAME g_xmev_m.xmev006_desc
            IF NOT cl_null(g_xmev_m.xmev006) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmev_m.xmev006 != g_xmev_m_o.xmev006 OR g_xmev_m_o.xmev006 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_site
                  LET g_chkparam.arg2 = g_xmev_m.xmev006
                  #160318-00025#4--add--str
                  LET g_errshow = TRUE 
                  LET g_chkparam.err_str[1] = "aoo-00176:sub-01302|aooi150|",cl_get_progname("aooi150",g_lang,"2"),"|:EXEPROGaooi150"
                  #160318-00025#4--add--end
                  IF NOT cl_chk_exist("v_ooaj002") THEN
                     LET g_xmev_m.xmev006 = g_xmev_m_o.xmev006
                     CALL s_desc_get_currency_desc(g_xmev_m.xmev006) RETURNING g_xmev_m.xmev006_desc
                     DISPLAY BY NAME g_xmev_m.xmev006,g_xmev_m.xmev006_desc
                     NEXT FIELD CURRENT
                  END IF
                  #2014/12/03 by stellar modify ----- (S)
#                  CALL s_aooi160_get_exrate('1',g_site,g_today,g_xmev_m.xmev006,g_ooef016,0,'11') RETURNING g_xmev_m.xmev007
                  CALL axmt400_get_exrate(g_xmev_m.xmev006)
                       RETURNING g_xmev_m.xmev007
                  #2014/12/03 by stellar modify ----- (E)
                  DISPLAY BY NAME g_xmev_m.xmev007
               END IF
            END IF
            CALL s_desc_get_currency_desc(g_xmev_m.xmev006) RETURNING g_xmev_m.xmev006_desc
            DISPLAY BY NAME g_xmev_m.xmev006_desc
            LET g_xmev_m_o.xmev006 = g_xmev_m.xmev006
            LET g_xmev_m_o.xmev007 = g_xmev_m.xmev007

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmev006
            #add-point:BEFORE FIELD xmev006 name="input.b.xmev006"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmev006
            #add-point:ON CHANGE xmev006 name="input.g.xmev006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmev007
            #add-point:BEFORE FIELD xmev007 name="input.b.xmev007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmev007
            
            #add-point:AFTER FIELD xmev007 name="input.a.xmev007"
            LET g_xmev_m_o.xmev007 = g_xmev_m.xmev007

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmev007
            #add-point:ON CHANGE xmev007 name="input.g.xmev007"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmev008
            
            #add-point:AFTER FIELD xmev008 name="input.a.xmev008"
            LET g_xmev_m.xmev008_desc = ' '
            DISPLAY BY NAME g_xmev_m.xmev008_desc
            IF NOT cl_null(g_xmev_m.xmev008) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmev_m.xmev008 != g_xmev_m_o.xmev008 OR g_xmev_m_o.xmev008 IS NULL )) THEN
                  CALL s_tax_chk(g_site,g_xmev_m.xmev008)
                       RETURNING l_success,g_xmev_m.xmev008_desc,g_xmev_m.xmev010,g_xmev_m.xmev009,l_oodb011
                  IF NOT l_success THEN
                     LET g_xmev_m.xmev008 = g_xmev_m_o.xmev008
                     LET g_xmev_m.xmev009 = g_xmev_m_o.xmev009
                     LET g_xmev_m.xmev010 = g_xmev_m_o.xmev010
                     CALL s_desc_get_tax_desc1(g_site,g_xmev_m.xmev008) RETURNING g_xmev_m.xmev008_desc
                     DISPLAY BY NAME g_xmev_m.xmev008,g_xmev_m.xmev009,g_xmev_m.xmev010,g_xmev_m.xmev008_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_tax_desc1(g_site,g_xmev_m.xmev008) RETURNING g_xmev_m.xmev008_desc
            DISPLAY BY NAME g_xmev_m.xmev009,g_xmev_m.xmev010,g_xmev_m.xmev008_desc
            LET g_xmev_m_o.xmev008 = g_xmev_m.xmev008
            LET g_xmev_m_o.xmev009 = g_xmev_m.xmev009
            LET g_xmev_m_o.xmev010 = g_xmev_m.xmev010

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmev008
            #add-point:BEFORE FIELD xmev008 name="input.b.xmev008"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmev008
            #add-point:ON CHANGE xmev008 name="input.g.xmev008"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmev009
            #add-point:BEFORE FIELD xmev009 name="input.b.xmev009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmev009
            
            #add-point:AFTER FIELD xmev009 name="input.a.xmev009"
            LET g_xmev_m_o.xmev009 = g_xmev_m.xmev009

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmev009
            #add-point:ON CHANGE xmev009 name="input.g.xmev009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmev010
            #add-point:BEFORE FIELD xmev010 name="input.b.xmev010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmev010
            
            #add-point:AFTER FIELD xmev010 name="input.a.xmev010"
            LET g_xmev_m_o.xmev010 = g_xmev_m.xmev010

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmev010
            #add-point:ON CHANGE xmev010 name="input.g.xmev010"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmev011
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmev_m.xmev011,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD xmev011
            END IF 
 
 
 
            #add-point:AFTER FIELD xmev011 name="input.a.xmev011"
            IF NOT cl_null(g_xmev_m.xmev011) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmev_m.xmev011 != g_xmev_m_o.xmev011 OR g_xmev_m_o.xmev011 IS NULL )) THEN
                  IF NOT cl_null(g_xmev_m.xmev012) THEN
                     CALL s_aooi250_take_decimals(g_xmev_m.xmev012,g_xmev_m.xmev011) RETURNING l_success,g_xmev_m.xmev011
                     DISPLAY BY NAME g_xmev_m.xmev011
                  END IF
                  INITIALIZE l_xmew.* TO NULL
                  DECLARE xmev011_cur CURSOR FOR
                     SELECT xmewseq,xmew007,xmew008,xmew014
                       INTO l_n FROM xmew_t
                      WHERE xmewent = g_enterprise
                        AND xmewdocno = g_xmev_m.xmevdocno
                  FOREACH xmev011_cur INTO l_xmew.xmewseq,l_xmew.xmew007,l_xmew.xmew008,l_xmew.xmew014
                     IF SQLCA.SQLCODE THEN
                        EXIT FOREACH
                     END IF
                     
                     CALL axmt400_xmew015(l_xmew.xmew014,l_xmew.xmew007,l_xmew.xmew008) RETURNING l_xmew.xmew015
                     
                     UPDATE xmew_t SET xmew015 = l_xmew.xmew015
                      WHERE xmewent = g_enterprise
                        AND xmewdocno = g_xmev_m.xmevdocno
                        AND xmewseq = l_xmew.xmewseq
                  
                     INITIALIZE l_xmew.* TO NULL
                  END FOREACH
               END IF
            END IF
            LET g_xmev_m_o.xmev011 = g_xmev_m.xmev011
            CALL axmt400_b_fill()

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmev011
            #add-point:BEFORE FIELD xmev011 name="input.b.xmev011"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmev011
            #add-point:ON CHANGE xmev011 name="input.g.xmev011"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmev012
            
            #add-point:AFTER FIELD xmev012 name="input.a.xmev012"
            LET g_xmev_m.xmev012_desc = ' '
            DISPLAY BY NAME g_xmev_m.xmev012_desc
            IF NOT cl_null(g_xmev_m.xmev012) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmev_m.xmev012 != g_xmev_m_o.xmev012 OR g_xmev_m_o.xmev012 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmev_m.xmev012
                  #160318-00025#4--add--str
                  LET g_errshow = TRUE 
                  LET g_chkparam.err_str[1] = "aim-00005:sub-01302|aooi250|",cl_get_progname("aooi250",g_lang,"2"),"|:EXEPROGaooi250"
                  #160318-00025#4--add--end
                  IF NOT cl_chk_exist("v_ooca001") THEN
                     LET g_xmev_m.xmev012 = g_xmev_m_o.xmev012
                     CALL s_desc_get_unit_desc(g_xmev_m.xmev012) RETURNING g_xmev_m.xmev012_desc
                     DISPLAY BY NAME g_xmev_m.xmev012,g_xmev_m.xmev012_desc
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT cl_null(g_xmev_m.xmev011) THEN
                     CALL s_aooi250_take_decimals(g_xmev_m.xmev012,g_xmev_m.xmev011) RETURNING l_success,g_xmev_m.xmev011
                     DISPLAY BY NAME g_xmev_m.xmev011
                  END IF
               END IF
            END IF
            CALL s_desc_get_unit_desc(g_xmev_m.xmev012) RETURNING g_xmev_m.xmev012_desc
            DISPLAY BY NAME g_xmev_m.xmev012_desc
            LET g_xmev_m_o.xmev012 = g_xmev_m.xmev012
            LET g_xmev_m_o.xmev011 = g_xmev_m.xmev011

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmev012
            #add-point:BEFORE FIELD xmev012 name="input.b.xmev012"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmev012
            #add-point:ON CHANGE xmev012 name="input.g.xmev012"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmev013
            #add-point:BEFORE FIELD xmev013 name="input.b.xmev013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmev013
            
            #add-point:AFTER FIELD xmev013 name="input.a.xmev013"
            IF NOT cl_null(g_xmev_m.xmev013) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmev_m.xmev013 != g_xmev_m_o.xmev013 OR g_xmev_m_o.xmev013 IS NULL )) THEN
                  IF g_xmev_m.xmev013 < g_xmev_m.xmevdocdt THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_xmev_m.xmev013
#                     LET g_errparam.code   = "axm-00410" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET g_xmev_m.xmev013 = g_xmev_m_o.xmev013
                     DISPLAY BY NAME g_xmev_m.xmev013
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            LET g_xmev_m_o.xmev013 = g_xmev_m.xmev013

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmev013
            #add-point:ON CHANGE xmev013 name="input.g.xmev013"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.xmevdocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmevdocno
            #add-point:ON ACTION controlp INFIELD xmevdocno name="input.c.xmevdocno"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmev_m.xmevdocno  #給予default值
            LET g_qryparam.arg1 = g_ooef004
            LET g_qryparam.arg2 = g_prog
            #LET g_qryparam.where = "1=1 "
            #CALL s_control_get_doc_sql('ooba002',g_xmev_m.xmevdocno,'1') RETURNING l_success,l_where
            #IF l_success THEN
            #   LET g_qryparam.where = g_qryparam.where ," AND ",l_where
            #END IF
            CALL q_ooba002_1()                            #呼叫開窗
            LET g_xmev_m.xmevdocno = g_qryparam.return1              
            DISPLAY g_xmev_m.xmevdocno TO xmevdocno
            CALL s_aooi200_get_slip_desc(g_xmev_m.xmevdocno) RETURNING g_xmev_m.xmevdocno_desc
            DISPLAY BY NAME g_xmev_m.xmevdocno_desc
            NEXT FIELD xmevdocno                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmevdocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmevdocdt
            #add-point:ON ACTION controlp INFIELD xmevdocdt name="input.c.xmevdocdt"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmevsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmevsite
            #add-point:ON ACTION controlp INFIELD xmevsite name="input.c.xmevsite"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmev001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmev001
            #add-point:ON ACTION controlp INFIELD xmev001 name="input.c.xmev001"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmev_m.xmev001  #給予default值
            CALL q_ooag001()                            #呼叫開窗
            LET g_xmev_m.xmev001 = g_qryparam.return1              
            DISPLAY g_xmev_m.xmev001 TO xmev001
            CALL s_desc_get_person_desc(g_xmev_m.xmev001) RETURNING g_xmev_m.xmev001_desc
            DISPLAY BY NAME g_xmev_m.xmev001_desc
            NEXT FIELD xmev001                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmev002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmev002
            #add-point:ON ACTION controlp INFIELD xmev002 name="input.c.xmev002"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmev_m.xmev002  #給予default值
            LET g_qryparam.arg1 = g_xmev_m.xmevdocdt
            CALL q_ooeg001()                            #呼叫開窗
            LET g_xmev_m.xmev002 = g_qryparam.return1              
            DISPLAY g_xmev_m.xmev002 TO xmev002
            CALL s_desc_get_department_desc(g_xmev_m.xmev002) RETURNING g_xmev_m.xmev002_desc
            DISPLAY BY NAME g_xmev_m.xmev002_desc
            NEXT FIELD xmev002                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmevstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmevstus
            #add-point:ON ACTION controlp INFIELD xmevstus name="input.c.xmevstus"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmev003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmev003
            #add-point:ON ACTION controlp INFIELD xmev003 name="input.c.xmev003"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmev_m.xmev003  #給予default值
            LET g_qryparam.where = "1=1 "
            CALL s_control_get_customer_sql('2',g_site,g_user,g_dept,g_xmev_m.xmevdocno) RETURNING l_success,l_where
            IF l_success THEN
               LET g_qryparam.where = g_qryparam.where ," AND ",l_where
            END IF 
            
            #ming 20141120 add ------------------------------------(S) 
            LET g_qryparam.arg1 = g_site
            #ming 20141120 add ------------------------------------(E) 
            
            CALL q_pmaa001_6()                          #呼叫開窗
            LET g_xmev_m.xmev003 = g_qryparam.return1              
            DISPLAY g_xmev_m.xmev003 TO xmev003
            #CALL s_desc_get_trading_partner_full_desc(g_xmev_m.xmev003) RETURNING g_xmev_m.xmev003_desc  #161031-00023#1 MARK
            #161031-00023#1-s
            CALL axmt400_xmev003_get_desc()
            #161031-00023#1-e
            DISPLAY BY NAME g_xmev_m.xmev003_desc
            NEXT FIELD xmev003                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmev004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmev004
            #add-point:ON ACTION controlp INFIELD xmev004 name="input.c.xmev004"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmev_m.xmev004  #給予default值
            #mod--161102-00066#1 By shiun--(S)
#            CALL q_xmesdocno()                          #呼叫開窗
            CALL q_xmesdocno_1()
            #mod--161102-00066#1 By shiun--(E)
            LET g_xmev_m.xmev004 = g_qryparam.return1              
            DISPLAY g_xmev_m.xmev004 TO xmev004
            CALL axmt400_xmev004_ref()
            NEXT FIELD xmev004                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmev019
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmev019
            #add-point:ON ACTION controlp INFIELD xmev019 name="input.c.xmev019"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmev020
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmev020
            #add-point:ON ACTION controlp INFIELD xmev020 name="input.c.xmev020"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmev005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmev005
            #add-point:ON ACTION controlp INFIELD xmev005 name="input.c.xmev005"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmev006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmev006
            #add-point:ON ACTION controlp INFIELD xmev006 name="input.c.xmev006"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmev_m.xmev006  #給予default值
            LET g_qryparam.arg1 = g_site
            CALL q_ooaj002_1()                          #呼叫開窗
            LET g_xmev_m.xmev006 = g_qryparam.return1              
            DISPLAY g_xmev_m.xmev006 TO xmev006
            CALL s_desc_get_currency_desc(g_xmev_m.xmev006) RETURNING g_xmev_m.xmev006_desc
            DISPLAY BY NAME g_xmev_m.xmev006_desc
            NEXT FIELD xmev006                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmev007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmev007
            #add-point:ON ACTION controlp INFIELD xmev007 name="input.c.xmev007"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmev008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmev008
            #add-point:ON ACTION controlp INFIELD xmev008 name="input.c.xmev008"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmev_m.xmev008  #給予default值
            CALL q_oodb002_11()                         #呼叫開窗
            LET g_xmev_m.xmev008 = g_qryparam.return1              
            DISPLAY g_xmev_m.xmev008 TO xmev008
            CALL s_desc_get_tax_desc1(g_site,g_xmev_m.xmev008) RETURNING g_xmev_m.xmev008_desc
            DISPLAY BY NAME g_xmev_m.xmev008_desc
            NEXT FIELD xmev008                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmev009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmev009
            #add-point:ON ACTION controlp INFIELD xmev009 name="input.c.xmev009"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmev010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmev010
            #add-point:ON ACTION controlp INFIELD xmev010 name="input.c.xmev010"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmev011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmev011
            #add-point:ON ACTION controlp INFIELD xmev011 name="input.c.xmev011"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmev012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmev012
            #add-point:ON ACTION controlp INFIELD xmev012 name="input.c.xmev012"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmev_m.xmev012  #給予default值
            CALL q_ooca001_1()                          #呼叫開窗
            LET g_xmev_m.xmev012 = g_qryparam.return1              
            DISPLAY g_xmev_m.xmev012 TO xmev012
            CALL s_desc_get_unit_desc(g_xmev_m.xmev012) RETURNING g_xmev_m.xmev012_desc
            DISPLAY BY NAME g_xmev_m.xmev012_desc
            NEXT FIELD xmev012                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmev013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmev013
            #add-point:ON ACTION controlp INFIELD xmev013 name="input.c.xmev013"
            
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_xmev_m.xmevdocno
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
               CALL s_aooi200_gen_docno(g_site,g_xmev_m.xmevdocno,g_xmev_m.xmevdocdt,g_prog) RETURNING l_success,g_xmev_m.xmevdocno 
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apm-00003'
                  LET g_errparam.extend = g_xmev_m.xmevdocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
                  NEXT FIELD xmdodocno
               END IF
               DISPLAY BY NAME g_xmev_m.xmevdocno
               #end add-point
               
               INSERT INTO xmev_t (xmevent,xmevdocno,xmevdocdt,xmevsite,xmev001,xmev002,xmevstus,xmev003, 
                   xmev004,xmev019,xmev020,xmev005,xmev006,xmev007,xmev008,xmev009,xmev010,xmev011,xmev012, 
                   xmev013,xmevownid,xmevowndp,xmevcrtid,xmevcrtdp,xmevcrtdt,xmevmodid,xmevmoddt,xmevcnfid, 
                   xmevcnfdt,xmev014,xmev015,xmev016,xmev017,xmev018)
               VALUES (g_enterprise,g_xmev_m.xmevdocno,g_xmev_m.xmevdocdt,g_xmev_m.xmevsite,g_xmev_m.xmev001, 
                   g_xmev_m.xmev002,g_xmev_m.xmevstus,g_xmev_m.xmev003,g_xmev_m.xmev004,g_xmev_m.xmev019, 
                   g_xmev_m.xmev020,g_xmev_m.xmev005,g_xmev_m.xmev006,g_xmev_m.xmev007,g_xmev_m.xmev008, 
                   g_xmev_m.xmev009,g_xmev_m.xmev010,g_xmev_m.xmev011,g_xmev_m.xmev012,g_xmev_m.xmev013, 
                   g_xmev_m.xmevownid,g_xmev_m.xmevowndp,g_xmev_m.xmevcrtid,g_xmev_m.xmevcrtdp,g_xmev_m.xmevcrtdt, 
                   g_xmev_m.xmevmodid,g_xmev_m.xmevmoddt,g_xmev_m.xmevcnfid,g_xmev_m.xmevcnfdt,g_xmev_m.xmev014, 
                   g_xmev_m.xmev015,g_xmev_m.xmev016,g_xmev_m.xmev017,g_xmev_m.xmev018) 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_xmev_m:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               LET g_ooff003_d = g_xmev_m.xmevdocno   #161031-00025#18 add
               IF NOT cl_null(g_xmev_m.xmev004) AND l_cmd_t <> 'r' THEN
                  LET l_cnt = ''
                  SELECT COUNT(*) INTO l_cnt FROM xmes_t,xmet_t
                   WHERE xmesent = xmetent AND xmessite = xmetsite AND xmesdocno = xmetdocno
                     AND xmesent = g_enterprise AND xmessite = g_site AND xmesdocno = g_xmev_m.xmev004
                     AND xmesstus = 'Y'
                  IF cl_null(l_cnt) THEN LET l_cnt = 0 END IF
                  IF l_cnt > 0 THEN
                     IF cl_ask_confirm('axm-00324') THEN   #是否依範本料號自動產生單身？
                        CALL s_transaction_end('Y','0')
                        CALL s_transaction_begin()
                        CALL axmt400_gen_b(g_ooef016) RETURNING l_success
                        IF NOT l_success THEN 
                           CALL s_transaction_end('N','0')
                        END IF                        
                     END IF
                  ELSE
                     #add--2015/07/20 By shiun--(S)
                     CALL s_transaction_end('Y','0') #單頭commit
                     CALL s_transaction_begin()
                     LET l_bmaa_cnt = 0
                     SELECT COUNT(*) INTO l_bmaa_cnt
                       FROM bmaa_t
                      WHERE bmaaent = g_enterprise
                        AND bmaasite = g_site
                        AND bmaa001 = g_xmev_m.xmev004
                        AND bmaa002 = ' '
                     IF l_bmaa_cnt > 0 THEN
                        IF cl_ask_confirm('axm-00702') THEN
                           LET g_item_ac = 1
                           INITIALIZE g_bmba TO NULL
                           CALL axmt400_item_bom(g_xmev_m.xmev004)
                           IF axmt400_xmew_ins(g_xmev_m.xmevdocno) THEN
                              IF axmt400_xmex_ins(g_xmev_m.xmevdocno,g_xmev_m.xmev004) THEN
                                 CALL s_transaction_end('Y','0')
                              ELSE
                                 CALL s_transaction_end('N','0')
                              END IF
                           ELSE
                              CALL s_transaction_end('N','0')                        
                           END IF                        
                        END IF
                     END IF                     
                     #add--2015/07/20 By shiun--(E)                  
                  END IF
               END IF

               #end add-point
               
               
               
               
               #add-point:單頭新增後 name="input.head.a_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL axmt400_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL axmt400_b_fill()
                  CALL axmt400_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               CALL axmt400_b_fill()

               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               
               #end add-point
               
               #將遮罩欄位還原
               CALL axmt400_xmev_t_mask_restore('restore_mask_o')
               
               UPDATE xmev_t SET (xmevdocno,xmevdocdt,xmevsite,xmev001,xmev002,xmevstus,xmev003,xmev004, 
                   xmev019,xmev020,xmev005,xmev006,xmev007,xmev008,xmev009,xmev010,xmev011,xmev012,xmev013, 
                   xmevownid,xmevowndp,xmevcrtid,xmevcrtdp,xmevcrtdt,xmevmodid,xmevmoddt,xmevcnfid,xmevcnfdt, 
                   xmev014,xmev015,xmev016,xmev017,xmev018) = (g_xmev_m.xmevdocno,g_xmev_m.xmevdocdt, 
                   g_xmev_m.xmevsite,g_xmev_m.xmev001,g_xmev_m.xmev002,g_xmev_m.xmevstus,g_xmev_m.xmev003, 
                   g_xmev_m.xmev004,g_xmev_m.xmev019,g_xmev_m.xmev020,g_xmev_m.xmev005,g_xmev_m.xmev006, 
                   g_xmev_m.xmev007,g_xmev_m.xmev008,g_xmev_m.xmev009,g_xmev_m.xmev010,g_xmev_m.xmev011, 
                   g_xmev_m.xmev012,g_xmev_m.xmev013,g_xmev_m.xmevownid,g_xmev_m.xmevowndp,g_xmev_m.xmevcrtid, 
                   g_xmev_m.xmevcrtdp,g_xmev_m.xmevcrtdt,g_xmev_m.xmevmodid,g_xmev_m.xmevmoddt,g_xmev_m.xmevcnfid, 
                   g_xmev_m.xmevcnfdt,g_xmev_m.xmev014,g_xmev_m.xmev015,g_xmev_m.xmev016,g_xmev_m.xmev017, 
                   g_xmev_m.xmev018)
                WHERE xmevent = g_enterprise AND xmevdocno = g_xmevdocno_t
 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "xmev_t:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               CALL axmt400_amount()

               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL axmt400_xmev_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_xmev_m_t)
               LET g_log2 = util.JSON.stringify(g_xmev_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_xmevdocno_t = g_xmev_m.xmevdocno
 
            
      END INPUT
   
 
{</section>}
 
{<section id="axmt400.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_xmew_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xmew_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axmt400_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_xmew_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN axmt400_cl USING g_enterprise,g_xmev_m.xmevdocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axmt400_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE axmt400_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_xmew_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xmew_d[l_ac].xmewseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xmew_d_t.* = g_xmew_d[l_ac].*  #BACKUP
               LET g_xmew_d_o.* = g_xmew_d[l_ac].*  #BACKUP
               CALL axmt400_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               
               #end add-point  
               CALL axmt400_set_no_entry_b(l_cmd)
               IF NOT axmt400_lock_b("xmew_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axmt400_bcl INTO g_xmew_d[l_ac].xmewsite,g_xmew_d[l_ac].xmewseq,g_xmew_d[l_ac].xmew001, 
                      g_xmew_d[l_ac].xmew002,g_xmew_d[l_ac].xmew003,g_xmew_d[l_ac].xmew004,g_xmew_d[l_ac].xmew005, 
                      g_xmew_d[l_ac].xmew006,g_xmew_d[l_ac].xmew007,g_xmew_d[l_ac].xmew008,g_xmew_d[l_ac].xmew009, 
                      g_xmew_d[l_ac].xmew010,g_xmew_d[l_ac].xmew011,g_xmew_d[l_ac].xmew012,g_xmew_d[l_ac].xmew013, 
                      g_xmew_d[l_ac].xmew014,g_xmew_d[l_ac].xmew015,g_xmew_d[l_ac].xmew016
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_xmew_d_t.xmewseq,":",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_xmew_d_mask_o[l_ac].* =  g_xmew_d[l_ac].*
                  CALL axmt400_xmew_t_mask()
                  LET g_xmew_d_mask_n[l_ac].* =  g_xmew_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL axmt400_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmew_d[l_ac].* TO NULL 
            INITIALIZE g_xmew_d_t.* TO NULL 
            INITIALIZE g_xmew_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_xmew_d[l_ac].xmew007 = "1"
      LET g_xmew_d[l_ac].xmew008 = "1"
      LET g_xmew_d[l_ac].xmew009 = "N"
      LET g_xmew_d[l_ac].xmew012 = "0"
      LET g_xmew_d[l_ac].xmew014 = "0"
      LET g_xmew_d[l_ac].xmew015 = "0"
 
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            
            #end add-point
            LET g_xmew_d_t.* = g_xmew_d[l_ac].*     #新輸入資料
            LET g_xmew_d_o.* = g_xmew_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axmt400_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"

            #階層項次
            SELECT MAX(xmewseq)+1000 INTO g_xmew_d[l_ac].xmewseq
              FROM xmew_t
             WHERE xmewent = g_enterprise
               AND xmewdocno = g_xmev_m.xmevdocno
            IF cl_null(g_xmew_d[l_ac].xmewseq) OR g_xmew_d[l_ac].xmewseq = 0 THEN
               LET g_xmew_d[l_ac].xmewseq = 1000
            END IF
            
            LET g_xmew_d[l_ac].xmew010 = g_ooef016
            CALL axmt400_get_exrate(g_xmew_d[l_ac].xmew010) RETURNING g_xmew_d[l_ac].xmew011       #160805-00066#1
            LET g_xmew_d[l_ac].xmew004 = ' '
            LET g_xmew_d[l_ac].xmewsite = g_site
            LET g_xmew_d_t.* = g_xmew_d[l_ac].*
            LET g_xmew_d_o.* = g_xmew_d[l_ac].*

            #end add-point
            CALL axmt400_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmew_d[li_reproduce_target].* = g_xmew_d[li_reproduce].*
 
               LET g_xmew_d[li_reproduce_target].xmewseq = NULL
 
            END IF
            
 
            #add-point:modify段before insert name="input.body.before_insert"
            
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM xmew_t 
             WHERE xmewent = g_enterprise AND xmewdocno = g_xmev_m.xmevdocno
 
               AND xmewseq = g_xmew_d[l_ac].xmewseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmev_m.xmevdocno
               LET gs_keys[2] = g_xmew_d[g_detail_idx].xmewseq
               CALL axmt400_insert_b('xmew_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               #161031-00025#18-s
               IF NOT cl_null(g_xmew_d[l_ac].ooff013) THEN
                  CALL s_aooi360_gen('7',g_prog,g_xmev_m.xmevdocno,g_xmew_d[l_ac].xmewseq,'','','','','','','','1',g_xmew_d[l_ac].ooff013) RETURNING l_success
               END IF
               #161031-00025#18-e
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               INITIALIZE g_xmew_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmew_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axmt400_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               CALL s_transaction_end('Y','0')
               CALL s_transaction_begin()
               IF g_inam.getLength() > 1 THEN  #因為第一筆資料已呈現在畫面並寫入DB,從第二筆開始處理
                  INITIALIZE l_xmew.* TO NULL
                  SELECT MAX(xmewseq)+1000 INTO l_xmew.xmewseq FROM xmew_t
                   WHERE xmewent = g_enterprise AND xmewdocno = g_xmev_m.xmevdocno
                  IF cl_null(l_xmew.xmewseq) THEN LET l_xmew.xmewseq = 0 END IF
                  IF l_xmew.xmewseq > 1 THEN
                     FOR l_i = 2 TO g_inam.getLength()
                        IF NOT cl_null(g_xmew_d[l_ac].xmew006) AND NOT cl_null(g_inam[l_i].inam004) THEN
                           CALL s_aooi250_take_decimals(g_xmew_d[l_ac].xmew006,g_inam[l_i].inam004)
                                RETURNING l_success,g_inam[l_i].inam004
                        END IF
                        CALL axmt400_get_price(g_xmew_d[l_ac].xmew003,g_inam[l_i].inam002,g_xmew_d[l_ac].xmew006,
                                               g_inam[l_i].inam004,g_xmew_d[l_ac].xmew008,g_xmew_d[l_ac].xmew010)
                             RETURNING l_xmew.xmew012,l_xmew.xmew014,l_xmew.xmew015
                        INSERT INTO xmew_t(xmewent,xmewsite,xmewdocno,xmewseq,
                                           xmew001,xmew002,xmew003,xmew004,xmew005,xmew006,xmew007,xmew008,
                                           xmew009,xmew010,xmew011,xmew012,xmew013,xmew014,xmew015,xmew016) 
                             VALUES(g_enterprise,g_site,g_xmev_m.xmevdocno,l_xmew.xmewseq,
                                    g_xmew_d[l_ac].xmew001,g_xmew_d[l_ac].xmew002,g_xmew_d[l_ac].xmew003,
                                    g_inam[l_i].inam002,g_xmew_d[l_ac].xmew005,g_xmew_d[l_ac].xmew006,
                                    g_inam[l_i].inam004,g_xmew_d[l_ac].xmew008,g_xmew_d[l_ac].xmew009,
                                    g_xmew_d[l_ac].xmew010,g_xmew_d[l_ac].xmew011,l_xmew.xmew012,
                                    g_xmew_d[l_ac].xmew013,l_xmew.xmew014,l_xmew.xmew015,g_xmew_d[l_ac].xmew016) 
                        IF SQLCA.sqlcode THEN
                           CALL s_transaction_end('N','0')
                           EXIT FOR
                        END IF
                        LET l_xmew.xmewseq = l_xmew.xmewseq + 1  
                        #161031-00025#18-s
                        IF NOT cl_null(g_xmew_d[l_ac].ooff013) THEN
                           CALL s_aooi360_gen('7',g_prog,g_xmev_m.xmevdocno,l_xmew.xmewseq,'','','','','','','','1',g_xmew_d[l_ac].ooff013) RETURNING l_success
                        END IF
                        #161031-00025#18-e                        
                     END FOR
                  END IF
               END IF
               CALL axmt400_b_fill()
               LET g_rec_b = g_inam.getLength() - 1

               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_xmev_m.xmevdocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_xmew_d_t.xmewseq
 
            
               #刪除同層單身
               IF NOT axmt400_delete_b('xmew_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt400_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT axmt400_key_delete_b(gs_keys,'xmew_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt400_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
              #161031-00025#18-s
               CALL s_aooi360_del('7',g_prog,g_xmev_m.xmevdocno,g_xmew_d_t.xmewseq,'','','','','','','','1') RETURNING l_success
              #161031-00025#18-e
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE axmt400_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
               
               #end add-point
               LET l_count = g_xmew_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_xmew_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmewsite
            #add-point:BEFORE FIELD xmewsite name="input.b.page1.xmewsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmewsite
            
            #add-point:AFTER FIELD xmewsite name="input.a.page1.xmewsite"
            #此段落由子樣板a05產生
            IF  g_xmev_m.xmevdocno IS NOT NULL AND g_xmew_d[g_detail_idx].xmewsite IS NOT NULL AND g_xmew_d[g_detail_idx].xmewseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmev_m.xmevdocno != g_xmevdocno_t OR g_xmew_d[g_detail_idx].xmewsite != g_xmew_d_t.xmewsite OR g_xmew_d[g_detail_idx].xmewseq != g_xmew_d_t.xmewseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmew_t WHERE "||"xmewent = '" ||g_enterprise|| "' AND "||"xmewdocno = '"||g_xmev_m.xmevdocno ||"' AND "|| "xmewsite = '"||g_xmew_d[g_detail_idx].xmewsite ||"' AND "|| "xmewseq = '"||g_xmew_d[g_detail_idx].xmewseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmewsite
            #add-point:ON CHANGE xmewsite name="input.g.page1.xmewsite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmewseq
            #add-point:BEFORE FIELD xmewseq name="input.b.page1.xmewseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmewseq
            
            #add-point:AFTER FIELD xmewseq name="input.a.page1.xmewseq"
            #此段落由子樣板a05產生
            IF  g_xmev_m.xmevdocno IS NOT NULL AND g_xmew_d[g_detail_idx].xmewsite IS NOT NULL AND g_xmew_d[g_detail_idx].xmewseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmev_m.xmevdocno != g_xmevdocno_t OR g_xmew_d[g_detail_idx].xmewsite != g_xmew_d_t.xmewsite OR g_xmew_d[g_detail_idx].xmewseq != g_xmew_d_t.xmewseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmew_t WHERE "||"xmewent = '" ||g_enterprise|| "' AND "||"xmewdocno = '"||g_xmev_m.xmevdocno ||"' AND "|| "xmewsite = '"||g_xmew_d[g_detail_idx].xmewsite ||"' AND "|| "xmewseq = '"||g_xmew_d[g_detail_idx].xmewseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmewseq
            #add-point:ON CHANGE xmewseq name="input.g.page1.xmewseq"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmew001
            
            #add-point:AFTER FIELD xmew001 name="input.a.page1.xmew001"
            LET g_xmew_d[l_ac].xmew001_desc = ' '
            IF cl_null(g_xmew_d[l_ac].xmew001) THEN
               LET g_xmew_d[l_ac].xmew001 = ' '
            ELSE
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew_d[l_ac].xmew001 != g_xmew_d_t.xmew001 OR g_xmew_d_t.xmew001 IS NULL )) THEN
                  IF NOT s_azzi650_chk_exist('215',g_xmew_d[l_ac].xmew001) THEN
                     LET g_xmew_d[l_ac].xmew001 = g_xmew_d_t.xmew001
                     CALL s_desc_get_acc_desc('215',g_xmew_d[l_ac].xmew001) RETURNING g_xmew_d[l_ac].xmew001_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_acc_desc('215',g_xmew_d[l_ac].xmew001) RETURNING g_xmew_d[l_ac].xmew001_desc

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmew001
            #add-point:BEFORE FIELD xmew001 name="input.b.page1.xmew001"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmew001
            #add-point:ON CHANGE xmew001 name="input.g.page1.xmew001"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmew002
            
            #add-point:AFTER FIELD xmew002 name="input.a.page1.xmew002"
            LET g_xmew_d[l_ac].xmew002_desc = ' '
            IF NOT cl_null(g_xmew_d[l_ac].xmew002) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew_d[l_ac].xmew002 != g_xmew_d_t.xmew002 OR g_xmew_d_t.xmew002 IS NULL )) THEN
                  IF NOT s_azzi650_chk_exist('221',g_xmew_d[l_ac].xmew002) THEN
                     LET g_xmew_d[l_ac].xmew002 = g_xmew_d_t.xmew002
                     CALL s_desc_get_acc_desc('221',g_xmew_d[l_ac].xmew002) RETURNING g_xmew_d[l_ac].xmew002_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_acc_desc('221',g_xmew_d[l_ac].xmew002) RETURNING g_xmew_d[l_ac].xmew002_desc

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmew002
            #add-point:BEFORE FIELD xmew002 name="input.b.page1.xmew002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmew002
            #add-point:ON CHANGE xmew002 name="input.g.page1.xmew002"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmew003
            
            #add-point:AFTER FIELD xmew003 name="input.a.page1.xmew003"
            LET g_xmew_d[l_ac].xmew003_desc = ' '
            LET g_xmew_d[l_ac].xmew003_desc_desc = ' '
            IF NOT cl_null(g_xmew_d[l_ac].xmew003) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew_d[l_ac].xmew003 != g_xmew_d_o.xmew003 OR g_xmew_d_o.xmew003 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmew_d[l_ac].xmew003
                  IF NOT cl_chk_exist("v_imaf001_14") THEN
                     LET g_xmew_d[l_ac].xmew003 = g_xmew_d_o.xmew003
                     CALL s_desc_get_item_desc(g_xmew_d[l_ac].xmew003) RETURNING g_xmew_d[l_ac].xmew003_desc,g_xmew_d[l_ac].xmew003_desc_desc
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT s_control_check_item(g_xmew_d[l_ac].xmew003,'2',g_site,g_user,g_dept,g_xmev_m.xmevdocno) THEN
                     LET g_xmew_d[l_ac].xmew003 = g_xmew_d_o.xmew003
                     CALL s_desc_get_item_desc(g_xmew_d[l_ac].xmew003) RETURNING g_xmew_d[l_ac].xmew003_desc,g_xmew_d[l_ac].xmew003_desc_desc
                     NEXT FIELD CURRENT
                  END IF
                  #銷售單位
                  SELECT imaf112 INTO g_xmew_d[l_ac].xmew006
                    FROM imaf_t
                   WHERE imafent = g_enterprise
                     AND imafsite = g_site
                     AND imaf001 = g_xmew_d[l_ac].xmew003
                  CALL s_desc_get_unit_desc(g_xmew_d[l_ac].xmew006) RETURNING g_xmew_d[l_ac].xmew006_desc
                  CALL axmt400_get_price(g_xmew_d[l_ac].xmew003,g_xmew_d[l_ac].xmew004,g_xmew_d[l_ac].xmew006,
                                         g_xmew_d[l_ac].xmew007,g_xmew_d[l_ac].xmew008,g_xmew_d[l_ac].xmew010)
                       RETURNING g_xmew_d[l_ac].xmew012,g_xmew_d[l_ac].xmew014,g_xmew_d[l_ac].xmew015
                  LET g_xmew_d_o.xmew006 = g_xmew_d[l_ac].xmew006
                  LET g_xmew_d_o.xmew012 = g_xmew_d[l_ac].xmew012
                  LET g_xmew_d_o.xmew014 = g_xmew_d[l_ac].xmew014
                  LET g_xmew_d_o.xmew015 = g_xmew_d[l_ac].xmew015
               END IF
            END IF
            CALL s_desc_get_item_desc(g_xmew_d[l_ac].xmew003) RETURNING g_xmew_d[l_ac].xmew003_desc,g_xmew_d[l_ac].xmew003_desc_desc
            CALL axmt400_set_entry_b(l_cmd)
            CALL axmt400_set_no_entry_b(l_cmd)
            LET g_xmew_d_o.xmew003 = g_xmew_d[l_ac].xmew003
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmew003
            #add-point:BEFORE FIELD xmew003 name="input.b.page1.xmew003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmew003
            #add-point:ON CHANGE xmew003 name="input.g.page1.xmew003"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmew004
            
            #add-point:AFTER FIELD xmew004 name="input.a.page1.xmew004"
            LET g_xmew_d[l_ac].xmew004_desc = ''
            IF cl_null(g_xmew_d[l_ac].xmew004) THEN
               LET g_xmew_d[l_ac].xmew004 = ' '
            ELSE
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew_d[l_ac].xmew004 != g_xmew_d_o.xmew004 OR g_xmew_d_o.xmew004 IS NULL )) THEN
                  IF NOT s_feature_check(g_xmew_d[l_ac].xmew003,g_xmew_d[l_ac].xmew004) THEN
                     LET g_xmew_d[l_ac].xmew004 = g_xmew_d_o.xmew004
                     CALL s_feature_description(g_xmew_d[l_ac].xmew003,g_xmew_d[l_ac].xmew004) RETURNING l_success,g_xmew_d[l_ac].xmew004_desc
                     NEXT FIELD CURRENT
                  END IF
                  #151224-00025#5---dorishsu---151228---add--
                  IF NOT s_feature_direct_input(g_xmew_d[l_ac].xmew003,g_xmew_d[l_ac].xmew004,g_xmew_d_o.xmew004,g_xmev_m.xmevdocno,g_xmev_m.xmevsite) THEN
                     NEXT FIELD CURRENT
                  END IF
                  #151224-00025#5---dorishsu---151228---end--
                  CALL axmt400_get_price(g_xmew_d[l_ac].xmew003,g_xmew_d[l_ac].xmew004,g_xmew_d[l_ac].xmew006,
                                         g_xmew_d[l_ac].xmew007,g_xmew_d[l_ac].xmew008,g_xmew_d[l_ac].xmew010)
                       RETURNING g_xmew_d[l_ac].xmew012,g_xmew_d[l_ac].xmew014,g_xmew_d[l_ac].xmew015
                  LET g_xmew_d_o.xmew012 = g_xmew_d[l_ac].xmew012
                  LET g_xmew_d_o.xmew014 = g_xmew_d[l_ac].xmew014
                  LET g_xmew_d_o.xmew015 = g_xmew_d[l_ac].xmew015
               END IF
            END IF
            CALL s_feature_description(g_xmew_d[l_ac].xmew003,g_xmew_d[l_ac].xmew004) RETURNING l_success,g_xmew_d[l_ac].xmew004_desc
            LET g_xmew_d_o.xmew004 = g_xmew_d[l_ac].xmew004

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmew004
            #add-point:BEFORE FIELD xmew004 name="input.b.page1.xmew004"
            IF s_feature_auto_chk(g_xmew_d[l_ac].xmew003) THEN #160314-00009#13 add   
               IF axmt400_imaa005_exists() THEN
                  IF l_cmd = 'a' AND cl_null(g_xmew_d[l_ac].xmew004) THEN
                     CALL g_inam.clear()
                     CALL s_feature_multi(g_xmew_d[l_ac].xmew003,'','',g_site,g_xmev_m.xmevdocno) RETURNING l_success,g_inam
                     LET g_xmew_d[l_ac].xmew004 = g_inam[1].inam002
                     LET g_xmew_d[l_ac].xmew007 = g_inam[1].inam004
                     CALL axmt400_xmew015(g_xmew_d[l_ac].xmew014,g_xmew_d[l_ac].xmew007,g_xmew_d[l_ac].xmew008)
                          RETURNING g_xmew_d[l_ac].xmew015
                     IF NOT cl_null(g_xmew_d[l_ac].xmew006) AND NOT cl_null(g_xmew_d[l_ac].xmew007) THEN
                        CALL s_aooi250_take_decimals(g_xmew_d[l_ac].xmew006,g_xmew_d[l_ac].xmew007) RETURNING l_success,g_xmew_d[l_ac].xmew007
                     END IF
                     CALL s_feature_description(g_xmew_d[l_ac].xmew003,g_xmew_d[l_ac].xmew004) RETURNING l_success,g_xmew_d[l_ac].xmew004_desc
                  END IF
               END IF
            END IF   #160314-00009#13 add   
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmew004
            #add-point:ON CHANGE xmew004 name="input.g.page1.xmew004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmew005
            #add-point:BEFORE FIELD xmew005 name="input.b.page1.xmew005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmew005
            
            #add-point:AFTER FIELD xmew005 name="input.a.page1.xmew005"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmew005
            #add-point:ON CHANGE xmew005 name="input.g.page1.xmew005"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmew006
            
            #add-point:AFTER FIELD xmew006 name="input.a.page1.xmew006"
            LET g_xmew_d[l_ac].xmew006_desc = ' '
            IF NOT cl_null(g_xmew_d[l_ac].xmew006) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew_d[l_ac].xmew006 != g_xmew_d_o.xmew006 OR g_xmew_d_o.xmew006 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmew_d[l_ac].xmew003
                  LET g_chkparam.arg2 = g_xmew_d[l_ac].xmew006
                  IF NOT cl_chk_exist("v_imao002") THEN
                     LET g_xmew_d[l_ac].xmew006 = g_xmew_d_o.xmew006
                     CALL s_desc_get_unit_desc(g_xmew_d[l_ac].xmew006) RETURNING g_xmew_d[l_ac].xmew006_desc
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT cl_null(g_xmew_d[l_ac].xmew007) THEN
                     CALL s_aooi250_take_decimals(g_xmew_d[l_ac].xmew006,g_xmew_d[l_ac].xmew007)
                          RETURNING l_success,g_xmew_d[l_ac].xmew007
                  END IF
                  CALL axmt400_get_price(g_xmew_d[l_ac].xmew003,g_xmew_d[l_ac].xmew004,g_xmew_d[l_ac].xmew006,
                                         g_xmew_d[l_ac].xmew007,g_xmew_d[l_ac].xmew008,g_xmew_d[l_ac].xmew010)
                       RETURNING g_xmew_d[l_ac].xmew012,g_xmew_d[l_ac].xmew014,g_xmew_d[l_ac].xmew015
                  LET g_xmew_d_o.xmew007 = g_xmew_d[l_ac].xmew007
                  LET g_xmew_d_o.xmew012 = g_xmew_d[l_ac].xmew012
                  LET g_xmew_d_o.xmew014 = g_xmew_d[l_ac].xmew014
                  LET g_xmew_d_o.xmew015 = g_xmew_d[l_ac].xmew015
               END IF
            END IF
            CALL s_desc_get_unit_desc(g_xmew_d[l_ac].xmew006) RETURNING g_xmew_d[l_ac].xmew006_desc
            LET g_xmew_d_o.xmew006 = g_xmew_d[l_ac].xmew006

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmew006
            #add-point:BEFORE FIELD xmew006 name="input.b.page1.xmew006"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmew006
            #add-point:ON CHANGE xmew006 name="input.g.page1.xmew006"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmew007
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmew_d[l_ac].xmew007,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD xmew007
            END IF 
 
 
 
            #add-point:AFTER FIELD xmew007 name="input.a.page1.xmew007"
            IF NOT cl_null(g_xmew_d[l_ac].xmew007) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew_d[l_ac].xmew007 != g_xmew_d_o.xmew007 OR g_xmew_d_o.xmew007 IS NULL )) THEN
                  CALL axmt400_xmew015(g_xmew_d[l_ac].xmew014,g_xmew_d[l_ac].xmew007,g_xmew_d[l_ac].xmew008)
                       RETURNING g_xmew_d[l_ac].xmew015
                  IF NOT cl_null(g_xmew_d[l_ac].xmew006) THEN
                     CALL s_aooi250_take_decimals(g_xmew_d[l_ac].xmew006,g_xmew_d[l_ac].xmew007) RETURNING l_success,g_xmew_d[l_ac].xmew007
                  END IF
               END IF
            END IF
            LET g_xmew_d_o.xmew007 = g_xmew_d[l_ac].xmew007
            LET g_xmew_d_o.xmew015 = g_xmew_d[l_ac].xmew015

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmew007
            #add-point:BEFORE FIELD xmew007 name="input.b.page1.xmew007"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmew007
            #add-point:ON CHANGE xmew007 name="input.g.page1.xmew007"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmew008
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmew_d[l_ac].xmew008,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD xmew008
            END IF 
 
 
 
            #add-point:AFTER FIELD xmew008 name="input.a.page1.xmew008"
            IF NOT cl_null(g_xmew_d[l_ac].xmew008) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew_d[l_ac].xmew008 != g_xmew_d_o.xmew008 OR g_xmew_d_o.xmew008 IS NULL )) THEN
                  CALL axmt400_xmew015(g_xmew_d[l_ac].xmew014,g_xmew_d[l_ac].xmew007,g_xmew_d[l_ac].xmew008)
                       RETURNING g_xmew_d[l_ac].xmew015
               END IF
            END IF
            LET g_xmew_d_o.xmew008 = g_xmew_d[l_ac].xmew008
            LET g_xmew_d_o.xmew015 = g_xmew_d[l_ac].xmew015

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmew008
            #add-point:BEFORE FIELD xmew008 name="input.b.page1.xmew008"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmew008
            #add-point:ON CHANGE xmew008 name="input.g.page1.xmew008"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmew009
            #add-point:BEFORE FIELD xmew009 name="input.b.page1.xmew009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmew009
            
            #add-point:AFTER FIELD xmew009 name="input.a.page1.xmew009"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmew009
            #add-point:ON CHANGE xmew009 name="input.g.page1.xmew009"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmew010
            
            #add-point:AFTER FIELD xmew010 name="input.a.page1.xmew010"
            LET g_xmew_d[l_ac].xmew010_desc = ' '
            IF NOT cl_null(g_xmew_d[l_ac].xmew010) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew_d[l_ac].xmew010 != g_xmew_d_o.xmew010 OR g_xmew_d_o.xmew010 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_site
                  LET g_chkparam.arg2 = g_xmew_d[l_ac].xmew010
                  #160318-00025#4--add--str
                  LET g_errshow = TRUE 
                  LET g_chkparam.err_str[1] = "aoo-00176:sub-01302|aooi150|",cl_get_progname("aooi150",g_lang,"2"),"|:EXEPROGaooi150"
                  #160318-00025#4--add--end
                  IF NOT cl_chk_exist("v_ooaj002") THEN
                     LET g_xmew_d[l_ac].xmew010 = g_xmew_d_o.xmew010
                     CALL s_desc_get_currency_desc(g_xmew_d[l_ac].xmew010) RETURNING g_xmew_d[l_ac].xmew010_desc
                     NEXT FIELD CURRENT
                  END IF
                  #2014/12/03 by stellar modify ----- (S)
#                  CALL s_aooi160_get_exrate('1',g_site,g_today,g_xmew_d[l_ac].xmew010,g_ooef016,0,'11') RETURNING g_xmew_d[l_ac].xmew011
                  CALL axmt400_get_exrate(g_xmew_d[l_ac].xmew010)
                       RETURNING g_xmew_d[l_ac].xmew011
                  #2014/12/03 by stellar modify ----- (E)
                  #170108-00002#1---add---begin---
                  CALL axmt400_get_price(g_xmew_d[l_ac].xmew003,g_xmew_d[l_ac].xmew004,g_xmew_d[l_ac].xmew006,
                                         g_xmew_d[l_ac].xmew007,g_xmew_d[l_ac].xmew008,g_xmew_d[l_ac].xmew010)
                       RETURNING g_xmew_d[l_ac].xmew012,g_xmew_d[l_ac].xmew014,g_xmew_d[l_ac].xmew015
                  LET g_xmew_d_o.xmew012 = g_xmew_d[l_ac].xmew012
                  LET g_xmew_d_o.xmew014 = g_xmew_d[l_ac].xmew014
                  LET g_xmew_d_o.xmew015 = g_xmew_d[l_ac].xmew015
                  #170108-00002#1---add---end---
               END IF
            END IF
            CALL s_desc_get_currency_desc(g_xmew_d[l_ac].xmew010) RETURNING g_xmew_d[l_ac].xmew010_desc
            LET g_xmew_d_o.xmew010 = g_xmew_d[l_ac].xmew010
            LET g_xmew_d_o.xmew011 = g_xmew_d[l_ac].xmew011

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmew010
            #add-point:BEFORE FIELD xmew010 name="input.b.page1.xmew010"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmew010
            #add-point:ON CHANGE xmew010 name="input.g.page1.xmew010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmew011
            #add-point:BEFORE FIELD xmew011 name="input.b.page1.xmew011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmew011
            
            #add-point:AFTER FIELD xmew011 name="input.a.page1.xmew011"
            LET g_xmew_d_o.xmew011 = g_xmew_d[l_ac].xmew011

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmew011
            #add-point:ON CHANGE xmew011 name="input.g.page1.xmew011"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmew012
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmew_d[l_ac].xmew012,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD xmew012
            END IF 
 
 
 
            #add-point:AFTER FIELD xmew012 name="input.a.page1.xmew012"
            IF NOT cl_null(g_xmew_d[l_ac].xmew012) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew_d[l_ac].xmew012 != g_xmew_d_o.xmew012 OR g_xmew_d_o.xmew012 IS NULL )) THEN
                  IF NOT cl_null(g_xmew_d[l_ac].xmew010) AND g_xmev_m.xmev006 <> g_xmew_d[l_ac].xmew010 THEN
                     #依採購幣別與估價幣別之匯率計算
                     #2014/12/03 by stellar modify ----- (S)
#                     CALL s_aooi160_get_exrate('1',g_site,g_today,g_xmew_d[l_ac].xmew010,g_xmev_m.xmev006,0,'11') RETURNING l_rate
                     CALL axmt400_get_exrate(g_xmew_d[l_ac].xmew010) RETURNING l_rate
                     #2014/12/03 by stellar modify ----- (E)
                     LET g_xmew_d[l_ac].xmew014 = g_xmew_d[l_ac].xmew012 * l_rate
                  ELSE
                     LET g_xmew_d[l_ac].xmew014 = g_xmew_d[l_ac].xmew012
                  END IF
                  CALL s_curr_round(g_site,g_xmev_m.xmev006,g_xmew_d[l_ac].xmew014,'1') RETURNING g_xmew_d[l_ac].xmew014
                  CALL axmt400_xmew015(g_xmew_d[l_ac].xmew014,g_xmew_d[l_ac].xmew007,g_xmew_d[l_ac].xmew008)
                       RETURNING g_xmew_d[l_ac].xmew015
               END IF
            END IF
            LET g_xmew_d_o.xmew012 = g_xmew_d[l_ac].xmew012
            LET g_xmew_d_o.xmew014 = g_xmew_d[l_ac].xmew014
            LET g_xmew_d_o.xmew015 = g_xmew_d[l_ac].xmew015

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmew012
            #add-point:BEFORE FIELD xmew012 name="input.b.page1.xmew012"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmew012
            #add-point:ON CHANGE xmew012 name="input.g.page1.xmew012"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmew013
            
            #add-point:AFTER FIELD xmew013 name="input.a.page1.xmew013"
            LET g_xmew_d[l_ac].xmew013_desc = ' '
            IF NOT cl_null(g_xmew_d[l_ac].xmew013) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew_d[l_ac].xmew013 != g_xmew_d_t.xmew013 OR g_xmew_d_t.xmew013 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmew_d[l_ac].xmew013
                  IF NOT cl_chk_exist("v_pmaa001_1") THEN
                     LET g_xmew_d[l_ac].xmew013 = g_xmew_d_t.xmew013
                     CALL s_desc_get_trading_partner_abbr_desc(g_xmew_d[l_ac].xmew013) RETURNING g_xmew_d[l_ac].xmew013_desc
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT s_control_check_supplier(g_xmew_d[l_ac].xmew013,'2',g_site,g_user,g_dept,g_xmev_m.xmevdocno) THEN
                     LET g_xmew_d[l_ac].xmew013 = g_xmew_d_t.xmew013
                     CALL s_desc_get_trading_partner_abbr_desc(g_xmew_d[l_ac].xmew013) RETURNING g_xmew_d[l_ac].xmew013_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_trading_partner_abbr_desc(g_xmew_d[l_ac].xmew013) RETURNING g_xmew_d[l_ac].xmew013_desc

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmew013
            #add-point:BEFORE FIELD xmew013 name="input.b.page1.xmew013"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmew013
            #add-point:ON CHANGE xmew013 name="input.g.page1.xmew013"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmew014
            #add-point:BEFORE FIELD xmew014 name="input.b.page1.xmew014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmew014
            
            #add-point:AFTER FIELD xmew014 name="input.a.page1.xmew014"
            IF NOT cl_null(g_xmew_d[l_ac].xmew014) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew_d[l_ac].xmew014 != g_xmew_d_o.xmew014 OR g_xmew_d_o.xmew014 IS NULL )) THEN
                  CALL axmt400_xmew015(g_xmew_d[l_ac].xmew014,g_xmew_d[l_ac].xmew007,g_xmew_d[l_ac].xmew008)
                       RETURNING g_xmew_d[l_ac].xmew015
               END IF
            END IF
            LET g_xmew_d_o.xmew014 = g_xmew_d[l_ac].xmew014
            LET g_xmew_d_o.xmew015 = g_xmew_d[l_ac].xmew015

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmew014
            #add-point:ON CHANGE xmew014 name="input.g.page1.xmew014"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmew015
            #add-point:BEFORE FIELD xmew015 name="input.b.page1.xmew015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmew015
            
            #add-point:AFTER FIELD xmew015 name="input.a.page1.xmew015"
            LET g_xmew_d_o.xmew015 = g_xmew_d[l_ac].xmew015

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmew015
            #add-point:ON CHANGE xmew015 name="input.g.page1.xmew015"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmew016
            #add-point:BEFORE FIELD xmew016 name="input.b.page1.xmew016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmew016
            
            #add-point:AFTER FIELD xmew016 name="input.a.page1.xmew016"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmew016
            #add-point:ON CHANGE xmew016 name="input.g.page1.xmew016"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD ooff013
            #add-point:BEFORE FIELD ooff013 name="input.b.page1.ooff013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD ooff013
            
            #add-point:AFTER FIELD ooff013 name="input.a.page1.ooff013"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE ooff013
            #add-point:ON CHANGE ooff013 name="input.g.page1.ooff013"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.xmewsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmewsite
            #add-point:ON ACTION controlp INFIELD xmewsite name="input.c.page1.xmewsite"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmewseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmewseq
            #add-point:ON ACTION controlp INFIELD xmewseq name="input.c.page1.xmewseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmew001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmew001
            #add-point:ON ACTION controlp INFIELD xmew001 name="input.c.page1.xmew001"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmew_d[l_ac].xmew001  #給予default值
            LET g_qryparam.arg1 = '215'
            CALL q_oocq002_5()                                #呼叫開窗
            LET g_xmew_d[l_ac].xmew001 = g_qryparam.return1              
            DISPLAY g_xmew_d[l_ac].xmew001 TO xmew001
            CALL s_desc_get_acc_desc('215',g_xmew_d[l_ac].xmew001) RETURNING g_xmew_d[l_ac].xmew001_desc
            NEXT FIELD xmew001                                #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.page1.xmew002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmew002
            #add-point:ON ACTION controlp INFIELD xmew002 name="input.c.page1.xmew002"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmew_d[l_ac].xmew002   #給予default值
            LET g_qryparam.arg1 = '221'
            CALL q_oocq002()                                   #呼叫開窗
            LET g_xmew_d[l_ac].xmew002 = g_qryparam.return1              
            DISPLAY g_xmew_d[l_ac].xmew002 TO xmew002
            CALL s_desc_get_acc_desc('221',g_xmew_d[l_ac].xmew002) RETURNING g_xmew_d[l_ac].xmew002_desc
            NEXT FIELD xmew002                                 #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.page1.xmew003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmew003
            #add-point:ON ACTION controlp INFIELD xmew003 name="input.c.page1.xmew003"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmew_d[l_ac].xmew003  #給予default值
            LET g_qryparam.where = "1=1 "
            CALL s_control_get_item_sql('2',g_site,g_user,g_dept,g_xmev_m.xmevdocno) RETURNING l_success,l_where
            IF l_success THEN
               LET g_qryparam.where = g_qryparam.where ," AND ",l_where
            END IF
            CALL q_imaf001_15()                               #呼叫開窗
            LET g_xmew_d[l_ac].xmew003 = g_qryparam.return1              
            DISPLAY g_xmew_d[l_ac].xmew003 TO xmew003
            CALL s_desc_get_item_desc(g_xmew_d[l_ac].xmew003) RETURNING g_xmew_d[l_ac].xmew003_desc,g_xmew_d[l_ac].xmew003_desc_desc
            NEXT FIELD xmew003                                #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.page1.xmew004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmew004
            #add-point:ON ACTION controlp INFIELD xmew004 name="input.c.page1.xmew004"
            IF axmt400_imaa005_exists() THEN
         #      IF l_cmd = 'u' OR (l_cmd = 'a' AND NOT cl_null(g_xmew_d[l_ac].xmew004)) THEN   #160314-00009#13 mark
                  CALL s_feature_single(g_xmew_d[l_ac].xmew003,g_xmew_d[l_ac].xmew004,g_site,g_xmev_m.xmevdocno) RETURNING l_success,g_xmew_d[l_ac].xmew004
               END IF
          #  END IF  #160314-00009#13 mark
            CALL s_feature_description(g_xmew_d[l_ac].xmew003,g_xmew_d[l_ac].xmew004) RETURNING l_success,g_xmew_d[l_ac].xmew004_desc
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmew005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmew005
            #add-point:ON ACTION controlp INFIELD xmew005 name="input.c.page1.xmew005"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmew006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmew006
            #add-point:ON ACTION controlp INFIELD xmew006 name="input.c.page1.xmew006"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmew_d[l_ac].xmew006  #給予default值
            LET g_qryparam.arg1 = g_xmew_d[l_ac].xmew003
            CALL q_imao002()                                  #呼叫開窗
            LET g_xmew_d[l_ac].xmew006 = g_qryparam.return1              
            DISPLAY g_xmew_d[l_ac].xmew006 TO xmew006
            CALL s_desc_get_unit_desc(g_xmew_d[l_ac].xmew006) RETURNING g_xmew_d[l_ac].xmew006_desc
            NEXT FIELD xmew006                                #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.page1.xmew007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmew007
            #add-point:ON ACTION controlp INFIELD xmew007 name="input.c.page1.xmew007"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmew008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmew008
            #add-point:ON ACTION controlp INFIELD xmew008 name="input.c.page1.xmew008"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmew009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmew009
            #add-point:ON ACTION controlp INFIELD xmew009 name="input.c.page1.xmew009"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmew010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmew010
            #add-point:ON ACTION controlp INFIELD xmew010 name="input.c.page1.xmew010"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmew_d[l_ac].xmew010  #給予default值
            LET g_qryparam.arg1 = g_site
            CALL q_ooaj002_1()                                #呼叫開窗
            LET g_xmew_d[l_ac].xmew010 = g_qryparam.return1              
            DISPLAY g_xmew_d[l_ac].xmew010 TO xmew010
            CALL s_desc_get_currency_desc(g_xmew_d[l_ac].xmew010) RETURNING g_xmew_d[l_ac].xmew010_desc
            NEXT FIELD xmew010                                #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.page1.xmew011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmew011
            #add-point:ON ACTION controlp INFIELD xmew011 name="input.c.page1.xmew011"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmew012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmew012
            #add-point:ON ACTION controlp INFIELD xmew012 name="input.c.page1.xmew012"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmew013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmew013
            #add-point:ON ACTION controlp INFIELD xmew013 name="input.c.page1.xmew013"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmew_d[l_ac].xmew013  #給予default值
            LET g_qryparam.where = "1=1 "
            CALL s_control_get_supplier_sql('2',g_site,g_user,g_dept,g_xmev_m.xmevdocno) RETURNING l_success,l_where
            IF l_success THEN
               LET g_qryparam.where = g_qryparam.where ," AND ",l_where
            END IF
            CALL q_pmaa001_3()                                #呼叫開窗
            LET g_xmew_d[l_ac].xmew013 = g_qryparam.return1              
            DISPLAY g_xmew_d[l_ac].xmew013 TO xmew013
            CALL s_desc_get_trading_partner_abbr_desc(g_xmew_d[l_ac].xmew013) RETURNING g_xmew_d[l_ac].xmew013_desc
            NEXT FIELD xmew013                                #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.page1.xmew014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmew014
            #add-point:ON ACTION controlp INFIELD xmew014 name="input.c.page1.xmew014"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmew015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmew015
            #add-point:ON ACTION controlp INFIELD xmew015 name="input.c.page1.xmew015"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmew016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmew016
            #add-point:ON ACTION controlp INFIELD xmew016 name="input.c.page1.xmew016"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.ooff013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD ooff013
            #add-point:ON ACTION controlp INFIELD ooff013 name="input.c.page1.ooff013"
            
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_xmew_d[l_ac].* = g_xmew_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE axmt400_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_xmew_d[l_ac].xmewseq 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_xmew_d[l_ac].* = g_xmew_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL axmt400_xmew_t_mask_restore('restore_mask_o')
      
               UPDATE xmew_t SET (xmewdocno,xmewsite,xmewseq,xmew001,xmew002,xmew003,xmew004,xmew005, 
                   xmew006,xmew007,xmew008,xmew009,xmew010,xmew011,xmew012,xmew013,xmew014,xmew015,xmew016) = (g_xmev_m.xmevdocno, 
                   g_xmew_d[l_ac].xmewsite,g_xmew_d[l_ac].xmewseq,g_xmew_d[l_ac].xmew001,g_xmew_d[l_ac].xmew002, 
                   g_xmew_d[l_ac].xmew003,g_xmew_d[l_ac].xmew004,g_xmew_d[l_ac].xmew005,g_xmew_d[l_ac].xmew006, 
                   g_xmew_d[l_ac].xmew007,g_xmew_d[l_ac].xmew008,g_xmew_d[l_ac].xmew009,g_xmew_d[l_ac].xmew010, 
                   g_xmew_d[l_ac].xmew011,g_xmew_d[l_ac].xmew012,g_xmew_d[l_ac].xmew013,g_xmew_d[l_ac].xmew014, 
                   g_xmew_d[l_ac].xmew015,g_xmew_d[l_ac].xmew016)
                WHERE xmewent = g_enterprise AND xmewdocno = g_xmev_m.xmevdocno 
 
                  AND xmewseq = g_xmew_d_t.xmewseq #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_xmew_d[l_ac].* = g_xmew_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmew_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_xmew_d[l_ac].* = g_xmew_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmew_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmev_m.xmevdocno
               LET gs_keys_bak[1] = g_xmevdocno_t
               LET gs_keys[2] = g_xmew_d[g_detail_idx].xmewseq
               LET gs_keys_bak[2] = g_xmew_d_t.xmewseq
               CALL axmt400_update_b('xmew_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL axmt400_xmew_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_xmew_d[g_detail_idx].xmewseq = g_xmew_d_t.xmewseq 
 
                  ) THEN
                  LET gs_keys[01] = g_xmev_m.xmevdocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_xmew_d_t.xmewseq
 
                  CALL axmt400_key_update_b(gs_keys,'xmew_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_xmev_m),util.JSON.stringify(g_xmew_d_t)
               LET g_log2 = util.JSON.stringify(g_xmev_m),util.JSON.stringify(g_xmew_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
              #161031-00025#18-s
               CALL s_aooi360_del('7',g_prog,g_xmev_m.xmevdocno,g_xmew_d_t.xmewseq,'','','','','','','','1') RETURNING l_success
               IF NOT cl_null(g_xmew_d[l_ac].ooff013) THEN
                  CALL s_aooi360_gen('7',g_prog,g_xmev_m.xmevdocno,g_xmew_d[l_ac].xmewseq,'','','','','','','','1',g_xmew_d[l_ac].ooff013) RETURNING l_success
               END IF
              #161031-00025#18-e
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            CALL axmt400_amount()
            #end add-point
            CALL axmt400_unlock_b("xmew_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
 
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_xmew_d[li_reproduce_target].* = g_xmew_d[li_reproduce].*
 
               LET g_xmew_d[li_reproduce_target].xmewseq = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_xmew_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_xmew_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_xmew2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body2.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xmew2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axmt400_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_xmew2_d.getLength()
            #add-point:資料輸入前 name="input.body2.before_input"
            
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmew2_d[l_ac].* TO NULL 
            INITIALIZE g_xmew2_d_t.* TO NULL 
            INITIALIZE g_xmew2_d_o.* TO NULL 
            #公用欄位給值(單身2)
            
            #自定義預設值(單身2)
                  LET g_xmew2_d[l_ac].xmex007 = "0"
      LET g_xmew2_d[l_ac].xmex008 = "0"
      LET g_xmew2_d[l_ac].xmex009 = "1"
      LET g_xmew2_d[l_ac].xmex010 = "0"
      LET g_xmew2_d[l_ac].xmex011 = "0"
      LET g_xmew2_d[l_ac].xmex012 = "0"
      LET g_xmew2_d[l_ac].xmex013 = "0"
 
            #add-point:modify段before備份 name="input.body2.insert.before_bak"
            
            #end add-point
            LET g_xmew2_d_t.* = g_xmew2_d[l_ac].*     #新輸入資料
            LET g_xmew2_d_o.* = g_xmew2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axmt400_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body2.insert.after_set_entry_b"

            #製程項次
            SELECT MAX(xmexseq)+1 INTO g_xmew2_d[l_ac].xmexseq
              FROM xmex_t
             WHERE xmexent = g_enterprise
               AND xmexdocno = g_xmev_m.xmevdocno
            IF cl_null(g_xmew2_d[l_ac].xmexseq) OR g_xmew2_d[l_ac].xmexseq = 0 THEN
               LET g_xmew2_d[l_ac].xmexseq = 1
            END IF
            
            LET g_xmew2_d[l_ac].xmexsite = g_site
            LET g_xmew2_d_t.* = g_xmew2_d[l_ac].*
            LET g_xmew2_d_o.* = g_xmew2_d[l_ac].*

            #end add-point
            CALL axmt400_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmew2_d[li_reproduce_target].* = g_xmew2_d[li_reproduce].*
 
               LET g_xmew2_d[li_reproduce_target].xmexseq = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body2.before_insert"
            
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body2.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[2] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 2
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN axmt400_cl USING g_enterprise,g_xmev_m.xmevdocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axmt400_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE axmt400_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_xmew2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xmew2_d[l_ac].xmexseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_xmew2_d_t.* = g_xmew2_d[l_ac].*  #BACKUP
               LET g_xmew2_d_o.* = g_xmew2_d[l_ac].*  #BACKUP
               CALL axmt400_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body2.after_set_entry_b"
               
               #end add-point  
               CALL axmt400_set_no_entry_b(l_cmd)
               IF NOT axmt400_lock_b("xmex_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axmt400_bcl2 INTO g_xmew2_d[l_ac].xmexsite,g_xmew2_d[l_ac].xmexseq,g_xmew2_d[l_ac].xmex001, 
                      g_xmew2_d[l_ac].xmex002,g_xmew2_d[l_ac].xmex003,g_xmew2_d[l_ac].xmex004,g_xmew2_d[l_ac].xmex005, 
                      g_xmew2_d[l_ac].xmex006,g_xmew2_d[l_ac].xmex007,g_xmew2_d[l_ac].xmex008,g_xmew2_d[l_ac].xmex009, 
                      g_xmew2_d[l_ac].xmex010,g_xmew2_d[l_ac].xmex011,g_xmew2_d[l_ac].xmex012,g_xmew2_d[l_ac].xmex013, 
                      g_xmew2_d[l_ac].xmex014
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_xmew2_d_mask_o[l_ac].* =  g_xmew2_d[l_ac].*
                  CALL axmt400_xmex_t_mask()
                  LET g_xmew2_d_mask_n[l_ac].* =  g_xmew2_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL axmt400_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body2.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body2.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body2.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前 name="input.body2.b_delete"
               
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_xmev_m.xmevdocno
               LET gs_keys[gs_keys.getLength()+1] = g_xmew2_d_t.xmexseq
            
               #刪除同層單身
               IF NOT axmt400_delete_b('xmex_t',gs_keys,"'2'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt400_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT axmt400_key_delete_b(gs_keys,'xmex_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt400_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身2刪除中 name="input.body2.m_delete"
               
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE axmt400_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身2刪除後 name="input.body2.a_delete"
               
               #end add-point
               LET l_count = g_xmew_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body2.after_delete"
               
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_xmew2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前 name="input.body2.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM xmex_t 
             WHERE xmexent = g_enterprise AND xmexdocno = g_xmev_m.xmevdocno
               AND xmexseq = g_xmew2_d[l_ac].xmexseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前 name="input.body2.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmev_m.xmevdocno
               LET gs_keys[2] = g_xmew2_d[g_detail_idx].xmexseq
               CALL axmt400_insert_b('xmex_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2 name="input.body2.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_xmew_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmex_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axmt400_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body2.after_insert"
 
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_xmew2_d[l_ac].* = g_xmew2_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE axmt400_bcl2
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_xmew2_d[l_ac].* = g_xmew2_d_t.*
            ELSE
               #add-point:單身page2修改前 name="input.body2.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               #將遮罩欄位還原
               CALL axmt400_xmex_t_mask_restore('restore_mask_o')
                              
               UPDATE xmex_t SET (xmexdocno,xmexsite,xmexseq,xmex001,xmex002,xmex003,xmex004,xmex005, 
                   xmex006,xmex007,xmex008,xmex009,xmex010,xmex011,xmex012,xmex013,xmex014) = (g_xmev_m.xmevdocno, 
                   g_xmew2_d[l_ac].xmexsite,g_xmew2_d[l_ac].xmexseq,g_xmew2_d[l_ac].xmex001,g_xmew2_d[l_ac].xmex002, 
                   g_xmew2_d[l_ac].xmex003,g_xmew2_d[l_ac].xmex004,g_xmew2_d[l_ac].xmex005,g_xmew2_d[l_ac].xmex006, 
                   g_xmew2_d[l_ac].xmex007,g_xmew2_d[l_ac].xmex008,g_xmew2_d[l_ac].xmex009,g_xmew2_d[l_ac].xmex010, 
                   g_xmew2_d[l_ac].xmex011,g_xmew2_d[l_ac].xmex012,g_xmew2_d[l_ac].xmex013,g_xmew2_d[l_ac].xmex014)  
                   #自訂欄位頁簽
                WHERE xmexent = g_enterprise AND xmexdocno = g_xmev_m.xmevdocno
                  AND xmexseq = g_xmew2_d_t.xmexseq #項次 
                  
               #add-point:單身page2修改中 name="input.body2.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_xmew2_d[l_ac].* = g_xmew2_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmex_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_xmew2_d[l_ac].* = g_xmew2_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmex_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmev_m.xmevdocno
               LET gs_keys_bak[1] = g_xmevdocno_t
               LET gs_keys[2] = g_xmew2_d[g_detail_idx].xmexseq
               LET gs_keys_bak[2] = g_xmew2_d_t.xmexseq
               CALL axmt400_update_b('xmex_t',gs_keys,gs_keys_bak,"'2'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL axmt400_xmex_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_xmew2_d[g_detail_idx].xmexseq = g_xmew2_d_t.xmexseq 
                  ) THEN
                  LET gs_keys[01] = g_xmev_m.xmevdocno
                  LET gs_keys[gs_keys.getLength()+1] = g_xmew2_d_t.xmexseq
                  CALL axmt400_key_update_b(gs_keys,'xmex_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_xmev_m),util.JSON.stringify(g_xmew2_d_t)
               LET g_log2 = util.JSON.stringify(g_xmev_m),util.JSON.stringify(g_xmew2_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後 name="input.body2.a_update"
 
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmexsite
            #add-point:BEFORE FIELD xmexsite name="input.b.page2.xmexsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmexsite
            
            #add-point:AFTER FIELD xmexsite name="input.a.page2.xmexsite"
            #此段落由子樣板a05產生
            IF  g_xmev_m.xmevdocno IS NOT NULL AND g_xmew2_d[g_detail_idx].xmexsite IS NOT NULL AND g_xmew2_d[g_detail_idx].xmexseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmev_m.xmevdocno != g_xmevdocno_t OR g_xmew2_d[g_detail_idx].xmexsite != g_xmew2_d_t.xmexsite OR g_xmew2_d[g_detail_idx].xmexseq != g_xmew2_d_t.xmexseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmex_t WHERE "||"xmexent = '" ||g_enterprise|| "' AND "||"xmexdocno = '"||g_xmev_m.xmevdocno ||"' AND "|| "xmexsite = '"||g_xmew2_d[g_detail_idx].xmexsite ||"' AND "|| "xmexseq = '"||g_xmew2_d[g_detail_idx].xmexseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmexsite
            #add-point:ON CHANGE xmexsite name="input.g.page2.xmexsite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmexseq
            #add-point:BEFORE FIELD xmexseq name="input.b.page2.xmexseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmexseq
            
            #add-point:AFTER FIELD xmexseq name="input.a.page2.xmexseq"
            #此段落由子樣板a05產生
            IF  g_xmev_m.xmevdocno IS NOT NULL AND g_xmew2_d[g_detail_idx].xmexsite IS NOT NULL AND g_xmew2_d[g_detail_idx].xmexseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmev_m.xmevdocno != g_xmevdocno_t OR g_xmew2_d[g_detail_idx].xmexsite != g_xmew2_d_t.xmexsite OR g_xmew2_d[g_detail_idx].xmexseq != g_xmew2_d_t.xmexseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmex_t WHERE "||"xmexent = '" ||g_enterprise|| "' AND "||"xmexdocno = '"||g_xmev_m.xmevdocno ||"' AND "|| "xmexsite = '"||g_xmew2_d[g_detail_idx].xmexsite ||"' AND "|| "xmexseq = '"||g_xmew2_d[g_detail_idx].xmexseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmexseq
            #add-point:ON CHANGE xmexseq name="input.g.page2.xmexseq"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmex001
            
            #add-point:AFTER FIELD xmex001 name="input.a.page2.xmex001"
            LET g_xmew2_d[l_ac].xmex001_desc = ' '
            IF NOT cl_null(g_xmew2_d[l_ac].xmex001) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew2_d[l_ac].xmex001 != g_xmew2_d_t.xmex001 OR g_xmew2_d_t.xmex001 IS NULL )) THEN
                  IF NOT s_azzi650_chk_exist('215',g_xmew2_d[l_ac].xmex001) THEN
                     LET g_xmew2_d[l_ac].xmex001 = g_xmew2_d_t.xmex001
                     CALL s_desc_get_acc_desc('215',g_xmew2_d[l_ac].xmex001) RETURNING g_xmew2_d[l_ac].xmex001_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_acc_desc('215',g_xmew2_d[l_ac].xmex001) RETURNING g_xmew2_d[l_ac].xmex001_desc

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmex001
            #add-point:BEFORE FIELD xmex001 name="input.b.page2.xmex001"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmex001
            #add-point:ON CHANGE xmex001 name="input.g.page2.xmex001"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmex002
            
            #add-point:AFTER FIELD xmex002 name="input.a.page2.xmex002"
            LET g_xmew2_d[l_ac].xmex002_desc = ' '
            LET g_xmew2_d[l_ac].xmex002_desc_desc = ' '
            IF NOT cl_null(g_xmew2_d[l_ac].xmex002) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew2_d[l_ac].xmex002 != g_xmew2_d_t.xmex002 OR g_xmew2_d_t.xmex002 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmew2_d[l_ac].xmex002
                  IF NOT cl_chk_exist("v_imaf001_14") THEN
                     LET g_xmew2_d[l_ac].xmex002 = g_xmew2_d_t.xmex002
                     CALL s_desc_get_item_desc(g_xmew2_d[l_ac].xmex002) RETURNING g_xmew2_d[l_ac].xmex002_desc,g_xmew2_d[l_ac].xmex002_desc_desc
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT s_control_check_item(g_xmew2_d[l_ac].xmex002,'2',g_site,g_user,g_dept,g_xmev_m.xmevdocno) THEN
                     LET g_xmew2_d[l_ac].xmex002 = g_xmew2_d_t.xmex002
                     CALL s_desc_get_item_desc(g_xmew2_d[l_ac].xmex002) RETURNING g_xmew2_d[l_ac].xmex002_desc,g_xmew2_d[l_ac].xmex002_desc_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_item_desc(g_xmew2_d[l_ac].xmex002) RETURNING g_xmew2_d[l_ac].xmex002_desc,g_xmew2_d[l_ac].xmex002_desc_desc

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmex002
            #add-point:BEFORE FIELD xmex002 name="input.b.page2.xmex002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmex002
            #add-point:ON CHANGE xmex002 name="input.g.page2.xmex002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmex003
            #add-point:BEFORE FIELD xmex003 name="input.b.page2.xmex003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmex003
            
            #add-point:AFTER FIELD xmex003 name="input.a.page2.xmex003"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmex003
            #add-point:ON CHANGE xmex003 name="input.g.page2.xmex003"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmex004
            
            #add-point:AFTER FIELD xmex004 name="input.a.page2.xmex004"
            LET g_xmew2_d[l_ac].xmex004_desc = ' '
            IF NOT cl_null(g_xmew2_d[l_ac].xmex004) THEN 
               #IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew2_d[l_ac].xmex004 != g_xmew2_d_t.xmex004 OR g_xmew2_d_t.xmex004 IS NULL )) THEN   #160824-00007#212 by sakura mark
               IF g_xmew2_d[l_ac].xmex004 != g_xmew2_d_o.xmex004 OR cl_null(g_xmew2_d_o.xmex004) THEN   #160824-00007#212 by sakura add
                  IF NOT s_azzi650_chk_exist('221',g_xmew2_d[l_ac].xmex004) THEN
                     #LET g_xmew2_d[l_ac].xmex004 = g_xmew2_d_t.xmex004  #160824-00007#212 by sakura mark
                     LET g_xmew2_d[l_ac].xmex004 = g_xmew2_d_o.xmex004   #160824-00007#212 by sakura add
                     CALL s_desc_get_acc_desc('221',g_xmew2_d[l_ac].xmex004) RETURNING g_xmew2_d[l_ac].xmex004_desc
                     NEXT FIELD CURRENT
                  END IF
                  CALL axmt400_axmi390_default()
               END IF
            END IF
            LET g_xmew2_d_o.* = g_xmew2_d[l_ac].*   #160824-00007#212 by sakura add
            CALL s_desc_get_acc_desc('221',g_xmew2_d[l_ac].xmex004) RETURNING g_xmew2_d[l_ac].xmex004_desc

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmex004
            #add-point:BEFORE FIELD xmex004 name="input.b.page2.xmex004"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmex004
            #add-point:ON CHANGE xmex004 name="input.g.page2.xmex004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmex005
            #add-point:BEFORE FIELD xmex005 name="input.b.page2.xmex005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmex005
            
            #add-point:AFTER FIELD xmex005 name="input.a.page2.xmex005"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmex005
            #add-point:ON CHANGE xmex005 name="input.g.page2.xmex005"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmex006
            
            #add-point:AFTER FIELD xmex006 name="input.a.page2.xmex006"
            LET g_xmew2_d[l_ac].xmex006_desc = ' '
            IF NOT cl_null(g_xmew2_d[l_ac].xmex006) THEN 
               #IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew2_d[l_ac].xmex006 != g_xmew2_d_o.xmex006 OR g_xmew2_d_o.xmex006 IS NULL )) THEN   #160824-00007#212 by sakura mark
               IF g_xmew2_d[l_ac].xmex006 != g_xmew2_d_o.xmex006 OR cl_null(g_xmew2_d_o.xmex006) THEN   #160824-00007#212 by sakura add
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmew2_d[l_ac].xmex006
                  #160318-00025#3--add--str
                  LET g_errshow = TRUE 
                  LET g_chkparam.err_str[1] = "aec-00010:sub-01302|aeci001|",cl_get_progname("aeci001",g_lang,"2"),"|:EXEPROGaeci001"
                  #160318-00025#3--add--end
                  IF NOT cl_chk_exist("v_ecaa001_1") THEN
                     LET g_xmew2_d[l_ac].xmex006 = g_xmew2_d_o.xmex006
                     CALL axmt400_xmex006_ref()
                     NEXT FIELD CURRENT
                  END IF
                  CALL axmt400_axmi390_default()
               END IF
            END IF
            LET g_xmew2_d_o.* = g_xmew2_d[l_ac].*   #160824-00007#212 by sakura add 
            CALL axmt400_xmex006_ref()
            LET g_xmew2_d_o.xmex006 = g_xmew2_d[l_ac].xmex006

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmex006
            #add-point:BEFORE FIELD xmex006 name="input.b.page2.xmex006"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmex006
            #add-point:ON CHANGE xmex006 name="input.g.page2.xmex006"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmex007
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmew2_d[l_ac].xmex007,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD xmex007
            END IF 
 
 
 
            #add-point:AFTER FIELD xmex007 name="input.a.page2.xmex007"
            IF NOT cl_null(g_xmew2_d[l_ac].xmex007) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew2_d[l_ac].xmex007 != g_xmew2_d_o.xmex007 OR g_xmew2_d_o.xmex007 IS NULL )) THEN
                  CALL axmt400_xmex012()
               END IF
            END IF
            LET g_xmew2_d_o.xmex007 = g_xmew2_d[l_ac].xmex007
            LET g_xmew2_d_o.xmex012 = g_xmew2_d[l_ac].xmex012

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmex007
            #add-point:BEFORE FIELD xmex007 name="input.b.page2.xmex007"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmex007
            #add-point:ON CHANGE xmex007 name="input.g.page2.xmex007"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmex008
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmew2_d[l_ac].xmex008,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD xmex008
            END IF 
 
 
 
            #add-point:AFTER FIELD xmex008 name="input.a.page2.xmex008"
            IF NOT cl_null(g_xmew2_d[l_ac].xmex008) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew2_d[l_ac].xmex008 != g_xmew2_d_o.xmex008 OR g_xmew2_d_o.xmex008 IS NULL )) THEN
                  CALL axmt400_xmex013()
               END IF
            END IF
            LET g_xmew2_d_o.xmex008 = g_xmew2_d[l_ac].xmex008
            LET g_xmew2_d_o.xmex013 = g_xmew2_d[l_ac].xmex013

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmex008
            #add-point:BEFORE FIELD xmex008 name="input.b.page2.xmex008"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmex008
            #add-point:ON CHANGE xmex008 name="input.g.page2.xmex008"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmex009
            #add-point:BEFORE FIELD xmex009 name="input.b.page2.xmex009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmex009
            
            #add-point:AFTER FIELD xmex009 name="input.a.page2.xmex009"
            IF NOT cl_null(g_xmew2_d[l_ac].xmex009) THEN 
#160902-00002#1-s mod
#              IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew2_d[l_ac].xmex009 != g_xmew2_d_t.xmex009 OR g_xmew2_d_t.xmex009 IS NULL )) THEN
               #IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew2_d[l_ac].xmex009 != g_xmew2_d_o.xmex009 OR g_xmew2_d_o.xmex009 IS NULL )) THEN   #160824-00007#212 by sakura mark
               IF g_xmew2_d[l_ac].xmex009 != g_xmew2_d_o.xmex009 OR cl_null(g_xmew2_d_o.xmex009) THEN    #160824-00007#212 by sakura add
#160902-00002#1-e mod
                  CALL axmt400_axmi390_default()
               END IF
            END IF
            #LET g_xmew2_d_o.xmex009 = g_xmew2_d[l_ac].xmex009   #160824-00007#212 by sakura mark
            LET g_xmew2_d_o.* = g_xmew2_d[l_ac].*               #160824-00007#212 by sakura add

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmex009
            #add-point:ON CHANGE xmex009 name="input.g.page2.xmex009"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmex010
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmew2_d[l_ac].xmex010,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD xmex010
            END IF 
 
 
 
            #add-point:AFTER FIELD xmex010 name="input.a.page2.xmex010"
            IF NOT cl_null(g_xmew2_d[l_ac].xmex010) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew2_d[l_ac].xmex010 != g_xmew2_d_o.xmex010 OR g_xmew2_d_o.xmex010 IS NULL )) THEN
                  CALL axmt400_xmex012()
               END IF
            END IF
            LET g_xmew2_d_o.xmex010 = g_xmew2_d[l_ac].xmex010
            LET g_xmew2_d_o.xmex012 = g_xmew2_d[l_ac].xmex012

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmex010
            #add-point:BEFORE FIELD xmex010 name="input.b.page2.xmex010"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmex010
            #add-point:ON CHANGE xmex010 name="input.g.page2.xmex010"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmex011
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmew2_d[l_ac].xmex011,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD xmex011
            END IF 
 
 
 
            #add-point:AFTER FIELD xmex011 name="input.a.page2.xmex011"
            IF NOT cl_null(g_xmew2_d[l_ac].xmex011) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew2_d[l_ac].xmex011 != g_xmew2_d_o.xmex011 OR g_xmew2_d_o.xmex011 IS NULL )) THEN
                  CALL axmt400_xmex013()
               END IF
            END IF
            LET g_xmew2_d_o.xmex011 = g_xmew2_d[l_ac].xmex011
            LET g_xmew2_d_o.xmex013 = g_xmew2_d[l_ac].xmex013

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmex011
            #add-point:BEFORE FIELD xmex011 name="input.b.page2.xmex011"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmex011
            #add-point:ON CHANGE xmex011 name="input.g.page2.xmex011"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmex012
            #add-point:BEFORE FIELD xmex012 name="input.b.page2.xmex012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmex012
            
            #add-point:AFTER FIELD xmex012 name="input.a.page2.xmex012"
 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmex012
            #add-point:ON CHANGE xmex012 name="input.g.page2.xmex012"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmex013
            #add-point:BEFORE FIELD xmex013 name="input.b.page2.xmex013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmex013
            
            #add-point:AFTER FIELD xmex013 name="input.a.page2.xmex013"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmex013
            #add-point:ON CHANGE xmex013 name="input.g.page2.xmex013"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmex014
            #add-point:BEFORE FIELD xmex014 name="input.b.page2.xmex014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmex014
            
            #add-point:AFTER FIELD xmex014 name="input.a.page2.xmex014"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmex014
            #add-point:ON CHANGE xmex014 name="input.g.page2.xmex014"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page2.xmexsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmexsite
            #add-point:ON ACTION controlp INFIELD xmexsite name="input.c.page2.xmexsite"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.xmexseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmexseq
            #add-point:ON ACTION controlp INFIELD xmexseq name="input.c.page2.xmexseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.xmex001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmex001
            #add-point:ON ACTION controlp INFIELD xmex001 name="input.c.page2.xmex001"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmew2_d[l_ac].xmex001 #給予default值
            LET g_qryparam.arg1 = "215"
            CALL q_oocq002_5()                                #呼叫開窗
            LET g_xmew2_d[l_ac].xmex001 = g_qryparam.return1              
            DISPLAY g_xmew2_d[l_ac].xmex001 TO xmex001
            CALL s_desc_get_acc_desc('215',g_xmew2_d[l_ac].xmex001) RETURNING g_xmew2_d[l_ac].xmex001_desc
            NEXT FIELD xmex001                                #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.page2.xmex002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmex002
            #add-point:ON ACTION controlp INFIELD xmex002 name="input.c.page2.xmex002"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmew2_d[l_ac].xmex002  #給予default值
            LET g_qryparam.where = "1=1 "
            CALL s_control_get_item_sql('2',g_site,g_user,g_dept,g_xmev_m.xmevdocno) RETURNING l_success,l_where
            IF l_success THEN
               LET g_qryparam.where = g_qryparam.where ," AND ",l_where
            END IF
            CALL q_imaf001_15()                                #呼叫開窗
            LET g_xmew2_d[l_ac].xmex002 = g_qryparam.return1              
            DISPLAY g_xmew2_d[l_ac].xmex002 TO xmex002
            CALL s_desc_get_item_desc(g_xmew2_d[l_ac].xmex002) RETURNING g_xmew2_d[l_ac].xmex002_desc,g_xmew2_d[l_ac].xmex002_desc_desc
            NEXT FIELD xmex002                                 #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.page2.xmex003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmex003
            #add-point:ON ACTION controlp INFIELD xmex003 name="input.c.page2.xmex003"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.xmex004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmex004
            #add-point:ON ACTION controlp INFIELD xmex004 name="input.c.page2.xmex004"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmew2_d[l_ac].xmex004  #給予default值
            LET g_qryparam.arg1 = '221'
            CALL q_oocq002()                                   #呼叫開窗
            LET g_xmew2_d[l_ac].xmex004 = g_qryparam.return1              
            DISPLAY g_xmew2_d[l_ac].xmex004 TO xmex004
            CALL s_desc_get_acc_desc('221',g_xmew2_d[l_ac].xmex004) RETURNING g_xmew2_d[l_ac].xmex004_desc
            NEXT FIELD xmex004                                 #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.page2.xmex005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmex005
            #add-point:ON ACTION controlp INFIELD xmex005 name="input.c.page2.xmex005"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.xmex006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmex006
            #add-point:ON ACTION controlp INFIELD xmex006 name="input.c.page2.xmex006"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmew2_d[l_ac].xmex006  #給予default值
            CALL q_ecaa001_1()                                 #呼叫開窗
            LET g_xmew2_d[l_ac].xmex006 = g_qryparam.return1              
            DISPLAY g_xmew2_d[l_ac].xmex006 TO xmex006
            CALL axmt400_xmex006_ref()
            NEXT FIELD xmex006                                 #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.page2.xmex007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmex007
            #add-point:ON ACTION controlp INFIELD xmex007 name="input.c.page2.xmex007"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.xmex008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmex008
            #add-point:ON ACTION controlp INFIELD xmex008 name="input.c.page2.xmex008"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.xmex009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmex009
            #add-point:ON ACTION controlp INFIELD xmex009 name="input.c.page2.xmex009"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.xmex010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmex010
            #add-point:ON ACTION controlp INFIELD xmex010 name="input.c.page2.xmex010"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.xmex011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmex011
            #add-point:ON ACTION controlp INFIELD xmex011 name="input.c.page2.xmex011"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.xmex012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmex012
            #add-point:ON ACTION controlp INFIELD xmex012 name="input.c.page2.xmex012"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.xmex013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmex013
            #add-point:ON ACTION controlp INFIELD xmex013 name="input.c.page2.xmex013"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.xmex014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmex014
            #add-point:ON ACTION controlp INFIELD xmex014 name="input.c.page2.xmex014"
            
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row name="input.body2.after_row"
            CALL axmt400_amount()
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_xmew2_d[l_ac].* = g_xmew2_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE axmt400_bcl2
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL axmt400_unlock_b("xmex_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2 name="input.body2.after_row2"
 
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body2.after_input"
            
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_xmew2_d[li_reproduce_target].* = g_xmew2_d[li_reproduce].*
 
               LET g_xmew2_d[li_reproduce_target].xmexseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_xmew2_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_xmew2_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_xmew3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_3)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body3.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xmew3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axmt400_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_xmew3_d.getLength()
            #add-point:資料輸入前 name="input.body3.before_input"
            
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmew3_d[l_ac].* TO NULL 
            INITIALIZE g_xmew3_d_t.* TO NULL 
            INITIALIZE g_xmew3_d_o.* TO NULL 
            #公用欄位給值(單身3)
            
            #自定義預設值(單身3)
            
            #add-point:modify段before備份 name="input.body3.insert.before_bak"
            
            #end add-point
            LET g_xmew3_d_t.* = g_xmew3_d[l_ac].*     #新輸入資料
            LET g_xmew3_d_o.* = g_xmew3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axmt400_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body3.insert.after_set_entry_b"

            #費用項次
            SELECT MAX(xmfiseq)+1 INTO g_xmew3_d[l_ac].xmfiseq
              FROM xmfi_t
             WHERE xmfient = g_enterprise
               AND xmfidocno = g_xmev_m.xmevdocno
            IF cl_null(g_xmew3_d[l_ac].xmfiseq) OR g_xmew3_d[l_ac].xmfiseq = 0 THEN
               LET g_xmew3_d[l_ac].xmfiseq = 1
            END IF
            
            LET g_xmew3_d[l_ac].xmfisite = g_site
            
            IF NOT cl_null(g_xmev_m.xmev006) THEN
               LET g_xmew3_d[l_ac].xmfi002 = g_xmev_m.xmev006
               #2014/12/03 by stellar modify ----- (S)
#               CALL s_aooi160_get_exrate('1',g_site,g_today,g_xmew3_d[l_ac].xmfi002,g_ooef016,0,'11') RETURNING g_xmew3_d[l_ac].xmfi003
               CALL axmt400_get_exrate(g_xmew3_d[l_ac].xmfi002) RETURNING g_xmew3_d[l_ac].xmfi003
               #2014/12/03 by stellar modify ----- (E)
               CALL s_desc_get_currency_desc(g_xmew3_d[l_ac].xmfi002) RETURNING g_xmew3_d[l_ac].xmfi002_desc
            END IF
            
            LET g_xmew3_d_t.* = g_xmew3_d[l_ac].*
            
            #end add-point
            CALL axmt400_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmew3_d[li_reproduce_target].* = g_xmew3_d[li_reproduce].*
 
               LET g_xmew3_d[li_reproduce_target].xmfiseq = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body3.before_insert"
            
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body3.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[3] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 3
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN axmt400_cl USING g_enterprise,g_xmev_m.xmevdocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axmt400_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE axmt400_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_xmew3_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xmew3_d[l_ac].xmfiseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_xmew3_d_t.* = g_xmew3_d[l_ac].*  #BACKUP
               LET g_xmew3_d_o.* = g_xmew3_d[l_ac].*  #BACKUP
               CALL axmt400_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body3.after_set_entry_b"
               
               #end add-point  
               CALL axmt400_set_no_entry_b(l_cmd)
               IF NOT axmt400_lock_b("xmfi_t","'3'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axmt400_bcl3 INTO g_xmew3_d[l_ac].xmfisite,g_xmew3_d[l_ac].xmfiseq,g_xmew3_d[l_ac].xmfi001, 
                      g_xmew3_d[l_ac].xmfi002,g_xmew3_d[l_ac].xmfi003,g_xmew3_d[l_ac].xmfi004,g_xmew3_d[l_ac].xmfi005, 
                      g_xmew3_d[l_ac].xmfi006
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_xmew3_d_mask_o[l_ac].* =  g_xmew3_d[l_ac].*
                  CALL axmt400_xmfi_t_mask()
                  LET g_xmew3_d_mask_n[l_ac].* =  g_xmew3_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL axmt400_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body3.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body3.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body3.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身3刪除前 name="input.body3.b_delete"
               
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_xmev_m.xmevdocno
               LET gs_keys[gs_keys.getLength()+1] = g_xmew3_d_t.xmfiseq
            
               #刪除同層單身
               IF NOT axmt400_delete_b('xmfi_t',gs_keys,"'3'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt400_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT axmt400_key_delete_b(gs_keys,'xmfi_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt400_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身3刪除中 name="input.body3.m_delete"
               
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE axmt400_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身3刪除後 name="input.body3.a_delete"
               
               #end add-point
               LET l_count = g_xmew_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body3.after_delete"
               
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_xmew3_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身3新增前 name="input.body3.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM xmfi_t 
             WHERE xmfient = g_enterprise AND xmfidocno = g_xmev_m.xmevdocno
               AND xmfiseq = g_xmew3_d[l_ac].xmfiseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身3新增前 name="input.body3.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmev_m.xmevdocno
               LET gs_keys[2] = g_xmew3_d[g_detail_idx].xmfiseq
               CALL axmt400_insert_b('xmfi_t',gs_keys,"'3'")
                           
               #add-point:單身新增後3 name="input.body3.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_xmew_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmfi_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axmt400_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body3.after_insert"
 
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_xmew3_d[l_ac].* = g_xmew3_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE axmt400_bcl3
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_xmew3_d[l_ac].* = g_xmew3_d_t.*
            ELSE
               #add-point:單身page3修改前 name="input.body3.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身3)
               
               
               #將遮罩欄位還原
               CALL axmt400_xmfi_t_mask_restore('restore_mask_o')
                              
               UPDATE xmfi_t SET (xmfidocno,xmfisite,xmfiseq,xmfi001,xmfi002,xmfi003,xmfi004,xmfi005, 
                   xmfi006) = (g_xmev_m.xmevdocno,g_xmew3_d[l_ac].xmfisite,g_xmew3_d[l_ac].xmfiseq,g_xmew3_d[l_ac].xmfi001, 
                   g_xmew3_d[l_ac].xmfi002,g_xmew3_d[l_ac].xmfi003,g_xmew3_d[l_ac].xmfi004,g_xmew3_d[l_ac].xmfi005, 
                   g_xmew3_d[l_ac].xmfi006) #自訂欄位頁簽
                WHERE xmfient = g_enterprise AND xmfidocno = g_xmev_m.xmevdocno
                  AND xmfiseq = g_xmew3_d_t.xmfiseq #項次 
                  
               #add-point:單身page3修改中 name="input.body3.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_xmew3_d[l_ac].* = g_xmew3_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmfi_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_xmew3_d[l_ac].* = g_xmew3_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmfi_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmev_m.xmevdocno
               LET gs_keys_bak[1] = g_xmevdocno_t
               LET gs_keys[2] = g_xmew3_d[g_detail_idx].xmfiseq
               LET gs_keys_bak[2] = g_xmew3_d_t.xmfiseq
               CALL axmt400_update_b('xmfi_t',gs_keys,gs_keys_bak,"'3'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL axmt400_xmfi_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_xmew3_d[g_detail_idx].xmfiseq = g_xmew3_d_t.xmfiseq 
                  ) THEN
                  LET gs_keys[01] = g_xmev_m.xmevdocno
                  LET gs_keys[gs_keys.getLength()+1] = g_xmew3_d_t.xmfiseq
                  CALL axmt400_key_update_b(gs_keys,'xmfi_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_xmev_m),util.JSON.stringify(g_xmew3_d_t)
               LET g_log2 = util.JSON.stringify(g_xmev_m),util.JSON.stringify(g_xmew3_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page3修改後 name="input.body3.a_update"
               
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfisite
            #add-point:BEFORE FIELD xmfisite name="input.b.page3.xmfisite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfisite
            
            #add-point:AFTER FIELD xmfisite name="input.a.page3.xmfisite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfisite
            #add-point:ON CHANGE xmfisite name="input.g.page3.xmfisite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfiseq
            #add-point:BEFORE FIELD xmfiseq name="input.b.page3.xmfiseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfiseq
            
            #add-point:AFTER FIELD xmfiseq name="input.a.page3.xmfiseq"
            #應用 a05 樣板自動產生(Version:1)
            #確認資料無重複
            IF  g_xmev_m.xmevdocno IS NOT NULL AND g_xmew3_d[g_detail_idx].xmfiseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmev_m.xmevdocno != g_xmevdocno_t OR g_xmew3_d[g_detail_idx].xmfiseq != g_xmew3_d_t.xmfiseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmfi_t WHERE "||"xmfient = '" ||g_enterprise|| "' AND "||"xmfidocno = '"||g_xmev_m.xmevdocno ||"' AND "|| "xmfiseq = '"||g_xmew3_d[g_detail_idx].xmfiseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfiseq
            #add-point:ON CHANGE xmfiseq name="input.g.page3.xmfiseq"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfi001
            
            #add-point:AFTER FIELD xmfi001 name="input.a.page3.xmfi001"
            LET g_xmew3_d[l_ac].xmfi001_desc = ''
            LET g_xmew3_d[l_ac].xmfi001_desc_desc = ''
            IF NOT cl_null(g_xmew3_d[l_ac].xmfi001) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew3_d[l_ac].xmfi001 != g_xmew3_d_o.xmfi001 OR g_xmew3_d_o.xmfi001 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmew3_d[l_ac].xmfi001
                  IF NOT cl_chk_exist("v_imaf001_16") THEN
                     LET g_xmew3_d[l_ac].xmfi001 = g_xmew3_d_o.xmfi001
                     CALL s_desc_get_item_desc(g_xmew3_d[l_ac].xmfi001) RETURNING g_xmew3_d[l_ac].xmfi001_desc,g_xmew3_d[l_ac].xmfi001_desc_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 
            CALL s_desc_get_item_desc(g_xmew3_d[l_ac].xmfi001) RETURNING g_xmew3_d[l_ac].xmfi001_desc,g_xmew3_d[l_ac].xmfi001_desc_desc
            LET g_xmew3_d_o.xmfi001 = g_xmew3_d[l_ac].xmfi001
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfi001
            #add-point:BEFORE FIELD xmfi001 name="input.b.page3.xmfi001"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfi001
            #add-point:ON CHANGE xmfi001 name="input.g.page3.xmfi001"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfi002
            
            #add-point:AFTER FIELD xmfi002 name="input.a.page3.xmfi002"
            LET g_xmew3_d[l_ac].xmfi002_desc = ''
            IF NOT cl_null(g_xmew3_d[l_ac].xmfi002) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew3_d[l_ac].xmfi002 != g_xmew3_d_o.xmfi002 OR g_xmew3_d_o.xmfi002 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_site
                  LET g_chkparam.arg2 = g_xmew3_d[l_ac].xmfi002
                  #160318-00025#4--add--str
                  LET g_errshow = TRUE 
                  LET g_chkparam.err_str[1] = "aoo-00176:sub-01302|aooi150|",cl_get_progname("aooi150",g_lang,"2"),"|:EXEPROGaooi150"
                  #160318-00025#4--add--end
                  IF NOT cl_chk_exist("v_ooaj002") THEN
                     LET g_xmew3_d[l_ac].xmfi002 = g_xmew3_d_o.xmfi002
                     CALL s_desc_get_currency_desc(g_xmew3_d[l_ac].xmfi002) RETURNING g_xmew3_d[l_ac].xmfi002_desc
                     NEXT FIELD CURRENT
                  END IF
                  #2014/12/03 by stellar modify ----- (S)
#                  CALL s_aooi160_get_exrate('1',g_site,g_today,g_xmew3_d[l_ac].xmfi002,g_ooef016,0,'11') RETURNING g_xmew3_d[l_ac].xmfi003
                  CALL axmt400_get_exrate(g_xmew3_d[l_ac].xmfi002) RETURNING g_xmew3_d[l_ac].xmfi003
                  #2014/12/03 by stellar modify ----- (E)
               END IF
            END IF 
            CALL s_desc_get_currency_desc(g_xmew3_d[l_ac].xmfi002) RETURNING g_xmew3_d[l_ac].xmfi002_desc
            LET g_xmew3_d_o.xmfi002 = g_xmew3_d[l_ac].xmfi002
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfi002
            #add-point:BEFORE FIELD xmfi002 name="input.b.page3.xmfi002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfi002
            #add-point:ON CHANGE xmfi002 name="input.g.page3.xmfi002"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfi003
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmew3_d[l_ac].xmfi003,"0","0","","","azz-00079",1) THEN
               NEXT FIELD xmfi003
            END IF 
 
 
 
            #add-point:AFTER FIELD xmfi003 name="input.a.page3.xmfi003"
            IF NOT cl_null(g_xmew3_d[l_ac].xmfi003) THEN 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfi003
            #add-point:BEFORE FIELD xmfi003 name="input.b.page3.xmfi003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfi003
            #add-point:ON CHANGE xmfi003 name="input.g.page3.xmfi003"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfi004
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmew3_d[l_ac].xmfi004,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD xmfi004
            END IF 
 
 
 
            #add-point:AFTER FIELD xmfi004 name="input.a.page3.xmfi004"
 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfi004
            #add-point:BEFORE FIELD xmfi004 name="input.b.page3.xmfi004"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfi004
            #add-point:ON CHANGE xmfi004 name="input.g.page3.xmfi004"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfi005
            
            #add-point:AFTER FIELD xmfi005 name="input.a.page3.xmfi005"
            LET g_xmew3_d[l_ac].xmfi005_desc = ''
            IF NOT cl_null(g_xmew3_d[l_ac].xmfi005) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmew3_d[l_ac].xmfi005 != g_xmew3_d_o.xmfi005 OR g_xmew3_d_o.xmfi005 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmew3_d[l_ac].xmfi005
                  LET g_chkparam.arg2 = g_site
                  IF NOT cl_chk_exist("v_pmaa001_1") THEN
                     LET g_xmew3_d[l_ac].xmfi005 = g_xmew3_d_o.xmfi005
                     CALL s_desc_get_trading_partner_abbr_desc(g_xmew3_d[l_ac].xmfi005) RETURNING g_xmew3_d[l_ac].xmfi005_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 
            CALL s_desc_get_trading_partner_abbr_desc(g_xmew3_d[l_ac].xmfi005) RETURNING g_xmew3_d[l_ac].xmfi005_desc
            LET g_xmew3_d_o.xmfi005 = g_xmew3_d[l_ac].xmfi005
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfi005
            #add-point:BEFORE FIELD xmfi005 name="input.b.page3.xmfi005"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfi005
            #add-point:ON CHANGE xmfi005 name="input.g.page3.xmfi005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfi006
            #add-point:BEFORE FIELD xmfi006 name="input.b.page3.xmfi006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfi006
            
            #add-point:AFTER FIELD xmfi006 name="input.a.page3.xmfi006"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfi006
            #add-point:ON CHANGE xmfi006 name="input.g.page3.xmfi006"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page3.xmfisite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfisite
            #add-point:ON ACTION controlp INFIELD xmfisite name="input.c.page3.xmfisite"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.xmfiseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfiseq
            #add-point:ON ACTION controlp INFIELD xmfiseq name="input.c.page3.xmfiseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.xmfi001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfi001
            #add-point:ON ACTION controlp INFIELD xmfi001 name="input.c.page3.xmfi001"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmew3_d[l_ac].xmfi001
            CALL q_imaf001_17()
            LET g_xmew3_d[l_ac].xmfi001 = g_qryparam.return1              
            DISPLAY g_xmew3_d[l_ac].xmfi001 TO xmfi001
            CALL s_desc_get_item_desc(g_xmew3_d[l_ac].xmfi001) RETURNING g_xmew3_d[l_ac].xmfi001_desc,g_xmew3_d[l_ac].xmfi001_desc_desc
            NEXT FIELD xmfi001
            #END add-point
 
 
         #Ctrlp:input.c.page3.xmfi002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfi002
            #add-point:ON ACTION controlp INFIELD xmfi002 name="input.c.page3.xmfi002"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmew3_d[l_ac].xmfi002
            LET g_qryparam.arg1 = g_site
            CALL q_ooaj002_1()
            LET g_xmew3_d[l_ac].xmfi002 = g_qryparam.return1              
            DISPLAY g_xmew3_d[l_ac].xmfi002 TO xmfi002
            CALL s_desc_get_currency_desc(g_xmew3_d[l_ac].xmfi002) RETURNING g_xmew3_d[l_ac].xmfi002_desc
            NEXT FIELD xmfi002
            #END add-point
 
 
         #Ctrlp:input.c.page3.xmfi003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfi003
            #add-point:ON ACTION controlp INFIELD xmfi003 name="input.c.page3.xmfi003"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.xmfi004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfi004
            #add-point:ON ACTION controlp INFIELD xmfi004 name="input.c.page3.xmfi004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.xmfi005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfi005
            #add-point:ON ACTION controlp INFIELD xmfi005 name="input.c.page3.xmfi005"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmew3_d[l_ac].xmfi005
            LET g_qryparam.arg1 = g_site
            CALL q_pmaa001_3()
            LET g_xmew3_d[l_ac].xmfi005 = g_qryparam.return1              
            DISPLAY g_xmew3_d[l_ac].xmfi005 TO xmfi005
            CALL s_desc_get_trading_partner_abbr_desc(g_xmew3_d[l_ac].xmfi005) RETURNING g_xmew3_d[l_ac].xmfi005_desc
            NEXT FIELD xmfi005
            #END add-point
 
 
         #Ctrlp:input.c.page3.xmfi006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfi006
            #add-point:ON ACTION controlp INFIELD xmfi006 name="input.c.page3.xmfi006"
            
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page3 after_row name="input.body3.after_row"
            CALL axmt400_amount()
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_xmew3_d[l_ac].* = g_xmew3_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE axmt400_bcl3
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL axmt400_unlock_b("xmfi_t","'3'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page3 after_row2 name="input.body3.after_row2"
 
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body3.after_input"
            
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_xmew3_d[li_reproduce_target].* = g_xmew3_d[li_reproduce].*
 
               LET g_xmew3_d[li_reproduce_target].xmfiseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_xmew3_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_xmew3_d.getLength()+1
            END IF
            
      END INPUT
 
      
 
 
 
 
{</section>}
 
{<section id="axmt400.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      SUBDIALOG aoo_aooi360_01.aooi360_01_input   #备注单身  #161031-00025#18
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         #161031-00025#18-s
         #為了修改功能doubleClick可以直接進入單身, 需指定要進入哪一個單身
         IF NOT cl_null(p_cmd) AND p_cmd != 'a' THEN
            CASE g_aw
               WHEN "s_detail1_aooi360_01"
                  NEXT FIELD ooff012     
            END CASE
         END IF
         #161031-00025#18-e
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1',"))      
         CALL DIALOG.setCurrentRow("s_detail2",g_idx_group.getValue("'2',"))
         CALL DIALOG.setCurrentRow("s_detail3",g_idx_group.getValue("'3',"))
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            
            #end add-point  
            NEXT FIELD xmevdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xmewsite
               WHEN "s_detail2"
                  NEXT FIELD xmexsite
               WHEN "s_detail3"
                  NEXT FIELD xmfisite
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   
   #end add-point    
 
END FUNCTION
 
{</section>}
 
{<section id="axmt400.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION axmt400_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   DEFINE l_success LIKE type_t.num5
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL axmt400_b_fill() #單身填充
      CALL axmt400_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL axmt400_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"

            CALL s_aooi200_get_slip_desc(g_xmev_m.xmevdocno) RETURNING g_xmev_m.xmevdocno_desc
            
            CALL s_desc_get_person_desc(g_xmev_m.xmev001) RETURNING g_xmev_m.xmev001_desc
            DISPLAY BY NAME g_xmev_m.xmev001_desc

            CALL s_desc_get_department_desc(g_xmev_m.xmev002) RETURNING g_xmev_m.xmev002_desc
            DISPLAY BY NAME g_xmev_m.xmev002_desc

            #CALL s_desc_get_trading_partner_full_desc(g_xmev_m.xmev003) RETURNING g_xmev_m.xmev003_desc  #161031-00023#1 MARK            
            CALL axmt400_xmev003_get_desc()  #161031-00023#1 add
            DISPLAY BY NAME g_xmev_m.xmev003_desc

            CALL axmt400_xmev004_ref()

            CALL s_desc_get_currency_desc(g_xmev_m.xmev006) RETURNING g_xmev_m.xmev006_desc
            DISPLAY BY NAME g_xmev_m.xmev006_desc
            
            CALL s_desc_get_tax_desc1(g_site,g_xmev_m.xmev008) RETURNING g_xmev_m.xmev008_desc
            DISPLAY BY NAME g_xmev_m.xmev008_desc

            CALL s_desc_get_unit_desc(g_xmev_m.xmev012) RETURNING g_xmev_m.xmev012_desc
            DISPLAY BY NAME g_xmev_m.xmev012_desc

            CALL s_desc_get_person_desc(g_xmev_m.xmevownid) RETURNING g_xmev_m.xmevownid_desc
            DISPLAY BY NAME g_xmev_m.xmevownid_desc

            CALL s_desc_get_department_desc(g_xmev_m.xmevowndp) RETURNING g_xmev_m.xmevowndp_desc
            DISPLAY BY NAME g_xmev_m.xmevowndp_desc

            CALL s_desc_get_person_desc(g_xmev_m.xmevcrtid) RETURNING g_xmev_m.xmevcrtid_desc
            DISPLAY BY NAME g_xmev_m.xmevcrtid_desc

            CALL s_desc_get_department_desc(g_xmev_m.xmevcrtdp) RETURNING g_xmev_m.xmevcrtdp_desc
            DISPLAY BY NAME g_xmev_m.xmevcrtdp_desc

            CALL s_desc_get_person_desc(g_xmev_m.xmevmodid) RETURNING g_xmev_m.xmevmodid_desc
            DISPLAY BY NAME g_xmev_m.xmevmodid_desc

            CALL s_desc_get_person_desc(g_xmev_m.xmevcnfid) RETURNING g_xmev_m.xmevcnfid_desc
            DISPLAY BY NAME g_xmev_m.xmevcnfid_desc

   #end add-point
   
   #遮罩相關處理
   LET g_xmev_m_mask_o.* =  g_xmev_m.*
   CALL axmt400_xmev_t_mask()
   LET g_xmev_m_mask_n.* =  g_xmev_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xmev_m.xmevdocno,g_xmev_m.xmevdocno_desc,g_xmev_m.xmevdocdt,g_xmev_m.xmevsite,g_xmev_m.xmev001, 
       g_xmev_m.xmev001_desc,g_xmev_m.xmev002,g_xmev_m.xmev002_desc,g_xmev_m.xmevstus,g_xmev_m.xmev003, 
       g_xmev_m.xmev003_desc,g_xmev_m.xmev004,g_xmev_m.xmev004_desc,g_xmev_m.xmev019,g_xmev_m.xmev020, 
       g_xmev_m.xmev005,g_xmev_m.xmev006,g_xmev_m.xmev006_desc,g_xmev_m.xmev007,g_xmev_m.xmev008,g_xmev_m.xmev008_desc, 
       g_xmev_m.xmev009,g_xmev_m.xmev010,g_xmev_m.xmev011,g_xmev_m.xmev012,g_xmev_m.xmev012_desc,g_xmev_m.xmev013, 
       g_xmev_m.xmevownid,g_xmev_m.xmevownid_desc,g_xmev_m.xmevowndp,g_xmev_m.xmevowndp_desc,g_xmev_m.xmevcrtid, 
       g_xmev_m.xmevcrtid_desc,g_xmev_m.xmevcrtdp,g_xmev_m.xmevcrtdp_desc,g_xmev_m.xmevcrtdt,g_xmev_m.xmevmodid, 
       g_xmev_m.xmevmodid_desc,g_xmev_m.xmevmoddt,g_xmev_m.xmevcnfid,g_xmev_m.xmevcnfid_desc,g_xmev_m.xmevcnfdt, 
       g_xmev_m.xmev014,g_xmev_m.xmev015,g_xmev_m.xmev016,g_xmev_m.xmev017,g_xmev_m.xmev018
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_xmev_m.xmevstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_xmew_d.getLength()
      #add-point:show段單身reference name="show.body.reference"

            CALL s_desc_get_acc_desc('215',g_xmew_d[l_ac].xmew001) RETURNING g_xmew_d[l_ac].xmew001_desc
            
            CALL s_desc_get_acc_desc('221',g_xmew_d[l_ac].xmew002) RETURNING g_xmew_d[l_ac].xmew002_desc

            CALL s_desc_get_item_desc(g_xmew_d[l_ac].xmew003) RETURNING g_xmew_d[l_ac].xmew003_desc,g_xmew_d[l_ac].xmew003_desc_desc

            CALL s_desc_get_unit_desc(g_xmew_d[l_ac].xmew006) RETURNING g_xmew_d[l_ac].xmew006_desc

            CALL s_desc_get_currency_desc(g_xmew_d[l_ac].xmew010) RETURNING g_xmew_d[l_ac].xmew010_desc
            
            CALL s_desc_get_trading_partner_abbr_desc(g_xmew_d[l_ac].xmew013) RETURNING g_xmew_d[l_ac].xmew013_desc

            CALL s_feature_description(g_xmew_d[l_ac].xmew003,g_xmew_d[l_ac].xmew004) RETURNING l_success,g_xmew_d[l_ac].xmew004_desc

      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_xmew2_d.getLength()
      #add-point:show段單身reference name="show.body2.reference"

            CALL s_desc_get_acc_desc('215',g_xmew2_d[l_ac].xmex001) RETURNING g_xmew2_d[l_ac].xmex001_desc
            
            CALL s_desc_get_item_desc(g_xmew2_d[l_ac].xmex002) RETURNING g_xmew2_d[l_ac].xmex002_desc,g_xmew2_d[l_ac].xmex002_desc_desc

            CALL s_desc_get_acc_desc('221',g_xmew2_d[l_ac].xmex004) RETURNING g_xmew2_d[l_ac].xmex004_desc

            CALL axmt400_xmex006_ref()

      #end add-point
   END FOR
   FOR l_ac = 1 TO g_xmew3_d.getLength()
      #add-point:show段單身reference name="show.body3.reference"

      CALL s_desc_get_item_desc(g_xmew3_d[l_ac].xmfi001) RETURNING g_xmew3_d[l_ac].xmfi001_desc,g_xmew3_d[l_ac].xmfi001_desc_desc

      CALL s_desc_get_currency_desc(g_xmew3_d[l_ac].xmfi002) RETURNING g_xmew3_d[l_ac].xmfi002_desc

      CALL s_desc_get_trading_partner_abbr_desc(g_xmew3_d[l_ac].xmfi005) RETURNING g_xmew3_d[l_ac].xmfi005_desc

      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other name="show.other"
   
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL axmt400_detail_show()
 
   #add-point:show段之後 name="show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="axmt400.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION axmt400_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
   
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="axmt400.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION axmt400_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   
   #end add-point   
   DEFINE l_newno     LIKE xmev_t.xmevdocno 
   DEFINE l_oldno     LIKE xmev_t.xmevdocno 
 
   DEFINE l_master    RECORD LIKE xmev_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE xmew_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE xmex_t.* #此變數樣板目前無使用
 
   DEFINE l_detail3    RECORD LIKE xmfi_t.* #此變數樣板目前無使用
 
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_xmev_m.xmevdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_xmevdocno_t = g_xmev_m.xmevdocno
 
    
   LET g_xmev_m.xmevdocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_xmev_m.xmevownid = g_user
      LET g_xmev_m.xmevowndp = g_dept
      LET g_xmev_m.xmevcrtid = g_user
      LET g_xmev_m.xmevcrtdp = g_dept 
      LET g_xmev_m.xmevcrtdt = cl_get_current()
      LET g_xmev_m.xmevmodid = g_user
      LET g_xmev_m.xmevmoddt = cl_get_current()
      LET g_xmev_m.xmevstus = 'N'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   LET g_xmev_m.xmevcnfid = ""
   LET g_xmev_m.xmevcnfdt = ""
   LET g_xmev_m.xmevstus  = "N"
   LET g_xmev_m.xmevdocdt = g_today
   LET g_xmev_m.xmev001   = g_user
   LET g_xmev_m.xmev002   = g_dept
   CALL s_desc_get_person_desc(g_xmev_m.xmev001) RETURNING g_xmev_m.xmev001_desc
   CALL s_desc_get_department_desc(g_xmev_m.xmev002) RETURNING g_xmev_m.xmev002_desc
   DISPLAY BY NAME g_xmev_m.xmev001_desc,g_xmev_m.xmev002_desc


   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_xmev_m.xmevstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
      LET g_xmev_m.xmevdocno_desc = ''
   DISPLAY BY NAME g_xmev_m.xmevdocno_desc
 
   
   CALL axmt400_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_xmev_m.* TO NULL
      INITIALIZE g_xmew_d TO NULL
      INITIALIZE g_xmew2_d TO NULL
      INITIALIZE g_xmew3_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      
      #end add-point
      CALL axmt400_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code = 9001 
      LET g_errparam.popup = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt400_set_act_visible()   
   CALL axmt400_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_xmevdocno_t = g_xmev_m.xmevdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " xmevent = " ||g_enterprise|| " AND",
                      " xmevdocno = '", g_xmev_m.xmevdocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axmt400_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   CALL axmt400_idx_chk()
   
   LET g_data_owner = g_xmev_m.xmevownid      
   LET g_data_dept  = g_xmev_m.xmevowndp
   
   #功能已完成,通報訊息中心
   CALL axmt400_msgcentre_notify('reproduce')
 
END FUNCTION
 
{</section>}
 
{<section id="axmt400.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION axmt400_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE xmew_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE xmex_t.* #此變數樣板目前無使用
 
   DEFINE l_detail3    RECORD LIKE xmfi_t.* #此變數樣板目前無使用
 
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE axmt400_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xmew_t
    WHERE xmewent = g_enterprise AND xmewdocno = g_xmevdocno_t
 
    INTO TEMP axmt400_detail
 
   #將key修正為調整後   
   UPDATE axmt400_detail 
      #更新key欄位
      SET xmewdocno = g_xmev_m.xmevdocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO xmew_t SELECT * FROM axmt400_detail
   
   IF SQLCA.SQLCODE THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmt400_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table2.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xmex_t 
    WHERE xmexent = g_enterprise AND xmexdocno = g_xmevdocno_t
 
    INTO TEMP axmt400_detail
 
   #將key修正為調整後   
   UPDATE axmt400_detail SET xmexdocno = g_xmev_m.xmevdocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table2.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO xmex_t SELECT * FROM axmt400_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table2.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmt400_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table2.a_insert"
   
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table3.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xmfi_t 
    WHERE xmfient = g_enterprise AND xmfidocno = g_xmevdocno_t
 
    INTO TEMP axmt400_detail
 
   #將key修正為調整後   
   UPDATE axmt400_detail SET xmfidocno = g_xmev_m.xmevdocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table3.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO xmfi_t SELECT * FROM axmt400_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table3.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmt400_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table3.a_insert"
   
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_xmevdocno_t = g_xmev_m.xmevdocno
 
   
END FUNCTION
 
{</section>}
 
{<section id="axmt400.delete" >}
#+ 資料刪除
PRIVATE FUNCTION axmt400_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   DEFINE  l_success       LIKE type_t.num5
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_xmev_m.xmevdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN axmt400_cl USING g_enterprise,g_xmev_m.xmevdocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axmt400_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE axmt400_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axmt400_master_referesh USING g_xmev_m.xmevdocno INTO g_xmev_m.xmevdocno,g_xmev_m.xmevdocdt, 
       g_xmev_m.xmevsite,g_xmev_m.xmev001,g_xmev_m.xmev002,g_xmev_m.xmevstus,g_xmev_m.xmev003,g_xmev_m.xmev004, 
       g_xmev_m.xmev019,g_xmev_m.xmev020,g_xmev_m.xmev005,g_xmev_m.xmev006,g_xmev_m.xmev007,g_xmev_m.xmev008, 
       g_xmev_m.xmev009,g_xmev_m.xmev010,g_xmev_m.xmev011,g_xmev_m.xmev012,g_xmev_m.xmev013,g_xmev_m.xmevownid, 
       g_xmev_m.xmevowndp,g_xmev_m.xmevcrtid,g_xmev_m.xmevcrtdp,g_xmev_m.xmevcrtdt,g_xmev_m.xmevmodid, 
       g_xmev_m.xmevmoddt,g_xmev_m.xmevcnfid,g_xmev_m.xmevcnfdt,g_xmev_m.xmev014,g_xmev_m.xmev015,g_xmev_m.xmev016, 
       g_xmev_m.xmev017,g_xmev_m.xmev018,g_xmev_m.xmev001_desc,g_xmev_m.xmev002_desc,g_xmev_m.xmev003_desc, 
       g_xmev_m.xmev004_desc,g_xmev_m.xmev006_desc,g_xmev_m.xmev012_desc,g_xmev_m.xmevownid_desc,g_xmev_m.xmevowndp_desc, 
       g_xmev_m.xmevcrtid_desc,g_xmev_m.xmevcrtdp_desc,g_xmev_m.xmevmodid_desc,g_xmev_m.xmevcnfid_desc 
 
   
   
   #檢查是否允許此動作
   IF NOT axmt400_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_xmev_m_mask_o.* =  g_xmev_m.*
   CALL axmt400_xmev_t_mask()
   LET g_xmev_m_mask_n.* =  g_xmev_m.*
   
   CALL axmt400_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
      
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL axmt400_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_xmevdocno_t = g_xmev_m.xmevdocno
 
 
      DELETE FROM xmev_t
       WHERE xmevent = g_enterprise AND xmevdocno = g_xmev_m.xmevdocno
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
      
      #end add-point
       
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_xmev_m.xmevdocno,":",SQLERRMESSAGE  
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      IF NOT s_aooi200_del_docno(g_xmev_m.xmevdocno,g_xmev_m.xmevdocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      #161031-00025#18-s MARK
#      CALL s_aooi360_del('6','axmt400',g_xmev_m.xmevdocno,'','','','','','','','','4') RETURNING l_success
#      IF NOT l_success THEN
#         CALL s_transaction_end('N','0')
#         RETURN
#      END IF
      #161031-00025#18-e MARK
      #161031-00025#18-s
      #单头的aooi360_01的备注单身资料同步删除
      DELETE FROM ooff_t
       WHERE ooffent = g_enterprise AND ooff001 IN ('6','7')
         AND ooff002 = 'axmt400' AND ooff003 = g_xmev_m.xmevdocno
         
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_xmev_m.xmevdocno,":",SQLERRMESSAGE  
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF   
      CALL aooi360_01_clear_detail()   #清除备注单身  
      #161031-00025#18-e
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      
      #end add-point
      
      DELETE FROM xmew_t
       WHERE xmewent = g_enterprise AND xmewdocno = g_xmev_m.xmevdocno
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
      
      #end add-point
         
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmew_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      
      #end add-point
      
            
                                                               
      #add-point:單身刪除前 name="delete.body.b_delete2"
      
      #end add-point
      DELETE FROM xmex_t
       WHERE xmexent = g_enterprise AND
             xmexdocno = g_xmev_m.xmevdocno
      #add-point:單身刪除中 name="delete.body.m_delete2"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmex_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete2"
 
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete3"
      
      #end add-point
      DELETE FROM xmfi_t
       WHERE xmfient = g_enterprise AND
             xmfidocno = g_xmev_m.xmevdocno
      #add-point:單身刪除中 name="delete.body.m_delete3"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmfi_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete3"
      
      #end add-point
 
 
 
 
      
      #修改歷程記錄(刪除)
      LET g_log1 = util.JSON.stringify(g_xmev_m)   #(ver:78)
      IF NOT cl_log_modified_record(g_log1,'') THEN    #(ver:78)
         CLOSE axmt400_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_xmew_d.clear() 
      CALL g_xmew2_d.clear()       
      CALL g_xmew3_d.clear()       
 
     
      CALL axmt400_ui_browser_refresh()  
      #CALL axmt400_ui_headershow()  
      #CALL axmt400_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL axmt400_browser_fill("")
         CALL axmt400_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE axmt400_cl
 
   #功能已完成,通報訊息中心
   CALL axmt400_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="axmt400.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION axmt400_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   DEFINE l_success   LIKE type_t.num5
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #清空第一階單身
   CALL g_xmew_d.clear()
   CALL g_xmew2_d.clear()
   CALL g_xmew3_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   
   #end add-point
   
   #判斷是否填充
   IF axmt400_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT xmewsite,xmewseq,xmew001,xmew002,xmew003,xmew004,xmew005,xmew006, 
             xmew007,xmew008,xmew009,xmew010,xmew011,xmew012,xmew013,xmew014,xmew015,xmew016 ,t1.oocql004 , 
             t2.oocql004 ,t3.imaal003 ,t4.imaal004 ,t5.oocal003 ,t6.ooail003 ,t7.pmaal004 FROM xmew_t", 
                
                     " INNER JOIN xmev_t ON xmevent = " ||g_enterprise|| " AND xmevdocno = xmewdocno ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
 
                                    " LEFT JOIN oocql_t t1 ON t1.oocqlent="||g_enterprise||" AND t1.oocql001='215' AND t1.oocql002=xmew001 AND t1.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t2 ON t2.oocqlent="||g_enterprise||" AND t2.oocql001='221' AND t2.oocql002=xmew002 AND t2.oocql003='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t3 ON t3.imaalent="||g_enterprise||" AND t3.imaal001=xmew003 AND t3.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t4 ON t4.imaalent="||g_enterprise||" AND t4.imaal001=xmew003 AND t4.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t5 ON t5.oocalent="||g_enterprise||" AND t5.oocal001=xmew006 AND t5.oocal002='"||g_dlang||"' ",
               " LEFT JOIN ooail_t t6 ON t6.ooailent="||g_enterprise||" AND t6.ooail001=xmew010 AND t6.ooail002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t7 ON t7.pmaalent="||g_enterprise||" AND t7.pmaal001=xmew013 AND t7.pmaal002='"||g_dlang||"' ",
 
                     " WHERE xmewent=? AND xmewdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         #161031-00025#18-s
         LET g_sql = "SELECT  DISTINCT xmewsite,xmewseq,xmew001,xmew002,xmew003,xmew004,xmew005,xmew006, 
             xmew007,xmew008,xmew009,xmew010,xmew011,xmew012,xmew013,xmew014,xmew015,xmew016 ,t1.oocql004 , 
             t2.oocql004 ,t3.imaal003 ,t4.imaal004 ,t5.oocal003 ,t6.ooail003 ,t7.pmaal004 FROM xmew_t", 
                
                     " INNER JOIN xmev_t ON xmevent = " ||g_enterprise|| " AND xmevdocno = xmewdocno ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
 
                                    " LEFT JOIN oocql_t t1 ON t1.oocqlent="||g_enterprise||" AND t1.oocql001='215' AND t1.oocql002=xmew001 AND t1.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t2 ON t2.oocqlent="||g_enterprise||" AND t2.oocql001='221' AND t2.oocql002=xmew002 AND t2.oocql003='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t3 ON t3.imaalent="||g_enterprise||" AND t3.imaal001=xmew003 AND t3.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t4 ON t4.imaalent="||g_enterprise||" AND t4.imaal001=xmew003 AND t4.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t5 ON t5.oocalent="||g_enterprise||" AND t5.oocal001=xmew006 AND t5.oocal002='"||g_dlang||"' ",
               " LEFT JOIN ooail_t t6 ON t6.ooailent="||g_enterprise||" AND t6.ooail001=xmew010 AND t6.ooail002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t7 ON t7.pmaalent="||g_enterprise||" AND t7.pmaal001=xmew013 AND t7.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN ooff_t  ON ooffent="||g_enterprise||" AND ooff002 = 'axmt400' AND ooff003 = xmewdocno",
                     " WHERE xmewent=? AND xmewdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #161031-00025#18-e
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xmew_t.xmewseq"
         
         #add-point:單身填充控制 name="b_fill.sql"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axmt400_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR axmt400_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
   #  OPEN b_fill_cs USING g_enterprise,g_xmev_m.xmevdocno   #(ver:78)
                                               
      FOREACH b_fill_cs USING g_enterprise,g_xmev_m.xmevdocno INTO g_xmew_d[l_ac].xmewsite,g_xmew_d[l_ac].xmewseq, 
          g_xmew_d[l_ac].xmew001,g_xmew_d[l_ac].xmew002,g_xmew_d[l_ac].xmew003,g_xmew_d[l_ac].xmew004, 
          g_xmew_d[l_ac].xmew005,g_xmew_d[l_ac].xmew006,g_xmew_d[l_ac].xmew007,g_xmew_d[l_ac].xmew008, 
          g_xmew_d[l_ac].xmew009,g_xmew_d[l_ac].xmew010,g_xmew_d[l_ac].xmew011,g_xmew_d[l_ac].xmew012, 
          g_xmew_d[l_ac].xmew013,g_xmew_d[l_ac].xmew014,g_xmew_d[l_ac].xmew015,g_xmew_d[l_ac].xmew016, 
          g_xmew_d[l_ac].xmew001_desc,g_xmew_d[l_ac].xmew002_desc,g_xmew_d[l_ac].xmew003_desc,g_xmew_d[l_ac].xmew003_desc_desc, 
          g_xmew_d[l_ac].xmew006_desc,g_xmew_d[l_ac].xmew010_desc,g_xmew_d[l_ac].xmew013_desc   #(ver:78) 
 
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         #161031-00025#18-s
         CALL s_aooi360_sel('7',g_prog,g_xmev_m.xmevdocno,g_xmew_d[l_ac].xmewseq,'','','','','','','','1') RETURNING l_success,g_xmew_d[l_ac].ooff013
         #161031-00025#18-e
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code = 9035 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
   #判斷是否填充
   IF axmt400_fill_chk(2) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body2.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT xmexsite,xmexseq,xmex001,xmex002,xmex003,xmex004,xmex005,xmex006, 
             xmex007,xmex008,xmex009,xmex010,xmex011,xmex012,xmex013,xmex014 ,t8.oocql004 ,t9.imaal003 , 
             t10.imaal004 ,t11.oocql004 ,t12.ecaa002 FROM xmex_t",   
                     " INNER JOIN  xmev_t ON xmevent = " ||g_enterprise|| " AND xmevdocno = xmexdocno ",
 
                     "",
                     
                                    " LEFT JOIN oocql_t t8 ON t8.oocqlent="||g_enterprise||" AND t8.oocql001='215' AND t8.oocql002=xmex001 AND t8.oocql003='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t9 ON t9.imaalent="||g_enterprise||" AND t9.imaal001=xmex002 AND t9.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t10 ON t10.imaalent="||g_enterprise||" AND t10.imaal001=xmex002 AND t10.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t11 ON t11.oocqlent="||g_enterprise||" AND t11.oocql001='221' AND t11.oocql002=xmex004 AND t11.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ecaa_t t12 ON t12.ecaaent="||g_enterprise||" AND t12.ecaasite=xmexsite AND t12.ecaa001=xmex006  ",
 
                     " WHERE xmexent=? AND xmexdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body2.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xmex_t.xmexseq"
         
         #add-point:單身填充控制 name="b_fill.sql2"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axmt400_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR axmt400_pb2
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs2 USING g_enterprise,g_xmev_m.xmevdocno   #(ver:78)
                                               
      FOREACH b_fill_cs2 USING g_enterprise,g_xmev_m.xmevdocno INTO g_xmew2_d[l_ac].xmexsite,g_xmew2_d[l_ac].xmexseq, 
          g_xmew2_d[l_ac].xmex001,g_xmew2_d[l_ac].xmex002,g_xmew2_d[l_ac].xmex003,g_xmew2_d[l_ac].xmex004, 
          g_xmew2_d[l_ac].xmex005,g_xmew2_d[l_ac].xmex006,g_xmew2_d[l_ac].xmex007,g_xmew2_d[l_ac].xmex008, 
          g_xmew2_d[l_ac].xmex009,g_xmew2_d[l_ac].xmex010,g_xmew2_d[l_ac].xmex011,g_xmew2_d[l_ac].xmex012, 
          g_xmew2_d[l_ac].xmex013,g_xmew2_d[l_ac].xmex014,g_xmew2_d[l_ac].xmex001_desc,g_xmew2_d[l_ac].xmex002_desc, 
          g_xmew2_d[l_ac].xmex002_desc_desc,g_xmew2_d[l_ac].xmex004_desc,g_xmew2_d[l_ac].xmex006_desc  
            #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill2.fill"
         
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF axmt400_fill_chk(3) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body3.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT xmfisite,xmfiseq,xmfi001,xmfi002,xmfi003,xmfi004,xmfi005,xmfi006 , 
             t13.imaal003 ,t14.imaal004 ,t15.ooail003 ,t16.pmaal004 FROM xmfi_t",   
                     " INNER JOIN  xmev_t ON xmevent = " ||g_enterprise|| " AND xmevdocno = xmfidocno ",
 
                     "",
                     
                                    " LEFT JOIN imaal_t t13 ON t13.imaalent="||g_enterprise||" AND t13.imaal001=xmfi001 AND t13.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t14 ON t14.imaalent="||g_enterprise||" AND t14.imaal001=xmfi001 AND t14.imaal002='"||g_dlang||"' ",
               " LEFT JOIN ooail_t t15 ON t15.ooailent="||g_enterprise||" AND t15.ooail001=xmfi002 AND t15.ooail002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t16 ON t16.pmaalent="||g_enterprise||" AND t16.pmaal001=xmfi005 AND t16.pmaal002='"||g_dlang||"' ",
 
                     " WHERE xmfient=? AND xmfidocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body3.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table3) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xmfi_t.xmfiseq"
         
         #add-point:單身填充控制 name="b_fill.sql3"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axmt400_pb3 FROM g_sql
         DECLARE b_fill_cs3 CURSOR FOR axmt400_pb3
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs3 USING g_enterprise,g_xmev_m.xmevdocno   #(ver:78)
                                               
      FOREACH b_fill_cs3 USING g_enterprise,g_xmev_m.xmevdocno INTO g_xmew3_d[l_ac].xmfisite,g_xmew3_d[l_ac].xmfiseq, 
          g_xmew3_d[l_ac].xmfi001,g_xmew3_d[l_ac].xmfi002,g_xmew3_d[l_ac].xmfi003,g_xmew3_d[l_ac].xmfi004, 
          g_xmew3_d[l_ac].xmfi005,g_xmew3_d[l_ac].xmfi006,g_xmew3_d[l_ac].xmfi001_desc,g_xmew3_d[l_ac].xmfi001_desc_desc, 
          g_xmew3_d[l_ac].xmfi002_desc,g_xmew3_d[l_ac].xmfi005_desc   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill3.fill"
         
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   #161031-00025#18-s
   LET g_ooff001_d = '6'   #6.單據單頭備註
   LET g_ooff002_d = g_prog
   LET g_ooff003_d = g_xmev_m.xmevdocno   #单号
   LET g_ooff004_d = '0'     #项次
   LET g_ooff005_d = ' '
   LET g_ooff006_d = ' '
   LET g_ooff007_d = ' '
   LET g_ooff008_d = ' '
   LET g_ooff009_d = ' '
   LET g_ooff010_d = ' '
   LET g_ooff011_d = ' '
   CALL aooi360_01_b_fill(g_ooff001_d,g_ooff002_d,g_ooff003_d,g_ooff004_d,g_ooff005_d,g_ooff006_d,g_ooff007_d,g_ooff008_d,g_ooff009_d,g_ooff010_d,g_ooff011_d)   #备注单身 
   #161031-00025#18-e
   #end add-point
   
   CALL g_xmew_d.deleteElement(g_xmew_d.getLength())
   CALL g_xmew2_d.deleteElement(g_xmew2_d.getLength())
   CALL g_xmew3_d.deleteElement(g_xmew3_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE axmt400_pb
   FREE axmt400_pb2
 
   FREE axmt400_pb3
 
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_xmew_d.getLength()
      LET g_xmew_d_mask_o[l_ac].* =  g_xmew_d[l_ac].*
      CALL axmt400_xmew_t_mask()
      LET g_xmew_d_mask_n[l_ac].* =  g_xmew_d[l_ac].*
   END FOR
   
   LET g_xmew2_d_mask_o.* =  g_xmew2_d.*
   FOR l_ac = 1 TO g_xmew2_d.getLength()
      LET g_xmew2_d_mask_o[l_ac].* =  g_xmew2_d[l_ac].*
      CALL axmt400_xmex_t_mask()
      LET g_xmew2_d_mask_n[l_ac].* =  g_xmew2_d[l_ac].*
   END FOR
   LET g_xmew3_d_mask_o.* =  g_xmew3_d.*
   FOR l_ac = 1 TO g_xmew3_d.getLength()
      LET g_xmew3_d_mask_o[l_ac].* =  g_xmew3_d[l_ac].*
      CALL axmt400_xmfi_t_mask()
      LET g_xmew3_d_mask_n[l_ac].* =  g_xmew3_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
 
{</section>}
 
{<section id="axmt400.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION axmt400_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      
      #end add-point    
      DELETE FROM xmew_t
       WHERE xmewent = g_enterprise AND
         xmewdocno = ps_keys_bak[1] AND xmewseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_xmew_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete2"
      
      #end add-point    
      DELETE FROM xmex_t
       WHERE xmexent = g_enterprise AND
             xmexdocno = ps_keys_bak[1] AND xmexseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete2"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmex_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_xmew2_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete2"
      
      #end add-point    
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete3"
      
      #end add-point    
      DELETE FROM xmfi_t
       WHERE xmfient = g_enterprise AND
             xmfidocno = ps_keys_bak[1] AND xmfiseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete3"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmfi_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_xmew3_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete3"
      
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other name="delete_b.other"
   
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="axmt400.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION axmt400_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      
      #end add-point 
      INSERT INTO xmew_t
                  (xmewent,
                   xmewdocno,
                   xmewseq
                   ,xmewsite,xmew001,xmew002,xmew003,xmew004,xmew005,xmew006,xmew007,xmew008,xmew009,xmew010,xmew011,xmew012,xmew013,xmew014,xmew015,xmew016) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_xmew_d[g_detail_idx].xmewsite,g_xmew_d[g_detail_idx].xmew001,g_xmew_d[g_detail_idx].xmew002, 
                       g_xmew_d[g_detail_idx].xmew003,g_xmew_d[g_detail_idx].xmew004,g_xmew_d[g_detail_idx].xmew005, 
                       g_xmew_d[g_detail_idx].xmew006,g_xmew_d[g_detail_idx].xmew007,g_xmew_d[g_detail_idx].xmew008, 
                       g_xmew_d[g_detail_idx].xmew009,g_xmew_d[g_detail_idx].xmew010,g_xmew_d[g_detail_idx].xmew011, 
                       g_xmew_d[g_detail_idx].xmew012,g_xmew_d[g_detail_idx].xmew013,g_xmew_d[g_detail_idx].xmew014, 
                       g_xmew_d[g_detail_idx].xmew015,g_xmew_d[g_detail_idx].xmew016)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      
      #end add-point 
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmew_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_xmew_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
      
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert2"
      
      #end add-point 
      INSERT INTO xmex_t
                  (xmexent,
                   xmexdocno,
                   xmexseq
                   ,xmexsite,xmex001,xmex002,xmex003,xmex004,xmex005,xmex006,xmex007,xmex008,xmex009,xmex010,xmex011,xmex012,xmex013,xmex014) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_xmew2_d[g_detail_idx].xmexsite,g_xmew2_d[g_detail_idx].xmex001,g_xmew2_d[g_detail_idx].xmex002, 
                       g_xmew2_d[g_detail_idx].xmex003,g_xmew2_d[g_detail_idx].xmex004,g_xmew2_d[g_detail_idx].xmex005, 
                       g_xmew2_d[g_detail_idx].xmex006,g_xmew2_d[g_detail_idx].xmex007,g_xmew2_d[g_detail_idx].xmex008, 
                       g_xmew2_d[g_detail_idx].xmex009,g_xmew2_d[g_detail_idx].xmex010,g_xmew2_d[g_detail_idx].xmex011, 
                       g_xmew2_d[g_detail_idx].xmex012,g_xmew2_d[g_detail_idx].xmex013,g_xmew2_d[g_detail_idx].xmex014) 
 
      #add-point:insert_b段資料新增中 name="insert_b.m_insert2"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmex_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_xmew2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert2"
      
      #end add-point
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert3"
      
      #end add-point 
      INSERT INTO xmfi_t
                  (xmfient,
                   xmfidocno,
                   xmfiseq
                   ,xmfisite,xmfi001,xmfi002,xmfi003,xmfi004,xmfi005,xmfi006) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_xmew3_d[g_detail_idx].xmfisite,g_xmew3_d[g_detail_idx].xmfi001,g_xmew3_d[g_detail_idx].xmfi002, 
                       g_xmew3_d[g_detail_idx].xmfi003,g_xmew3_d[g_detail_idx].xmfi004,g_xmew3_d[g_detail_idx].xmfi005, 
                       g_xmew3_d[g_detail_idx].xmfi006)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert3"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmfi_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_xmew3_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert3"
      
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other name="insert_b.other"
   
   #end add-point     
   
END FUNCTION
 
{</section>}
 
{<section id="axmt400.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION axmt400_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmew_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      
      #end add-point 
      
      #將遮罩欄位還原
      CALL axmt400_xmew_t_mask_restore('restore_mask_o')
               
      UPDATE xmew_t 
         SET (xmewdocno,
              xmewseq
              ,xmewsite,xmew001,xmew002,xmew003,xmew004,xmew005,xmew006,xmew007,xmew008,xmew009,xmew010,xmew011,xmew012,xmew013,xmew014,xmew015,xmew016) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_xmew_d[g_detail_idx].xmewsite,g_xmew_d[g_detail_idx].xmew001,g_xmew_d[g_detail_idx].xmew002, 
                  g_xmew_d[g_detail_idx].xmew003,g_xmew_d[g_detail_idx].xmew004,g_xmew_d[g_detail_idx].xmew005, 
                  g_xmew_d[g_detail_idx].xmew006,g_xmew_d[g_detail_idx].xmew007,g_xmew_d[g_detail_idx].xmew008, 
                  g_xmew_d[g_detail_idx].xmew009,g_xmew_d[g_detail_idx].xmew010,g_xmew_d[g_detail_idx].xmew011, 
                  g_xmew_d[g_detail_idx].xmew012,g_xmew_d[g_detail_idx].xmew013,g_xmew_d[g_detail_idx].xmew014, 
                  g_xmew_d[g_detail_idx].xmew015,g_xmew_d[g_detail_idx].xmew016) 
         WHERE xmewent = g_enterprise AND xmewdocno = ps_keys_bak[1] AND xmewseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update"
      
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmew_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmew_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL axmt400_xmew_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmex_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update2"
      
      #end add-point  
      
      #將遮罩欄位還原
      CALL axmt400_xmex_t_mask_restore('restore_mask_o')
               
      UPDATE xmex_t 
         SET (xmexdocno,
              xmexseq
              ,xmexsite,xmex001,xmex002,xmex003,xmex004,xmex005,xmex006,xmex007,xmex008,xmex009,xmex010,xmex011,xmex012,xmex013,xmex014) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_xmew2_d[g_detail_idx].xmexsite,g_xmew2_d[g_detail_idx].xmex001,g_xmew2_d[g_detail_idx].xmex002, 
                  g_xmew2_d[g_detail_idx].xmex003,g_xmew2_d[g_detail_idx].xmex004,g_xmew2_d[g_detail_idx].xmex005, 
                  g_xmew2_d[g_detail_idx].xmex006,g_xmew2_d[g_detail_idx].xmex007,g_xmew2_d[g_detail_idx].xmex008, 
                  g_xmew2_d[g_detail_idx].xmex009,g_xmew2_d[g_detail_idx].xmex010,g_xmew2_d[g_detail_idx].xmex011, 
                  g_xmew2_d[g_detail_idx].xmex012,g_xmew2_d[g_detail_idx].xmex013,g_xmew2_d[g_detail_idx].xmex014)  
 
         WHERE xmexent = g_enterprise AND xmexdocno = ps_keys_bak[1] AND xmexseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update2"
      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmex_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmex_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL axmt400_xmex_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update2"
      
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmfi_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update3"
      
      #end add-point  
      
      #將遮罩欄位還原
      CALL axmt400_xmfi_t_mask_restore('restore_mask_o')
               
      UPDATE xmfi_t 
         SET (xmfidocno,
              xmfiseq
              ,xmfisite,xmfi001,xmfi002,xmfi003,xmfi004,xmfi005,xmfi006) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_xmew3_d[g_detail_idx].xmfisite,g_xmew3_d[g_detail_idx].xmfi001,g_xmew3_d[g_detail_idx].xmfi002, 
                  g_xmew3_d[g_detail_idx].xmfi003,g_xmew3_d[g_detail_idx].xmfi004,g_xmew3_d[g_detail_idx].xmfi005, 
                  g_xmew3_d[g_detail_idx].xmfi006) 
         WHERE xmfient = g_enterprise AND xmfidocno = ps_keys_bak[1] AND xmfiseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update3"
      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmfi_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmfi_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL axmt400_xmfi_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update3"
      
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
 
   
 
   
   #add-point:update_b段other name="update_b.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axmt400.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION axmt400_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="axmt400.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION axmt400_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="axmt400.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION axmt400_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
    
   #先刷新資料
   #CALL axmt400_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "xmew_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN axmt400_bcl USING g_enterprise,
                                       g_xmev_m.xmevdocno,g_xmew_d[g_detail_idx].xmewseq     
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "axmt400_bcl:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "xmex_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN axmt400_bcl2 USING g_enterprise,
                                             g_xmev_m.xmevdocno,g_xmew2_d[g_detail_idx].xmexseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "axmt400_bcl2:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "xmfi_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN axmt400_bcl3 USING g_enterprise,
                                             g_xmev_m.xmevdocno,g_xmew3_d[g_detail_idx].xmfiseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "axmt400_bcl3:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other name="lock_b.other"
   
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axmt400.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION axmt400_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmt400_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmt400_bcl2
   END IF
 
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmt400_bcl3
   END IF
 
 
   
 
 
   #add-point:unlock_b段other name="unlock_b.other"
   
   #end add-point  
 
END FUNCTION
 
{</section>}
 
{<section id="axmt400.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION axmt400_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   CALL cl_set_comp_entry("xmevdocno",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("xmevdocno",TRUE)
      CALL cl_set_comp_entry("xmevdocdt",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      CALL cl_set_comp_entry("xmevdocdt",TRUE)
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="axmt400.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION axmt400_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   DEFINE l_fields    STRING  
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("xmevdocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      CALL cl_set_comp_entry("xmevdocdt",FALSE)
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("xmevdocno",FALSE)
   END IF 
 
#  IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正) #(ver:78)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("xmevdocdt",FALSE)
      END IF
#  END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   #依單據別設定判斷欄位是否需要做輸入控制
   IF NOT cl_null(g_xmev_m.xmevdocno) THEN
      LET l_fields = ''
      CALL s_aooi200_get_doc_fields(g_site,'1',g_xmev_m.xmevdocno) RETURNING l_fields
      CALL cl_set_comp_entry(l_fields,FALSE)
   END IF
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="axmt400.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION axmt400_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   CALL cl_set_comp_entry("xmew004",TRUE)
   #end add-point  
END FUNCTION
 
{</section>}
 
{<section id="axmt400.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION axmt400_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"

   #料件主檔無特徵類別，不能維護產品特徵
   IF NOT axmt400_imaa005_exists() THEN
      CALL cl_set_comp_entry("xmew004",FALSE)
   END IF

   #end add-point     
END FUNCTION
 
{</section>}
 
{<section id="axmt400.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION axmt400_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   CALL cl_set_act_visible("modify,delete,insert,modify_detail",TRUE)
   CALL cl_set_act_visible("axmt400_detail_upd",TRUE)   #add--2015/07/20 By shiun
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="axmt400.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION axmt400_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   DEFINE l_cnt   LIKE type_t.num5   #add--2015/07/20 By shiun
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   IF g_xmev_m.xmevstus NOT MATCHES "[NDR]" THEN
      CALL cl_set_act_visible("modify,delete,modify_detail",FALSE)
   END IF
   #add--2015/07/20 By shiun--(S)
   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt
     FROM bmaa_t
    WHERE bmaaent = g_enterprise
      AND bmaasite = g_site
      AND bmaa001 = g_xmev_m.xmev004
      AND bmaa002 = ' '
   IF l_cnt = 0 OR g_xmev_m.xmevstus NOT MATCHES "[NDR]" THEN
      CALL cl_set_act_visible("axmt400_detail_upd",FALSE)
   END IF
   #add--2015/07/20 By shiun--(E)
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="axmt400.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION axmt400_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
 
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="axmt400.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION axmt400_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="axmt400.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION axmt400_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
   
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " xmevdocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
         INITIALIZE g_wc2_table2 TO NULL
 
         INITIALIZE g_wc2_table3 TO NULL
 
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "xmev_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "xmew_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "xmex_t" 
                  LET g_wc2_table2 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "xmfi_t" 
                  LET g_wc2_table3 = la_wc[li_idx].wc
 
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
            OR NOT cl_null(g_wc2_table2)
 
            OR NOT cl_null(g_wc2_table3)
 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
            IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
            END IF
 
            IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
            END IF
 
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
 
{</section>}
 
{<section id="axmt400.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION axmt400_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   DEFINE l_success LIKE type_t.chr5
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_xmev_m.xmevdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN axmt400_cl USING g_enterprise,g_xmev_m.xmevdocno
   IF STATUS THEN
      CLOSE axmt400_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axmt400_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE axmt400_master_referesh USING g_xmev_m.xmevdocno INTO g_xmev_m.xmevdocno,g_xmev_m.xmevdocdt, 
       g_xmev_m.xmevsite,g_xmev_m.xmev001,g_xmev_m.xmev002,g_xmev_m.xmevstus,g_xmev_m.xmev003,g_xmev_m.xmev004, 
       g_xmev_m.xmev019,g_xmev_m.xmev020,g_xmev_m.xmev005,g_xmev_m.xmev006,g_xmev_m.xmev007,g_xmev_m.xmev008, 
       g_xmev_m.xmev009,g_xmev_m.xmev010,g_xmev_m.xmev011,g_xmev_m.xmev012,g_xmev_m.xmev013,g_xmev_m.xmevownid, 
       g_xmev_m.xmevowndp,g_xmev_m.xmevcrtid,g_xmev_m.xmevcrtdp,g_xmev_m.xmevcrtdt,g_xmev_m.xmevmodid, 
       g_xmev_m.xmevmoddt,g_xmev_m.xmevcnfid,g_xmev_m.xmevcnfdt,g_xmev_m.xmev014,g_xmev_m.xmev015,g_xmev_m.xmev016, 
       g_xmev_m.xmev017,g_xmev_m.xmev018,g_xmev_m.xmev001_desc,g_xmev_m.xmev002_desc,g_xmev_m.xmev003_desc, 
       g_xmev_m.xmev004_desc,g_xmev_m.xmev006_desc,g_xmev_m.xmev012_desc,g_xmev_m.xmevownid_desc,g_xmev_m.xmevowndp_desc, 
       g_xmev_m.xmevcrtid_desc,g_xmev_m.xmevcrtdp_desc,g_xmev_m.xmevmodid_desc,g_xmev_m.xmevcnfid_desc 
 
   
 
   #檢查是否允許此動作
   IF NOT axmt400_action_chk() THEN
      CLOSE axmt400_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_xmev_m.xmevdocno,g_xmev_m.xmevdocno_desc,g_xmev_m.xmevdocdt,g_xmev_m.xmevsite,g_xmev_m.xmev001, 
       g_xmev_m.xmev001_desc,g_xmev_m.xmev002,g_xmev_m.xmev002_desc,g_xmev_m.xmevstus,g_xmev_m.xmev003, 
       g_xmev_m.xmev003_desc,g_xmev_m.xmev004,g_xmev_m.xmev004_desc,g_xmev_m.xmev019,g_xmev_m.xmev020, 
       g_xmev_m.xmev005,g_xmev_m.xmev006,g_xmev_m.xmev006_desc,g_xmev_m.xmev007,g_xmev_m.xmev008,g_xmev_m.xmev008_desc, 
       g_xmev_m.xmev009,g_xmev_m.xmev010,g_xmev_m.xmev011,g_xmev_m.xmev012,g_xmev_m.xmev012_desc,g_xmev_m.xmev013, 
       g_xmev_m.xmevownid,g_xmev_m.xmevownid_desc,g_xmev_m.xmevowndp,g_xmev_m.xmevowndp_desc,g_xmev_m.xmevcrtid, 
       g_xmev_m.xmevcrtid_desc,g_xmev_m.xmevcrtdp,g_xmev_m.xmevcrtdp_desc,g_xmev_m.xmevcrtdt,g_xmev_m.xmevmodid, 
       g_xmev_m.xmevmodid_desc,g_xmev_m.xmevmoddt,g_xmev_m.xmevcnfid,g_xmev_m.xmevcnfid_desc,g_xmev_m.xmevcnfdt, 
       g_xmev_m.xmev014,g_xmev_m.xmev015,g_xmev_m.xmev016,g_xmev_m.xmev017,g_xmev_m.xmev018
 
   CASE g_xmev_m.xmevstus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   CALL axmt400_show()    #161031-00023#1 add     
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_xmev_m.xmevstus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      CALL cl_set_act_visible("unconfirmed,invalid,confirmed",TRUE)
      CALL cl_set_act_visible("closed",FALSE)
      CALL cl_set_act_visible("signing,withdraw",FALSE)
      
      CASE g_xmev_m.xmevstus
         WHEN "N"
            CALL cl_set_act_visible("unconfirmed",FALSE)
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            IF cl_bpm_chk() THEN
               CALL cl_set_act_visible("signing",TRUE)
               CALL cl_set_act_visible("confirmed",FALSE)
            END IF

         #保留修改的功能(如作廢)，隱藏其他應用功能
         WHEN "R"   
            CALL cl_set_act_visible("confirmed,unconfirmed",FALSE)
            
         WHEN "D"  
            CALL cl_set_act_visible("confirmed,unconfirmed",FALSE)
            
         WHEN "X"
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed",FALSE)
            RETURN
            
         WHEN "Y"
            CALL cl_set_act_visible("invalid,confirmed",FALSE)
            
         #送簽中只能顯示抽單;其餘應用功能皆隱藏
         WHEN "W"   
            CALL cl_set_act_visible("withdraw",TRUE)  
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed",FALSE)
            
         #已核准只能顯示確認;其餘應用功能皆隱藏
         WHEN "A"     
            CALL cl_set_act_visible("confirmed ",TRUE)  
            CALL cl_set_act_visible("unconfirmed,invalid",FALSE)         
         
      END CASE
      #end add-point
      
      #應用 a36 樣板自動產生(Version:5)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT axmt400_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE axmt400_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT axmt400_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE axmt400_cl
            RETURN
         END IF
 
 
 
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.unconfirmed"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.confirmed"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制 name="statechange.approved"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制 name="statechange.withdraw"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制 name="statechange.rejection"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制 name="statechange.signing"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.invalid"
            
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "X"
      ) OR 
      g_xmev_m.xmevstus = lc_state OR cl_null(lc_state) THEN
      CLOSE axmt400_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   CALL s_transaction_begin()
   IF lc_state = 'Y' THEN
      CALL cl_err_collect_init()   #錯誤訊息匯總-初始化 #2015/03/05 by stellar add
      CALL s_axmt400_conf_chk(g_xmev_m.xmevdocno) RETURNING l_success
      CALL cl_err_collect_show()   #錯誤訊息匯總-顯示   #2015/03/05 by stellar add
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         RETURN
      ELSE
         IF NOT cl_ask_confirm('aim-00108') THEN
           CALL s_transaction_end('N','0')
           RETURN
         ELSE
            CALL s_axmt400_conf_upd(g_xmev_m.xmevdocno) RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
               RETURN
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
         END IF
      END IF
   END IF
   IF lc_state = 'N' THEN
      CALL cl_err_collect_init()   #錯誤訊息匯總-初始化 #2015/03/05 by stellar add
      CALL s_axmt400_unconf_chk(g_xmev_m.xmevdocno) RETURNING l_success
      CALL cl_err_collect_show()   #錯誤訊息匯總-顯示   #2015/03/05 by stellar add
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         RETURN
      ELSE
         IF NOT cl_ask_confirm('aim-00110') THEN
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
            CALL s_axmt400_unconf_upd(g_xmev_m.xmevdocno) RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
               RETURN
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
         END IF
      END IF
   END IF
   IF lc_state = 'X' THEN
      CALL cl_err_collect_init()   #錯誤訊息匯總-初始化 #2015/03/05 by stellar add
      CALL s_axmt400_invalid_chk(g_xmev_m.xmevdocno) RETURNING l_success
      CALL cl_err_collect_show()   #錯誤訊息匯總-顯示   #2015/03/05 by stellar add
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         RETURN
      ELSE
         IF NOT cl_ask_confirm('aim-00109') THEN
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
            CALL s_axmt400_invalid_upd(g_xmev_m.xmevdocno) RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
               RETURN
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
         END IF
      END IF
   END IF
   #end add-point
   
   LET g_xmev_m.xmevmodid = g_user
   LET g_xmev_m.xmevmoddt = cl_get_current()
   LET g_xmev_m.xmevstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE xmev_t 
      SET (xmevstus,xmevmodid,xmevmoddt) 
        = (g_xmev_m.xmevstus,g_xmev_m.xmevmodid,g_xmev_m.xmevmoddt)     
    WHERE xmevent = g_enterprise AND xmevdocno = g_xmev_m.xmevdocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE axmt400_master_referesh USING g_xmev_m.xmevdocno INTO g_xmev_m.xmevdocno,g_xmev_m.xmevdocdt, 
          g_xmev_m.xmevsite,g_xmev_m.xmev001,g_xmev_m.xmev002,g_xmev_m.xmevstus,g_xmev_m.xmev003,g_xmev_m.xmev004, 
          g_xmev_m.xmev019,g_xmev_m.xmev020,g_xmev_m.xmev005,g_xmev_m.xmev006,g_xmev_m.xmev007,g_xmev_m.xmev008, 
          g_xmev_m.xmev009,g_xmev_m.xmev010,g_xmev_m.xmev011,g_xmev_m.xmev012,g_xmev_m.xmev013,g_xmev_m.xmevownid, 
          g_xmev_m.xmevowndp,g_xmev_m.xmevcrtid,g_xmev_m.xmevcrtdp,g_xmev_m.xmevcrtdt,g_xmev_m.xmevmodid, 
          g_xmev_m.xmevmoddt,g_xmev_m.xmevcnfid,g_xmev_m.xmevcnfdt,g_xmev_m.xmev014,g_xmev_m.xmev015, 
          g_xmev_m.xmev016,g_xmev_m.xmev017,g_xmev_m.xmev018,g_xmev_m.xmev001_desc,g_xmev_m.xmev002_desc, 
          g_xmev_m.xmev003_desc,g_xmev_m.xmev004_desc,g_xmev_m.xmev006_desc,g_xmev_m.xmev012_desc,g_xmev_m.xmevownid_desc, 
          g_xmev_m.xmevowndp_desc,g_xmev_m.xmevcrtid_desc,g_xmev_m.xmevcrtdp_desc,g_xmev_m.xmevmodid_desc, 
          g_xmev_m.xmevcnfid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_xmev_m.xmevdocno,g_xmev_m.xmevdocno_desc,g_xmev_m.xmevdocdt,g_xmev_m.xmevsite, 
          g_xmev_m.xmev001,g_xmev_m.xmev001_desc,g_xmev_m.xmev002,g_xmev_m.xmev002_desc,g_xmev_m.xmevstus, 
          g_xmev_m.xmev003,g_xmev_m.xmev003_desc,g_xmev_m.xmev004,g_xmev_m.xmev004_desc,g_xmev_m.xmev019, 
          g_xmev_m.xmev020,g_xmev_m.xmev005,g_xmev_m.xmev006,g_xmev_m.xmev006_desc,g_xmev_m.xmev007, 
          g_xmev_m.xmev008,g_xmev_m.xmev008_desc,g_xmev_m.xmev009,g_xmev_m.xmev010,g_xmev_m.xmev011, 
          g_xmev_m.xmev012,g_xmev_m.xmev012_desc,g_xmev_m.xmev013,g_xmev_m.xmevownid,g_xmev_m.xmevownid_desc, 
          g_xmev_m.xmevowndp,g_xmev_m.xmevowndp_desc,g_xmev_m.xmevcrtid,g_xmev_m.xmevcrtid_desc,g_xmev_m.xmevcrtdp, 
          g_xmev_m.xmevcrtdp_desc,g_xmev_m.xmevcrtdt,g_xmev_m.xmevmodid,g_xmev_m.xmevmodid_desc,g_xmev_m.xmevmoddt, 
          g_xmev_m.xmevcnfid,g_xmev_m.xmevcnfid_desc,g_xmev_m.xmevcnfdt,g_xmev_m.xmev014,g_xmev_m.xmev015, 
          g_xmev_m.xmev016,g_xmev_m.xmev017,g_xmev_m.xmev018
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   CALL axmt400_show()    #161031-00023#1 add  
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   
   #end add-point  
 
   CLOSE axmt400_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL axmt400_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axmt400.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION axmt400_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_xmew_d.getLength() THEN
         LET g_detail_idx = g_xmew_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmew_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmew_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_xmew2_d.getLength() THEN
         LET g_detail_idx = g_xmew2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmew2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmew2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_xmew3_d.getLength() THEN
         LET g_detail_idx = g_xmew3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmew3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmew3_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axmt400.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION axmt400_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   
   #end add-point
    
   LET l_ac = li_ac
   
   CALL axmt400_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
 
{</section>}
 
{<section id="axmt400.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION axmt400_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axmt400.status_show" >}
PRIVATE FUNCTION axmt400_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="axmt400.mask_functions" >}
&include "erp/axm/axmt400_mask.4gl"
 
{</section>}
 
{<section id="axmt400.signature" >}
   #應用 a39 樣板自動產生(Version:10)
#+ BPM提交
PRIVATE FUNCTION axmt400_send()
   #add-point:send段define(客製用) name="send.define_customerization"
   
   #end add-point 
   #add-point:send段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="send.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="send.pre_function"
   
   #end add-point
   
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
   LET g_wc2_table2 = " 1=1"
   LET g_wc2_table3 = " 1=1"
 
 
   CALL axmt400_show()
   CALL axmt400_set_pk_array()
   
   #add-point: 初始化的ADP name="send.before_send"
   IF NOT s_axmt400_conf_chk(g_xmev_m.xmevdocno) THEN
      CLOSE axmt400_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_xmev_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_xmew_d))
   CALL cl_bpm_set_detail_data("s_detail2", util.JSONArray.fromFGL(g_xmew2_d))
   CALL cl_bpm_set_detail_data("s_detail3", util.JSONArray.fromFGL(g_xmew3_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP name="send.before_cli"
   
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP name="send.after_send"
   
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL axmt400_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL axmt400_ui_headershow()
   CALL axmt400_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
#應用 a40 樣板自動產生(Version:9)
#+ BPM抽單
PRIVATE FUNCTION axmt400_draw_out()
   #add-point:draw段define name="draw.define_customerization"
   
   #end add-point
   #add-point:draw段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="draw.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="draw.pre_function"
   
   #end add-point
   
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_idx].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL axmt400_ui_headershow()  
   CALL axmt400_ui_detailshow()
 
   #add-point:Function後置處理  name="draw.after_function"
   
   #end add-point
 
   RETURN TRUE
   
END FUNCTION
 
 
 
 
 
{</section>}
 
{<section id="axmt400.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION axmt400_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_xmev_m.xmevdocno
   LET g_pk_array[1].column = 'xmevdocno'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axmt400.other_dialog" readonly="Y" >}
   
 
{</section>}
 
{<section id="axmt400.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION axmt400_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL axmt400_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_xmev_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axmt400.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION axmt400_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   #160818-00017#42 add-S
   SELECT xmevstus  INTO g_xmev_m.xmevstus
     FROM xmev_t
    WHERE xmevent = g_enterprise
      AND xmevdocno = g_xmev_m.xmevdocno

   IF (g_action_choice="modify" OR g_action_choice="delete" OR g_action_choice="modify_detail")  THEN
     LET g_errno = NULL
     CASE g_xmev_m.xmevstus
        WHEN 'W'
           LET g_errno = 'sub-00180'
        WHEN 'X'
           LET g_errno = 'sub-00229'
        WHEN 'Y'
           LET g_errno = 'sub-00178'
        WHEN 'S'
           LET g_errno = 'sub-00230'
     END CASE

     IF NOT cl_null(g_errno) THEN
        INITIALIZE g_errparam TO NULL
        LET g_errparam.code = g_errno
        LET g_errparam.extend = g_xmev_m.xmevdocno
        LET g_errparam.popup = TRUE
        CALL cl_err()
        LET g_errno = NULL
        CALL axmt400_set_act_visible()
        CALL axmt400_set_act_no_visible()
        CALL axmt400_show()
        RETURN FALSE
     END IF
   END IF
   #160818-00017#42 add-E
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="axmt400.other_function" readonly="Y" >}

################################################################################
# Descriptions...: 工作站說明
# Memo...........:
# Usage..........: CALL axmt400_xmex006_ref()
# Input parameter: no
# Return code....: no
# Date & Author..: 140613 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt400_xmex006_ref()
 
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmew2_d[l_ac].xmex006
   CALL ap_ref_array2(g_ref_fields,"SELECT ecaa002 FROM ecaa_t WHERE ecaaent='"||g_enterprise||"' AND ecaa001=? ","") RETURNING g_rtn_fields
   LET g_xmew2_d[l_ac].xmex006_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmew2_d[l_ac].xmex006_desc

END FUNCTION

################################################################################
# Descriptions...: 工資單價 = 預估工時 * 單位工資率
# Memo...........:
# Usage..........: CALL axmt400_xmex012()
# Input parameter: no
# Return code....: no
# Date & Author..: 140613 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt400_xmex012()

   IF cl_null(g_xmew2_d[l_ac].xmex007) THEN LET g_xmew2_d[l_ac].xmex007 = 0 END IF
   IF cl_null(g_xmew2_d[l_ac].xmex010) THEN LET g_xmew2_d[l_ac].xmex010 = 0 END IF
   LET g_xmew2_d[l_ac].xmex012 = g_xmew2_d[l_ac].xmex007 * g_xmew2_d[l_ac].xmex010
   CALL s_curr_round(g_site,g_xmev_m.xmev006,g_xmew2_d[l_ac].xmex012,'1') RETURNING g_xmew2_d[l_ac].xmex012

END FUNCTION

################################################################################
# Descriptions...: 費用單價 = 預估機時 * 單位費用率
# Memo...........:
# Usage..........: CALL axmt400_xmex013()
# Input parameter: no
# Return code....: no
# Date & Author..: 140613 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt400_xmex013()

   IF cl_null(g_xmew2_d[l_ac].xmex008) THEN LET g_xmew2_d[l_ac].xmex008 = 0 END IF
   IF cl_null(g_xmew2_d[l_ac].xmex011) THEN LET g_xmew2_d[l_ac].xmex011 = 0 END IF
   LET g_xmew2_d[l_ac].xmex013 = g_xmew2_d[l_ac].xmex008 * g_xmew2_d[l_ac].xmex011
   CALL s_curr_round(g_site,g_xmev_m.xmev006,g_xmew2_d[l_ac].xmex013,'1') RETURNING g_xmew2_d[l_ac].xmex013

END FUNCTION

################################################################################
# Descriptions...: 特徵類別
# Memo...........:
# Usage..........: CALL axmt400_imaa005_exists()
# Input parameter: no
# Return code....: no
# Date & Author..: 140613 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt400_imaa005_exists()
DEFINE l_imaa005  LIKE imaa_t.imaa005

   IF cl_null(g_xmew_d[l_ac].xmew003) THEN
      RETURN FALSE
   ELSE
      LET l_imaa005 = ''
      SELECT imaa005 INTO l_imaa005
        FROM imaa_t
       WHERE imaaent = g_enterprise
         AND imaa001 =  g_xmew_d[l_ac].xmew003
      IF cl_null(l_imaa005) THEN
         RETURN FALSE
      END IF
   END IF
   RETURN TRUE

END FUNCTION

################################################################################
# Descriptions...: 材料金額 = 材料單價 * (估價數量 * 組成用量 / 主件底數)
# Memo...........:
# Usage..........: CALL axmt400_xmew015(p_xmew014,p_xmew007,p_xmew008)
# Input parameter: p_xmew014   材料單價
#                : p_xmew007   組成用量
#                : p_xmew008   主件底數
# Return code....: no
# Date & Author..: 140613 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt400_xmew015(p_xmew014,p_xmew007,p_xmew008)
DEFINE p_xmew014  LIKE xmew_t.xmew014
DEFINE p_xmew007  LIKE xmew_t.xmew007
DEFINE p_xmew008  LIKE xmew_t.xmew008
DEFINE r_xmew015  LIKE xmew_t.xmew015

   IF cl_null(p_xmew014) THEN LET p_xmew014 = 0 END IF
   IF cl_null(g_xmev_m.xmev011) THEN LET g_xmev_m.xmev011 = 0 END IF
   IF cl_null(p_xmew007) THEN LET p_xmew007 = 1 END IF
   IF cl_null(p_xmew008) THEN LET p_xmew008 = 1 END IF
   LET r_xmew015 = p_xmew014 * g_xmev_m.xmev011 * p_xmew007 / p_xmew008
   CALL s_curr_round(g_site,g_xmev_m.xmev006,r_xmew015,'2') RETURNING r_xmew015

   RETURN r_xmew015
END FUNCTION

################################################################################
# Descriptions...: 單號檢核
# Memo...........:
# Usage..........: CALL axmt400_xmevdocno_chk()
# Input parameter: no
# Return code....: TRUE OR FALSE
# Date & Author..: 140616 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt400_xmevdocno_chk()
DEFINE l_success  LIKE type_t.num5
DEFINE l_flag     LIKE type_t.num5

   #key值
   IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmev_t WHERE "||"xmevent = '" ||g_enterprise|| "' AND "||"xmevdocno = '"||g_xmev_m.xmevdocno ||"'",'std-00004',0) THEN 
      RETURN FALSE
   END IF
   
   #檢查單別
   IF NOT s_aooi200_chk_slip(g_site,'',g_xmev_m.xmevdocno,g_prog) THEN
      RETURN FALSE
   END IF
            
   #檢核輸入的單據別是否可以被key人員對應的控制組使用,'2' 為銷售控制組類型
   CALL s_control_chk_doc('1',g_xmev_m.xmevdocno,'2',g_user,g_dept,'','') RETURNING l_success,l_flag
   IF l_success THEN
      IF NOT l_flag THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'axm-00015'
         LET g_errparam.extend = g_xmev_m.xmevdocno
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
   ELSE
      RETURN FALSE
   END IF

   RETURN TRUE
END FUNCTION

################################################################################
# Descriptions...: 範本料號說明
# Memo...........:
# Usage..........: CALL axmt400_xmev004_ref()
# Input parameter: no
# Return code....: no
# Date & Author..: 140616 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt400_xmev004_ref()

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmev_m.xmev004
   CALL ap_ref_array2(g_ref_fields,"SELECT xmesl003 FROM xmesl_t WHERE xmeslent='"||g_enterprise||"' AND xmesldocno=? AND xmesl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmev_m.xmev004_desc = '', g_rtn_fields[1] , ''
   #add--161102-00066#1 By shiun--(S)
   IF cl_null(g_xmev_m.xmev004_desc) THEN
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_xmev_m.xmev004
      CALL ap_ref_array2(g_ref_fields,"SELECT imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_xmev_m.xmev004_desc = '', g_rtn_fields[1] , ''
   END IF
   #add--161102-00066#1 By shiun--(E)
   DISPLAY BY NAME g_xmev_m.xmev004_desc

END FUNCTION

################################################################################
# Descriptions...: 第一次進入單身時若單頭範本產品料號有值時，則依範本資料自動產生單身
# Memo...........:
# Usage..........: CALL axmt400_gen_b(p_ooef016)
# Input parameter: p_ooef016
# Return code....: TRUE OR FALSE
# Date & Author..: 140616 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt400_gen_b(p_ooef016)
DEFINE p_ooef016    LIKE ooef_t.ooef016
DEFINE r_success    LIKE type_t.num5
DEFINE l_xmew   RECORD
   xmewent          LIKE xmew_t.xmewent,
   xmewsite         LIKE xmew_t.xmewsite,
   xmewdocno        LIKE xmew_t.xmewdocno,
   xmewseq          LIKE xmew_t.xmewseq,
   xmew001          LIKE xmew_t.xmew001,
   xmew002          LIKE xmew_t.xmew002,
   xmew003          LIKE xmew_t.xmew003,
   xmew004          LIKE xmew_t.xmew004,
   xmew005          LIKE xmew_t.xmew005,
   xmew006          LIKE xmew_t.xmew006,
   xmew007          LIKE xmew_t.xmew007,
   xmew008          LIKE xmew_t.xmew008,
   xmew009          LIKE xmew_t.xmew009,
   xmew010          LIKE xmew_t.xmew010,
   xmew011          LIKE xmew_t.xmew011,
   xmew012          LIKE xmew_t.xmew012,
   xmew013          LIKE xmew_t.xmew013,
   xmew014          LIKE xmew_t.xmew014,
   xmew015          LIKE xmew_t.xmew015,
   xmew016          LIKE xmew_t.xmew016
                END RECORD
DEFINE l_xmex   RECORD
   xmexent          LIKE xmex_t.xmexent,
   xmexsite         LIKE xmex_t.xmexsite,
   xmexdocno        LIKE xmex_t.xmexdocno,
   xmexseq          LIKE xmex_t.xmexseq,
   xmex001          LIKE xmex_t.xmex001,
   xmex002          LIKE xmex_t.xmex002,
   xmex003          LIKE xmex_t.xmex003,
   xmex004          LIKE xmex_t.xmex004,
   xmex005          LIKE xmex_t.xmex005,
   xmex006          LIKE xmex_t.xmex006,
   xmex007          LIKE xmex_t.xmex007,
   xmex008          LIKE xmex_t.xmex008,
   xmex009          LIKE xmex_t.xmex009,
   xmex010          LIKE xmex_t.xmex010,
   xmex011          LIKE xmex_t.xmex011,
   xmex012          LIKE xmex_t.xmex012,
   xmex013          LIKE xmex_t.xmex013,
   xmex014          LIKE xmex_t.xmex014
                END RECORD
DEFINE l_xmfi   RECORD
   xmfient          LIKE xmfi_t.xmfient,
   xmfisite         LIKE xmfi_t.xmfisite,
   xmfidocno        LIKE xmfi_t.xmfidocno,
   xmfiseq          LIKE xmfi_t.xmfiseq,
   xmfi001          LIKE xmfi_t.xmfi001,
   xmfi002          LIKE xmfi_t.xmfi002,
   xmfi003          LIKE xmfi_t.xmfi003,
   xmfi004          LIKE xmfi_t.xmfi004,
   xmfi005          LIKE xmfi_t.xmfi005,
   xmfi006          LIKE xmfi_t.xmfi006
                END RECORD
DEFINE l_success    LIKE type_t.num5
DEFINE l_seq        LIKE type_t.num5

   LET r_success = TRUE

   INITIALIZE l_xmew.* TO NULL
   DECLARE gen_b_cur1 CURSOR FOR
      SELECT xmet002,xmet003,xmet004,xmet005,xmet006,xmet007,xmet008,
             xmet009,xmet010,xmet011,xmet012,xmet013,xmet014
        FROM xmes_t,xmet_t
       WHERE xmesent = g_enterprise
         AND xmessite = g_site
         AND xmesdocno = g_xmev_m.xmev004
         AND xmesstus = 'Y'
         AND xmetent = xmesent
         AND xmetsite = xmessite
         AND xmetdocno = xmesdocno
       ORDER BY xmet002
   FOREACH gen_b_cur1 INTO l_xmew.xmewseq,l_xmew.xmew001,l_xmew.xmew002,l_xmew.xmew003,l_xmew.xmew004,
                           l_xmew.xmew005,l_xmew.xmew006,l_xmew.xmew007,l_xmew.xmew008,l_xmew.xmew009,
                           l_xmew.xmew010,l_xmew.xmew013,l_xmew.xmew016
      IF SQLCA.SQLCODE THEN
         LET r_success = FALSE
         EXIT FOREACH
      END IF
      
      LET l_xmew.xmewent = g_enterprise
      LET l_xmew.xmewsite = g_site
      LET l_xmew.xmewdocno = g_xmev_m.xmevdocno
      LET l_xmew.xmew012 = "0"
      IF NOT cl_null(l_xmew.xmew010) THEN
         LET l_xmew.xmew010 = g_ooef016
      END IF
      #2014/12/03 by stellar modify ----- (S)
#      CALL s_aooi160_get_exrate('1',g_site,g_today,l_xmew.xmew010,p_ooef016,0,'11') RETURNING l_xmew.xmew011
      CALL axmt400_get_exrate(l_xmew.xmew010) RETURNING l_xmew.xmew011
      #2014/12/03 by stellar modify ----- (E)
      CALL axmt400_get_price(l_xmew.xmew003,l_xmew.xmew004,l_xmew.xmew006,
                             l_xmew.xmew007,l_xmew.xmew008,l_xmew.xmew010)
           RETURNING l_xmew.xmew012,l_xmew.xmew014,l_xmew.xmew015

      INSERT INTO xmew_t (xmewent,xmewsite,xmewdocno,xmewseq,xmew001,xmew002,xmew003,xmew004,xmew005,xmew006,   
                          xmew007,xmew008 ,xmew009  ,xmew010,xmew011,xmew012,xmew013,xmew014,xmew015,xmew016)
                  VALUES (l_xmew.xmewent,l_xmew.xmewsite,l_xmew.xmewdocno,l_xmew.xmewseq,l_xmew.xmew001,   
                          l_xmew.xmew002,l_xmew.xmew003 ,l_xmew.xmew004  ,l_xmew.xmew005,l_xmew.xmew006,
                          l_xmew.xmew007,l_xmew.xmew008 ,l_xmew.xmew009  ,l_xmew.xmew010,l_xmew.xmew011,
                          l_xmew.xmew012,l_xmew.xmew013 ,l_xmew.xmew014  ,l_xmew.xmew015,l_xmew.xmew016)
      IF SQLCA.sqlcode THEN
         LET r_success = FALSE
         EXIT FOREACH
      END IF
      
      INITIALIZE l_xmew.* TO NULL
   END FOREACH

   LET l_seq = 1
   INITIALIZE l_xmex.* TO NULL
   DECLARE gen_b_cur2 CURSOR FOR
      SELECT xmeu002,xmeu003,xmeu004,xmeu005,xmeu006,
             xmeu007,xmeu008,xmeu009,xmeu010,xmeu011
        FROM xmes_t,xmeu_t
       WHERE xmesent = g_enterprise
         AND xmessite = g_site
         AND xmesdocno = g_xmev_m.xmev004
         AND xmesstus = 'Y'
         AND xmeuent = xmesent
         AND xmeusite = xmessite
         AND xmeudocno = xmesdocno
   FOREACH gen_b_cur2 INTO l_xmex.xmex001,l_xmex.xmex002,l_xmex.xmex003,l_xmex.xmex004,l_xmex.xmex005,
                           l_xmex.xmex006,l_xmex.xmex007,l_xmex.xmex008,l_xmex.xmex009,l_xmex.xmex014
      IF SQLCA.SQLCODE THEN
         LET r_success = FALSE
         EXIT FOREACH
      END IF

      LET l_xmex.xmexent = g_enterprise
      LET l_xmex.xmexsite = g_site
      LET l_xmex.xmexdocno = g_xmev_m.xmevdocno
      LET l_xmex.xmexseq = l_seq
      LET l_xmex.xmex010 = "0"
      LET l_xmex.xmex011 = "0"
      LET l_xmex.xmex012 = "0"
      LET l_xmex.xmex013 = "0"
#160229-00019#1---begin
   SELECT xmer005,xmer006
     INTO l_xmex.xmex010,l_xmex.xmex011
     FROM xmer_t
    WHERE xmerent = g_enterprise
      AND xmersite = g_site
      AND xmerdocdt = g_xmev_m.xmevdocdt
      AND xmer001 = g_xmev_m.xmev006
      AND xmer002 = l_xmex.xmex004
      AND xmer003 = l_xmex.xmex006
      AND xmer004 = l_xmex.xmex009
      AND xmerstus = 'Y'
   IF SQLCA.SQLCODE = 100 THEN
      CASE l_xmex.xmex009
         WHEN 1  #分钟
            SELECT xmer005/60,xmer006/60
              INTO l_xmex.xmex010,l_xmex.xmex011
              FROM xmer_t
             WHERE xmerent = g_enterprise
               AND xmersite = g_site
               AND xmerdocdt = g_xmev_m.xmevdocdt
               AND xmer001 = g_xmev_m.xmev006
               AND xmer002 = l_xmex.xmex004
               AND xmer003 = l_xmex.xmex006
               AND xmer004 = 2    
               AND xmerstus = 'Y'               
         WHEN 2  #小时
            SELECT xmer005*60,xmer006*60
              INTO l_xmex.xmex010,l_xmex.xmex011
              FROM xmer_t
             WHERE xmerent = g_enterprise
               AND xmersite = g_site
               AND xmerdocdt = g_xmev_m.xmevdocdt
               AND xmer001 = g_xmev_m.xmev006
               AND xmer002 = l_xmex.xmex004
               AND xmer003 = l_xmex.xmex006
               AND xmer004 = 1 
               AND xmerstus = 'Y'               
      END CASE
   END IF
   IF cl_null(l_xmex.xmex010) THEN LET l_xmex.xmex010 = "0" END IF 
   IF cl_null(l_xmex.xmex011) THEN LET l_xmex.xmex011 = "0" END IF 
   LET l_xmex.xmex012 = l_xmex.xmex007*l_xmex.xmex010
   LET l_xmex.xmex013 = l_xmex.xmex008*l_xmex.xmex011
#160229-00019#1---end
      INSERT INTO xmex_t (xmexent,xmexsite,xmexdocno,xmexseq,xmex001,xmex002,xmex003,xmex004,xmex005,
                          xmex006,xmex007 ,xmex008  ,xmex009,xmex010,xmex011,xmex012,xmex013,xmex014)
                  VALUES (l_xmex.xmexent,l_xmex.xmexsite,l_xmex.xmexdocno,l_xmex.xmexseq,l_xmex.xmex001,   
                          l_xmex.xmex002,l_xmex.xmex003 ,l_xmex.xmex004  ,l_xmex.xmex005,l_xmex.xmex006,
                          l_xmex.xmex007,l_xmex.xmex008 ,l_xmex.xmex009  ,l_xmex.xmex010,l_xmex.xmex011,
                          l_xmex.xmex012,l_xmex.xmex013 ,l_xmex.xmex014)
      IF SQLCA.sqlcode THEN
         LET r_success = FALSE
         EXIT FOREACH
      END IF
      
      INITIALIZE l_xmex.* TO NULL
      LET l_seq = l_seq + 1
   END FOREACH

   LET l_seq = 1
   INITIALIZE l_xmfi.* TO NULL
   DECLARE gen_b_cur3 CURSOR FOR
      SELECT xmez002,xmez003,xmez004,xmez005,xmez006,xmez007
        FROM xmes_t,xmez_t
       WHERE xmesent = g_enterprise
         AND xmessite = g_site
         AND xmesdocno = g_xmev_m.xmev004
         AND xmesstus = 'Y'
         AND xmezent = xmesent
         AND xmezsite = xmessite
         AND xmezdocno = xmesdocno
   FOREACH gen_b_cur3 INTO l_xmfi.xmfi001,l_xmfi.xmfi002,l_xmfi.xmfi003,
                           l_xmfi.xmfi004,l_xmfi.xmfi005,l_xmfi.xmfi006
      IF SQLCA.SQLCODE THEN
         LET r_success = FALSE
         EXIT FOREACH
      END IF

      LET l_xmfi.xmfient = g_enterprise
      LET l_xmfi.xmfisite = g_site
      LET l_xmfi.xmfidocno = g_xmev_m.xmevdocno
      LET l_xmfi.xmfiseq = l_seq

      #2014/12/03 by stellar modify ----- (S)
#      INSERT INTO xmfi_t (xmfient,xmfisite,xmfidocno,xmfiseq,xmfi004,
#                          xmfi005,xmfi006,xmfi007,xmfi008,xmfi009)
      INSERT INTO xmfi_t (xmfient,xmfisite,xmfidocno,xmfiseq,xmfi001,
                          xmfi002,xmfi003,xmfi004,xmfi005,xmfi006)
      #2014/12/03 by stellar modify ----- (S)
                  VALUES (l_xmfi.xmfient,l_xmfi.xmfisite,l_xmfi.xmfidocno,l_xmfi.xmfiseq,
                          l_xmfi.xmfi001,l_xmfi.xmfi002,l_xmfi.xmfi003,
                          l_xmfi.xmfi004,l_xmfi.xmfi005,l_xmfi.xmfi006)
      IF SQLCA.sqlcode THEN
         LET r_success = FALSE
         EXIT FOREACH
      END IF
      
      INITIALIZE l_xmfi.* TO NULL
      LET l_seq = l_seq + 1
   END FOREACH

   CALL axmt400_amount()
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 材料金額 = 組成明細.材料金額加總
#                  人工金額 = (製程明細.工資單價 * 估價數量) 的加總
#                  製費金額 = (製程明細.製費單價 * 估價數量) 的加總
#                  其他費用 = (費用明細.外加費用金額) 的加總
#                  估價金額 = 材料金額 + 人工金額 + 製費金額 + 其他費用
# Memo...........:
# Usage..........: CALL axmt400_amount()
# Input parameter: no
# Return code....: no
# Date & Author..: 140621 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt400_amount()
   
   #材料金額 = 組成明細.材料金額加總
   SELECT SUM(xmew015) INTO g_xmev_m.xmev014 FROM xmew_t
    WHERE xmewent = g_enterprise AND xmewdocno = g_xmev_m.xmevdocno
   #人工金額 = (製程明細.工資單價 * 估價數量) 的加總
   #製費金額 = (製程明細.製費單價 * 估價數量) 的加總
   SELECT SUM(xmex012),SUM(xmex013) INTO g_xmev_m.xmev015,g_xmev_m.xmev016 FROM xmex_t 
    WHERE xmexent = g_enterprise AND xmexdocno = g_xmev_m.xmevdocno
   #其他費用 = (費用明細.預估金額) 的加總
   SELECT SUM(xmfi004) INTO g_xmev_m.xmev017 FROM xmfi_t
    WHERE xmfient = g_enterprise AND xmfidocno = g_xmev_m.xmevdocno
   IF cl_null(g_xmev_m.xmev014) THEN LET g_xmev_m.xmev014 = 0 END IF
   IF cl_null(g_xmev_m.xmev015) THEN LET g_xmev_m.xmev015 = 0 END IF
   IF cl_null(g_xmev_m.xmev016) THEN LET g_xmev_m.xmev016 = 0 END IF
   IF cl_null(g_xmev_m.xmev017) THEN LET g_xmev_m.xmev017 = 0 END IF
   LET g_xmev_m.xmev015 = g_xmev_m.xmev015*g_xmev_m.xmev011
   LET g_xmev_m.xmev016 = g_xmev_m.xmev016*g_xmev_m.xmev011
   LET g_xmev_m.xmev018 = g_xmev_m.xmev014 + g_xmev_m.xmev015 + g_xmev_m.xmev016 + g_xmev_m.xmev017
   CALL s_curr_round(g_site,g_xmev_m.xmev006,g_xmev_m.xmev014,'2') RETURNING g_xmev_m.xmev014
   CALL s_curr_round(g_site,g_xmev_m.xmev006,g_xmev_m.xmev015,'2') RETURNING g_xmev_m.xmev015
   CALL s_curr_round(g_site,g_xmev_m.xmev006,g_xmev_m.xmev016,'2') RETURNING g_xmev_m.xmev016
   CALL s_curr_round(g_site,g_xmev_m.xmev006,g_xmev_m.xmev017,'2') RETURNING g_xmev_m.xmev017
   CALL s_curr_round(g_site,g_xmev_m.xmev006,g_xmev_m.xmev018,'2') RETURNING g_xmev_m.xmev018
   UPDATE xmev_t SET xmev014 = g_xmev_m.xmev014,
                     xmev015 = g_xmev_m.xmev015,
                     xmev016 = g_xmev_m.xmev016,
                     xmev017 = g_xmev_m.xmev017,
                     xmev018 = g_xmev_m.xmev018
    WHERE xmevent = g_enterprise
      AND xmevdocno = g_xmev_m.xmevdocno
   DISPLAY BY NAME g_xmev_m.xmev014,g_xmev_m.xmev015,g_xmev_m.xmev016,g_xmev_m.xmev017,g_xmev_m.xmev018

END FUNCTION

################################################################################
# Descriptions...: 根據單頭設定的材料取價方式，呼叫s_axmt400元件取出採購單價
# Memo...........:
# Usage..........: CALL axmt400_get_price(p_xmew003,p_xmew004,p_xmew006,p_xmew007,p_xmew008,p_xmew010)
#                  RETURNING r_xmew012,r_xmew014,r_xmew015
# Input parameter: 
# Return code....: 
# Date & Author..: 140804 By whitney
# Modify.........: 150521 by whitney 原依材料取價方式取得放入材料單價之資料，改放入採購單價欄位
################################################################################
PRIVATE FUNCTION axmt400_get_price(p_xmew003,p_xmew004,p_xmew006,p_xmew007,p_xmew008,p_xmew010)
DEFINE p_xmew003  LIKE xmew_t.xmew003
DEFINE p_xmew004  LIKE xmew_t.xmew004
DEFINE p_xmew006  LIKE xmew_t.xmew006
DEFINE p_xmew007  LIKE xmew_t.xmew007
DEFINE p_xmew008  LIKE xmew_t.xmew008
DEFINE p_xmew010  LIKE xmew_t.xmew010
DEFINE r_xmew012  LIKE xmew_t.xmew012
DEFINE r_xmew014  LIKE xmew_t.xmew014
DEFINE r_xmew015  LIKE xmew_t.xmew015
DEFINE l_success  LIKE type_t.num5
DEFINE l_rate     LIKE ooan_t.ooan005

   LET l_success = TRUE
   LET r_xmew012 = 0
   LET r_xmew014 = 0
   LET r_xmew015 = 0
   
   IF cl_null(p_xmew003) OR cl_null(p_xmew006) THEN
      RETURN r_xmew012,r_xmew014,r_xmew015
   END IF
   
   CASE g_xmev_m.xmev005
      WHEN '1'
         CALL s_axmt400_xmev005_1(g_xmev_m.xmevdocdt,p_xmew003,p_xmew004,p_xmew006,g_xmev_m.xmev006)
              RETURNING r_xmew012
      WHEN '2'
         CALL s_axmt400_xmev005_2(p_xmew003,g_xmev_m.xmev006)
              RETURNING l_success,r_xmew012
      WHEN '3'
         CALL s_axmt400_xmev005_3(p_xmew003,p_xmew004,p_xmew006,g_xmev_m.xmev006)
              RETURNING l_success,r_xmew012
      WHEN '4'
         CALL s_axmt400_xmev005_4(g_xmev_m.xmevdocdt,p_xmew003,g_xmev_m.xmev006)
              RETURNING l_success,r_xmew012
      WHEN '5'
         CALL s_axmt400_xmev005_5(p_xmew003,g_xmev_m.xmev006)
              RETURNING l_success,r_xmew012
      OTHERWISE EXIT CASE
   END CASE
   IF NOT l_success OR cl_null(r_xmew012) THEN LET r_xmew012 = 0 END IF

   IF NOT cl_null(p_xmew010) AND g_xmev_m.xmev006 <> p_xmew010 THEN
       #依採購幣別與估價幣別之匯率計算
       #2014/12/03 by stellar modify ----- (S)
#       CALL s_aooi160_get_exrate('1',g_site,g_today,g_xmew_d[l_ac].xmew010,g_xmev_m.xmev006,0,'11') RETURNING l_rate
       CALL axmt400_get_exrate(p_xmew010) RETURNING l_rate
       #2014/12/03 by stellar modify ----- (E)
       LET r_xmew014 = r_xmew012 * l_rate
    ELSE
       LET r_xmew014 = r_xmew012
    END IF
    CALL s_curr_round(g_site,g_xmev_m.xmev006,r_xmew014,'1') RETURNING r_xmew014
    CALL axmt400_xmew015(r_xmew014,p_xmew007,p_xmew008)
         RETURNING r_xmew015

   RETURN r_xmew012,r_xmew014,r_xmew015
END FUNCTION

################################################################################
# Descriptions...: 單別預設值
# Memo...........:
# Usage..........: CALL axmt400_doc_default()
# Input parameter: no
# Return code....: no
# Date & Author..: 140804 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt400_doc_default()
DEFINE l_success    LIKE type_t.num5
DEFINE l_oodb011    LIKE oodb_t.oodb011
   
   LET g_errshow = 0
   
   LET g_xmev_m.xmev001 = s_aooi200_get_doc_default(g_site,'1',g_xmev_m.xmevdocno,'xmev001',g_xmev_m.xmev001)
   LET g_xmev_m.xmev002 = s_aooi200_get_doc_default(g_site,'1',g_xmev_m.xmevdocno,'xmev002',g_xmev_m.xmev002)
   LET g_xmev_m.xmev003 = s_aooi200_get_doc_default(g_site,'1',g_xmev_m.xmevdocno,'xmev003',g_xmev_m.xmev003)
   LET g_xmev_m.xmev004 = s_aooi200_get_doc_default(g_site,'1',g_xmev_m.xmevdocno,'xmev004',g_xmev_m.xmev004)
   LET g_xmev_m.xmev005 = s_aooi200_get_doc_default(g_site,'1',g_xmev_m.xmevdocno,'xmev005',g_xmev_m.xmev005)
   LET g_xmev_m.xmev006 = s_aooi200_get_doc_default(g_site,'1',g_xmev_m.xmevdocno,'xmev006',g_xmev_m.xmev006)
   LET g_xmev_m.xmev007 = s_aooi200_get_doc_default(g_site,'1',g_xmev_m.xmevdocno,'xmev007',g_xmev_m.xmev007)
   LET g_xmev_m.xmev008 = s_aooi200_get_doc_default(g_site,'1',g_xmev_m.xmevdocno,'xmev008',g_xmev_m.xmev008)
   LET g_xmev_m.xmev009 = s_aooi200_get_doc_default(g_site,'1',g_xmev_m.xmevdocno,'xmev009',g_xmev_m.xmev009)
   LET g_xmev_m.xmev010 = s_aooi200_get_doc_default(g_site,'1',g_xmev_m.xmevdocno,'xmev010',g_xmev_m.xmev010)
   LET g_xmev_m.xmev011 = s_aooi200_get_doc_default(g_site,'1',g_xmev_m.xmevdocno,'xmev011',g_xmev_m.xmev011)
   LET g_xmev_m.xmev012 = s_aooi200_get_doc_default(g_site,'1',g_xmev_m.xmevdocno,'xmev012',g_xmev_m.xmev012)
   LET g_xmev_m.xmev013 = s_aooi200_get_doc_default(g_site,'1',g_xmev_m.xmevdocno,'xmev013',g_xmev_m.xmev013)
   LET g_xmev_m.xmev014 = s_aooi200_get_doc_default(g_site,'1',g_xmev_m.xmevdocno,'xmev014',g_xmev_m.xmev014)
   LET g_xmev_m.xmev015 = s_aooi200_get_doc_default(g_site,'1',g_xmev_m.xmevdocno,'xmev015',g_xmev_m.xmev015)
   LET g_xmev_m.xmev016 = s_aooi200_get_doc_default(g_site,'1',g_xmev_m.xmevdocno,'xmev016',g_xmev_m.xmev016)
   LET g_xmev_m.xmev017 = s_aooi200_get_doc_default(g_site,'1',g_xmev_m.xmevdocno,'xmev017',g_xmev_m.xmev017)
   LET g_xmev_m.xmev018 = s_aooi200_get_doc_default(g_site,'1',g_xmev_m.xmevdocno,'xmev018',g_xmev_m.xmev018)
   LET g_xmev_m.xmev019 = s_aooi200_get_doc_default(g_site,'1',g_xmev_m.xmevdocno,'xmev019',g_xmev_m.xmev019)

   CALL s_desc_get_person_desc(g_xmev_m.xmev001) RETURNING g_xmev_m.xmev001_desc
   DISPLAY BY NAME g_xmev_m.xmev001_desc
   
   IF NOT cl_null(g_xmev_m.xmev001) AND cl_null(g_xmev_m.xmev002) THEN
      SELECT ooag003 INTO g_xmev_m.xmev002 FROM ooag_t
       WHERE ooagent = g_enterprise AND ooag001 = g_xmev_m.xmev001
   END IF
   
   CALL s_desc_get_department_desc(g_xmev_m.xmev002) RETURNING g_xmev_m.xmev002_desc
   DISPLAY BY NAME g_xmev_m.xmev002_desc
   
   #CALL s_desc_get_trading_partner_full_desc(g_xmev_m.xmev003) RETURNING g_xmev_m.xmev003_desc  #161031-00023#1 MARK
   #161031-00023#1-s
   CALL axmt400_xmev003_get_desc()
   #161031-00023#1-e
   DISPLAY BY NAME g_xmev_m.xmev003_desc
   
   CALL axmt400_xmev004_ref()
   
   IF NOT cl_null(g_xmev_m.xmev006) THEN
      #2014/12/03 by stellar modify ----- (S)
#      CALL s_aooi160_get_exrate('1',g_site,g_today,g_xmev_m.xmev006,g_ooef016,0,'11') RETURNING g_xmev_m.xmev007
      CALL axmt400_get_exrate(g_xmev_m.xmev006) RETURNING g_xmev_m.xmev007
      #2014/12/03 by stellar modify ----- (E)
   END IF
   
   CALL s_desc_get_currency_desc(g_xmev_m.xmev006) RETURNING g_xmev_m.xmev006_desc
   DISPLAY BY NAME g_xmev_m.xmev006_desc
   
   IF NOT cl_null(g_xmev_m.xmev008) THEN
      CALL s_tax_chk(g_site,g_xmev_m.xmev008)
           RETURNING l_success,g_xmev_m.xmev008_desc,g_xmev_m.xmev010,g_xmev_m.xmev009,l_oodb011
      IF NOT l_success THEN
         LET g_xmev_m.xmev008 = g_xmev_m_o.xmev008
         LET g_xmev_m.xmev009 = g_xmev_m_o.xmev009
         LET g_xmev_m.xmev010 = g_xmev_m_o.xmev010
      END IF
   END IF
   
   CALL s_desc_get_tax_desc1(g_site,g_xmev_m.xmev008) RETURNING g_xmev_m.xmev008_desc
   DISPLAY BY NAME g_xmev_m.xmev008_desc
   
   IF NOT cl_null(g_xmev_m.xmev011) AND NOT cl_null(g_xmev_m.xmev012) THEN
      CALL s_aooi250_take_decimals(g_xmev_m.xmev012,g_xmev_m.xmev011) RETURNING l_success,g_xmev_m.xmev011
   END IF
   
   CALL s_desc_get_unit_desc(g_xmev_m.xmev012) RETURNING g_xmev_m.xmev012_desc
   DISPLAY BY NAME g_xmev_m.xmev012_desc

   CALL axmt400_xmev013_def()

   DISPLAY BY NAME g_xmev_m.xmev001,g_xmev_m.xmev002,g_xmev_m.xmev003,g_xmev_m.xmev004,g_xmev_m.xmev005,
                   g_xmev_m.xmev006,g_xmev_m.xmev007,g_xmev_m.xmev008,g_xmev_m.xmev009,g_xmev_m.xmev010,
                   g_xmev_m.xmev011,g_xmev_m.xmev012,g_xmev_m.xmev013,g_xmev_m.xmev014,g_xmev_m.xmev015,
                   g_xmev_m.xmev016,g_xmev_m.xmev017,g_xmev_m.xmev018,g_xmev_m.xmev019
                   
   LET g_xmev_m_o.* = g_xmev_m.*
   
   LET g_errshow = 1   #2015/03/05 by stellar add

END FUNCTION

################################################################################
# Descriptions...: 預設有效日期
# Memo...........:
# Usage..........: CALL axmt400_xmev013_def()
# Input parameter: no
# Return code....: no
# Date & Author..: 140807 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt400_xmev013_def()
DEFINE l_success    LIKE type_t.num5
DEFINE l_mm         LIKE type_t.num5
DEFINE l_slip       LIKE ooba_t.ooba002

   CALL s_aooi200_get_slip(g_xmev_m.xmevdocno) RETURNING l_success,l_slip
   CALL cl_get_doc_para(g_enterprise,g_site,l_slip,'D-BAS-0080') RETURNING l_mm
   CALL s_date_get_date(g_xmev_m.xmevdocdt,l_mm,0) RETURNING g_xmev_m.xmev013

   DISPLAY BY NAME g_xmev_m.xmev013

END FUNCTION

################################################################################
# Descriptions...: 取得匯率
# Memo...........:
# Usage..........: CALL axmt400_get_exrate(p_curr)
#                  RETURNING r_rate
# Input parameter: p_curr         幣別
# Return code....: r_rate         匯率
# Date & Author..: 2014/12/03 By stellar
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt400_get_exrate(p_curr)
DEFINE p_curr            LIKE xmev_t.xmev006
DEFINE r_rate            LIKE xmev_t.xmev007
DEFINE l_ooef016         LIKE ooef_t.ooef016
DEFINE l_ooab002         LIKE ooab_t.ooab002

   LET r_rate = 0
   
   IF NOT cl_null(p_curr) THEN
      LET l_ooef016 = ''
      SELECT ooef016 INTO l_ooef016
        FROM ooef_t
       WHERE ooefent = g_enterprise
         AND ooef001 = g_site
         
      CALL cl_get_para(g_enterprise,g_site,'S-BAS-0010') RETURNING l_ooab002
      CALL s_aooi160_get_exrate('1',g_site,g_today,p_curr,l_ooef016,0,l_ooab002)
           RETURNING r_rate
   END IF
   
   RETURN r_rate
END FUNCTION

################################################################################
# Descriptions...: 自動帶入axmi390設定的資料
# Memo...........:
# Usage..........: CALL axmt400_axmi390_default()
# Input parameter: no
# Return code....: no
# Date & Author..: 150424 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt400_axmi390_default()

   IF cl_null(g_xmev_m.xmevdocdt) OR
      cl_null(g_xmev_m.xmev006) OR
      cl_null(g_xmew2_d[l_ac].xmex004) OR
      cl_null(g_xmew2_d[l_ac].xmex006) THEN
      RETURN
   END IF
   
#   LET g_xmew2_d[l_ac].xmex009 = '1'                                                #160229-00019#1 mark
   IF cl_null(g_xmew2_d[l_ac].xmex009) THEN LET g_xmew2_d[l_ac].xmex009 = '1' END IF #160229-00019#1
   LET g_xmew2_d[l_ac].xmex010 = '0'
   LET g_xmew2_d[l_ac].xmex011 = '0'
#160229-00019#1---begin
#   SELECT xmer004,xmer005,xmer006
#     INTO g_xmew2_d[l_ac].xmex009,g_xmew2_d[l_ac].xmex010,g_xmew2_d[l_ac].xmex011
#     FROM xmer_t
#    WHERE xmerent = g_enterprise
#      AND xmersite = g_site
#      AND xmerdocdt = g_xmev_m.xmevdocdt
#      AND xmer001 = g_xmev_m.xmev006
#      AND xmer002 = g_xmew2_d[l_ac].xmex004
#      AND xmer003 = g_xmew2_d[l_ac].xmex006
   SELECT xmer005,xmer006
     INTO g_xmew2_d[l_ac].xmex010,g_xmew2_d[l_ac].xmex011
     FROM xmer_t
    WHERE xmerent = g_enterprise
      AND xmersite = g_site
      AND xmerdocdt = g_xmev_m.xmevdocdt
      AND xmer001 = g_xmev_m.xmev006
      AND xmer002 = g_xmew2_d[l_ac].xmex004
      AND xmer003 = g_xmew2_d[l_ac].xmex006
      AND xmer004 = g_xmew2_d[l_ac].xmex009
      AND xmerstus = 'Y'
   IF SQLCA.SQLCODE = 100 THEN
      CASE g_xmew2_d[l_ac].xmex009
         WHEN 1  #分钟
            SELECT xmer005/60,xmer006/60
              INTO g_xmew2_d[l_ac].xmex010,g_xmew2_d[l_ac].xmex011
              FROM xmer_t
             WHERE xmerent = g_enterprise
               AND xmersite = g_site
               AND xmerdocdt = g_xmev_m.xmevdocdt
               AND xmer001 = g_xmev_m.xmev006
               AND xmer002 = g_xmew2_d[l_ac].xmex004
               AND xmer003 = g_xmew2_d[l_ac].xmex006
               AND xmer004 = 2         
         WHEN 2  #小时
            SELECT xmer005*60,xmer006*60
              INTO g_xmew2_d[l_ac].xmex010,g_xmew2_d[l_ac].xmex011
              FROM xmer_t
             WHERE xmerent = g_enterprise
               AND xmersite = g_site
               AND xmerdocdt = g_xmev_m.xmevdocdt
               AND xmer001 = g_xmev_m.xmev006
               AND xmer002 = g_xmew2_d[l_ac].xmex004
               AND xmer003 = g_xmew2_d[l_ac].xmex006
               AND xmer004 = 1          
      END CASE
   END IF
#160229-00019#1---end 
   LET g_xmew2_d_o.xmex009 = g_xmew2_d[l_ac].xmex009
   LET g_xmew2_d_o.xmex010 = g_xmew2_d[l_ac].xmex010
   LET g_xmew2_d_o.xmex011 = g_xmew2_d[l_ac].xmex011
   
#160902-00002#1-s add
#修改了工時單位後,有重帶單位工資與單位製費,漏了重算工資單價與製費單價
   LET g_xmew2_d[l_ac].xmex012 = g_xmew2_d[l_ac].xmex007 * g_xmew2_d[l_ac].xmex010
   CALL s_curr_round(g_site,g_xmev_m.xmev006,g_xmew2_d[l_ac].xmex012,'1') RETURNING g_xmew2_d[l_ac].xmex012
   LET g_xmew2_d[l_ac].xmex013 = g_xmew2_d[l_ac].xmex008 * g_xmew2_d[l_ac].xmex011
   CALL s_curr_round(g_site,g_xmev_m.xmev006,g_xmew2_d[l_ac].xmex013,'1') RETURNING g_xmew2_d[l_ac].xmex013
   LET g_xmew2_d_o.xmex012 = g_xmew2_d[l_ac].xmex012
   LET g_xmew2_d_o.xmex013 = g_xmew2_d[l_ac].xmex013   
#160902-00002#1-e add

END FUNCTION
################################################################################
# Descriptions...: 展BOM
# Memo...........:
# Usage..........: CALL axmt400_item_bom(p_item)
# Input parameter: p_item   展BOM料號
# Date & Author..: 2015/07/20 By shiun
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt400_item_bom(p_item)
DEFINE p_item     LIKE bmaa_t.bmaa001
DEFINE l_sql      STRING
DEFINE l_sql_2    STRING
DEFINE l_ac       LIKE type_t.num5
DEFINE l_count    LIKE type_t.num5
DEFINE l_bmbalen  LIKE type_t.num5
DEFINE l_bmba     DYNAMIC ARRAY OF RECORD
       bmbaent    LIKE bmba_t.bmbaent,
       bmbasite   LIKE bmba_t.bmbasite,
       bmba001    LIKE bmba_t.bmba001,
       bmba002    LIKE bmba_t.bmba002,
       bmba003    LIKE bmba_t.bmba003,
       bmba004    LIKE bmba_t.bmba004,
       bmba005    DATETIME YEAR TO SECOND,
       bmba007    LIKE bmba_t.bmba007,
       bmba008    LIKE bmba_t.bmba008,
       bmba009    LIKE type_t.chr10,
       bmba010    LIKE bmba_t.bmba010,
       bmba011    LIKE bmba_t.bmba011,
       bmba012    LIKE bmba_t.bmba012,
       bmbc010    LIKE type_t.chr1000,
       ooff013    LIKE type_t.chr1000,
       l_ac       LIKE type_t.num5
END RECORD
DEFINE l_bmba005  DATETIME YEAR TO SECOND     #有效日期
   
   LET l_bmba005 = cl_get_current()
   LET l_sql = " SELECT bmbaent,bmbasite,bmba001,bmba002,bmba003,bmba004,bmba005,bmba007,bmba008,bmba009,bmba010,bmba011,bmba012",
               "   FROM bmba_t ",
               "  WHERE bmbaent = ",g_enterprise,
               "    AND bmbasite = '",g_site,"'",
               "    AND bmba001 = '",p_item,"'",
               "    AND bmba002 = ' '",
               "    AND to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') < '",l_bmba005,"'",
               "    AND (to_char(bmba006,'yyyy-mm-dd hh24:mi:ss') >= '",l_bmba005,"' OR bmba006 IS NULL)",
               "  ORDER BY bmba009"
     PREPARE axmt400_prepare_bom FROM l_sql
     DECLARE axmt400_bom CURSOR FOR axmt400_prepare_bom
     LET l_ac = l_ac + 1
     FOREACH axmt400_bom INTO l_bmba[l_ac].*
        IF STATUS THEN
           INITIALIZE g_errparam TO NULL
           LET g_errparam.extend = 'foreach:'
           LET g_errparam.code   = STATUS
           LET g_errparam.popup  = TRUE
           CALL cl_err()
           EXIT FOREACH
        END IF
        LET l_ac = l_ac + 1
     END FOREACH
     
     LET l_bmbalen = l_bmba.getLength() - 1
     IF l_bmbalen < 0 THEN
        LET l_bmbalen = 0
     END IF
     
     FOR l_ac = 1 TO l_bmbalen        
         LET l_sql_2 = " SELECT COUNT(*) ",
                       "   FROM bmba_t ",
                       " WHERE bmbaent = '",l_bmba[l_ac].bmbaent,"' ",
                       " AND bmbasite = '",l_bmba[l_ac].bmbasite,"' ",
                       " AND bmba001 = '",l_bmba[l_ac].bmba003,"' ",
                       " AND bmba002 = '",l_bmba[l_ac].bmba002,"' ",
                       " AND to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') < '",l_bmba005,"'",
                       " AND (to_char(bmba006,'yyyy-mm-dd hh24:mi:ss') >= '",l_bmba005,"' OR bmba006 IS NULL)"
         PREPARE axmt400_count FROM l_sql_2
         EXECUTE axmt400_count INTO l_count
         IF NOT l_count THEN
            LET g_bmba[g_item_ac].* = l_bmba[l_ac].*
            LET g_item_ac = g_item_ac + 1
         END IF         
         
         IF NOT cl_null(l_bmba[l_ac].bmba003) THEN
             CALL axmt400_item_bom(l_bmba[l_ac].bmba003)
         END IF
     END FOR
END FUNCTION
################################################################################
# Descriptions...: bom資料寫入單身
# Memo...........:
# Usage..........: axmt400_xmew_ins(p_xmevdocno)
# Input parameter: p_xmevdocno   單號
# Return code....: r_success     成功否
# Date & Author..: 2015/07/20 By shiun
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt400_xmew_ins(p_xmevdocno)
DEFINE p_xmevdocno   LIKE xmev_t.xmevdocno
DEFINE r_success     LIKE type_t.num5
DEFINE l_sql         STRING
DEFINE l_bmbalen     LIKE type_t.num5
DEFINE l_ac          LIKE type_t.num5
DEFINE l_count       LIKE type_t.num5
DEFINE l_seq         LIKE type_t.num5
   
   LET r_success = TRUE
   DELETE FROM xmew_t
    WHERE xmewent = g_enterprise
      AND xmewsite = g_site
      AND xmewdocno = p_xmevdocno
      
   LET l_bmbalen = g_bmba.getLength()
   IF l_bmbalen < 0 THEN
      LET l_bmbalen = 0
   END IF
   
   LET l_sql = " INSERT INTO xmew_t(xmewent,xmewsite,xmewdocno,xmewseq,xmew001,",
                  "                    xmew002,xmew003,xmew006,xmew007,xmew008,xmew009)",
                  "             VALUES(?,?,?,?,?, ?,?,?,?,?, ?) "
   PREPARE insert_xmew FROM l_sql
   
   FOR l_ac = 1 TO l_bmbalen
      LET l_seq = l_ac * 1000
      
      EXECUTE insert_xmew USING g_enterprise,g_site,p_xmevdocno,l_seq,g_bmba[l_ac].bmba004,g_bmba[l_ac].bmba007,
                                g_bmba[l_ac].bmba003,g_bmba[l_ac].bmba010,g_bmba[l_ac].bmba011,g_bmba[l_ac].bmba012,'N'
      IF SQLCA.sqlcode THEN
         LET g_errno = SQLCA.sqlcode
         LET r_success = FALSE
         EXIT FOR
      END IF
   END FOR
   
   RETURN r_success
END FUNCTION
################################################################################
# Descriptions...: bom資料寫入單身
# Memo...........:
# Usage..........: axmt400_xmex_ins(p_xmevdocno,p_xmev004)
# Input parameter: p_xmevdocno   單號
#                : p_xmev004     料號
# Return code....: r_success     成功否
# Date & Author..: 2015/07/20 By shiun
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt400_xmex_ins(p_xmevdocno,p_xmev004)
DEFINE p_xmevdocno   LIKE xmev_t.xmevdocno
DEFINE p_xmev004     LIKE xmev_t.xmev004
DEFINE r_success     LIKE type_t.num5
DEFINE l_sql         STRING
DEFINE l_sql_ins     STRING
DEFINE l_imae032     LIKE imae_t.imae032
DEFINE l_imae033     LIKE imae_t.imae033
#161109-00085#5-mod-s
#DEFINE l_ecbb   RECORD LIKE ecbb_t.*   #161109-00085#5   mark
DEFINE l_ecbb        RECORD  #料件製程單身檔
       ecbbent LIKE ecbb_t.ecbbent, #企業編號
       ecbbsite LIKE ecbb_t.ecbbsite, #營運據點
       ecbb001 LIKE ecbb_t.ecbb001, #製程料號
       ecbb002 LIKE ecbb_t.ecbb002, #製程編號
       ecbb003 LIKE ecbb_t.ecbb003, #項次
       ecbb004 LIKE ecbb_t.ecbb004, #本站作業
       ecbb005 LIKE ecbb_t.ecbb005, #作業序
       ecbb006 LIKE ecbb_t.ecbb006, #群組性質
       ecbb007 LIKE ecbb_t.ecbb007, #群組
       ecbb008 LIKE ecbb_t.ecbb008, #上站作業
       ecbb009 LIKE ecbb_t.ecbb009, #上站作業序
       ecbb010 LIKE ecbb_t.ecbb010, #下站作業
       ecbb011 LIKE ecbb_t.ecbb011, #下站作業序
       ecbb012 LIKE ecbb_t.ecbb012, #工作站
       ecbb013 LIKE ecbb_t.ecbb013, #允許委外
       ecbb014 LIKE ecbb_t.ecbb014, #主要加工廠
       ecbb015 LIKE ecbb_t.ecbb015, #Move in
       ecbb016 LIKE ecbb_t.ecbb016, #Check in
       ecbb017 LIKE ecbb_t.ecbb017, #報工站
       ecbb018 LIKE ecbb_t.ecbb018, #PQC
       ecbb019 LIKE ecbb_t.ecbb019, #Check out
       ecbb020 LIKE ecbb_t.ecbb020, #Move out
       ecbb021 LIKE ecbb_t.ecbb021, #轉出單位
       ecbb022 LIKE ecbb_t.ecbb022, #轉出單位轉換率分子
       ecbb023 LIKE ecbb_t.ecbb023, #轉出單位轉換率分母
       ecbb024 LIKE ecbb_t.ecbb024, #固定工時
       ecbb025 LIKE ecbb_t.ecbb025, #標準工時
       ecbb026 LIKE ecbb_t.ecbb026, #固定機時
       ecbb027 LIKE ecbb_t.ecbb027, #標準機時
       ecbb028 LIKE ecbb_t.ecbb028, #完成度
       ecbb029 LIKE ecbb_t.ecbb029, #標準單價
       ecbb030 LIKE ecbb_t.ecbb030, #轉入單位
       ecbb031 LIKE ecbb_t.ecbb031, #轉入單位轉換分子
       ecbb032 LIKE ecbb_t.ecbb032, #轉入單位轉換分母
       ecbb033 LIKE ecbb_t.ecbb033, #回收站
       ecbb034 LIKE ecbb_t.ecbb034, #後置時間
       ecbb035 LIKE ecbb_t.ecbb035, #X軸
       ecbb036 LIKE ecbb_t.ecbb036, #Y軸
       ecbb037 LIKE ecbb_t.ecbb037, #資源群組
       #161109-00085#69 --s add
       ecbbud001 LIKE ecbb_t.ecbbud001, #自定義欄位(文字)001
       ecbbud002 LIKE ecbb_t.ecbbud002, #自定義欄位(文字)002
       ecbbud003 LIKE ecbb_t.ecbbud003, #自定義欄位(文字)003
       ecbbud004 LIKE ecbb_t.ecbbud004, #自定義欄位(文字)004
       ecbbud005 LIKE ecbb_t.ecbbud005, #自定義欄位(文字)005
       ecbbud006 LIKE ecbb_t.ecbbud006, #自定義欄位(文字)006
       ecbbud007 LIKE ecbb_t.ecbbud007, #自定義欄位(文字)007
       ecbbud008 LIKE ecbb_t.ecbbud008, #自定義欄位(文字)008
       ecbbud009 LIKE ecbb_t.ecbbud009, #自定義欄位(文字)009
       ecbbud010 LIKE ecbb_t.ecbbud010, #自定義欄位(文字)010
       ecbbud011 LIKE ecbb_t.ecbbud011, #自定義欄位(數字)011
       ecbbud012 LIKE ecbb_t.ecbbud012, #自定義欄位(數字)012
       ecbbud013 LIKE ecbb_t.ecbbud013, #自定義欄位(數字)013
       ecbbud014 LIKE ecbb_t.ecbbud014, #自定義欄位(數字)014
       ecbbud015 LIKE ecbb_t.ecbbud015, #自定義欄位(數字)015
       ecbbud016 LIKE ecbb_t.ecbbud016, #自定義欄位(數字)016
       ecbbud017 LIKE ecbb_t.ecbbud017, #自定義欄位(數字)017
       ecbbud018 LIKE ecbb_t.ecbbud018, #自定義欄位(數字)018
       ecbbud019 LIKE ecbb_t.ecbbud019, #自定義欄位(數字)019
       ecbbud020 LIKE ecbb_t.ecbbud020, #自定義欄位(數字)020
       ecbbud021 LIKE ecbb_t.ecbbud021, #自定義欄位(日期時間)021
       ecbbud022 LIKE ecbb_t.ecbbud022, #自定義欄位(日期時間)022
       ecbbud023 LIKE ecbb_t.ecbbud023, #自定義欄位(日期時間)023
       ecbbud024 LIKE ecbb_t.ecbbud024, #自定義欄位(日期時間)024
       ecbbud025 LIKE ecbb_t.ecbbud025, #自定義欄位(日期時間)025
       ecbbud026 LIKE ecbb_t.ecbbud026, #自定義欄位(日期時間)026
       ecbbud027 LIKE ecbb_t.ecbbud027, #自定義欄位(日期時間)027
       ecbbud028 LIKE ecbb_t.ecbbud028, #自定義欄位(日期時間)028
       ecbbud029 LIKE ecbb_t.ecbbud029, #自定義欄位(日期時間)029
       ecbbud030 LIKE ecbb_t.ecbbud030, #自定義欄位(日期時間)030
       #161109-00085#69 --e add
       ecbb038 LIKE ecbb_t.ecbb038 #工具群組
          END RECORD
#161109-00085#5-mod-e

DEFINE l_ooff013     LIKE ooff_t.ooff013
DEFINE l_success     LIKE type_t.num5
DEFINE l_xmexseq     LIKE xmex_t.xmexseq

   LET r_success = TRUE
   
   DELETE FROM xmex_t
    WHERE xmexent = g_enterprise
      AND xmexsite = g_site
      AND xmexdocno = p_xmevdocno
   
   SELECT imae032,imae033 INTO l_imae032,l_imae033
     FROM imae_t
    WHERE imaeent = g_enterprise
      AND imaesite = g_site
      AND imae001 = p_xmev004
      
   IF NOT cl_null(l_imae032) AND NOT cl_null(l_imae033) THEN
      #161109-00085#11-mod-s
#      LET l_sql = " SELECT * ",   #161109-00085#11   mark
      #161109-00085#69 --s mark
      #LET l_sql = " SELECT ecbbent,ecbbsite,ecbb001,ecbb002,ecbb003,ecbb004,ecbb005,ecbb006,ecbb007,ecbb008,
      #                     ecbb009,ecbb010,ecbb011,ecbb012,ecbb013,ecbb014,ecbb015,ecbb016,ecbb017,ecbb018,
      #                     ecbb019,ecbb020,ecbb021,ecbb022,ecbb023,ecbb024,ecbb025,ecbb026,ecbb027,ecbb028,
      #                     ecbb029,ecbb030,ecbb031,ecbb032,ecbb033,ecbb034,ecbb035,ecbb036,ecbb037,ecbb038 ",
      #161109-00085#69 --e mark
      #161109-00085#69 --s add
      LET l_sql = " SELECT ecbbent,ecbbsite,ecbb001,ecbb002,ecbb003, ",
                  "        ecbb004,ecbb005,ecbb006,ecbb007,ecbb008, ",
                  "        ecbb009,ecbb010,ecbb011,ecbb012,ecbb013, ",
                  "        ecbb014,ecbb015,ecbb016,ecbb017,ecbb018, ",
                  "        ecbb019,ecbb020,ecbb021,ecbb022,ecbb023, ",
                  "        ecbb024,ecbb025,ecbb026,ecbb027,ecbb028, ",
                  "        ecbb029,ecbb030,ecbb031,ecbb032,ecbb033, ",
                  "        ecbb034,ecbb035,ecbb036,ecbb037,ecbbud001, ",
                  "        ecbbud002,ecbbud003,ecbbud004,ecbbud005,ecbbud006, ",
                  "        ecbbud007,ecbbud008,ecbbud009,ecbbud010,ecbbud011, ",
                  "        ecbbud012,ecbbud013,ecbbud014,ecbbud015,ecbbud016, ",
                  "        ecbbud017,ecbbud018,ecbbud019,ecbbud020,ecbbud021, ",
                  "        ecbbud022,ecbbud023,ecbbud024,ecbbud025,ecbbud026, ",
                  "        ecbbud027,ecbbud028,ecbbud029,ecbbud030,ecbb038 ",
      #161109-00085#69 --e add
                  "   FROM ecbb_t ",
                  "  WHERE ecbbent = ",g_enterprise,
                  "   AND ecbbsite = '",g_site,"' ",
                  "   AND ecbb001 = '",l_imae032,"' ",
                  "   AND ecbb002 = '",l_imae033,"' "
      #161109-00085#11-mod-e
      PREPARE axmt400_eccb FROM l_sql
      DECLARE axmt400_ins CURSOR FOR axmt400_eccb
      
      LET l_sql_ins = " INSERT INTO xmex_t(xmexent,xmexsite,xmexdocno,xmexseq,xmex003,xmex004, ",
                         "                 xmex005,xmex006,xmex007,xmex008,xmex009,xmex014)",
                         "             VALUES(?,?,?,?,?, ?,?,?,?,?, ?,?) "
      PREPARE insert_xmeu FROM l_sql_ins
      LET l_xmexseq = 1
       #161109-00085#11-mod-s
#       FOREACH axmt400_ins INTO l_ecbb.*   #161109-00085#11   mark
       #161109-00085#69 --s mark
       #FOREACH axmt400_ins INTO l_ecbb.ecbbent,l_ecbb.ecbbsite,l_ecbb.ecbb001,l_ecbb.ecbb002,l_ecbb.ecbb003,
       #                         l_ecbb.ecbb004,l_ecbb.ecbb005,l_ecbb.ecbb006,l_ecbb.ecbb007,l_ecbb.ecbb008,
       #                         l_ecbb.ecbb009,l_ecbb.ecbb010,l_ecbb.ecbb011,l_ecbb.ecbb012,l_ecbb.ecbb013,
       #                         l_ecbb.ecbb014,l_ecbb.ecbb015,l_ecbb.ecbb016,l_ecbb.ecbb017,l_ecbb.ecbb018,
       #                         l_ecbb.ecbb019,l_ecbb.ecbb020,l_ecbb.ecbb021,l_ecbb.ecbb022,l_ecbb.ecbb023,
       #                         l_ecbb.ecbb024,l_ecbb.ecbb025,l_ecbb.ecbb026,l_ecbb.ecbb027,l_ecbb.ecbb028,
       #                         l_ecbb.ecbb029,l_ecbb.ecbb030,l_ecbb.ecbb031,l_ecbb.ecbb032,l_ecbb.ecbb033,
       #                         l_ecbb.ecbb034,l_ecbb.ecbb035,l_ecbb.ecbb036,l_ecbb.ecbb037,l_ecbb.ecbb038
       #161109-00085#69 --e mark
       #161109-00085#69 --s add
       FOREACH axmt400_ins INTO l_ecbb.ecbbent,l_ecbb.ecbbsite,l_ecbb.ecbb001,l_ecbb.ecbb002,l_ecbb.ecbb003,
                                l_ecbb.ecbb004,l_ecbb.ecbb005,l_ecbb.ecbb006,l_ecbb.ecbb007,l_ecbb.ecbb008,
                                l_ecbb.ecbb009,l_ecbb.ecbb010,l_ecbb.ecbb011,l_ecbb.ecbb012,l_ecbb.ecbb013,
                                l_ecbb.ecbb014,l_ecbb.ecbb015,l_ecbb.ecbb016,l_ecbb.ecbb017,l_ecbb.ecbb018,
                                l_ecbb.ecbb019,l_ecbb.ecbb020,l_ecbb.ecbb021,l_ecbb.ecbb022,l_ecbb.ecbb023,
                                l_ecbb.ecbb024,l_ecbb.ecbb025,l_ecbb.ecbb026,l_ecbb.ecbb027,l_ecbb.ecbb028,
                                l_ecbb.ecbb029,l_ecbb.ecbb030,l_ecbb.ecbb031,l_ecbb.ecbb032,l_ecbb.ecbb033,
                                l_ecbb.ecbb034,l_ecbb.ecbb035,l_ecbb.ecbb036,l_ecbb.ecbb037,l_ecbb.ecbbud001,
                                l_ecbb.ecbbud002,l_ecbb.ecbbud003,l_ecbb.ecbbud004,l_ecbb.ecbbud005,l_ecbb.ecbbud006,
                                l_ecbb.ecbbud007,l_ecbb.ecbbud008,l_ecbb.ecbbud009,l_ecbb.ecbbud010,l_ecbb.ecbbud011,
                                l_ecbb.ecbbud012,l_ecbb.ecbbud013,l_ecbb.ecbbud014,l_ecbb.ecbbud015,l_ecbb.ecbbud016,
                                l_ecbb.ecbbud017,l_ecbb.ecbbud018,l_ecbb.ecbbud019,l_ecbb.ecbbud020,l_ecbb.ecbbud021,
                                l_ecbb.ecbbud022,l_ecbb.ecbbud023,l_ecbb.ecbbud024,l_ecbb.ecbbud025,l_ecbb.ecbbud026,
                                l_ecbb.ecbbud027,l_ecbb.ecbbud028,l_ecbb.ecbbud029,l_ecbb.ecbbud030,l_ecbb.ecbb038
       #161109-00085#69 --e add
         #161109-00085#11-mod-e
         CALL s_aooi360_sel('7',g_site,l_imae032,l_imae033,l_ecbb.ecbb003,'','','','','','','4') RETURNING l_success,l_ooff013
         EXECUTE insert_xmeu USING g_enterprise,g_site,p_xmevdocno,l_xmexseq,l_ecbb.ecbb003,l_ecbb.ecbb004,
                                   l_ecbb.ecbb005,l_ecbb.ecbb012,l_ecbb.ecbb025,l_ecbb.ecbb027,'1',l_ooff013
         IF SQLCA.sqlcode THEN
            LET g_errno = SQLCA.sqlcode
            LET r_success = FALSE
            EXIT FOREACH
         END IF
         LET l_xmexseq = l_xmexseq + 1
      END FOREACH
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 單身更新(action)
# Memo...........:
# Usage..........: CALL axmt400_detail_upd()
# Date & Author..: 2015/07/16 By shiun
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt400_detail_upd()

   CALL s_transaction_begin()
   OPEN axmt400_cl USING g_enterprise,g_xmev_m.xmevdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axmt400_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE axmt400_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   IF cl_ask_confirm('axm-00702') THEN
      LET g_item_ac = 1
      INITIALIZE g_bmba TO NULL
      CALL axmt400_item_bom(g_xmev_m.xmev004)
      IF axmt400_xmew_ins(g_xmev_m.xmevdocno) THEN
         IF axmt400_xmex_ins(g_xmev_m.xmevdocno,g_xmev_m.xmev004) THEN
            CALL s_transaction_end('Y','0')
         ELSE
            CALL s_transaction_end('N','0')
         END IF
      ELSE
         CALL s_transaction_end('N','0')                        
      END IF                        
   END IF
   
   CALL axmt400_b_fill()
END FUNCTION

################################################################################
# Descriptions...: 判斷一次性交易對象說明
# Memo...........:
# Usage..........: CALL axmt400_xmev003_get_desc()
#                  RETURNING g_xmev_m.xmev003_desc
# Date & Author..:#161031-00023#1 2016/01/06 By 08992
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt400_xmev003_get_desc()

   LET g_pmak003 = '' 
   
   SELECT pmak003 INTO g_pmak003 FROM pmak_t 
    WHERE pmakent = g_enterprise AND pmak001 = g_xmev_m.xmev020  
   
   IF cl_null(g_pmak003) THEN
      CALL s_desc_get_trading_partner_full_desc(g_xmev_m.xmev003) RETURNING g_xmev_m.xmev003_desc
   ELSE
      LET g_xmev_m.xmev003_desc = g_pmak003
   END IF

END FUNCTION

#161031-00025#18 add
#維護備註單身
PRIVATE FUNCTION axmt400_remaks()
DEFINE l_sql      STRING

   IF g_xmev_m.xmevdocno IS NULL THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()
      RETURN
   END IF
       
   CALL s_transaction_begin()
   
   OPEN axmt400_cl USING g_enterprise,g_xmev_m.xmevdocno

   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code =  STATUS
      LET g_errparam.extend = "OPEN axmt400_cl:"
      LET g_errparam.popup = TRUE
      CALL cl_err()
      CLOSE axmt400_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #鎖住將被更改的資料
   FETCH axmt400_cl INTO g_xmev_m.xmevdocno,g_xmev_m.xmevdocno_desc,g_xmev_m.xmevdocdt,g_xmev_m.xmevsite,g_xmev_m.xmev001, 
       g_xmev_m.xmev001_desc,g_xmev_m.xmev002,g_xmev_m.xmev002_desc,g_xmev_m.xmevstus,g_xmev_m.xmev003, 
       g_xmev_m.xmev003_desc,g_xmev_m.xmev004,g_xmev_m.xmev004_desc,g_xmev_m.xmev019,g_xmev_m.xmev020, 
       g_xmev_m.xmev005,g_xmev_m.xmev006,g_xmev_m.xmev006_desc,g_xmev_m.xmev007,g_xmev_m.xmev008,g_xmev_m.xmev008_desc, 
       g_xmev_m.xmev009,g_xmev_m.xmev010,g_xmev_m.xmev011,g_xmev_m.xmev012,g_xmev_m.xmev012_desc,g_xmev_m.xmev013, 
       g_xmev_m.xmevownid,g_xmev_m.xmevownid_desc,g_xmev_m.xmevowndp,g_xmev_m.xmevowndp_desc,g_xmev_m.xmevcrtid, 
       g_xmev_m.xmevcrtid_desc,g_xmev_m.xmevcrtdp,g_xmev_m.xmevcrtdp_desc,g_xmev_m.xmevcrtdt,g_xmev_m.xmevmodid, 
       g_xmev_m.xmevmodid_desc,g_xmev_m.xmevmoddt,g_xmev_m.xmevcnfid,g_xmev_m.xmevcnfid_desc,g_xmev_m.xmevcnfdt, 
       g_xmev_m.xmev014,g_xmev_m.xmev015,g_xmev_m.xmev016,g_xmev_m.xmev017,g_xmev_m.xmev018   
       
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = g_xmev_m.xmevdocno 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CLOSE axmt400_cl
      CALL s_transaction_end('N','0')
      RETURN 
   END IF
 
   #檢查是否允許此動作
   IF NOT axmt400_action_chk() THEN
      CLOSE axmt400_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   LET g_detail_insert = cl_auth_detail_input("insert")
   LET g_detail_delete = cl_auth_detail_input("delete")
   
   LET g_ooff001_d = '6'   #6.單據單頭備註
   LET g_ooff002_d = g_prog   
   LET g_ooff003_d = g_xmev_m.xmevdocno   #单号  
   LET g_ooff004_d = '0'    #项次
   LET g_ooff005_d = ' '
   LET g_ooff006_d = ' '
   LET g_ooff007_d = ' '
   LET g_ooff008_d = ' '
   LET g_ooff009_d = ' '
   LET g_ooff010_d = ' '
   LET g_ooff011_d = ' '
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      SUBDIALOG aoo_aooi360_01.aooi360_01_input   #备注单身
      
      ON ACTION accept  
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄) 
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   CLOSE axmt400_cl
   
   CALL s_transaction_end('Y','0')
   
   CALL aooi360_01_b_fill(g_ooff001_d,g_ooff002_d,g_ooff003_d,g_ooff004_d,g_ooff005_d,g_ooff006_d,g_ooff007_d,g_ooff008_d,g_ooff009_d,g_ooff010_d,g_ooff011_d)   #备注单身 
END FUNCTION

 
{</section>}
 
