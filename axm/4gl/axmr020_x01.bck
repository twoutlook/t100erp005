#該程式未解開Section, 採用最新樣板產出!
{<section id="axmr020_x01.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:1(2015-10-11 13:44:03), PR版次:0001(2015-10-08 10:53:52)
#+ Customerized Version.: SD版次:(), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000031
#+ Filename...: axmr020_x01
#+ Description: 訂單出貨比(BB Ratio)報表
#+ Creator....: 07024(2015-09-25 17:04:19)
#+ Modifier...: 07024 -SD/PR- 07024
 
{</section>}
 
{<section id="axmr020_x01.global" readonly="Y" >}
#報表 x01 樣板自動產生(Version:7)
#add-point:填寫註解說明

#end add-point
#add-point:填寫註解說明

#end add-point
 
IMPORT os
#add-point:增加匯入項目 name="global.import"

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
DEFINE tm RECORD
       wc STRING,                  #where condition 
       wc1 STRING                   #where condition
       END RECORD
 
DEFINE g_str           STRING,                      #列印條件回傳值              
       g_sql           STRING  
 
#add-point:自定義環境變數(Global Variable)(客製用) name="global.variable_customerization"

#end add-point
#add-point:自定義環境變數(Global Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"

#end add-point
 
{</section>}
 
{<section id="axmr020_x01.main" readonly="Y" >}
PUBLIC FUNCTION axmr020_x01(p_arg1,p_arg2)
DEFINE  p_arg1 STRING                  #tm.wc  where condition 
DEFINE  p_arg2 STRING                  #tm.wc1  where condition
#add-point:init段define(客製用) name="component.define_customerization"

#end add-point
#add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="component.define"

#end add-point
 
   LET tm.wc = p_arg1
   LET tm.wc1 = p_arg2
 
   #add-point:報表元件參數準備 name="component.arg.prep"
   
   #end add-point
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'
   
   #報表元件代號      
   LET g_rep_code = "axmr020_x01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #create 暫存檔
   CALL axmr020_x01_create_tmptable()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #報表select欄位準備
   CALL axmr020_x01_sel_prep()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #報表insert的prepare
   CALL axmr020_x01_ins_prep()  
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #將資料存入tmptable
   CALL axmr020_x01_ins_data() 
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #將tmptable資料印出
   CALL axmr020_x01_rep_data()
 
END FUNCTION
 
{</section>}
 
{<section id="axmr020_x01.create_tmptable" readonly="Y" >}
PRIVATE FUNCTION axmr020_x01_create_tmptable()
 
   #清除temptable 陣列
   CALL g_rep_tmpname.clear()
   
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.before name="create_tmp.before"
   
   #end add-point:create_tmp.before
 
   #主報表TEMP TABLE的欄位SQL   
   LET g_sql = "xmdc001.xmdc_t.xmdc001,l_imaa003.imaa_t.imaa003,l_imaa004.imaa_t.imaa004,l_xmda004_pmaal004.type_t.chr300,l_imaa009_rtaxl003.type_t.chr1000,l_xmda024_oocql004.type_t.chr1000,l_imaa127.imaa_t.imaa127,l_year.type_t.chr30,l_month.type_t.chr30,l_xmdc047_sum.xmdc_t.xmdc047,l_xmdl028_sum.xmdl_t.xmdl028,l_xmdc047_xmdl028.type_t.num20_6" 
   
   #建立TEMP TABLE,主報表序號1 
   IF NOT cl_xg_create_tmptable(g_sql,1) THEN
      LET g_rep_success = 'N'            
   END IF
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.after name="create_tmp.after"
   
   #end add-point:create_tmp.after
END FUNCTION
 
{</section>}
 
{<section id="axmr020_x01.ins_prep" readonly="Y" >}
PRIVATE FUNCTION axmr020_x01_ins_prep()
DEFINE i              INTEGER
DEFINE l_prep_str     STRING
#add-point:ins_prep.define (客製用) name="ins_prep.define_customerization"

#end add-point:ins_prep.define
#add-point:ins_prep.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_prep.define"

#end add-point:ins_prep.define
 
   FOR i = 1 TO g_rep_tmpname.getLength()
      CALL cl_xg_del_data(g_rep_tmpname[i])
      #LET g_sql = g_rep_ins_prep[i]              #透過此lib取得prepare字串 lib精簡
      CASE i
         WHEN 1
         #INSERT INTO PREP
         LET g_sql = " INSERT INTO ",g_rep_db CLIPPED,g_rep_tmpname[1] CLIPPED," VALUES(?,?,?,?,?,?, 
             ?,?,?,?,?,?)"
         PREPARE insert_prep FROM g_sql
         IF STATUS THEN
            LET l_prep_str ="insert_prep",i
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = l_prep_str
            LET g_errparam.code   = status
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            CALL cl_xg_drop_tmptable()
            LET g_rep_success = 'N'           
         END IF 
         #add-point:insert_prep段 name="insert_prep"
         
         #end add-point                  
 
 
      END CASE
   END FOR
END FUNCTION
 
{</section>}
 
{<section id="axmr020_x01.sel_prep" readonly="Y" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION axmr020_x01_sel_prep()
DEFINE g_select      STRING
DEFINE g_from        STRING
DEFINE g_where       STRING
#add-point:sel_prep段define(客製用) name="sel_prep.define_customerization"

#end add-point
#add-point:sel_prep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sel_prep.define"
DEFINE g_group       STRING  #GROUP BY
#end add-point
 
   #add-point:sel_prep before name="sel_prep.before"
   
   #end add-point
 
   #add-point:sel_prep g_select name="sel_prep.g_select"
   LET g_select = " SELECT imaa001,imaal003,imaal004,
                    CASE pmaa001 WHEN '.' THEN '' ELSE pmaa001 END,
                    CASE imaa009 WHEN '.' THEN '' ELSE imaa009 END,
                    CASE oocq002 WHEN '.' THEN '' ELSE oocq002 END,
                    imaa127,",
                  "l_year,l_month,SUM(xmdc047_sum),SUM(xmdl028_sum),0"
#   #end add-point
#   LET g_select = " SELECT xmdc001,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL"
# 
#   #add-point:sel_prep g_from name="sel_prep.g_from"
   LET g_from = " FROM (",
                " SELECT xmdc001 AS imaa001,t4.imaal003 AS imaal003,t4.imaal004 AS imaal004,trim(xmda004)||'.'||trim(t1.pmaal004) AS pmaa001,",
                "        trim(imaa009)||'.'||trim(t2.rtaxl003) AS imaa009,trim(xmda024)||'.'||trim(t3.oocql004) AS oocq002,",
                "        imaa127,to_char(xmdadocdt,'YYYY') AS l_year,to_char(xmdadocdt,'MM') AS l_month,SUM(xmdc047) AS xmdc047_sum,0 AS xmdl028_sum",
                "   FROM xmdc_t ",
                "   LEFT OUTER JOIN xmda_t ON xmdaent = xmdcent AND xmdadocno = xmdcdocno ",
                "   LEFT OUTER JOIN imaa_t ON imaaent = xmdcent AND imaa001 = xmdc001 ",
                "   LEFT OUTER JOIN pmaa_t ON pmaaent = xmdaent AND pmaa001 = xmda004 ",
                "   LEFT OUTER JOIN pmaal_t t1 ON t1.pmaalent = xmdaent AND t1.pmaal001 = xmda004 AND t1.pmaal002 = '"||g_dlang||"'",
                "   LEFT OUTER JOIN rtaxl_t t2 ON t2.rtaxlent = imaaent AND t2.rtaxl001 = imaa009 AND t2.rtaxl002 = '"||g_dlang||"'",
                "   LEFT OUTER JOIN oocql_t t3 ON t3.oocqlent = xmdaent AND t3.oocql001 = '295' AND t3.oocql002 = xmda024 AND t3.oocql003 = '"||g_dlang||"'",
                "   LEFT OUTER JOIN imaal_t t4 ON t4.imaalent = xmdcent AND t4.imaal001 = xmdc001 AND t4.imaal002 = '"||g_dlang||"'",
                "  WHERE xmdastus = 'Y' AND xmda005 <> '8' AND ",tm.wc,
                "  GROUP BY xmdc001,t4.imaal003,t4.imaal004,xmda004,t1.pmaal004,imaa009,t2.rtaxl003,xmda024,t3.oocql004,imaa127,xmdadocdt",
                "  UNION ALL ",
                " SELECT xmdl008 AS imaa001,t4.imaal003 AS imaal003,t4.imaal004 AS imaal004,trim(xmdk007)||'.'||trim(t1.pmaal004) AS pmaa001,",
                "        trim(imaa009)||'.'||trim(t2.rtaxl003) AS imaa009,trim(xmdk031)||'.'||trim(t3.oocql004) AS oocq002,",
                "        imaa127,to_char(xmdkdocdt,'YYYY') AS l_year,to_char(xmdkdocdt,'MM') AS l_month,0 AS xmdc047_sum,SUM(xmdl028) AS xmdl028_sum",
                "   FROM xmdl_t ",
                "   LEFT OUTER JOIN xmdk_t ON xmdkent = xmdlent AND xmdkdocno = xmdldocno",
                "   LEFT OUTER JOIN imaa_t ON imaaent = xmdlent AND imaa001 = xmdl008 ",
                "   LEFT OUTER JOIN pmaa_t ON pmaaent = xmdkent AND pmaa001 = xmdk007 ",
                "   LEFT OUTER JOIN pmaal_t t1 ON t1.pmaalent = xmdkent AND t1.pmaal001 = xmdk007 AND t1.pmaal002 = '"||g_dlang||"'",
                "   LEFT OUTER JOIN rtaxl_t t2 ON t2.rtaxlent = imaaent AND t2.rtaxl001 = imaa009 AND t2.rtaxl002 = '"||g_dlang||"'",
                "   LEFT OUTER JOIN oocql_t t3 ON t3.oocqlent = xmdkent AND t3.oocql001 = '295' AND t3.oocql002 = xmdk031 AND t3.oocql003 = '"||g_dlang||"'",
                "   LEFT OUTER JOIN imaal_t t4 ON t4.imaalent = xmdlent AND t4.imaal001 = xmdl008 AND t4.imaal002 = '"||g_dlang||"'",
                "  WHERE (xmdkstus = 'Y' OR xmdkstus = 'S') AND xmdk000 = '1' AND xmdk002 <> '8' AND ",tm.wc1,
                "  GROUP BY xmdl008,t4.imaal003,t4.imaal004,xmdk007,t1.pmaal004,imaa009,t2.rtaxl003,xmdk031,t3.oocql004,imaa127,xmdkdocdt",
                " )"
                
#   #end add-point
#    LET g_from = " FROM  xmda_t  LEFT OUTER JOIN ( SELECT xmdc_t.* FROM xmdc_t  ) x  ON xmda_t.xmdaent  
#        = x.xmdcent AND xmda_t.xmdadocno = x.xmdcdocno"
# 
#   #add-point:sel_prep g_where name="sel_prep.g_where"
   LET g_where = " WHERE 1=1 "
#   #end add-point
#    LET g_where = " WHERE " ,tm.wc CLIPPED
# 
#   #add-point:sel_prep g_order name="sel_prep.g_order"
   LET g_group = "GROUP BY imaa001,imaal003,imaal004,pmaa001,imaa009,oocq002,imaa127,l_year,l_month" 
   #end add-point
 
   #add-point:sel_prep.sql.before name="sel_prep.sql.before"
   
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("xmda_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段
 
   #add-point:sel_prep.sql.after name="sel_prep.sql.after"
   LET g_where = g_where ,cl_sql_add_filter("xmda_t")   #資料過濾功能
   LET g_sql = g_sql CLIPPED ," ",g_group CLIPPED 
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段

   #end add-point
   PREPARE axmr020_x01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET g_rep_success = 'N' 
   END IF
   DECLARE axmr020_x01_curs CURSOR FOR axmr020_x01_prepare
 
END FUNCTION
 
{</section>}
 
{<section id="axmr020_x01.ins_data" readonly="Y" >}
PRIVATE FUNCTION axmr020_x01_ins_data()
DEFINE sr RECORD 
   xmdc001 LIKE xmdc_t.xmdc001, 
   l_imaa003 LIKE imaa_t.imaa003, 
   l_imaa004 LIKE imaa_t.imaa004, 
   l_xmda004_pmaal004 LIKE type_t.chr300, 
   l_imaa009_rtaxl003 LIKE type_t.chr1000, 
   l_xmda024_oocql004 LIKE type_t.chr1000, 
   l_imaa127 LIKE imaa_t.imaa127, 
   l_year LIKE type_t.chr30, 
   l_month LIKE type_t.chr30, 
   l_xmdc047_sum LIKE xmdc_t.xmdc047, 
   l_xmdl028_sum LIKE xmdl_t.xmdl028, 
   l_xmdc047_xmdl028 LIKE type_t.num20_6
 END RECORD
#add-point:ins_data段define (客製用) name="ins_data.define_customerization"

#end add-point
#add-point:ins_data段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_data.define"

#end add-point
 
    #add-point:ins_data段before name="ins_data.before"
    
    #end add-point
 
    LET g_rep_success = 'Y'
 
    FOREACH axmr020_x01_curs INTO sr.*                               
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach name="ins_data.foreach"
       
       #end add-point
 
       #add-point:ins_data段before.save name="ins_data.before.save"
       
       #end add-point
 
       #EXECUTE
       EXECUTE insert_prep USING sr.xmdc001,sr.l_imaa003,sr.l_imaa004,sr.l_xmda004_pmaal004,sr.l_imaa009_rtaxl003,sr.l_xmda024_oocql004,sr.l_imaa127,sr.l_year,sr.l_month,sr.l_xmdc047_sum,sr.l_xmdl028_sum,sr.l_xmdc047_xmdl028
 
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = "axmr020_x01_execute"
          LET g_errparam.code   = SQLCA.sqlcode
          LET g_errparam.popup  = FALSE
          CALL cl_err()       
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段after_save name="ins_data.after.save"
       
       #end add-point
       
    END FOREACH
    
    #add-point:ins_data段after name="ins_data.after"
    
    #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="axmr020_x01.rep_data" readonly="Y" >}
PRIVATE FUNCTION axmr020_x01_rep_data()
#add-point:rep_data.define (客製用) name="rep_data.define_customerization"

#end add-point:rep_data.define
#add-point:rep_data.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="rep_data.define"

#end add-point:rep_data.define
 
    #add-point:rep_data.before name="rep_data.before"
    
    #end add-point:rep_data.before
    
    CALL cl_xg_view()
    #add-point:rep_data.after name="rep_data.after"
    
    #end add-point:rep_data.after
END FUNCTION
 
{</section>}
 
{<section id="axmr020_x01.other_function" readonly="Y" >}

 
{</section>}
 
