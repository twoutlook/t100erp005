#該程式未解開Section, 採用最新樣板產出!
{<section id="axmt410.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0020(2016-07-15 11:17:09), PR版次:0020(2016-10-20 14:05:48)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000179
#+ Filename...: axmt410
#+ Description: 銷售報價單維護作業
#+ Creator....: 03079(2014-06-24 15:22:19)
#+ Modifier...: 06814 -SD/PR- 00593
 
{</section>}
 
{<section id="axmt410.global" >}
#應用 t01 樣板自動產生(Version:76)
#add-point:填寫註解說明
#151224-00025#5   2015/12/29  By dorishsu   產品特徵欄位若無開窗輸入反而自行手動輸入時,則無法新增至inam_t
#160309-00008#1   2016/03/15  By Ann_Huang  在修改狀態下進單身預估成本與毛利頁籤,會導致作業無預警關閉
#                                           因為是走INPUT ARRAY g_xmff4_d,但該頁籤所有欄位為NOETRY導致crash,
#                                           修正畫面產品特徵說明(xmff0021_desc)屬性,取消是否可編輯,讓它變DISPLAY ARRAY段落即可解決
#160314-00009#13  2016/03/29  By xujing     产品特征自动开窗增加参数判断
#160318-00005#49  2016/04/01  by pengxin    修正azzi920重复定义之错误讯息
#160318-00025#35  2016/04/18  by pengxin    將重複內容的錯誤訊息置換為公用錯誤訊息(r.v)
#150722-00001#1   2016/05/18  By dorislai   修正頁簽「預估成本與毛利」，在新增一筆單身資料時，其品名跟規格不會立即顯現
#160520-00032#1   2016/06/07  By whitney    add xmfd005
#160804-00063#1   2016/06/07  By 02097      增加新增时产品特征二维输入程序功能
#160812-00017#5   2016/08/15  By 06137      在satatchange( )的FUNCTION中，有RETURN指令但沒有加上transaction_end( ) 造成transaction沒有結束就直接RETURN
#160818-00017#42  2016-08-24  By 08734      删除修改未重新判断状态码
#160902-00048#2   2016/09/06  By 02097      針對SQL的WHERE條件中缺少ent的清單做補強
#160914-00036#1   2016/09/20  By 02097      當單身沒資料時,就不要執行串查axmt500
#161012-00008#1   2016/10/14  By shiun      當變更取價條件時，需確認欄位都有輸入值才可重取
#161012-00019#1   2016/10/20  By Sarah      輸入不存在的稅別，彈出錯誤訊息後要還原舊值時誤將稅率舊值放到稅別變數了
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_xmfd_m        RECORD
       xmfddocno LIKE xmfd_t.xmfddocno, 
   xmfddocno_desc LIKE type_t.chr80, 
   xmfdsite LIKE xmfd_t.xmfdsite, 
   xmfddocdt LIKE xmfd_t.xmfddocdt, 
   xmfd001 LIKE xmfd_t.xmfd001, 
   xmfd001_desc LIKE type_t.chr80, 
   xmfd002 LIKE xmfd_t.xmfd002, 
   xmfd002_desc LIKE type_t.chr80, 
   xmfdstus LIKE xmfd_t.xmfdstus, 
   xmfd005 LIKE xmfd_t.xmfd005, 
   xmfd003 LIKE xmfd_t.xmfd003, 
   xmfd003_desc LIKE type_t.chr80, 
   xmfd006 LIKE xmfd_t.xmfd006, 
   xmfd007 LIKE xmfd_t.xmfd007, 
   xmfd008 LIKE xmfd_t.xmfd008, 
   xmfd009 LIKE xmfd_t.xmfd009, 
   xmfd009_desc LIKE type_t.chr80, 
   xmfd010 LIKE xmfd_t.xmfd010, 
   xmfd010_desc LIKE type_t.chr80, 
   xmfd011 LIKE xmfd_t.xmfd011, 
   xmfd029 LIKE xmfd_t.xmfd029, 
   xmfd012 LIKE xmfd_t.xmfd012, 
   xmfd012_desc LIKE type_t.chr80, 
   xmfd013 LIKE xmfd_t.xmfd013, 
   xmfd014 LIKE xmfd_t.xmfd014, 
   xmfd015 LIKE xmfd_t.xmfd015, 
   xmfd015_desc LIKE type_t.chr80, 
   xmfd016 LIKE xmfd_t.xmfd016, 
   xmfd016_desc LIKE type_t.chr80, 
   xmfd017 LIKE xmfd_t.xmfd017, 
   xmfd017_desc LIKE type_t.chr80, 
   xmfd018 LIKE xmfd_t.xmfd018, 
   xmfd018_desc LIKE type_t.chr80, 
   xmfd019 LIKE xmfd_t.xmfd019, 
   xmfd019_desc LIKE type_t.chr80, 
   xmfd020 LIKE xmfd_t.xmfd020, 
   xmfd020_desc LIKE type_t.chr80, 
   xmfd021 LIKE xmfd_t.xmfd021, 
   xmfd021_desc LIKE type_t.chr80, 
   xmfd022 LIKE xmfd_t.xmfd022, 
   xmfd022_desc LIKE type_t.chr80, 
   oofb017 LIKE type_t.chr500, 
   xmfd023 LIKE xmfd_t.xmfd023, 
   xmfd024 LIKE xmfd_t.xmfd024, 
   xmfd025 LIKE xmfd_t.xmfd025, 
   xmfd026 LIKE xmfd_t.xmfd026, 
   xmfd027 LIKE xmfd_t.xmfd027, 
   xmfd028 LIKE xmfd_t.xmfd028, 
   xmfd030 LIKE xmfd_t.xmfd030, 
   xmfd031 LIKE xmfd_t.xmfd031, 
   xmfd032 LIKE xmfd_t.xmfd032, 
   xmfd032_desc LIKE type_t.chr80, 
   xmfd033 LIKE xmfd_t.xmfd033, 
   xmfdownid LIKE xmfd_t.xmfdownid, 
   xmfdownid_desc LIKE type_t.chr80, 
   xmfdowndp LIKE xmfd_t.xmfdowndp, 
   xmfdowndp_desc LIKE type_t.chr80, 
   xmfdcrtid LIKE xmfd_t.xmfdcrtid, 
   xmfdcrtid_desc LIKE type_t.chr80, 
   xmfdcrtdp LIKE xmfd_t.xmfdcrtdp, 
   xmfdcrtdp_desc LIKE type_t.chr80, 
   xmfdcrtdt LIKE xmfd_t.xmfdcrtdt, 
   xmfdmodid LIKE xmfd_t.xmfdmodid, 
   xmfdmodid_desc LIKE type_t.chr80, 
   xmfdmoddt LIKE xmfd_t.xmfdmoddt, 
   xmfdcnfid LIKE xmfd_t.xmfdcnfid, 
   xmfdcnfid_desc LIKE type_t.chr80, 
   xmfdcnfdt LIKE xmfd_t.xmfdcnfdt, 
   xmfdpstid LIKE xmfd_t.xmfdpstid, 
   xmfdpstid_desc LIKE type_t.chr80, 
   xmfdpstdt LIKE xmfd_t.xmfdpstdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_xmff_d        RECORD
       xmffseq LIKE xmff_t.xmffseq, 
   xmff001 LIKE xmff_t.xmff001, 
   xmff001_desc LIKE type_t.chr500, 
   xmff001_desc_desc LIKE type_t.chr500, 
   xmff002 LIKE xmff_t.xmff002, 
   xmff002_desc LIKE type_t.chr500, 
   xmff003 LIKE xmff_t.xmff003, 
   l_pmao009 LIKE type_t.chr500, 
   l_pmao010 LIKE type_t.chr500, 
   xmff004 LIKE xmff_t.xmff004, 
   xmff004_desc LIKE type_t.chr500, 
   xmff005 LIKE xmff_t.xmff005, 
   xmff006 LIKE xmff_t.xmff006, 
   xmff007 LIKE xmff_t.xmff007, 
   xmff008 LIKE xmff_t.xmff008, 
   xmff009 LIKE xmff_t.xmff009, 
   xmff010 LIKE xmff_t.xmff010, 
   xmffsite LIKE xmff_t.xmffsite
       END RECORD
PRIVATE TYPE type_g_xmff2_d RECORD
       xmfgseq LIKE xmfg_t.xmfgseq, 
   xmfg001 LIKE xmfg_t.xmfg001, 
   xmfg002 LIKE xmfg_t.xmfg002, 
   xmfg003 LIKE xmfg_t.xmfg003, 
   xmfg004 LIKE xmfg_t.xmfg004, 
   xmfgsite LIKE xmfg_t.xmfgsite
       END RECORD
PRIVATE TYPE type_g_xmff3_d RECORD
       xmfhseq LIKE xmfh_t.xmfhseq, 
   xmfh001 LIKE xmfh_t.xmfh001, 
   xmfh001_desc LIKE type_t.chr500, 
   xmfh001_desc_desc LIKE type_t.chr500, 
   xmfh002 LIKE xmfh_t.xmfh002, 
   xmfh002_desc LIKE type_t.chr500, 
   xmfh003 LIKE xmfh_t.xmfh003, 
   xmfh004 LIKE xmfh_t.xmfh004, 
   xmfh005 LIKE xmfh_t.xmfh005, 
   xmfh005_desc LIKE type_t.chr500, 
   xmfh006 LIKE xmfh_t.xmfh006, 
   xmfhsite LIKE xmfh_t.xmfhsite
       END RECORD
PRIVATE TYPE type_g_xmff4_d RECORD
       xmffseq LIKE xmff_t.xmffseq, 
   xmff0011 LIKE type_t.chr500, 
   xmff0011_desc LIKE type_t.chr500, 
   xmff0011_desc_desc LIKE type_t.chr500, 
   xmff0021 LIKE type_t.chr500, 
   xmff0021_desc LIKE type_t.chr500, 
   xmff0041 LIKE type_t.chr10, 
   xmff0061 LIKE type_t.num20_6, 
   xmff0071 LIKE type_t.num20_6, 
   xmff011 LIKE xmff_t.xmff011, 
   xmff012 LIKE xmff_t.xmff012, 
   xmff013 LIKE xmff_t.xmff013
       END RECORD
PRIVATE TYPE type_g_xmff5_d RECORD
       xmffseq LIKE xmff_t.xmffseq, 
   xmff0012 LIKE type_t.chr500, 
   xmff0012_desc LIKE type_t.chr500, 
   xmff0012_desc_desc LIKE type_t.chr500, 
   xmff0022 LIKE type_t.chr500, 
   xmff0022_desc LIKE type_t.chr500, 
   xmff0042 LIKE type_t.chr10, 
   xmff0062 LIKE type_t.num20_6, 
   xmff015 LIKE xmff_t.xmff015, 
   xmff015_desc LIKE type_t.chr500, 
   xmff016 LIKE xmff_t.xmff016, 
   xmff017 LIKE xmff_t.xmff017, 
   xmff018 LIKE xmff_t.xmff018, 
   xmff019 LIKE xmff_t.xmff019
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_xmfddocno LIKE xmfd_t.xmfddocno,
      b_xmfddocdt LIKE xmfd_t.xmfddocdt,
      b_xmfd001 LIKE xmfd_t.xmfd001,
   b_xmfd001_desc LIKE type_t.chr80,
      b_xmfd002 LIKE xmfd_t.xmfd002,
   b_xmfd002_desc LIKE type_t.chr80
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE g_inam                DYNAMIC ARRAY OF RECORD       #記錄產品特徵   
                                inam001    LIKE inam_t.inam001,
                                inam002    LIKE inam_t.inam002,
                                inam004    LIKE inam_t.inam004
                             END RECORD
DEFINE g_pmao_flag           LIKE type_t.chr1
#end add-point
       
#模組變數(Module Variables)
DEFINE g_xmfd_m          type_g_xmfd_m
DEFINE g_xmfd_m_t        type_g_xmfd_m
DEFINE g_xmfd_m_o        type_g_xmfd_m
DEFINE g_xmfd_m_mask_o   type_g_xmfd_m #轉換遮罩前資料
DEFINE g_xmfd_m_mask_n   type_g_xmfd_m #轉換遮罩後資料
 
   DEFINE g_xmfddocno_t LIKE xmfd_t.xmfddocno
 
 
DEFINE g_xmff_d          DYNAMIC ARRAY OF type_g_xmff_d
DEFINE g_xmff_d_t        type_g_xmff_d
DEFINE g_xmff_d_o        type_g_xmff_d
DEFINE g_xmff_d_mask_o   DYNAMIC ARRAY OF type_g_xmff_d #轉換遮罩前資料
DEFINE g_xmff_d_mask_n   DYNAMIC ARRAY OF type_g_xmff_d #轉換遮罩後資料
DEFINE g_xmff2_d          DYNAMIC ARRAY OF type_g_xmff2_d
DEFINE g_xmff2_d_t        type_g_xmff2_d
DEFINE g_xmff2_d_o        type_g_xmff2_d
DEFINE g_xmff2_d_mask_o   DYNAMIC ARRAY OF type_g_xmff2_d #轉換遮罩前資料
DEFINE g_xmff2_d_mask_n   DYNAMIC ARRAY OF type_g_xmff2_d #轉換遮罩後資料
DEFINE g_xmff3_d          DYNAMIC ARRAY OF type_g_xmff3_d
DEFINE g_xmff3_d_t        type_g_xmff3_d
DEFINE g_xmff3_d_o        type_g_xmff3_d
DEFINE g_xmff3_d_mask_o   DYNAMIC ARRAY OF type_g_xmff3_d #轉換遮罩前資料
DEFINE g_xmff3_d_mask_n   DYNAMIC ARRAY OF type_g_xmff3_d #轉換遮罩後資料
DEFINE g_xmff4_d          DYNAMIC ARRAY OF type_g_xmff4_d
DEFINE g_xmff4_d_t        type_g_xmff4_d
DEFINE g_xmff4_d_o        type_g_xmff4_d
DEFINE g_xmff4_d_mask_o   DYNAMIC ARRAY OF type_g_xmff4_d #轉換遮罩前資料
DEFINE g_xmff4_d_mask_n   DYNAMIC ARRAY OF type_g_xmff4_d #轉換遮罩後資料
DEFINE g_xmff5_d          DYNAMIC ARRAY OF type_g_xmff5_d
DEFINE g_xmff5_d_t        type_g_xmff5_d
DEFINE g_xmff5_d_o        type_g_xmff5_d
DEFINE g_xmff5_d_mask_o   DYNAMIC ARRAY OF type_g_xmff5_d #轉換遮罩前資料
DEFINE g_xmff5_d_mask_n   DYNAMIC ARRAY OF type_g_xmff5_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="axmt410.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axm","")
 
   #add-point:作業初始化 name="main.init"
   CALL axmt410_02_create_temp() 
   CALL s_item_select_create_tmp()
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " SELECT xmfddocno,'',xmfdsite,xmfddocdt,xmfd001,'',xmfd002,'',xmfdstus,xmfd005, 
       xmfd003,'',xmfd006,xmfd007,xmfd008,xmfd009,'',xmfd010,'',xmfd011,xmfd029,xmfd012,'',xmfd013,xmfd014, 
       xmfd015,'',xmfd016,'',xmfd017,'',xmfd018,'',xmfd019,'',xmfd020,'',xmfd021,'',xmfd022,'','',xmfd023, 
       xmfd024,xmfd025,xmfd026,xmfd027,xmfd028,xmfd030,xmfd031,xmfd032,'',xmfd033,xmfdownid,'',xmfdowndp, 
       '',xmfdcrtid,'',xmfdcrtdp,'',xmfdcrtdt,xmfdmodid,'',xmfdmoddt,xmfdcnfid,'',xmfdcnfdt,xmfdpstid, 
       '',xmfdpstdt", 
                      " FROM xmfd_t",
                      " WHERE xmfdent= ? AND xmfddocno=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt410_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.xmfddocno,t0.xmfdsite,t0.xmfddocdt,t0.xmfd001,t0.xmfd002,t0.xmfdstus, 
       t0.xmfd005,t0.xmfd003,t0.xmfd006,t0.xmfd007,t0.xmfd008,t0.xmfd009,t0.xmfd010,t0.xmfd011,t0.xmfd029, 
       t0.xmfd012,t0.xmfd013,t0.xmfd014,t0.xmfd015,t0.xmfd016,t0.xmfd017,t0.xmfd018,t0.xmfd019,t0.xmfd020, 
       t0.xmfd021,t0.xmfd022,t0.xmfd023,t0.xmfd024,t0.xmfd025,t0.xmfd026,t0.xmfd027,t0.xmfd028,t0.xmfd030, 
       t0.xmfd031,t0.xmfd032,t0.xmfd033,t0.xmfdownid,t0.xmfdowndp,t0.xmfdcrtid,t0.xmfdcrtdp,t0.xmfdcrtdt, 
       t0.xmfdmodid,t0.xmfdmoddt,t0.xmfdcnfid,t0.xmfdcnfdt,t0.xmfdpstid,t0.xmfdpstdt,t1.ooag011 ,t2.ooefl003 , 
       t3.pmaal003 ,t4.xmfal003 ,t5.oocql004 ,t6.ooibl004 ,t7.xmahl003 ,t8.oojdl003 ,t9.oocql004 ,t10.oofb011 , 
       t11.oocql004 ,t12.ooag011 ,t13.ooefl003 ,t14.ooag011 ,t15.ooefl003 ,t16.ooag011 ,t17.ooag011 , 
       t18.ooag011",
               " FROM xmfd_t t0",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent="||g_enterprise||" AND t1.ooag001=t0.xmfd001  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=t0.xmfd002 AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t3 ON t3.pmaalent="||g_enterprise||" AND t3.pmaal001=t0.xmfd003 AND t3.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN xmfal_t t4 ON t4.xmfalent="||g_enterprise||" AND t4.xmfaldocno=t0.xmfd009 AND t4.xmfal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t5 ON t5.oocqlent="||g_enterprise||" AND t5.oocql001='238' AND t5.oocql002=t0.xmfd015 AND t5.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooibl_t t6 ON t6.ooiblent="||g_enterprise||" AND t6.ooibl002=t0.xmfd016 AND t6.ooibl003='"||g_dlang||"' ",
               " LEFT JOIN xmahl_t t7 ON t7.xmahlent="||g_enterprise||" AND t7.xmahl001=t0.xmfd017 AND t7.xmahl002='"||g_dlang||"' ",
               " LEFT JOIN oojdl_t t8 ON t8.oojdlent="||g_enterprise||" AND t8.oojdl001=t0.xmfd018 AND t8.oojdl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t9 ON t9.oocqlent="||g_enterprise||" AND t9.oocql001='263' AND t9.oocql002=t0.xmfd019 AND t9.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oofb_t t10 ON t10.oofbent="||g_enterprise||" AND t10.oofb001=t0.xmfd022  ",
               " LEFT JOIN oocql_t t11 ON t11.oocqlent="||g_enterprise||" AND t11.oocql001='319' AND t11.oocql002=t0.xmfd032 AND t11.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t12 ON t12.ooagent="||g_enterprise||" AND t12.ooag001=t0.xmfdownid  ",
               " LEFT JOIN ooefl_t t13 ON t13.ooeflent="||g_enterprise||" AND t13.ooefl001=t0.xmfdowndp AND t13.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t14 ON t14.ooagent="||g_enterprise||" AND t14.ooag001=t0.xmfdcrtid  ",
               " LEFT JOIN ooefl_t t15 ON t15.ooeflent="||g_enterprise||" AND t15.ooefl001=t0.xmfdcrtdp AND t15.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t16 ON t16.ooagent="||g_enterprise||" AND t16.ooag001=t0.xmfdmodid  ",
               " LEFT JOIN ooag_t t17 ON t17.ooagent="||g_enterprise||" AND t17.ooag001=t0.xmfdcnfid  ",
               " LEFT JOIN ooag_t t18 ON t18.ooagent="||g_enterprise||" AND t18.ooag001=t0.xmfdpstid  ",
 
               " WHERE t0.xmfdent = " ||g_enterprise|| " AND t0.xmfddocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE axmt410_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axmt410 WITH FORM cl_ap_formpath("axm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axmt410_init()   
 
      #進入選單 Menu (="N")
      CALL axmt410_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axmt410
      
   END IF 
   
   CLOSE axmt410_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   CALL axmt410_02_drop_temp() 
   CALL s_item_select_drop_tmp()
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="axmt410.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION axmt410_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
   LET g_detail_idx_list[4] = 1
   LET g_detail_idx_list[5] = 1
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('xmfdstus','13','N,Y,A,D,R,W,X')
 
      CALL cl_set_combo_scc('xmfd008','2511') 
   CALL cl_set_combo_scc('xmfd023','2512') 
   CALL cl_set_combo_scc('xmfd030','4076') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1','4','5',","1")
   CALL g_idx_group.addAttribute("'2',","1")
   CALL g_idx_group.addAttribute("'3',","1")
   CALL g_idx_group.addAttribute("","1")
   CALL g_idx_group.addAttribute("","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   #判斷據點參數若不使用產品特徵時，則產品特徵需隱藏不可維護(據點參數:S-BAS-0036) 
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0036') = 'N' THEN
      CALL cl_set_comp_visible("xmff002,xmff002_desc,xmff0021,xmff0021_desc,xmff0022,xmff0022_desc",FALSE)
   END IF
   CALL cl_set_combo_scc_part('xmfd023','2512','1,2')
   #end add-point
   
   #初始化搜尋條件
   CALL axmt410_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="axmt410.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION axmt410_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   DEFINE l_wc                   STRING
   DEFINE l_xmdadocno            LIKE xmda_t.xmdadocno
   DEFINE l_cnt                  LIKE type_t.num5        #160914-00036#1
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL axmt410_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
            
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
      
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_xmfd_m.* TO NULL
         CALL g_xmff_d.clear()
         CALL g_xmff2_d.clear()
         CALL g_xmff3_d.clear()
         CALL g_xmff4_d.clear()
         CALL g_xmff5_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL axmt410_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL axmt410_fetch('') # reload data
               LET l_ac = 1
               CALL axmt410_ui_detailshow() #Setting the current row 
         
               CALL axmt410_idx_chk()
               #NEXT FIELD xmffseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_xmff_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axmt410_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1','4','5',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1','4','5',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL axmt410_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_xmff2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axmt410_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[2] = l_ac
               CALL g_idx_group.addAttribute("'2',",l_ac)
               
               #add-point:page2, before row動作 name="ui_dialog.body2.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL axmt410_idx_chk()
               #add-point:page2自定義行為 name="ui_dialog.body2.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為 name="ui_dialog.body2.action"
            
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_xmff3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axmt410_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[3] = l_ac
               CALL g_idx_group.addAttribute("'3',",l_ac)
               
               #add-point:page3, before row動作 name="ui_dialog.body3.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
               #顯示單身筆數
               CALL axmt410_idx_chk()
               #add-point:page3自定義行為 name="ui_dialog.body3.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為 name="ui_dialog.body3.action"
            
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_xmff4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axmt410_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[4] = l_ac
               CALL g_idx_group.addAttribute("",l_ac)
               
               #add-point:page4, before row動作 name="ui_dialog.body4.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue(""))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_current_page = 4
               #顯示單身筆數
               CALL axmt410_idx_chk()
               #add-point:page4自定義行為 name="ui_dialog.body4.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_4)
            
         
            #add-point:page4自定義行為 name="ui_dialog.body4.action"
            
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_xmff5_d TO s_detail5.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axmt410_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[5] = l_ac
               CALL g_idx_group.addAttribute("",l_ac)
               
               #add-point:page5, before row動作 name="ui_dialog.body5.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue(""))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               LET g_current_page = 5
               #顯示單身筆數
               CALL axmt410_idx_chk()
               #add-point:page5自定義行為 name="ui_dialog.body5.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_5)
            
         
            #add-point:page5自定義行為 name="ui_dialog.body5.action"
            
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL axmt410_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL axmt410_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL axmt410_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL axmt410_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL axmt410_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL axmt410_set_act_visible()   
            CALL axmt410_set_act_no_visible()
            IF NOT (g_xmfd_m.xmfddocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " xmfdent = " ||g_enterprise|| " AND",
                                  " xmfddocno = '", g_xmfd_m.xmfddocno, "' "
 
               #填到對應位置
               CALL axmt410_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:3)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status name="menu.bpm_status"
            
            #END add-point
 
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "xmfd_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmff_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmfg_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "xmfh_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL axmt410_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "xmfd_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmff_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmfg_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "xmfh_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL axmt410_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL axmt410_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:4)
            #過濾瀏覽頁資料
            ON ACTION filter
               LET g_action_choice = "fetch"
               #add-point:filter action name="ui_dialog.action.filter"
               
               #end add-point
               CALL axmt410_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL axmt410_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt410_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL axmt410_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt410_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL axmt410_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt410_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL axmt410_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt410_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL axmt410_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt410_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_xmff_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_xmff2_d)
                  LET g_export_id[2]   = "s_detail2"
                  LET g_export_node[3] = base.typeInfo.create(g_xmff3_d)
                  LET g_export_id[3]   = "s_detail3"
                  LET g_export_node[4] = base.typeInfo.create(g_xmff4_d)
                  LET g_export_id[4]   = "s_detail4"
                  LET g_export_node[5] = base.typeInfo.create(g_xmff5_d)
                  LET g_export_id[5]   = "s_detail5"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD xmffseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL axmt410_delete()
               #add-point:ON ACTION delete name="menu.delete"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL axmt410_insert()
               #add-point:ON ACTION insert name="menu.insert"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL axmt410_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
               CALL g_curr_diag.setCurrentRow("s_detail3",1)
               CALL g_curr_diag.setCurrentRow("s_detail4",1)
               CALL g_curr_diag.setCurrentRow("s_detail5",1)
 
 
 
 
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION demo
            LET g_action_choice="demo"
            IF cl_auth_chk_act("demo") THEN
               
               #add-point:ON ACTION demo name="menu.demo"
               CALL aooi360_02('6',g_prog,g_xmfd_m.xmfddocno,'','','','','','','','','4')
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               #ming 20141022 modify -----------------------------------------(S) 
               #LET l_wc = "xmfddocno = '",g_xmfd_m.xmfddocno,"' "
               #CALL axmr410_g01(l_wc)

               LET g_rep_wc = " xmfdent = '",g_enterprise,"' AND xmfddocno = '",g_xmfd_m.xmfddocno,"' "
               #ming 20141022 modify -----------------------------------------(E) 
               #END add-point
               &include "erp/axm/axmt410_rep.4gl"
               #add-point:ON ACTION output.after
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL axmt410_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_axmt500
            LET g_action_choice="open_axmt500"
            IF cl_auth_chk_act("open_axmt500") THEN
               
               #add-point:ON ACTION open_axmt500 name="menu.open_axmt500"
               #160914-00036#1-s
               SELECT count(1) INTO l_cnt
                 FROM xmff_t
                WHERE xmffent = g_enterprise
                  AND xmffdocno = g_xmfd_m.xmfddocno
               IF l_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.code   = "agl-00066"
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
               ELSE
               #160914-00036#1-e
                  IF NOT cl_null(g_xmfd_m.xmfddocno) AND
                     NOT cl_null(g_xmff_d[g_detail_idx].xmffseq) THEN
                     LET l_wc = ''
                     LET l_xmdadocno = ''
                     INITIALIZE la_param.* TO NULL
                     LET la_param.prog  = 'axmt500'
                     DECLARE sel_xmdadocno CURSOR FOR
                        SELECT xmdadocno FROM xmda_t,xmdc_t
                         WHERE xmdaent = g_enterprise
                           AND xmdastus NOT IN ('D','R','X','H')
                           AND xmdcent = xmdaent
                           AND xmdcdocno = xmdadocno
                           AND xmdc040 = '5'
                           AND xmdc041 = g_xmfd_m.xmfddocno
                           AND xmdc042 = g_xmff_d[g_detail_idx].xmffseq
                     FOREACH sel_xmdadocno INTO l_xmdadocno
                        IF cl_null(l_wc) THEN
                           LET l_wc = l_wc CLIPPED,"'",l_xmdadocno,"'"
                        ELSE
                           LET l_wc = l_wc CLIPPED,",'",l_xmdadocno,"'"
                        END IF
                     END FOREACH
                     IF NOT cl_null(l_wc) THEN
                        LET la_param.param[2] = " xmdadocno IN (",l_wc CLIPPED,") "
                        LET ls_js = util.JSON.stringify(la_param)
                        CALL cl_cmdrun_wait(ls_js)
                     END IF
                  END IF
               END IF         #160914-00036#1
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL axmt410_modify()
               #add-point:ON ACTION modify name="menu.modify"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL axmt410_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION s_item_select
            LET g_action_choice="s_item_select"
            IF cl_auth_chk_act("s_item_select") THEN
               
               #add-point:ON ACTION s_item_select name="menu.s_item_select"
               IF cl_ask_confirm("axm-00394") THEN     #是否由產品分類快速產生單身資料！  
                  CALL axmt410_from_sub_get_body1()
               END IF
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION track
            LET g_action_choice="track"
            IF cl_auth_chk_act("track") THEN
               
               #add-point:ON ACTION track name="menu.track"
               CALL axmt410_track()
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION prog_xmfd001
            LET g_action_choice="prog_xmfd001"
            IF cl_auth_chk_act("prog_xmfd001") THEN
               
               #add-point:ON ACTION prog_xmfd001 name="menu.prog_xmfd001"
               #+ 此段落由子樣板a45產生
               CALL cl_user_contact("aooi130", "ooag_t", "ooag002", "ooag001",'')


               #END add-point
               
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL axmt410_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL axmt410_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL axmt410_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow(g_xmfd_m.xmfddocdt)
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
 
{</section>}
 
{<section id="axmt410.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION axmt410_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   LET l_wc = l_wc," AND xmfdsite = '",g_site,"' "
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT xmfddocno ",
                      " FROM xmfd_t ",
                      " ",
                      " LEFT JOIN xmff_t ON xmffent = xmfdent AND xmfddocno = xmffdocno ", "  ",
                      #add-point:browser_fill段sql(xmff_t1) name="browser_fill.cnt.join.}"
                      
                      #end add-point
                      " LEFT JOIN xmfg_t ON xmfgent = xmfdent AND xmfddocno = xmfgdocno", "  ",
                      #add-point:browser_fill段sql(xmfg_t1) name="browser_fill.cnt.join.xmfg_t1"
                      
                      #end add-point
 
                      " LEFT JOIN xmfh_t ON xmfhent = xmfdent AND xmfddocno = xmfhdocno", "  ",
                      #add-point:browser_fill段sql(xmfh_t1) name="browser_fill.cnt.join.xmfh_t1"
                      
                      #end add-point
 
 
 
                      " ", 
                      " ", 
                      " ",                      
 
                      " ",                      
 
 
 
                      " WHERE xmfdent = " ||g_enterprise|| " AND xmffent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("xmfd_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT xmfddocno ",
                      " FROM xmfd_t ", 
                      "  ",
                      "  ",
                      " WHERE xmfdent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("xmfd_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   LET g_wc = g_wc," AND xmfdsite = '",g_site,"' "
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_xmfd_m.* TO NULL
      CALL g_xmff_d.clear()        
      CALL g_xmff2_d.clear() 
      CALL g_xmff3_d.clear() 
      CALL g_xmff4_d.clear() 
      CALL g_xmff5_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.xmfddocno,t0.xmfddocdt,t0.xmfd001,t0.xmfd002 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.xmfdstus,t0.xmfddocno,t0.xmfddocdt,t0.xmfd001,t0.xmfd002,t1.ooag011 , 
          t2.ooefl003 ",
                  " FROM xmfd_t t0",
                  "  ",
                  "  LEFT JOIN xmff_t ON xmffent = xmfdent AND xmfddocno = xmffdocno ", "  ", 
                  #add-point:browser_fill段sql(xmff_t1) name="browser_fill.join.xmff_t1"
                  
                  #end add-point
                  "  LEFT JOIN xmfg_t ON xmfgent = xmfdent AND xmfddocno = xmfgdocno", "  ", 
                  #add-point:browser_fill段sql(xmfg_t1) name="browser_fill.join.xmfg_t1"
                  
                  #end add-point
 
                  "  LEFT JOIN xmfh_t ON xmfhent = xmfdent AND xmfddocno = xmfhdocno", "  ", 
                  #add-point:browser_fill段sql(xmfh_t1) name="browser_fill.join.xmfh_t1"
                  
                  #end add-point
 
 
 
                  " ", 
                  " ",                      
 
                  " ",                      
 
 
 
                                 " LEFT JOIN ooag_t t1 ON t1.ooagent="||g_enterprise||" AND t1.ooag001=t0.xmfd001  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=t0.xmfd002 AND t2.ooefl002='"||g_dlang||"' ",
 
                  " WHERE t0.xmfdent = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("xmfd_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.xmfdstus,t0.xmfddocno,t0.xmfddocdt,t0.xmfd001,t0.xmfd002,t1.ooag011 , 
          t2.ooefl003 ",
                  " FROM xmfd_t t0",
                  "  ",
                                 " LEFT JOIN ooag_t t1 ON t1.ooagent="||g_enterprise||" AND t1.ooag001=t0.xmfd001  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=t0.xmfd002 AND t2.ooefl002='"||g_dlang||"' ",
 
                  " WHERE t0.xmfdent = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("xmfd_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   
   #end add-point
   LET g_sql = g_sql, " ORDER BY xmfddocno ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
   
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"xmfd_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_xmfddocno,g_browser[g_cnt].b_xmfddocdt, 
          g_browser[g_cnt].b_xmfd001,g_browser[g_cnt].b_xmfd002,g_browser[g_cnt].b_xmfd001_desc,g_browser[g_cnt].b_xmfd002_desc 
 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
         
         #end add-point
      
         #遮罩相關處理
         CALL axmt410_browser_mask()
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_xmfddocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   
   #end add-point   
 
END FUNCTION
 
{</section>}
 
{<section id="axmt410.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION axmt410_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_xmfd_m.xmfddocno = g_browser[g_current_idx].b_xmfddocno   
 
   EXECUTE axmt410_master_referesh USING g_xmfd_m.xmfddocno INTO g_xmfd_m.xmfddocno,g_xmfd_m.xmfdsite, 
       g_xmfd_m.xmfddocdt,g_xmfd_m.xmfd001,g_xmfd_m.xmfd002,g_xmfd_m.xmfdstus,g_xmfd_m.xmfd005,g_xmfd_m.xmfd003, 
       g_xmfd_m.xmfd006,g_xmfd_m.xmfd007,g_xmfd_m.xmfd008,g_xmfd_m.xmfd009,g_xmfd_m.xmfd010,g_xmfd_m.xmfd011, 
       g_xmfd_m.xmfd029,g_xmfd_m.xmfd012,g_xmfd_m.xmfd013,g_xmfd_m.xmfd014,g_xmfd_m.xmfd015,g_xmfd_m.xmfd016, 
       g_xmfd_m.xmfd017,g_xmfd_m.xmfd018,g_xmfd_m.xmfd019,g_xmfd_m.xmfd020,g_xmfd_m.xmfd021,g_xmfd_m.xmfd022, 
       g_xmfd_m.xmfd023,g_xmfd_m.xmfd024,g_xmfd_m.xmfd025,g_xmfd_m.xmfd026,g_xmfd_m.xmfd027,g_xmfd_m.xmfd028, 
       g_xmfd_m.xmfd030,g_xmfd_m.xmfd031,g_xmfd_m.xmfd032,g_xmfd_m.xmfd033,g_xmfd_m.xmfdownid,g_xmfd_m.xmfdowndp, 
       g_xmfd_m.xmfdcrtid,g_xmfd_m.xmfdcrtdp,g_xmfd_m.xmfdcrtdt,g_xmfd_m.xmfdmodid,g_xmfd_m.xmfdmoddt, 
       g_xmfd_m.xmfdcnfid,g_xmfd_m.xmfdcnfdt,g_xmfd_m.xmfdpstid,g_xmfd_m.xmfdpstdt,g_xmfd_m.xmfd001_desc, 
       g_xmfd_m.xmfd002_desc,g_xmfd_m.xmfd003_desc,g_xmfd_m.xmfd009_desc,g_xmfd_m.xmfd015_desc,g_xmfd_m.xmfd016_desc, 
       g_xmfd_m.xmfd017_desc,g_xmfd_m.xmfd018_desc,g_xmfd_m.xmfd019_desc,g_xmfd_m.xmfd022_desc,g_xmfd_m.xmfd032_desc, 
       g_xmfd_m.xmfdownid_desc,g_xmfd_m.xmfdowndp_desc,g_xmfd_m.xmfdcrtid_desc,g_xmfd_m.xmfdcrtdp_desc, 
       g_xmfd_m.xmfdmodid_desc,g_xmfd_m.xmfdcnfid_desc,g_xmfd_m.xmfdpstid_desc
   
   CALL axmt410_xmfd_t_mask()
   CALL axmt410_show()
      
END FUNCTION
 
{</section>}
 
{<section id="axmt410.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION axmt410_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail4",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail5",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="axmt410.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION axmt410_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_xmfddocno = g_xmfd_m.xmfddocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="axmt410.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION axmt410_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_xmfd_m.* TO NULL
   CALL g_xmff_d.clear()        
   CALL g_xmff2_d.clear() 
   CALL g_xmff3_d.clear() 
   CALL g_xmff4_d.clear() 
   CALL g_xmff5_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
   INITIALIZE g_wc2_table3 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON xmfddocno,xmfdsite,xmfddocdt,xmfd001,xmfd002,xmfdstus,xmfd005,xmfd003, 
          xmfd006,xmfd007,xmfd008,xmfd009,xmfd010,xmfd010_desc,xmfd011,xmfd029,xmfd012,xmfd013,xmfd014, 
          xmfd015,xmfd016,xmfd017,xmfd018,xmfd019,xmfd020,xmfd021,xmfd021_desc,xmfd022,oofb017,xmfd023, 
          xmfd024,xmfd025,xmfd026,xmfd027,xmfd028,xmfd030,xmfd031,xmfd032,xmfd033,xmfdownid,xmfdowndp, 
          xmfdcrtid,xmfdcrtdp,xmfdcrtdt,xmfdmodid,xmfdmoddt,xmfdcnfid,xmfdcnfdt,xmfdpstid,xmfdpstdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<xmfdcrtdt>>----
         AFTER FIELD xmfdcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<xmfdmoddt>>----
         AFTER FIELD xmfdmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmfdcnfdt>>----
         AFTER FIELD xmfdcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmfdpstdt>>----
         AFTER FIELD xmfdpstdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.xmfddocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfddocno
            #add-point:ON ACTION controlp INFIELD xmfddocno name="construct.c.xmfddocno"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xmfddocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfddocno  #顯示到畫面上
            NEXT FIELD xmfddocno                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfddocno
            #add-point:BEFORE FIELD xmfddocno name="construct.b.xmfddocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfddocno
            
            #add-point:AFTER FIELD xmfddocno name="construct.a.xmfddocno"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfdsite
            #add-point:BEFORE FIELD xmfdsite name="construct.b.xmfdsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfdsite
            
            #add-point:AFTER FIELD xmfdsite name="construct.a.xmfdsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfdsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfdsite
            #add-point:ON ACTION controlp INFIELD xmfdsite name="construct.c.xmfdsite"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfddocdt
            #add-point:BEFORE FIELD xmfddocdt name="construct.b.xmfddocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfddocdt
            
            #add-point:AFTER FIELD xmfddocdt name="construct.a.xmfddocdt"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfddocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfddocdt
            #add-point:ON ACTION controlp INFIELD xmfddocdt name="construct.c.xmfddocdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmfd001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd001
            #add-point:ON ACTION controlp INFIELD xmfd001 name="construct.c.xmfd001"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfd001  #顯示到畫面上
            NEXT FIELD xmfd001                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd001
            #add-point:BEFORE FIELD xmfd001 name="construct.b.xmfd001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd001
            
            #add-point:AFTER FIELD xmfd001 name="construct.a.xmfd001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfd002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd002
            #add-point:ON ACTION controlp INFIELD xmfd002 name="construct.c.xmfd002"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfd002  #顯示到畫面上
            NEXT FIELD xmfd002                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd002
            #add-point:BEFORE FIELD xmfd002 name="construct.b.xmfd002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd002
            
            #add-point:AFTER FIELD xmfd002 name="construct.a.xmfd002"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfdstus
            #add-point:BEFORE FIELD xmfdstus name="construct.b.xmfdstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfdstus
            
            #add-point:AFTER FIELD xmfdstus name="construct.a.xmfdstus"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfdstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfdstus
            #add-point:ON ACTION controlp INFIELD xmfdstus name="construct.c.xmfdstus"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmfd005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd005
            #add-point:ON ACTION controlp INFIELD xmfd005 name="construct.c.xmfd005"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_xmfd005()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfd005  #顯示到畫面上
            NEXT FIELD xmfd005                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd005
            #add-point:BEFORE FIELD xmfd005 name="construct.b.xmfd005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd005
            
            #add-point:AFTER FIELD xmfd005 name="construct.a.xmfd005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfd003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd003
            #add-point:ON ACTION controlp INFIELD xmfd003 name="construct.c.xmfd003"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE 
            #ming 20141120 add --------------------------(S) 
            LET g_qryparam.arg1 = g_site
            #ming 20141120 add --------------------------(E) 
            CALL q_pmaa001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfd003  #顯示到畫面上
            NEXT FIELD xmfd003                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd003
            #add-point:BEFORE FIELD xmfd003 name="construct.b.xmfd003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd003
            
            #add-point:AFTER FIELD xmfd003 name="construct.a.xmfd003"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd006
            #add-point:BEFORE FIELD xmfd006 name="construct.b.xmfd006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd006
            
            #add-point:AFTER FIELD xmfd006 name="construct.a.xmfd006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfd006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd006
            #add-point:ON ACTION controlp INFIELD xmfd006 name="construct.c.xmfd006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd007
            #add-point:BEFORE FIELD xmfd007 name="construct.b.xmfd007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd007
            
            #add-point:AFTER FIELD xmfd007 name="construct.a.xmfd007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfd007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd007
            #add-point:ON ACTION controlp INFIELD xmfd007 name="construct.c.xmfd007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd008
            #add-point:BEFORE FIELD xmfd008 name="construct.b.xmfd008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd008
            
            #add-point:AFTER FIELD xmfd008 name="construct.a.xmfd008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfd008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd008
            #add-point:ON ACTION controlp INFIELD xmfd008 name="construct.c.xmfd008"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmfd009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd009
            #add-point:ON ACTION controlp INFIELD xmfd009 name="construct.c.xmfd009"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xmfadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfd009  #顯示到畫面上
            NEXT FIELD xmfd009                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd009
            #add-point:BEFORE FIELD xmfd009 name="construct.b.xmfd009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd009
            
            #add-point:AFTER FIELD xmfd009 name="construct.a.xmfd009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfd010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd010
            #add-point:ON ACTION controlp INFIELD xmfd010 name="construct.c.xmfd010"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            #CALL q_ooaj002_1()                           #呼叫開窗 
            CALL q_ooaj002()
            DISPLAY g_qryparam.return1 TO xmfd010  #顯示到畫面上
            NEXT FIELD xmfd010                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd010
            #add-point:BEFORE FIELD xmfd010 name="construct.b.xmfd010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd010
            
            #add-point:AFTER FIELD xmfd010 name="construct.a.xmfd010"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd010_desc
            #add-point:BEFORE FIELD xmfd010_desc name="construct.b.xmfd010_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd010_desc
            
            #add-point:AFTER FIELD xmfd010_desc name="construct.a.xmfd010_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfd010_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd010_desc
            #add-point:ON ACTION controlp INFIELD xmfd010_desc name="construct.c.xmfd010_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd011
            #add-point:BEFORE FIELD xmfd011 name="construct.b.xmfd011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd011
            
            #add-point:AFTER FIELD xmfd011 name="construct.a.xmfd011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfd011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd011
            #add-point:ON ACTION controlp INFIELD xmfd011 name="construct.c.xmfd011"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd029
            #add-point:BEFORE FIELD xmfd029 name="construct.b.xmfd029"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd029
            
            #add-point:AFTER FIELD xmfd029 name="construct.a.xmfd029"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfd029
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd029
            #add-point:ON ACTION controlp INFIELD xmfd029 name="construct.c.xmfd029"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmfd012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd012
            #add-point:ON ACTION controlp INFIELD xmfd012 name="construct.c.xmfd012"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_oodb002_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfd012  #顯示到畫面上
            NEXT FIELD xmfd012                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd012
            #add-point:BEFORE FIELD xmfd012 name="construct.b.xmfd012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd012
            
            #add-point:AFTER FIELD xmfd012 name="construct.a.xmfd012"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd013
            #add-point:BEFORE FIELD xmfd013 name="construct.b.xmfd013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd013
            
            #add-point:AFTER FIELD xmfd013 name="construct.a.xmfd013"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfd013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd013
            #add-point:ON ACTION controlp INFIELD xmfd013 name="construct.c.xmfd013"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd014
            #add-point:BEFORE FIELD xmfd014 name="construct.b.xmfd014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd014
            
            #add-point:AFTER FIELD xmfd014 name="construct.a.xmfd014"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfd014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd014
            #add-point:ON ACTION controlp INFIELD xmfd014 name="construct.c.xmfd014"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmfd015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd015
            #add-point:ON ACTION controlp INFIELD xmfd015 name="construct.c.xmfd015"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE 
            LET g_qryparam.arg1 = '238'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfd015  #顯示到畫面上
            NEXT FIELD xmfd015                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd015
            #add-point:BEFORE FIELD xmfd015 name="construct.b.xmfd015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd015
            
            #add-point:AFTER FIELD xmfd015 name="construct.a.xmfd015"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfd016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd016
            #add-point:ON ACTION controlp INFIELD xmfd016 name="construct.c.xmfd016"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmad002_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfd016  #顯示到畫面上
            NEXT FIELD xmfd016                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd016
            #add-point:BEFORE FIELD xmfd016 name="construct.b.xmfd016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd016
            
            #add-point:AFTER FIELD xmfd016 name="construct.a.xmfd016"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfd017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd017
            #add-point:ON ACTION controlp INFIELD xmfd017 name="construct.c.xmfd017"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xmah001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfd017  #顯示到畫面上
            NEXT FIELD xmfd017                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd017
            #add-point:BEFORE FIELD xmfd017 name="construct.b.xmfd017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd017
            
            #add-point:AFTER FIELD xmfd017 name="construct.a.xmfd017"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfd018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd018
            #add-point:ON ACTION controlp INFIELD xmfd018 name="construct.c.xmfd018"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE 
            #160621-00003#3 20160627 modify by beckxie---S
			   #LET g_qryparam.arg1 = "275"
            #CALL q_oocq002()                           #呼叫開窗
            LET g_qryparam.arg1 = '1'
            CALL q_oojd001_1()
            #160621-00003#3 20160627 modify by beckxie---E
            DISPLAY g_qryparam.return1 TO xmfd018  #顯示到畫面上
            NEXT FIELD xmfd018                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd018
            #add-point:BEFORE FIELD xmfd018 name="construct.b.xmfd018"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd018
            
            #add-point:AFTER FIELD xmfd018 name="construct.a.xmfd018"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfd019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd019
            #add-point:ON ACTION controlp INFIELD xmfd019 name="construct.c.xmfd019"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE 
            LET g_qryparam.arg1 = "263"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfd019  #顯示到畫面上
            NEXT FIELD xmfd019                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd019
            #add-point:BEFORE FIELD xmfd019 name="construct.b.xmfd019"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd019
            
            #add-point:AFTER FIELD xmfd019 name="construct.a.xmfd019"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfd020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd020
            #add-point:ON ACTION controlp INFIELD xmfd020 name="construct.c.xmfd020"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xmfd020()
            DISPLAY g_qryparam.return1 TO xmfd020
            NEXT FIELD xmfd020
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd020
            #add-point:BEFORE FIELD xmfd020 name="construct.b.xmfd020"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd020
            
            #add-point:AFTER FIELD xmfd020 name="construct.a.xmfd020"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfd021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd021
            #add-point:ON ACTION controlp INFIELD xmfd021 name="construct.c.xmfd021"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xmfd021()
            DISPLAY g_qryparam.return1 TO xmfd021
            NEXT FIELD xmfd021
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd021
            #add-point:BEFORE FIELD xmfd021 name="construct.b.xmfd021"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd021
            
            #add-point:AFTER FIELD xmfd021 name="construct.a.xmfd021"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd021_desc
            #add-point:BEFORE FIELD xmfd021_desc name="construct.b.xmfd021_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd021_desc
            
            #add-point:AFTER FIELD xmfd021_desc name="construct.a.xmfd021_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfd021_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd021_desc
            #add-point:ON ACTION controlp INFIELD xmfd021_desc name="construct.c.xmfd021_desc"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmfd022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd022
            #add-point:ON ACTION controlp INFIELD xmfd022 name="construct.c.xmfd022"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_oofb019_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfd022  #顯示到畫面上
            NEXT FIELD xmfd022                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd022
            #add-point:BEFORE FIELD xmfd022 name="construct.b.xmfd022"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd022
            
            #add-point:AFTER FIELD xmfd022 name="construct.a.xmfd022"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD oofb017
            #add-point:BEFORE FIELD oofb017 name="construct.b.oofb017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD oofb017
            
            #add-point:AFTER FIELD oofb017 name="construct.a.oofb017"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.oofb017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD oofb017
            #add-point:ON ACTION controlp INFIELD oofb017 name="construct.c.oofb017"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd023
            #add-point:BEFORE FIELD xmfd023 name="construct.b.xmfd023"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd023
            
            #add-point:AFTER FIELD xmfd023 name="construct.a.xmfd023"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfd023
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd023
            #add-point:ON ACTION controlp INFIELD xmfd023 name="construct.c.xmfd023"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd024
            #add-point:BEFORE FIELD xmfd024 name="construct.b.xmfd024"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd024
            
            #add-point:AFTER FIELD xmfd024 name="construct.a.xmfd024"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfd024
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd024
            #add-point:ON ACTION controlp INFIELD xmfd024 name="construct.c.xmfd024"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd025
            #add-point:BEFORE FIELD xmfd025 name="construct.b.xmfd025"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd025
            
            #add-point:AFTER FIELD xmfd025 name="construct.a.xmfd025"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfd025
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd025
            #add-point:ON ACTION controlp INFIELD xmfd025 name="construct.c.xmfd025"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd026
            #add-point:BEFORE FIELD xmfd026 name="construct.b.xmfd026"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd026
            
            #add-point:AFTER FIELD xmfd026 name="construct.a.xmfd026"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfd026
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd026
            #add-point:ON ACTION controlp INFIELD xmfd026 name="construct.c.xmfd026"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd027
            #add-point:BEFORE FIELD xmfd027 name="construct.b.xmfd027"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd027
            
            #add-point:AFTER FIELD xmfd027 name="construct.a.xmfd027"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfd027
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd027
            #add-point:ON ACTION controlp INFIELD xmfd027 name="construct.c.xmfd027"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd028
            #add-point:BEFORE FIELD xmfd028 name="construct.b.xmfd028"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd028
            
            #add-point:AFTER FIELD xmfd028 name="construct.a.xmfd028"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfd028
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd028
            #add-point:ON ACTION controlp INFIELD xmfd028 name="construct.c.xmfd028"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd030
            #add-point:BEFORE FIELD xmfd030 name="construct.b.xmfd030"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd030
            
            #add-point:AFTER FIELD xmfd030 name="construct.a.xmfd030"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfd030
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd030
            #add-point:ON ACTION controlp INFIELD xmfd030 name="construct.c.xmfd030"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd031
            #add-point:BEFORE FIELD xmfd031 name="construct.b.xmfd031"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd031
            
            #add-point:AFTER FIELD xmfd031 name="construct.a.xmfd031"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfd031
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd031
            #add-point:ON ACTION controlp INFIELD xmfd031 name="construct.c.xmfd031"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmfd032
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd032
            #add-point:ON ACTION controlp INFIELD xmfd032 name="construct.c.xmfd032"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '319'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfd032  #顯示到畫面上
            NEXT FIELD xmfd032                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd032
            #add-point:BEFORE FIELD xmfd032 name="construct.b.xmfd032"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd032
            
            #add-point:AFTER FIELD xmfd032 name="construct.a.xmfd032"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd033
            #add-point:BEFORE FIELD xmfd033 name="construct.b.xmfd033"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd033
            
            #add-point:AFTER FIELD xmfd033 name="construct.a.xmfd033"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfd033
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd033
            #add-point:ON ACTION controlp INFIELD xmfd033 name="construct.c.xmfd033"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmfdownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfdownid
            #add-point:ON ACTION controlp INFIELD xmfdownid name="construct.c.xmfdownid"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfdownid  #顯示到畫面上
            NEXT FIELD xmfdownid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfdownid
            #add-point:BEFORE FIELD xmfdownid name="construct.b.xmfdownid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfdownid
            
            #add-point:AFTER FIELD xmfdownid name="construct.a.xmfdownid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfdowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfdowndp
            #add-point:ON ACTION controlp INFIELD xmfdowndp name="construct.c.xmfdowndp"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfdowndp  #顯示到畫面上
            NEXT FIELD xmfdowndp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfdowndp
            #add-point:BEFORE FIELD xmfdowndp name="construct.b.xmfdowndp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfdowndp
            
            #add-point:AFTER FIELD xmfdowndp name="construct.a.xmfdowndp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfdcrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfdcrtid
            #add-point:ON ACTION controlp INFIELD xmfdcrtid name="construct.c.xmfdcrtid"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfdcrtid  #顯示到畫面上
            NEXT FIELD xmfdcrtid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfdcrtid
            #add-point:BEFORE FIELD xmfdcrtid name="construct.b.xmfdcrtid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfdcrtid
            
            #add-point:AFTER FIELD xmfdcrtid name="construct.a.xmfdcrtid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmfdcrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfdcrtdp
            #add-point:ON ACTION controlp INFIELD xmfdcrtdp name="construct.c.xmfdcrtdp"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfdcrtdp  #顯示到畫面上
            NEXT FIELD xmfdcrtdp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfdcrtdp
            #add-point:BEFORE FIELD xmfdcrtdp name="construct.b.xmfdcrtdp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfdcrtdp
            
            #add-point:AFTER FIELD xmfdcrtdp name="construct.a.xmfdcrtdp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfdcrtdt
            #add-point:BEFORE FIELD xmfdcrtdt name="construct.b.xmfdcrtdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmfdmodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfdmodid
            #add-point:ON ACTION controlp INFIELD xmfdmodid name="construct.c.xmfdmodid"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfdmodid  #顯示到畫面上
            NEXT FIELD xmfdmodid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfdmodid
            #add-point:BEFORE FIELD xmfdmodid name="construct.b.xmfdmodid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfdmodid
            
            #add-point:AFTER FIELD xmfdmodid name="construct.a.xmfdmodid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfdmoddt
            #add-point:BEFORE FIELD xmfdmoddt name="construct.b.xmfdmoddt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmfdcnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfdcnfid
            #add-point:ON ACTION controlp INFIELD xmfdcnfid name="construct.c.xmfdcnfid"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfdcnfid  #顯示到畫面上
            NEXT FIELD xmfdcnfid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfdcnfid
            #add-point:BEFORE FIELD xmfdcnfid name="construct.b.xmfdcnfid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfdcnfid
            
            #add-point:AFTER FIELD xmfdcnfid name="construct.a.xmfdcnfid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfdcnfdt
            #add-point:BEFORE FIELD xmfdcnfdt name="construct.b.xmfdcnfdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmfdpstid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfdpstid
            #add-point:ON ACTION controlp INFIELD xmfdpstid name="construct.c.xmfdpstid"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfdpstid  #顯示到畫面上
            NEXT FIELD xmfdpstid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfdpstid
            #add-point:BEFORE FIELD xmfdpstid name="construct.b.xmfdpstid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfdpstid
            
            #add-point:AFTER FIELD xmfdpstid name="construct.a.xmfdpstid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfdpstdt
            #add-point:BEFORE FIELD xmfdpstdt name="construct.b.xmfdpstdt"
            
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON xmffseq,xmff001,xmff002,xmff002_desc,xmff003,l_pmao009,l_pmao010,xmff004, 
          xmff005,xmff006,xmff007,xmff008,xmff009,xmff010,xmffsite,xmff0011,xmff0021,xmff0021_desc,xmff0041, 
          xmff0061,xmff0071,xmff011,xmff012,xmff013,xmff0012,xmff0022,xmff0022_desc,xmff0042,xmff0062, 
          xmff015,xmff016,xmff017,xmff018,xmff019
           FROM s_detail1[1].xmffseq,s_detail1[1].xmff001,s_detail1[1].xmff002,s_detail1[1].xmff002_desc, 
               s_detail1[1].xmff003,s_detail1[1].l_pmao009,s_detail1[1].l_pmao010,s_detail1[1].xmff004, 
               s_detail1[1].xmff005,s_detail1[1].xmff006,s_detail1[1].xmff007,s_detail1[1].xmff008,s_detail1[1].xmff009, 
               s_detail1[1].xmff010,s_detail1[1].xmffsite,s_detail4[1].xmff0011,s_detail4[1].xmff0021, 
               s_detail4[1].xmff0021_desc,s_detail4[1].xmff0041,s_detail4[1].xmff0061,s_detail4[1].xmff0071, 
               s_detail4[1].xmff011,s_detail4[1].xmff012,s_detail4[1].xmff013,s_detail5[1].xmff0012, 
               s_detail5[1].xmff0022,s_detail5[1].xmff0022_desc,s_detail5[1].xmff0042,s_detail5[1].xmff0062, 
               s_detail5[1].xmff015,s_detail5[1].xmff016,s_detail5[1].xmff017,s_detail5[1].xmff018,s_detail5[1].xmff019 
 
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmffseq
            #add-point:BEFORE FIELD xmffseq name="construct.b.page1.xmffseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmffseq
            
            #add-point:AFTER FIELD xmffseq name="construct.a.page1.xmffseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmffseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmffseq
            #add-point:ON ACTION controlp INFIELD xmffseq name="construct.c.page1.xmffseq"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmff001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff001
            #add-point:ON ACTION controlp INFIELD xmff001 name="construct.c.page1.xmff001"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaf001_15()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmff001  #顯示到畫面上
            NEXT FIELD xmff001                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff001
            #add-point:BEFORE FIELD xmff001 name="construct.b.page1.xmff001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff001
            
            #add-point:AFTER FIELD xmff001 name="construct.a.page1.xmff001"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff002
            #add-point:BEFORE FIELD xmff002 name="construct.b.page1.xmff002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff002
            
            #add-point:AFTER FIELD xmff002 name="construct.a.page1.xmff002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmff002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff002
            #add-point:ON ACTION controlp INFIELD xmff002 name="construct.c.page1.xmff002"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff002_desc
            #add-point:BEFORE FIELD xmff002_desc name="construct.b.page1.xmff002_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff002_desc
            
            #add-point:AFTER FIELD xmff002_desc name="construct.a.page1.xmff002_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmff002_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff002_desc
            #add-point:ON ACTION controlp INFIELD xmff002_desc name="construct.c.page1.xmff002_desc"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmff003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff003
            #add-point:ON ACTION controlp INFIELD xmff003 name="construct.c.page1.xmff003"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmao004_1()
            DISPLAY g_qryparam.return1 TO xmff003
            NEXT FIELD xmff003
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff003
            #add-point:BEFORE FIELD xmff003 name="construct.b.page1.xmff003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff003
            
            #add-point:AFTER FIELD xmff003 name="construct.a.page1.xmff003"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_pmao009
            #add-point:BEFORE FIELD l_pmao009 name="construct.b.page1.l_pmao009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_pmao009
            
            #add-point:AFTER FIELD l_pmao009 name="construct.a.page1.l_pmao009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.l_pmao009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_pmao009
            #add-point:ON ACTION controlp INFIELD l_pmao009 name="construct.c.page1.l_pmao009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_pmao010
            #add-point:BEFORE FIELD l_pmao010 name="construct.b.page1.l_pmao010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_pmao010
            
            #add-point:AFTER FIELD l_pmao010 name="construct.a.page1.l_pmao010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.l_pmao010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_pmao010
            #add-point:ON ACTION controlp INFIELD l_pmao010 name="construct.c.page1.l_pmao010"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmff004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff004
            #add-point:ON ACTION controlp INFIELD xmff004 name="construct.c.page1.xmff004"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()
            DISPLAY g_qryparam.return1 TO xmff004  #顯示到畫面上
            NEXT FIELD xmff004                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff004
            #add-point:BEFORE FIELD xmff004 name="construct.b.page1.xmff004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff004
            
            #add-point:AFTER FIELD xmff004 name="construct.a.page1.xmff004"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff005
            #add-point:BEFORE FIELD xmff005 name="construct.b.page1.xmff005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff005
            
            #add-point:AFTER FIELD xmff005 name="construct.a.page1.xmff005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmff005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff005
            #add-point:ON ACTION controlp INFIELD xmff005 name="construct.c.page1.xmff005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff006
            #add-point:BEFORE FIELD xmff006 name="construct.b.page1.xmff006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff006
            
            #add-point:AFTER FIELD xmff006 name="construct.a.page1.xmff006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmff006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff006
            #add-point:ON ACTION controlp INFIELD xmff006 name="construct.c.page1.xmff006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff007
            #add-point:BEFORE FIELD xmff007 name="construct.b.page1.xmff007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff007
            
            #add-point:AFTER FIELD xmff007 name="construct.a.page1.xmff007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmff007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff007
            #add-point:ON ACTION controlp INFIELD xmff007 name="construct.c.page1.xmff007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff008
            #add-point:BEFORE FIELD xmff008 name="construct.b.page1.xmff008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff008
            
            #add-point:AFTER FIELD xmff008 name="construct.a.page1.xmff008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmff008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff008
            #add-point:ON ACTION controlp INFIELD xmff008 name="construct.c.page1.xmff008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff009
            #add-point:BEFORE FIELD xmff009 name="construct.b.page1.xmff009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff009
            
            #add-point:AFTER FIELD xmff009 name="construct.a.page1.xmff009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmff009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff009
            #add-point:ON ACTION controlp INFIELD xmff009 name="construct.c.page1.xmff009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff010
            #add-point:BEFORE FIELD xmff010 name="construct.b.page1.xmff010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff010
            
            #add-point:AFTER FIELD xmff010 name="construct.a.page1.xmff010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmff010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff010
            #add-point:ON ACTION controlp INFIELD xmff010 name="construct.c.page1.xmff010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmffsite
            #add-point:BEFORE FIELD xmffsite name="construct.b.page1.xmffsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmffsite
            
            #add-point:AFTER FIELD xmffsite name="construct.a.page1.xmffsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmffsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmffsite
            #add-point:ON ACTION controlp INFIELD xmffsite name="construct.c.page1.xmffsite"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff0011
            #add-point:BEFORE FIELD xmff0011 name="construct.b.page4.xmff0011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff0011
            
            #add-point:AFTER FIELD xmff0011 name="construct.a.page4.xmff0011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmff0011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff0011
            #add-point:ON ACTION controlp INFIELD xmff0011 name="construct.c.page4.xmff0011"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff0021
            #add-point:BEFORE FIELD xmff0021 name="construct.b.page4.xmff0021"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff0021
            
            #add-point:AFTER FIELD xmff0021 name="construct.a.page4.xmff0021"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmff0021
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff0021
            #add-point:ON ACTION controlp INFIELD xmff0021 name="construct.c.page4.xmff0021"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff0021_desc
            #add-point:BEFORE FIELD xmff0021_desc name="construct.b.page4.xmff0021_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff0021_desc
            
            #add-point:AFTER FIELD xmff0021_desc name="construct.a.page4.xmff0021_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmff0021_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff0021_desc
            #add-point:ON ACTION controlp INFIELD xmff0021_desc name="construct.c.page4.xmff0021_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff0041
            #add-point:BEFORE FIELD xmff0041 name="construct.b.page4.xmff0041"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff0041
            
            #add-point:AFTER FIELD xmff0041 name="construct.a.page4.xmff0041"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmff0041
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff0041
            #add-point:ON ACTION controlp INFIELD xmff0041 name="construct.c.page4.xmff0041"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff0061
            #add-point:BEFORE FIELD xmff0061 name="construct.b.page4.xmff0061"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff0061
            
            #add-point:AFTER FIELD xmff0061 name="construct.a.page4.xmff0061"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmff0061
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff0061
            #add-point:ON ACTION controlp INFIELD xmff0061 name="construct.c.page4.xmff0061"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff0071
            #add-point:BEFORE FIELD xmff0071 name="construct.b.page4.xmff0071"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff0071
            
            #add-point:AFTER FIELD xmff0071 name="construct.a.page4.xmff0071"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmff0071
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff0071
            #add-point:ON ACTION controlp INFIELD xmff0071 name="construct.c.page4.xmff0071"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff011
            #add-point:BEFORE FIELD xmff011 name="construct.b.page4.xmff011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff011
            
            #add-point:AFTER FIELD xmff011 name="construct.a.page4.xmff011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmff011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff011
            #add-point:ON ACTION controlp INFIELD xmff011 name="construct.c.page4.xmff011"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff012
            #add-point:BEFORE FIELD xmff012 name="construct.b.page4.xmff012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff012
            
            #add-point:AFTER FIELD xmff012 name="construct.a.page4.xmff012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmff012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff012
            #add-point:ON ACTION controlp INFIELD xmff012 name="construct.c.page4.xmff012"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff013
            #add-point:BEFORE FIELD xmff013 name="construct.b.page4.xmff013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff013
            
            #add-point:AFTER FIELD xmff013 name="construct.a.page4.xmff013"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmff013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff013
            #add-point:ON ACTION controlp INFIELD xmff013 name="construct.c.page4.xmff013"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page5.xmff0012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff0012
            #add-point:ON ACTION controlp INFIELD xmff0012 name="construct.c.page5.xmff0012"
            #應用 a08 樣板自動產生(Version:1)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaf001_15()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmff0012  #顯示到畫面上
            NEXT FIELD xmff0012                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff0012
            #add-point:BEFORE FIELD xmff0012 name="construct.b.page5.xmff0012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff0012
            
            #add-point:AFTER FIELD xmff0012 name="construct.a.page5.xmff0012"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff0022
            #add-point:BEFORE FIELD xmff0022 name="construct.b.page5.xmff0022"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff0022
            
            #add-point:AFTER FIELD xmff0022 name="construct.a.page5.xmff0022"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.xmff0022
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff0022
            #add-point:ON ACTION controlp INFIELD xmff0022 name="construct.c.page5.xmff0022"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff0022_desc
            #add-point:BEFORE FIELD xmff0022_desc name="construct.b.page5.xmff0022_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff0022_desc
            
            #add-point:AFTER FIELD xmff0022_desc name="construct.a.page5.xmff0022_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.xmff0022_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff0022_desc
            #add-point:ON ACTION controlp INFIELD xmff0022_desc name="construct.c.page5.xmff0022_desc"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page5.xmff0042
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff0042
            #add-point:ON ACTION controlp INFIELD xmff0042 name="construct.c.page5.xmff0042"
            #應用 a08 樣板自動產生(Version:1)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imao002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmff0042  #顯示到畫面上
            NEXT FIELD xmff0042                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff0042
            #add-point:BEFORE FIELD xmff0042 name="construct.b.page5.xmff0042"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff0042
            
            #add-point:AFTER FIELD xmff0042 name="construct.a.page5.xmff0042"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff0062
            #add-point:BEFORE FIELD xmff0062 name="construct.b.page5.xmff0062"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff0062
            
            #add-point:AFTER FIELD xmff0062 name="construct.a.page5.xmff0062"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.xmff0062
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff0062
            #add-point:ON ACTION controlp INFIELD xmff0062 name="construct.c.page5.xmff0062"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page5.xmff015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff015
            #add-point:ON ACTION controlp INFIELD xmff015 name="construct.c.page5.xmff015"
            #應用 a08 樣板自動產生(Version:1)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xmam001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmff015  #顯示到畫面上
            NEXT FIELD xmff015                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff015
            #add-point:BEFORE FIELD xmff015 name="construct.b.page5.xmff015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff015
            
            #add-point:AFTER FIELD xmff015 name="construct.a.page5.xmff015"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff016
            #add-point:BEFORE FIELD xmff016 name="construct.b.page5.xmff016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff016
            
            #add-point:AFTER FIELD xmff016 name="construct.a.page5.xmff016"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.xmff016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff016
            #add-point:ON ACTION controlp INFIELD xmff016 name="construct.c.page5.xmff016"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff017
            #add-point:BEFORE FIELD xmff017 name="construct.b.page5.xmff017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff017
            
            #add-point:AFTER FIELD xmff017 name="construct.a.page5.xmff017"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.xmff017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff017
            #add-point:ON ACTION controlp INFIELD xmff017 name="construct.c.page5.xmff017"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff018
            #add-point:BEFORE FIELD xmff018 name="construct.b.page5.xmff018"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff018
            
            #add-point:AFTER FIELD xmff018 name="construct.a.page5.xmff018"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.xmff018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff018
            #add-point:ON ACTION controlp INFIELD xmff018 name="construct.c.page5.xmff018"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff019
            #add-point:BEFORE FIELD xmff019 name="construct.b.page5.xmff019"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff019
            
            #add-point:AFTER FIELD xmff019 name="construct.a.page5.xmff019"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.xmff019
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff019
            #add-point:ON ACTION controlp INFIELD xmff019 name="construct.c.page5.xmff019"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON xmfgseq,xmfg001,xmfg002,xmfg003,xmfg004,xmfgsite
           FROM s_detail2[1].xmfgseq,s_detail2[1].xmfg001,s_detail2[1].xmfg002,s_detail2[1].xmfg003, 
               s_detail2[1].xmfg004,s_detail2[1].xmfgsite
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body2.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfgseq
            #add-point:BEFORE FIELD xmfgseq name="construct.b.page2.xmfgseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfgseq
            
            #add-point:AFTER FIELD xmfgseq name="construct.a.page2.xmfgseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmfgseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfgseq
            #add-point:ON ACTION controlp INFIELD xmfgseq name="construct.c.page2.xmfgseq"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfg001
            #add-point:BEFORE FIELD xmfg001 name="construct.b.page2.xmfg001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfg001
            
            #add-point:AFTER FIELD xmfg001 name="construct.a.page2.xmfg001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmfg001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfg001
            #add-point:ON ACTION controlp INFIELD xmfg001 name="construct.c.page2.xmfg001"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfg002
            #add-point:BEFORE FIELD xmfg002 name="construct.b.page2.xmfg002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfg002
            
            #add-point:AFTER FIELD xmfg002 name="construct.a.page2.xmfg002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmfg002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfg002
            #add-point:ON ACTION controlp INFIELD xmfg002 name="construct.c.page2.xmfg002"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfg003
            #add-point:BEFORE FIELD xmfg003 name="construct.b.page2.xmfg003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfg003
            
            #add-point:AFTER FIELD xmfg003 name="construct.a.page2.xmfg003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmfg003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfg003
            #add-point:ON ACTION controlp INFIELD xmfg003 name="construct.c.page2.xmfg003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfg004
            #add-point:BEFORE FIELD xmfg004 name="construct.b.page2.xmfg004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfg004
            
            #add-point:AFTER FIELD xmfg004 name="construct.a.page2.xmfg004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmfg004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfg004
            #add-point:ON ACTION controlp INFIELD xmfg004 name="construct.c.page2.xmfg004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfgsite
            #add-point:BEFORE FIELD xmfgsite name="construct.b.page2.xmfgsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfgsite
            
            #add-point:AFTER FIELD xmfgsite name="construct.a.page2.xmfgsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmfgsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfgsite
            #add-point:ON ACTION controlp INFIELD xmfgsite name="construct.c.page2.xmfgsite"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON xmfhseq,xmfh001,xmfh002,xmfh003,xmfh004,xmfh005,xmfh006,xmfhsite
           FROM s_detail3[1].xmfhseq,s_detail3[1].xmfh001,s_detail3[1].xmfh002,s_detail3[1].xmfh003, 
               s_detail3[1].xmfh004,s_detail3[1].xmfh005,s_detail3[1].xmfh006,s_detail3[1].xmfhsite
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body3.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfhseq
            #add-point:BEFORE FIELD xmfhseq name="construct.b.page3.xmfhseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfhseq
            
            #add-point:AFTER FIELD xmfhseq name="construct.a.page3.xmfhseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmfhseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfhseq
            #add-point:ON ACTION controlp INFIELD xmfhseq name="construct.c.page3.xmfhseq"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page3.xmfh001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfh001
            #add-point:ON ACTION controlp INFIELD xmfh001 name="construct.c.page3.xmfh001"
            #應用 a08 樣板自動產生(Version:1)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaf001_17()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfh001  #顯示到畫面上
            NEXT FIELD xmfh001                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfh001
            #add-point:BEFORE FIELD xmfh001 name="construct.b.page3.xmfh001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfh001
            
            #add-point:AFTER FIELD xmfh001 name="construct.a.page3.xmfh001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmfh002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfh002
            #add-point:ON ACTION controlp INFIELD xmfh002 name="construct.c.page3.xmfh002"
            #應用 a08 樣板自動產生(Version:1)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
#            CALL q_ooaj002_1()                           #呼叫開窗
            CALL q_ooaj002()
            DISPLAY g_qryparam.return1 TO xmfh002  #顯示到畫面上
            NEXT FIELD xmfh002                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfh002
            #add-point:BEFORE FIELD xmfh002 name="construct.b.page3.xmfh002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfh002
            
            #add-point:AFTER FIELD xmfh002 name="construct.a.page3.xmfh002"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfh003
            #add-point:BEFORE FIELD xmfh003 name="construct.b.page3.xmfh003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfh003
            
            #add-point:AFTER FIELD xmfh003 name="construct.a.page3.xmfh003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmfh003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfh003
            #add-point:ON ACTION controlp INFIELD xmfh003 name="construct.c.page3.xmfh003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfh004
            #add-point:BEFORE FIELD xmfh004 name="construct.b.page3.xmfh004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfh004
            
            #add-point:AFTER FIELD xmfh004 name="construct.a.page3.xmfh004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmfh004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfh004
            #add-point:ON ACTION controlp INFIELD xmfh004 name="construct.c.page3.xmfh004"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page3.xmfh005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfh005
            #add-point:ON ACTION controlp INFIELD xmfh005 name="construct.c.page3.xmfh005"
            #應用 a08 樣板自動產生(Version:1)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            
            CALL q_pmaa001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmfh005  #顯示到畫面上
            NEXT FIELD xmfh005                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfh005
            #add-point:BEFORE FIELD xmfh005 name="construct.b.page3.xmfh005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfh005
            
            #add-point:AFTER FIELD xmfh005 name="construct.a.page3.xmfh005"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfh006
            #add-point:BEFORE FIELD xmfh006 name="construct.b.page3.xmfh006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfh006
            
            #add-point:AFTER FIELD xmfh006 name="construct.a.page3.xmfh006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmfh006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfh006
            #add-point:ON ACTION controlp INFIELD xmfh006 name="construct.c.page3.xmfh006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfhsite
            #add-point:BEFORE FIELD xmfhsite name="construct.b.page3.xmfhsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfhsite
            
            #add-point:AFTER FIELD xmfhsite name="construct.a.page3.xmfhsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmfhsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfhsite
            #add-point:ON ACTION controlp INFIELD xmfhsite name="construct.c.page3.xmfhsite"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
            INITIALIZE g_wc2_table2 TO NULL
 
            INITIALIZE g_wc2_table3 TO NULL
 
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "xmfd_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "xmff_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "xmfg_t" 
                     LET g_wc2_table2 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "xmfh_t" 
                     LET g_wc2_table3 = la_wc[li_idx].wc
 
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
 
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="axmt410.filter" >}
#應用 a50 樣板自動產生(Version:8)
#+ filter過濾功能
PRIVATE FUNCTION axmt410_filter()
   #add-point:filter段define name="filter.define_customerization"
   
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="filter.pre_function"
   
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON xmfddocno,xmfddocdt,xmfd001,xmfd002
                          FROM s_browse[1].b_xmfddocno,s_browse[1].b_xmfddocdt,s_browse[1].b_xmfd001, 
                              s_browse[1].b_xmfd002
 
         BEFORE CONSTRUCT
               DISPLAY axmt410_filter_parser('xmfddocno') TO s_browse[1].b_xmfddocno
            DISPLAY axmt410_filter_parser('xmfddocdt') TO s_browse[1].b_xmfddocdt
            DISPLAY axmt410_filter_parser('xmfd001') TO s_browse[1].b_xmfd001
            DISPLAY axmt410_filter_parser('xmfd002') TO s_browse[1].b_xmfd002
      
         #add-point:filter段cs_ctrl name="filter.cs_ctrl"
         
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL axmt410_filter_show('xmfddocno')
   CALL axmt410_filter_show('xmfddocdt')
   CALL axmt410_filter_show('xmfd001')
   CALL axmt410_filter_show('xmfd002')
 
END FUNCTION
 
{</section>}
 
{<section id="axmt410.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION axmt410_filter_parser(ps_field)
   #add-point:filter段define name="filter_parser.define_customerization"
   
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="axmt410.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION axmt410_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = axmt410_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="axmt410.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION axmt410_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_xmff_d.clear()
   CALL g_xmff2_d.clear()
   CALL g_xmff3_d.clear()
   CALL g_xmff4_d.clear()
   CALL g_xmff5_d.clear()
 
   
   #add-point:query段other name="query.other"
   
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL axmt410_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL axmt410_browser_fill("")
      CALL axmt410_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
   LET g_detail_idx_list[4] = 1
   LET g_detail_idx_list[5] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL axmt410_filter_show('xmfddocno')
   CALL axmt410_filter_show('xmfddocdt')
   CALL axmt410_filter_show('xmfd001')
   CALL axmt410_filter_show('xmfd002')
   CALL axmt410_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL axmt410_fetch("F") 
      #顯示單身筆數
      CALL axmt410_idx_chk()
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="axmt410.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION axmt410_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_xmfd_m.xmfddocno = g_browser[g_current_idx].b_xmfddocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE axmt410_master_referesh USING g_xmfd_m.xmfddocno INTO g_xmfd_m.xmfddocno,g_xmfd_m.xmfdsite, 
       g_xmfd_m.xmfddocdt,g_xmfd_m.xmfd001,g_xmfd_m.xmfd002,g_xmfd_m.xmfdstus,g_xmfd_m.xmfd005,g_xmfd_m.xmfd003, 
       g_xmfd_m.xmfd006,g_xmfd_m.xmfd007,g_xmfd_m.xmfd008,g_xmfd_m.xmfd009,g_xmfd_m.xmfd010,g_xmfd_m.xmfd011, 
       g_xmfd_m.xmfd029,g_xmfd_m.xmfd012,g_xmfd_m.xmfd013,g_xmfd_m.xmfd014,g_xmfd_m.xmfd015,g_xmfd_m.xmfd016, 
       g_xmfd_m.xmfd017,g_xmfd_m.xmfd018,g_xmfd_m.xmfd019,g_xmfd_m.xmfd020,g_xmfd_m.xmfd021,g_xmfd_m.xmfd022, 
       g_xmfd_m.xmfd023,g_xmfd_m.xmfd024,g_xmfd_m.xmfd025,g_xmfd_m.xmfd026,g_xmfd_m.xmfd027,g_xmfd_m.xmfd028, 
       g_xmfd_m.xmfd030,g_xmfd_m.xmfd031,g_xmfd_m.xmfd032,g_xmfd_m.xmfd033,g_xmfd_m.xmfdownid,g_xmfd_m.xmfdowndp, 
       g_xmfd_m.xmfdcrtid,g_xmfd_m.xmfdcrtdp,g_xmfd_m.xmfdcrtdt,g_xmfd_m.xmfdmodid,g_xmfd_m.xmfdmoddt, 
       g_xmfd_m.xmfdcnfid,g_xmfd_m.xmfdcnfdt,g_xmfd_m.xmfdpstid,g_xmfd_m.xmfdpstdt,g_xmfd_m.xmfd001_desc, 
       g_xmfd_m.xmfd002_desc,g_xmfd_m.xmfd003_desc,g_xmfd_m.xmfd009_desc,g_xmfd_m.xmfd015_desc,g_xmfd_m.xmfd016_desc, 
       g_xmfd_m.xmfd017_desc,g_xmfd_m.xmfd018_desc,g_xmfd_m.xmfd019_desc,g_xmfd_m.xmfd022_desc,g_xmfd_m.xmfd032_desc, 
       g_xmfd_m.xmfdownid_desc,g_xmfd_m.xmfdowndp_desc,g_xmfd_m.xmfdcrtid_desc,g_xmfd_m.xmfdcrtdp_desc, 
       g_xmfd_m.xmfdmodid_desc,g_xmfd_m.xmfdcnfid_desc,g_xmfd_m.xmfdpstid_desc
   
   #遮罩相關處理
   LET g_xmfd_m_mask_o.* =  g_xmfd_m.*
   CALL axmt410_xmfd_t_mask()
   LET g_xmfd_m_mask_n.* =  g_xmfd_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt410_set_act_visible()   
   CALL axmt410_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
   CALL cl_set_act_visible("modify,delete,insert,modify_detail,s_item_select",TRUE)
   IF g_xmfd_m.xmfdstus NOT MATCHES "[NDR]" THEN
      CALL cl_set_act_visible("modify,delete,modify_detail,s_item_select",FALSE)
   END IF
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   
   #end add-point
   
   #保存單頭舊值
   LET g_xmfd_m_t.* = g_xmfd_m.*
   LET g_xmfd_m_o.* = g_xmfd_m.*
   
   LET g_data_owner = g_xmfd_m.xmfdownid      
   LET g_data_dept  = g_xmfd_m.xmfdowndp
   
   #重新顯示   
   CALL axmt410_show()
 
   #應用 a56 樣板自動產生(Version:3)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
 
END FUNCTION
 
{</section>}
 
{<section id="axmt410.insert" >}
#+ 資料新增
PRIVATE FUNCTION axmt410_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_xmff_d.clear()   
   CALL g_xmff2_d.clear()  
   CALL g_xmff3_d.clear()  
   CALL g_xmff4_d.clear()  
   CALL g_xmff5_d.clear()  
 
 
   INITIALIZE g_xmfd_m.* TO NULL             #DEFAULT 設定
   
   LET g_xmfddocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_xmfd_m.xmfdownid = g_user
      LET g_xmfd_m.xmfdowndp = g_dept
      LET g_xmfd_m.xmfdcrtid = g_user
      LET g_xmfd_m.xmfdcrtdp = g_dept 
      LET g_xmfd_m.xmfdcrtdt = cl_get_current()
      LET g_xmfd_m.xmfdmodid = g_user
      LET g_xmfd_m.xmfdmoddt = cl_get_current()
      LET g_xmfd_m.xmfdstus = 'N'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_xmfd_m.xmfd008 = "3"
      LET g_xmfd_m.xmfd023 = "1"
      LET g_xmfd_m.xmfd030 = "1"
 
  
      #add-point:單頭預設值 name="insert.default"
      LET g_xmfd_m.xmfdsite = g_site
      LET g_xmfd_m.xmfddocdt = g_today                   #報價日期   
      LET g_xmfd_m.xmfd001   = g_user                    #業務人員 
      CALL s_desc_get_person_desc(g_xmfd_m.xmfd001)
           RETURNING g_xmfd_m.xmfd001_desc
      DISPLAY BY NAME g_xmfd_m.xmfd001_desc
      LET g_xmfd_m.xmfd002   = g_dept                    #業務部門   
      CALL s_desc_get_department_desc(g_xmfd_m.xmfd002)
           RETURNING g_xmfd_m.xmfd002_desc
      DISPLAY BY NAME g_xmfd_m.xmfd002_desc
      #stellar 140828 add ----------------------(S)
      #LET g_xmfd_m.xmfd007 = g_today                     #報價有效期限
      #反應單140827-00003#6，不做報價有效日期的預設
      #stellar 140828 add ----------------------(E)      
      
      INITIALIZE g_xmfd_m_t.* TO NULL
      INITIALIZE g_xmfd_m_o.* TO NULL
      LET g_xmfd_m_t.* = g_xmfd_m.*
      LET g_xmfd_m_o.* = g_xmfd_m.*
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_xmfd_m_t.* = g_xmfd_m.*
      LET g_xmfd_m_o.* = g_xmfd_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_xmfd_m.xmfdstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
    
      CALL axmt410_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_xmfd_m.* TO NULL
         INITIALIZE g_xmff_d TO NULL
         INITIALIZE g_xmff2_d TO NULL
         INITIALIZE g_xmff3_d TO NULL
         INITIALIZE g_xmff4_d TO NULL
         INITIALIZE g_xmff5_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         
         #end add-point 
         CALL axmt410_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_xmff_d.clear()
      #CALL g_xmff2_d.clear()
      #CALL g_xmff3_d.clear()
      #CALL g_xmff4_d.clear()
      #CALL g_xmff5_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt410_set_act_visible()   
   CALL axmt410_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_xmfddocno_t = g_xmfd_m.xmfddocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " xmfdent = " ||g_enterprise|| " AND",
                      " xmfddocno = '", g_xmfd_m.xmfddocno, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axmt410_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE axmt410_cl
   
   CALL axmt410_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE axmt410_master_referesh USING g_xmfd_m.xmfddocno INTO g_xmfd_m.xmfddocno,g_xmfd_m.xmfdsite, 
       g_xmfd_m.xmfddocdt,g_xmfd_m.xmfd001,g_xmfd_m.xmfd002,g_xmfd_m.xmfdstus,g_xmfd_m.xmfd005,g_xmfd_m.xmfd003, 
       g_xmfd_m.xmfd006,g_xmfd_m.xmfd007,g_xmfd_m.xmfd008,g_xmfd_m.xmfd009,g_xmfd_m.xmfd010,g_xmfd_m.xmfd011, 
       g_xmfd_m.xmfd029,g_xmfd_m.xmfd012,g_xmfd_m.xmfd013,g_xmfd_m.xmfd014,g_xmfd_m.xmfd015,g_xmfd_m.xmfd016, 
       g_xmfd_m.xmfd017,g_xmfd_m.xmfd018,g_xmfd_m.xmfd019,g_xmfd_m.xmfd020,g_xmfd_m.xmfd021,g_xmfd_m.xmfd022, 
       g_xmfd_m.xmfd023,g_xmfd_m.xmfd024,g_xmfd_m.xmfd025,g_xmfd_m.xmfd026,g_xmfd_m.xmfd027,g_xmfd_m.xmfd028, 
       g_xmfd_m.xmfd030,g_xmfd_m.xmfd031,g_xmfd_m.xmfd032,g_xmfd_m.xmfd033,g_xmfd_m.xmfdownid,g_xmfd_m.xmfdowndp, 
       g_xmfd_m.xmfdcrtid,g_xmfd_m.xmfdcrtdp,g_xmfd_m.xmfdcrtdt,g_xmfd_m.xmfdmodid,g_xmfd_m.xmfdmoddt, 
       g_xmfd_m.xmfdcnfid,g_xmfd_m.xmfdcnfdt,g_xmfd_m.xmfdpstid,g_xmfd_m.xmfdpstdt,g_xmfd_m.xmfd001_desc, 
       g_xmfd_m.xmfd002_desc,g_xmfd_m.xmfd003_desc,g_xmfd_m.xmfd009_desc,g_xmfd_m.xmfd015_desc,g_xmfd_m.xmfd016_desc, 
       g_xmfd_m.xmfd017_desc,g_xmfd_m.xmfd018_desc,g_xmfd_m.xmfd019_desc,g_xmfd_m.xmfd022_desc,g_xmfd_m.xmfd032_desc, 
       g_xmfd_m.xmfdownid_desc,g_xmfd_m.xmfdowndp_desc,g_xmfd_m.xmfdcrtid_desc,g_xmfd_m.xmfdcrtdp_desc, 
       g_xmfd_m.xmfdmodid_desc,g_xmfd_m.xmfdcnfid_desc,g_xmfd_m.xmfdpstid_desc
   
   
   #遮罩相關處理
   LET g_xmfd_m_mask_o.* =  g_xmfd_m.*
   CALL axmt410_xmfd_t_mask()
   LET g_xmfd_m_mask_n.* =  g_xmfd_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_xmfd_m.xmfddocno,g_xmfd_m.xmfddocno_desc,g_xmfd_m.xmfdsite,g_xmfd_m.xmfddocdt,g_xmfd_m.xmfd001, 
       g_xmfd_m.xmfd001_desc,g_xmfd_m.xmfd002,g_xmfd_m.xmfd002_desc,g_xmfd_m.xmfdstus,g_xmfd_m.xmfd005, 
       g_xmfd_m.xmfd003,g_xmfd_m.xmfd003_desc,g_xmfd_m.xmfd006,g_xmfd_m.xmfd007,g_xmfd_m.xmfd008,g_xmfd_m.xmfd009, 
       g_xmfd_m.xmfd009_desc,g_xmfd_m.xmfd010,g_xmfd_m.xmfd010_desc,g_xmfd_m.xmfd011,g_xmfd_m.xmfd029, 
       g_xmfd_m.xmfd012,g_xmfd_m.xmfd012_desc,g_xmfd_m.xmfd013,g_xmfd_m.xmfd014,g_xmfd_m.xmfd015,g_xmfd_m.xmfd015_desc, 
       g_xmfd_m.xmfd016,g_xmfd_m.xmfd016_desc,g_xmfd_m.xmfd017,g_xmfd_m.xmfd017_desc,g_xmfd_m.xmfd018, 
       g_xmfd_m.xmfd018_desc,g_xmfd_m.xmfd019,g_xmfd_m.xmfd019_desc,g_xmfd_m.xmfd020,g_xmfd_m.xmfd020_desc, 
       g_xmfd_m.xmfd021,g_xmfd_m.xmfd021_desc,g_xmfd_m.xmfd022,g_xmfd_m.xmfd022_desc,g_xmfd_m.oofb017, 
       g_xmfd_m.xmfd023,g_xmfd_m.xmfd024,g_xmfd_m.xmfd025,g_xmfd_m.xmfd026,g_xmfd_m.xmfd027,g_xmfd_m.xmfd028, 
       g_xmfd_m.xmfd030,g_xmfd_m.xmfd031,g_xmfd_m.xmfd032,g_xmfd_m.xmfd032_desc,g_xmfd_m.xmfd033,g_xmfd_m.xmfdownid, 
       g_xmfd_m.xmfdownid_desc,g_xmfd_m.xmfdowndp,g_xmfd_m.xmfdowndp_desc,g_xmfd_m.xmfdcrtid,g_xmfd_m.xmfdcrtid_desc, 
       g_xmfd_m.xmfdcrtdp,g_xmfd_m.xmfdcrtdp_desc,g_xmfd_m.xmfdcrtdt,g_xmfd_m.xmfdmodid,g_xmfd_m.xmfdmodid_desc, 
       g_xmfd_m.xmfdmoddt,g_xmfd_m.xmfdcnfid,g_xmfd_m.xmfdcnfid_desc,g_xmfd_m.xmfdcnfdt,g_xmfd_m.xmfdpstid, 
       g_xmfd_m.xmfdpstid_desc,g_xmfd_m.xmfdpstdt
   
   #add-point:新增結束後 name="insert.after"
   
   #end add-point 
   
   LET g_data_owner = g_xmfd_m.xmfdownid      
   LET g_data_dept  = g_xmfd_m.xmfdowndp
   
   #功能已完成,通報訊息中心
   CALL axmt410_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="axmt410.modify" >}
#+ 資料修改
PRIVATE FUNCTION axmt410_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING
 
   DEFINE l_wc2_table3   STRING
 
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   #保存單頭舊值
   LET g_xmfd_m_t.* = g_xmfd_m.*
   LET g_xmfd_m_o.* = g_xmfd_m.*
   
   IF g_xmfd_m.xmfddocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_xmfddocno_t = g_xmfd_m.xmfddocno
 
   CALL s_transaction_begin()
   
   OPEN axmt410_cl USING g_enterprise,g_xmfd_m.xmfddocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axmt410_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE axmt410_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axmt410_master_referesh USING g_xmfd_m.xmfddocno INTO g_xmfd_m.xmfddocno,g_xmfd_m.xmfdsite, 
       g_xmfd_m.xmfddocdt,g_xmfd_m.xmfd001,g_xmfd_m.xmfd002,g_xmfd_m.xmfdstus,g_xmfd_m.xmfd005,g_xmfd_m.xmfd003, 
       g_xmfd_m.xmfd006,g_xmfd_m.xmfd007,g_xmfd_m.xmfd008,g_xmfd_m.xmfd009,g_xmfd_m.xmfd010,g_xmfd_m.xmfd011, 
       g_xmfd_m.xmfd029,g_xmfd_m.xmfd012,g_xmfd_m.xmfd013,g_xmfd_m.xmfd014,g_xmfd_m.xmfd015,g_xmfd_m.xmfd016, 
       g_xmfd_m.xmfd017,g_xmfd_m.xmfd018,g_xmfd_m.xmfd019,g_xmfd_m.xmfd020,g_xmfd_m.xmfd021,g_xmfd_m.xmfd022, 
       g_xmfd_m.xmfd023,g_xmfd_m.xmfd024,g_xmfd_m.xmfd025,g_xmfd_m.xmfd026,g_xmfd_m.xmfd027,g_xmfd_m.xmfd028, 
       g_xmfd_m.xmfd030,g_xmfd_m.xmfd031,g_xmfd_m.xmfd032,g_xmfd_m.xmfd033,g_xmfd_m.xmfdownid,g_xmfd_m.xmfdowndp, 
       g_xmfd_m.xmfdcrtid,g_xmfd_m.xmfdcrtdp,g_xmfd_m.xmfdcrtdt,g_xmfd_m.xmfdmodid,g_xmfd_m.xmfdmoddt, 
       g_xmfd_m.xmfdcnfid,g_xmfd_m.xmfdcnfdt,g_xmfd_m.xmfdpstid,g_xmfd_m.xmfdpstdt,g_xmfd_m.xmfd001_desc, 
       g_xmfd_m.xmfd002_desc,g_xmfd_m.xmfd003_desc,g_xmfd_m.xmfd009_desc,g_xmfd_m.xmfd015_desc,g_xmfd_m.xmfd016_desc, 
       g_xmfd_m.xmfd017_desc,g_xmfd_m.xmfd018_desc,g_xmfd_m.xmfd019_desc,g_xmfd_m.xmfd022_desc,g_xmfd_m.xmfd032_desc, 
       g_xmfd_m.xmfdownid_desc,g_xmfd_m.xmfdowndp_desc,g_xmfd_m.xmfdcrtid_desc,g_xmfd_m.xmfdcrtdp_desc, 
       g_xmfd_m.xmfdmodid_desc,g_xmfd_m.xmfdcnfid_desc,g_xmfd_m.xmfdpstid_desc
   
   #檢查是否允許此動作
   IF NOT axmt410_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_xmfd_m_mask_o.* =  g_xmfd_m.*
   CALL axmt410_xmfd_t_mask()
   LET g_xmfd_m_mask_n.* =  g_xmfd_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
   #LET l_wc2_table3 = g_wc2_table3
   #LET l_wc2_table3 = " 1=1"
 
 
 
   
   CALL axmt410_show()
   #add-point:modify段show之後 name="modify.after_show"
   
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 
 
   #LET  g_wc2_table3 = l_wc2_table3 
 
 
 
    
   WHILE TRUE
      LET g_xmfddocno_t = g_xmfd_m.xmfddocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_xmfd_m.xmfdmodid = g_user 
LET g_xmfd_m.xmfdmoddt = cl_get_current()
LET g_xmfd_m.xmfdmodid_desc = cl_get_username(g_xmfd_m.xmfdmodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      #「D抽單 / R已拒絕」狀況碼更改資料後，需還原為「N未確認」
      IF g_xmfd_m.xmfdstus MATCHES "[DR]" THEN
         LET g_xmfd_m.xmfdstus = 'N'
      END IF
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL axmt410_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE xmfd_t SET (xmfdmodid,xmfdmoddt) = (g_xmfd_m.xmfdmodid,g_xmfd_m.xmfdmoddt)
          WHERE xmfdent = g_enterprise AND xmfddocno = g_xmfddocno_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_xmfd_m.* = g_xmfd_m_t.*
            CALL axmt410_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_xmfd_m.xmfddocno != g_xmfd_m_t.xmfddocno
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         
         #end add-point
         
         #更新單身key值
         UPDATE xmff_t SET xmffdocno = g_xmfd_m.xmfddocno
 
          WHERE xmffent = g_enterprise AND xmffdocno = g_xmfd_m_t.xmfddocno
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "xmff_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmff_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update2"
         
         #end add-point
         
         UPDATE xmfg_t
            SET xmfgdocno = g_xmfd_m.xmfddocno
 
          WHERE xmfgent = g_enterprise AND
                xmfgdocno = g_xmfddocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update2"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "xmfg_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmfg_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update2"
         
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update3"
         
         #end add-point
         
         UPDATE xmfh_t
            SET xmfhdocno = g_xmfd_m.xmfddocno
 
          WHERE xmfhent = g_enterprise AND
                xmfhdocno = g_xmfddocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update3"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "xmfh_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmfh_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update3"
         
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt410_set_act_visible()   
   CALL axmt410_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " xmfdent = " ||g_enterprise|| " AND",
                      " xmfddocno = '", g_xmfd_m.xmfddocno, "' "
 
   #填到對應位置
   CALL axmt410_browser_fill("")
 
   CLOSE axmt410_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL axmt410_msgcentre_notify('modify')
 
END FUNCTION 
 
{</section>}
 
{<section id="axmt410.input" >}
#+ 資料輸入
PRIVATE FUNCTION axmt410_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE l_ooef004              LIKE ooef_t.ooef004      #單據別參照表 
   DEFINE l_success              LIKE type_t.num5
   DEFINE l_oodb011              LIKE oodb_t.oodb011
   DEFINE l_pmaa027              LIKE pmaa_t.pmaa027
   DEFINE l_address              STRING 
   DEFINE l_where                STRING
   DEFINE l_xmah004              LIKE xmah_t.xmah004
   DEFINE l_xmah005              LIKE xmah_t.xmah005
   DEFINE l_xmah006              LIKE xmah_t.xmah006
   DEFINE l_oocq019              LIKE oocq_t.oocq019
   DEFINE l_pmao002              LIKE pmao_t.pmao002
   DEFINE l_pmao003              LIKE pmao_t.pmao003 
   DEFINE l_imaa016              LIKE imaa_t.imaa016
   DEFINE l_imaa017              LIKE imaa_t.imaa017
   DEFINE l_xmffseq              LIKE xmff_t.xmffseq
   DEFINE l_xmff003              LIKE xmff_t.xmff003
   DEFINE l_xmff008              LIKE xmff_t.xmff008
   DEFINE l_xmff009              LIKE xmff_t.xmff009
   DEFINE l_xmff010              LIKE xmff_t.xmff010
   DEFINE l_xmff011              LIKE xmff_t.xmff011
   DEFINE l_xmff012              LIKE xmff_t.xmff012
   DEFINE l_xmff013              LIKE xmff_t.xmff013 
   DEFINE l_xmff016              LIKE xmff_t.xmff016
   DEFINE l_xmam                 RECORD LIKE xmam_t.*
   DEFINE l_xmff                 RECORD LIKE xmff_t.*
   DEFINE l_question_flag        LIKE type_t.chr1         #是否有詢問過user是否產生單身    
   DEFINE l_str01                STRING
   DEFINE l_str02                STRING
   #160804-00063#1-add-(S)
   DEFINE l_imaa005              LIKE imaa_t.imaa005  
   DEFINE l_psab           RECORD LIKE psab_t.*  #紀錄多維的產品特徵
   DEFINE l_psabseq        LIKE psab_t.psabseq   #紀錄最大項次
   #160804-00063#1-add-(E) 
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xmfd_m.xmfddocno,g_xmfd_m.xmfddocno_desc,g_xmfd_m.xmfdsite,g_xmfd_m.xmfddocdt,g_xmfd_m.xmfd001, 
       g_xmfd_m.xmfd001_desc,g_xmfd_m.xmfd002,g_xmfd_m.xmfd002_desc,g_xmfd_m.xmfdstus,g_xmfd_m.xmfd005, 
       g_xmfd_m.xmfd003,g_xmfd_m.xmfd003_desc,g_xmfd_m.xmfd006,g_xmfd_m.xmfd007,g_xmfd_m.xmfd008,g_xmfd_m.xmfd009, 
       g_xmfd_m.xmfd009_desc,g_xmfd_m.xmfd010,g_xmfd_m.xmfd010_desc,g_xmfd_m.xmfd011,g_xmfd_m.xmfd029, 
       g_xmfd_m.xmfd012,g_xmfd_m.xmfd012_desc,g_xmfd_m.xmfd013,g_xmfd_m.xmfd014,g_xmfd_m.xmfd015,g_xmfd_m.xmfd015_desc, 
       g_xmfd_m.xmfd016,g_xmfd_m.xmfd016_desc,g_xmfd_m.xmfd017,g_xmfd_m.xmfd017_desc,g_xmfd_m.xmfd018, 
       g_xmfd_m.xmfd018_desc,g_xmfd_m.xmfd019,g_xmfd_m.xmfd019_desc,g_xmfd_m.xmfd020,g_xmfd_m.xmfd020_desc, 
       g_xmfd_m.xmfd021,g_xmfd_m.xmfd021_desc,g_xmfd_m.xmfd022,g_xmfd_m.xmfd022_desc,g_xmfd_m.oofb017, 
       g_xmfd_m.xmfd023,g_xmfd_m.xmfd024,g_xmfd_m.xmfd025,g_xmfd_m.xmfd026,g_xmfd_m.xmfd027,g_xmfd_m.xmfd028, 
       g_xmfd_m.xmfd030,g_xmfd_m.xmfd031,g_xmfd_m.xmfd032,g_xmfd_m.xmfd032_desc,g_xmfd_m.xmfd033,g_xmfd_m.xmfdownid, 
       g_xmfd_m.xmfdownid_desc,g_xmfd_m.xmfdowndp,g_xmfd_m.xmfdowndp_desc,g_xmfd_m.xmfdcrtid,g_xmfd_m.xmfdcrtid_desc, 
       g_xmfd_m.xmfdcrtdp,g_xmfd_m.xmfdcrtdp_desc,g_xmfd_m.xmfdcrtdt,g_xmfd_m.xmfdmodid,g_xmfd_m.xmfdmodid_desc, 
       g_xmfd_m.xmfdmoddt,g_xmfd_m.xmfdcnfid,g_xmfd_m.xmfdcnfid_desc,g_xmfd_m.xmfdcnfdt,g_xmfd_m.xmfdpstid, 
       g_xmfd_m.xmfdpstid_desc,g_xmfd_m.xmfdpstdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT xmffseq,xmff001,xmff002,xmff003,xmff004,xmff005,xmff006,xmff007,xmff008, 
       xmff009,xmff010,xmffsite,xmffseq,xmff011,xmff012,xmff013,xmffseq,xmff015,xmff016,xmff017,xmff018, 
       xmff019 FROM xmff_t WHERE xmffent=? AND xmffdocno=? AND xmffseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt410_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql name="input.define_sql2"
   
   #end add-point    
   LET g_forupd_sql = "SELECT xmfgseq,xmfg001,xmfg002,xmfg003,xmfg004,xmfgsite FROM xmfg_t WHERE xmfgent=?  
       AND xmfgdocno=? AND xmfgseq=? AND xmfg001=? AND xmfg002=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql2"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt410_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql3"
   
   #end add-point    
   LET g_forupd_sql = "SELECT xmfhseq,xmfh001,xmfh002,xmfh003,xmfh004,xmfh005,xmfh006,xmfhsite FROM  
       xmfh_t WHERE xmfhent=? AND xmfhdocno=? AND xmfhseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql3"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt410_bcl3 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql name="input.other_sql"
   #是否有詢問過user是否產生單身   
   #預設都是沒有 
   LET l_question_flag = 'N'
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL axmt410_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   
   #end add-point
   CALL axmt410_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_xmfd_m.xmfddocno,g_xmfd_m.xmfdsite,g_xmfd_m.xmfddocdt,g_xmfd_m.xmfd001,g_xmfd_m.xmfd002, 
       g_xmfd_m.xmfdstus,g_xmfd_m.xmfd005,g_xmfd_m.xmfd003,g_xmfd_m.xmfd006,g_xmfd_m.xmfd007,g_xmfd_m.xmfd008, 
       g_xmfd_m.xmfd009,g_xmfd_m.xmfd010,g_xmfd_m.xmfd011,g_xmfd_m.xmfd029,g_xmfd_m.xmfd012,g_xmfd_m.xmfd013, 
       g_xmfd_m.xmfd014,g_xmfd_m.xmfd015,g_xmfd_m.xmfd016,g_xmfd_m.xmfd017,g_xmfd_m.xmfd018,g_xmfd_m.xmfd019, 
       g_xmfd_m.xmfd020,g_xmfd_m.xmfd021,g_xmfd_m.xmfd022,g_xmfd_m.xmfd023,g_xmfd_m.xmfd024,g_xmfd_m.xmfd025, 
       g_xmfd_m.xmfd026,g_xmfd_m.xmfd027,g_xmfd_m.xmfd028
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   LET l_ooef004 = ''
   SELECT ooef004 INTO l_ooef004 
     FROM ooef_t
    WHERE ooefent = g_enterprise
      AND ooef001 = g_site 
   
   LET g_errshow = 1
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="axmt410.input.head" >}
      #單頭段
      INPUT BY NAME g_xmfd_m.xmfddocno,g_xmfd_m.xmfdsite,g_xmfd_m.xmfddocdt,g_xmfd_m.xmfd001,g_xmfd_m.xmfd002, 
          g_xmfd_m.xmfdstus,g_xmfd_m.xmfd005,g_xmfd_m.xmfd003,g_xmfd_m.xmfd006,g_xmfd_m.xmfd007,g_xmfd_m.xmfd008, 
          g_xmfd_m.xmfd009,g_xmfd_m.xmfd010,g_xmfd_m.xmfd011,g_xmfd_m.xmfd029,g_xmfd_m.xmfd012,g_xmfd_m.xmfd013, 
          g_xmfd_m.xmfd014,g_xmfd_m.xmfd015,g_xmfd_m.xmfd016,g_xmfd_m.xmfd017,g_xmfd_m.xmfd018,g_xmfd_m.xmfd019, 
          g_xmfd_m.xmfd020,g_xmfd_m.xmfd021,g_xmfd_m.xmfd022,g_xmfd_m.xmfd023,g_xmfd_m.xmfd024,g_xmfd_m.xmfd025, 
          g_xmfd_m.xmfd026,g_xmfd_m.xmfd027,g_xmfd_m.xmfd028 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN axmt410_cl USING g_enterprise,g_xmfd_m.xmfddocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axmt410_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE axmt410_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL axmt410_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
 
            #end add-point
            CALL axmt410_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfddocno
            
            #add-point:AFTER FIELD xmfddocno name="input.a.xmfddocno"
            LET g_xmfd_m.xmfddocno_desc = ' '
            CALL s_aooi200_get_slip_desc(g_xmfd_m.xmfddocno)
                 RETURNING g_xmfd_m.xmfddocno_desc
            DISPLAY BY NAME g_xmfd_m.xmfddocno_desc
            
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xmfd_m.xmfddocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xmfd_m.xmfddocno != g_xmfddocno_t )) THEN 
                  IF NOT axmt410_xmfddocno_chk() THEN
                     LET g_xmfd_m.xmfddocno = g_xmfddocno_t
                     CALL s_aooi200_get_slip_desc(g_xmfd_m.xmfddocno)
                          RETURNING g_xmfd_m.xmfddocno_desc
                     DISPLAY BY NAME g_xmfd_m.xmfddocno_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF 
               
               CALL axmt410_slip_default()
               CALL axmt410_xmfd007_def()
            ELSE
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'sub-00324'      #單號欄位不可為空！
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

               NEXT FIELD CURRENT
            END IF

            CALL s_aooi200_get_slip_desc(g_xmfd_m.xmfddocno)
                 RETURNING g_xmfd_m.xmfddocno_desc
            DISPLAY BY NAME g_xmfd_m.xmfddocno_desc

            CALL axmt410_set_entry(p_cmd)
            CALL axmt410_set_no_entry(p_cmd)

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfddocno
            #add-point:BEFORE FIELD xmfddocno name="input.b.xmfddocno"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfddocno
            #add-point:ON CHANGE xmfddocno name="input.g.xmfddocno"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfdsite
            #add-point:BEFORE FIELD xmfdsite name="input.b.xmfdsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfdsite
            
            #add-point:AFTER FIELD xmfdsite name="input.a.xmfdsite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfdsite
            #add-point:ON CHANGE xmfdsite name="input.g.xmfdsite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfddocdt
            #add-point:BEFORE FIELD xmfddocdt name="input.b.xmfddocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfddocdt
            
            #add-point:AFTER FIELD xmfddocdt name="input.a.xmfddocdt"
            IF NOT cl_null(g_xmfd_m.xmfddocdt) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmfd_m.xmfddocdt <> g_xmfd_m_o.xmfddocdt OR
                                                   cl_null(g_xmfd_m_o.xmfddocdt))) THEN
                  CALL axmt410_xmfd007_def()
               END IF
            END IF
            LET g_xmfd_m_o.xmfddocdt = g_xmfd_m.xmfddocdt
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfddocdt
            #add-point:ON CHANGE xmfddocdt name="input.g.xmfddocdt"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd001
            
            #add-point:AFTER FIELD xmfd001 name="input.a.xmfd001"
            LET g_xmfd_m.xmfd001_desc = ' '
            #取人員姓名 
            CALL s_desc_get_person_desc(g_xmfd_m.xmfd001)
                 RETURNING g_xmfd_m.xmfd001_desc
            DISPLAY BY NAME g_xmfd_m.xmfd001_desc
            
            IF NOT cl_null(g_xmfd_m.xmfd001) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmfd_m.xmfd001 != g_xmfd_m_o.xmfd001 OR
                                                   g_xmfd_m_o.xmfd001 IS NULL)) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmfd_m.xmfd001
                  #160318-00025#35  2016/05/18  by pengxin  add(S)
                  LET g_errshow = TRUE #是否開窗 
                  LET g_chkparam.err_str[1] = "aim-00070:sub-01302|aooi130|",cl_get_progname("aooi130",g_lang,"2"),"|:EXEPROGaooi130"
                  #160318-00025#35  2016/05/18  by pengxin  add(E)
                  IF cl_chk_exist("v_ooag001") THEN
                     #歸屬部門 
                     SELECT ooag003 INTO g_xmfd_m.xmfd002
                       FROM ooag_t
                      WHERE ooagent = g_enterprise
                        AND ooag001 = g_xmfd_m.xmfd001
                     CALL s_desc_get_department_desc(g_xmfd_m.xmfd002)
                          RETURNING g_xmfd_m.xmfd002_desc
                     DISPLAY BY NAME g_xmfd_m.xmfd002_desc
                  ELSE
                     LET g_xmfd_m.xmfd001 = g_xmfd_m_o.xmfd001
                     CALL s_desc_get_person_desc(g_xmfd_m.xmfd001)
                          RETURNING g_xmfd_m.xmfd001_desc
                     DISPLAY BY NAME g_xmfd_m.xmfd001_desc 
                     NEXT FIELD CURRENT
                  END IF
               END IF           
            END IF 
            
            CALL s_desc_get_person_desc(g_xmfd_m.xmfd001)
                 RETURNING g_xmfd_m.xmfd001_desc
            DISPLAY BY NAME g_xmfd_m.xmfd001_desc 
            
            LET g_xmfd_m_o.xmfd001 = g_xmfd_m.xmfd001
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd001
            #add-point:BEFORE FIELD xmfd001 name="input.b.xmfd001"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfd001
            #add-point:ON CHANGE xmfd001 name="input.g.xmfd001"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd002
            
            #add-point:AFTER FIELD xmfd002 name="input.a.xmfd002"
            LET g_xmfd_m.xmfd002_desc = ' '
            CALL s_desc_get_department_desc(g_xmfd_m.xmfd002)
                 RETURNING g_xmfd_m.xmfd002_desc
            DISPLAY BY NAME g_xmfd_m.xmfd002_desc
            
            IF NOT cl_null(g_xmfd_m.xmfd002) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmfd_m.xmfd002 != g_xmfd_m_o.xmfd002 OR
                                                   g_xmfd_m_o.xmfd002 IS NULL)) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmfd_m.xmfd002
                  LET g_chkparam.arg2 = g_xmfd_m.xmfddocdt
                  #160318-00025#35  2016/04/18  by pengxin  add(S)
                  LET g_errshow = TRUE #是否開窗 
                  LET g_chkparam.err_str[1] = "aoo-00029:sub-01302|aooi125|",cl_get_progname("aooi125",g_lang,"2"),"|:EXEPROGaooi125"
                  #160318-00025#35  2016/04/18  by pengxin  add(E)
                  IF NOT cl_chk_exist("v_ooeg001") THEN
                     LET g_xmfd_m.xmfd002 = g_xmfd_m_o.xmfd002 
                     CALL s_desc_get_department_desc(g_xmfd_m.xmfd002)
                          RETURNING g_xmfd_m.xmfd002_desc
                     DISPLAY BY NAME g_xmfd_m.xmfd002_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF         
            END IF 
            
            CALL s_desc_get_department_desc(g_xmfd_m.xmfd002)
                 RETURNING g_xmfd_m.xmfd002_desc
            DISPLAY BY NAME g_xmfd_m.xmfd002_desc 
            
            LET g_xmfd_m_o.xmfd002 = g_xmfd_m.xmfd002
            

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd002
            #add-point:BEFORE FIELD xmfd002 name="input.b.xmfd002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfd002
            #add-point:ON CHANGE xmfd002 name="input.g.xmfd002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfdstus
            #add-point:BEFORE FIELD xmfdstus name="input.b.xmfdstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfdstus
            
            #add-point:AFTER FIELD xmfdstus name="input.a.xmfdstus"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfdstus
            #add-point:ON CHANGE xmfdstus name="input.g.xmfdstus"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd005
            #add-point:BEFORE FIELD xmfd005 name="input.b.xmfd005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd005
            
            #add-point:AFTER FIELD xmfd005 name="input.a.xmfd005"
            IF NOT cl_null(g_xmfd_m.xmfd005) THEN
               IF g_xmfd_m.xmfd005 != g_xmfd_m_o.xmfd005 OR g_xmfd_m_o.xmfd005 IS NULL THEN
                  CALL axmt410_xmfd005_chk()
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_xmfd_m.xmfd005
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_xmfd_m.xmfd005 = g_xmfd_m_o.xmfd005
                     DISPLAY BY NAME g_xmfd_m.xmfd005
                     NEXT FIELD CURRENT
                  END IF
                  CALL axmt410_xmfd005_default()
               END IF
            END IF
            LET g_xmfd_m_o.xmfd005 = g_xmfd_m.xmfd005
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfd005
            #add-point:ON CHANGE xmfd005 name="input.g.xmfd005"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd003
            
            #add-point:AFTER FIELD xmfd003 name="input.a.xmfd003"
            LET g_xmfd_m.xmfd003_desc = ' '
            CALL s_desc_get_trading_partner_full_desc(g_xmfd_m.xmfd003)
                 RETURNING g_xmfd_m.xmfd003_desc
            DISPLAY BY NAME g_xmfd_m.xmfd003_desc
            
            IF NOT cl_null(g_xmfd_m.xmfd003) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmfd_m.xmfd003 != g_xmfd_m_o.xmfd003 OR
                                                   g_xmfd_m_o.xmfd003 IS NULL)) THEN 
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmfd_m.xmfd003 
                  #ming 20141120 add -----------------------------------(S) 
                  LET g_chkparam.arg2 = g_site
                  #ming 20141120 add -----------------------------------(E) 
                  
                  #160318-00025#35  2016/04/18  by pengxin  add(S)
                  LET g_errshow = TRUE #是否開窗 
                  LET g_chkparam.err_str[1] = "apm-00201:sub-01302|axmm200|",cl_get_progname("axmm200",g_lang,"2"),"|:EXEPROGaxmm200"
                  #160318-00025#35  2016/04/18  by pengxin  add(E)
                  
                  IF NOT cl_chk_exist("v_pmaa001_3") THEN
                     LET g_xmfd_m.xmfd003 = g_xmfd_m_o.xmfd003 
                     CALL s_desc_get_trading_partner_full_desc(g_xmfd_m.xmfd003)
                          RETURNING g_xmfd_m.xmfd003_desc
                     DISPLAY BY NAME g_xmfd_m.xmfd003_desc
                     NEXT FIELD CURRENT
                  END IF

                  IF NOT s_control_check_customer(g_xmfd_m.xmfd003,'2',g_site,g_user,g_dept,g_xmfd_m.xmfddocno) THEN
                     LET g_xmfd_m.xmfd003 = g_xmfd_m_o.xmfd003
                     CALL s_desc_get_trading_partner_full_desc(g_xmfd_m.xmfd003)
                          RETURNING g_xmfd_m.xmfd003_desc
                     DISPLAY BY NAME g_xmfd_m.xmfd003_desc
                     NEXT FIELD CURRENT
                  END IF
                  
                  #由客戶帶出其他相關資料  
                  CALL axmt410_from_xmfd003_default()
               END IF
             
            END IF
            
            CALL s_desc_get_trading_partner_full_desc(g_xmfd_m.xmfd003)
                 RETURNING g_xmfd_m.xmfd003_desc
            DISPLAY BY NAME g_xmfd_m.xmfd003_desc 
            
            LET g_xmfd_m_o.xmfd003 = g_xmfd_m.xmfd003
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd003
            #add-point:BEFORE FIELD xmfd003 name="input.b.xmfd003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfd003
            #add-point:ON CHANGE xmfd003 name="input.g.xmfd003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd006
            #add-point:BEFORE FIELD xmfd006 name="input.b.xmfd006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd006
            
            #add-point:AFTER FIELD xmfd006 name="input.a.xmfd006"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfd006
            #add-point:ON CHANGE xmfd006 name="input.g.xmfd006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd007
            #add-point:BEFORE FIELD xmfd007 name="input.b.xmfd007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd007
            
            #add-point:AFTER FIELD xmfd007 name="input.a.xmfd007"
            IF NOT cl_null(g_xmfd_m.xmfd007) THEN
               IF NOT cl_null(g_xmfd_m.xmfddocdt) THEN
                  IF g_xmfd_m.xmfd007 < g_xmfd_m.xmfddocdt THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'axm-00411'
                     LET g_errparam.extend = g_xmfd_m.xmfd007
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_xmfd_m.xmfd007 = g_xmfd_m_t.xmfd007
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfd007
            #add-point:ON CHANGE xmfd007 name="input.g.xmfd007"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd008
            #add-point:BEFORE FIELD xmfd008 name="input.b.xmfd008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd008
            
            #add-point:AFTER FIELD xmfd008 name="input.a.xmfd008"
#            IF g_xmfd_m.xmfd008 <> '2' THEN 
#               LET g_xmfd_m.xmfd009 = '' 
#               DISPLAY BY NAME g_xmfd_m.xmfd009 
#            END IF 
#            
#            CALL axmt410_set_entry(p_cmd)
#            CALL axmt410_set_no_entry(p_cmd) 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfd008
            #add-point:ON CHANGE xmfd008 name="input.g.xmfd008"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd009
            
            #add-point:AFTER FIELD xmfd009 name="input.a.xmfd009"
            LET g_xmfd_m.xmfd009_desc = ' '
            CALL axmt410_xmfd009_ref(g_xmfd_m.xmfd009)
                 RETURNING g_xmfd_m.xmfd009_desc
            DISPLAY BY NAME g_xmfd_m.xmfd009_desc
            
            #判斷範本編號有值就依報價範本輸入資料，無值表自行輸入
            IF cl_null(g_xmfd_m.xmfd009) THEN 
               LET g_xmfd_m.xmfd008 = '3'
            ELSE
               LET g_xmfd_m.xmfd008 = '2'
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmfd_m.xmfd009 != g_xmfd_m_o.xmfd009 OR
                                                   g_xmfd_m_o.xmfd009 IS NULL)) THEN
                  CALL axmt410_chk_xmfa(g_xmfd_m.xmfd009)
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_xmfd_m.xmfd009
                     #160318-00005#49 --s add
                     CASE g_errno
                        WHEN 'sub-01302'
                           LET g_errparam.replace[1] = 'abgi010'
                           LET g_errparam.replace[2] = cl_get_progname('abgi010',g_lang,"2")
                           LET g_errparam.exeprog = 'abgi010'
                     END CASE
                     #160318-00005#49 --e add
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_xmfd_m.xmfd009 = g_xmfd_m_o.xmfd009
                     CALL axmt410_xmfd009_ref(g_xmfd_m.xmfd009)
                          RETURNING g_xmfd_m.xmfd009_desc
                     DISPLAY BY NAME g_xmfd_m.xmfd009_desc
                     NEXT FIELD CURRENT
                  END IF
                  
               END IF
            END IF 
            
            CALL axmt410_xmfd009_ref(g_xmfd_m.xmfd009)
                 RETURNING g_xmfd_m.xmfd009_desc 
            DISPLAY BY NAME g_xmfd_m.xmfd009_desc  
            
            LET g_xmfd_m_o.xmfd009 = g_xmfd_m.xmfd009
            
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd009
            #add-point:BEFORE FIELD xmfd009 name="input.b.xmfd009"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfd009
            #add-point:ON CHANGE xmfd009 name="input.g.xmfd009"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd010
            
            #add-point:AFTER FIELD xmfd010 name="input.a.xmfd010"
            LET g_xmfd_m.xmfd010_desc = ' '
            CALL s_desc_get_currency_desc(g_xmfd_m.xmfd010)
                 RETURNING g_xmfd_m.xmfd010_desc
            DISPLAY BY NAME g_xmfd_m.xmfd010_desc
            
            IF NOT cl_null(g_xmfd_m.xmfd010) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmfd_m.xmfd010 != g_xmfd_m_t.xmfd010 OR
                                                   g_xmfd_m_t.xmfd010 IS NULL)) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_site
                  LET g_chkparam.arg2 = g_xmfd_m.xmfd010
                  #160318-00025#35  2016/05/18  by pengxin  add(S)
                  LET g_errshow = TRUE #是否開窗 
                  LET g_chkparam.err_str[1] = "aoo-00176:sub-01302|aooi150|",cl_get_progname("aooi150",g_lang,"2"),"|:EXEPROGaooi150"
                  #160318-00025#35  2016/05/18  by pengxin  add(E)
                  IF NOT cl_chk_exist("v_ooaj002") THEN
                     LET g_xmfd_m.xmfd010 = g_xmfd_m_o.xmfd010
                     CALL s_desc_get_currency_desc(g_xmfd_m.xmfd010)
                          RETURNING g_xmfd_m.xmfd010_desc
                     DISPLAY BY NAME g_xmfd_m.xmfd010_desc
                     NEXT FIELD CURRENT
                  END IF

                  #取匯率  
                  CALL axmt410_get_xmfd011(g_xmfd_m.xmfd010) RETURNING g_xmfd_m.xmfd011
                  DISPLAY BY NAME g_xmfd_m.xmfd011 
                  
                  #幣別改變時 不用詢問user是否重取含稅、未稅金額 
                  #因為在axm中只用原幣 所以幣別改變 並不影響 
               END IF            
            END IF 
                        
            CALL s_desc_get_currency_desc(g_xmfd_m.xmfd010)
                 RETURNING g_xmfd_m.xmfd010_desc
            DISPLAY BY NAME g_xmfd_m.xmfd010_desc 
            
            LET g_xmfd_m_o.xmfd010 = g_xmfd_m.xmfd010 

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd010
            #add-point:BEFORE FIELD xmfd010 name="input.b.xmfd010"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfd010
            #add-point:ON CHANGE xmfd010 name="input.g.xmfd010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd011
            #add-point:BEFORE FIELD xmfd011 name="input.b.xmfd011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd011
            
            #add-point:AFTER FIELD xmfd011 name="input.a.xmfd011"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfd011
            #add-point:ON CHANGE xmfd011 name="input.g.xmfd011"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd029
            #add-point:BEFORE FIELD xmfd029 name="input.b.xmfd029"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd029
            
            #add-point:AFTER FIELD xmfd029 name="input.a.xmfd029"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfd029
            #add-point:ON CHANGE xmfd029 name="input.g.xmfd029"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd012
            
            #add-point:AFTER FIELD xmfd012 name="input.a.xmfd012"
            LET g_xmfd_m.xmfd012_desc = ' '
            CALL s_desc_get_tax_desc1(g_site,g_xmfd_m.xmfd012)
                 RETURNING g_xmfd_m.xmfd012_desc
            DISPLAY BY NAME g_xmfd_m.xmfd012_desc
            
            IF NOT cl_null(g_xmfd_m.xmfd012) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmfd_m.xmfd012 != g_xmfd_m_o.xmfd012 OR
                                                   g_xmfd_m_o.xmfd012 IS NULL)) THEN
                  CALL s_tax_chk(g_site,g_xmfd_m.xmfd012)
                       RETURNING l_success,g_xmfd_m.xmfd012_desc,
                                 g_xmfd_m.xmfd014,g_xmfd_m.xmfd013,l_oodb011
                  IF NOT l_success THEN
                     LET g_xmfd_m.xmfd012 = g_xmfd_m_o.xmfd012
                    #LET g_xmfd_m.xmfd012 = g_xmfd_m_o.xmfd013   #161012-00019#1 mark
                     LET g_xmfd_m.xmfd013 = g_xmfd_m_o.xmfd013   #161012-00019#1 mod
                     LET g_xmfd_m.xmfd014 = g_xmfd_m_o.xmfd014
                     CALL s_desc_get_tax_desc1(g_site,g_xmfd_m.xmfd012)
                          RETURNING g_xmfd_m.xmfd012_desc
                     DISPLAY BY NAME g_xmfd_m.xmfd012,g_xmfd_m.xmfd013,
                                     g_xmfd_m.xmfd014,g_xmfd_m.xmfd012_desc
                     NEXT FIELD CURRENT
                  END IF 
                  
                  #稅別改變時 如果單身有資料 要詢問user是否要重取含稅 未稅金額  
                  LET l_cnt = 0
                  SELECT COUNT(*) INTO l_cnt
                    FROM xmff_t
                   WHERE xmffent = g_enterprise
                     AND xmffsite = g_site
                     AND xmffdocno = g_xmfd_m.xmfddocno
                  IF l_cnt > 0 THEN
                     #條件已變更，是否重新取價，並重新計算含税、未税金额 
                     #mod--161012-00008#1 By shiun--(S)
#                     IF cl_ask_confirm("axm-00230") THEN
#                        CALL axmt410_change_xmff007()
#                     END IF
                     IF NOT(cl_null(g_xmfd_m.xmfd012) OR cl_null(g_xmfd_m.xmfd015) OR cl_null(g_xmfd_m.xmfd016) OR cl_null(g_xmfd_m.xmfd017)) THEN
                        IF cl_ask_confirm("axm-00230") THEN
                           CALL axmt410_change_xmff007()
                        END IF
                     END IF
                     #mod--161012-00008#1 By shiun--(E)
                  END IF
               END IF
               
            END IF 
            
            CALL s_desc_get_tax_desc1(g_site,g_xmfd_m.xmfd012)
                 RETURNING g_xmfd_m.xmfd012_desc
            DISPLAY BY NAME g_xmfd_m.xmfd012_desc 
            
            LET g_xmfd_m_o.xmfd012 = g_xmfd_m.xmfd012
            LET g_xmfd_m_o.xmfd013 = g_xmfd_m.xmfd013
            LET g_xmfd_m_o.xmfd014 = g_xmfd_m.xmfd014

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd012
            #add-point:BEFORE FIELD xmfd012 name="input.b.xmfd012"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfd012
            #add-point:ON CHANGE xmfd012 name="input.g.xmfd012"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd013
            #add-point:BEFORE FIELD xmfd013 name="input.b.xmfd013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd013
            
            #add-point:AFTER FIELD xmfd013 name="input.a.xmfd013"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfd013
            #add-point:ON CHANGE xmfd013 name="input.g.xmfd013"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd014
            #add-point:BEFORE FIELD xmfd014 name="input.b.xmfd014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd014
            
            #add-point:AFTER FIELD xmfd014 name="input.a.xmfd014"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfd014
            #add-point:ON CHANGE xmfd014 name="input.g.xmfd014"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd015
            
            #add-point:AFTER FIELD xmfd015 name="input.a.xmfd015"
            LET g_xmfd_m.xmfd015_desc = ' '
            CALL s_desc_get_acc_desc('238',g_xmfd_m.xmfd015)
                 RETURNING g_xmfd_m.xmfd015_desc
            DISPLAY BY NAME g_xmfd_m.xmfd015_desc
            
            IF NOT cl_null(g_xmfd_m.xmfd015) THEN 
               IF (g_xmfd_m.xmfd015 != g_xmfd_m_o.xmfd015 OR cl_null(g_xmfd_m_o.xmfd015)) THEN
                  IF NOT s_azzi650_chk_exist('238',g_xmfd_m.xmfd015) THEN
                     LET g_xmfd_m.xmfd015 = g_xmfd_m_o.xmfd015
                     CALL s_desc_get_acc_desc('238',g_xmfd_m.xmfd015)
                          RETURNING g_xmfd_m.xmfd015_desc
                     DISPLAY BY NAME g_xmfd_m.xmfd015_desc
                     NEXT FIELD CURRENT
                  END IF

                  #帶出取價方式 
                  CALL axmt410_get_oocq005('238',g_xmfd_m.xmfd015)
                       RETURNING g_xmfd_m.xmfd017
                  CALL axmt410_xmfd017_ref(g_xmfd_m.xmfd017)
                       RETURNING g_xmfd_m.xmfd017_desc
                  DISPLAY BY NAME g_xmfd_m.xmfd017,g_xmfd_m.xmfd017_desc

                  LET g_xmfd_m_o.xmfd017 = g_xmfd_m.xmfd017 
                  
                  #修改交易條件時 需詢問是否重新取價 並重新計算含稅金額、未稅金額、稅額 
                  LET l_cnt = 0
                  SELECT COUNT(*) INTO l_cnt
                    FROM xmff_t
                   WHERE xmffent = g_enterprise
                     AND xmffsite = g_site
                     AND xmffdocno = g_xmfd_m.xmfddocno
                  IF l_cnt > 0 THEN
                     #條件已變更，是否重新取價，並重新計算含税、未税金额 
                     #mod--161012-00008#1 By shiun--(S)
#                     IF cl_ask_confirm("axm-00230") THEN
#                        CALL axmt410_change_xmff007()
#                     END IF
                     IF NOT(cl_null(g_xmfd_m.xmfd012) OR cl_null(g_xmfd_m.xmfd015) OR cl_null(g_xmfd_m.xmfd016) OR cl_null(g_xmfd_m.xmfd017)) THEN
                        IF cl_ask_confirm("axm-00230") THEN
                           CALL axmt410_change_xmff007()
                        END IF
                     END IF
                     #mod--161012-00008#1 By shiun--(E)
                  END IF
               END IF

            END IF 
            
            CALL s_desc_get_acc_desc('238',g_xmfd_m.xmfd015)
                 RETURNING g_xmfd_m.xmfd015_desc
            DISPLAY BY NAME g_xmfd_m.xmfd015_desc 
            
            LET g_xmfd_m_o.xmfd015 = g_xmfd_m.xmfd015

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd015
            #add-point:BEFORE FIELD xmfd015 name="input.b.xmfd015"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfd015
            #add-point:ON CHANGE xmfd015 name="input.g.xmfd015"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd016
            
            #add-point:AFTER FIELD xmfd016 name="input.a.xmfd016"
            LET g_xmfd_m.xmfd016_desc = ' '
            CALL axmt410_xmfd016_ref(g_xmfd_m.xmfd016)
                 RETURNING g_xmfd_m.xmfd016_desc
            DISPLAY BY NAME g_xmfd_m.xmfd016_desc
            
            IF NOT cl_null(g_xmfd_m.xmfd016) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmfd_m.xmfd016 != g_xmfd_m_o.xmfd016 OR
                                                   g_xmfd_m_o.xmfd016 IS NULL)) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmfd_m.xmfd003
                  LET g_chkparam.arg2 = g_xmfd_m.xmfd016
                  IF NOT cl_chk_exist("v_pmad002_2") THEN
                     LET g_xmfd_m.xmfd016 = g_xmfd_m_o.xmfd016
                     CALL axmt410_xmfd016_ref(g_xmfd_m.xmfd016)
                          RETURNING g_xmfd_m.xmfd016_desc
                     DISPLAY BY NAME g_xmfd_m.xmfd016_desc
                     NEXT FIELD CURRENT
                  END IF

                  #修改收款條件時 需詢問是否重新取價 並重新計算含稅金額、未稅金額、稅額 
                  LET l_cnt = 0
                  SELECT COUNT(*) INTO l_cnt
                    FROM xmff_t
                   WHERE xmffent = g_enterprise
                     AND xmffsite = g_site
                     AND xmffdocno = g_xmfd_m.xmfddocno
                  IF l_cnt > 0 THEN
                     #條件已變更，是否重新取價，並重新計算含税、未税金额 
                     #mod--161012-00008#1 By shiun--(S)
#                     IF cl_ask_confirm("axm-00230") THEN
#                        CALL axmt410_change_xmff007()
#                     END IF
                     IF NOT(cl_null(g_xmfd_m.xmfd012) OR cl_null(g_xmfd_m.xmfd015) OR cl_null(g_xmfd_m.xmfd016) OR cl_null(g_xmfd_m.xmfd017)) THEN
                        IF cl_ask_confirm("axm-00230") THEN
                           CALL axmt410_change_xmff007()
                        END IF
                     END IF
                     #mod--161012-00008#1 By shiun--(E)
                  END IF
               END IF
            END IF 
            
            CALL axmt410_xmfd016_ref(g_xmfd_m.xmfd016)
                 RETURNING g_xmfd_m.xmfd016_desc
            DISPLAY BY NAME g_xmfd_m.xmfd016_desc 
            
            LET g_xmfd_m_o.xmfd016 = g_xmfd_m.xmfd016
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd016
            #add-point:BEFORE FIELD xmfd016 name="input.b.xmfd016"
            #因為收款條件會受客戶編號影響  
            #所以應該先檢查客戶編號是否有值  
            IF cl_null(g_xmfd_m.xmfd003) THEN 
               #請先輸入客戶編號 
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00145'
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err() 
               
               NEXT FIELD xmfd003 
            END IF 
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfd016
            #add-point:ON CHANGE xmfd016 name="input.g.xmfd016"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd017
            
            #add-point:AFTER FIELD xmfd017 name="input.a.xmfd017"
            LET g_xmfd_m.xmfd017_desc = ' '
            CALL axmt410_xmfd017_ref(g_xmfd_m.xmfd017)
                 RETURNING g_xmfd_m.xmfd017_desc
            DISPLAY BY NAME g_xmfd_m.xmfd017_desc
            
            IF NOT cl_null(g_xmfd_m.xmfd017) THEN  
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmfd_m.xmfd017 != g_xmfd_m_o.xmfd017 OR
                                                   g_xmfd_m_o.xmfd017 IS NULL)) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmfd_m.xmfd017
                  #160318-00025#35  2016/04/18  by pengxin  add(S)
                  LET g_errshow = TRUE #是否開窗 
                  LET g_chkparam.err_str[1] = "axm-00026:sub-01302|axmi130|",cl_get_progname("axmi130",g_lang,"2"),"|:EXEPROGaxmi130"
                  #160318-00025#35  2016/04/18  by pengxin  add(E)
                  IF NOT cl_chk_exist("v_xmah001") THEN
                     LET g_xmfd_m.xmfd017 = g_xmfd_m_o.xmfd017
                     CALL axmt410_xmfd017_ref(g_xmfd_m.xmfd017)
                          RETURNING g_xmfd_m.xmfd017
                     DISPLAY BY NAME g_xmfd_m.xmfd017
                     NEXT FIELD CURRENT
                  END IF 
                  
                  #修改收款條件時 需詢問是否重新取價 並重新計算含稅金額、未稅金額、稅額 
                  LET l_cnt = 0
                  SELECT COUNT(*) INTO l_cnt
                    FROM xmff_t
                   WHERE xmffent = g_enterprise
                     AND xmffsite = g_site
                     AND xmffdocno = g_xmfd_m.xmfddocno
                  IF l_cnt > 0 THEN
                     #條件已變更，是否重新取價，並重新計算含税、未税金额 
                     #mod--161012-00008#1 By shiun--(S)
#                     IF cl_ask_confirm("axm-00230") THEN
#                        CALL axmt410_change_xmff007()
#                     END IF
                     IF NOT(cl_null(g_xmfd_m.xmfd012) OR cl_null(g_xmfd_m.xmfd015) OR cl_null(g_xmfd_m.xmfd016) OR cl_null(g_xmfd_m.xmfd017)) THEN
                        IF cl_ask_confirm("axm-00230") THEN
                           CALL axmt410_change_xmff007()
                        END IF
                     END IF
                     #mod--161012-00008#1 By shiun--(E)
                  END IF
                  
               END IF
            END IF 
            
            CALL axmt410_xmfd017_ref(g_xmfd_m.xmfd017)
                 RETURNING g_xmfd_m.xmfd017_desc
            DISPLAY BY NAME g_xmfd_m.xmfd017_desc 
            
            LET g_xmfd_m_o.xmfd017 = g_xmfd_m.xmfd017
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd017
            #add-point:BEFORE FIELD xmfd017 name="input.b.xmfd017"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfd017
            #add-point:ON CHANGE xmfd017 name="input.g.xmfd017"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd018
            
            #add-point:AFTER FIELD xmfd018 name="input.a.xmfd018"
            LET g_xmfd_m.xmfd018_desc = ' '
            #160621-00003#3 20160629 modify by beckxie---S
            #CALL s_desc_get_acc_desc('275',g_xmfd_m.xmfd018) RETURNING g_xmfd_m.xmfd018_desc
            CALL s_desc_get_oojdl003_desc(g_xmfd_m.xmfd018) RETURNING g_xmfd_m.xmfd018_desc
            #160621-00003#3 20160629 modify by beckxie---E
            DISPLAY BY NAME g_xmfd_m.xmfd018_desc
            
            IF NOT cl_null(g_xmfd_m.xmfd018) THEN  
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmfd_m.xmfd018 != g_xmfd_m_o.xmfd018 OR
                                                   g_xmfd_m_o.xmfd018 IS NULL)) THEN
                  IF NOT axmt410_xmfd018_chk(g_xmfd_m.xmfd018) THEN
                     LET g_xmfd_m.xmfd018 = g_xmfd_m_o.xmfd018
                     #160621-00003#3 20160629 modify by beckxie---S
                     #CALL s_desc_get_acc_desc('275',g_xmfd_m.xmfd018) RETURNING g_xmfd_m.xmfd018_desc
                     CALL s_desc_get_oojdl003_desc(g_xmfd_m.xmfd018) RETURNING g_xmfd_m.xmfd018_desc
                     #160621-00003#3 20160629 modify by beckxie---E
                     DISPLAY BY NAME g_xmfd_m.xmfd018_desc
                     NEXT FIELD CURRENT
                  END IF 
               END IF 
                           
            END IF 
            
            #160621-00003#3 20160629 modify by beckxie---S
            #CALL s_desc_get_acc_desc('275',g_xmfd_m.xmfd018) RETURNING g_xmfd_m.xmfd018_desc
            CALL s_desc_get_oojdl003_desc(g_xmfd_m.xmfd018) RETURNING g_xmfd_m.xmfd018_desc
            #160621-00003#3 20160629 modify by beckxie---E
            DISPLAY BY NAME g_xmfd_m.xmfd018_desc 
            
            LET g_xmfd_m_o.xmfd018 = g_xmfd_m.xmfd018
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd018
            #add-point:BEFORE FIELD xmfd018 name="input.b.xmfd018"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfd018
            #add-point:ON CHANGE xmfd018 name="input.g.xmfd018"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd019
            
            #add-point:AFTER FIELD xmfd019 name="input.a.xmfd019"
            LET g_xmfd_m.xmfd019_desc = ' '
            CALL s_desc_get_acc_desc('263',g_xmfd_m.xmfd019)
                 RETURNING g_xmfd_m.xmfd019_desc
            DISPLAY BY NAME g_xmfd_m.xmfd019_desc
            
            IF NOT cl_null(g_xmfd_m.xmfd019) THEN  
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmfd_m.xmfd019 != g_xmfd_m_o.xmfd019 OR
                                                   g_xmfd_m_o.xmfd019 IS NULL )) THEN
                  IF NOT s_azzi650_chk_exist('263',g_xmfd_m.xmfd019) THEN
                     LET g_xmfd_m.xmfd019 = g_xmfd_m_o.xmfd019
                     CALL s_desc_get_acc_desc('263',g_xmfd_m.xmfd019)
                          RETURNING g_xmfd_m.xmfd019_desc
                     DISPLAY BY NAME g_xmfd_m.xmfd019_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 
            
            CALL s_desc_get_acc_desc('263',g_xmfd_m.xmfd019)
                 RETURNING g_xmfd_m.xmfd019_desc
            DISPLAY BY NAME g_xmfd_m.xmfd019_desc 
            
            LET g_xmfd_m_o.xmfd019 = g_xmfd_m.xmfd019

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd019
            #add-point:BEFORE FIELD xmfd019 name="input.b.xmfd019"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfd019
            #add-point:ON CHANGE xmfd019 name="input.g.xmfd019"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd020
            
            #add-point:AFTER FIELD xmfd020 name="input.a.xmfd020"
            LET g_xmfd_m.xmfd020_desc = ' '
            CALL s_apmi011_location_ref(g_xmfd_m.xmfd019,g_xmfd_m.xmfd020)
                 RETURNING g_xmfd_m.xmfd020_desc
            DISPLAY BY NAME g_xmfd_m.xmfd020_desc

            IF NOT cl_null(g_xmfd_m.xmfd020) THEN
               IF cl_null(g_xmfd_m.xmfd019) THEN
                  LET g_xmfd_m.xmfd020 = g_xmfd_m_t.xmfd020
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'axm-00085'    #請先輸入運輸方式  
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  NEXT FIELD xmfd019
               END IF

               CALL s_apmi011_check_location(g_xmfd_m.xmfd019,g_xmfd_m.xmfd020)
                    RETURNING l_success
               IF NOT l_success THEN
                  LET g_xmfd_m.xmfd020 = g_xmfd_m_t.xmfd020
                  CALL s_apmi011_location_ref(g_xmfd_m.xmfd019,g_xmfd_m.xmfd020)
                       RETURNING g_xmfd_m.xmfd020_desc
                  DISPLAY BY NAME g_xmfd_m.xmfd020_desc
                  NEXT FIELD CURRENT
               END IF
            END IF
            
            CALL s_apmi011_location_ref(g_xmfd_m.xmfd019,g_xmfd_m.xmfd020)
                 RETURNING g_xmfd_m.xmfd020_desc
            DISPLAY BY NAME g_xmfd_m.xmfd020_desc

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd020
            #add-point:BEFORE FIELD xmfd020 name="input.b.xmfd020"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfd020
            #add-point:ON CHANGE xmfd020 name="input.g.xmfd020"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd021
            
            #add-point:AFTER FIELD xmfd021 name="input.a.xmfd021"
            LET g_xmfd_m.xmfd021_desc = ' '
            CALL s_apmi011_location_ref(g_xmfd_m.xmfd019,g_xmfd_m.xmfd021)
                 RETURNING g_xmfd_m.xmfd021_desc
            DISPLAY BY NAME g_xmfd_m.xmfd021_desc

            IF NOT cl_null(g_xmfd_m.xmfd021) THEN
               IF cl_null(g_xmfd_m.xmfd019) THEN
                  LET g_xmfd_m.xmfd021 = g_xmfd_m_t.xmfd021
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'axm-00085'      #請先輸入運輸方式  
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  NEXT FIELD xmfd019
               END IF

               CALL s_apmi011_check_location(g_xmfd_m.xmfd019,g_xmfd_m.xmfd021)
                    RETURNING l_success
               IF NOT l_success THEN
                  LET g_xmfd_m.xmfd021 = g_xmfd_m_t.xmfd021
                  CALL s_apmi011_location_ref(g_xmfd_m.xmfd019,g_xmfd_m.xmfd021)
                       RETURNING g_xmfd_m.xmfd021_desc
                  DISPLAY BY NAME g_xmfd_m.xmfd021_desc
                  NEXT FIELD CURRENT
               END IF
            END IF
            
            CALL s_apmi011_location_ref(g_xmfd_m.xmfd019,g_xmfd_m.xmfd021)
                 RETURNING g_xmfd_m.xmfd021_desc
            DISPLAY BY NAME g_xmfd_m.xmfd021_desc
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd021
            #add-point:BEFORE FIELD xmfd021 name="input.b.xmfd021"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfd021
            #add-point:ON CHANGE xmfd021 name="input.g.xmfd021"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd022
            
            #add-point:AFTER FIELD xmfd022 name="input.a.xmfd022"
            LET g_xmfd_m.xmfd022_desc = ' ' 
            LET g_xmfd_m.oofb017 = ' '
            CALL axmt410_xmfd022_ref(g_xmfd_m.xmfd003,g_xmfd_m.xmfd022)
                 RETURNING g_xmfd_m.xmfd022_desc,g_xmfd_m.oofb017
            DISPLAY BY NAME g_xmfd_m.xmfd022_desc,g_xmfd_m.oofb017
            
            IF NOT cl_null(g_xmfd_m.xmfd022) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmfd_m.xmfd022 != g_xmfd_m_o.xmfd022 OR
                                                   g_xmfd_m_o.xmfd022 IS NULL)) THEN 
                  CALL s_axmt500_get_pmaa027(g_xmfd_m.xmfd003) RETURNING l_pmaa027
                  
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = l_pmaa027
                  LET g_chkparam.arg2 = g_xmfd_m.xmfd022
                  #160318-00025#35  2016/04/18  by pengxin  add(S)
                  LET g_errshow = TRUE #是否開窗 
                  LET g_chkparam.err_str[1] = "anm-00025:sub-01302|aooi350|",cl_get_progname("aooi350",g_lang,"2"),"|:EXEPROGaooi350"
                  #160318-00025#35  2016/04/18  by pengxin  add(E)
                  IF NOT cl_chk_exist("v_oofb019_4") THEN
                     LET g_xmfd_m.xmfd022 = g_xmfd_m_o.xmfd022
                     CALL axmt410_xmfd022_ref(g_xmfd_m.xmfd003,g_xmfd_m.xmfd022)
                          RETURNING g_xmfd_m.xmfd022_desc,g_xmfd_m.oofb017
                     DISPLAY BY NAME g_xmfd_m.xmfd022_desc,g_xmfd_m.oofb017
                     NEXT FIELD CURRENT
                  END IF
                  #呼叫地址組合應用元件，將組合好的聯絡地址顯示在下方 
                  CALL s_aooi350_get_address(l_pmaa027,g_xmfd_m.xmfd022,g_lang)
                       RETURNING l_success,l_address
                  IF l_success THEN
                     LET g_xmfd_m.oofb017 = l_address
                     DISPLAY BY NAME g_xmfd_m.oofb017
                  END IF
               END IF
            END IF 
            
            CALL axmt410_xmfd022_ref(g_xmfd_m.xmfd003,g_xmfd_m.xmfd022)
                 RETURNING g_xmfd_m.xmfd022_desc,g_xmfd_m.oofb017
            DISPLAY BY NAME g_xmfd_m.xmfd022_desc,g_xmfd_m.oofb017 
            
            LET g_xmfd_m_o.xmfd022 = g_xmfd_m.xmfd022
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd022
            #add-point:BEFORE FIELD xmfd022 name="input.b.xmfd022"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfd022
            #add-point:ON CHANGE xmfd022 name="input.g.xmfd022"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd023
            #add-point:BEFORE FIELD xmfd023 name="input.b.xmfd023"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd023
            
            #add-point:AFTER FIELD xmfd023 name="input.a.xmfd023"
            IF g_xmfd_m.xmfd023 != g_xmfd_m_o.xmfd023 OR
               g_xmfd_m_o.xmfd023 IS NULL THEN
               LET g_sql = "SELECT xmffseq,xmff006,xmff015,xmff016",
                          "  FROM xmff_t ",
                          " WHERE xmffdocno = '",g_xmfd_m.xmfddocno CLIPPED,"'",
                          "   AND xmffent   = '",g_enterprise CLIPPED,"'",
                          "   ORDER BY xmffseq "
               DECLARE axmt410_g01_xmfd023 CURSOR FROM g_sql
               FOREACH axmt410_g01_xmfd023 INTO l_xmff.xmffseq,l_xmff.xmff006,l_xmff.xmff015,l_xmff.xmff016
                  IF STATUS THEN 
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend = "axmt410_g01_xmfd023:"
                     LET g_errparam.code   = SQLCA.sqlcode
                     LET g_errparam.popup  = FALSE
                     CALL cl_err()                  
                     EXIT FOREACH 
                  END IF
                  CALL axmt410_volume('2',l_xmff.xmff006,l_xmff.xmff015,l_xmff.xmff016)
                  RETURNING l_xmff.xmff016,l_xmff.xmff019
                  UPDATE xmff_t SET xmff019 = l_xmff.xmff019
                   WHERE xmffent = g_enterprise
                     AND xmffdocno = g_xmfd_m.xmfddocno
                     AND xmffseq = l_xmff.xmffseq
               END FOREACH
               CALL axmt410_b_fill()
                  #ming 是否重算預估金額?   
            END IF

            LET g_xmfd_m_o.xmfd023 = g_xmfd_m.xmfd023
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfd023
            #add-point:ON CHANGE xmfd023 name="input.g.xmfd023"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd024
            #add-point:BEFORE FIELD xmfd024 name="input.b.xmfd024"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd024
            
            #add-point:AFTER FIELD xmfd024 name="input.a.xmfd024"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfd024
            #add-point:ON CHANGE xmfd024 name="input.g.xmfd024"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd025
            #add-point:BEFORE FIELD xmfd025 name="input.b.xmfd025"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd025
            
            #add-point:AFTER FIELD xmfd025 name="input.a.xmfd025"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfd025
            #add-point:ON CHANGE xmfd025 name="input.g.xmfd025"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd026
            #add-point:BEFORE FIELD xmfd026 name="input.b.xmfd026"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd026
            
            #add-point:AFTER FIELD xmfd026 name="input.a.xmfd026"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfd026
            #add-point:ON CHANGE xmfd026 name="input.g.xmfd026"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd027
            #add-point:BEFORE FIELD xmfd027 name="input.b.xmfd027"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd027
            
            #add-point:AFTER FIELD xmfd027 name="input.a.xmfd027"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfd027
            #add-point:ON CHANGE xmfd027 name="input.g.xmfd027"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfd028
            #add-point:BEFORE FIELD xmfd028 name="input.b.xmfd028"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfd028
            
            #add-point:AFTER FIELD xmfd028 name="input.a.xmfd028"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfd028
            #add-point:ON CHANGE xmfd028 name="input.g.xmfd028"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.xmfddocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfddocno
            #add-point:ON ACTION controlp INFIELD xmfddocno name="input.c.xmfddocno"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfd_m.xmfddocno             #給予default值

            #給予arg
            LET g_qryparam.arg1 = l_ooef004    #參照表號 
            LET g_qryparam.arg2 = g_prog       #程式代號 
            
            CALL q_ooba002_1()                                #呼叫開窗

            LET g_xmfd_m.xmfddocno = g_qryparam.return1              

            DISPLAY g_xmfd_m.xmfddocno TO xmfddocno              #
            CALL s_aooi200_get_slip_desc(g_xmfd_m.xmfddocno)
                 RETURNING g_xmfd_m.xmfddocno_desc
            DISPLAY BY NAME g_xmfd_m.xmfddocno_desc
            NEXT FIELD xmfddocno                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmfdsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfdsite
            #add-point:ON ACTION controlp INFIELD xmfdsite name="input.c.xmfdsite"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmfddocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfddocdt
            #add-point:ON ACTION controlp INFIELD xmfddocdt name="input.c.xmfddocdt"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmfd001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd001
            #add-point:ON ACTION controlp INFIELD xmfd001 name="input.c.xmfd001"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfd_m.xmfd001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooag001()                                #呼叫開窗

            LET g_xmfd_m.xmfd001 = g_qryparam.return1              

            DISPLAY g_xmfd_m.xmfd001 TO xmfd001              #
            CALL s_desc_get_person_desc(g_xmfd_m.xmfd001)
                 RETURNING g_xmfd_m.xmfd001_desc
            DISPLAY BY NAME g_xmfd_m.xmfd001_desc
            NEXT FIELD xmfd001                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmfd002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd002
            #add-point:ON ACTION controlp INFIELD xmfd002 name="input.c.xmfd002"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfd_m.xmfd002             #給予default值
            LET g_qryparam.default2 = "" #g_xmfd_m.ooeg001 #部門編號
            #給予arg
            LET g_qryparam.arg1 = g_today
            
            CALL q_ooeg001()                                #呼叫開窗

            LET g_xmfd_m.xmfd002 = g_qryparam.return1              
            #LET g_xmfd_m.ooeg001 = g_qryparam.return2 
            DISPLAY g_xmfd_m.xmfd002 TO xmfd002              #
            #DISPLAY g_xmfd_m.ooeg001 TO ooeg001 #部門編號 
            CALL s_desc_get_department_desc(g_xmfd_m.xmfd002)
                 RETURNING g_xmfd_m.xmfd002_desc
            DISPLAY BY NAME g_xmfd_m.xmfd002_desc
            NEXT FIELD xmfd002                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmfdstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfdstus
            #add-point:ON ACTION controlp INFIELD xmfdstus name="input.c.xmfdstus"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmfd005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd005
            #add-point:ON ACTION controlp INFIELD xmfd005 name="input.c.xmfd005"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmfd_m.xmfd005
            #已確認的估價單，且估價有效期限>=報價日期
            LET g_qryparam.where = " xmevstus = 'Y' "
            IF NOT cl_null(g_xmfd_m.xmfddocdt) THEN
               LET g_qryparam.where = g_qryparam.where," AND xmev013 >= '",g_xmfd_m.xmfddocdt,"' "
            END IF
            CALL q_xmevdocno()
            LET g_xmfd_m.xmfd005 = g_qryparam.return1
            DISPLAY g_xmfd_m.xmfd005 TO xmfd005
            NEXT FIELD xmfd005
            #END add-point
 
 
         #Ctrlp:input.c.xmfd003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd003
            #add-point:ON ACTION controlp INFIELD xmfd003 name="input.c.xmfd003"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfd_m.xmfd003             #給予default值

            #給予arg
            #LET g_qryparam.arg1 = "" #
            LET g_qryparam.where = " 1=1 "
            CALL s_control_get_customer_sql('2',g_site,g_user,g_dept,g_xmfd_m.xmfddocno)
                 RETURNING l_success,l_where
            IF l_success THEN
               LET g_qryparam.where = g_qryparam.where ," AND ",l_where
            END IF 
            
            #ming 20141120 add --------------------------(S) 
            LET g_qryparam.arg1 = g_site
            #ming 20141120 add --------------------------(E) 
            
            CALL q_pmaa001_6()                                #呼叫開窗

            LET g_xmfd_m.xmfd003 = g_qryparam.return1              

            DISPLAY g_xmfd_m.xmfd003 TO xmfd003              #
            CALL s_desc_get_trading_partner_full_desc(g_xmfd_m.xmfd003)
                 RETURNING g_xmfd_m.xmfd003_desc
            DISPLAY BY NAME g_xmfd_m.xmfd003_desc
            NEXT FIELD xmfd003                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmfd006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd006
            #add-point:ON ACTION controlp INFIELD xmfd006 name="input.c.xmfd006"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmfd007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd007
            #add-point:ON ACTION controlp INFIELD xmfd007 name="input.c.xmfd007"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmfd008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd008
            #add-point:ON ACTION controlp INFIELD xmfd008 name="input.c.xmfd008"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmfd009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd009
            #add-point:ON ACTION controlp INFIELD xmfd009 name="input.c.xmfd009"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfd_m.xmfd009             #給予default值

            #給予arg
            #LET g_qryparam.arg1 = "" #
            LET g_qryparam.where = "xmfastus = 'Y' "
            
            CALL q_xmfadocno()                                #呼叫開窗

            LET g_xmfd_m.xmfd009 = g_qryparam.return1              

            DISPLAY g_xmfd_m.xmfd009 TO xmfd009              #

            NEXT FIELD xmfd009                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmfd010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd010
            #add-point:ON ACTION controlp INFIELD xmfd010 name="input.c.xmfd010"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfd_m.xmfd010             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_site
            
            CALL q_ooaj002_1()                                #呼叫開窗

            LET g_xmfd_m.xmfd010 = g_qryparam.return1              

            DISPLAY g_xmfd_m.xmfd010 TO xmfd010              #
            CALL s_desc_get_currency_desc(g_xmfd_m.xmfd010)
                 RETURNING g_xmfd_m.xmfd010_desc
            DISPLAY BY NAME g_xmfd_m.xmfd010_desc
            NEXT FIELD xmfd010                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmfd011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd011
            #add-point:ON ACTION controlp INFIELD xmfd011 name="input.c.xmfd011"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmfd029
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd029
            #add-point:ON ACTION controlp INFIELD xmfd029 name="input.c.xmfd029"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmfd012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd012
            #add-point:ON ACTION controlp INFIELD xmfd012 name="input.c.xmfd012"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfd_m.xmfd012             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_oodb002_2()                                #呼叫開窗

            LET g_xmfd_m.xmfd012 = g_qryparam.return1              

            DISPLAY g_xmfd_m.xmfd012 TO xmfd012              #
            CALL s_desc_get_tax_desc1(g_site,g_xmfd_m.xmfd012)
                 RETURNING g_xmfd_m.xmfd012_desc
            DISPLAY BY NAME g_xmfd_m.xmfd012_desc 
            
            CALL s_tax_chk(g_site,g_xmfd_m.xmfd012)
                 RETURNING l_success,g_xmfd_m.xmfd012_desc,
                           g_xmfd_m.xmfd014,g_xmfd_m.xmfd013,l_oodb011
            DISPLAY BY NAME g_xmfd_m.xmfd013,g_xmfd_m.xmfd014
            
            NEXT FIELD xmfd012                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmfd013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd013
            #add-point:ON ACTION controlp INFIELD xmfd013 name="input.c.xmfd013"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmfd014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd014
            #add-point:ON ACTION controlp INFIELD xmfd014 name="input.c.xmfd014"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmfd015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd015
            #add-point:ON ACTION controlp INFIELD xmfd015 name="input.c.xmfd015"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfd_m.xmfd015             #給予default值
            LET g_qryparam.default2 = "" #g_xmfd_m.oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "238" #
            
            CALL q_oocq002()                                #呼叫開窗

            LET g_xmfd_m.xmfd015 = g_qryparam.return1              
            #LET g_xmfd_m.oocq002 = g_qryparam.return2 
            DISPLAY g_xmfd_m.xmfd015 TO xmfd015              #
            #DISPLAY g_xmfd_m.oocq002 TO oocq002 #應用分類碼 
            CALL s_desc_get_acc_desc('238',g_xmfd_m.xmfd015)
                 RETURNING g_xmfd_m.xmfd015_desc
            DISPLAY BY NAME g_xmfd_m.xmfd015_desc
            NEXT FIELD xmfd015                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmfd016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd016
            #add-point:ON ACTION controlp INFIELD xmfd016 name="input.c.xmfd016"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfd_m.xmfd016             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_xmfd_m.xmfd003
            LET g_qryparam.arg2 = g_xmfd_m.xmfd016

            CALL q_pmad002_3()                                #呼叫開窗

            LET g_xmfd_m.xmfd016 = g_qryparam.return1              

            DISPLAY g_xmfd_m.xmfd016 TO xmfd016              #
            CALL axmt410_xmfd016_ref(g_xmfd_m.xmfd016)
                 RETURNING g_xmfd_m.xmfd016_desc
            DISPLAY BY NAME g_xmfd_m.xmfd016_desc
            NEXT FIELD xmfd016                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmfd017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd017
            #add-point:ON ACTION controlp INFIELD xmfd017 name="input.c.xmfd017"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfd_m.xmfd017             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_xmah001()                                #呼叫開窗

            LET g_xmfd_m.xmfd017 = g_qryparam.return1              

            DISPLAY g_xmfd_m.xmfd017 TO xmfd017              #
            CALL axmt410_xmfd017_ref(g_xmfd_m.xmfd017)
                 RETURNING g_xmfd_m.xmfd017_desc
            DISPLAY BY NAME g_xmfd_m.xmfd017_desc
            NEXT FIELD xmfd017                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmfd018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd018
            #add-point:ON ACTION controlp INFIELD xmfd018 name="input.c.xmfd018"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfd_m.xmfd018             #給予default值
            LET g_qryparam.default2 = "" #g_xmfd_m.oocq002 #應用分類碼
            #給予arg
            #160621-00003#3 20160627 modify by beckxie---S
			   #LET g_qryparam.arg1 = "275"
            #CALL q_oocq002()                           #呼叫開窗
            LET g_qryparam.arg1 = '1'
            CALL q_oojd001_1()
            #160621-00003#3 20160627 modify by beckxie---E

            LET g_xmfd_m.xmfd018 = g_qryparam.return1              
            #LET g_xmfd_m.oocq002 = g_qryparam.return2 
            DISPLAY g_xmfd_m.xmfd018 TO xmfd018              #
            #DISPLAY g_xmfd_m.oocq002 TO oocq002 #應用分類碼 
            #160621-00003#3 20160629 modify by beckxie---S
            #CALL s_desc_get_acc_desc('275',g_xmfd_m.xmfd018) RETURNING g_xmfd_m.xmfd018_desc
            CALL s_desc_get_oojdl003_desc(g_xmfd_m.xmfd018) RETURNING g_xmfd_m.xmfd018_desc
            #160621-00003#3 20160629 modify by beckxie---E
            DISPLAY BY NAME g_xmfd_m.xmfd018_desc
            NEXT FIELD xmfd018                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmfd019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd019
            #add-point:ON ACTION controlp INFIELD xmfd019 name="input.c.xmfd019"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfd_m.xmfd019             #給予default值
            LET g_qryparam.default2 = "" #g_xmfd_m.oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "263" #

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_xmfd_m.xmfd019 = g_qryparam.return1              
            #LET g_xmfd_m.oocq002 = g_qryparam.return2 
            DISPLAY g_xmfd_m.xmfd019 TO xmfd019              #
            #DISPLAY g_xmfd_m.oocq002 TO oocq002 #應用分類碼 
            CALL s_desc_get_acc_desc('263',g_xmfd_m.xmfd019)
                 RETURNING g_xmfd_m.xmfd019_desc
            DISPLAY BY NAME g_xmfd_m.xmfd019_desc
            NEXT FIELD xmfd019                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmfd020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd020
            #add-point:ON ACTION controlp INFIELD xmfd020 name="input.c.xmfd020"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmfd_m.xmfd020
            CALL axmt410_get_oocq019(g_xmfd_m.xmfd019) RETURNING l_oocq019   #運輸類型  
            IF NOT cl_null(l_oocq019) THEN
               CASE
                  WHEN l_oocq019 = '1' OR l_oocq019 = '4'
                     LET g_qryparam.arg1 = "315" 
                     CALL q_oocq002() 
                  WHEN l_oocq019 = '2'
                     CALL q_oocq002_10()
                  WHEN l_oocq019 = '3'
                     CALL q_oocq002_12()
                  OTHERWISE
                     EXIT CASE
               END CASE
            END IF
            LET g_xmfd_m.xmfd020 = g_qryparam.return1
            DISPLAY g_xmfd_m.xmfd020 TO xmfd020
            CALL s_apmi011_location_ref(g_xmfd_m.xmfd019,g_xmfd_m.xmfd020)
                 RETURNING g_xmfd_m.xmfd020_desc
            DISPLAY BY NAME g_xmfd_m.xmfd020_desc
            NEXT FIELD xmfd020
            #END add-point
 
 
         #Ctrlp:input.c.xmfd021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd021
            #add-point:ON ACTION controlp INFIELD xmfd021 name="input.c.xmfd021"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmfd_m.xmfd021
            CALL axmt410_get_oocq019(g_xmfd_m.xmfd019) RETURNING l_oocq019   #運輸類型 
            IF NOT cl_null(l_oocq019) THEN
               CASE
                  WHEN l_oocq019 = '1' OR l_oocq019 = '4'
                     LET g_qryparam.arg1 = "315" 
                     CALL q_oocq002() 
                  WHEN l_oocq019 = '2'
                     CALL q_oocq002_10()
                  WHEN l_oocq019 = '3'
                     CALL q_oocq002_12()
                  OTHERWISE
                     EXIT CASE
               END CASE
            END IF
            LET g_xmfd_m.xmfd021 = g_qryparam.return1
            DISPLAY g_xmfd_m.xmfd021 TO xmfd021
            CALL s_apmi011_location_ref(g_xmfd_m.xmfd019,g_xmfd_m.xmfd021)
                 RETURNING g_xmfd_m.xmfd021_desc
            DISPLAY BY NAME g_xmfd_m.xmfd021_desc
            NEXT FIELD xmfd021
            #END add-point
 
 
         #Ctrlp:input.c.xmfd022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd022
            #add-point:ON ACTION controlp INFIELD xmfd022 name="input.c.xmfd022"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmfd_m.xmfd022             #給予default值
            CALL s_axmt500_get_pmaa027(g_xmfd_m.xmfd003) RETURNING l_pmaa027
            #給予arg
            LET g_qryparam.arg1 = l_pmaa027
            LET g_qryparam.WHERE = " oofb008 = '2' "

            CALL q_oofb019_1()                                #呼叫開窗

            LET g_xmfd_m.xmfd022 = g_qryparam.return1              

            DISPLAY g_xmfd_m.xmfd022 TO xmfd022              #
            CALL axmt410_xmfd022_ref(g_xmfd_m.xmfd003,g_xmfd_m.xmfd022)
                 RETURNING g_xmfd_m.xmfd022_desc,g_xmfd_m.oofb017
            DISPLAY BY NAME g_xmfd_m.xmfd022_desc,g_xmfd_m.oofb017
            NEXT FIELD xmfd022                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmfd023
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd023
            #add-point:ON ACTION controlp INFIELD xmfd023 name="input.c.xmfd023"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmfd024
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd024
            #add-point:ON ACTION controlp INFIELD xmfd024 name="input.c.xmfd024"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmfd025
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd025
            #add-point:ON ACTION controlp INFIELD xmfd025 name="input.c.xmfd025"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmfd026
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd026
            #add-point:ON ACTION controlp INFIELD xmfd026 name="input.c.xmfd026"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmfd027
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd027
            #add-point:ON ACTION controlp INFIELD xmfd027 name="input.c.xmfd027"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmfd028
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfd028
            #add-point:ON ACTION controlp INFIELD xmfd028 name="input.c.xmfd028"
            
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_xmfd_m.xmfddocno
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
               CALL s_aooi200_gen_docno(g_site,g_xmfd_m.xmfddocno,g_xmfd_m.xmfddocdt,g_prog)
                    RETURNING l_success,g_xmfd_m.xmfddocno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apm-00003'
                  LET g_errparam.extend = g_xmfd_m.xmfddocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
                  NEXT FIELD xmfddocno
               END IF
               DISPLAY BY NAME g_xmfd_m.xmfddocno
               #end add-point
               
               INSERT INTO xmfd_t (xmfdent,xmfddocno,xmfdsite,xmfddocdt,xmfd001,xmfd002,xmfdstus,xmfd005, 
                   xmfd003,xmfd006,xmfd007,xmfd008,xmfd009,xmfd010,xmfd011,xmfd029,xmfd012,xmfd013,xmfd014, 
                   xmfd015,xmfd016,xmfd017,xmfd018,xmfd019,xmfd020,xmfd021,xmfd022,xmfd023,xmfd024,xmfd025, 
                   xmfd026,xmfd027,xmfd028,xmfd030,xmfd031,xmfd032,xmfd033,xmfdownid,xmfdowndp,xmfdcrtid, 
                   xmfdcrtdp,xmfdcrtdt,xmfdmodid,xmfdmoddt,xmfdcnfid,xmfdcnfdt,xmfdpstid,xmfdpstdt)
               VALUES (g_enterprise,g_xmfd_m.xmfddocno,g_xmfd_m.xmfdsite,g_xmfd_m.xmfddocdt,g_xmfd_m.xmfd001, 
                   g_xmfd_m.xmfd002,g_xmfd_m.xmfdstus,g_xmfd_m.xmfd005,g_xmfd_m.xmfd003,g_xmfd_m.xmfd006, 
                   g_xmfd_m.xmfd007,g_xmfd_m.xmfd008,g_xmfd_m.xmfd009,g_xmfd_m.xmfd010,g_xmfd_m.xmfd011, 
                   g_xmfd_m.xmfd029,g_xmfd_m.xmfd012,g_xmfd_m.xmfd013,g_xmfd_m.xmfd014,g_xmfd_m.xmfd015, 
                   g_xmfd_m.xmfd016,g_xmfd_m.xmfd017,g_xmfd_m.xmfd018,g_xmfd_m.xmfd019,g_xmfd_m.xmfd020, 
                   g_xmfd_m.xmfd021,g_xmfd_m.xmfd022,g_xmfd_m.xmfd023,g_xmfd_m.xmfd024,g_xmfd_m.xmfd025, 
                   g_xmfd_m.xmfd026,g_xmfd_m.xmfd027,g_xmfd_m.xmfd028,g_xmfd_m.xmfd030,g_xmfd_m.xmfd031, 
                   g_xmfd_m.xmfd032,g_xmfd_m.xmfd033,g_xmfd_m.xmfdownid,g_xmfd_m.xmfdowndp,g_xmfd_m.xmfdcrtid, 
                   g_xmfd_m.xmfdcrtdp,g_xmfd_m.xmfdcrtdt,g_xmfd_m.xmfdmodid,g_xmfd_m.xmfdmoddt,g_xmfd_m.xmfdcnfid, 
                   g_xmfd_m.xmfdcnfdt,g_xmfd_m.xmfdpstid,g_xmfd_m.xmfdpstdt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_xmfd_m:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               #160520-00032 by whitney modify start
               IF l_question_flag = 'N' THEN  #避免重覆問2次的問題
                  LET l_cnt = 0
                  SELECT COUNT(*) INTO l_cnt
                    FROM xmff_t
                   WHERE xmffent = g_enterprise
                     AND xmffsite = g_site
                     AND xmffdocno = g_xmfd_m.xmfddocno
                  IF cl_null(l_cnt) THEN
                     LET l_cnt = 0
                  END IF
                  IF l_cnt = 0 THEN
                     CASE g_xmfd_m.xmfd008
                        WHEN '2'  #從報價範本檔產生單身
                           IF NOT cl_null(g_xmfd_m.xmfd009) THEN
                              IF cl_ask_confirm("axm-00395") THEN  #是否由報價範本產身單身資料！
                                 CALL s_transaction_end('Y','0')
                                 CALL s_transaction_begin()
                                 LET l_success = ''
                                 IF NOT axmt410_from_sub_get_body2() THEN
                                    CALL s_transaction_end('N','0')
                                 END IF
                                 LET l_question_flag = 'Y'
                              END IF
                           END IF
                        WHEN '4'  #估價單
                           IF NOT cl_null(g_xmfd_m.xmfd005) THEN
                              IF cl_ask_confirm("axm-00787") THEN  #是否依估價單自動產生單身資料？
                                 CALL s_transaction_end('Y','0')
                                 CALL s_transaction_begin()
                                 LET l_success = ''
                                 IF NOT axmt410_from_sub_get_body3() THEN
                                    CALL s_transaction_end('N','0')
                                 END IF
                                 LET l_question_flag = 'Y'
                              END IF
                           END IF
                     END CASE
                  END IF
               END IF
               #160520-00032 by whitney modify end
               #end add-point
               
               
               
               
               #add-point:單頭新增後 name="input.head.a_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL axmt410_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL axmt410_b_fill()
                  CALL axmt410_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               
               #end add-point
               
               #將遮罩欄位還原
               CALL axmt410_xmfd_t_mask_restore('restore_mask_o')
               
               UPDATE xmfd_t SET (xmfddocno,xmfdsite,xmfddocdt,xmfd001,xmfd002,xmfdstus,xmfd005,xmfd003, 
                   xmfd006,xmfd007,xmfd008,xmfd009,xmfd010,xmfd011,xmfd029,xmfd012,xmfd013,xmfd014,xmfd015, 
                   xmfd016,xmfd017,xmfd018,xmfd019,xmfd020,xmfd021,xmfd022,xmfd023,xmfd024,xmfd025,xmfd026, 
                   xmfd027,xmfd028,xmfd030,xmfd031,xmfd032,xmfd033,xmfdownid,xmfdowndp,xmfdcrtid,xmfdcrtdp, 
                   xmfdcrtdt,xmfdmodid,xmfdmoddt,xmfdcnfid,xmfdcnfdt,xmfdpstid,xmfdpstdt) = (g_xmfd_m.xmfddocno, 
                   g_xmfd_m.xmfdsite,g_xmfd_m.xmfddocdt,g_xmfd_m.xmfd001,g_xmfd_m.xmfd002,g_xmfd_m.xmfdstus, 
                   g_xmfd_m.xmfd005,g_xmfd_m.xmfd003,g_xmfd_m.xmfd006,g_xmfd_m.xmfd007,g_xmfd_m.xmfd008, 
                   g_xmfd_m.xmfd009,g_xmfd_m.xmfd010,g_xmfd_m.xmfd011,g_xmfd_m.xmfd029,g_xmfd_m.xmfd012, 
                   g_xmfd_m.xmfd013,g_xmfd_m.xmfd014,g_xmfd_m.xmfd015,g_xmfd_m.xmfd016,g_xmfd_m.xmfd017, 
                   g_xmfd_m.xmfd018,g_xmfd_m.xmfd019,g_xmfd_m.xmfd020,g_xmfd_m.xmfd021,g_xmfd_m.xmfd022, 
                   g_xmfd_m.xmfd023,g_xmfd_m.xmfd024,g_xmfd_m.xmfd025,g_xmfd_m.xmfd026,g_xmfd_m.xmfd027, 
                   g_xmfd_m.xmfd028,g_xmfd_m.xmfd030,g_xmfd_m.xmfd031,g_xmfd_m.xmfd032,g_xmfd_m.xmfd033, 
                   g_xmfd_m.xmfdownid,g_xmfd_m.xmfdowndp,g_xmfd_m.xmfdcrtid,g_xmfd_m.xmfdcrtdp,g_xmfd_m.xmfdcrtdt, 
                   g_xmfd_m.xmfdmodid,g_xmfd_m.xmfdmoddt,g_xmfd_m.xmfdcnfid,g_xmfd_m.xmfdcnfdt,g_xmfd_m.xmfdpstid, 
                   g_xmfd_m.xmfdpstdt)
                WHERE xmfdent = g_enterprise AND xmfddocno = g_xmfddocno_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "xmfd_t:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               #如果單頭的資料有改變的話 需要重算金額 
               #要回算單頭的金額 
               CALL axmt410_amount()
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL axmt410_xmfd_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_xmfd_m_t)
               LET g_log2 = util.JSON.stringify(g_xmfd_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               #160520-00032 by whitney modify start
               IF l_question_flag = 'N' THEN  #避免重覆問2次的問題
                  LET l_cnt = 0
                  SELECT COUNT(*) INTO l_cnt
                    FROM xmff_t
                   WHERE xmffent = g_enterprise
                     AND xmffsite = g_site
                     AND xmffdocno = g_xmfd_m.xmfddocno
                  IF cl_null(l_cnt) THEN
                     LET l_cnt = 0
                  END IF
                  IF l_cnt = 0 THEN
                     CASE g_xmfd_m.xmfd008
                        WHEN '2'  #從報價範本檔產生單身
                           IF NOT cl_null(g_xmfd_m.xmfd009) THEN
                              IF cl_ask_confirm("axm-00395") THEN  #是否由報價範本產身單身資料！
                                 CALL s_transaction_begin()
                                 LET l_success = ''
                                 IF axmt410_from_sub_get_body2() THEN
                                    CALL s_transaction_end('Y','0')
                                 ELSE
                                    CALL s_transaction_end('N','0')
                                 END IF
                                 LET l_question_flag = 'Y'
                              END IF
                           END IF
                        WHEN '4'  #估價單
                           IF NOT cl_null(g_xmfd_m.xmfd005) THEN
                              IF cl_ask_confirm("axm-00787") THEN  #是否依估價單自動產生單身資料？
                                 CALL s_transaction_begin()
                                 LET l_success = ''
                                 IF axmt410_from_sub_get_body3() THEN
                                    CALL s_transaction_end('Y','0')
                                 ELSE
                                    CALL s_transaction_end('N','0')
                                 END IF
                                 LET l_question_flag = 'Y'
                              END IF
                           END IF
                     END CASE
                  END IF
               END IF
               #160520-00032 by whitney modify end
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_xmfddocno_t = g_xmfd_m.xmfddocno
 
            
      END INPUT
   
 
{</section>}
 
{<section id="axmt410.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_xmff_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            #160520-00032 by whitney modify start
            IF l_question_flag = 'N' THEN  #避免重覆問2次的問題
               LET l_cnt = 0
               SELECT COUNT(*) INTO l_cnt
                 FROM xmff_t
                WHERE xmffent = g_enterprise
                  AND xmffsite = g_site
                  AND xmffdocno = g_xmfd_m.xmfddocno
               IF cl_null(l_cnt) THEN
                  LET l_cnt = 0
               END IF
               IF l_cnt = 0 THEN
                  CASE g_xmfd_m.xmfd008
                     WHEN '2'  #從報價範本檔產生單身
                        IF NOT cl_null(g_xmfd_m.xmfd009) THEN
                           IF cl_ask_confirm("axm-00395") THEN  #是否由報價範本產身單身資料！
                              CALL s_transaction_begin()
                              LET l_success = ''
                              IF axmt410_from_sub_get_body2() THEN
                                 CALL s_transaction_end('Y','0')
                              ELSE
                                 CALL s_transaction_end('N','0')
                              END IF
                              LET l_question_flag = 'Y'
                           END IF
                        END IF
                     WHEN '4'  #估價單
                        IF NOT cl_null(g_xmfd_m.xmfd005) THEN
                           IF cl_ask_confirm("axm-00787") THEN  #是否依估價單自動產生單身資料？
                              CALL s_transaction_begin()
                              LET l_success = ''
                              IF axmt410_from_sub_get_body3() THEN
                                 CALL s_transaction_end('Y','0')
                              ELSE
                                 CALL s_transaction_end('N','0')
                              END IF
                              LET l_question_flag = 'Y'
                           END IF
                        END IF
                  END CASE
               END IF
            END IF
            #160520-00032 by whitney modify end
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xmff_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axmt410_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1','4','5',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_xmff_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN axmt410_cl USING g_enterprise,g_xmfd_m.xmfddocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axmt410_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE axmt410_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_xmff_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xmff_d[l_ac].xmffseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xmff_d_t.* = g_xmff_d[l_ac].*  #BACKUP
               LET g_xmff_d_o.* = g_xmff_d[l_ac].*  #BACKUP
               CALL axmt410_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               
               #end add-point  
               CALL axmt410_set_no_entry_b(l_cmd)
               IF NOT axmt410_lock_b("xmff_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axmt410_bcl INTO g_xmff_d[l_ac].xmffseq,g_xmff_d[l_ac].xmff001,g_xmff_d[l_ac].xmff002, 
                      g_xmff_d[l_ac].xmff003,g_xmff_d[l_ac].xmff004,g_xmff_d[l_ac].xmff005,g_xmff_d[l_ac].xmff006, 
                      g_xmff_d[l_ac].xmff007,g_xmff_d[l_ac].xmff008,g_xmff_d[l_ac].xmff009,g_xmff_d[l_ac].xmff010, 
                      g_xmff_d[l_ac].xmffsite,g_xmff4_d[l_ac].xmffseq,g_xmff4_d[l_ac].xmff011,g_xmff4_d[l_ac].xmff012, 
                      g_xmff4_d[l_ac].xmff013,g_xmff5_d[l_ac].xmffseq,g_xmff5_d[l_ac].xmff015,g_xmff5_d[l_ac].xmff016, 
                      g_xmff5_d[l_ac].xmff017,g_xmff5_d[l_ac].xmff018,g_xmff5_d[l_ac].xmff019
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_xmff_d_t.xmffseq,":",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_xmff_d_mask_o[l_ac].* =  g_xmff_d[l_ac].*
                  CALL axmt410_xmff_t_mask()
                  LET g_xmff_d_mask_n[l_ac].* =  g_xmff_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL axmt410_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            LET g_pmao_flag = 'N'
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
 
 
            #其他table進行lock
            
 
 
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmff_d[l_ac].* TO NULL 
            INITIALIZE g_xmff_d_t.* TO NULL 
            INITIALIZE g_xmff_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
            
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            LET g_pmao_flag = 'N'
            #產品特徵要預設為一個空白 
            LET g_xmff_d[l_ac].xmff002 = ' '
            #end add-point
            LET g_xmff_d_t.* = g_xmff_d[l_ac].*     #新輸入資料
            LET g_xmff_d_o.* = g_xmff_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axmt410_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            
            #end add-point
            CALL axmt410_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmff_d[li_reproduce_target].* = g_xmff_d[li_reproduce].*
               LET g_xmff4_d[li_reproduce_target].* = g_xmff4_d[li_reproduce].*
               LET g_xmff5_d[li_reproduce_target].* = g_xmff5_d[li_reproduce].*
 
               LET g_xmff_d[li_reproduce_target].xmffseq = NULL
 
            END IF
            
 
 
 
            #add-point:modify段before insert name="input.body.before_insert"
            LET g_xmff_d[l_ac].xmffsite = g_site
            
            SELECT MAX(xmffseq) + 1 INTO g_xmff_d[l_ac].xmffseq
              FROM xmff_t
             WHERE xmffent = g_enterprise
               AND xmffdocno = g_xmfd_m.xmfddocno
            IF cl_null(g_xmff_d[l_ac].xmffseq) OR g_xmff_d[l_ac].xmffseq = 0 THEN
               LET g_xmff_d[l_ac].xmffseq = 1
            END IF

            LET g_xmff_d[l_ac].xmff005 = 'N'
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            #客戶料號處理參考axmt500 
            #判斷客戶料號是否存在交易對象對應檔，若無，則跳出詢問視窗 是否要回寫交易對像料號對應檔中  
            IF NOT cl_null(g_xmff_d[l_ac].xmff003) THEN
               #LET l_count = 0
               #SELECT COUNT(*) INTO l_count
               #  FROM pmao_t
               # WHERE pmaoent = g_enterprise
               #   AND pmdo001 = g_xmfd_m.xmfd003            #客戶編號 
               #   AND pmdo002 = g_xmff_d[l_ac].xmff001      #料號 
               #   AND pmdo003 = g_xmff_d[l_ac].xmff002      #產品特徵 
               #   AND pmdo004 = g_xmff_d[l_ac].xmff003      #客戶料號  
               #IF cl_null(l_count) THEN
               #   LET l_count = 0
               #END IF
               #IF l_count = 0 THEN
               #   #當前的客戶編號+客戶料號不存在於料號對應維檔中 
               #   #是否要自動將客戶料號、料件編號、產品特徵回寫至料號對應維檔中 
               #   IF cl_ask_confirm('axm-00445') THEN
               #      
               #      IF NOT s_axmt500_ins_pmao(g_xmfd_m.xmfddocno,g_xmfd_m.xmfd003,g_xmff_d[l_ac].xmff001,
               #                                g_xmff_d[l_ac].xmff002,g_xmff_d[l_ac].xmff003) THEN
               #         LET g_xmff_d[l_ac].xmff003 = ''
               #         DISPLAY BY NAME g_xmff_d[l_ac].xmff003
               #      END IF
               #   ELSE
               #      LET g_xmff_d[l_ac].xmff003 = ''
               #      DISPLAY BY NAME g_xmff_d[l_ac].xmff003
               #   END IF
               #END IF
               IF g_pmao_flag = 'Y' THEN
                  IF NOT s_axmt500_ins_pmao(g_xmfd_m.xmfddocno,g_xmfd_m.xmfd003,g_xmff_d[l_ac].xmff001,
                                               g_xmff_d[l_ac].xmff002,g_xmff_d[l_ac].xmff003,
                                               g_xmff_d[l_ac].l_pmao009,g_xmff_d[l_ac].l_pmao010) THEN
                      LET g_xmff_d[l_ac].xmff003 = ''
                      LET g_xmff_d[l_ac].l_pmao009 = ''
                      LET g_xmff_d[l_ac].l_pmao010 = ''
                      DISPLAY BY NAME g_xmff_d[l_ac].xmff003,g_xmff_d[l_ac].l_pmao009,g_xmff_d[l_ac].l_pmao010
                  END IF
               END IF 
            END IF
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM xmff_t 
             WHERE xmffent = g_enterprise AND xmffdocno = g_xmfd_m.xmfddocno
 
               AND xmffseq = g_xmff_d[l_ac].xmffseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               
               #如果產品特徵是null的話 應該要預設一個空白 
               IF cl_null(g_xmff_d[l_ac].xmff002) THEN
                  LET g_xmff_d[l_ac].xmff002 = ' '
               END IF
               
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmfd_m.xmfddocno
               LET gs_keys[2] = g_xmff_d[g_detail_idx].xmffseq
               CALL axmt410_insert_b('xmff_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               INITIALIZE g_xmff_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmff_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axmt410_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               CALL s_transaction_end('Y','0')
               CALL s_transaction_begin()
               IF g_inam.getLength() > 1 THEN     #因為第一筆資料已呈現在畫面並寫入DB,從第二筆開始處理  
                  LET l_xmffseq = 0
                  SELECT MAX(xmffseq) + 1 INTO l_xmffseq
                    FROM xmff_t
                   WHERE xmffent = g_enterprise
                     AND xmffdocno = g_xmfd_m.xmfddocno
                  IF cl_null(l_xmffseq) OR l_xmffseq = 0 THEN
                     LET l_xmffseq = 0
                  END IF 
                  IF l_xmffseq > 0 THEN
                     FOR l_i = 2 TO g_inam.getLength()

                        #由交易對象 料號 產品特徵 來取得 客戶料號 
                        LET l_xmff003 = ''
                        CALL s_apmi070_get_pmao004(g_xmfd_m.xmfd003,
                                                   g_xmff_d[l_ac].xmff001,
                                                   g_inam[l_i].inam004)
                             RETURNING l_success,l_xmff003

                        #對數量進行小數取位 
                        IF NOT cl_null(g_xmff_d[l_ac].xmff004) AND NOT cl_null(g_inam[l_i].inam004) THEN
                           CALL s_aooi250_take_decimals(g_xmff_d[l_ac].xmff004,g_inam[l_i].inam004)
                                RETURNING l_success,g_inam[l_i].inam004
                        END IF

                        #計算未稅金額 含稅金額 稅額 
                        LET l_xmff010 = 0
                        LET l_xmff009 = 0
                        LET l_xmff008 = 0 
                        CALL axmt410_get_amount(g_xmfd_m.xmfddocno,g_xmff_d[l_ac].xmffseq,
                                                g_inam[l_i].inam004,g_xmff_d[l_ac].xmff007,
                                                g_xmfd_m.xmfd010,g_xmfd_m.xmfd012)
                             RETURNING l_xmff008,l_xmff010,l_xmff009

                        #取得標準成本單價 
                        LET l_xmff011 = 0
                        CALL axmt410_get_xmff011(g_xmff_d[l_ac].xmff001,
                                                 g_inam[l_i].inam002,
                                                 g_xmff_d[l_ac].xmff004)
                             RETURNING l_xmff011

                        #取得預估毛利率   
                        LET l_xmff012 = 0
                        CALL axmt410_get_xmff012(g_inam[l_i].inam004,
                                                 l_xmff008,
                                                 l_xmff011)
                             RETURNING l_xmff012

                        #取得預估毛利金額  
                        LET l_xmff013 = 0
                        CALL axmt410_get_xmff013(g_inam[l_i].inam004,
                                                 l_xmff008,
                                                 l_xmff011)
                             RETURNING l_xmff013

                        INSERT INTO xmff_t(xmffent,xmffsite,xmffdocno,xmffseq,
                                           xmff001,xmff002,xmff003,xmff004,
                                           xmff005,xmff006,xmff007,xmff008, 
                                           xmff009,xmff010,xmff011,xmff012,
                                           xmff013)
                                    VALUES(g_enterprise,g_site,g_xmfd_m.xmfddocno,l_xmffseq,
                                           g_xmff_d[l_ac].xmff001,g_inam[l_i].inam002,
                                           l_xmff003,g_xmff_d[l_ac].xmff004,g_xmff_d[l_ac].xmff005,
                                           g_inam[l_i].inam004,g_xmff_d[l_ac].xmff007,l_xmff008,
                                           l_xmff009,l_xmff010,l_xmff011,l_xmff012,l_xmff013)
                        IF SQLCA.sqlcode THEN
                           CALL s_transaction_end('N','0')
                           EXIT FOR
                        END IF

                        LET l_xmffseq = l_xmffseq + 1
                     END FOR
                  END IF
               END IF
               
               CALL axmt410_b_fill()
               LET g_rec_b = g_inam.getLength() - 1
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               #如果此資料有分量計價的資料 也要一起被清除 
               CALL axmt410_del_xmfg('Y')
               IF NOT cl_null(g_errno) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = "xmfg_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
                  CANCEL DELETE
               END IF
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_xmfd_m.xmfddocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_xmff_d_t.xmffseq
 
            
               #刪除同層單身
               IF NOT axmt410_delete_b('xmff_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt410_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT axmt410_key_delete_b(gs_keys,'xmff_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt410_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
 
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
               
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE axmt410_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
               
               #end add-point
               LET l_count = g_xmff_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_xmff_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmffseq
            #add-point:BEFORE FIELD xmffseq name="input.b.page1.xmffseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmffseq
            
            #add-point:AFTER FIELD xmffseq name="input.a.page1.xmffseq"
            #此段落由子樣板a05產生
            IF  g_xmfd_m.xmfddocno IS NOT NULL AND g_xmff_d[g_detail_idx].xmffseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmfd_m.xmfddocno != g_xmfddocno_t OR g_xmff_d[g_detail_idx].xmffseq != g_xmff_d_t.xmffseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmff_t WHERE "||"xmffent = '" ||g_enterprise|| "' AND "||"xmffdocno = '"||g_xmfd_m.xmfddocno ||"' AND "|| "xmffseq = '"||g_xmff_d[g_detail_idx].xmffseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmffseq
            #add-point:ON CHANGE xmffseq name="input.g.page1.xmffseq"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff001
            
            #add-point:AFTER FIELD xmff001 name="input.a.page1.xmff001"
            LET g_xmff_d[l_ac].xmff001_desc = ' '
            LET g_xmff_d[l_ac].xmff001_desc_desc = ' '
            CALL s_desc_get_item_desc(g_xmff_d[l_ac].xmff001)
                 RETURNING g_xmff_d[l_ac].xmff001_desc,
                           g_xmff_d[l_ac].xmff001_desc_desc
            IF NOT cl_null(g_xmff_d[l_ac].xmff001) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmff_d[l_ac].xmff001 != g_xmff_d_o.xmff001 OR
                                                   g_xmff_d_o.xmff001 IS NULL)) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmff_d[l_ac].xmff001
                  IF NOT cl_chk_exist("v_imaf001_14") THEN
                     LET g_xmff_d[l_ac].xmff001 = g_xmff_d_o.xmff001
                     CALL s_desc_get_item_desc(g_xmff_d[l_ac].xmff001)
                          RETURNING g_xmff_d[l_ac].xmff001_desc,
                                    g_xmff_d[l_ac].xmff001_desc_desc
                     NEXT FIELD CURRENT
                  END IF

                  IF NOT s_control_check_item(g_xmff_d[l_ac].xmff001,'2',g_site,g_user,g_dept,g_xmfd_m.xmfddocno) THEN
                     LET g_xmff_d[l_ac].xmff001 = g_xmff_d_t.xmff001
                     CALL s_desc_get_item_desc(g_xmff_d[l_ac].xmff001)
                          RETURNING g_xmff_d[l_ac].xmff001_desc,
                                    g_xmff_d[l_ac].xmff001_desc_desc
                     NEXT FIELD CURRENT
                  END IF

                  #取得銷售單位  
                  SELECT imaf112 INTO g_xmff_d[l_ac].xmff004
                    FROM imaf_t
                   WHERE imafent  = g_enterprise
                     AND imafsite = g_site
                     AND imaf001  = g_xmff_d[l_ac].xmff001 
                  IF g_xmff_d[l_ac].xmff004 != g_xmff_d_o.xmff004 OR
                     g_xmff_d_o.xmff004 IS NULL THEN
                     IF NOT cl_null(g_xmff_d[l_ac].xmff006) THEN
                        #對數量進行取位  
                        CALL s_aooi250_take_decimals(g_xmff_d[l_ac].xmff004,g_xmff_d[l_ac].xmff006)
                             RETURNING l_success,g_xmff_d[l_ac].xmff006

                        #重新計算含稅、未稅金額與稅額 
                        CALL axmt410_get_amount(g_xmfd_m.xmfddocno,g_xmff_d[l_ac].xmffseq,
                                                g_xmff_d[l_ac].xmff006,g_xmff_d[l_ac].xmff007,
                                                g_xmfd_m.xmfd010,g_xmfd_m.xmfd012)
                             RETURNING g_xmff_d[l_ac].xmff008,g_xmff_d[l_ac].xmff010,g_xmff_d[l_ac].xmff009

                        LET g_xmff_d_o.xmff006 = g_xmff_d[l_ac].xmff006
                     END IF
                  END IF
                  LET g_xmff_d_o.xmff004 = g_xmff_d[l_ac].xmff004 
                  
                  #取得標準成本單價 
                  CALL axmt410_get_xmff011(g_xmff_d[l_ac].xmff001,
                                           g_xmff_d[l_ac].xmff002,
                                           g_xmff_d[l_ac].xmff004)
                       RETURNING g_xmff4_d[l_ac].xmff011
                  #取得預估毛利率   
                  CALL axmt410_get_xmff012(g_xmff_d[l_ac].xmff006,
                                           g_xmff_d[l_ac].xmff008,
                                           g_xmff4_d[l_ac].xmff011)
                       RETURNING g_xmff4_d[l_ac].xmff012
                  #取得預估毛利金額  
                  CALL axmt410_get_xmff013(g_xmff_d[l_ac].xmff006,
                                           g_xmff_d[l_ac].xmff008,
                                           g_xmff4_d[l_ac].xmff011)
                       RETURNING g_xmff4_d[l_ac].xmff013
                  #取得單位毛重淨重
                  LET l_imaa016 = 0
                  LET l_imaa017 = 0
                  SELECT COALESCE(imaa016,0),COALESCE(imaa017,0) INTO l_imaa016,l_imaa017
                    FROM imaa_t
                   WHERE imaaent = g_enterprise
                     AND imaa001 = g_xmff_d[l_ac].xmff001
                  
                  IF NOT cl_null(g_xmff_d[l_ac].xmff006) THEN
                     LET g_xmff5_d[l_ac].xmff017 = g_xmff_d[l_ac].xmff006 * l_imaa017
                     LET g_xmff5_d[l_ac].xmff018 = g_xmff_d[l_ac].xmff006 * l_imaa016
                  END IF
               END IF

            END IF 
            
            CALL s_desc_get_item_desc(g_xmff_d[l_ac].xmff001)
                 RETURNING g_xmff_d[l_ac].xmff001_desc,
                           g_xmff_d[l_ac].xmff001_desc_desc
            SELECT pmao009,pmao010
              INTO g_xmff_d[l_ac].l_pmao009,g_xmff_d[l_ac].l_pmao010
              FROM pmao_t
             WHERE pmaoent = g_enterprise
               AND pmao001 = g_xmfd_m.xmfd003
               AND pmao002 = g_xmff_d[l_ac].xmff001
               AND pmao003 = g_xmff_d[l_ac].xmff002
               AND pmao004 = g_xmff_d[l_ac].xmff003                     
            DISPLAY BY NAME g_xmff_d[l_ac].l_pmao009,g_xmff_d[l_ac].l_pmao010
            CALL axmt410_set_entry_b(p_cmd)
            CALL axmt410_set_no_entry_b(p_cmd) 
            
            LET g_xmff_d_o.xmff001 = g_xmff_d[l_ac].xmff001
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff001
            #add-point:BEFORE FIELD xmff001 name="input.b.page1.xmff001"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmff001
            #add-point:ON CHANGE xmff001 name="input.g.page1.xmff001"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff002
            
            #add-point:AFTER FIELD xmff002 name="input.a.page1.xmff002"
            #取得產品特徵的說明 
            CALL s_feature_description(g_xmff_d[l_ac].xmff001,g_xmff_d[l_ac].xmff002)
                 RETURNING l_success,g_xmff_d[l_ac].xmff002_desc
            IF g_xmff_d[l_ac].xmff002 IS NOT NULL THEN
               #檢查產品特徵 
               IF NOT s_feature_check(g_xmff_d[l_ac].xmff001,g_xmff_d[l_ac].xmff002) THEN
                  LET g_xmff_d[l_ac].xmff002 = g_xmff_d_t.xmff002
                  NEXT FIELD CURRENT
               END IF
               #151224-00025#5---dorishsu---151228---add--
               IF NOT s_feature_direct_input(g_xmff_d[l_ac].xmff001,g_xmff_d[l_ac].xmff002,g_xmff_d_t.xmff002,g_xmfd_m.xmfddocno,g_xmfd_m.xmfdsite) THEN
                  NEXT FIELD CURRENT
               END IF
               #151224-00025#5---dorishsu---151228---end--
            ELSE
               LET g_xmff_d[l_ac].xmff002 = ' '
            END IF 
            
            #由交易對象 料號 產品特徵 來取得 客戶料號 
            CALL s_apmi070_get_pmao004(g_xmfd_m.xmfd003,
                                       g_xmff_d[l_ac].xmff001,
                                       g_xmff_d[l_ac].xmff002)
                 RETURNING l_success,g_xmff_d[l_ac].xmff003
            
            #取得標準成本單價 
            CALL axmt410_get_xmff011(g_xmff_d[l_ac].xmff001,
                                     g_xmff_d[l_ac].xmff002,
                                     g_xmff_d[l_ac].xmff004)
                 RETURNING g_xmff4_d[l_ac].xmff011
            #取得預估毛利率   
            CALL axmt410_get_xmff012(g_xmff_d[l_ac].xmff006,
                                     g_xmff_d[l_ac].xmff008,
                                     g_xmff4_d[l_ac].xmff011)
                 RETURNING g_xmff4_d[l_ac].xmff012
            #取得預估毛利金額  
            CALL axmt410_get_xmff013(g_xmff_d[l_ac].xmff006,
                                     g_xmff_d[l_ac].xmff008,
                                     g_xmff4_d[l_ac].xmff011)
                 RETURNING g_xmff4_d[l_ac].xmff013 
            SELECT pmao009,pmao010
              INTO g_xmff_d[l_ac].l_pmao009,g_xmff_d[l_ac].l_pmao010
              FROM pmao_t
             WHERE pmaoent = g_enterprise
               AND pmao001 = g_xmfd_m.xmfd003
               AND pmao002 = g_xmff_d[l_ac].xmff001
               AND pmao003 = g_xmff_d[l_ac].xmff002
               AND pmao004 = g_xmff_d[l_ac].xmff003                     
            DISPLAY BY NAME g_xmff_d[l_ac].l_pmao009,g_xmff_d[l_ac].l_pmao010     
            LET g_xmff_d_o.xmff002 = g_xmff_d[l_ac].xmff002
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff002
            #add-point:BEFORE FIELD xmff002 name="input.b.page1.xmff002"
            #160804-00063#1--(S)
            #IF s_feature_auto_chk(g_xmff_d[l_ac].xmff001) AND cl_null(g_xmff_d[l_ac].xmff002) THEN #160314-00009#13 add   
            #   IF axmt410_imaa005_exists() THEN
            #      IF l_cmd = 'a' AND cl_null(g_xmff_d[l_ac].xmff002) THEN
            #         CALL g_inam.clear()
            #         CALL s_feature_multi(g_xmff_d[l_ac].xmff001,'','',g_site,g_xmfd_m.xmfddocno)
            #              RETURNING l_success,g_inam
            #         LET g_xmff_d[l_ac].xmff002 = g_inam[1].inam002 
            #         LET g_xmff_d[l_ac].xmff006 = g_inam[1].inam004
            #      END IF
            #   END IF
            #END IF           #160314-00009#13 add   
            #160804-00063#1--(E)
            #160804-00063#1--(S)
            IF axmt410_imaa005_exists() THEN
               IF cl_null(g_xmff_d[l_ac].xmff002) AND NOT cl_null(g_xmff_d[l_ac].xmff001) THEN
                  IF l_cmd = 'a' THEN            
                    CALL g_inam.clear()            
                    CALL s_feature(l_cmd,g_xmff_d[l_ac].xmff001,'','',g_site,g_xmfd_m.xmfddocno) RETURNING l_success,g_inam
                    LET g_xmff_d[l_ac].xmff002 = g_inam[1].inam002  #產品特徵
                    LET g_xmff_d[l_ac].xmff006 = g_inam[1].inam004  #需求數量
                    DISPLAY BY NAME g_xmff_d[l_ac].xmff002,g_xmff_d[l_ac].xmff006
                 END IF
                 IF l_cmd = 'u' THEN
                    CALL s_feature_single(g_xmff_d[l_ac].xmff001,g_xmff_d[l_ac].xmff002,g_site,g_xmfd_m.xmfddocno)
                       RETURNING l_success,g_xmff_d[l_ac].xmff002
                    DISPLAY BY NAME g_xmff_d[l_ac].xmff002
                 END IF
               END IF
            END IF
            #160804-00063#1--(E)
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmff002
            #add-point:ON CHANGE xmff002 name="input.g.page1.xmff002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff002_desc
            #add-point:BEFORE FIELD xmff002_desc name="input.b.page1.xmff002_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff002_desc
            
            #add-point:AFTER FIELD xmff002_desc name="input.a.page1.xmff002_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmff002_desc
            #add-point:ON CHANGE xmff002_desc name="input.g.page1.xmff002_desc"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff003
            
            #add-point:AFTER FIELD xmff003 name="input.a.page1.xmff003"
            #IF NOT cl_null(g_xmff_d[l_ac].xmff003) THEN
            #   LET l_count = 0
            #   SELECT COUNT(*) INTO l_count
            #     FROM pmao_t
            #    WHERE pmaoent = g_enterprise
            #      AND pmdo001 = g_xmfd_m.xmfd003            #客戶編號 
            #      AND pmdo002 = g_xmff_d[l_ac].xmff001      #料號 
            #      AND pmdo003 = g_xmff_d[l_ac].xmff002      #產品特徵 
            #      AND pmdo004 = g_xmff_d[l_ac].xmff003      #客戶料號  
            #   IF cl_null(l_count) THEN
            #     LET l_count = 0
            #   END IF
            #   IF l_count = 0 THEN
            #      #當前的客戶編號+客戶料號不存在於料號對應維檔中 
            #      #是否要自動將客戶料號、料件編號、產品特徵回寫至料號對應維檔中 
            #      IF cl_ask_confirm('axm-00445') THEN
            #         
            #      ELSE
            #         LET g_xmff_d[l_ac].xmff003 = ''
            #         DISPLAY BY NAME g_xmff_d[l_ac].xmff003
            #      END IF
            #   END IF
            #END IF
            IF NOT cl_null(g_xmff_d[l_ac].xmff003) THEN 
               IF cl_null(g_xmff_d[l_ac].xmff001) THEN
                  
                  #若料件為空時，呼叫元件帶出料件+產品特徵  
                  CALL s_apmi070_get_pmao002_pmao003(g_xmfd_m.xmfd003,g_xmff_d[l_ac].xmff003)
                       RETURNING l_success,l_pmao002,l_pmao003
                  IF NOT l_success THEN
                     LET g_xmff_d[l_ac].xmff003 = g_xmff_d_t.xmff003
                     LET g_xmff_d[l_ac].l_pmao009 = g_xmff_d_t.l_pmao009
                     LET g_xmff_d[l_ac].l_pmao010 = g_xmff_d_t.l_pmao010
                     DISPLAY BY NAME g_xmff_d[l_ac].l_pmao009,g_xmff_d[l_ac].l_pmao010
                     NEXT FIELD CURRENT
                  END IF
                  LET g_xmff_d[l_ac].xmff001 = l_pmao002
                  LET g_xmff_d[l_ac].xmff002 = l_pmao003
                  CALL s_desc_get_item_desc(g_xmff_d[l_ac].xmff001)
                       RETURNING g_xmff_d[l_ac].xmff001_desc,
                                 g_xmff_d[l_ac].xmff001_desc_desc
                  DISPLAY BY NAME g_xmff_d[l_ac].xmff001_desc,
                                  g_xmff_d[l_ac].xmff001_desc_desc
                  DISPLAY BY NAME g_xmff_d[l_ac].xmff001,g_xmff_d[l_ac].xmff002  
                  
                  #取得產品特徵說明 
                  CALL s_feature_description(g_xmff_d[l_ac].xmff001,g_xmff_d[l_ac].xmff002)
                       RETURNING l_success,g_xmff_d[l_ac].xmff002_desc
                  DISPLAY BY NAME g_xmff_d[l_ac].xmff002_desc
                  
                  LET g_xmff_d_o.xmff001 = g_xmff_d[l_ac].xmff001
                  LET g_xmff_d_o.xmff002 = g_xmff_d[l_ac].xmff002
                  
                  SELECT pmao009,pmao010
                    INTO g_xmff_d[l_ac].l_pmao009,g_xmff_d[l_ac].l_pmao010
                    FROM pmao_t
                   WHERE pmaoent = g_enterprise
                     AND pmao001 = g_xmfd_m.xmfd003
                     AND pmao002 = g_xmff_d[l_ac].xmff001
                     AND pmao003 = g_xmff_d[l_ac].xmff002
                     AND pmao004 = g_xmff_d[l_ac].xmff003                     
                  DISPLAY BY NAME g_xmff_d[l_ac].l_pmao009,g_xmff_d[l_ac].l_pmao010
               END IF 
               
            ELSE
               LET g_xmff_d[l_ac].l_pmao009 = ''
               LET g_xmff_d[l_ac].l_pmao010 = ''
               DISPLAY BY NAME g_xmff_d[l_ac].l_pmao009,g_xmff_d[l_ac].l_pmao010
               #ming 20140919 mark --------------------------------------------------------(S) 
               #客戶料號不再做檢查 因為我們無法了解客戶的料號 叫什麼名字 
               ##設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               #INITIALIZE g_chkparam.* TO NULL
               ##設定g_chkparam.*的參數
               #LET g_chkparam.arg1 = g_xmfd_m.xmfd003
               #LET g_chkparam.arg2 = g_xmff_d[l_ac].xmff001
               #LET g_chkparam.arg3 = g_xmff_d[l_ac].xmff002
               #LET g_chkparam.arg4 = g_xmff_d[l_ac].xmff003 
               ##錯誤訊息替換
               #LET l_str01 = cl_getmsg('apm-00052',g_dlang)
               #LET l_str02 = cl_getmsg('axm-00469',g_dlang)
               #LET g_chkparam.err_str[1] = "apm-00260:axm-00468|",l_str01,"|",l_str02
               ##呼叫檢查存在並帶值的library 
               #IF NOT cl_null(g_xmff_d[l_ac].xmff001) AND NOT cl_null(g_xmff_d[l_ac].xmff002) THEN
               #   IF cl_chk_exist("v_pmao004") THEN
               #      CALL s_desc_get_item_desc(g_xmff_d[l_ac].xmff001)
               #           RETURNING g_xmff_d[l_ac].xmff001_desc,
               #                     g_xmff_d[l_ac].xmff001_desc_desc
               #      DISPLAY BY NAME g_xmff_d[l_ac].xmff001_desc,
               #                      g_xmff_d[l_ac].xmff001_desc_desc
               #   ELSE
               #      LET g_xmff_d[l_ac].xmff003 = g_xmff_d_o.xmff003
               #      DISPLAY BY NAME g_xmff_d[l_ac].xmff003
               #      NEXT FIELD CURRENT
               #   END IF
               #ELSE 
               #   IF cl_chk_exist("v_pmao004_1") THEN
               #      CALL s_desc_get_item_desc(g_xmff_d[l_ac].xmff001)
               #           RETURNING g_xmff_d[l_ac].xmff001_desc,
               #                     g_xmff_d[l_ac].xmff001_desc_desc
               #      DISPLAY BY NAME g_xmff_d[l_ac].xmff001_desc,
               #                      g_xmff_d[l_ac].xmff001_desc_desc
               #   ELSE
               #      LET g_xmff_d[l_ac].xmff003 = g_xmff_d_o.xmff003
               #      DISPLAY BY NAME g_xmff_d[l_ac].xmff003
               #      NEXT FIELD CURRENT
               #   END IF
               #END IF
               #ming 20140919 mark --------------------------------------------------------(E) 
            END IF
            
            LET g_xmff_d_o.xmff003 = g_xmff_d[l_ac].xmff003
            CALL axmt410_set_entry_b(p_cmd)
            CALL axmt410_set_no_entry_b(p_cmd)
            IF g_pmao_flag ='Y' THEN
               NEXT FIELD l_pmao009
            END IF 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff003
            #add-point:BEFORE FIELD xmff003 name="input.b.page1.xmff003"
            CALL axmt410_set_entry_b(p_cmd)
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmff003
            #add-point:ON CHANGE xmff003 name="input.g.page1.xmff003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_pmao009
            #add-point:BEFORE FIELD l_pmao009 name="input.b.page1.l_pmao009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_pmao009
            
            #add-point:AFTER FIELD l_pmao009 name="input.a.page1.l_pmao009"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_pmao009
            #add-point:ON CHANGE l_pmao009 name="input.g.page1.l_pmao009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_pmao010
            #add-point:BEFORE FIELD l_pmao010 name="input.b.page1.l_pmao010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_pmao010
            
            #add-point:AFTER FIELD l_pmao010 name="input.a.page1.l_pmao010"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_pmao010
            #add-point:ON CHANGE l_pmao010 name="input.g.page1.l_pmao010"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff004
            
            #add-point:AFTER FIELD xmff004 name="input.a.page1.xmff004"
            LET g_xmff_d[l_ac].xmff004_desc = ' '
            CALL s_desc_get_unit_desc(g_xmff_d[l_ac].xmff004)
                 RETURNING g_xmff_d[l_ac].xmff004_desc
            IF NOT cl_null(g_xmff_d[l_ac].xmff004) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmff_d[l_ac].xmff004 != g_xmff_d_o.xmff004 OR
                                                   g_xmff_d_o.xmff004 IS NULL)) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmff_d[l_ac].xmff001
                  LET g_chkparam.arg2 = g_xmff_d[l_ac].xmff004
                  IF NOT cl_chk_exist("v_imao002") THEN
                     LET g_xmff_d[l_ac].xmff004 = g_xmff_d_o.xmff004
                     CALL s_desc_get_unit_desc(g_xmff_d[l_ac].xmff004)
                          RETURNING g_xmff_d[l_ac].xmff004_desc
                     NEXT FIELD CURRENT
                  END IF

                  IF NOT cl_null(g_xmff_d[l_ac].xmff006) THEN
                     #對數量進行單位小數取位 
                     CALL s_aooi250_take_decimals(g_xmff_d[l_ac].xmff004,g_xmff_d[l_ac].xmff006)
                          RETURNING l_success,g_xmff_d[l_ac].xmff006 
                     #重新計算含稅、未稅金額與稅額 
                     CALL axmt410_get_amount(g_xmfd_m.xmfddocno,g_xmff_d[l_ac].xmffseq,
                                             g_xmff_d[l_ac].xmff006,g_xmff_d[l_ac].xmff007,
                                             g_xmfd_m.xmfd010,g_xmfd_m.xmfd012)
                          RETURNING g_xmff_d[l_ac].xmff008,g_xmff_d[l_ac].xmff010,g_xmff_d[l_ac].xmff009

                     LET g_xmff_d_o.xmff006 = g_xmff_d[l_ac].xmff006
                  END IF
                  
                  #取得標準成本單價 
                  CALL axmt410_get_xmff011(g_xmff_d[l_ac].xmff001,
                                           g_xmff_d[l_ac].xmff002,
                                           g_xmff_d[l_ac].xmff004)
                       RETURNING g_xmff4_d[l_ac].xmff011
                  #取得預估毛利率   
                  CALL axmt410_get_xmff012(g_xmff_d[l_ac].xmff006,
                                           g_xmff_d[l_ac].xmff008,
                                           g_xmff4_d[l_ac].xmff011)
                       RETURNING g_xmff4_d[l_ac].xmff012
                  #取得預估毛利金額  
                  CALL axmt410_get_xmff013(g_xmff_d[l_ac].xmff006,
                                           g_xmff_d[l_ac].xmff008,
                                           g_xmff4_d[l_ac].xmff011)
                       RETURNING g_xmff4_d[l_ac].xmff013
               END IF

            END IF 

            CALL s_desc_get_unit_desc(g_xmff_d[l_ac].xmff004)
                 RETURNING g_xmff_d[l_ac].xmff004_desc 
            
            LET g_xmff_d_o.xmff004 = g_xmff_d[l_ac].xmff004

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff004
            #add-point:BEFORE FIELD xmff004 name="input.b.page1.xmff004"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmff004
            #add-point:ON CHANGE xmff004 name="input.g.page1.xmff004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff005
            #add-point:BEFORE FIELD xmff005 name="input.b.page1.xmff005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff005
            
            #add-point:AFTER FIELD xmff005 name="input.a.page1.xmff005"
            IF g_xmff_d[l_ac].xmff005 = 'Y' THEN
               #最後一個參數 代表目前已在transaction中 
               CALL axmt410_01(g_xmfd_m.xmfddocno,g_xmff_d[l_ac].xmffseq,
                               g_xmff_d[l_ac].xmff001,g_xmff_d[l_ac].xmff002,
                               g_xmff_d[l_ac].xmff004,'Y')

               #當維護分量計價時，報價單價會沒辦法維護，造成後面的預估成本與毛利率時沒有單價與利率 
               #所以在維護完分量計價後，應判斷數量存在哪個區間內 
               #然後取得該單價於xmff007上 
               #從分量計價中取得單價 
               CALL axmt410_from_xmfg_get_xmff007(g_xmff_d[l_ac].xmffseq,
                                                  g_xmff_d[l_ac].xmff006)
                    RETURNING g_xmff_d[l_ac].xmff007

               #按幣別對金額做取位 
               CALL s_curr_round(g_site,g_xmfd_m.xmfd010,g_xmff_d[l_ac].xmff007,'1')
                    RETURNING g_xmff_d[l_ac].xmff007


               #計算未稅金額 含稅金額 稅額 
               CALL axmt410_get_amount(g_xmfd_m.xmfddocno,g_xmff_d[l_ac].xmffseq,
                                       g_xmff_d[l_ac].xmff006,g_xmff_d[l_ac].xmff007,
                                       g_xmfd_m.xmfd010,g_xmfd_m.xmfd012)
                    RETURNING g_xmff_d[l_ac].xmff008,g_xmff_d[l_ac].xmff010,g_xmff_d[l_ac].xmff009

               #取得預估毛利率   
               CALL axmt410_get_xmff012(g_xmff_d[l_ac].xmff006,
                                        g_xmff_d[l_ac].xmff008,
                                        g_xmff4_d[l_ac].xmff011)
                    RETURNING g_xmff4_d[l_ac].xmff012
               #取得預估毛利金額  
               CALL axmt410_get_xmff013(g_xmff_d[l_ac].xmff006,
                                        g_xmff_d[l_ac].xmff008,
                                        g_xmff4_d[l_ac].xmff011)
                    RETURNING g_xmff4_d[l_ac].xmff013
               
               CALL axmt410_b_fill_for_xmfg()
            END IF
            
            CALL axmt410_set_entry_b(p_cmd)
            CALL axmt410_set_no_entry_b(p_cmd)
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmff005
            #add-point:ON CHANGE xmff005 name="input.g.page1.xmff005"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff006
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmff_d[l_ac].xmff006,"0","0","","","azz-00079",1) THEN
               NEXT FIELD xmff006
            END IF 
 
 
 
            #add-point:AFTER FIELD xmff006 name="input.a.page1.xmff006"
            IF NOT cl_null(g_xmff_d[l_ac].xmff006) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmff_d[l_ac].xmff006 != g_xmff_d_o.xmff006 OR
                                                   g_xmff_d_o.xmff006 IS NULL)) THEN 
                  IF g_xmff_d[l_ac].xmff005 = 'Y' THEN
                     #從分量計價中取得單價 
                     CALL axmt410_from_xmfg_get_xmff007(g_xmff_d[l_ac].xmffseq,
                                                        g_xmff_d[l_ac].xmff006)
                          RETURNING g_xmff_d[l_ac].xmff007

                     #按幣別對金額做取位 
                     CALL s_curr_round(g_site,g_xmfd_m.xmfd010,g_xmff_d[l_ac].xmff007,'1')
                          RETURNING g_xmff_d[l_ac].xmff007
                  END IF 
                  
                  IF NOT cl_null(g_xmff_d[l_ac].xmff004) THEN
                     CALL s_aooi250_take_decimals(g_xmff_d[l_ac].xmff004,g_xmff_d[l_ac].xmff006)
                          RETURNING l_success,g_xmff_d[l_ac].xmff006
                     
                     #重新計算含稅、未稅金額與稅額 
                     CALL axmt410_get_amount(g_xmfd_m.xmfddocno,g_xmff_d[l_ac].xmffseq,
                                             g_xmff_d[l_ac].xmff006,g_xmff_d[l_ac].xmff007,
                                             g_xmfd_m.xmfd010,g_xmfd_m.xmfd012)
                          RETURNING g_xmff_d[l_ac].xmff008,g_xmff_d[l_ac].xmff010,g_xmff_d[l_ac].xmff009
                     
                     #取得預估毛利率   
                     CALL axmt410_get_xmff012(g_xmff_d[l_ac].xmff006,
                                              g_xmff_d[l_ac].xmff008,
                                              g_xmff4_d[l_ac].xmff011)
                          RETURNING g_xmff4_d[l_ac].xmff012
                     #取得預估毛利金額  
                     CALL axmt410_get_xmff013(g_xmff_d[l_ac].xmff006,
                                              g_xmff_d[l_ac].xmff008,
                                              g_xmff4_d[l_ac].xmff011)
                          RETURNING g_xmff4_d[l_ac].xmff013
                     
                     #取得單位毛重淨重
                     LET l_imaa016 = 0
                     LET l_imaa017 = 0
                     
                     IF NOT cl_null(g_xmff_d[l_ac].xmff001) THEN
                        SELECT COALESCE(imaa016,0),COALESCE(imaa017,0) INTO l_imaa016,l_imaa017
                          FROM imaa_t
                         WHERE imaaent = g_enterprise
                           AND imaa001 = g_xmff_d[l_ac].xmff001
                           
                        LET g_xmff5_d[l_ac].xmff017 = g_xmff_d[l_ac].xmff006 * l_imaa017
                        LET g_xmff5_d[l_ac].xmff018 = g_xmff_d[l_ac].xmff006 * l_imaa016
                     END IF
                     #計算箱數&材積
                     IF NOT cl_null(g_xmff5_d[l_ac].xmff015) THEN
                        CALL axmt410_volume('1',g_xmff_d[l_ac].xmff006,g_xmff5_d[l_ac].xmff015,g_xmff5_d[l_ac].xmff016)
                        RETURNING g_xmff5_d[l_ac].xmff016,g_xmff5_d[l_ac].xmff019
                     END IF
                  END IF
               END IF
            END IF
            
            LET g_xmff_d_o.xmff006 = g_xmff_d[l_ac].xmff006
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff006
            #add-point:BEFORE FIELD xmff006 name="input.b.page1.xmff006"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmff006
            #add-point:ON CHANGE xmff006 name="input.g.page1.xmff006"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff007
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmff_d[l_ac].xmff007,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xmff007
            END IF 
 
 
 
            #add-point:AFTER FIELD xmff007 name="input.a.page1.xmff007"
            LET l_xmah004 = ''              #容差率   
            LET l_xmah005 = ''              #處理方式  
            LET l_xmah006 = ''              #允許單價為0(非樣品) 
            IF NOT cl_null(g_xmff_d[l_ac].xmff007) THEN 
               IF g_xmff_d[l_ac].xmff007 != g_xmff_d_o.xmff007 OR
                  g_xmff_d_o.xmff007 IS NULL THEN
                  SELECT xmah004,xmah005,xmah006 INTO l_xmah004,l_xmah005,l_xmah006
                    FROM xmah_t
                   WHERE xmahent = g_enterprise
                     AND xmah001 = g_xmfd_m.xmfd017
                  IF l_xmah006 <> 'Y' AND g_xmff_d[l_ac].xmff007 = 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'apm-00273'
                     LET g_errparam.extend = g_xmff_d[l_ac].xmff007
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                  
                     LET g_xmff_d[l_ac].xmff007 = g_xmff_d_o.xmff007
                     NEXT FIELD CURRENT
                  END IF

                  #按幣別對金額做取位 
                  CALL s_curr_round(g_site,g_xmfd_m.xmfd010,g_xmff_d[l_ac].xmff007,'1')
                       RETURNING g_xmff_d[l_ac].xmff007

               
                  #計算未稅金額 含稅金額 稅額 
                  CALL axmt410_get_amount(g_xmfd_m.xmfddocno,g_xmff_d[l_ac].xmffseq,
                                          g_xmff_d[l_ac].xmff006,g_xmff_d[l_ac].xmff007,
                                          g_xmfd_m.xmfd010,g_xmfd_m.xmfd012)
                       RETURNING g_xmff_d[l_ac].xmff008,g_xmff_d[l_ac].xmff010,g_xmff_d[l_ac].xmff009  
                  
                  #取得預估毛利率   
                  CALL axmt410_get_xmff012(g_xmff_d[l_ac].xmff006,
                                           g_xmff_d[l_ac].xmff008,
                                           g_xmff4_d[l_ac].xmff011)
                       RETURNING g_xmff4_d[l_ac].xmff012
                  #取得預估毛利金額  
                  CALL axmt410_get_xmff013(g_xmff_d[l_ac].xmff006,
                                           g_xmff_d[l_ac].xmff008,
                                           g_xmff4_d[l_ac].xmff011)
                       RETURNING g_xmff4_d[l_ac].xmff013
               END IF 
            END IF
            
            LET g_xmff_d_o.xmff007 = g_xmff_d[l_ac].xmff007
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff007
            #add-point:BEFORE FIELD xmff007 name="input.b.page1.xmff007"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmff007
            #add-point:ON CHANGE xmff007 name="input.g.page1.xmff007"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff008
            #add-point:BEFORE FIELD xmff008 name="input.b.page1.xmff008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff008
            
            #add-point:AFTER FIELD xmff008 name="input.a.page1.xmff008"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmff008
            #add-point:ON CHANGE xmff008 name="input.g.page1.xmff008"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff009
            #add-point:BEFORE FIELD xmff009 name="input.b.page1.xmff009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff009
            
            #add-point:AFTER FIELD xmff009 name="input.a.page1.xmff009"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmff009
            #add-point:ON CHANGE xmff009 name="input.g.page1.xmff009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff010
            #add-point:BEFORE FIELD xmff010 name="input.b.page1.xmff010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff010
            
            #add-point:AFTER FIELD xmff010 name="input.a.page1.xmff010"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmff010
            #add-point:ON CHANGE xmff010 name="input.g.page1.xmff010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmffsite
            #add-point:BEFORE FIELD xmffsite name="input.b.page1.xmffsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmffsite
            
            #add-point:AFTER FIELD xmffsite name="input.a.page1.xmffsite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmffsite
            #add-point:ON CHANGE xmffsite name="input.g.page1.xmffsite"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.xmffseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmffseq
            #add-point:ON ACTION controlp INFIELD xmffseq name="input.c.page1.xmffseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmff001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff001
            #add-point:ON ACTION controlp INFIELD xmff001 name="input.c.page1.xmff001"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmff_d[l_ac].xmff001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #
            LET g_qryparam.where = " 1=1 "
            CALL s_control_get_item_sql('2',g_site,g_user,g_dept,g_xmfd_m.xmfddocno)
                 RETURNING l_success,l_where
            IF l_success THEN
               LET g_qryparam.where = g_qryparam.where ," AND ",l_where
            END IF
            
            CALL q_imaf001_15()                                #呼叫開窗

            LET g_xmff_d[l_ac].xmff001 = g_qryparam.return1              

            DISPLAY g_xmff_d[l_ac].xmff001 TO xmff001              #
            CALL s_desc_get_item_desc(g_xmff_d[l_ac].xmff001)
                 RETURNING g_xmff_d[l_ac].xmff001_desc,
                           g_xmff_d[l_ac].xmff001_desc_desc
            NEXT FIELD xmff001                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.xmff002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff002
            #add-point:ON ACTION controlp INFIELD xmff002 name="input.c.page1.xmff002"
            #160804-00063#1--(S)
            #IF axmt410_imaa005_exists() THEN
            #   #IF l_cmd = 'u' OR (l_cmd = 'a' AND NOT cl_null(g_xmff_d[l_ac].xmff002)) THEN      #160314-00009#13  mark 
            #      CALL s_feature_single(g_xmff_d[l_ac].xmff001,g_xmff_d[l_ac].xmff002,g_site,g_xmfd_m.xmfddocno)
            #           RETURNING l_success,g_xmff_d[l_ac].xmff002
            #  # END IF            #160314-00009#13  mark
            #END IF
            #160804-00063#1--(E)
            #160804-00063#1--(S)
            #取得料件產品特徵
            IF axmt410_imaa005_exists() THEN            
               IF l_cmd = 'a' THEN            
                  CALL g_inam.clear()            
                  CALL s_feature(l_cmd,g_xmff_d[l_ac].xmff001,'','',g_site,g_xmfd_m.xmfddocno) RETURNING l_success,g_inam
                  LET g_xmff_d[l_ac].xmff002 = g_inam[1].inam002  #產品特徵
                  LET g_xmff_d[l_ac].xmff006 = g_inam[1].inam004  #需求數量
                  DISPLAY BY NAME g_xmff_d[l_ac].xmff002,g_xmff_d[l_ac].xmff006
               END IF
               IF l_cmd = 'u' THEN
                  CALL s_feature_single(g_xmff_d[l_ac].xmff001,g_xmff_d[l_ac].xmff002,g_site,g_xmfd_m.xmfddocno)
                     RETURNING l_success,g_xmff_d[l_ac].xmff002
                  DISPLAY BY NAME g_xmff_d[l_ac].xmff002
               END IF
            END IF 
            #160804-00063#1--(E)
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmff002_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff002_desc
            #add-point:ON ACTION controlp INFIELD xmff002_desc name="input.c.page1.xmff002_desc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmff003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff003
            #add-point:ON ACTION controlp INFIELD xmff003 name="input.c.page1.xmff003"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmff_d[l_ac].xmff003
            IF cl_null(g_xmff_d[l_ac].xmff001) OR cl_null(g_xmff_d[l_ac].xmff002) THEN
               LET g_qryparam.arg1 = g_xmfd_m.xmfd003
               CALL q_pmao004_2()
            ELSE
               LET g_qryparam.arg1 = g_xmfd_m.xmfd003
               LET g_qryparam.arg2 = g_xmff_d[l_ac].xmff001
               LET g_qryparam.arg3 = g_xmff_d[l_ac].xmff002
               CALL q_pmao004_1()
            END IF
            LET g_xmff_d[l_ac].xmff003 = g_qryparam.return1
            DISPLAY g_xmff_d[l_ac].xmff003 TO xmff003
            NEXT FIELD xmff003
            #END add-point
 
 
         #Ctrlp:input.c.page1.l_pmao009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_pmao009
            #add-point:ON ACTION controlp INFIELD l_pmao009 name="input.c.page1.l_pmao009"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.l_pmao010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_pmao010
            #add-point:ON ACTION controlp INFIELD l_pmao010 name="input.c.page1.l_pmao010"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmff004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff004
            #add-point:ON ACTION controlp INFIELD xmff004 name="input.c.page1.xmff004"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmff_d[l_ac].xmff004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_xmff_d[l_ac].xmff001

            CALL q_imao002()

            LET g_xmff_d[l_ac].xmff004 = g_qryparam.return1              

            DISPLAY g_xmff_d[l_ac].xmff004 TO xmff004              #
            CALL s_desc_get_unit_desc(g_xmff_d[l_ac].xmff004)
                 RETURNING g_xmff_d[l_ac].xmff004_desc
            NEXT FIELD xmff004                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.xmff005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff005
            #add-point:ON ACTION controlp INFIELD xmff005 name="input.c.page1.xmff005"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmff006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff006
            #add-point:ON ACTION controlp INFIELD xmff006 name="input.c.page1.xmff006"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmff007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff007
            #add-point:ON ACTION controlp INFIELD xmff007 name="input.c.page1.xmff007"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmff008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff008
            #add-point:ON ACTION controlp INFIELD xmff008 name="input.c.page1.xmff008"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmff009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff009
            #add-point:ON ACTION controlp INFIELD xmff009 name="input.c.page1.xmff009"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmff010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff010
            #add-point:ON ACTION controlp INFIELD xmff010 name="input.c.page1.xmff010"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmffsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmffsite
            #add-point:ON ACTION controlp INFIELD xmffsite name="input.c.page1.xmffsite"
            
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_xmff_d[l_ac].* = g_xmff_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE axmt410_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_xmff_d[l_ac].xmffseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_xmff_d[l_ac].* = g_xmff_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               
               #如果產品特徵被清空了 那還是要給一個空白 
               IF cl_null(g_xmff_d[l_ac].xmff002) THEN
                  LET g_xmff_d[l_ac].xmff002 = ' '
               END IF 
               IF g_pmao_flag = 'Y' THEN
                  IF NOT s_axmt500_ins_pmao(g_xmfd_m.xmfddocno,g_xmfd_m.xmfd003,g_xmff_d[l_ac].xmff001,
                                               g_xmff_d[l_ac].xmff002,g_xmff_d[l_ac].xmff003,
                                               g_xmff_d[l_ac].l_pmao009,g_xmff_d[l_ac].l_pmao010) THEN
                      LET g_xmff_d[l_ac].xmff003 = ''
                      LET g_xmff_d[l_ac].l_pmao009 = ''
                      LET g_xmff_d[l_ac].l_pmao010 = ''
                      DISPLAY BY NAME g_xmff_d[l_ac].xmff003,g_xmff_d[l_ac].l_pmao009,g_xmff_d[l_ac].l_pmao010
                  END IF
               END IF
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL axmt410_xmff_t_mask_restore('restore_mask_o')
      
               UPDATE xmff_t SET (xmffdocno,xmffseq,xmff001,xmff002,xmff003,xmff004,xmff005,xmff006, 
                   xmff007,xmff008,xmff009,xmff010,xmffsite,xmff011,xmff012,xmff013,xmff015,xmff016, 
                   xmff017,xmff018,xmff019) = (g_xmfd_m.xmfddocno,g_xmff_d[l_ac].xmffseq,g_xmff_d[l_ac].xmff001, 
                   g_xmff_d[l_ac].xmff002,g_xmff_d[l_ac].xmff003,g_xmff_d[l_ac].xmff004,g_xmff_d[l_ac].xmff005, 
                   g_xmff_d[l_ac].xmff006,g_xmff_d[l_ac].xmff007,g_xmff_d[l_ac].xmff008,g_xmff_d[l_ac].xmff009, 
                   g_xmff_d[l_ac].xmff010,g_xmff_d[l_ac].xmffsite,g_xmff4_d[l_ac].xmff011,g_xmff4_d[l_ac].xmff012, 
                   g_xmff4_d[l_ac].xmff013,g_xmff5_d[l_ac].xmff015,g_xmff5_d[l_ac].xmff016,g_xmff5_d[l_ac].xmff017, 
                   g_xmff5_d[l_ac].xmff018,g_xmff5_d[l_ac].xmff019)
                WHERE xmffent = g_enterprise AND xmffdocno = g_xmfd_m.xmfddocno 
 
                  AND xmffseq = g_xmff_d_t.xmffseq #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_xmff_d[l_ac].* = g_xmff_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmff_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     LET g_xmff_d[l_ac].* = g_xmff_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmff_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmfd_m.xmfddocno
               LET gs_keys_bak[1] = g_xmfddocno_t
               LET gs_keys[2] = g_xmff_d[g_detail_idx].xmffseq
               LET gs_keys_bak[2] = g_xmff_d_t.xmffseq
               CALL axmt410_update_b('xmff_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL axmt410_xmff_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_xmff_d[g_detail_idx].xmffseq = g_xmff_d_t.xmffseq 
 
                  ) THEN
                  LET gs_keys[01] = g_xmfd_m.xmfddocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_xmff_d_t.xmffseq
 
                  CALL axmt410_key_update_b(gs_keys,'xmff_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_xmfd_m),util.JSON.stringify(g_xmff_d_t)
               LET g_log2 = util.JSON.stringify(g_xmfd_m),util.JSON.stringify(g_xmff_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            #要回算單頭的金額 
            CALL axmt410_amount()
            
            CALL axmt410_del_xmfg('N')
            IF NOT cl_null(g_errno) THEN 
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmfg_t" 
               LET g_errparam.code   = g_errno
               LET g_errparam.popup  = TRUE 
               CALL cl_err()               
               
               CALL s_transaction_end('N','0') 
               NEXT FIELD CURRENT 
            END IF 
            
            #end add-point
            CALL axmt410_unlock_b("xmff_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
            
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_xmff_d[li_reproduce_target].* = g_xmff_d[li_reproduce].*
               LET g_xmff4_d[li_reproduce_target].* = g_xmff4_d[li_reproduce].*
               LET g_xmff5_d[li_reproduce_target].* = g_xmff5_d[li_reproduce].*
 
               LET g_xmff_d[li_reproduce_target].xmffseq = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_xmff_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_xmff_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_xmff3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_3)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body3.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xmff3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axmt410_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_xmff3_d.getLength()
            #add-point:資料輸入前 name="input.body3.before_input"
            
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmff3_d[l_ac].* TO NULL 
            INITIALIZE g_xmff3_d_t.* TO NULL 
            INITIALIZE g_xmff3_d_o.* TO NULL 
            #公用欄位給值(單身3)
            
            #自定義預設值(單身3)
            
            #add-point:modify段before備份 name="input.body3.insert.before_bak"
            LET g_xmff3_d[l_ac].xmfh002 = g_xmfd_m.xmfd010
            CALL axmt410_get_xmfd011(g_xmff3_d[l_ac].xmfh002) RETURNING g_xmff3_d[l_ac].xmfh003
            #end add-point
            LET g_xmff3_d_t.* = g_xmff3_d[l_ac].*     #新輸入資料
            LET g_xmff3_d_o.* = g_xmff3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axmt410_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body3.insert.after_set_entry_b"
            
            #end add-point
            CALL axmt410_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmff3_d[li_reproduce_target].* = g_xmff3_d[li_reproduce].*
 
               LET g_xmff3_d[li_reproduce_target].xmfhseq = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body3.before_insert"
            LET g_xmff3_d[l_ac].xmfhsite = g_site
            
            SELECT MAX(xmfhseq) + 1 INTO g_xmff3_d[l_ac].xmfhseq
              FROM xmfh_t
             WHERE xmfhent = g_enterprise
               AND xmfhdocno = g_xmfd_m.xmfddocno
            IF cl_null(g_xmff3_d[l_ac].xmfhseq) OR g_xmff3_d[l_ac].xmfhseq = 0 THEN
               LET g_xmff3_d[l_ac].xmfhseq = 1
            END IF
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body3.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[3] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 3
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN axmt410_cl USING g_enterprise,g_xmfd_m.xmfddocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axmt410_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE axmt410_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_xmff3_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xmff3_d[l_ac].xmfhseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_xmff3_d_t.* = g_xmff3_d[l_ac].*  #BACKUP
               LET g_xmff3_d_o.* = g_xmff3_d[l_ac].*  #BACKUP
               CALL axmt410_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body3.after_set_entry_b"
               
               #end add-point  
               CALL axmt410_set_no_entry_b(l_cmd)
               IF NOT axmt410_lock_b("xmfh_t","'3'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axmt410_bcl3 INTO g_xmff3_d[l_ac].xmfhseq,g_xmff3_d[l_ac].xmfh001,g_xmff3_d[l_ac].xmfh002, 
                      g_xmff3_d[l_ac].xmfh003,g_xmff3_d[l_ac].xmfh004,g_xmff3_d[l_ac].xmfh005,g_xmff3_d[l_ac].xmfh006, 
                      g_xmff3_d[l_ac].xmfhsite
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_xmff3_d_mask_o[l_ac].* =  g_xmff3_d[l_ac].*
                  CALL axmt410_xmfh_t_mask()
                  LET g_xmff3_d_mask_n[l_ac].* =  g_xmff3_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL axmt410_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body3.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body3.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body3.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身3刪除前 name="input.body3.b_delete"
               
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_xmfd_m.xmfddocno
               LET gs_keys[gs_keys.getLength()+1] = g_xmff3_d_t.xmfhseq
            
               #刪除同層單身
               IF NOT axmt410_delete_b('xmfh_t',gs_keys,"'3'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt410_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT axmt410_key_delete_b(gs_keys,'xmfh_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt410_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身3刪除中 name="input.body3.m_delete"
               
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE axmt410_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身3刪除後 name="input.body3.a_delete"
                  CALL axmt410_amount()
               #end add-point
               LET l_count = g_xmff_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body3.after_delete"
               
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_xmff3_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身3新增前 name="input.body3.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM xmfh_t 
             WHERE xmfhent = g_enterprise AND xmfhdocno = g_xmfd_m.xmfddocno
               AND xmfhseq = g_xmff3_d[l_ac].xmfhseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身3新增前 name="input.body3.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmfd_m.xmfddocno
               LET gs_keys[2] = g_xmff3_d[g_detail_idx].xmfhseq
               CALL axmt410_insert_b('xmfh_t',gs_keys,"'3'")
                           
               #add-point:單身新增後3 name="input.body3.a_insert"
               CALL axmt410_amount()
               #end add-point
            ELSE    
               INITIALIZE g_xmff_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmfh_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axmt410_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body3.after_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_xmff3_d[l_ac].* = g_xmff3_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE axmt410_bcl3
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_xmff3_d[l_ac].* = g_xmff3_d_t.*
            ELSE
               #add-point:單身page3修改前 name="input.body3.b_update"
 
               #end add-point
               
               #寫入修改者/修改日期資訊(單身3)
               
               
               #將遮罩欄位還原
               CALL axmt410_xmfh_t_mask_restore('restore_mask_o')
                              
               UPDATE xmfh_t SET (xmfhdocno,xmfhseq,xmfh001,xmfh002,xmfh003,xmfh004,xmfh005,xmfh006, 
                   xmfhsite) = (g_xmfd_m.xmfddocno,g_xmff3_d[l_ac].xmfhseq,g_xmff3_d[l_ac].xmfh001,g_xmff3_d[l_ac].xmfh002, 
                   g_xmff3_d[l_ac].xmfh003,g_xmff3_d[l_ac].xmfh004,g_xmff3_d[l_ac].xmfh005,g_xmff3_d[l_ac].xmfh006, 
                   g_xmff3_d[l_ac].xmfhsite) #自訂欄位頁簽
                WHERE xmfhent = g_enterprise AND xmfhdocno = g_xmfd_m.xmfddocno
                  AND xmfhseq = g_xmff3_d_t.xmfhseq #項次 
                  
               #add-point:單身page3修改中 name="input.body3.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_xmff3_d[l_ac].* = g_xmff3_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmfh_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     LET g_xmff3_d[l_ac].* = g_xmff3_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmfh_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmfd_m.xmfddocno
               LET gs_keys_bak[1] = g_xmfddocno_t
               LET gs_keys[2] = g_xmff3_d[g_detail_idx].xmfhseq
               LET gs_keys_bak[2] = g_xmff3_d_t.xmfhseq
               CALL axmt410_update_b('xmfh_t',gs_keys,gs_keys_bak,"'3'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL axmt410_xmfh_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_xmff3_d[g_detail_idx].xmfhseq = g_xmff3_d_t.xmfhseq 
                  ) THEN
                  LET gs_keys[01] = g_xmfd_m.xmfddocno
                  LET gs_keys[gs_keys.getLength()+1] = g_xmff3_d_t.xmfhseq
                  CALL axmt410_key_update_b(gs_keys,'xmfh_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_xmfd_m),util.JSON.stringify(g_xmff3_d_t)
               LET g_log2 = util.JSON.stringify(g_xmfd_m),util.JSON.stringify(g_xmff3_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page3修改後 name="input.body3.a_update"
               CALL axmt410_amount()
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfhseq
            #add-point:BEFORE FIELD xmfhseq name="input.b.page3.xmfhseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfhseq
            
            #add-point:AFTER FIELD xmfhseq name="input.a.page3.xmfhseq"
            #應用 a05 樣板自動產生(Version:1)
            #確認資料無重複
            IF  g_xmfd_m.xmfddocno IS NOT NULL AND g_xmff3_d[g_detail_idx].xmfhseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmfd_m.xmfddocno != g_xmfddocno_t OR g_xmff3_d[g_detail_idx].xmfhseq != g_xmff3_d_t.xmfhseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmfh_t WHERE "||"xmfhent = '" ||g_enterprise|| "' AND "||"xmfhdocno = '"||g_xmfd_m.xmfddocno ||"' AND "|| "xmfhseq = '"||g_xmff3_d[g_detail_idx].xmfhseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfhseq
            #add-point:ON CHANGE xmfhseq name="input.g.page3.xmfhseq"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfh001
            
            #add-point:AFTER FIELD xmfh001 name="input.a.page3.xmfh001"
            IF NOT cl_null(g_xmff3_d[l_ac].xmfh001) THEN 
#應用 a19 樣板自動產生(Version:1)
               #校驗代值
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmff3_d[l_ac].xmfh001                  
               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_imaf001_16") THEN
                  LET g_xmff3_d[l_ac].xmfh001 = g_xmff3_d_o.xmfh001
                  CALL s_desc_get_item_desc(g_xmff3_d[l_ac].xmfh001)
                       RETURNING g_xmff3_d[l_ac].xmfh001_desc,g_xmff3_d[l_ac].xmfh001_desc_desc
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            CALL s_desc_get_item_desc(g_xmff3_d[l_ac].xmfh001)
                       RETURNING g_xmff3_d[l_ac].xmfh001_desc,g_xmff3_d[l_ac].xmfh001_desc_desc
            
            
            LET g_xmff3_d_o.xmfh001 = g_xmff3_d[l_ac].xmfh001


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfh001
            #add-point:BEFORE FIELD xmfh001 name="input.b.page3.xmfh001"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfh001
            #add-point:ON CHANGE xmfh001 name="input.g.page3.xmfh001"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfh002
            
            #add-point:AFTER FIELD xmfh002 name="input.a.page3.xmfh002"
            IF NOT cl_null(g_xmff3_d[l_ac].xmfh002) THEN 
#應用 a19 樣板自動產生(Version:1)
               #校驗代值
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_site
               LET g_chkparam.arg2 = g_xmff3_d[l_ac].xmfh002
               #160318-00025#35  2016/05/18  by pengxin  add(S)
               LET g_errshow = TRUE #是否開窗 
               LET g_chkparam.err_str[1] = "aoo-00176:sub-01302|aooi150|",cl_get_progname("aooi150",g_lang,"2"),"|:EXEPROGaooi150"
               #160318-00025#35  2016/05/18  by pengxin  add(E)
               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_ooaj002") THEN
                  LET g_xmff3_d[l_ac].xmfh002 = g_xmff3_d_o.xmfh002
                  CALL s_desc_get_currency_desc(g_xmff3_d[l_ac].xmfh002)
                       RETURNING g_xmff3_d[l_ac].xmfh002_desc
                  DISPLAY BY NAME g_xmff3_d[l_ac].xmfh002_desc
                  NEXT FIELD CURRENT
               END IF
               
               #取匯率  
               CALL axmt410_get_xmfd011(g_xmff3_d[l_ac].xmfh002) RETURNING g_xmff3_d[l_ac].xmfh003
               DISPLAY BY NAME g_xmff3_d[l_ac].xmfh003
                  
            END IF 
         
            CALL s_desc_get_currency_desc(g_xmff3_d[l_ac].xmfh002)
                 RETURNING g_xmff3_d[l_ac].xmfh002_desc
            DISPLAY BY NAME g_xmff3_d[l_ac].xmfh002_desc
            LET g_xmff3_d_o.xmfh002 = g_xmff3_d[l_ac].xmfh002
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfh002
            #add-point:BEFORE FIELD xmfh002 name="input.b.page3.xmfh002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfh002
            #add-point:ON CHANGE xmfh002 name="input.g.page3.xmfh002"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfh003
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmff3_d[l_ac].xmfh003,"0","0","","","azz-00079",1) THEN
               NEXT FIELD xmfh003
            END IF 
 
 
 
            #add-point:AFTER FIELD xmfh003 name="input.a.page3.xmfh003"
            IF NOT cl_null(g_xmff3_d[l_ac].xmfh003) THEN 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfh003
            #add-point:BEFORE FIELD xmfh003 name="input.b.page3.xmfh003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfh003
            #add-point:ON CHANGE xmfh003 name="input.g.page3.xmfh003"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfh004
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmff3_d[l_ac].xmfh004,"0","0","","","azz-00079",1) THEN
               NEXT FIELD xmfh004
            END IF 
 
 
 
            #add-point:AFTER FIELD xmfh004 name="input.a.page3.xmfh004"
            IF NOT cl_null(g_xmff3_d[l_ac].xmfh004) THEN 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfh004
            #add-point:BEFORE FIELD xmfh004 name="input.b.page3.xmfh004"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfh004
            #add-point:ON CHANGE xmfh004 name="input.g.page3.xmfh004"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfh005
            
            #add-point:AFTER FIELD xmfh005 name="input.a.page3.xmfh005"
            IF NOT cl_null(g_xmff3_d[l_ac].xmfh005) THEN 
#應用 a19 樣板自動產生(Version:1)
               #校驗代值
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmff3_d[l_ac].xmfh005
                  
               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_pmaa001_1") THEN
                     LET g_xmff3_d[l_ac].xmfh005 = g_xmff3_d_o.xmfh005
                     CALL s_desc_get_trading_partner_full_desc(g_xmff3_d[l_ac].xmfh005)
                          RETURNING g_xmff3_d[l_ac].xmfh005_desc
                     DISPLAY BY NAME g_xmff3_d[l_ac].xmfh005_desc
                     NEXT FIELD CURRENT
                  END IF
            

            END IF 
            CALL s_desc_get_trading_partner_full_desc(g_xmff3_d[l_ac].xmfh005)
                 RETURNING g_xmff3_d[l_ac].xmfh005_desc
            DISPLAY BY NAME g_xmff3_d[l_ac].xmfh005_desc 
            
            LET g_xmff3_d_o.xmfh005 = g_xmff3_d[l_ac].xmfh005
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfh005
            #add-point:BEFORE FIELD xmfh005 name="input.b.page3.xmfh005"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfh005
            #add-point:ON CHANGE xmfh005 name="input.g.page3.xmfh005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfh006
            #add-point:BEFORE FIELD xmfh006 name="input.b.page3.xmfh006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfh006
            
            #add-point:AFTER FIELD xmfh006 name="input.a.page3.xmfh006"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfh006
            #add-point:ON CHANGE xmfh006 name="input.g.page3.xmfh006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmfhsite
            #add-point:BEFORE FIELD xmfhsite name="input.b.page3.xmfhsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmfhsite
            
            #add-point:AFTER FIELD xmfhsite name="input.a.page3.xmfhsite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmfhsite
            #add-point:ON CHANGE xmfhsite name="input.g.page3.xmfhsite"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page3.xmfhseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfhseq
            #add-point:ON ACTION controlp INFIELD xmfhseq name="input.c.page3.xmfhseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.xmfh001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfh001
            #add-point:ON ACTION controlp INFIELD xmfh001 name="input.c.page3.xmfh001"
            #應用 a07 樣板自動產生(Version:1)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmff3_d[l_ac].xmfh001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s

            
            CALL q_imaf001_17()                                #呼叫開窗

            LET g_xmff3_d[l_ac].xmfh001 = g_qryparam.return1              
            DISPLAY g_xmff3_d[l_ac].xmfh001 TO xmfh001              #
            CALL s_desc_get_item_desc(g_xmff3_d[l_ac].xmfh001)
               RETURNING g_xmff3_d[l_ac].xmfh001_desc,g_xmff3_d[l_ac].xmfh001_desc_desc
            DISPLAY BY NAME g_xmff3_d[l_ac].xmfh001_desc,g_xmff3_d[l_ac].xmfh001_desc_desc

            NEXT FIELD xmfh001                          #返回原欄位
         

            #END add-point
 
 
         #Ctrlp:input.c.page3.xmfh002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfh002
            #add-point:ON ACTION controlp INFIELD xmfh002 name="input.c.page3.xmfh002"
            #應用 a07 樣板自動產生(Version:1)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmff3_d[l_ac].xmfh002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_site

            
            CALL q_ooaj002_1()                                #呼叫開窗

            LET g_xmff3_d[l_ac].xmfh002 = g_qryparam.return1              
            DISPLAY g_xmff3_d[l_ac].xmfh002 TO xmfh002              #
            CALL s_desc_get_currency_desc(g_xmff3_d[l_ac].xmfh002)
                 RETURNING g_xmff3_d[l_ac].xmfh002_desc
            DISPLAY BY NAME g_xmff3_d[l_ac].xmfh002_desc
            
            NEXT FIELD xmfh002                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page3.xmfh003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfh003
            #add-point:ON ACTION controlp INFIELD xmfh003 name="input.c.page3.xmfh003"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.xmfh004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfh004
            #add-point:ON ACTION controlp INFIELD xmfh004 name="input.c.page3.xmfh004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.xmfh005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfh005
            #add-point:ON ACTION controlp INFIELD xmfh005 name="input.c.page3.xmfh005"
            #應用 a07 樣板自動產生(Version:1)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmff3_d[l_ac].xmfh005             #給予default值
            #給予arg
                 
            CALL q_pmaa001_3()                               #呼叫開窗
            LET g_xmff3_d[l_ac].xmfh005 = g_qryparam.return1              
            DISPLAY g_xmff3_d[l_ac].xmfh005 TO xmfh005              #
            CALL s_desc_get_trading_partner_full_desc(g_xmff3_d[l_ac].xmfh005)
                 RETURNING g_xmff3_d[l_ac].xmfh005_desc
            DISPLAY BY NAME g_xmff3_d[l_ac].xmfh005_desc

            NEXT FIELD xmfh005                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page3.xmfh006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfh006
            #add-point:ON ACTION controlp INFIELD xmfh006 name="input.c.page3.xmfh006"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.xmfhsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmfhsite
            #add-point:ON ACTION controlp INFIELD xmfhsite name="input.c.page3.xmfhsite"
            
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page3 after_row name="input.body3.after_row"
 
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_xmff3_d[l_ac].* = g_xmff3_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE axmt410_bcl3
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL axmt410_unlock_b("xmfh_t","'3'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page3 after_row2 name="input.body3.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body3.after_input"
            
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_xmff3_d[li_reproduce_target].* = g_xmff3_d[li_reproduce].*
 
               LET g_xmff3_d[li_reproduce_target].xmfhseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_xmff3_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_xmff3_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_xmff5_d FROM s_detail5.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = FALSE, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = FALSE,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_5)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body5.before_input2"
            
            #end add-point
            
            CALL axmt410_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue(""))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_xmff5_d.getLength()
            #add-point:資料輸入前 name="input.body5.before_input"
            
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmff5_d[l_ac].* TO NULL 
            INITIALIZE g_xmff5_d_t.* TO NULL 
            INITIALIZE g_xmff5_d_o.* TO NULL 
            #公用欄位給值(單身5)
            
            #自定義預設值(單身5)
            
            #add-point:modify段before備份 name="input.body5.insert.before_bak"
            
            #end add-point
            LET g_xmff5_d_t.* = g_xmff5_d[l_ac].*     #新輸入資料
            LET g_xmff5_d_o.* = g_xmff5_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axmt410_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body5.insert.after_set_entry_b"
            
            #end add-point
            CALL axmt410_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmff_d[li_reproduce_target].* = g_xmff_d[li_reproduce].*
               LET g_xmff4_d[li_reproduce_target].* = g_xmff4_d[li_reproduce].*
               LET g_xmff5_d[li_reproduce_target].* = g_xmff5_d[li_reproduce].*
 
               LET g_xmff5_d[li_reproduce_target].xmffseq = NULL
            END IF
            
 
 
 
            #add-point:modify段before insert name="input.body5.before_insert"
            
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body5.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[5] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 5
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN axmt410_cl USING g_enterprise,g_xmfd_m.xmfddocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axmt410_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE axmt410_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_xmff5_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xmff5_d[l_ac].xmffseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_xmff5_d_t.* = g_xmff5_d[l_ac].*  #BACKUP
               LET g_xmff5_d_o.* = g_xmff5_d[l_ac].*  #BACKUP
               CALL axmt410_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body5.after_set_entry_b"
               
               #end add-point  
               CALL axmt410_set_no_entry_b(l_cmd)
               IF NOT axmt410_lock_b("xmff_t","'5'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axmt410_bcl INTO g_xmff_d[l_ac].xmffseq,g_xmff_d[l_ac].xmff001,g_xmff_d[l_ac].xmff002, 
                      g_xmff_d[l_ac].xmff003,g_xmff_d[l_ac].xmff004,g_xmff_d[l_ac].xmff005,g_xmff_d[l_ac].xmff006, 
                      g_xmff_d[l_ac].xmff007,g_xmff_d[l_ac].xmff008,g_xmff_d[l_ac].xmff009,g_xmff_d[l_ac].xmff010, 
                      g_xmff_d[l_ac].xmffsite,g_xmff4_d[l_ac].xmffseq,g_xmff4_d[l_ac].xmff011,g_xmff4_d[l_ac].xmff012, 
                      g_xmff4_d[l_ac].xmff013,g_xmff5_d[l_ac].xmffseq,g_xmff5_d[l_ac].xmff015,g_xmff5_d[l_ac].xmff016, 
                      g_xmff5_d[l_ac].xmff017,g_xmff5_d[l_ac].xmff018,g_xmff5_d[l_ac].xmff019
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_xmff5_d_mask_o[l_ac].* =  g_xmff5_d[l_ac].*
                  CALL axmt410_xmff_t_mask()
                  LET g_xmff5_d_mask_n[l_ac].* =  g_xmff5_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL axmt410_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body5.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
 
 
            #其他table進行lock
            
 
 
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body5.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body5.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身5刪除前 name="input.body5.b_delete"
               
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_xmfd_m.xmfddocno
               LET gs_keys[gs_keys.getLength()+1] = g_xmff5_d_t.xmffseq
            
               #刪除同層單身
               IF NOT axmt410_delete_b('xmff_t',gs_keys,"'5'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt410_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT axmt410_key_delete_b(gs_keys,'xmff_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt410_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
 
 
               
               #add-point:單身5刪除中 name="input.body5.m_delete"
               
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE axmt410_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身5刪除後 name="input.body5.a_delete"
               
               #end add-point
               LET l_count = g_xmff_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body5.after_delete"
               
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_xmff5_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身5新增前 name="input.body5.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM xmff_t 
             WHERE xmffent = g_enterprise AND xmffdocno = g_xmfd_m.xmfddocno
               AND xmffseq = g_xmff5_d[l_ac].xmffseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身5新增前 name="input.body5.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmfd_m.xmfddocno
               LET gs_keys[2] = g_xmff5_d[g_detail_idx].xmffseq
               CALL axmt410_insert_b('xmff_t',gs_keys,"'5'")
                           
               #add-point:單身新增後5 name="input.body5.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_xmff_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmff_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axmt410_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body5.after_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_xmff5_d[l_ac].* = g_xmff5_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE axmt410_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_xmff5_d[l_ac].* = g_xmff5_d_t.*
            ELSE
               #add-point:單身page5修改前 name="input.body5.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身5)
               
               
               #將遮罩欄位還原
               CALL axmt410_xmff_t_mask_restore('restore_mask_o')
                              
               UPDATE xmff_t SET (xmffdocno,xmffseq,xmff001,xmff002,xmff003,xmff004,xmff005,xmff006, 
                   xmff007,xmff008,xmff009,xmff010,xmffsite,xmff011,xmff012,xmff013,xmff015,xmff016, 
                   xmff017,xmff018,xmff019) = (g_xmfd_m.xmfddocno,g_xmff_d[l_ac].xmffseq,g_xmff_d[l_ac].xmff001, 
                   g_xmff_d[l_ac].xmff002,g_xmff_d[l_ac].xmff003,g_xmff_d[l_ac].xmff004,g_xmff_d[l_ac].xmff005, 
                   g_xmff_d[l_ac].xmff006,g_xmff_d[l_ac].xmff007,g_xmff_d[l_ac].xmff008,g_xmff_d[l_ac].xmff009, 
                   g_xmff_d[l_ac].xmff010,g_xmff_d[l_ac].xmffsite,g_xmff4_d[l_ac].xmff011,g_xmff4_d[l_ac].xmff012, 
                   g_xmff4_d[l_ac].xmff013,g_xmff5_d[l_ac].xmff015,g_xmff5_d[l_ac].xmff016,g_xmff5_d[l_ac].xmff017, 
                   g_xmff5_d[l_ac].xmff018,g_xmff5_d[l_ac].xmff019) #自訂欄位頁簽
                WHERE xmffent = g_enterprise AND xmffdocno = g_xmfd_m.xmfddocno
                  AND xmffseq = g_xmff5_d_t.xmffseq #項次 
                  
               #add-point:單身page5修改中 name="input.body5.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_xmff5_d[l_ac].* = g_xmff5_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmff_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     LET g_xmff5_d[l_ac].* = g_xmff5_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmff_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmfd_m.xmfddocno
               LET gs_keys_bak[1] = g_xmfddocno_t
               LET gs_keys[2] = g_xmff5_d[g_detail_idx].xmffseq
               LET gs_keys_bak[2] = g_xmff5_d_t.xmffseq
               CALL axmt410_update_b('xmff_t',gs_keys,gs_keys_bak,"'5'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL axmt410_xmff_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_xmff5_d[g_detail_idx].xmffseq = g_xmff5_d_t.xmffseq 
                  ) THEN
                  LET gs_keys[01] = g_xmfd_m.xmfddocno
                  LET gs_keys[gs_keys.getLength()+1] = g_xmff5_d_t.xmffseq
                  CALL axmt410_key_update_b(gs_keys,'xmff_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_xmfd_m),util.JSON.stringify(g_xmff5_d_t)
               LET g_log2 = util.JSON.stringify(g_xmfd_m),util.JSON.stringify(g_xmff5_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page5修改後 name="input.body5.a_update"
               
               #end add-point
            END IF
         
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff015
            
            #add-point:AFTER FIELD xmff015 name="input.a.page5.xmff015"
            LET g_xmff5_d[l_ac].xmff015_desc = ' ' 
            CALL axmt410_xmff015_ref(g_xmff5_d[l_ac].xmff015)
                 RETURNING g_xmff5_d[l_ac].xmff015_desc
            DISPLAY BY NAME g_xmff5_d[l_ac].xmff015_desc
            IF NOT cl_null(g_xmff5_d[l_ac].xmff015) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmff5_d[l_ac].xmff015 != g_xmff5_d_o.xmff015 OR
                                                   g_xmff5_d_o.xmff015 IS NULL)) THEN                   
                  #校驗代值
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmff5_d[l_ac].xmff015
                  
                     
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_xmam001") THEN
                     IF NOT cl_null(g_xmff_d[l_ac].xmff006) THEN
                        CALL axmt410_volume('1',g_xmff_d[l_ac].xmff006,g_xmff5_d[l_ac].xmff015,g_xmff5_d[l_ac].xmff016)
                        RETURNING g_xmff5_d[l_ac].xmff016,g_xmff5_d[l_ac].xmff019
                     END IF
                     
                  ELSE
                     LET g_xmff5_d[l_ac].xmff016 = 0
                     LET g_xmff5_d[l_ac].xmff019 = 0
                     LET g_xmff5_d[l_ac].xmff015 = g_xmff5_d_o.xmff015
                     CALL axmt410_xmff015_ref(g_xmff5_d[l_ac].xmff015)
                        RETURNING g_xmff5_d[l_ac].xmff015_desc
                     DISPLAY BY NAME g_xmff5_d[l_ac].xmff015_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 
            
            CALL axmt410_xmff015_ref(g_xmff5_d[l_ac].xmff015)
                 RETURNING g_xmff5_d[l_ac].xmff015_desc
            DISPLAY BY NAME g_xmff5_d[l_ac].xmff015_desc
            
            LET g_xmff5_d_o.xmff015 = g_xmff5_d[l_ac].xmff015


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff015
            #add-point:BEFORE FIELD xmff015 name="input.b.page5.xmff015"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmff015
            #add-point:ON CHANGE xmff015 name="input.g.page5.xmff015"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff016
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmff5_d[l_ac].xmff016,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD xmff016
            END IF 
 
 
 
            #add-point:AFTER FIELD xmff016 name="input.a.page5.xmff016"
            IF NOT cl_null(g_xmff5_d[l_ac].xmff016) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmff5_d[l_ac].xmff016 != g_xmff5_d_o.xmff016 OR
                                                   g_xmff5_d_o.xmff016 IS NULL)) THEN
                  IF NOT cl_null(g_xmff5_d[l_ac].xmff015) THEN
                     CALL axmt410_volume('2',g_xmff_d[l_ac].xmff006,g_xmff5_d[l_ac].xmff015,g_xmff5_d[l_ac].xmff016)
                        RETURNING g_xmff5_d[l_ac].xmff016,g_xmff5_d[l_ac].xmff019          
                  END IF
               END IF
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff016
            #add-point:BEFORE FIELD xmff016 name="input.b.page5.xmff016"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmff016
            #add-point:ON CHANGE xmff016 name="input.g.page5.xmff016"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff017
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmff5_d[l_ac].xmff017,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD xmff017
            END IF 
 
 
 
            #add-point:AFTER FIELD xmff017 name="input.a.page5.xmff017"
            IF NOT cl_null(g_xmff5_d[l_ac].xmff017) THEN 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff017
            #add-point:BEFORE FIELD xmff017 name="input.b.page5.xmff017"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmff017
            #add-point:ON CHANGE xmff017 name="input.g.page5.xmff017"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff018
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmff5_d[l_ac].xmff018,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD xmff018
            END IF 
 
 
 
            #add-point:AFTER FIELD xmff018 name="input.a.page5.xmff018"
            IF NOT cl_null(g_xmff5_d[l_ac].xmff018) THEN 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff018
            #add-point:BEFORE FIELD xmff018 name="input.b.page5.xmff018"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmff018
            #add-point:ON CHANGE xmff018 name="input.g.page5.xmff018"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmff019
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmff5_d[l_ac].xmff019,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD xmff019
            END IF 
 
 
 
            #add-point:AFTER FIELD xmff019 name="input.a.page5.xmff019"
            IF NOT cl_null(g_xmff5_d[l_ac].xmff019) THEN 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmff019
            #add-point:BEFORE FIELD xmff019 name="input.b.page5.xmff019"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmff019
            #add-point:ON CHANGE xmff019 name="input.g.page5.xmff019"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page5.xmff015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff015
            #add-point:ON ACTION controlp INFIELD xmff015 name="input.c.page5.xmff015"
            #應用 a07 樣板自動產生(Version:1)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmff5_d[l_ac].xmff015             #給予default值
            LET g_qryparam.default2 = "" #g_xmff5_d[l_ac].xmaml003 #包裝說明
            #給予arg
            LET g_qryparam.arg1 = "" #s

            
            CALL q_xmam001()                                #呼叫開窗

            LET g_xmff5_d[l_ac].xmff015 = g_qryparam.return1              
            LET g_xmff5_d[l_ac].xmff015_desc = g_qryparam.return2 
            DISPLAY g_xmff5_d[l_ac].xmff015 TO xmff015              #
            DISPLAY g_xmff5_d[l_ac].xmff015_desc TO xmff015_desc #包裝說明
            NEXT FIELD xmff015                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page5.xmff016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff016
            #add-point:ON ACTION controlp INFIELD xmff016 name="input.c.page5.xmff016"
            
            #END add-point
 
 
         #Ctrlp:input.c.page5.xmff017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff017
            #add-point:ON ACTION controlp INFIELD xmff017 name="input.c.page5.xmff017"
            
            #END add-point
 
 
         #Ctrlp:input.c.page5.xmff018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff018
            #add-point:ON ACTION controlp INFIELD xmff018 name="input.c.page5.xmff018"
            
            #END add-point
 
 
         #Ctrlp:input.c.page5.xmff019
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmff019
            #add-point:ON ACTION controlp INFIELD xmff019 name="input.c.page5.xmff019"
            
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page5 after_row name="input.body5.after_row"
            
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_xmff5_d[l_ac].* = g_xmff5_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE axmt410_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL axmt410_unlock_b("xmff_t","'5'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page5 after_row2 name="input.body5.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body5.after_input"
            
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_xmff_d[li_reproduce_target].* = g_xmff_d[li_reproduce].*
               LET g_xmff4_d[li_reproduce_target].* = g_xmff4_d[li_reproduce].*
               LET g_xmff5_d[li_reproduce_target].* = g_xmff5_d[li_reproduce].*
 
               LET g_xmff5_d[li_reproduce_target].xmffseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_xmff5_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_xmff5_d.getLength()+1
            END IF
            
      END INPUT
 
      
 
      DISPLAY ARRAY g_xmff2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL axmt410_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail2")
            LET g_detail_idx = l_ac
            
            #add-point:page2, before row動作 name="input.body2.before_row"
            
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail2")
            CALL axmt410_idx_chk()
            LET g_current_page = 2
      
         #add-point:page2自定義行為 name="input.body2.action"
         
         #end add-point
      
      END DISPLAY
      DISPLAY ARRAY g_xmff4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL axmt410_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail4")
            LET g_detail_idx = l_ac
            
            #add-point:page4, before row動作 name="input.body4.before_row"
            
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue(""))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail4")
            CALL axmt410_idx_chk()
            LET g_current_page = 4
      
         #add-point:page4自定義行為 name="input.body4.action"
         
         #end add-point
      
      END DISPLAY
 
 
 
{</section>}
 
{<section id="axmt410.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1','4','5',"))      
         CALL DIALOG.setCurrentRow("s_detail2",g_idx_group.getValue("'2',"))
         CALL DIALOG.setCurrentRow("s_detail3",g_idx_group.getValue("'3',"))
         CALL DIALOG.setCurrentRow("s_detail4",g_idx_group.getValue(""))
         CALL DIALOG.setCurrentRow("s_detail5",g_idx_group.getValue(""))
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            
            #end add-point  
            NEXT FIELD xmfddocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xmffseq
               WHEN "s_detail2"
                  NEXT FIELD xmfgseq
               WHEN "s_detail3"
                  NEXT FIELD xmfhseq
               WHEN "s_detail4"
                  NEXT FIELD xmffseq_4
               WHEN "s_detail5"
                  NEXT FIELD xmffseq_5
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
         LET g_detail_idx_list[4] = 1
         LET g_detail_idx_list[5] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
         CALL g_curr_diag.setCurrentRow("s_detail4",1)
         CALL g_curr_diag.setCurrentRow("s_detail5",1)
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
         LET g_detail_idx_list[4] = 1
         LET g_detail_idx_list[5] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
         CALL g_curr_diag.setCurrentRow("s_detail4",1)
         CALL g_curr_diag.setCurrentRow("s_detail5",1)
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   CALL axmt410_b_fill()
   #end add-point    
 
END FUNCTION
 
{</section>}
 
{<section id="axmt410.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION axmt410_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   DEFINE l_success LIKE type_t.num5
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL axmt410_b_fill() #單身填充
      CALL axmt410_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL axmt410_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
   CALL s_aooi200_get_slip_desc(g_xmfd_m.xmfddocno)
        RETURNING g_xmfd_m.xmfddocno_desc
   DISPLAY BY NAME g_xmfd_m.xmfddocno_desc

   CALL s_desc_get_person_desc(g_xmfd_m.xmfd001)
        RETURNING g_xmfd_m.xmfd001_desc
   DISPLAY BY NAME g_xmfd_m.xmfd001_desc

   CALL s_desc_get_department_desc(g_xmfd_m.xmfd002)
        RETURNING g_xmfd_m.xmfd002_desc
   DISPLAY BY NAME g_xmfd_m.xmfd002_desc

   CALL s_desc_get_trading_partner_full_desc(g_xmfd_m.xmfd003)
        RETURNING g_xmfd_m.xmfd003_desc
   DISPLAY BY NAME g_xmfd_m.xmfd003_desc

   CALL axmt410_xmfd009_ref(g_xmfd_m.xmfd009)
        RETURNING g_xmfd_m.xmfd009_desc
   DISPLAY BY NAME g_xmfd_m.xmfd009_desc

   CALL s_desc_get_currency_desc(g_xmfd_m.xmfd010)
        RETURNING g_xmfd_m.xmfd010_desc
   DISPLAY BY NAME g_xmfd_m.xmfd010_desc 
   
   CALL s_desc_get_tax_desc1(g_site,g_xmfd_m.xmfd012)
        RETURNING g_xmfd_m.xmfd012_desc
   DISPLAY BY NAME g_xmfd_m.xmfd012_desc

   CALL s_desc_get_acc_desc('238',g_xmfd_m.xmfd015)
        RETURNING g_xmfd_m.xmfd015_desc
   DISPLAY BY NAME g_xmfd_m.xmfd015_desc

   CALL axmt410_xmfd016_ref(g_xmfd_m.xmfd016)
        RETURNING g_xmfd_m.xmfd016_desc
   DISPLAY BY NAME g_xmfd_m.xmfd016_desc

   CALL axmt410_xmfd017_ref(g_xmfd_m.xmfd017)
        RETURNING g_xmfd_m.xmfd017_desc
   DISPLAY BY NAME g_xmfd_m.xmfd017_desc

   #160621-00003#3 20160629 modify by beckxie---S
   #CALL s_desc_get_acc_desc('275',g_xmfd_m.xmfd018) RETURNING g_xmfd_m.xmfd018_desc
   CALL s_desc_get_oojdl003_desc(g_xmfd_m.xmfd018) RETURNING g_xmfd_m.xmfd018_desc
   #160621-00003#3 20160629 modify by beckxie---E
   DISPLAY BY NAME g_xmfd_m.xmfd018_desc 
   
   CALL s_desc_get_acc_desc('263',g_xmfd_m.xmfd019)
        RETURNING g_xmfd_m.xmfd019_desc
   DISPLAY BY NAME g_xmfd_m.xmfd019_desc

   CALL s_apmi011_location_ref(g_xmfd_m.xmfd019,g_xmfd_m.xmfd020)
        RETURNING g_xmfd_m.xmfd020_desc
   DISPLAY BY NAME g_xmfd_m.xmfd020_desc

   CALL s_apmi011_location_ref(g_xmfd_m.xmfd019,g_xmfd_m.xmfd021)
        RETURNING g_xmfd_m.xmfd021_desc
   DISPLAY BY NAME g_xmfd_m.xmfd021_desc

   CALL axmt410_xmfd022_ref(g_xmfd_m.xmfd003,g_xmfd_m.xmfd022)
        RETURNING g_xmfd_m.xmfd022_desc,g_xmfd_m.oofb017
   DISPLAY BY NAME g_xmfd_m.xmfd022_desc,g_xmfd_m.oofb017 

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmfd_m.xmfdownid
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_xmfd_m.xmfdownid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmfd_m.xmfdownid_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmfd_m.xmfdowndp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmfd_m.xmfdowndp_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmfd_m.xmfdowndp_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmfd_m.xmfdcrtid
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_xmfd_m.xmfdcrtid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmfd_m.xmfdcrtid_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmfd_m.xmfdcrtdp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmfd_m.xmfdcrtdp_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmfd_m.xmfdcrtdp_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmfd_m.xmfdmodid
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_xmfd_m.xmfdmodid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmfd_m.xmfdmodid_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmfd_m.xmfdcnfid
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_xmfd_m.xmfdcnfid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmfd_m.xmfdcnfid_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmfd_m.xmfdpstid
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_xmfd_m.xmfdpstid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmfd_m.xmfdpstid_desc

   #end add-point
   
   #遮罩相關處理
   LET g_xmfd_m_mask_o.* =  g_xmfd_m.*
   CALL axmt410_xmfd_t_mask()
   LET g_xmfd_m_mask_n.* =  g_xmfd_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xmfd_m.xmfddocno,g_xmfd_m.xmfddocno_desc,g_xmfd_m.xmfdsite,g_xmfd_m.xmfddocdt,g_xmfd_m.xmfd001, 
       g_xmfd_m.xmfd001_desc,g_xmfd_m.xmfd002,g_xmfd_m.xmfd002_desc,g_xmfd_m.xmfdstus,g_xmfd_m.xmfd005, 
       g_xmfd_m.xmfd003,g_xmfd_m.xmfd003_desc,g_xmfd_m.xmfd006,g_xmfd_m.xmfd007,g_xmfd_m.xmfd008,g_xmfd_m.xmfd009, 
       g_xmfd_m.xmfd009_desc,g_xmfd_m.xmfd010,g_xmfd_m.xmfd010_desc,g_xmfd_m.xmfd011,g_xmfd_m.xmfd029, 
       g_xmfd_m.xmfd012,g_xmfd_m.xmfd012_desc,g_xmfd_m.xmfd013,g_xmfd_m.xmfd014,g_xmfd_m.xmfd015,g_xmfd_m.xmfd015_desc, 
       g_xmfd_m.xmfd016,g_xmfd_m.xmfd016_desc,g_xmfd_m.xmfd017,g_xmfd_m.xmfd017_desc,g_xmfd_m.xmfd018, 
       g_xmfd_m.xmfd018_desc,g_xmfd_m.xmfd019,g_xmfd_m.xmfd019_desc,g_xmfd_m.xmfd020,g_xmfd_m.xmfd020_desc, 
       g_xmfd_m.xmfd021,g_xmfd_m.xmfd021_desc,g_xmfd_m.xmfd022,g_xmfd_m.xmfd022_desc,g_xmfd_m.oofb017, 
       g_xmfd_m.xmfd023,g_xmfd_m.xmfd024,g_xmfd_m.xmfd025,g_xmfd_m.xmfd026,g_xmfd_m.xmfd027,g_xmfd_m.xmfd028, 
       g_xmfd_m.xmfd030,g_xmfd_m.xmfd031,g_xmfd_m.xmfd032,g_xmfd_m.xmfd032_desc,g_xmfd_m.xmfd033,g_xmfd_m.xmfdownid, 
       g_xmfd_m.xmfdownid_desc,g_xmfd_m.xmfdowndp,g_xmfd_m.xmfdowndp_desc,g_xmfd_m.xmfdcrtid,g_xmfd_m.xmfdcrtid_desc, 
       g_xmfd_m.xmfdcrtdp,g_xmfd_m.xmfdcrtdp_desc,g_xmfd_m.xmfdcrtdt,g_xmfd_m.xmfdmodid,g_xmfd_m.xmfdmodid_desc, 
       g_xmfd_m.xmfdmoddt,g_xmfd_m.xmfdcnfid,g_xmfd_m.xmfdcnfid_desc,g_xmfd_m.xmfdcnfdt,g_xmfd_m.xmfdpstid, 
       g_xmfd_m.xmfdpstid_desc,g_xmfd_m.xmfdpstdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_xmfd_m.xmfdstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_xmff_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
      CALL s_desc_get_item_desc(g_xmff_d[l_ac].xmff001)
           RETURNING g_xmff_d[l_ac].xmff001_desc,
                     g_xmff_d[l_ac].xmff001_desc_desc 
      DISPLAY BY NAME g_xmff_d[l_ac].xmff001_desc, 
                      g_xmff_d[l_ac].xmff001_desc_desc  
                      
      #產品特徵說明 
      CALL s_feature_description(g_xmff_d[l_ac].xmff001,g_xmff_d[l_ac].xmff002)
           RETURNING l_success,g_xmff_d[l_ac].xmff002_desc
      DISPLAY BY NAME g_xmff_d[l_ac].xmff002_desc

      CALL s_desc_get_unit_desc(g_xmff_d[l_ac].xmff004)
           RETURNING g_xmff_d[l_ac].xmff004_desc 
      DISPLAY BY NAME g_xmff_d[l_ac].xmff004_desc 

      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_xmff2_d.getLength()
      #add-point:show段單身reference name="show.body2.reference"
      
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_xmff3_d.getLength()
      #add-point:show段單身reference name="show.body3.reference"
      CALL s_desc_get_item_desc(g_xmff3_d[l_ac].xmfh001)
         RETURNING g_xmff3_d[l_ac].xmfh001_desc,g_xmff3_d[l_ac].xmfh001_desc_desc
      DISPLAY BY NAME g_xmff3_d[l_ac].xmfh001_desc,g_xmff3_d[l_ac].xmfh001_desc_desc
      CALL s_desc_get_currency_desc(g_xmff3_d[l_ac].xmfh002) 
         RETURNING g_xmff3_d[l_ac].xmfh002_desc
      DISPLAY BY NAME g_xmff3_d[l_ac].xmfh002_desc
      CALL s_desc_get_trading_partner_full_desc(g_xmff3_d[l_ac].xmfh005)
         RETURNING g_xmff3_d[l_ac].xmfh005_desc
      DISPLAY BY NAME g_xmff3_d[l_ac].xmfh005_desc
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_xmff4_d.getLength()
      #add-point:show段單身reference name="show.body4.reference"
      CALL s_desc_get_item_desc(g_xmff4_d[l_ac].xmff0011)
           RETURNING g_xmff4_d[l_ac].xmff0011_desc,
                     g_xmff4_d[l_ac].xmff0011_desc_desc
      DISPLAY BY NAME g_xmff4_d[l_ac].xmff0011_desc,
                      g_xmff4_d[l_ac].xmff0011_desc_desc
       
      #產品特徵說明 
      CALL s_feature_description(g_xmff4_d[l_ac].xmff0011,g_xmff4_d[l_ac].xmff0021)
           RETURNING l_success,g_xmff4_d[l_ac].xmff0021_desc
      DISPLAY BY NAME g_xmff4_d[l_ac].xmff0021_desc
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_xmff5_d.getLength()
      #add-point:show段單身reference name="show.body5.reference"
      CALL s_desc_get_item_desc(g_xmff5_d[l_ac].xmff0012)
           RETURNING g_xmff5_d[l_ac].xmff0012_desc,
                     g_xmff5_d[l_ac].xmff0012_desc_desc
      DISPLAY BY NAME g_xmff5_d[l_ac].xmff0012_desc,
                      g_xmff5_d[l_ac].xmff0012_desc_desc
       
      #產品特徵說明 
      CALL s_feature_description(g_xmff5_d[l_ac].xmff0012,g_xmff5_d[l_ac].xmff0022)
           RETURNING l_success,g_xmff5_d[l_ac].xmff0022_desc
      DISPLAY BY NAME g_xmff5_d[l_ac].xmff0022_desc
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other name="show.other"
   
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL axmt410_detail_show()
 
   #add-point:show段之後 name="show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="axmt410.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION axmt410_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
   
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="axmt410.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION axmt410_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   
   #end add-point   
   DEFINE l_newno     LIKE xmfd_t.xmfddocno 
   DEFINE l_oldno     LIKE xmfd_t.xmfddocno 
 
   DEFINE l_master    RECORD LIKE xmfd_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE xmff_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE xmfg_t.* #此變數樣板目前無使用
 
   DEFINE l_detail3    RECORD LIKE xmfh_t.* #此變數樣板目前無使用
 
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_xmfd_m.xmfddocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_xmfddocno_t = g_xmfd_m.xmfddocno
 
    
   LET g_xmfd_m.xmfddocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_xmfd_m.xmfdownid = g_user
      LET g_xmfd_m.xmfdowndp = g_dept
      LET g_xmfd_m.xmfdcrtid = g_user
      LET g_xmfd_m.xmfdcrtdp = g_dept 
      LET g_xmfd_m.xmfdcrtdt = cl_get_current()
      LET g_xmfd_m.xmfdmodid = g_user
      LET g_xmfd_m.xmfdmoddt = cl_get_current()
      LET g_xmfd_m.xmfdstus = 'N'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   LET g_xmfd_m.xmfd001 = g_user
   LET g_xmfd_m.xmfd002 = g_dept
   LET g_xmfd_m.xmfddocdt = g_today
   LET g_xmfd_m.xmfdcnfid = ''
   LET g_xmfd_m.xmfdcnfdt = ''
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_xmfd_m.xmfdstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
      LET g_xmfd_m.xmfddocno_desc = ''
   DISPLAY BY NAME g_xmfd_m.xmfddocno_desc
 
   
   CALL axmt410_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_xmfd_m.* TO NULL
      INITIALIZE g_xmff_d TO NULL
      INITIALIZE g_xmff2_d TO NULL
      INITIALIZE g_xmff3_d TO NULL
      INITIALIZE g_xmff4_d TO NULL
      INITIALIZE g_xmff5_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      
      #end add-point
      CALL axmt410_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt410_set_act_visible()   
   CALL axmt410_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_xmfddocno_t = g_xmfd_m.xmfddocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " xmfdent = " ||g_enterprise|| " AND",
                      " xmfddocno = '", g_xmfd_m.xmfddocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axmt410_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   CALL axmt410_idx_chk()
   
   LET g_data_owner = g_xmfd_m.xmfdownid      
   LET g_data_dept  = g_xmfd_m.xmfdowndp
   
   #功能已完成,通報訊息中心
   CALL axmt410_msgcentre_notify('reproduce')
 
END FUNCTION
 
{</section>}
 
{<section id="axmt410.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION axmt410_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE xmff_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE xmfg_t.* #此變數樣板目前無使用
 
   DEFINE l_detail3    RECORD LIKE xmfh_t.* #此變數樣板目前無使用
 
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE axmt410_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xmff_t
    WHERE xmffent = g_enterprise AND xmffdocno = g_xmfddocno_t
 
    INTO TEMP axmt410_detail
 
   #將key修正為調整後   
   UPDATE axmt410_detail 
      #更新key欄位
      SET xmffdocno = g_xmfd_m.xmfddocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO xmff_t SELECT * FROM axmt410_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmt410_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table2.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xmfg_t 
    WHERE xmfgent = g_enterprise AND xmfgdocno = g_xmfddocno_t
 
    INTO TEMP axmt410_detail
 
   #將key修正為調整後   
   UPDATE axmt410_detail SET xmfgdocno = g_xmfd_m.xmfddocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table2.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO xmfg_t SELECT * FROM axmt410_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table2.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmt410_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table2.a_insert"
   
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table3.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xmfh_t 
    WHERE xmfhent = g_enterprise AND xmfhdocno = g_xmfddocno_t
 
    INTO TEMP axmt410_detail
 
   #將key修正為調整後   
   UPDATE axmt410_detail SET xmfhdocno = g_xmfd_m.xmfddocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table3.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO xmfh_t SELECT * FROM axmt410_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table3.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmt410_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table3.a_insert"
   
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_xmfddocno_t = g_xmfd_m.xmfddocno
 
   
END FUNCTION
 
{</section>}
 
{<section id="axmt410.delete" >}
#+ 資料刪除
PRIVATE FUNCTION axmt410_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   DEFINE l_success        LIKE type_t.num5 
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_xmfd_m.xmfddocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN axmt410_cl USING g_enterprise,g_xmfd_m.xmfddocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axmt410_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE axmt410_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axmt410_master_referesh USING g_xmfd_m.xmfddocno INTO g_xmfd_m.xmfddocno,g_xmfd_m.xmfdsite, 
       g_xmfd_m.xmfddocdt,g_xmfd_m.xmfd001,g_xmfd_m.xmfd002,g_xmfd_m.xmfdstus,g_xmfd_m.xmfd005,g_xmfd_m.xmfd003, 
       g_xmfd_m.xmfd006,g_xmfd_m.xmfd007,g_xmfd_m.xmfd008,g_xmfd_m.xmfd009,g_xmfd_m.xmfd010,g_xmfd_m.xmfd011, 
       g_xmfd_m.xmfd029,g_xmfd_m.xmfd012,g_xmfd_m.xmfd013,g_xmfd_m.xmfd014,g_xmfd_m.xmfd015,g_xmfd_m.xmfd016, 
       g_xmfd_m.xmfd017,g_xmfd_m.xmfd018,g_xmfd_m.xmfd019,g_xmfd_m.xmfd020,g_xmfd_m.xmfd021,g_xmfd_m.xmfd022, 
       g_xmfd_m.xmfd023,g_xmfd_m.xmfd024,g_xmfd_m.xmfd025,g_xmfd_m.xmfd026,g_xmfd_m.xmfd027,g_xmfd_m.xmfd028, 
       g_xmfd_m.xmfd030,g_xmfd_m.xmfd031,g_xmfd_m.xmfd032,g_xmfd_m.xmfd033,g_xmfd_m.xmfdownid,g_xmfd_m.xmfdowndp, 
       g_xmfd_m.xmfdcrtid,g_xmfd_m.xmfdcrtdp,g_xmfd_m.xmfdcrtdt,g_xmfd_m.xmfdmodid,g_xmfd_m.xmfdmoddt, 
       g_xmfd_m.xmfdcnfid,g_xmfd_m.xmfdcnfdt,g_xmfd_m.xmfdpstid,g_xmfd_m.xmfdpstdt,g_xmfd_m.xmfd001_desc, 
       g_xmfd_m.xmfd002_desc,g_xmfd_m.xmfd003_desc,g_xmfd_m.xmfd009_desc,g_xmfd_m.xmfd015_desc,g_xmfd_m.xmfd016_desc, 
       g_xmfd_m.xmfd017_desc,g_xmfd_m.xmfd018_desc,g_xmfd_m.xmfd019_desc,g_xmfd_m.xmfd022_desc,g_xmfd_m.xmfd032_desc, 
       g_xmfd_m.xmfdownid_desc,g_xmfd_m.xmfdowndp_desc,g_xmfd_m.xmfdcrtid_desc,g_xmfd_m.xmfdcrtdp_desc, 
       g_xmfd_m.xmfdmodid_desc,g_xmfd_m.xmfdcnfid_desc,g_xmfd_m.xmfdpstid_desc
   
   
   #檢查是否允許此動作
   IF NOT axmt410_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_xmfd_m_mask_o.* =  g_xmfd_m.*
   CALL axmt410_xmfd_t_mask()
   LET g_xmfd_m_mask_n.* =  g_xmfd_m.*
   
   CALL axmt410_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
      
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL axmt410_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_xmfddocno_t = g_xmfd_m.xmfddocno
 
 
      DELETE FROM xmfd_t
       WHERE xmfdent = g_enterprise AND xmfddocno = g_xmfd_m.xmfddocno
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
      
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_xmfd_m.xmfddocno,":",SQLERRMESSAGE  
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      IF NOT s_aooi200_del_docno(g_xmfd_m.xmfddocno,g_xmfd_m.xmfddocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #刪除備註
      CALL s_aooi360_del('6',g_prog,g_xmfd_m.xmfddocno,'','','','','','','','','4') RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      
      #end add-point
      
      DELETE FROM xmff_t
       WHERE xmffent = g_enterprise AND xmffdocno = g_xmfd_m.xmfddocno
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
      
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmff_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      
      #end add-point
      
            
                                                               
      #add-point:單身刪除前 name="delete.body.b_delete2"
      
      #end add-point
      DELETE FROM xmfg_t
       WHERE xmfgent = g_enterprise AND
             xmfgdocno = g_xmfd_m.xmfddocno
      #add-point:單身刪除中 name="delete.body.m_delete2"
      
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmfg_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete2"
      
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete3"
      
      #end add-point
      DELETE FROM xmfh_t
       WHERE xmfhent = g_enterprise AND
             xmfhdocno = g_xmfd_m.xmfddocno
      #add-point:單身刪除中 name="delete.body.m_delete3"
      
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmfh_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete3"
      
      #end add-point
 
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE axmt410_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_xmff_d.clear() 
      CALL g_xmff2_d.clear()       
      CALL g_xmff3_d.clear()       
      CALL g_xmff4_d.clear()       
      CALL g_xmff5_d.clear()       
 
     
      CALL axmt410_ui_browser_refresh()  
      #CALL axmt410_ui_headershow()  
      #CALL axmt410_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
      
      
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL axmt410_browser_fill("")
         CALL axmt410_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE axmt410_cl
 
   #功能已完成,通報訊息中心
   CALL axmt410_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="axmt410.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION axmt410_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   DEFINE l_success  LIKE type_t.num5   #2015/07/20 by stellar add
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #清空第一階單身
   CALL g_xmff_d.clear()
   CALL g_xmff2_d.clear()
   CALL g_xmff3_d.clear()
   CALL g_xmff4_d.clear()
   CALL g_xmff5_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   
   #end add-point
   
   #判斷是否填充
   IF axmt410_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT xmffseq,xmff001,xmff002,xmff003,xmff004,xmff005,xmff006,xmff007, 
             xmff008,xmff009,xmff010,xmffsite,xmffseq,xmff011,xmff012,xmff013,xmffseq,xmff015,xmff016, 
             xmff017,xmff018,xmff019 ,t1.imaal003 ,t2.imaal004 ,t3.oocal003 ,t10.imaal003 ,t11.imaal004 , 
             t12.xmaml003 FROM xmff_t",   
                     " INNER JOIN xmfd_t ON xmfdent = " ||g_enterprise|| " AND xmfddocno = xmffdocno ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
 
                                    " LEFT JOIN imaal_t t1 ON t1.imaalent="||g_enterprise||" AND t1.imaal001=xmff001 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t2 ON t2.imaalent="||g_enterprise||" AND t2.imaal001=xmff001 AND t2.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t3 ON t3.oocalent="||g_enterprise||" AND t3.oocal001=xmff004 AND t3.oocal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t10 ON t10.imaalent="||g_enterprise||" AND t10.imaal001=xmff001 AND t10.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t11 ON t11.imaalent="||g_enterprise||" AND t11.imaal001=xmff001 AND t11.imaal002='"||g_dlang||"' ",
               " LEFT JOIN xmaml_t t12 ON t12.xmamlent="||g_enterprise||" AND t12.xmaml001=xmff015 AND t12.xmaml002='"||g_dlang||"' ",
 
                     " WHERE xmffent=? AND xmffdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xmff_t.xmffseq"
         
         #add-point:單身填充控制 name="b_fill.sql"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axmt410_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR axmt410_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_xmfd_m.xmfddocno
                                               
      FOREACH b_fill_cs INTO g_xmff_d[l_ac].xmffseq,g_xmff_d[l_ac].xmff001,g_xmff_d[l_ac].xmff002,g_xmff_d[l_ac].xmff003, 
          g_xmff_d[l_ac].xmff004,g_xmff_d[l_ac].xmff005,g_xmff_d[l_ac].xmff006,g_xmff_d[l_ac].xmff007, 
          g_xmff_d[l_ac].xmff008,g_xmff_d[l_ac].xmff009,g_xmff_d[l_ac].xmff010,g_xmff_d[l_ac].xmffsite, 
          g_xmff4_d[l_ac].xmffseq,g_xmff4_d[l_ac].xmff011,g_xmff4_d[l_ac].xmff012,g_xmff4_d[l_ac].xmff013, 
          g_xmff5_d[l_ac].xmffseq,g_xmff5_d[l_ac].xmff015,g_xmff5_d[l_ac].xmff016,g_xmff5_d[l_ac].xmff017, 
          g_xmff5_d[l_ac].xmff018,g_xmff5_d[l_ac].xmff019,g_xmff_d[l_ac].xmff001_desc,g_xmff_d[l_ac].xmff001_desc_desc, 
          g_xmff_d[l_ac].xmff004_desc,g_xmff5_d[l_ac].xmff0012_desc,g_xmff5_d[l_ac].xmff0012_desc_desc, 
          g_xmff5_d[l_ac].xmff015_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         LET g_xmff4_d[l_ac].xmffseq  = g_xmff_d[l_ac].xmffseq
         LET g_xmff4_d[l_ac].xmff0011 = g_xmff_d[l_ac].xmff001
         LET g_xmff4_d[l_ac].xmff0021 = g_xmff_d[l_ac].xmff002
         LET g_xmff4_d[l_ac].xmff0041 = g_xmff_d[l_ac].xmff004
         LET g_xmff4_d[l_ac].xmff0061 = g_xmff_d[l_ac].xmff006
         LET g_xmff4_d[l_ac].xmff0071 = g_xmff_d[l_ac].xmff007

         LET g_xmff5_d[l_ac].xmff0012 = g_xmff_d[l_ac].xmff001
         LET g_xmff5_d[l_ac].xmff0022 = g_xmff_d[l_ac].xmff002
         LET g_xmff5_d[l_ac].xmff0042 = g_xmff_d[l_ac].xmff004
         LET g_xmff5_d[l_ac].xmff0062 = g_xmff_d[l_ac].xmff006
         #150722-00001#1-add-(S)
         CALL s_desc_get_item_desc(g_xmff4_d[l_ac].xmff0011) RETURNING g_xmff4_d[l_ac].xmff0011_desc,
                                                                     g_xmff4_d[l_ac].xmff0011_desc_desc 
         
#         DISPLAY BY NAME g_xmff_d[l_ac].xmff0011_desc,g_xmff_d[l_ac].xmff0011_desc_desc
         #150722-00001#1-add-(E)
         #2015/07/20 by stellar add ----- (S)
         #產品特徵說明 
         CALL s_feature_description(g_xmff_d[l_ac].xmff001,g_xmff_d[l_ac].xmff002)
           RETURNING l_success,g_xmff_d[l_ac].xmff002_desc
           
         LET g_xmff4_d[l_ac].xmff0021_desc = g_xmff_d[l_ac].xmff002_desc
         LET g_xmff5_d[l_ac].xmff0022_desc = g_xmff_d[l_ac].xmff002_desc
         #2015/07/20 by stellar add ----- (E)
         SELECT pmao009,pmao010
           INTO g_xmff_d[l_ac].l_pmao009,g_xmff_d[l_ac].l_pmao010
           FROM pmao_t
          WHERE pmaoent = g_enterprise
            AND pmao001 = g_xmfd_m.xmfd003
            AND pmao002 = g_xmff_d[l_ac].xmff001
            AND pmao003 = g_xmff_d[l_ac].xmff002
            AND pmao004 = g_xmff_d[l_ac].xmff003                     
         DISPLAY BY NAME g_xmff_d[l_ac].l_pmao009,g_xmff_d[l_ac].l_pmao010
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
   #判斷是否填充
   IF axmt410_fill_chk(2) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body2.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT xmfgseq,xmfg001,xmfg002,xmfg003,xmfg004,xmfgsite  FROM xmfg_t", 
                
                     " INNER JOIN  xmfd_t ON xmfdent = " ||g_enterprise|| " AND xmfddocno = xmfgdocno ",
 
                     "",
                     
                     
                     " WHERE xmfgent=? AND xmfgdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body2.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xmfg_t.xmfgseq,xmfg_t.xmfg001,xmfg_t.xmfg002"
         
         #add-point:單身填充控制 name="b_fill.sql2"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axmt410_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR axmt410_pb2
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_xmfd_m.xmfddocno
                                               
      FOREACH b_fill_cs2 INTO g_xmff2_d[l_ac].xmfgseq,g_xmff2_d[l_ac].xmfg001,g_xmff2_d[l_ac].xmfg002, 
          g_xmff2_d[l_ac].xmfg003,g_xmff2_d[l_ac].xmfg004,g_xmff2_d[l_ac].xmfgsite
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill2.fill"
         
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF axmt410_fill_chk(3) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body3.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT xmfhseq,xmfh001,xmfh002,xmfh003,xmfh004,xmfh005,xmfh006,xmfhsite , 
             t4.imaal003 ,t5.imaal004 ,t6.ooail003 ,t7.pmaal003 FROM xmfh_t",   
                     " INNER JOIN  xmfd_t ON xmfdent = " ||g_enterprise|| " AND xmfddocno = xmfhdocno ",
 
                     "",
                     
                                    " LEFT JOIN imaal_t t4 ON t4.imaalent="||g_enterprise||" AND t4.imaal001=xmfh001 AND t4.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t5 ON t5.imaalent="||g_enterprise||" AND t5.imaal001=xmfh001 AND t5.imaal002='"||g_dlang||"' ",
               " LEFT JOIN ooail_t t6 ON t6.ooailent="||g_enterprise||" AND t6.ooail001=xmfh002 AND t6.ooail002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t7 ON t7.pmaalent="||g_enterprise||" AND t7.pmaal001=xmfh005 AND t7.pmaal002='"||g_dlang||"' ",
 
                     " WHERE xmfhent=? AND xmfhdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body3.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table3) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xmfh_t.xmfhseq"
         
         #add-point:單身填充控制 name="b_fill.sql3"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axmt410_pb3 FROM g_sql
         DECLARE b_fill_cs3 CURSOR FOR axmt410_pb3
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs3 USING g_enterprise,g_xmfd_m.xmfddocno
                                               
      FOREACH b_fill_cs3 INTO g_xmff3_d[l_ac].xmfhseq,g_xmff3_d[l_ac].xmfh001,g_xmff3_d[l_ac].xmfh002, 
          g_xmff3_d[l_ac].xmfh003,g_xmff3_d[l_ac].xmfh004,g_xmff3_d[l_ac].xmfh005,g_xmff3_d[l_ac].xmfh006, 
          g_xmff3_d[l_ac].xmfhsite,g_xmff3_d[l_ac].xmfh001_desc,g_xmff3_d[l_ac].xmfh001_desc_desc,g_xmff3_d[l_ac].xmfh002_desc, 
          g_xmff3_d[l_ac].xmfh005_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill3.fill"
         
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   
   #end add-point
   
   CALL g_xmff_d.deleteElement(g_xmff_d.getLength())
   CALL g_xmff2_d.deleteElement(g_xmff2_d.getLength())
   CALL g_xmff3_d.deleteElement(g_xmff3_d.getLength())
   CALL g_xmff4_d.deleteElement(g_xmff4_d.getLength())
   CALL g_xmff5_d.deleteElement(g_xmff5_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE axmt410_pb
   FREE axmt410_pb2
 
   FREE axmt410_pb3
 
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_xmff_d.getLength()
      LET g_xmff_d_mask_o[l_ac].* =  g_xmff_d[l_ac].*
      CALL axmt410_xmff_t_mask()
      LET g_xmff_d_mask_n[l_ac].* =  g_xmff_d[l_ac].*
   END FOR
   
   LET g_xmff2_d_mask_o.* =  g_xmff2_d.*
   FOR l_ac = 1 TO g_xmff2_d.getLength()
      LET g_xmff2_d_mask_o[l_ac].* =  g_xmff2_d[l_ac].*
      CALL axmt410_xmfg_t_mask()
      LET g_xmff2_d_mask_n[l_ac].* =  g_xmff2_d[l_ac].*
   END FOR
   LET g_xmff3_d_mask_o.* =  g_xmff3_d.*
   FOR l_ac = 1 TO g_xmff3_d.getLength()
      LET g_xmff3_d_mask_o[l_ac].* =  g_xmff3_d[l_ac].*
      CALL axmt410_xmfh_t_mask()
      LET g_xmff3_d_mask_n[l_ac].* =  g_xmff3_d[l_ac].*
   END FOR
   LET g_xmff4_d_mask_o.* =  g_xmff4_d.*
   FOR l_ac = 1 TO g_xmff4_d.getLength()
      LET g_xmff4_d_mask_o[l_ac].* =  g_xmff4_d[l_ac].*
      CALL axmt410_xmff_t_mask()
      LET g_xmff4_d_mask_n[l_ac].* =  g_xmff4_d[l_ac].*
   END FOR
   LET g_xmff5_d_mask_o.* =  g_xmff5_d.*
   FOR l_ac = 1 TO g_xmff5_d.getLength()
      LET g_xmff5_d_mask_o[l_ac].* =  g_xmff5_d[l_ac].*
      CALL axmt410_xmff_t_mask()
      LET g_xmff5_d_mask_n[l_ac].* =  g_xmff5_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
 
{</section>}
 
{<section id="axmt410.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION axmt410_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','4','5',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      
      #end add-point    
      DELETE FROM xmff_t
       WHERE xmffent = g_enterprise AND
         xmffdocno = ps_keys_bak[1] AND xmffseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_xmff_d.deleteElement(li_idx) 
      END IF 
      IF ps_page <> "'4'" THEN 
         CALL g_xmff4_d.deleteElement(li_idx) 
      END IF 
      IF ps_page <> "'5'" THEN 
         CALL g_xmff5_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete2"
      
      #end add-point    
      DELETE FROM xmfg_t
       WHERE xmfgent = g_enterprise AND
             xmfgdocno = ps_keys_bak[1] AND xmfgseq = ps_keys_bak[2] AND xmfg001 = ps_keys_bak[3] AND xmfg002 = ps_keys_bak[4]
      #add-point:delete_b段刪除中 name="delete_b.m_delete2"
      
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmfg_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_xmff2_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete2"
      
      #end add-point    
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete3"
      
      #end add-point    
      DELETE FROM xmfh_t
       WHERE xmfhent = g_enterprise AND
             xmfhdocno = ps_keys_bak[1] AND xmfhseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete3"
      
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmfh_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_xmff3_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete3"
      
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other name="delete_b.other"
   
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="axmt410.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION axmt410_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','4','5',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      
      #end add-point 
      INSERT INTO xmff_t
                  (xmffent,
                   xmffdocno,
                   xmffseq
                   ,xmff001,xmff002,xmff003,xmff004,xmff005,xmff006,xmff007,xmff008,xmff009,xmff010,xmffsite,xmff011,xmff012,xmff013,xmff015,xmff016,xmff017,xmff018,xmff019) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_xmff_d[g_detail_idx].xmff001,g_xmff_d[g_detail_idx].xmff002,g_xmff_d[g_detail_idx].xmff003, 
                       g_xmff_d[g_detail_idx].xmff004,g_xmff_d[g_detail_idx].xmff005,g_xmff_d[g_detail_idx].xmff006, 
                       g_xmff_d[g_detail_idx].xmff007,g_xmff_d[g_detail_idx].xmff008,g_xmff_d[g_detail_idx].xmff009, 
                       g_xmff_d[g_detail_idx].xmff010,g_xmff_d[g_detail_idx].xmffsite,g_xmff4_d[g_detail_idx].xmff011, 
                       g_xmff4_d[g_detail_idx].xmff012,g_xmff4_d[g_detail_idx].xmff013,g_xmff5_d[g_detail_idx].xmff015, 
                       g_xmff5_d[g_detail_idx].xmff016,g_xmff5_d[g_detail_idx].xmff017,g_xmff5_d[g_detail_idx].xmff018, 
                       g_xmff5_d[g_detail_idx].xmff019)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmff_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_xmff_d.insertElement(li_idx) 
      END IF 
      IF ps_page <> "'4'" THEN 
         CALL g_xmff4_d.insertElement(li_idx) 
      END IF 
      IF ps_page <> "'5'" THEN 
         CALL g_xmff5_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
      
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert2"
      
      #end add-point 
      INSERT INTO xmfg_t
                  (xmfgent,
                   xmfgdocno,
                   xmfgseq,xmfg001,xmfg002
                   ,xmfg003,xmfg004,xmfgsite) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
                   ,g_xmff2_d[g_detail_idx].xmfg003,g_xmff2_d[g_detail_idx].xmfg004,g_xmff2_d[g_detail_idx].xmfgsite) 
 
      #add-point:insert_b段資料新增中 name="insert_b.m_insert2"
      
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmfg_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_xmff2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert2"
      
      #end add-point
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert3"
 
      #end add-point 
      INSERT INTO xmfh_t
                  (xmfhent,
                   xmfhdocno,
                   xmfhseq
                   ,xmfh001,xmfh002,xmfh003,xmfh004,xmfh005,xmfh006,xmfhsite) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_xmff3_d[g_detail_idx].xmfh001,g_xmff3_d[g_detail_idx].xmfh002,g_xmff3_d[g_detail_idx].xmfh003, 
                       g_xmff3_d[g_detail_idx].xmfh004,g_xmff3_d[g_detail_idx].xmfh005,g_xmff3_d[g_detail_idx].xmfh006, 
                       g_xmff3_d[g_detail_idx].xmfhsite)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert3"
      
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmfh_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_xmff3_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert3"
      
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other name="insert_b.other"
   
   #end add-point     
   
END FUNCTION
 
{</section>}
 
{<section id="axmt410.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION axmt410_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','4','5',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmff_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      
      #end add-point 
      
      #將遮罩欄位還原
      CALL axmt410_xmff_t_mask_restore('restore_mask_o')
               
      UPDATE xmff_t 
         SET (xmffdocno,
              xmffseq
              ,xmff001,xmff002,xmff003,xmff004,xmff005,xmff006,xmff007,xmff008,xmff009,xmff010,xmffsite,xmff011,xmff012,xmff013,xmff015,xmff016,xmff017,xmff018,xmff019) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_xmff_d[g_detail_idx].xmff001,g_xmff_d[g_detail_idx].xmff002,g_xmff_d[g_detail_idx].xmff003, 
                  g_xmff_d[g_detail_idx].xmff004,g_xmff_d[g_detail_idx].xmff005,g_xmff_d[g_detail_idx].xmff006, 
                  g_xmff_d[g_detail_idx].xmff007,g_xmff_d[g_detail_idx].xmff008,g_xmff_d[g_detail_idx].xmff009, 
                  g_xmff_d[g_detail_idx].xmff010,g_xmff_d[g_detail_idx].xmffsite,g_xmff4_d[g_detail_idx].xmff011, 
                  g_xmff4_d[g_detail_idx].xmff012,g_xmff4_d[g_detail_idx].xmff013,g_xmff5_d[g_detail_idx].xmff015, 
                  g_xmff5_d[g_detail_idx].xmff016,g_xmff5_d[g_detail_idx].xmff017,g_xmff5_d[g_detail_idx].xmff018, 
                  g_xmff5_d[g_detail_idx].xmff019) 
         WHERE xmffent = g_enterprise AND xmffdocno = ps_keys_bak[1] AND xmffseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update"
      
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmff_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmff_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL axmt410_xmff_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmfg_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update2"
      
      #end add-point  
      
      #將遮罩欄位還原
      CALL axmt410_xmfg_t_mask_restore('restore_mask_o')
               
      UPDATE xmfg_t 
         SET (xmfgdocno,
              xmfgseq,xmfg001,xmfg002
              ,xmfg003,xmfg004,xmfgsite) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
              ,g_xmff2_d[g_detail_idx].xmfg003,g_xmff2_d[g_detail_idx].xmfg004,g_xmff2_d[g_detail_idx].xmfgsite)  
 
         WHERE xmfgent = g_enterprise AND xmfgdocno = ps_keys_bak[1] AND xmfgseq = ps_keys_bak[2] AND xmfg001 = ps_keys_bak[3] AND xmfg002 = ps_keys_bak[4]
      #add-point:update_b段修改中 name="update_b.m_update2"
      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmfg_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmfg_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL axmt410_xmfg_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update2"
      
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmfh_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update3"
      
      #end add-point  
      
      #將遮罩欄位還原
      CALL axmt410_xmfh_t_mask_restore('restore_mask_o')
               
      UPDATE xmfh_t 
         SET (xmfhdocno,
              xmfhseq
              ,xmfh001,xmfh002,xmfh003,xmfh004,xmfh005,xmfh006,xmfhsite) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_xmff3_d[g_detail_idx].xmfh001,g_xmff3_d[g_detail_idx].xmfh002,g_xmff3_d[g_detail_idx].xmfh003, 
                  g_xmff3_d[g_detail_idx].xmfh004,g_xmff3_d[g_detail_idx].xmfh005,g_xmff3_d[g_detail_idx].xmfh006, 
                  g_xmff3_d[g_detail_idx].xmfhsite) 
         WHERE xmfhent = g_enterprise AND xmfhdocno = ps_keys_bak[1] AND xmfhseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update3"
      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmfh_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmfh_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL axmt410_xmfh_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update3"
      
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
 
   
 
   
   #add-point:update_b段other name="update_b.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axmt410.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION axmt410_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="axmt410.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION axmt410_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="axmt410.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION axmt410_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
    
   #先刷新資料
   #CALL axmt410_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1','4','5',"
   #僅鎖定自身table
   LET ls_group = "xmff_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN axmt410_bcl USING g_enterprise,
                                       g_xmfd_m.xmfddocno,g_xmff_d[g_detail_idx].xmffseq     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "axmt410_bcl:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "xmfg_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN axmt410_bcl2 USING g_enterprise,
                                             g_xmfd_m.xmfddocno,g_xmff2_d[g_detail_idx].xmfgseq,g_xmff2_d[g_detail_idx].xmfg001, 
                                                 g_xmff2_d[g_detail_idx].xmfg002
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "axmt410_bcl2:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "xmfh_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN axmt410_bcl3 USING g_enterprise,
                                             g_xmfd_m.xmfddocno,g_xmff3_d[g_detail_idx].xmfhseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "axmt410_bcl3:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other name="lock_b.other"
   
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axmt410.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION axmt410_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
    
   LET ls_group = "'1','4','5',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmt410_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmt410_bcl2
   END IF
 
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmt410_bcl3
   END IF
 
 
   
 
 
   #add-point:unlock_b段other name="unlock_b.other"
   
   #end add-point  
 
END FUNCTION
 
{</section>}
 
{<section id="axmt410.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION axmt410_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   DEFINE l_str   STRING
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   CALL cl_set_comp_entry("xmfddocno",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("xmfddocno",TRUE)
      CALL cl_set_comp_entry("xmfddocdt",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      CALL cl_set_comp_entry("xmfddocdt",TRUE)
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   
   CALL cl_set_comp_entry("xmfd009",TRUE) 
   
   LET l_str = "xmfddocdt,xmfd001,xmfd002,xmfd003,xmfd006,xmfd007,xmfd008,",
               "xmfd010,xmfd029,xmfd012,xmfd015,xmfd016,xmfd017,xmfd018, ",
               "xmfd019,xmfd020,xmfd021,xmfd022,xmfd023"
   CALL cl_set_comp_entry(l_str,TRUE)
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="axmt410.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION axmt410_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   DEFINE l_fields STRING
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("xmfddocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      CALL cl_set_comp_entry("xmfddocdt",FALSE)
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("xmfddocno",FALSE)
   END IF 
 
   IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("xmfddocdt",FALSE)
      END IF
   END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
#   IF g_xmfd_m.xmfd008 <> '2' THEN
#      CALL cl_set_comp_entry("xmfd009",FALSE)
#   END IF 
   
   IF NOT cl_null(g_xmfd_m.xmfddocno) THEN
      LET l_fields = ''
      CALL s_aooi200_get_doc_fields(g_site,'1',g_xmfd_m.xmfddocno)
           RETURNING l_fields
      CALL cl_set_comp_entry(l_fields,FALSE)
   END IF
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="axmt410.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION axmt410_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   CALL cl_set_comp_entry("xmff002",TRUE)
   
   #ming 20141015 mark -----------------------(S) 
   #CALL cl_set_comp_entry("xmff007",TRUE)
   #ming 20141015 mark -----------------------(E) 
   CALL cl_set_comp_entry("l_pmao009,l_pmao010",TRUE)
   #end add-point  
END FUNCTION
 
{</section>}
 
{<section id="axmt410.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION axmt410_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   
   #料件主檔無特徵類別 不能維護產品特徵 
   IF NOT axmt410_imaa005_exists() THEN
      CALL cl_set_comp_entry("xmff002",FALSE)
   END IF
   
   #ming 20141015 mark ---------------------------(S) 
   #因為銀和說，不論是否分量計價，都應該讓user可以改單價 
   #分量計價只是預設單價  
   #IF g_xmff_d[l_ac].xmff005 = 'Y' THEN
   #   CALL cl_set_comp_entry("xmff007",FALSE)
   #END IF
   #ming 20141015 mark ---------------------------(E) 
   
   IF g_pmao_flag = 'Y' THEN
   ELSE
      CALL cl_set_comp_entry("l_pmao009,l_pmao010",FALSE)
   END IF
   #end add-point     
END FUNCTION
 
{</section>}
 
{<section id="axmt410.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION axmt410_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   CALL cl_set_act_visible("modify,delete,modify_detail", TRUE)
   CALL cl_set_act_visible("track", TRUE)

   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="axmt410.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION axmt410_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   #N未確認/D抽單/R已拒絕允許修改
   IF g_xmfd_m.xmfdstus NOT MATCHES "[NDR]" THEN
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF
   #D.抽單、R.拒絕、X.作廢
   IF g_xmfd_m.xmfdstus MATCHES "[DRX]" THEN
      CALL cl_set_act_visible("track", FALSE)
   END IF

   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="axmt410.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION axmt410_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="axmt410.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION axmt410_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="axmt410.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION axmt410_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
   
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " xmfddocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
         INITIALIZE g_wc2_table2 TO NULL
 
         INITIALIZE g_wc2_table3 TO NULL
 
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "xmfd_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "xmff_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "xmfg_t" 
                  LET g_wc2_table2 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "xmfh_t" 
                  LET g_wc2_table3 = la_wc[li_idx].wc
 
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
            OR NOT cl_null(g_wc2_table2)
 
            OR NOT cl_null(g_wc2_table3)
 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
            IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
            END IF
 
            IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
            END IF
 
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
 
{</section>}
 
{<section id="axmt410.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION axmt410_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   DEFINE l_success LIKE type_t.num5
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_xmfd_m.xmfddocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN axmt410_cl USING g_enterprise,g_xmfd_m.xmfddocno
   IF STATUS THEN
      CLOSE axmt410_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axmt410_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE axmt410_master_referesh USING g_xmfd_m.xmfddocno INTO g_xmfd_m.xmfddocno,g_xmfd_m.xmfdsite, 
       g_xmfd_m.xmfddocdt,g_xmfd_m.xmfd001,g_xmfd_m.xmfd002,g_xmfd_m.xmfdstus,g_xmfd_m.xmfd005,g_xmfd_m.xmfd003, 
       g_xmfd_m.xmfd006,g_xmfd_m.xmfd007,g_xmfd_m.xmfd008,g_xmfd_m.xmfd009,g_xmfd_m.xmfd010,g_xmfd_m.xmfd011, 
       g_xmfd_m.xmfd029,g_xmfd_m.xmfd012,g_xmfd_m.xmfd013,g_xmfd_m.xmfd014,g_xmfd_m.xmfd015,g_xmfd_m.xmfd016, 
       g_xmfd_m.xmfd017,g_xmfd_m.xmfd018,g_xmfd_m.xmfd019,g_xmfd_m.xmfd020,g_xmfd_m.xmfd021,g_xmfd_m.xmfd022, 
       g_xmfd_m.xmfd023,g_xmfd_m.xmfd024,g_xmfd_m.xmfd025,g_xmfd_m.xmfd026,g_xmfd_m.xmfd027,g_xmfd_m.xmfd028, 
       g_xmfd_m.xmfd030,g_xmfd_m.xmfd031,g_xmfd_m.xmfd032,g_xmfd_m.xmfd033,g_xmfd_m.xmfdownid,g_xmfd_m.xmfdowndp, 
       g_xmfd_m.xmfdcrtid,g_xmfd_m.xmfdcrtdp,g_xmfd_m.xmfdcrtdt,g_xmfd_m.xmfdmodid,g_xmfd_m.xmfdmoddt, 
       g_xmfd_m.xmfdcnfid,g_xmfd_m.xmfdcnfdt,g_xmfd_m.xmfdpstid,g_xmfd_m.xmfdpstdt,g_xmfd_m.xmfd001_desc, 
       g_xmfd_m.xmfd002_desc,g_xmfd_m.xmfd003_desc,g_xmfd_m.xmfd009_desc,g_xmfd_m.xmfd015_desc,g_xmfd_m.xmfd016_desc, 
       g_xmfd_m.xmfd017_desc,g_xmfd_m.xmfd018_desc,g_xmfd_m.xmfd019_desc,g_xmfd_m.xmfd022_desc,g_xmfd_m.xmfd032_desc, 
       g_xmfd_m.xmfdownid_desc,g_xmfd_m.xmfdowndp_desc,g_xmfd_m.xmfdcrtid_desc,g_xmfd_m.xmfdcrtdp_desc, 
       g_xmfd_m.xmfdmodid_desc,g_xmfd_m.xmfdcnfid_desc,g_xmfd_m.xmfdpstid_desc
   
 
   #檢查是否允許此動作
   IF NOT axmt410_action_chk() THEN
      CLOSE axmt410_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_xmfd_m.xmfddocno,g_xmfd_m.xmfddocno_desc,g_xmfd_m.xmfdsite,g_xmfd_m.xmfddocdt,g_xmfd_m.xmfd001, 
       g_xmfd_m.xmfd001_desc,g_xmfd_m.xmfd002,g_xmfd_m.xmfd002_desc,g_xmfd_m.xmfdstus,g_xmfd_m.xmfd005, 
       g_xmfd_m.xmfd003,g_xmfd_m.xmfd003_desc,g_xmfd_m.xmfd006,g_xmfd_m.xmfd007,g_xmfd_m.xmfd008,g_xmfd_m.xmfd009, 
       g_xmfd_m.xmfd009_desc,g_xmfd_m.xmfd010,g_xmfd_m.xmfd010_desc,g_xmfd_m.xmfd011,g_xmfd_m.xmfd029, 
       g_xmfd_m.xmfd012,g_xmfd_m.xmfd012_desc,g_xmfd_m.xmfd013,g_xmfd_m.xmfd014,g_xmfd_m.xmfd015,g_xmfd_m.xmfd015_desc, 
       g_xmfd_m.xmfd016,g_xmfd_m.xmfd016_desc,g_xmfd_m.xmfd017,g_xmfd_m.xmfd017_desc,g_xmfd_m.xmfd018, 
       g_xmfd_m.xmfd018_desc,g_xmfd_m.xmfd019,g_xmfd_m.xmfd019_desc,g_xmfd_m.xmfd020,g_xmfd_m.xmfd020_desc, 
       g_xmfd_m.xmfd021,g_xmfd_m.xmfd021_desc,g_xmfd_m.xmfd022,g_xmfd_m.xmfd022_desc,g_xmfd_m.oofb017, 
       g_xmfd_m.xmfd023,g_xmfd_m.xmfd024,g_xmfd_m.xmfd025,g_xmfd_m.xmfd026,g_xmfd_m.xmfd027,g_xmfd_m.xmfd028, 
       g_xmfd_m.xmfd030,g_xmfd_m.xmfd031,g_xmfd_m.xmfd032,g_xmfd_m.xmfd032_desc,g_xmfd_m.xmfd033,g_xmfd_m.xmfdownid, 
       g_xmfd_m.xmfdownid_desc,g_xmfd_m.xmfdowndp,g_xmfd_m.xmfdowndp_desc,g_xmfd_m.xmfdcrtid,g_xmfd_m.xmfdcrtid_desc, 
       g_xmfd_m.xmfdcrtdp,g_xmfd_m.xmfdcrtdp_desc,g_xmfd_m.xmfdcrtdt,g_xmfd_m.xmfdmodid,g_xmfd_m.xmfdmodid_desc, 
       g_xmfd_m.xmfdmoddt,g_xmfd_m.xmfdcnfid,g_xmfd_m.xmfdcnfid_desc,g_xmfd_m.xmfdcnfdt,g_xmfd_m.xmfdpstid, 
       g_xmfd_m.xmfdpstid_desc,g_xmfd_m.xmfdpstdt
 
   CASE g_xmfd_m.xmfdstus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_xmfd_m.xmfdstus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      CALL cl_set_act_visible("unconfirmed,invalid,confirmed",TRUE)
      CALL cl_set_act_visible("closed",FALSE)
      CALL cl_set_act_visible("signing,withdraw",FALSE)

      CASE g_xmfd_m.xmfdstus
         WHEN 'N'
            CALL cl_set_act_visible("unconfirmed",FALSE)
            #需提交至BPM時 則顯示「提交」功能 並隱藏「確認」功能 
            IF cl_bpm_chk() THEN
               CALL cl_set_act_visible("signing",TRUE)
               CALL cl_set_act_visible("confirmed",FALSE)
            END IF

         #保留修改的功能(如作廢) 隱藏其他應用功能 
         WHEN 'R'
            CALL cl_set_act_visible("confirmed,unconfirmed",FALSE)

         WHEN 'D'
            CALL cl_set_act_visible("confirmed,unconfirmed",FALSE)

         WHEN 'X'
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed",FALSE)
            CALL s_transaction_end('N','0')   #160812-00017#3 Add By Ken 160815
            RETURN

         WHEN 'Y'
            CALL cl_set_act_visible("invalid,confirmed",FALSE)

         #送簽中只能顯示抽單;其餘應用功能皆隱藏 
         WHEN 'W'
            CALL cl_set_act_visible("withdraw",TRUE)
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed",FALSE)

         #已核准只能顯示確認;其於應用功能皆隱藏 
         WHEN 'A'
            CALL cl_set_act_visible("confirmed",TRUE)
            CALL cl_set_act_visible("unconfirmed,invalid",FALSE)
      END CASE
      #end add-point
      
      #應用 a36 樣板自動產生(Version:5)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT axmt410_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE axmt410_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT axmt410_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE axmt410_cl
            RETURN
         END IF
 
 
 
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.unconfirmed"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.confirmed"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制 name="statechange.approved"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制 name="statechange.withdraw"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制 name="statechange.rejection"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制 name="statechange.signing"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.invalid"
            
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "X"
      ) OR 
      g_xmfd_m.xmfdstus = lc_state OR cl_null(lc_state) THEN
      CLOSE axmt410_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   CALL s_transaction_begin()
   IF lc_state = 'Y' THEN
      CALL s_axmt410_conf_chk(g_xmfd_m.xmfddocno) RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      IF NOT cl_ask_confirm('aim-00108') THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF

      CALL s_axmt410_conf_upd(g_xmfd_m.xmfddocno) RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         RETURN
      ELSE
         CALL s_transaction_end('Y','0')
      END IF
   END IF 
   
   IF lc_state = 'N' THEN
      CALL s_axmt410_unconf_chk(g_xmfd_m.xmfddocno) RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      IF NOT cl_ask_confirm('aim-00110') THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF

      CALL s_axmt410_unconf_upd(g_xmfd_m.xmfddocno) RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         RETURN
      ELSE
         CALL s_transaction_end('Y','0')
      END IF
   END IF 
   
   IF lc_state = 'X' THEN
      CALL s_axmt410_invalid_chk(g_xmfd_m.xmfddocno) RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      IF NOT cl_ask_confirm('aim-00109') THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF

      CALL s_axmt410_invalid_upd(g_xmfd_m.xmfddocno) RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         RETURN
      ELSE
         CALL s_transaction_end('Y','0')
      END IF
   END IF 
   
   
   #end add-point
   
   LET g_xmfd_m.xmfdmodid = g_user
   LET g_xmfd_m.xmfdmoddt = cl_get_current()
   LET g_xmfd_m.xmfdstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE xmfd_t 
      SET (xmfdstus,xmfdmodid,xmfdmoddt) 
        = (g_xmfd_m.xmfdstus,g_xmfd_m.xmfdmodid,g_xmfd_m.xmfdmoddt)     
    WHERE xmfdent = g_enterprise AND xmfddocno = g_xmfd_m.xmfddocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE axmt410_master_referesh USING g_xmfd_m.xmfddocno INTO g_xmfd_m.xmfddocno,g_xmfd_m.xmfdsite, 
          g_xmfd_m.xmfddocdt,g_xmfd_m.xmfd001,g_xmfd_m.xmfd002,g_xmfd_m.xmfdstus,g_xmfd_m.xmfd005,g_xmfd_m.xmfd003, 
          g_xmfd_m.xmfd006,g_xmfd_m.xmfd007,g_xmfd_m.xmfd008,g_xmfd_m.xmfd009,g_xmfd_m.xmfd010,g_xmfd_m.xmfd011, 
          g_xmfd_m.xmfd029,g_xmfd_m.xmfd012,g_xmfd_m.xmfd013,g_xmfd_m.xmfd014,g_xmfd_m.xmfd015,g_xmfd_m.xmfd016, 
          g_xmfd_m.xmfd017,g_xmfd_m.xmfd018,g_xmfd_m.xmfd019,g_xmfd_m.xmfd020,g_xmfd_m.xmfd021,g_xmfd_m.xmfd022, 
          g_xmfd_m.xmfd023,g_xmfd_m.xmfd024,g_xmfd_m.xmfd025,g_xmfd_m.xmfd026,g_xmfd_m.xmfd027,g_xmfd_m.xmfd028, 
          g_xmfd_m.xmfd030,g_xmfd_m.xmfd031,g_xmfd_m.xmfd032,g_xmfd_m.xmfd033,g_xmfd_m.xmfdownid,g_xmfd_m.xmfdowndp, 
          g_xmfd_m.xmfdcrtid,g_xmfd_m.xmfdcrtdp,g_xmfd_m.xmfdcrtdt,g_xmfd_m.xmfdmodid,g_xmfd_m.xmfdmoddt, 
          g_xmfd_m.xmfdcnfid,g_xmfd_m.xmfdcnfdt,g_xmfd_m.xmfdpstid,g_xmfd_m.xmfdpstdt,g_xmfd_m.xmfd001_desc, 
          g_xmfd_m.xmfd002_desc,g_xmfd_m.xmfd003_desc,g_xmfd_m.xmfd009_desc,g_xmfd_m.xmfd015_desc,g_xmfd_m.xmfd016_desc, 
          g_xmfd_m.xmfd017_desc,g_xmfd_m.xmfd018_desc,g_xmfd_m.xmfd019_desc,g_xmfd_m.xmfd022_desc,g_xmfd_m.xmfd032_desc, 
          g_xmfd_m.xmfdownid_desc,g_xmfd_m.xmfdowndp_desc,g_xmfd_m.xmfdcrtid_desc,g_xmfd_m.xmfdcrtdp_desc, 
          g_xmfd_m.xmfdmodid_desc,g_xmfd_m.xmfdcnfid_desc,g_xmfd_m.xmfdpstid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_xmfd_m.xmfddocno,g_xmfd_m.xmfddocno_desc,g_xmfd_m.xmfdsite,g_xmfd_m.xmfddocdt, 
          g_xmfd_m.xmfd001,g_xmfd_m.xmfd001_desc,g_xmfd_m.xmfd002,g_xmfd_m.xmfd002_desc,g_xmfd_m.xmfdstus, 
          g_xmfd_m.xmfd005,g_xmfd_m.xmfd003,g_xmfd_m.xmfd003_desc,g_xmfd_m.xmfd006,g_xmfd_m.xmfd007, 
          g_xmfd_m.xmfd008,g_xmfd_m.xmfd009,g_xmfd_m.xmfd009_desc,g_xmfd_m.xmfd010,g_xmfd_m.xmfd010_desc, 
          g_xmfd_m.xmfd011,g_xmfd_m.xmfd029,g_xmfd_m.xmfd012,g_xmfd_m.xmfd012_desc,g_xmfd_m.xmfd013, 
          g_xmfd_m.xmfd014,g_xmfd_m.xmfd015,g_xmfd_m.xmfd015_desc,g_xmfd_m.xmfd016,g_xmfd_m.xmfd016_desc, 
          g_xmfd_m.xmfd017,g_xmfd_m.xmfd017_desc,g_xmfd_m.xmfd018,g_xmfd_m.xmfd018_desc,g_xmfd_m.xmfd019, 
          g_xmfd_m.xmfd019_desc,g_xmfd_m.xmfd020,g_xmfd_m.xmfd020_desc,g_xmfd_m.xmfd021,g_xmfd_m.xmfd021_desc, 
          g_xmfd_m.xmfd022,g_xmfd_m.xmfd022_desc,g_xmfd_m.oofb017,g_xmfd_m.xmfd023,g_xmfd_m.xmfd024, 
          g_xmfd_m.xmfd025,g_xmfd_m.xmfd026,g_xmfd_m.xmfd027,g_xmfd_m.xmfd028,g_xmfd_m.xmfd030,g_xmfd_m.xmfd031, 
          g_xmfd_m.xmfd032,g_xmfd_m.xmfd032_desc,g_xmfd_m.xmfd033,g_xmfd_m.xmfdownid,g_xmfd_m.xmfdownid_desc, 
          g_xmfd_m.xmfdowndp,g_xmfd_m.xmfdowndp_desc,g_xmfd_m.xmfdcrtid,g_xmfd_m.xmfdcrtid_desc,g_xmfd_m.xmfdcrtdp, 
          g_xmfd_m.xmfdcrtdp_desc,g_xmfd_m.xmfdcrtdt,g_xmfd_m.xmfdmodid,g_xmfd_m.xmfdmodid_desc,g_xmfd_m.xmfdmoddt, 
          g_xmfd_m.xmfdcnfid,g_xmfd_m.xmfdcnfid_desc,g_xmfd_m.xmfdcnfdt,g_xmfd_m.xmfdpstid,g_xmfd_m.xmfdpstid_desc, 
          g_xmfd_m.xmfdpstdt
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   
   #end add-point  
 
   CLOSE axmt410_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL axmt410_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axmt410.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION axmt410_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_xmff_d.getLength() THEN
         LET g_detail_idx = g_xmff_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmff_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmff_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_xmff2_d.getLength() THEN
         LET g_detail_idx = g_xmff2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmff2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmff2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_xmff3_d.getLength() THEN
         LET g_detail_idx = g_xmff3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmff3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmff3_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 4 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail4")
      IF g_detail_idx > g_xmff4_d.getLength() THEN
         LET g_detail_idx = g_xmff4_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmff4_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmff4_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 5 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail5")
      IF g_detail_idx > g_xmff5_d.getLength() THEN
         LET g_detail_idx = g_xmff5_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmff5_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmff5_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axmt410.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION axmt410_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   
   #end add-point
    
   LET l_ac = li_ac
   
   CALL axmt410_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
 
{</section>}
 
{<section id="axmt410.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION axmt410_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axmt410.status_show" >}
PRIVATE FUNCTION axmt410_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="axmt410.mask_functions" >}
&include "erp/axm/axmt410_mask.4gl"
 
{</section>}
 
{<section id="axmt410.signature" >}
   #應用 a39 樣板自動產生(Version:10)
#+ BPM提交
PRIVATE FUNCTION axmt410_send()
   #add-point:send段define(客製用) name="send.define_customerization"
   
   #end add-point 
   #add-point:send段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="send.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="send.pre_function"
   
   #end add-point
   
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
   LET g_wc2_table2 = " 1=1"
   LET g_wc2_table3 = " 1=1"
 
 
   CALL axmt410_show()
   CALL axmt410_set_pk_array()
   
   #add-point: 初始化的ADP name="send.before_send"
   IF NOT s_axmt410_conf_chk(g_xmfd_m.xmfddocno) THEN
      CLOSE axmt410_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_xmfd_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_xmff_d))
   CALL cl_bpm_set_detail_data("s_detail2", util.JSONArray.fromFGL(g_xmff2_d))
   CALL cl_bpm_set_detail_data("s_detail3", util.JSONArray.fromFGL(g_xmff3_d))
   CALL cl_bpm_set_detail_data("s_detail4", util.JSONArray.fromFGL(g_xmff4_d))
   CALL cl_bpm_set_detail_data("s_detail5", util.JSONArray.fromFGL(g_xmff5_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP name="send.before_cli"
   
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP name="send.after_send"
   
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL axmt410_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL axmt410_ui_headershow()
   CALL axmt410_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
#應用 a40 樣板自動產生(Version:9)
#+ BPM抽單
PRIVATE FUNCTION axmt410_draw_out()
   #add-point:draw段define name="draw.define_customerization"
   
   #end add-point
   #add-point:draw段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="draw.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="draw.pre_function"
   
   #end add-point
   
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_idx].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL axmt410_ui_headershow()  
   CALL axmt410_ui_detailshow()
 
   #add-point:Function後置處理  name="draw.after_function"
   
   #end add-point
 
   RETURN TRUE
   
END FUNCTION
 
 
 
 
 
{</section>}
 
{<section id="axmt410.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION axmt410_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_xmfd_m.xmfddocno
   LET g_pk_array[1].column = 'xmfddocno'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axmt410.other_dialog" readonly="Y" >}
   
 
{</section>}
 
{<section id="axmt410.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION axmt410_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL axmt410_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_xmfd_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axmt410.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION axmt410_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   #160818-00017#42 add-S
   SELECT xmfdstus  INTO g_xmfd_m.xmfdstus
     FROM xmfd_t
    WHERE xmfdent = g_enterprise
      AND xmfddocno = g_xmfd_m.xmfddocno

   IF (g_action_choice="modify" OR g_action_choice="delete" OR g_action_choice="modify_detail")  THEN
     LET g_errno = NULL
     CASE g_xmfd_m.xmfdstus
        WHEN 'W'
           LET g_errno = 'sub-00180'
        WHEN 'X'
           LET g_errno = 'sub-00229'
        WHEN 'Y'
           LET g_errno = 'sub-00178'
        WHEN 'S'
           LET g_errno = 'sub-00230'
     END CASE

     IF NOT cl_null(g_errno) THEN
        INITIALIZE g_errparam TO NULL
        LET g_errparam.code = g_errno
        LET g_errparam.extend = g_xmfd_m.xmfddocno
        LET g_errparam.popup = TRUE
        CALL cl_err()
        LET g_errno = NULL
        CALL axmt410_set_act_visible()
        CALL axmt410_set_act_no_visible()
        CALL axmt410_show()
        RETURN FALSE
     END IF
   END IF
   #160818-00017#42 add-E
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="axmt410.other_function" readonly="Y" >}

################################################################################
# Descriptions...: 單號檢核
# Memo...........:
# Usage..........: CALL axmt410_xmfddocno_chk()
#                  RETURNING TRUE/FALSE
# Date & Author..: 2014/06/26 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt410_xmfddocno_chk()
   DEFINE l_success     LIKE type_t.num5
   DEFINE l_flag        LIKE type_t.num5 
   
   #key值檢查  
   IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmfd_t WHERE "||"xmfdent = '" ||g_enterprise|| "' AND "||"xmfddocno = '"||g_xmfd_m.xmfddocno ||"'",'std-00004',0) THEN 
      RETURN FALSE
   END IF 
   
   #檢查單別  
   IF NOT s_aooi200_chk_slip(g_site,'',g_xmfd_m.xmfddocno,g_prog) THEN
      RETURN FALSE 
   END IF 
   
   #檢核輸入的單據別是否可以被key人員對應的控制組使用,'2' 為銷售控制組類型 
   CALL s_control_chk_doc('1',g_xmfd_m.xmfddocno,'2',g_user,g_dept,'','')  
        RETURNING l_success,l_flag  
   IF l_success THEN 
      IF NOT l_flag THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'axm-00015'     #輸入的單據別不可以被當前人員和部門對應的銷售控制組使用！ 
         LET g_errparam.extend = g_xmfd_m.xmfddocno
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE 
      END IF 
   ELSE 
      RETURN FALSE
   END IF 

   RETURN TRUE
END FUNCTION

PRIVATE FUNCTION axmt410_xmfd009_ref(p_xmfaldocno)
   DEFINE p_xmfaldocno   LIKE xmfal_t.xmfaldocno
   DEFINE r_xmfal003     LIKE xmfal_t.xmfal003
   DEFINE l_sql          STRING

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_xmfaldocno
   LET l_sql = "SELECT xmfal003 ",
               "  FROM xmfal_t ",
               " WHERE xmfalent='"||g_enterprise||"' ",
               "   AND xmfaldocno=? ",
               "   AND xmfal002='"||g_dlang||"'"
   CALL ap_ref_array2(g_ref_fields,l_sql,"") RETURNING g_rtn_fields
   LET r_xmfal003 = '', g_rtn_fields[1] , ''

   RETURN r_xmfal003
END FUNCTION

PRIVATE FUNCTION axmt410_xmfd016_ref(p_ooibl002)
   DEFINE p_ooibl002     LIKE ooibl_t.ooibl002
   DEFINE r_ooibl004     LIKE ooibl_t.ooibl004
   DEFINE l_sql          STRING

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_ooibl002
   LET l_sql =  "SELECT ooibl004 ",
                "  FROM ooibl_t ",
                " WHERE ooiblent='"||g_enterprise||"' ",
                "   AND ooibl002=? ",
                "   AND ooibl003='"||g_dlang||"'"
   CALL ap_ref_array2(g_ref_fields,l_sql,"") RETURNING g_rtn_fields
   LET r_ooibl004 = '', g_rtn_fields[1] , ''
   RETURN r_ooibl004
END FUNCTION

PRIVATE FUNCTION axmt410_xmfd017_ref(p_xmahl001)
   DEFINE p_xmahl001     LIKE xmahl_t.xmahl001
   DEFINE r_xmahl003     LIKE xmahl_t.xmahl003
   DEFINE l_sql          STRING

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_xmahl001
   LET l_sql =  "SELECT xmahl003 ",
                "  FROM xmahl_t ",
                " WHERE xmahlent='"||g_enterprise||"' ",
                "   AND xmahl001=? ",
                "   AND xmahl002='"||g_dlang||"'"
   CALL ap_ref_array2(g_ref_fields,l_sql,"") RETURNING g_rtn_fields
   LET r_xmahl003 = '', g_rtn_fields[1] , ''

   RETURN r_xmahl003
END FUNCTION

PRIVATE FUNCTION axmt410_xmfd018_chk(p_xmfd018)
   DEFINE p_xmfd018     LIKE xmfd_t.xmfd018
   DEFINE r_success     LIKE type_t.num5
   DEFINE l_msg1        LIKE gzze_t.gzze003   #160621-00003#3 20160629 add by beckxie
   
   LET r_success = TRUE

   #160621-00003#3 20160629 add by beckxie---S
   LET l_msg1 = ''
   SELECT gzze003 INTO l_msg1 FROM gzze_t WHERE gzze001 = 'aoo-00708' AND gzze002 = g_dlang 
   #160621-00003#3 20160629 add by beckxie---E
   
   IF NOT cl_null(p_xmfd018) THEN
      #160621-00003#3 20160627 modify by beckxie---S
      #IF NOT s_azzi650_chk_exist('275',p_xmfd018) THEN
      INITIALIZE g_chkparam.* TO NULL
      LET g_chkparam.arg1 = p_xmfd018
      LET g_chkparam.arg2 = '1'
      LET g_chkparam.err_str[1] = "aoo-00299|",l_msg1
      IF NOT cl_chk_exist("v_oojd001") THEN
      #160621-00003#3 20160627 modify by beckxie---E
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF

   RETURN r_success
END FUNCTION

PRIVATE FUNCTION axmt410_xmfd022_ref(p_xmfd003,p_xmfd022)
   DEFINE p_xmfd003      LIKE xmfd_t.xmfd003
   DEFINE p_xmfd022      LIKE xmfd_t.xmfd022
   DEFINE l_success      LIKE type_t.num5
   DEFINE l_address      STRING
   DEFINE l_pmaa027      LIKE pmaa_t.pmaa027
   DEFINE r_xmfd022_desc LIKE oofb_t.oofb011
   DEFINE r_oofb017      LIKE oofb_t.oofb017

   LET r_xmfd022_desc = ''
   LET r_oofb017 = '' 
   
   IF cl_null(p_xmfd022) THEN
      RETURN '',''
   END IF 
   
   IF NOT cl_null(p_xmfd003) THEN
      CALL s_axmt500_get_pmaa027(p_xmfd003) RETURNING l_pmaa027
      IF NOT cl_null(l_pmaa027) THEN
         SELECT oofb011 INTO r_xmfd022_desc
           FROM oofb_t
          WHERE oofbent  = g_enterprise
            AND oofb002  = l_pmaa027
            AND oofbstus = 'Y'
            AND oofb019  = p_xmfd022

         #呼叫地址組合應用元件，將組合好的聯絡地址顯示在下方
         CALL s_aooi350_get_address(l_pmaa027,p_xmfd022,g_dlang)RETURNING l_success,l_address
         IF l_success THEN
            LET r_oofb017 = l_address
         END IF
      END IF
   END IF

   RETURN r_xmfd022_desc,r_oofb017
END FUNCTION

################################################################################
# Descriptions...: 範本編號+版本檢查
# Memo...........:
# Usage..........: CALL axmt410_chk_xmfa(p_xmfadocno)
# Input parameter: p_xmfadocno：範本編號
# Date & Author..: 2014/07/07 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt410_chk_xmfa(p_xmfadocno)
   DEFINE p_xmfadocno     LIKE xmfa_t.xmfadocno
   DEFINE l_cnt           LIKE type_t.num5

   LET g_errno = ''
   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt
     FROM xmfa_t
    WHERE xmfaent   = g_enterprise
      AND xmfadocno = p_xmfadocno

   IF cl_null(l_cnt) OR l_cnt = 0 THEN
      LET g_errno = 'axm-00341'      #此範本編號不存在！  
      RETURN
   END IF

   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt
     FROM xmfa_t
    WHERE xmfaent   = g_enterprise
      AND xmfadocno = p_xmfadocno
      AND xmfastus  = 'Y'

   IF cl_null(l_cnt) OR l_cnt = 0 THEN
#      LET g_errno = 'abg-00008'      #輸入的資料無效!    #160318-00005#49  mark
      LET g_errno = 'sub-01302'      #輸入的資料無效!     #160318-00005#49  add
      RETURN
   END IF
END FUNCTION

################################################################################
# Descriptions...: 取得運輸類型
# Memo...........:
# Usage..........: CALL axmt410_get_oocq019(p_oocq002)
#                  RETURNING r_oocq029
# Input parameter: p_oocq002
# Return code....: r_oocq019
# Date & Author..: 2014/07/07 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt410_get_oocq019(p_oocq002)
   DEFINE p_oocq002     LIKE oocq_t.oocq002
   DEFINE r_oocq019     LIKE oocq_t.oocq019

   LET r_oocq019 = ''
   SELECT oocq019 INTO r_oocq019
     FROM oocq_t
    WHERE oocq001 = '263'
      AND oocq002 = p_oocq002
      AND oocqent = g_enterprise    #160902-00048#2

   RETURN r_oocq019
END FUNCTION

################################################################################
# Descriptions...: 產品特徵類別
# Memo...........:
# Usage..........: CALL axmt410_imaa005_exists()
#                  RETURNING TRUE/FALSE
# Return code....: TRUE/FALSE
# Date & Author..: 2014/07/07 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt410_imaa005_exists()
   DEFINE l_imaa005     LIKE imaa_t.imaa005

   IF cl_null(g_xmff_d[l_ac].xmff001) THEN
      RETURN FALSE
   END IF

   LET l_imaa005 = ''
   SELECT imaa005 INTO l_imaa005
     FROM imaa_t
    WHERE imaaent = g_enterprise
      AND imaa001 = g_xmff_d[l_ac].xmff001
   IF cl_null(l_imaa005) THEN
      RETURN FALSE
   END IF

   RETURN TRUE
END FUNCTION

################################################################################
# Descriptions...: 如果此資料有分量計價的資料 也要一起被清除
# Memo...........:
# Usage..........: CALL axmt410_del_xmfg(p_flag)
# Date & Author..: 2014/07/08 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt410_del_xmfg(p_flag)
   DEFINE p_flag        LIKE type_t.chr1
   DEFINE l_xmff005     LIKE xmff_t.xmff005

   LET g_errno = ''

   LET l_xmff005 = ''
   SELECT xmff005 INTO l_xmff005
     FROM xmff_t
    WHERE xmffent = g_enterprise
      AND xmffdocno = g_xmfd_m.xmfddocno
      AND xmffseq = g_xmff_d_t.xmffseq

   IF l_xmff005 = p_flag THEN
      DELETE FROM xmfg_t WHERE xmfgent = g_enterprise
                           AND xmfgdocno = g_xmfd_m.xmfddocno
                           AND xmfgseq = g_xmff_d_t.xmffseq
      IF SQLCA.sqlcode THEN
         LET g_errno = SQLCA.sqlcode
      END IF
   END IF
END FUNCTION

################################################################################
# Descriptions...: 取得未稅金額、含稅金額、稅額
# Memo...........:
# Usage..........: CALL axmt410_get_amount(p_xmfddocno,p_xmffseq,p_xmff006,p_xmff007,p_xmfd010,p_xmfd012)
#                  RETURNING r_xrcd103,r_xrcd104,r_xrcd105
# Input parameter: p_xmfddocno:單號
#                : p_xmffseq  :項次 
#                : p_xmff006  :計價數量 
#                : p_xmff007  :單價 
#                : p_xmfd010  :幣別 
#                : p_xmfd012  :稅別 
# Return code....: r_xrcd103  :原幣未稅金額 
#                : r_xrcd104  :原幣稅額 
#                : r_xrcd105  :原幣含稅金額 
# Date & Author..: 2014/07/16 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt410_get_amount(p_xmfddocno,p_xmffseq,p_xmff006,p_xmff007,p_xmfd010,p_xmfd012)
   DEFINE p_xmfddocno    LIKE xmfd_t.xmfddocno   #單號 
   DEFINE p_xmffseq      LIKE xmff_t.xmffseq     #項次 
   DEFINE p_xmff006      LIKE xmff_t.xmff006     #計價數量 
   DEFINE p_xmff007      LIKE xmff_t.xmff007     #單價 
   DEFINE p_xmfd010      LIKE xmfd_t.xmfd010     #幣別 
   DEFINE p_xmfd012      LIKE xmfd_t.xmfd012     #稅別 
   DEFINE l_money        LIKE xrcd_t.xrcd113
   DEFINE l_xrcd113      LIKE xrcd_t.xrcd113     #本幣未稅金額 
   DEFINE l_xrcd114      LIKE xrcd_t.xrcd114     #本幣稅額 
   DEFINE l_xrcd115      LIKE xrcd_t.xrcd115     #本幣含稅金額 
   DEFINE l_xrcd123      LIKE xrcd_t.xrcd123     #本位幣二未稅金額 
   DEFINE l_xrcd124      LIKE xrcd_t.xrcd124     #本位幣二稅額 
   DEFINE l_xrcd125      LIKE xrcd_t.xrcd125     #本位幣二含稅金額 
   DEFINE l_xrcd133      LIKE xrcd_t.xrcd133     #本位幣三未稅金額 
   DEFINE l_xrcd134      LIKE xrcd_t.xrcd134     #本位幣三稅額 
   DEFINE l_xrcd135      LIKE xrcd_t.xrcd135     #本位幣三含稅金額  
   DEFINE r_xrcd103      LIKE xrcd_t.xrcd103     #原幣未稅金額 
   DEFINE r_xrcd104      LIKE xrcd_t.xrcd104     #原幣稅額 
   DEFINE r_xrcd105      LIKE xrcd_t.xrcd105     #原幣含稅金額  
   
   LET r_xrcd103 = 0
   LET r_xrcd104 = 0
   LET r_xrcd105 = 0

   IF cl_null(p_xmfddocno) OR cl_null(p_xmffseq) OR cl_null(p_xmff006) OR
      cl_null(p_xmff007) OR cl_null(p_xmfd010) OR cl_null(p_xmfd012) THEN
      RETURN r_xrcd103,r_xrcd104,r_xrcd105
   END IF

   #金額=數量*單價  
   LET l_money = p_xmff006 * p_xmff007

   #              單號        項次                       稅別      數量      幣別      匯率 
   CALL s_tax_ins(p_xmfddocno,p_xmffseq,0,g_site,l_money,p_xmfd012,p_xmff006,p_xmfd010,1,'','','')
        RETURNING r_xrcd103,r_xrcd104,r_xrcd105,
                  l_xrcd113,l_xrcd114,l_xrcd115,
                  l_xrcd123,l_xrcd124,l_xrcd125,
                  l_xrcd133,l_xrcd134,l_xrcd135

   RETURN r_xrcd103,r_xrcd104,r_xrcd105
END FUNCTION

################################################################################
# Descriptions...: 由客戶資料取得欄位預設值 
# Memo...........:
# Usage..........: CALL axmt410_from_xmfd003_default()
# Date & Author..: 2014/04/17 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt410_from_xmfd003_default()
   DEFINE l_success              LIKE type_t.num5
   DEFINE l_controlno            LIKE ooha_t.ooha001      #控制組編號  
   DEFINE l_ooab002              LIKE ooab_t.ooab002
   DEFINE l_oodb011              LIKE oodb_t.oodb011 
   
   #控制組編號 
   CALL s_control_get_group('2',g_xmfd_m.xmfd001,g_xmfd_m.xmfd002)
        RETURNING l_success,l_controlno

   IF l_success AND (NOT cl_null(l_controlno)) THEN
      #xmae003:幣別     xmae004:稅別   xmae006:收款條件 xmae008:銷售通路 
      #xmad011:運送方式 xmad012:起運地 xmad013:目的地   xmae020:交易條件
      #xmae021:取價方式 
      SELECT xmae003, xmae004, xmae006, xmae008, xmae011,
             xmae012, xmae013, xmae020, xmae021
        INTO g_xmfd_m.xmfd010, g_xmfd_m.xmfd012, g_xmfd_m.xmfd016,
             g_xmfd_m.xmfd018, g_xmfd_m.xmfd019, g_xmfd_m.xmfd020,
             g_xmfd_m.xmfd021, g_xmfd_m.xmfd015, g_xmfd_m.xmfd017
        FROM xmae_t
       WHERE xmaeent  = g_enterprise
         AND xmae001  = g_xmfd_m.xmfd003
         AND xmae002  = l_controlno
         #stellar 140815 add ----------------------(S)
         #AND xmaestus = 'Y'
         #不用狀態碼
         #stellar 140815 add ----------------------(E)
   ELSE 
      #pmab083:幣別     pmab084:稅別   pmab087:收款條件 pmab088:銷售通路 
      #pmab090:運送方式 pmab091:起運地 pmab092:目的地   pmab103:交易條件 
      #pmab104:取價方式 
      SELECT pmab083, pmab084, pmab087, pmab088, pmab090,
             pmab091, pmab092, pmab103, pmab104
        INTO g_xmfd_m.xmfd010, g_xmfd_m.xmfd012, g_xmfd_m.xmfd016,
             g_xmfd_m.xmfd018, g_xmfd_m.xmfd019, g_xmfd_m.xmfd020,
             g_xmfd_m.xmfd021, g_xmfd_m.xmfd015, g_xmfd_m.xmfd017
        FROM pmab_t
       WHERE pmabent  = g_enterprise
         AND pmabsite = g_site
         AND pmab001  = g_xmfd_m.xmfd003
         #stellar 140815 add ----------------------(S)
         #AND pmabstus = 'Y'
         #不用狀態碼
         #stellar 140815 add ----------------------(E)
   END IF 
   
   #取匯率 
   CALL axmt410_get_xmfd011(g_xmfd_m.xmfd010) RETURNING g_xmfd_m.xmfd011 
   
   #利用稅別檢查 取得稅率與單價含稅否 
   #stellar 140828 add ----------------------(S)
   #CALL s_tax_chk(g_site,g_xmfd_m.xmfd012)
   #     RETURNING l_success,g_xmfd_m.xmfd012_desc,g_xmfd_m.xmfd014,
   #               g_xmfd_m.xmfd013,l_oodb011
   #判斷無值時，就不處理
   IF NOT cl_null(g_xmfd_m.xmfd012) THEN
      CALL s_tax_chk(g_site,g_xmfd_m.xmfd012)
           RETURNING l_success,g_xmfd_m.xmfd012_desc,g_xmfd_m.xmfd014,
                     g_xmfd_m.xmfd013,l_oodb011
   END IF
   #stellar 140828 add ----------------------(E) 
   
   LET g_xmfd_m_o.xmfd010 = g_xmfd_m.xmfd010 
   LET g_xmfd_m_o.xmfd012 = g_xmfd_m.xmfd012 
   LET g_xmfd_m_o.xmfd016 = g_xmfd_m.xmfd016 
   LET g_xmfd_m_o.xmfd018 = g_xmfd_m.xmfd018 
   LET g_xmfd_m_o.xmfd019 = g_xmfd_m.xmfd019 
   LET g_xmfd_m_o.xmfd020 = g_xmfd_m.xmfd020 
   LET g_xmfd_m_o.xmfd021 = g_xmfd_m.xmfd021 
   LET g_xmfd_m_o.xmfd015 = g_xmfd_m.xmfd015 
   LET g_xmfd_m_o.xmfd017 = g_xmfd_m.xmfd017 
   LET g_xmfd_m_o.xmfd011 = g_xmfd_m.xmfd011 
   LET g_xmfd_m_o.xmfd013 = g_xmfd_m.xmfd013 
   LET g_xmfd_m_o.xmfd014 = g_xmfd_m.xmfd014 

   #取得幣別的說明 
   CALL s_desc_get_currency_desc(g_xmfd_m.xmfd010)
        RETURNING g_xmfd_m.xmfd010_desc
   DISPLAY BY NAME g_xmfd_m.xmfd010_desc

   #取得稅別的說明 
   CALL s_desc_get_tax_desc1(g_site,g_xmfd_m.xmfd012)
        RETURNING g_xmfd_m.xmfd012_desc
   DISPLAY BY NAME g_xmfd_m.xmfd012_desc

   #取得交易條件的說明  
   CALL s_desc_get_acc_desc('238',g_xmfd_m.xmfd015)
        RETURNING g_xmfd_m.xmfd015_desc
   DISPLAY BY NAME g_xmfd_m.xmfd015_desc

   #取得收款條件的說明 
   CALL axmt410_xmfd016_ref(g_xmfd_m.xmfd016)
        RETURNING g_xmfd_m.xmfd016_desc
   DISPLAY BY NAME g_xmfd_m.xmfd016_desc 
   
   #取得取價方式的說明 
   CALL axmt410_xmfd017_ref(g_xmfd_m.xmfd017)
        RETURNING g_xmfd_m.xmfd017_desc
   DISPLAY BY NAME g_xmfd_m.xmfd017_desc

   #取得銷售通路的說明 
   #160621-00003#3 20160629 modify by beckxie---S
   #CALL s_desc_get_acc_desc('275',g_xmfd_m.xmfd018) RETURNING g_xmfd_m.xmfd018_desc
   CALL s_desc_get_oojdl003_desc(g_xmfd_m.xmfd018) RETURNING g_xmfd_m.xmfd018_desc
   #160621-00003#3 20160629 modify by beckxie---E
   DISPLAY BY NAME g_xmfd_m.xmfd018_desc

   #取得運輸方式的說明 
   CALL s_desc_get_acc_desc('263',g_xmfd_m.xmfd019)
        RETURNING g_xmfd_m.xmfd019_desc
   DISPLAY BY NAME g_xmfd_m.xmfd019_desc

   #取得起運地的說明 
   CALL s_apmi011_location_ref(g_xmfd_m.xmfd019,g_xmfd_m.xmfd020)
        RETURNING g_xmfd_m.xmfd020_desc
   DISPLAY BY NAME g_xmfd_m.xmfd020_desc

   #取得目的地的說明 
   CALL s_apmi011_location_ref(g_xmfd_m.xmfd019,g_xmfd_m.xmfd021)
        RETURNING g_xmfd_m.xmfd021_desc
   DISPLAY BY NAME g_xmfd_m.xmfd021_desc 
   
   DISPLAY BY NAME g_xmfd_m.xmfd010, g_xmfd_m.xmfd011, g_xmfd_m.xmfd012,
                   g_xmfd_m.xmfd015, g_xmfd_m.xmfd016, g_xmfd_m.xmfd017,
                   g_xmfd_m.xmfd018, g_xmfd_m.xmfd019, g_xmfd_m.xmfd020,
                   g_xmfd_m.xmfd021 
END FUNCTION

################################################################################
# Descriptions...: 重取單價 
# Memo...........:
# Usage..........: CALL axmt410_change_xmff007()
# Date & Author..: 2014/07/17 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt410_change_xmff007()
   DEFINE l_sql     STRING
   DEFINE l_xmffseq LIKE xmff_t.xmffseq    #項次  
   DEFINE l_xmff001 LIKE xmff_t.xmff001    #料號   
   DEFINE l_xmff002 LIKE xmff_t.xmff002    #產品特徵  
   DEFINE l_xmff004 LIKE xmff_t.xmff004    #單位  
   DEFINE l_xmff006 LIKE xmff_t.xmff006    #數量  
   DEFINE l_xmff007 LIKE xmff_t.xmff007    #單價  
   DEFINE l_xmdc040 LIKE xmdc_t.xmdc040
   DEFINE l_xmdc041 LIKE xmdc_t.xmdc041
   DEFINE l_xmdc042 LIKE xmdc_t.xmdc042
   DEFINE l_xmdc043 LIKE xmdc_t.xmdc043
   DEFINE l_xmff008 LIKE xmff_t.xmff008
   DEFINE l_xmff009 LIKE xmff_t.xmff009
   DEFINE l_xmff010 LIKE xmff_t.xmff010  
   DEFINE l_xmff011 LIKE xmff_t.xmff011
   DEFINE l_xmff012 LIKE xmff_t.xmff012
   DEFINE l_xmff013 LIKE xmff_t.xmff013
   
   LET l_sql = "SELECT xmffseq,xmff001,xmff002,xmff004,xmff006 ",
               "  FROM xmff_t ",
               " WHERE xmffent = '",g_enterprise,"' ",
               "   AND xmffsite = '",g_site,"' ",
               "   AND xmffdocno = '",g_xmfd_m.xmfddocno,"' ",
               " ORDER BY xmffseq "
   PREPARE axmt410_change_xmff007_prep FROM l_sql
   DECLARE axmt410_change_xmff007_curs CURSOR WITH HOLD FOR axmt410_change_xmff007_prep

   FOREACH axmt410_change_xmff007_curs INTO l_xmffseq,l_xmff001,l_xmff002,l_xmff004,l_xmff006
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam.* TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'foreach:'
         LET g_errparam.popup = TRUE
         CALL cl_err()
         EXIT FOREACH
      END IF

      #單身重新取價  
      CALL s_sale_price_get(g_xmfd_m.xmfd017,g_xmfd_m.xmfd003,l_xmff001,
                            l_xmff002,g_xmfd_m.xmfd010,g_xmfd_m.xmfd012,
                            g_xmfd_m.xmfd016,g_xmfd_m.xmfd015,g_xmfd_m.xmfd018,
                            g_xmfd_m.xmfddocno,g_xmfd_m.xmfddocdt,l_xmff004,
                            l_xmff006,g_site,'1','1')
           RETURNING l_xmdc040,l_xmdc043,l_xmdc041,l_xmdc042
      IF l_xmdc040 = 'X' THEN    #X取不到單價 
         LET l_xmdc040 = ''
      ELSE
         LET l_xmff007 = l_xmdc043
      END IF

      #重新計算含稅未稅金額 
      CALL axmt410_get_amount(g_xmfd_m.xmfddocno,l_xmffseq,l_xmff006,l_xmff007,
                              g_xmfd_m.xmfd010,g_xmfd_m.xmfd012)
           RETURNING l_xmff008,l_xmff010,l_xmff009 
      
      #取得標準成本單價 
      CALL axmt410_get_xmff011(l_xmff001,l_xmff002,l_xmff004)
           RETURNING l_xmff011
      #取得預估毛利率   
      CALL axmt410_get_xmff012(l_xmff006,l_xmff008,l_xmff011)
           RETURNING l_xmff012
      #取得預估毛利金額  
      CALL axmt410_get_xmff013(l_xmff006,l_xmff008,l_xmff011)
           RETURNING l_xmff013

      UPDATE xmff_t SET xmff007 = l_xmff007,
                        xmff008 = l_xmff008,
                        xmff009 = l_xmff009,
                        xmff010 = l_xmff010,
                        xmff011 = l_xmff011,
                        xmff012 = l_xmff012,
                        xmff013 = l_xmff013
       WHERE xmffent = g_enterprise
         AND xmffsite = g_site
         AND xmffdocno = g_xmfd_m.xmfddocno
         AND xmffseq = l_xmffseq

   END FOREACH 
   
   CALL axmt410_b_fill()
END FUNCTION

################################################################################
# Descriptions...: 取得應用分類的參考欄位二
# Memo...........:
# Usage..........: CALL axmt410_get_oocq005(p_oocq001,p_oocq002)
#                  RETURNING r_oocq005
# Input parameter: p_oocq001：應用分類
#                : p_oocq002：應用分類碼
# Return code....: r_oocq005：參考欄位二
# Date & Author..: 2014/07/17 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt410_get_oocq005(p_oocq001,p_oocq002)
   DEFINE p_oocq001     LIKE oocq_t.oocq001
   DEFINE p_oocq002     LIKE oocq_t.oocq002
   DEFINE r_oocq005     LIKE oocq_t.oocq005

   LET r_oocq005 = ''
   SELECT oocq005 INTO r_oocq005
     FROM oocq_t
    WHERE oocqent = g_enterprise
      AND oocq001 = p_oocq001
      AND oocq002 = p_oocq002
      AND oocqstus = 'Y'

   RETURN r_oocq005
END FUNCTION

################################################################################
# Descriptions...: 由應用元件產生單身資料
# Memo...........:
# Usage..........: CALL axmt410_from_sub_get_body1()
# Date & Author..: 2014/07/18 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt410_from_sub_get_body1()
   DEFINE l_success       LIKE type_t.num5
   DEFINE l_s_item_select DYNAMIC ARRAY OF RECORD
                             imaa009            LIKE imaa_t.imaa009,    #產品分類
                             imaa001            LIKE imaa_t.imaa001,    #料件編號
                             inam002            LIKE inam_t.inam002,    #產品特徵
                             imaf053            LIKE imaf_t.imaf053,    #單位 
                             dat                LIKE type_t.dat,        #交貨日期
                             num                LIKE type_t.num20_6     #數量
                          END RECORD 
   DEFINE l_xmff          RECORD
                             xmffent     LIKE xmff_t.xmffent,     #企業編號  
                             xmffsite    LIKE xmff_t.xmffsite,    #營運據點  
                             xmffdocno   LIKE xmff_t.xmffdocno,   #報價單號  
                             xmffseq     LIKE xmff_t.xmffseq,     #項次  
                             xmff001     LIKE xmff_t.xmff001,     #料件編號  
                             xmff002     LIKE xmff_t.xmff002,     #產品特徵  
                             xmff003     LIKE xmff_t.xmff003,     #客戶料號  
                             xmff004     LIKE xmff_t.xmff004,     #銷售單位  
                             xmff005     LIKE xmff_t.xmff005,     #分量計價  
                             xmff006     LIKE xmff_t.xmff006,     #數量 
                             xmff007     LIKE xmff_t.xmff007,     #報價單價  
                             xmff008     LIKE xmff_t.xmff008,     #未稅金額  
                             xmff009     LIKE xmff_t.xmff009,     #含稅金額  
                             xmff010     LIKE xmff_t.xmff010,     #稅額  
                             xmff011     LIKE xmff_t.xmff011,     #標準成本單價  
                             xmff012     LIKE xmff_t.xmff012,     #預估毛利率   
                             xmff013     LIKE xmff_t.xmff013,     #預估毛利金額  
                             xmff014     LIKE xmff_t.xmff014      #備註  
                          END RECORD
   DEFINE l_cnt           LIKE type_t.num5
   DEFINE l_i             LIKE type_t.num5

   CALL s_transaction_begin()

   LET l_success = TRUE
   CALL l_s_item_select.clear() 
   
   CALL s_item_select('N') RETURNING l_success,l_s_item_select

   IF NOT l_success THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF

   LET l_cnt = ''
   SELECT MAX(xmffseq)+1 INTO l_cnt
     FROM xmff_t
    WHERE xmffent = g_enterprise
      AND xmffdocno = g_xmfd_m.xmfddocno
   IF cl_null(l_cnt) OR l_cnt = 0 THEN
      LET l_cnt = 1
   END IF

   FOR l_i = 1 TO l_s_item_select.getLength()
      INITIALIZE l_xmff.* TO NULL
      LET l_xmff.xmffent   = g_enterprise
      LET l_xmff.xmffsite  = g_site
      LET l_xmff.xmffdocno = g_xmfd_m.xmfddocno
      LET l_xmff.xmffseq   = l_cnt
      LET l_xmff.xmff001   = l_s_item_select[l_i].imaa001
      LET l_xmff.xmff002   = l_s_item_select[l_i].inam002
      LET l_xmff.xmff003   = '' 
      IF l_success THEN
         #由交易對象 料號 產品特徵 來取得 客戶料號 
         CALL s_apmi070_get_pmao004(g_xmfd_m.xmfd003,
                                    l_xmff.xmff001,
                                    l_xmff.xmff002)
              RETURNING l_success,l_xmff.xmff003
      END IF
      
      LET l_xmff.xmff004   = l_s_item_select[l_i].imaf053
      LET l_xmff.xmff005   = 'N'
      LET l_xmff.xmff006   = l_s_item_select[l_i].num
      LET l_xmff.xmff007   = 0
      LET l_xmff.xmff008   = 0
      LET l_xmff.xmff009   = 0
      LET l_xmff.xmff010   = 0
      LET l_xmff.xmff011   = 0 
      CALL axmt410_get_xmff011(l_xmff.xmff001,l_xmff.xmff002,l_xmff.xmff004)
           RETURNING l_xmff.xmff011
      LET l_xmff.xmff012   = 0
      #取得預估毛利率   
      CALL axmt410_get_xmff012(l_xmff.xmff006,l_xmff.xmff008,l_xmff.xmff011)
           RETURNING l_xmff.xmff012
      LET l_xmff.xmff013   = 0
      #取得預估毛利金額  
      CALL axmt410_get_xmff013(l_xmff.xmff006,l_xmff.xmff008,l_xmff.xmff011)
           RETURNING l_xmff.xmff013
      LET l_xmff.xmff014   = ''

      LET l_cnt = l_cnt + 1
      INSERT INTO xmff_t(xmffent,xmffsite,xmffdocno,xmffseq,xmff001,
                         xmff002,xmff003,xmff004,xmff005,xmff006,xmff007,
                         xmff008,xmff009,xmff010,xmff011,xmff012,xmff013,
                         xmff014)
                  VALUES(l_xmff.xmffent,l_xmff.xmffsite,l_xmff.xmffdocno,
                         l_xmff.xmffseq,l_xmff.xmff001,l_xmff.xmff002,
                         l_xmff.xmff003,l_xmff.xmff004,l_xmff.xmff005,
                         l_xmff.xmff006,l_xmff.xmff007,l_xmff.xmff008,
                         l_xmff.xmff009,l_xmff.xmff010,l_xmff.xmff011,
                         l_xmff.xmff012,l_xmff.xmff013,l_xmff.xmff014)
      IF SQLCA.sqlcode THEN
         LET l_success = FALSE
         EXIT FOR
      END IF
   END FOR
   
   IF l_success THEN
      CALL s_transaction_end('Y','0')
      CALL axmt410_b_fill()
   ELSE
      CALL s_transaction_end('N','0')
   END IF
   
END FUNCTION

################################################################################
# Descriptions...: 由報價範本產生單身資料
# Memo...........:
# Usage..........: CALL axmt410_from_sub_get_body2()
#                  RETURNING r_success
# Return code....: r_success : true/false
# Date & Author..: 2014/07/17 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt410_from_sub_get_body2()
   DEFINE l_xmfc                 DYNAMIC ARRAY OF RECORD
                                    xmfb0031           LIKE type_t.chr10,
                                    xmfb0031_desc      LIKE type_t.chr500,
                                    xmfc0021           LIKE type_t.num10,
                                    xmfc0031           LIKE type_t.num10,
                                    xmfc0041           LIKE type_t.chr500,
                                    xmfc0041_desc      LIKE type_t.chr500,
                                    xmfc0041_desc_desc LIKE type_t.chr500,
                                    xmfc0051           LIKE type_t.chr500, 
                                    xmfc0051_desc      LIKE type_t.chr500,
                                    xmfc0071           LIKE type_t.chr10,
                                    xmfc0061           LIKE type_t.num20_6,
                                    xmfc0081           LIKE type_t.chr500
                                 END RECORD
   DEFINE l_xmff                 RECORD
                                    xmffent     LIKE xmff_t.xmffent,     #企業編號  
                                    xmffsite    LIKE xmff_t.xmffsite,    #營運據點  
                                    xmffdocno   LIKE xmff_t.xmffdocno,   #報價單號  
                                    xmffseq     LIKE xmff_t.xmffseq,     #項次  
                                    xmff001     LIKE xmff_t.xmff001,     #料件編號  
                                    xmff002     LIKE xmff_t.xmff002,     #產品特徵  
                                    xmff003     LIKE xmff_t.xmff003,     #客戶料號  
                                    xmff004     LIKE xmff_t.xmff004,     #銷售單位  
                                    xmff005     LIKE xmff_t.xmff005,     #分量計價  
                                    xmff006     LIKE xmff_t.xmff006,     #數量 
                                    xmff007     LIKE xmff_t.xmff007,     #報價單價  
                                    xmff008     LIKE xmff_t.xmff008,     #未稅金額  
                                    xmff009     LIKE xmff_t.xmff009,     #含稅金額  
                                    xmff010     LIKE xmff_t.xmff010,     #稅額  
                                    xmff011     LIKE xmff_t.xmff011,     #標準成本單價  
                                    xmff012     LIKE xmff_t.xmff012,     #預估毛利率   
                                    xmff013     LIKE xmff_t.xmff013,     #預估毛利金額  
                                    xmff014     LIKE xmff_t.xmff014      #備註  
                                 END RECORD
   DEFINE l_cnt                  LIKE type_t.num5
   DEFINE l_i                    LIKE type_t.num5
   DEFINE r_success              LIKE type_t.num5
   DEFINE l_xmaw001              LIKE xmaw_t.xmaw001

   LET r_success = TRUE 
   
   CALL l_xmfc.clear() 
   
   CALL axmt410_02_new(g_xmfd_m.xmfd009) RETURNING l_xmfc

   LET l_cnt = 1
   FOR l_i = 1 TO l_xmfc.getLength()
      INITIALIZE l_xmff.* TO NULL
      LET l_xmff.xmffent = g_enterprise
      LET l_xmff.xmffsite = g_site
      LET l_xmff.xmffdocno = g_xmfd_m.xmfddocno
      LET l_xmff.xmffseq = l_cnt
      LET l_xmff.xmff001 = l_xmfc[l_i].xmfc0041
      LET l_xmff.xmff002 = l_xmfc[l_i].xmfc0051
      LET l_xmff.xmff003 = ''
      LET l_xmff.xmff004 = l_xmfc[l_i].xmfc0071
      LET l_xmff.xmff005 = 'N'
      LET l_xmff.xmff006 = l_xmfc[l_i].xmfc0061
      LET l_xmff.xmff007 = 0
      LET l_xmff.xmff008 = 0
      LET l_xmff.xmff009 = 0
      LET l_xmff.xmff010 = 0
      LET l_xmff.xmff011 = 0       #標準成本單價  
      CALL axmt410_get_xmff011(l_xmff.xmff001,l_xmff.xmff002,l_xmff.xmff004)
           RETURNING l_xmff.xmff011

      LET l_xmff.xmff012 = 0   #預估毛利率   
      #取得預估毛利率   
      CALL axmt410_get_xmff012(l_xmff.xmff006,l_xmff.xmff008,l_xmff.xmff011)
           RETURNING l_xmff.xmff012
      LET l_xmff.xmff013 = 0   #預估毛利金額  
      CALL axmt410_get_xmff013(l_xmff.xmff006,l_xmff.xmff008,l_xmff.xmff011)
           RETURNING l_xmff.xmff013
      LET l_cnt = l_cnt + 1

      INSERT INTO xmff_t(xmffent,xmffsite,xmffdocno,xmffseq,
                         xmff001,xmff002,xmff003,xmff004,xmff005,
                         xmff006,xmff007,xmff008,xmff009,xmff010,
                         xmff011,xmff012,xmff013,xmff014)
                  VALUES(l_xmff.xmffent,l_xmff.xmffsite,l_xmff.xmffdocno,
                         l_xmff.xmffseq,l_xmff.xmff001,l_xmff.xmff002,
                         l_xmff.xmff003,l_xmff.xmff004,l_xmff.xmff005,
                         l_xmff.xmff006,l_xmff.xmff007,l_xmff.xmff008,
                         l_xmff.xmff009,l_xmff.xmff010,l_xmff.xmff011,
                         l_xmff.xmff012,l_xmff.xmff013,l_xmff.xmff014)
      IF SQLCA.sqlcode THEN
         LET r_success = FALSE
      END IF 
   END FOR

   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 取匯率
# Memo...........:
# Usage..........: CALL axmt410_get_xmfd011(p_xmfd010)
#                  RETURNING r_xmfd011
# Input parameter: p_xmfd010：幣別
# Return code....: r_xmfd011：匯率
# Date & Author..: 2014/07/17 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt410_get_xmfd011(p_xmfd010)
   DEFINE p_xmfd010     LIKE xmfd_t.xmfd010
   DEFINE r_xmfd011     LIKE xmfd_t.xmfd011
   DEFINE l_ooab002     LIKE ooab_t.ooab002
   DEFINE l_ooef016     LIKE ooef_t.ooef016


   LET r_xmfd011 = 0

   IF NOT cl_null(p_xmfd010) THEN
      LET l_ooef016 = ''
      SELECT ooef016 INTO l_ooef016
        FROM ooef_t
       WHERE ooefent = g_enterprise
         AND ooef001 = g_site

      CALL cl_get_para(g_enterprise,g_site,'S-BAS-0010') RETURNING l_ooab002
      CALL s_aooi160_get_exrate('1',g_site,g_today,p_xmfd010,l_ooef016,0,l_ooab002)
           RETURNING r_xmfd011
   END IF

   RETURN r_xmfd011
END FUNCTION

################################################################################
# Descriptions...: 取得標準成本單價
# Memo...........:
# Usage..........: CALL axmt410_get_xmff011(p_xmff001,p_xmff002,p_xmff004)
#                  RETURNING 回传参数
# Input parameter: p_xmff001：料號
#                : p_xmff002：產品特徵 
#                : p_xmff004：單位 
# Return code....: r_xmff011：標準成本單價 
# Date & Author..: 2014/07/18 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt410_get_xmff011(p_xmff001,p_xmff002,p_xmff004)
   DEFINE p_xmff001     LIKE xmff_t.xmff001    #料號  
   DEFINE p_xmff002     LIKE xmff_t.xmff002    #產品特徵  
   DEFINE p_xmff004     LIKE xmff_t.xmff004    #單位  
   DEFINE r_xmff011     LIKE xmff_t.xmff011
   DEFINE l_xmaw001     LIKE xmaw_t.xmaw001

   LET r_xmff011 = 0

   #取得銷售價格參照表號  
   LET l_xmaw001 = cl_get_para(g_enterprise,g_site,'S-BAS-0009')

   SELECT xmaw019 INTO r_xmff011
     FROM xmaw_t
    WHERE xmawent = g_enterprise
      AND xmaw001 = l_xmaw001                           #銷售價格參照表號   
      AND xmaw002 = g_xmfd_m.xmfd010                    #幣別   
      AND xmaw011 = p_xmff001                           #料件編號   
      AND NVL(xmaw012,' ') = NVL(p_xmff002,' ')         #產品特徵  
      AND NVL(xmaw013,' ') = NVL(p_xmff004,' ')         #計價單位   
      AND xmawstus = 'Y'
   IF cl_null(r_xmff011) THEN
      LET r_xmff011 = 0
   END IF

   RETURN r_xmff011
END FUNCTION

################################################################################
# Descriptions...: 取得預估毛利率
# Memo...........:
# Usage..........: CALL axmt410_get_xmff012(p_xmff006,p_xmff008,p_xmff011)
#                  RETURNING r_xmff012
# Input parameter: p_xmff006：數量
#                : p_xmff008：未稅金額  
#                : p_xmff011：標準成本 
# Return code....: r_xmff012：預估毛利率 
# Date & Author..: 2014/07/18 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt410_get_xmff012(p_xmff006,p_xmff008,p_xmff011)
   DEFINE p_xmff006     LIKE xmff_t.xmff006    #數量  
   DEFINE p_xmff008     LIKE xmff_t.xmff008    #未稅金額  
   DEFINE p_xmff011     LIKE xmff_t.xmff011
   DEFINE r_xmff012     LIKE xmff_t.xmff012

   LET r_xmff012 = 0
   IF cl_null(p_xmff006) THEN RETURN r_xmff012 END IF
   IF cl_null(p_xmff008) THEN RETURN r_xmff012 END IF
   IF cl_null(p_xmff011) THEN RETURN r_xmff012 END IF

   LET r_xmff012 = (p_xmff008 - (p_xmff011 * p_xmff006)) / p_xmff008

   RETURN r_xmff012
END FUNCTION

################################################################################
# Descriptions...: 取得預估毛利金額
# Memo...........:
# Usage..........: CALL axmt410_get_xmff013(p_xmff006,p_xmff008,p_xmff011)
#                  RETURNING r_xmff013
# Input parameter: p_xmff006：數量
#                : p_xmff008：未稅金額 
#                : p_xmff011：
# Return code....: r_xmff013：預估毛利金額 
# Date & Author..: 2014/07/18 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt410_get_xmff013(p_xmff006,p_xmff008,p_xmff011)
   DEFINE p_xmff006      LIKE xmff_t.xmff006   #數量  
   DEFINE p_xmff008      LIKE xmff_t.xmff008   #未稅金額  
   DEFINE p_xmff011      LIKE xmff_t.xmff011
   DEFINE r_xmff013      LIKE xmff_t.xmff013

   LET r_xmff013 = 0
   IF cl_null(p_xmff006) THEN RETURN r_xmff013 END IF
   IF cl_null(p_xmff008) THEN RETURN r_xmff013 END IF
   IF cl_null(p_xmff011) THEN RETURN r_xmff013 END IF

   LET r_xmff013 = p_xmff008 - (p_xmff011 * p_xmff006)

   RETURN r_xmff013
END FUNCTION

################################################################################
# Descriptions...: 更新單頭金額資訊
# Memo...........:
# Usage..........: CALL axmt410_amount()
# Date & Author..: 2014/07/21 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt410_amount()
   DEFINE l_xmfd024     LIKE xmfd_t.xmfd024     #預估銷售金額  
   DEFINE l_xmfd025     LIKE xmfd_t.xmfd025     #預估成本   
   DEFINE l_xmfd026     LIKE xmfd_t.xmfd026     #預估銷售費用  
   DEFINE l_xmfd027     LIKE xmfd_t.xmfd027     #預估毛利率  
   DEFINE l_xmfd028     LIKE xmfd_t.xmfd028     #預估利潤率  

   LET l_xmfd024 = 0
   LET l_xmfd025 = 0
   LET l_xmfd026 = 0
   LET l_xmfd027 = 0
   LET l_xmfd028 = 0

   SELECT SUM(xmff008),SUM(xmff006*xmff011)
     INTO l_xmfd024,l_xmfd025
     FROM xmff_t
    WHERE xmffent = g_enterprise
      AND xmffsite = g_site
      AND xmffdocno = g_xmfd_m.xmfddocno

   IF cl_null(l_xmfd024) THEN
      LET l_xmfd024 = 0
   END IF
   IF cl_null(l_xmfd025) THEN
      LET l_xmfd025 = 0
   END IF 
#mark shiun   
#   SELECT SUM(xmfe005) INTO l_xmfd026
#     FROM xmfe_t
#    WHERE xmfeent = g_enterprise
#      AND xmfesite = g_site
#      AND xmfedocno = g_xmfd_m.xmfddocno
#      AND xmfe001 = '2'                   #內含  

   SELECT SUM(xmfh004) INTO l_xmfd026
     FROM xmfh_t
    WHERE xmfhent   = g_enterprise
      AND xmfhsite  = g_site
      AND xmfhdocno = g_xmfd_m.xmfddocno

   IF cl_null(l_xmfd026) THEN
      LET l_xmfd026 = 0
   END IF

   IF l_xmfd024 <> 0 THEN     #因為預估銷售金額會當分母 所以不可為0   
      #預估毛利率與預估利潤率為百分比，所以要*100 
      LET l_xmfd027 = ((l_xmfd024 - l_xmfd025) / l_xmfd024) * 100

      LET l_xmfd028 = ((l_xmfd024 - l_xmfd025 - l_xmfd026) / l_xmfd024) * 100
   END IF

   UPDATE xmfd_t SET xmfd024 = l_xmfd024,
                     xmfd025 = l_xmfd025,
                     xmfd026 = l_xmfd026,
                     xmfd027 = l_xmfd027,
                     xmfd028 = l_xmfd028
    WHERE xmfdent = g_enterprise
      AND xmfdsite = g_site
      AND xmfddocno = g_xmfd_m.xmfddocno 
      
   LET g_xmfd_m.xmfd024 = l_xmfd024
   LET g_xmfd_m.xmfd025 = l_xmfd025
   LET g_xmfd_m.xmfd026 = l_xmfd026
   LET g_xmfd_m.xmfd027 = l_xmfd027
   LET g_xmfd_m.xmfd028 = l_xmfd028

   DISPLAY BY NAME g_xmfd_m.xmfd024,g_xmfd_m.xmfd025,
                   g_xmfd_m.xmfd026,g_xmfd_m.xmfd027,
                   g_xmfd_m.xmfd028
END FUNCTION

################################################################################
# Descriptions...: 計對xmfg頁面做重新填充的動作
# Memo...........:
# Usage..........: CALL axmt410_b_fill_for_xmfg()
# Date & Author..: 2014/07/21 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt410_b_fill_for_xmfg()
   DEFINE l_sql     STRING
   DEFINE l_cnt     LIKE type_t.num5

   LET l_sql = "SELECT xmfgseq,xmfg001,xmfg002,xmfg003,xmfg004,xmfgsite  FROM xmfg_t",
               " INNER JOIN xmfd_t ON xmfddocno = xmfgdocno ",
               " WHERE xmfgent=? AND xmfgdocno=?"
   LET l_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料

   IF NOT cl_null(g_wc2_table2) THEN
      LET l_sql = l_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
   END IF

   LET l_sql = l_sql, " ORDER BY xmfg_t.xmfgseq,xmfg_t.xmfg001,xmfg_t.xmfg002"

   LET l_sql = cl_sql_add_mask(l_sql)              #遮蔽特定資料
   PREPARE axmt410_for_xmfg_prep FROM l_sql
   DECLARE axmt410_for_xmfg_curs CURSOR FOR axmt410_for_xmfg_prep

   LET l_cnt = 1 
   FOREACH axmt410_for_xmfg_curs USING g_enterprise,g_xmfd_m.xmfddocno
                                 INTO g_xmff2_d[l_cnt].xmfgseq,g_xmff2_d[l_cnt].xmfg001,
                                      g_xmff2_d[l_cnt].xmfg002,g_xmff2_d[l_cnt].xmfg003,
                                      g_xmff2_d[l_cnt].xmfg004,g_xmff2_d[l_cnt].xmfgsite
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = 'foreach:'
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.popup  = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF

      LET l_cnt = l_cnt + 1
      IF l_cnt > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = ''
         LET g_errparam.code   = 9035
         LET g_errparam.popup  = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
   END FOREACH
END FUNCTION

################################################################################
# Descriptions...: 單別預設值
# Memo...........:
# Usage..........: CALL axmt410_slip_default()
# Date & Author..: 2014/08/07 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt410_slip_default()
   LET g_xmfd_m.xmfddocdt = s_aooi200_get_doc_default(g_site,'1',g_xmfd_m.xmfddocno,'xmfddocdt',g_xmfd_m.xmfddocdt)
   LET g_xmfd_m.xmfd001   = s_aooi200_get_doc_default(g_site,'1',g_xmfd_m.xmfddocno,'xmfd001',g_xmfd_m.xmfd001)
   LET g_xmfd_m.xmfd002   = s_aooi200_get_doc_default(g_site,'1',g_xmfd_m.xmfddocno,'xmfd002',g_xmfd_m.xmfd002)
   LET g_xmfd_m.xmfd003   = s_aooi200_get_doc_default(g_site,'1',g_xmfd_m.xmfddocno,'xmfd003',g_xmfd_m.xmfd003)
   LET g_xmfd_m.xmfd006   = s_aooi200_get_doc_default(g_site,'1',g_xmfd_m.xmfddocno,'xmfd006',g_xmfd_m.xmfd006)
   LET g_xmfd_m.xmfd007   = s_aooi200_get_doc_default(g_site,'1',g_xmfd_m.xmfddocno,'xmfd007',g_xmfd_m.xmfd007)
   LET g_xmfd_m.xmfd008   = s_aooi200_get_doc_default(g_site,'1',g_xmfd_m.xmfddocno,'xmfd008',g_xmfd_m.xmfd008)
   LET g_xmfd_m.xmfd009   = s_aooi200_get_doc_default(g_site,'1',g_xmfd_m.xmfddocno,'xmfd009',g_xmfd_m.xmfd009)
   LET g_xmfd_m.xmfd010   = s_aooi200_get_doc_default(g_site,'1',g_xmfd_m.xmfddocno,'xmfd010',g_xmfd_m.xmfd010)
   LET g_xmfd_m.xmfd011   = s_aooi200_get_doc_default(g_site,'1',g_xmfd_m.xmfddocno,'xmfd011',g_xmfd_m.xmfd011)
   LET g_xmfd_m.xmfd012   = s_aooi200_get_doc_default(g_site,'1',g_xmfd_m.xmfddocno,'xmfd012',g_xmfd_m.xmfd012)
   LET g_xmfd_m.xmfd013   = s_aooi200_get_doc_default(g_site,'1',g_xmfd_m.xmfddocno,'xmfd013',g_xmfd_m.xmfd013)
   LET g_xmfd_m.xmfd014   = s_aooi200_get_doc_default(g_site,'1',g_xmfd_m.xmfddocno,'xmfd014',g_xmfd_m.xmfd014)
   LET g_xmfd_m.xmfd015   = s_aooi200_get_doc_default(g_site,'1',g_xmfd_m.xmfddocno,'xmfd015',g_xmfd_m.xmfd015)
   LET g_xmfd_m.xmfd016   = s_aooi200_get_doc_default(g_site,'1',g_xmfd_m.xmfddocno,'xmfd016',g_xmfd_m.xmfd016)
   LET g_xmfd_m.xmfd017   = s_aooi200_get_doc_default(g_site,'1',g_xmfd_m.xmfddocno,'xmfd017',g_xmfd_m.xmfd017)
   LET g_xmfd_m.xmfd018   = s_aooi200_get_doc_default(g_site,'1',g_xmfd_m.xmfddocno,'xmfd018',g_xmfd_m.xmfd018)
   LET g_xmfd_m.xmfd019   = s_aooi200_get_doc_default(g_site,'1',g_xmfd_m.xmfddocno,'xmfd019',g_xmfd_m.xmfd019)
   LET g_xmfd_m.xmfd020   = s_aooi200_get_doc_default(g_site,'1',g_xmfd_m.xmfddocno,'xmfd020',g_xmfd_m.xmfd020)
   LET g_xmfd_m.xmfd021   = s_aooi200_get_doc_default(g_site,'1',g_xmfd_m.xmfddocno,'xmfd021',g_xmfd_m.xmfd021)
   LET g_xmfd_m.xmfd022   = s_aooi200_get_doc_default(g_site,'1',g_xmfd_m.xmfddocno,'xmfd022',g_xmfd_m.xmfd022)
   LET g_xmfd_m.xmfd023   = s_aooi200_get_doc_default(g_site,'1',g_xmfd_m.xmfddocno,'xmfd023',g_xmfd_m.xmfd023)
   LET g_xmfd_m.xmfd024   = s_aooi200_get_doc_default(g_site,'1',g_xmfd_m.xmfddocno,'xmfd024',g_xmfd_m.xmfd024)
   LET g_xmfd_m.xmfd025   = s_aooi200_get_doc_default(g_site,'1',g_xmfd_m.xmfddocno,'xmfd025',g_xmfd_m.xmfd025)
   LET g_xmfd_m.xmfd026   = s_aooi200_get_doc_default(g_site,'1',g_xmfd_m.xmfddocno,'xmfd026',g_xmfd_m.xmfd026)
   LET g_xmfd_m.xmfd027   = s_aooi200_get_doc_default(g_site,'1',g_xmfd_m.xmfddocno,'xmfd027',g_xmfd_m.xmfd027)
   LET g_xmfd_m.xmfd028   = s_aooi200_get_doc_default(g_site,'1',g_xmfd_m.xmfddocno,'xmfd028',g_xmfd_m.xmfd028)
   LET g_xmfd_m.xmfd029   = s_aooi200_get_doc_default(g_site,'1',g_xmfd_m.xmfddocno,'xmfd029',g_xmfd_m.xmfd029)

   #取人員姓名 
   CALL s_desc_get_person_desc(g_xmfd_m.xmfd001)
        RETURNING g_xmfd_m.xmfd001_desc
   DISPLAY BY NAME g_xmfd_m.xmfd001_desc

   CALL s_desc_get_department_desc(g_xmfd_m.xmfd002)
        RETURNING g_xmfd_m.xmfd002_desc
   DISPLAY BY NAME g_xmfd_m.xmfd002_desc

   CALL s_desc_get_trading_partner_full_desc(g_xmfd_m.xmfd003)
        RETURNING g_xmfd_m.xmfd003_desc
   DISPLAY BY NAME g_xmfd_m.xmfd003_desc

   CALL axmt410_xmfd009_ref(g_xmfd_m.xmfd009)
        RETURNING g_xmfd_m.xmfd009_desc
   DISPLAY BY NAME g_xmfd_m.xmfd009_desc

   CALL s_desc_get_currency_desc(g_xmfd_m.xmfd010)
        RETURNING g_xmfd_m.xmfd010_desc
   DISPLAY BY NAME g_xmfd_m.xmfd010_desc 
   
   CALL s_desc_get_tax_desc1(g_site,g_xmfd_m.xmfd012)
        RETURNING g_xmfd_m.xmfd012_desc
   DISPLAY BY NAME g_xmfd_m.xmfd012_desc

   CALL s_desc_get_acc_desc('238',g_xmfd_m.xmfd015)
        RETURNING g_xmfd_m.xmfd015_desc
   DISPLAY BY NAME g_xmfd_m.xmfd015_desc

   CALL axmt410_xmfd016_ref(g_xmfd_m.xmfd016)
        RETURNING g_xmfd_m.xmfd016_desc
   DISPLAY BY NAME g_xmfd_m.xmfd016_desc

   CALL axmt410_xmfd017_ref(g_xmfd_m.xmfd017)
        RETURNING g_xmfd_m.xmfd017_desc
   DISPLAY BY NAME g_xmfd_m.xmfd017_desc

   #160621-00003#3 20160629 modify by beckxie---S
   #CALL s_desc_get_acc_desc('275',g_xmfd_m.xmfd018) RETURNING g_xmfd_m.xmfd018_desc
   CALL s_desc_get_oojdl003_desc(g_xmfd_m.xmfd018) RETURNING g_xmfd_m.xmfd018_desc
   #160621-00003#3 20160629 modify by beckxie---E
   DISPLAY BY NAME g_xmfd_m.xmfd018_desc

   CALL s_desc_get_acc_desc('263',g_xmfd_m.xmfd019)
        RETURNING g_xmfd_m.xmfd019_desc
   DISPLAY BY NAME g_xmfd_m.xmfd019_desc

   CALL s_apmi011_location_ref(g_xmfd_m.xmfd019,g_xmfd_m.xmfd020)
        RETURNING g_xmfd_m.xmfd020_desc
   DISPLAY BY NAME g_xmfd_m.xmfd020_desc 
   
   CALL s_apmi011_location_ref(g_xmfd_m.xmfd019,g_xmfd_m.xmfd021)
        RETURNING g_xmfd_m.xmfd021_desc
   DISPLAY BY NAME g_xmfd_m.xmfd021_desc

   CALL axmt410_xmfd022_ref(g_xmfd_m.xmfd003,g_xmfd_m.xmfd022)
        RETURNING g_xmfd_m.xmfd022_desc,g_xmfd_m.oofb017
   DISPLAY BY NAME g_xmfd_m.xmfd022_desc,g_xmfd_m.oofb017
END FUNCTION

################################################################################
# Descriptions...: #預設有效日期
# Memo...........:
# Usage..........: CALL axmt410_xmfd007_def()
# Date & Author..: 2014/08/07 By ming
# Modify.........: 2014/09/05 By ming 如果參數回傳的數字是0，就不預設有效日期
################################################################################
PRIVATE FUNCTION axmt410_xmfd007_def()
   DEFINE l_ooba002     LIKE ooba_t.ooba002
   DEFINE l_success     LIKE type_t.num5
   DEFINE l_mm          LIKE type_t.num5

   IF NOT cl_null(g_xmfd_m.xmfddocdt) THEN
      CALL s_aooi200_get_slip(g_xmfd_m.xmfddocno) RETURNING l_success,l_ooba002
      CALL cl_get_doc_para(g_enterprise,g_xmfd_m.xmfdsite,l_ooba002,'D-BAS-0080') RETURNING l_mm
      
      #如果參數回傳的是0 就不用預設有效日期 
      IF l_mm > 0 THEN
         CALL s_date_get_date(g_xmfd_m.xmfddocdt,l_mm,0) RETURNING g_xmfd_m.xmfd007
      END IF
      
      DISPLAY BY NAME g_xmfd_m.xmfd007
   END IF
END FUNCTION

################################################################################
# Descriptions...: 從分量計價中取得單價
# Memo...........:
# Usage..........: CALL axmt410_from_xmfg_get_xmff007(p_xmffseq,p_xmff006)
#                  RETURNING r_xmff007
# Input parameter: p_xmffseq
#                : p_xmff006
# Return code....: r_xmff007
# Date & Author..: 2014/09/09 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt410_from_xmfg_get_xmff007(p_xmffseq,p_xmff006)
   DEFINE p_xmffseq     LIKE xmff_t.xmffseq
   DEFINE p_xmff006     LIKE xmff_t.xmff006
   DEFINE r_xmff007     LIKE xmff_t.xmff007 
   DEFINE l_sql         STRING
   DEFINE l_min         LIKE xmfg_t.xmfg001
   DEFINE l_max         LIKE xmfg_t.xmfg002
   DEFINE l_price       LIKE xmfg_t.xmfg003
   DEFINE l_xmfg001     LIKE xmfg_t.xmfg001
   DEFINE l_xmfg002     LIKE xmfg_t.xmfg002
   DEFINE l_xmfg003     LIKE xmfg_t.xmfg003

   LET r_xmff007 = 0
   #如果分量計價的設定如下 
   #數量  1~10 單價 100 
   #     11~20       90 
   #     31~40       80 
   #如果user輸入的數量是25或45呢？  
   LET l_min = 0
   LET l_max = 0
   LET l_price = 0
   LET l_sql = "SELECT xmfg001,xmfg002,xmfg003 ",
               "  FROM xmfg_t ",
               " WHERE xmfgent   = '",g_enterprise,"' ",
               "   AND xmfgsite  = '",g_site,"' ",
               "   AND xmfgdocno = '",g_xmfd_m.xmfddocno,"' ",
               "   AND xmfgseq   = '",p_xmffseq,"' ",
               " ORDER BY xmfg001 "
   PREPARE axmt410_get_xmff007_prep FROM l_sql
   DECLARE axmt410_get_xmff007_curs CURSOR FOR axmt410_get_xmff007_prep
   FOREACH axmt410_get_xmff007_curs INTO l_xmfg001,l_xmfg002,l_xmfg003
      #檢查是否有符合區間，有的話就直接離開不用找了 
      IF l_xmfg001 <= p_xmff006 AND p_xmff006 <= l_xmfg002 THEN
         LET r_xmff007 = l_xmfg003
         EXIT FOREACH
      END IF

      #在找第二筆之後的資料時，如果有符合在這兩筆中間的話 
      #就拿前一筆的價格做為單價  
      IF (l_min <> 0 OR l_max <> 0) AND (l_min <= p_xmff006 AND p_xmff006 <= l_xmfg002) THEN
         LET r_xmff007 = l_price
         EXIT FOREACH
      END IF 
      
      LET l_min = l_xmfg001
      LET l_max = l_xmfg002
      LET l_price = l_xmfg003
   END FOREACH

   IF r_xmff007 = 0 THEN
      LET r_xmff007 = l_price
   END IF

   RETURN r_xmff007
END FUNCTION

PRIVATE FUNCTION axmt410_xmfd015_ref(p_oocql002)
   DEFINE p_oocql002     LIKE oocql_t.oocql002
   DEFINE r_oocql004     LIKE oocql_t.oocql004
   DEFINE l_sql          STRING

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_oocql002
   LET l_sql = "SELECT oocql004 ",
               "  FROM oocql_t ",
               " WHERE oocqlent='"||g_enterprise||"' ",
               "   AND oocql001='238' ",
               "   AND oocql002=? ",
               "   AND oocql003='"||g_dlang||"'"
   CALL ap_ref_array2(g_ref_fields,l_sql,"") RETURNING g_rtn_fields
   LET r_oocql004 = '', g_rtn_fields[1] , ''

   RETURN r_oocql004
END FUNCTION

PRIVATE FUNCTION axmt410_xmff015_ref(p_xmff015)
DEFINE p_xmff015     LIKE xmff_t.xmff015
DEFINE r_xmaml003    LIKE xmaml_t.xmaml003
DEFINE l_sql          STRING

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_xmff015
   LET l_sql =  "SELECT xmaml003 ",
                "  FROM xmaml_t ",
                " WHERE xmamlent='"||g_enterprise||"' ",
                "   AND xmaml001=? ",
                "   AND xmaml002='"||g_dlang||"'"
   CALL ap_ref_array2(g_ref_fields,l_sql,"") RETURNING g_rtn_fields
   LET r_xmaml003 = '', g_rtn_fields[1] , ''
   RETURN r_xmaml003
   
END FUNCTION

################################################################################
# Descriptions...: 材積計算
# Usage..........: CALL axmt410_volume(p_xmff015,p_xmff016)
#                  RETURNING r_xmff019
# Input parameter: p_type      1.更改包裝容器或數量 2.更改箱數
#                : p_xmff006   數量
#                : p_xmff015   包裝容器
#                : p_xmff016   箱數
# Return code....: r_xmff019   材積
# Date & Author..: 2014/12/01 By shiun
################################################################################
PRIVATE FUNCTION axmt410_volume(p_type,p_xmff006,p_xmff015,p_xmff016)
DEFINE p_type         LIKE type_t.chr1
DEFINE p_xmff006      LIKE xmff_t.xmff006
DEFINE p_xmff015      LIKE xmff_t.xmff015
DEFINE p_xmff016      LIKE xmff_t.xmff016
DEFINE r_xmff016      LIKE xmff_t.xmff016
DEFINE r_xmff019      LIKE xmff_t.xmff019
DEFINE l_xmff016      LIKE xmff_t.xmff016
DEFINE l_xmam         RECORD LIKE xmam_t.*


   INITIALIZE l_xmam.* TO NULL
   INITIALIZE r_xmff019 TO NULL
   SELECT * INTO l_xmam.*
     FROM xmam_t
    WHERE xmament = g_enterprise
      AND xmam001 = p_xmff015
   IF cl_null(l_xmam.xmam008) OR l_xmam.xmam008 = 0 THEN
      LET l_xmam.xmam008 = 1
   END IF
   IF p_type = '1' THEN
      LET l_xmff016 = p_xmff006 / l_xmam.xmam008
      CALL s_num_round(4,l_xmff016,'') RETURNING r_xmff016
   ELSE
      LET r_xmff016 = p_xmff016
   END IF
   IF cl_null(l_xmam.xmam013) THEN
      LET l_xmam.xmam013 = 0
   END IF
   IF g_xmfd_m.xmfd023 = '2' THEN
      LET r_xmff019 = l_xmam.xmam013 * 0.0000353 * r_xmff016
   ELSE
      LET r_xmff019 = l_xmam.xmam013 * 0.0000353 / 35.315 * r_xmff016
   END IF
   RETURN r_xmff016,r_xmff019
END FUNCTION

################################################################################
# Descriptions...: 維護[追蹤狀態]頁籤下的資料
# Memo...........:
# Usage..........: CALL axmt410_track()
# Input parameter: 
# Return code....: 
# Date & Author..: 160412 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt410_track()

   IF g_xmfd_m.xmfddocno IS NULL THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = "std-00003"
      LET g_errparam.popup  = FALSE
      CALL cl_err()
      RETURN
   END IF
   
   ERROR ""
   
   CALL s_transaction_begin()
   
   OPEN axmt410_cl USING g_enterprise,g_xmfd_m.xmfddocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = "OPEN axmt410_cl:"
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CLOSE axmt410_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE axmt410_master_referesh USING g_xmfd_m.xmfddocno INTO g_xmfd_m.xmfddocno,g_xmfd_m.xmfdsite, 
       g_xmfd_m.xmfddocdt,g_xmfd_m.xmfd001,g_xmfd_m.xmfd002,g_xmfd_m.xmfdstus,g_xmfd_m.xmfd003,g_xmfd_m.xmfd006, 
       g_xmfd_m.xmfd007,g_xmfd_m.xmfd008,g_xmfd_m.xmfd009,g_xmfd_m.xmfd010,g_xmfd_m.xmfd011,g_xmfd_m.xmfd029, 
       g_xmfd_m.xmfd012,g_xmfd_m.xmfd013,g_xmfd_m.xmfd014,g_xmfd_m.xmfd015,g_xmfd_m.xmfd016,g_xmfd_m.xmfd017, 
       g_xmfd_m.xmfd018,g_xmfd_m.xmfd019,g_xmfd_m.xmfd020,g_xmfd_m.xmfd021,g_xmfd_m.xmfd022,g_xmfd_m.xmfd023, 
       g_xmfd_m.xmfd024,g_xmfd_m.xmfd025,g_xmfd_m.xmfd026,g_xmfd_m.xmfd027,g_xmfd_m.xmfd028,g_xmfd_m.xmfd030, 
       g_xmfd_m.xmfd031,g_xmfd_m.xmfd032,g_xmfd_m.xmfd033,g_xmfd_m.xmfdownid,g_xmfd_m.xmfdowndp,g_xmfd_m.xmfdcrtid, 
       g_xmfd_m.xmfdcrtdp,g_xmfd_m.xmfdcrtdt,g_xmfd_m.xmfdmodid,g_xmfd_m.xmfdmoddt,g_xmfd_m.xmfdcnfid, 
       g_xmfd_m.xmfdcnfdt,g_xmfd_m.xmfdpstid,g_xmfd_m.xmfdpstdt,g_xmfd_m.xmfd001_desc,g_xmfd_m.xmfd002_desc, 
       g_xmfd_m.xmfd003_desc,g_xmfd_m.xmfd009_desc,g_xmfd_m.xmfd015_desc,g_xmfd_m.xmfd016_desc,g_xmfd_m.xmfd017_desc, 
       g_xmfd_m.xmfd018_desc,g_xmfd_m.xmfd019_desc,g_xmfd_m.xmfd022_desc,g_xmfd_m.xmfd032_desc,g_xmfd_m.xmfdownid_desc, 
       g_xmfd_m.xmfdowndp_desc,g_xmfd_m.xmfdcrtid_desc,g_xmfd_m.xmfdcrtdp_desc,g_xmfd_m.xmfdmodid_desc, 
       g_xmfd_m.xmfdcnfid_desc,g_xmfd_m.xmfdpstid_desc
   
   #檢查是否允許此動作
   IF NOT axmt410_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_xmfd_m_mask_o.* =  g_xmfd_m.*
   CALL axmt410_xmfd_t_mask()
   LET g_xmfd_m_mask_n.* =  g_xmfd_m.*
   
   CALL axmt410_show()
   
   WHILE TRUE
      #保存單頭舊值
      LET g_xmfd_m_t.* = g_xmfd_m.*
      LET g_xmfd_m_o.* = g_xmfd_m.*
      LET g_xmfddocno_t = g_xmfd_m.xmfddocno
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_xmfd_m.xmfdmodid = g_user 
      LET g_xmfd_m.xmfdmoddt = cl_get_current()
      LET g_xmfd_m.xmfdmodid_desc = cl_get_username(g_xmfd_m.xmfdmodid)
      DISPLAY BY NAME g_xmfd_m.xmfdmodid,g_xmfd_m.xmfdmoddt,g_xmfd_m.xmfdmodid_desc
      
      #切換畫面
      IF g_main_hidden THEN
         CALL gfrm_curr.setElementHidden("mainlayout",0)
         CALL gfrm_curr.setElementHidden("worksheet",1)
         LET g_main_hidden = 0
      END IF
      
      CALL cl_set_head_visible("","YES")  
      
      CALL cl_set_comp_required("xmfd031",FALSE)
      IF g_xmfd_m.xmfd030 = '2' THEN
         CALL cl_set_comp_required("xmfd031",TRUE)
      END IF
      
      #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
      #因此先行關閉, 若有需要可於下方add-point中自行開啟
      CALL cl_mask_set_no_entry()
      
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
         #單頭段
         INPUT BY NAME g_xmfd_m.xmfd030,g_xmfd_m.xmfd031,g_xmfd_m.xmfd032,g_xmfd_m.xmfd033
            ATTRIBUTE(WITHOUT DEFAULTS)
            
            BEFORE INPUT
               OPEN axmt410_cl USING g_enterprise,g_xmfd_m.xmfddocno
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = "OPEN axmt410_cl:"
                  LET g_errparam.code   = STATUS
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  CLOSE axmt410_cl
                  CALL s_transaction_end('N','0')
                  LET INT_FLAG = TRUE 
                  EXIT DIALOG
               END IF
            
            ON CHANGE xmfd030
               CALL cl_set_comp_required("xmfd031",FALSE)
               IF g_xmfd_m.xmfd030 = '2' THEN
                  CALL cl_set_comp_required("xmfd031",TRUE)
                  IF cl_null(g_xmfd_m.xmfd031) THEN
                     LET g_xmfd_m.xmfd031 = g_today
                     DISPLAY BY NAME g_xmfd_m.xmfd031
                  END IF
               END IF
            
            AFTER FIELD xmfd032
               IF NOT cl_null(g_xmfd_m.xmfd032) THEN
                  IF g_xmfd_m.xmfd032 != g_xmfd_m_o.xmfd032 OR g_xmfd_m_o.xmfd032 IS NULL THEN
                     IF NOT s_azzi650_chk_exist('319',g_xmfd_m.xmfd032) THEN
                        LET g_xmfd_m.xmfd032 = g_xmfd_m_o.xmfd032
                        CALL s_desc_get_acc_desc('319',g_xmfd_m.xmfd032) RETURNING g_xmfd_m.xmfd032_desc
                        DISPLAY BY NAME g_xmfd_m.xmfd032,g_xmfd_m.xmfd032_desc
                        NEXT FIELD CURRENT
                     END IF
                     CALL s_desc_get_acc_desc('319',g_xmfd_m.xmfd032) RETURNING g_xmfd_m.xmfd032_desc
                     DISPLAY BY NAME g_xmfd_m.xmfd032_desc
                  END IF
               END IF
               LET g_xmfd_m_o.xmfd032 = g_xmfd_m.xmfd032
            
            ON ACTION controlp INFIELD xmfd032
   			   INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
	   		   LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_xmfd_m.xmfd032
               LET g_qryparam.arg1 = "319"
               CALL q_oocq002()
               LET g_xmfd_m.xmfd032 = g_qryparam.return1
               DISPLAY g_xmfd_m.xmfd032 TO xmfd032
               CALL s_desc_get_acc_desc('319',g_xmfd_m.xmfd032) RETURNING g_xmfd_m.xmfd032_desc
               DISPLAY BY NAME g_xmfd_m.xmfd032_desc
               NEXT FIELD xmfd032
            
            AFTER INPUT
               IF INT_FLAG THEN
                  EXIT DIALOG
               END IF
               #將遮罩欄位還原
               CALL axmt410_xmfd_t_mask_restore('restore_mask_o')
               UPDATE xmfd_t
                  SET xmfd030 = g_xmfd_m.xmfd030,
                      xmfd031 = g_xmfd_m.xmfd031,
                      xmfd032 = g_xmfd_m.xmfd032,
                      xmfd033 = g_xmfd_m.xmfd033,
                      xmfdmodid = g_xmfd_m.xmfdmodid,
                      xmfdmoddt = g_xmfd_m.xmfdmoddt
                WHERE xmfdent = g_enterprise
                  AND xmfddocno = g_xmfddocno_t
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = "xmfd_t:",SQLERRMESSAGE
                  LET g_errparam.code   = SQLCA.sqlcode
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               #將遮罩欄位進行遮蔽
               CALL axmt410_xmfd_t_mask_restore('restore_mask_n')
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_xmfd_m_t)
               LET g_log2 = util.JSON.stringify(g_xmfd_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
         END INPUT
         
         BEFORE DIALOG
         
         AFTER DIALOG
         
         ON ACTION controlf
            CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
            CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
         
         ON ACTION controlr
            CALL cl_show_req_fields()
         
         ON ACTION controls
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
         
         ON ACTION accept
            ACCEPT DIALOG
         
         ON ACTION cancel      #在dialog button (放棄)
            LET INT_FLAG = TRUE 
            EXIT DIALOG
         
         ON ACTION close       #在dialog 右上角 (X)
            LET INT_FLAG = TRUE 
            EXIT DIALOG
         
         ON ACTION exit        #toolbar 離開
            LET INT_FLAG = TRUE 
            EXIT DIALOG
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG 
      END DIALOG
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_xmfd_m.* = g_xmfd_m_t.*
         CALL axmt410_show()
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = 9001
         LET g_errparam.popup  = FALSE
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      EXIT WHILE
   END WHILE
   
   CLOSE axmt410_cl
   
   CALL s_transaction_end('Y','0')
   
   #功能已完成,通報訊息中心
   CALL axmt410_msgcentre_notify('modify')

END FUNCTION

################################################################################
# Descriptions...: 依來源估價單資料自動產生單身
# Memo...........:
# Usage..........: CALL axmt410_from_sub_get_body3()
#                  RETURNING r_success
# Return code....: r_success : true/false
# Date & Author..: 160520-00032 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt410_from_sub_get_body3()
   DEFINE r_success              LIKE type_t.num5
   DEFINE l_xmff                 RECORD
                                    xmffent     LIKE xmff_t.xmffent,     #企業編號  
                                    xmffsite    LIKE xmff_t.xmffsite,    #營運據點  
                                    xmffdocno   LIKE xmff_t.xmffdocno,   #報價單號  
                                    xmffseq     LIKE xmff_t.xmffseq,     #項次  
                                    xmff001     LIKE xmff_t.xmff001,     #料件編號  
                                    xmff002     LIKE xmff_t.xmff002,     #產品特徵  
                                    xmff003     LIKE xmff_t.xmff003,     #客戶料號  
                                    xmff004     LIKE xmff_t.xmff004,     #銷售單位  
                                    xmff005     LIKE xmff_t.xmff005,     #分量計價  
                                    xmff006     LIKE xmff_t.xmff006,     #數量 
                                    xmff007     LIKE xmff_t.xmff007,     #報價單價  
                                    xmff008     LIKE xmff_t.xmff008,     #未稅金額  
                                    xmff009     LIKE xmff_t.xmff009,     #含稅金額  
                                    xmff010     LIKE xmff_t.xmff010,     #稅額  
                                    xmff011     LIKE xmff_t.xmff011,     #標準成本單價  
                                    xmff012     LIKE xmff_t.xmff012,     #預估毛利率   
                                    xmff013     LIKE xmff_t.xmff013,     #預估毛利金額  
                                    xmff014     LIKE xmff_t.xmff014      #備註  
                                 END RECORD

   LET r_success = TRUE 
   
   INITIALIZE l_xmff.* TO NULL
   DECLARE axmt410_from_sub_get_body3_cs CURSOR FOR
      #xmewseq:階層項次 xmew003:料件編號 xmew004:產品特徵 xmew006:單位 xmew012:採購單價
      #數量 = 估價單單頭.估價數量 * 估價單單身.組成用量 / 估價單單身.主件底數	
      SELECT xmewseq,xmew003,xmew004,xmew006,NVL(xmew012,0),
             (NVL(xmev011,0)*NVL(xmew007,0)/NVL(xmew008,0))
        FROM xmew_t
        LEFT JOIN xmev_t ON xmevent = xmewent AND xmevdocno = xmewdocno
       WHERE xmewent = g_enterprise
         AND xmewdocno = g_xmfd_m.xmfd005
   FOREACH axmt410_from_sub_get_body3_cs INTO l_xmff.xmffseq,l_xmff.xmff001,l_xmff.xmff002,l_xmff.xmff004,l_xmff.xmff007,
                                              l_xmff.xmff006
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "axmt410_from_sub_get_body3_cs",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
      LET l_xmff.xmffent = g_enterprise
      LET l_xmff.xmffsite = g_site
      LET l_xmff.xmffdocno = g_xmfd_m.xmfddocno
      LET l_xmff.xmff003 = ''
      LET l_xmff.xmff005 = 'N'  #分量計價
      CALL axmt410_get_amount(g_xmfd_m.xmfddocno,l_xmff.xmffseq,l_xmff.xmff006,l_xmff.xmff007,g_xmfd_m.xmfd010,g_xmfd_m.xmfd012)
           RETURNING l_xmff.xmff008,l_xmff.xmff010,l_xmff.xmff009
      CALL axmt410_get_xmff011(l_xmff.xmff001,l_xmff.xmff002,l_xmff.xmff004)
           RETURNING l_xmff.xmff011
      CALL axmt410_get_xmff012(l_xmff.xmff006,l_xmff.xmff008,l_xmff.xmff011)
           RETURNING l_xmff.xmff012
      CALL axmt410_get_xmff013(l_xmff.xmff006,l_xmff.xmff008,l_xmff.xmff011)
           RETURNING l_xmff.xmff013
      INSERT INTO xmff_t(xmffent,xmffsite,xmffdocno,xmffseq,
                         xmff001,xmff002,xmff003,xmff004,xmff005,
                         xmff006,xmff007,xmff008,xmff009,xmff010,
                         xmff011,xmff012,xmff013,xmff014)
                  VALUES(l_xmff.xmffent,l_xmff.xmffsite,l_xmff.xmffdocno,
                         l_xmff.xmffseq,l_xmff.xmff001,l_xmff.xmff002,
                         l_xmff.xmff003,l_xmff.xmff004,l_xmff.xmff005,
                         l_xmff.xmff006,l_xmff.xmff007,l_xmff.xmff008,
                         l_xmff.xmff009,l_xmff.xmff010,l_xmff.xmff011,
                         l_xmff.xmff012,l_xmff.xmff013,l_xmff.xmff014)
      IF SQLCA.sqlcode THEN
         LET r_success = FALSE
      END IF 
      INITIALIZE l_xmff.* TO NULL
   END FOREACH

   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 帶值估價單號
# Memo...........:
# Usage..........: CALL axmt410_xmfd005_default()
# Input parameter: 
# Return code....: 
# Date & Author..: 160520-00032 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt410_xmfd005_default()
   DEFINE l_success              LIKE type_t.num5
   DEFINE l_controlno            LIKE ooha_t.ooha001      #控制組編號  

   #xmev003:客戶編號 xmev013:估價有效期限 xmev006:幣別      xmev007:匯率
   #xmev008:稅別     xmev009:稅率        xmev010:單價含稅否
   SELECT xmev003,xmev013,xmev006,xmev007,xmev008,xmev009,xmev010
     INTO g_xmfd_m.xmfd003,g_xmfd_m.xmfd007,g_xmfd_m.xmfd010,g_xmfd_m.xmfd011,
          g_xmfd_m.xmfd012,g_xmfd_m.xmfd013,g_xmfd_m.xmfd014
     FROM xmev_t
    WHERE xmevent = g_enterprise
      AND xmevdocno = g_xmfd_m.xmfd005
   LET g_xmfd_m.xmfd008 = '4'  #產生方式=依估價單
   LET g_xmfd_m.xmfd023 = '1'  #材積計算方式
   LET g_xmfd_m.xmfd030 = '1'  #回覆狀態
   
   CALL s_control_get_group('2',g_xmfd_m.xmfd001,g_xmfd_m.xmfd002)
        RETURNING l_success,l_controlno
   #判斷客戶是否有設置訂單控制組客戶預設條件(axmi110)
   IF l_success AND (NOT cl_null(l_controlno)) THEN
      #xmae006:收款條件 xmae008:銷售通路 xmad011:運送方式 xmad012:起運地
      #xmad013:目的地   xmae020:交易條件 xmae021:取價方式
      SELECT xmae006, xmae008, xmae011, xmae012, xmae013, xmae020, xmae021
        INTO g_xmfd_m.xmfd016, g_xmfd_m.xmfd018, g_xmfd_m.xmfd019, g_xmfd_m.xmfd020,
             g_xmfd_m.xmfd021, g_xmfd_m.xmfd015, g_xmfd_m.xmfd017
        FROM xmae_t
       WHERE xmaeent  = g_enterprise
         AND xmae001  = g_xmfd_m.xmfd003
         AND xmae002  = l_controlno
   ELSE  #若沒有設置訂單控制組客戶預設條件資料則改抓客戶據點預設條件(axmm202)
      #pmab087:收款條件 pmab088:銷售通路 pmab090:運送方式 pmab091:起運地
      #pmab092:目的地   pmab103:交易條件 pmab104:取價方式
      SELECT pmab087, pmab088, pmab090, pmab091, pmab092, pmab103, pmab104
        INTO g_xmfd_m.xmfd016, g_xmfd_m.xmfd018, g_xmfd_m.xmfd019, g_xmfd_m.xmfd020,
             g_xmfd_m.xmfd021, g_xmfd_m.xmfd015, g_xmfd_m.xmfd017
        FROM pmab_t
       WHERE pmabent  = g_enterprise
         AND pmabsite = g_site
         AND pmab001  = g_xmfd_m.xmfd003
   END IF
   
   LET g_xmfd_m_o.xmfd003 = g_xmfd_m.xmfd003
   LET g_xmfd_m_o.xmfd007 = g_xmfd_m.xmfd007
   LET g_xmfd_m_o.xmfd008 = g_xmfd_m.xmfd008
   LET g_xmfd_m_o.xmfd010 = g_xmfd_m.xmfd010
   LET g_xmfd_m_o.xmfd011 = g_xmfd_m.xmfd011
   LET g_xmfd_m_o.xmfd012 = g_xmfd_m.xmfd012
   LET g_xmfd_m_o.xmfd013 = g_xmfd_m.xmfd013
   LET g_xmfd_m_o.xmfd014 = g_xmfd_m.xmfd014
   LET g_xmfd_m_o.xmfd015 = g_xmfd_m.xmfd015
   LET g_xmfd_m_o.xmfd016 = g_xmfd_m.xmfd016
   LET g_xmfd_m_o.xmfd017 = g_xmfd_m.xmfd017
   LET g_xmfd_m_o.xmfd018 = g_xmfd_m.xmfd018
   LET g_xmfd_m_o.xmfd019 = g_xmfd_m.xmfd019
   LET g_xmfd_m_o.xmfd020 = g_xmfd_m.xmfd020
   LET g_xmfd_m_o.xmfd021 = g_xmfd_m.xmfd021
   LET g_xmfd_m_o.xmfd023 = g_xmfd_m.xmfd023
   LET g_xmfd_m_o.xmfd030 = g_xmfd_m.xmfd030

   #取得幣別的說明 
   CALL s_desc_get_currency_desc(g_xmfd_m.xmfd010)
        RETURNING g_xmfd_m.xmfd010_desc
   DISPLAY BY NAME g_xmfd_m.xmfd010_desc

   #取得稅別的說明 
   CALL s_desc_get_tax_desc1(g_site,g_xmfd_m.xmfd012)
        RETURNING g_xmfd_m.xmfd012_desc
   DISPLAY BY NAME g_xmfd_m.xmfd012_desc

   #取得交易條件的說明  
   CALL s_desc_get_acc_desc('238',g_xmfd_m.xmfd015)
        RETURNING g_xmfd_m.xmfd015_desc
   DISPLAY BY NAME g_xmfd_m.xmfd015_desc

   #取得收款條件的說明 
   CALL axmt410_xmfd016_ref(g_xmfd_m.xmfd016)
        RETURNING g_xmfd_m.xmfd016_desc
   DISPLAY BY NAME g_xmfd_m.xmfd016_desc 
   
   #取得取價方式的說明 
   CALL axmt410_xmfd017_ref(g_xmfd_m.xmfd017)
        RETURNING g_xmfd_m.xmfd017_desc
   DISPLAY BY NAME g_xmfd_m.xmfd017_desc

   #取得銷售通路的說明 
   #160621-00003#3 20160629 modify by beckxie---S
   #CALL s_desc_get_acc_desc('275',g_xmfd_m.xmfd018) RETURNING g_xmfd_m.xmfd018_desc
   CALL s_desc_get_oojdl003_desc(g_xmfd_m.xmfd018) RETURNING g_xmfd_m.xmfd018_desc
   #160621-00003#3 20160629 modify by beckxie---E
   DISPLAY BY NAME g_xmfd_m.xmfd018_desc

   #取得運輸方式的說明 
   CALL s_desc_get_acc_desc('263',g_xmfd_m.xmfd019)
        RETURNING g_xmfd_m.xmfd019_desc
   DISPLAY BY NAME g_xmfd_m.xmfd019_desc

   #取得起運地的說明 
   CALL s_apmi011_location_ref(g_xmfd_m.xmfd019,g_xmfd_m.xmfd020)
        RETURNING g_xmfd_m.xmfd020_desc
   DISPLAY BY NAME g_xmfd_m.xmfd020_desc

   #取得目的地的說明 
   CALL s_apmi011_location_ref(g_xmfd_m.xmfd019,g_xmfd_m.xmfd021)
        RETURNING g_xmfd_m.xmfd021_desc
   DISPLAY BY NAME g_xmfd_m.xmfd021_desc
   
   DISPLAY BY NAME g_xmfd_m.xmfd003,g_xmfd_m.xmfd007,g_xmfd_m.xmfd008,g_xmfd_m.xmfd010,g_xmfd_m.xmfd011,
                   g_xmfd_m.xmfd012,g_xmfd_m.xmfd013,g_xmfd_m.xmfd014,g_xmfd_m.xmfd015,g_xmfd_m.xmfd016,
                   g_xmfd_m.xmfd017,g_xmfd_m.xmfd018,g_xmfd_m.xmfd019,g_xmfd_m.xmfd020,g_xmfd_m.xmfd021,
                   g_xmfd_m.xmfd023,g_xmfd_m.xmfd030

END FUNCTION

################################################################################
# Descriptions...: 估價單號校驗
# Memo...........:
# Usage..........: CALL axmt410_xmfd005_chk()
# Input parameter: 
# Return code....: 
# Date & Author..: 160520-00032 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt410_xmfd005_chk()
DEFINE l_xmevstus   LIKE xmev_t.xmevstus
DEFINE l_xmev013    LIKE xmev_t.xmev013

   LET g_errno = ''
   
   LET l_xmevstus = ''
   LET l_xmev013 = ''
   SELECT xmevstus,xmev013 INTO l_xmevstus,l_xmev013
     FROM xmev_t
    WHERE xmevent = g_enterprise
      AND xmevdocno = g_xmfd_m.xmfd005
   CASE
      WHEN SQLCA.sqlcode = 100
         #輸入的單號不存在銷售估價檔！
         LET g_errno = 'axm-00785'
      WHEN l_xmevstus <> 'Y'
         #此估價單未確認！
         LET g_errno = 'axm-00367'
      WHEN l_xmev013 < g_xmfd_m.xmfddocdt
         #估價單的估價有效期限不可以小於報價日期！
         LET g_errno = 'axm-00786'
   END CASE

END FUNCTION

 
{</section>}
 
