#該程式未解開Section, 採用最新樣板產出!
{<section id="axmq501.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:3(2015-07-24 14:42:29), PR版次:0003(2016-12-22 15:57:57)
#+ Customerized Version.: SD版次:(), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000057
#+ Filename...: axmq501
#+ Description: 訂單生產狀況查詢
#+ Creator....: 04441(2015-07-24 10:20:55)
#+ Modifier...: 04441 -SD/PR- 08993
 
{</section>}
 
{<section id="axmq501.global" >}
#應用 q01 樣板自動產生(Version:34)
#add-point:填寫註解說明 name="global.memo"
#160503-00030#13   2016/05/17   By dorislai  改善效能
#161207-00033#5    2016/12/21   By 08993     一次性交易對象名稱顯示要改抓pmak003
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"

#end add-point
 
IMPORT os
IMPORT util
#add-point:增加匯入項目 name="global.import"

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_xmda_d RECORD
       
       sel LIKE type_t.chr1, 
   xmda004 LIKE xmda_t.xmda004, 
   xmda004_desc LIKE type_t.chr500, 
   xmdadocno LIKE xmda_t.xmdadocno, 
   xmdadocdt LIKE xmda_t.xmdadocdt, 
   xmda002 LIKE xmda_t.xmda002, 
   url_b_xmda002 LIKE type_t.chr500, 
   xmda002_desc LIKE type_t.chr500, 
   xmda003 LIKE xmda_t.xmda003, 
   xmda003_desc LIKE type_t.chr500
       END RECORD
 
 
#add-point:自定義模組變數-標準(Module Variable)  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
 TYPE type_g_sfaa_d RECORD
   sfaadocno      LIKE sfaa_t.sfaadocno,
   sfaadocdt      LIKE sfaa_t.sfaadocdt,
   sfaa002        LIKE sfaa_t.sfaa002,
   sfaa002_desc   LIKE ooag_t.ooag011,
   sfab003        LIKE sfab_t.sfab003,
   sfab007        LIKE sfab_t.sfab007,
   sfaa010        LIKE sfaa_t.sfaa010,
   sfaa010_desc   LIKE imaal_t.imaal003,
   sfaa010_desc_1 LIKE imaal_t.imaal004,
   sfaa013        LIKE sfaa_t.sfaa013,
   sfaa013_desc   LIKE oocal_t.oocal003,
   sfaa012        LIKE sfaa_t.sfaa012,
   sfaa049        LIKE sfaa_t.sfaa049,
   sfaa050        LIKE sfaa_t.sfaa050,
   sfaa051        LIKE sfaa_t.sfaa051,
   sfaa055        LIKE sfaa_t.sfaa055,
   sfaa056        LIKE sfaa_t.sfaa056,
   sfaastus       LIKE sfaa_t.sfaastus
              END RECORD
 TYPE type_g_sfcb_d RECORD
   sfcb002        LIKE sfcb_t.sfcb002,
   sfcb003        LIKE sfcb_t.sfcb003,
   sfcb003_desc   LIKE oocql_t.oocql004,
   sfcb004        LIKE sfcb_t.sfcb004,
   sfcb050        LIKE sfcb_t.sfcb050,
   sfcb046        LIKE sfcb_t.sfcb046,
   sfcb047        LIKE sfcb_t.sfcb047,
   sfcb028        LIKE sfcb_t.sfcb028,
   sfcb029        LIKE sfcb_t.sfcb029,
   sfcb030        LIKE sfcb_t.sfcb030,
   sfcb031        LIKE sfcb_t.sfcb031,
   sfcb032        LIKE sfcb_t.sfcb032,
   sfcb033        LIKE sfcb_t.sfcb033,
   sfcb034        LIKE sfcb_t.sfcb034,
   sfcb035        LIKE sfcb_t.sfcb035,
   sfcb038        LIKE sfcb_t.sfcb038,
   sfcb039        LIKE sfcb_t.sfcb039,
   sfcb036        LIKE sfcb_t.sfcb036,
   sfcb037        LIKE sfcb_t.sfcb037,
   sfcb040        LIKE sfcb_t.sfcb040,
   sfcb041        LIKE sfcb_t.sfcb041,
   sfcb042        LIKE sfcb_t.sfcb042,
   sfcb048        LIKE sfcb_t.sfcb048,
   sfcb049        LIKE sfcb_t.sfcb049,
   sfcb051        LIKE sfcb_t.sfcb051
              END RECORD
 TYPE type_tm  RECORD
   chk1           LIKE type_t.chr1,
   chk2           LIKE type_t.chr1,
   chk3           LIKE type_t.chr1,
   chk4           LIKE type_t.chr1,
   chk5           LIKE type_t.chr1
              END RECORD
DEFINE tm                  type_tm
DEFINE g_sfaa_d            DYNAMIC ARRAY OF type_g_sfaa_d
DEFINE g_sfcb_d            DYNAMIC ARRAY OF type_g_sfcb_d
DEFINE g_sfcb00_d          DYNAMIC ARRAY OF type_g_sfcb_d
DEFINE g_sfcb01_d          DYNAMIC ARRAY OF type_g_sfcb_d
DEFINE g_sfcb02_d          DYNAMIC ARRAY OF type_g_sfcb_d
DEFINE g_sfcb03_d          DYNAMIC ARRAY OF type_g_sfcb_d
DEFINE g_sfcb04_d          DYNAMIC ARRAY OF type_g_sfcb_d
DEFINE g_sfcb05_d          DYNAMIC ARRAY OF type_g_sfcb_d
DEFINE g_sfcb06_d          DYNAMIC ARRAY OF type_g_sfcb_d
DEFINE g_sfcb07_d          DYNAMIC ARRAY OF type_g_sfcb_d
DEFINE g_sfcb08_d          DYNAMIC ARRAY OF type_g_sfcb_d
DEFINE g_sfcb09_d          DYNAMIC ARRAY OF type_g_sfcb_d
DEFINE g_sfcb10_d          DYNAMIC ARRAY OF type_g_sfcb_d
DEFINE g_sfcb11_d          DYNAMIC ARRAY OF type_g_sfcb_d
DEFINE g_sfcb12_d          DYNAMIC ARRAY OF type_g_sfcb_d
DEFINE g_sfcb13_d          DYNAMIC ARRAY OF type_g_sfcb_d
DEFINE g_sfcb14_d          DYNAMIC ARRAY OF type_g_sfcb_d
DEFINE g_sfcb15_d          DYNAMIC ARRAY OF type_g_sfcb_d
DEFINE g_sfcb16_d          DYNAMIC ARRAY OF type_g_sfcb_d
DEFINE g_sfcb17_d          DYNAMIC ARRAY OF type_g_sfcb_d
DEFINE g_sfcb18_d          DYNAMIC ARRAY OF type_g_sfcb_d
DEFINE g_sfcb19_d          DYNAMIC ARRAY OF type_g_sfcb_d
DEFINE g_sfcb20_d          DYNAMIC ARRAY OF type_g_sfcb_d
DEFINE g_sfcb21_d          DYNAMIC ARRAY OF type_g_sfcb_d
DEFINE g_sfcb22_d          DYNAMIC ARRAY OF type_g_sfcb_d
DEFINE g_sfcb23_d          DYNAMIC ARRAY OF type_g_sfcb_d
DEFINE g_sfcb24_d          DYNAMIC ARRAY OF type_g_sfcb_d
DEFINE g_sfcb25_d          DYNAMIC ARRAY OF type_g_sfcb_d
DEFINE g_sfcb26_d          DYNAMIC ARRAY OF type_g_sfcb_d
DEFINE g_sfcb27_d          DYNAMIC ARRAY OF type_g_sfcb_d
DEFINE g_sfcb28_d          DYNAMIC ARRAY OF type_g_sfcb_d
DEFINE g_sfcb29_d          DYNAMIC ARRAY OF type_g_sfcb_d

#end add-point
 
#模組變數(Module Variables)
DEFINE g_xmda_d            DYNAMIC ARRAY OF type_g_xmda_d
DEFINE g_xmda_d_t          type_g_xmda_d
 
 
 
 
DEFINE g_wc                  STRING                        #儲存 user 的查詢條件
DEFINE g_wc_t                STRING                        #儲存 user 的查詢條件
DEFINE g_wc2                 STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
DEFINE g_sql                 STRING                        #組 sql 用 
DEFINE g_forupd_sql          STRING                        #SELECT ... FOR UPDATE  SQL    
DEFINE g_cnt                 LIKE type_t.num10              
DEFINE l_ac                  LIKE type_t.num10             #目前處理的ARRAY CNT 
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog     
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_current_row         LIKE type_t.num10             #目前所在筆數
DEFINE g_current_idx         LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10             #單身 總筆數(所有資料)
DEFINE g_page                STRING                        #第幾頁
DEFINE g_ch                  base.Channel                  #外串程式用
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE g_row_index           LIKE type_t.num10
DEFINE g_master_idx          LIKE type_t.num10
DEFINE g_detail_idx          LIKE type_t.num10             #單身 所在筆數(所有資料)
DEFINE g_detail_idx2         LIKE type_t.num10
DEFINE g_hyper_url           STRING                        #hyperlink的主要網址
DEFINE g_qbe_hidden          LIKE type_t.num5              #qbe頁籤折疊
DEFINE g_tot_cnt             LIKE type_t.num10             #計算總筆數
DEFINE g_num_in_page         LIKE type_t.num10             #每頁筆數
DEFINE g_page_act_list       STRING                        #分頁ACTION清單
DEFINE g_current_row_tot     LIKE type_t.num10             #目前所在總筆數
DEFINE g_page_start_num      LIKE type_t.num10             #目前頁面起始筆數
DEFINE g_page_end_num        LIKE type_t.num10             #目前頁面結束筆數
 
#多table用wc
DEFINE g_wc_table           STRING
DEFINE g_detail_page_action STRING
DEFINE g_pagestart          LIKE type_t.num10
 
 
 
DEFINE g_wc_filter_table           STRING
 
 
 
#add-point:自定義模組變數-客製(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明 name="global.argv"

#end add-point
 
{</section>}
 
{<section id="axmq501.main" >}
 #應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axm","")
 
   #add-point:作業初始化 name="main.init"
   
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " ", 
                      " FROM ",
                      " "
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmq501_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT  ",
               " FROM  t0",
               
               " WHERE  "
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE axmq501_master_referesh FROM g_sql
 
   #add-point:main段define_sql name="main.body.define_sql"
   
   #end add-point 
   LET g_forupd_sql = ""
   #add-point:main段define_sql name="main.body.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmq501_bcl CURSOR FROM g_forupd_sql
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axmq501 WITH FORM cl_ap_formpath("axm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axmq501_init()   
 
      #進入選單 Menu (="N")
      CALL axmq501_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axmq501
      
   END IF 
   
   CLOSE axmq501_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="axmq501.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION axmq501_init()
   #add-point:init段define-客製 name="init.define_customerization"
   
   #end add-point
   #add-point:init段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   
   #end add-point
 
   #add-point:FUNCTION前置處理 name="init.before_function"
   
   #end add-point
 
   LET g_wc_filter   = " 1=1"
   LET g_wc_filter_t = " 1=1" 
   LET g_error_show  = 1
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   
     
 
   #add-point:畫面資料初始化 name="init.init"
   CALL cl_set_combo_scc_part('b_sfaastus','13','C,D,F,M,N,R,W,Y,X')
   #end add-point
 
   CALL axmq501_default_search()
END FUNCTION
 
{</section>}
 
{<section id="axmq501.default_search" >}
PRIVATE FUNCTION axmq501_default_search()
   #add-point:default_search段define-客製 name="default_search.define_customerization"
   
   #end add-point
   #add-point:default_search段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point
 
 
   #add-point:default_search段開始前 name="default_search.before"
   
   #end add-point
 
   #應用 qs27 樣板自動產生(Version:3)
   #+ 組承接外部參數時資料庫欄位對應條件(單身)
   IF NOT cl_null(g_argv[01]) THEN
      LET g_wc = g_wc, " xmdadocno = '", g_argv[01], "' AND "
   END IF
 
 
 
 
 
 
 
   IF NOT cl_null(g_wc) THEN
      LET g_wc = g_wc.subString(1,g_wc.getLength()-5)
   ELSE
      #預設查詢條件
      LET g_wc = " 1=2"
   END IF
 
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="axmq501.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION axmq501_ui_dialog() 
   #add-point:ui_dialog段define-客製 name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_exit   LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx    LIKE type_t.num10
   DEFINE ls_result STRING
   DEFINE ls_wc     STRING
   DEFINE lc_action_choice_old   STRING
   DEFINE ls_js     STRING
   DEFINE la_param  RECORD
                    prog       STRING,
                    actionid   STRING,
                    background LIKE type_t.chr1,
                    param      DYNAMIC ARRAY OF STRING
                    END RECORD
   #add-point:ui_dialog段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   
   #end add-point
   
 
   #add-point:FUNCTION前置處理 name="ui_dialog.before_function"
   
   #end add-point
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   CALL cl_get_num_in_page() RETURNING g_num_in_page
 
   LET li_exit = FALSE
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   LET g_current_idx = 1
   LET g_action_choice = " "
   LET lc_action_choice_old = ""
   LET g_current_row_tot = 0
   LET g_page_start_num = 1
   LET g_page_end_num = g_num_in_page
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   LET l_ac = 1
 
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   LET tm.chk1 = "Y"
   LET tm.chk2 = "Y"
   LET tm.chk3 = "Y"
   LET tm.chk4 = "Y"
   LET tm.chk5 = "Y"
   #end add-point
 
   
   CALL axmq501_b_fill()
  
   WHILE li_exit = FALSE
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_xmda_d.clear()
 
         LET g_wc  = " 1=2"
         LET g_wc2 = " 1=1"
         LET g_action_choice = ""
         LET g_detail_page_action = "detail_first"
         LET g_pagestart = 1
         LET g_current_row_tot = 0
         LET g_page_start_num = 1
         LET g_page_end_num = g_num_in_page
         LET g_detail_idx = 1
         LET g_detail_idx2 = 1
 
         CALL axmq501_init()
      END IF
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #add-point:input段落 name="ui_dialog.input"
         INPUT BY NAME tm.chk1,tm.chk2,tm.chk3,tm.chk4,tm.chk5
            ATTRIBUTE(WITHOUT DEFAULTS)
         END INPUT
         #end add-point
 
         #add-point:construct段落 name="ui_dialog.construct"
         CONSTRUCT BY NAME g_wc ON xmdadocno,xmdadocdt,xmda002,xmda003,xmdc001,imaa009
         
            ON ACTION controlp INFIELD xmdadocno
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_xmdadocno()
               DISPLAY g_qryparam.return1 TO xmdadocno
               NEXT FIELD xmdadocno
               
            ON ACTION controlp INFIELD xmda002
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_ooag001()
               DISPLAY g_qryparam.return1 TO xmda002
               NEXT FIELD xmda002
               
            ON ACTION controlp INFIELD xmda003
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_ooeg001()
               DISPLAY g_qryparam.return1 TO xmda003
               NEXT FIELD xmda003
               
            ON ACTION controlp INFIELD xmdc001
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_imaa001_15()
               DISPLAY g_qryparam.return1 TO xmdc001
               NEXT FIELD xmdc001
               
            ON ACTION controlp INFIELD imaa009
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_rtax001()
               DISPLAY g_qryparam.return1 TO imaa009
               NEXT FIELD imaa009
               
         END CONSTRUCT
         #end add-point
     
         DISPLAY ARRAY g_xmda_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt)
 
            BEFORE DISPLAY
               LET g_current_page = 1
 
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               CALL axmq501_detail_action_trans()
 
               LET g_master_idx = l_ac
               #為避免按上下筆時影響執行效能，所以做一些處理
               LET lc_action_choice_old = g_action_choice
               LET g_action_choice = "fetch"
               CALL axmq501_b_fill2()
               LET g_action_choice = lc_action_choice_old
 
               #add-point:input段before row name="input.body.before_row"
               
               #end add-point
 
            
 
            #自訂ACTION(detail_show,page_1)
            
 
            #add-point:page1自定義行為 name="ui_dialog.body.page1.action"
            
            #end add-point
 
         END DISPLAY
 
         #add-point:第一頁籤程式段mark結束用 name="ui_dialog.page1.mark.end"
         
         #end add-point
 
 
 
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         DISPLAY ARRAY g_sfaa_d TO s_detail2.*
            ATTRIBUTES(COUNT=g_detail_cnt)
            BEFORE DISPLAY
               LET g_current_page = 2
            BEFORE ROW
               LET g_detail_idx2 = DIALOG.getCurrentRow("s_detail2")
               LET l_ac = g_detail_idx2
               LET g_detail_idx2 = l_ac
               DISPLAY g_detail_idx2 TO FORMONLY.idx
               CALL axmq501_b_fill3()
         END DISPLAY
         
         DISPLAY ARRAY g_sfcb00_d TO s_detail32.*
            ATTRIBUTES(COUNT=g_detail_cnt)
         END DISPLAY
         DISPLAY ARRAY g_sfcb01_d TO s_detail3.*
            ATTRIBUTES(COUNT=g_detail_cnt)
         END DISPLAY
         DISPLAY ARRAY g_sfcb02_d TO s_detail4.*
            ATTRIBUTES(COUNT=g_detail_cnt)
         END DISPLAY
         DISPLAY ARRAY g_sfcb03_d TO s_detail5.*
            ATTRIBUTES(COUNT=g_detail_cnt)
         END DISPLAY
         DISPLAY ARRAY g_sfcb04_d TO s_detail6.*
            ATTRIBUTES(COUNT=g_detail_cnt)
         END DISPLAY
         DISPLAY ARRAY g_sfcb05_d TO s_detail7.*
            ATTRIBUTES(COUNT=g_detail_cnt)
         END DISPLAY
         DISPLAY ARRAY g_sfcb06_d TO s_detail8.*
            ATTRIBUTES(COUNT=g_detail_cnt)
         END DISPLAY
         DISPLAY ARRAY g_sfcb07_d TO s_detail9.*
            ATTRIBUTES(COUNT=g_detail_cnt)
         END DISPLAY
         DISPLAY ARRAY g_sfcb08_d TO s_detail10.*
            ATTRIBUTES(COUNT=g_detail_cnt)
         END DISPLAY
         DISPLAY ARRAY g_sfcb09_d TO s_detail11.*
            ATTRIBUTES(COUNT=g_detail_cnt)
         END DISPLAY
         DISPLAY ARRAY g_sfcb10_d TO s_detail12.*
            ATTRIBUTES(COUNT=g_detail_cnt)
         END DISPLAY
         DISPLAY ARRAY g_sfcb11_d TO s_detail13.*
            ATTRIBUTES(COUNT=g_detail_cnt)
         END DISPLAY
         DISPLAY ARRAY g_sfcb12_d TO s_detail14.*
            ATTRIBUTES(COUNT=g_detail_cnt)
         END DISPLAY
         DISPLAY ARRAY g_sfcb13_d TO s_detail15.*
            ATTRIBUTES(COUNT=g_detail_cnt)
         END DISPLAY
         DISPLAY ARRAY g_sfcb14_d TO s_detail16.*
            ATTRIBUTES(COUNT=g_detail_cnt)
         END DISPLAY
         DISPLAY ARRAY g_sfcb15_d TO s_detail17.*
            ATTRIBUTES(COUNT=g_detail_cnt)
         END DISPLAY
         DISPLAY ARRAY g_sfcb16_d TO s_detail18.*
            ATTRIBUTES(COUNT=g_detail_cnt)
         END DISPLAY
         DISPLAY ARRAY g_sfcb17_d TO s_detail19.*
            ATTRIBUTES(COUNT=g_detail_cnt)
         END DISPLAY
         DISPLAY ARRAY g_sfcb18_d TO s_detail20.*
            ATTRIBUTES(COUNT=g_detail_cnt)
         END DISPLAY
         DISPLAY ARRAY g_sfcb19_d TO s_detail21.*
            ATTRIBUTES(COUNT=g_detail_cnt)
         END DISPLAY
         DISPLAY ARRAY g_sfcb20_d TO s_detail22.*
            ATTRIBUTES(COUNT=g_detail_cnt)
         END DISPLAY
         DISPLAY ARRAY g_sfcb21_d TO s_detail23.*
            ATTRIBUTES(COUNT=g_detail_cnt)
         END DISPLAY
         DISPLAY ARRAY g_sfcb22_d TO s_detail24.*
            ATTRIBUTES(COUNT=g_detail_cnt)
         END DISPLAY
         DISPLAY ARRAY g_sfcb23_d TO s_detail25.*
            ATTRIBUTES(COUNT=g_detail_cnt)
         END DISPLAY
         DISPLAY ARRAY g_sfcb24_d TO s_detail26.*
            ATTRIBUTES(COUNT=g_detail_cnt)
         END DISPLAY
         DISPLAY ARRAY g_sfcb25_d TO s_detail27.*
            ATTRIBUTES(COUNT=g_detail_cnt)
         END DISPLAY
         DISPLAY ARRAY g_sfcb26_d TO s_detail28.*
            ATTRIBUTES(COUNT=g_detail_cnt)
         END DISPLAY
         DISPLAY ARRAY g_sfcb27_d TO s_detail29.*
            ATTRIBUTES(COUNT=g_detail_cnt)
         END DISPLAY
         DISPLAY ARRAY g_sfcb28_d TO s_detail30.*
            ATTRIBUTES(COUNT=g_detail_cnt)
         END DISPLAY
         DISPLAY ARRAY g_sfcb29_d TO s_detail31.*
            ATTRIBUTES(COUNT=g_detail_cnt)
         END DISPLAY
         DISPLAY ARRAY g_sfcb_d TO s_detail33.*
            ATTRIBUTES(COUNT=g_detail_cnt)
         END DISPLAY
         #end add-point
 
         BEFORE DIALOG
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL DIALOG.setSelectionMode("s_detail1", 1)
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            CALL axmq501_detail_action_trans()
 
            #add-point:ui_dialog段before dialog name="ui_dialog.bef_dialog"
            
            #end add-point
            NEXT FIELD xmdadocno
 
         AFTER DIALOG
            #add-point:ui_dialog段 after dialog name="ui_dialog.after_dialog"
            
            #end add-point
            
         ON ACTION exit
            LET g_action_choice="exit"
            LET INT_FLAG = FALSE
            LET li_exit = TRUE
            EXIT DIALOG 
      
         ON ACTION close
            LET INT_FLAG=FALSE
            LET li_exit = TRUE
            EXIT DIALOG
 
         ON ACTION accept
            INITIALIZE g_wc_filter TO NULL
            IF cl_null(g_wc) THEN
               LET g_wc = " 1=1"
            END IF
 
 
         
            IF cl_null(g_wc2) THEN
               LET g_wc2 = " 1=1"
            END IF
 
 
 
            #add-point:ON ACTION accept name="ui_dialog.accept"
            IF tm.chk1 = 'N' AND tm.chk2 = 'N' AND tm.chk3 = 'N' AND
               tm.chk4 = 'N' AND tm.chk5 = 'N' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.code   = 'aqc-00071'
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CONTINUE DIALOG
            END IF
            #end add-point
 
            LET g_detail_idx = 1
            LET g_detail_idx2 = 1
            CALL axmq501_b_fill()
 
            IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.extend = ""
               LET g_errparam.code   = -100
               LET g_errparam.popup  = TRUE
               CALL cl_err()
            END IF
 
 
         ON ACTION agendum   # 待辦事項
            #add-point:ON ACTION agendum name="ui_dialog.agendum"
            
            #end add-point
            CALL cl_user_overview()
 
         ON ACTION exporttoexcel   #匯出excel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               CALL g_export_node.clear()
               LET g_export_node[1] = base.typeInfo.create(g_xmda_d)
               LET g_export_id[1]   = "s_detail1"
 
               #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
               LET g_export_node[2] = base.typeInfo.create(g_sfaa_d)
               LET g_export_id[2]   = "s_detail2"
               LET g_export_node[3] = base.typeInfo.create(g_sfcb00_d)
               LET g_export_id[3]   = "s_detail32"
               LET g_export_node[4] = base.typeInfo.create(g_sfcb01_d)
               LET g_export_id[4]   = "s_detail3"
               LET g_export_node[5] = base.typeInfo.create(g_sfcb02_d)
               LET g_export_id[5]   = "s_detail4"
               LET g_export_node[6] = base.typeInfo.create(g_sfcb03_d)
               LET g_export_id[6]   = "s_detail5"
               LET g_export_node[7] = base.typeInfo.create(g_sfcb04_d)
               LET g_export_id[7]   = "s_detail6"
               LET g_export_node[8] = base.typeInfo.create(g_sfcb05_d)
               LET g_export_id[8]   = "s_detail7"
               LET g_export_node[9] = base.typeInfo.create(g_sfcb06_d)
               LET g_export_id[9]   = "s_detail8"
               LET g_export_node[10] = base.typeInfo.create(g_sfcb07_d)
               LET g_export_id[10]   = "s_detail9"
               LET g_export_node[11] = base.typeInfo.create(g_sfcb08_d)
               LET g_export_id[11]   = "s_detail10"
               LET g_export_node[12] = base.typeInfo.create(g_sfcb09_d)
               LET g_export_id[12]   = "s_detail11"
               LET g_export_node[13] = base.typeInfo.create(g_sfcb10_d)
               LET g_export_id[13]   = "s_detail12"
               LET g_export_node[14] = base.typeInfo.create(g_sfcb11_d)
               LET g_export_id[14]   = "s_detail13"
               LET g_export_node[15] = base.typeInfo.create(g_sfcb12_d)
               LET g_export_id[15]   = "s_detail14"
               LET g_export_node[16] = base.typeInfo.create(g_sfcb13_d)
               LET g_export_id[16]   = "s_detail15"
               LET g_export_node[17] = base.typeInfo.create(g_sfcb14_d)
               LET g_export_id[17]   = "s_detail16"
               LET g_export_node[18] = base.typeInfo.create(g_sfcb15_d)
               LET g_export_id[18]   = "s_detail17"
               LET g_export_node[19] = base.typeInfo.create(g_sfcb16_d)
               LET g_export_id[19]   = "s_detail18"
               LET g_export_node[20] = base.typeInfo.create(g_sfcb17_d)
               LET g_export_id[20]   = "s_detail19"
               LET g_export_node[21] = base.typeInfo.create(g_sfcb18_d)
               LET g_export_id[21]   = "s_detail20"
               LET g_export_node[22] = base.typeInfo.create(g_sfcb19_d)
               LET g_export_id[22]   = "s_detail21"
               LET g_export_node[23] = base.typeInfo.create(g_sfcb20_d)
               LET g_export_id[23]   = "s_detail22"
               LET g_export_node[24] = base.typeInfo.create(g_sfcb21_d)
               LET g_export_id[24]   = "s_detail23"
               LET g_export_node[25] = base.typeInfo.create(g_sfcb22_d)
               LET g_export_id[25]   = "s_detail24"
               LET g_export_node[26] = base.typeInfo.create(g_sfcb23_d)
               LET g_export_id[26]   = "s_detail25"
               LET g_export_node[27] = base.typeInfo.create(g_sfcb24_d)
               LET g_export_id[27]   = "s_detail26"
               LET g_export_node[28] = base.typeInfo.create(g_sfcb25_d)
               LET g_export_id[28]   = "s_detail27"
               LET g_export_node[29] = base.typeInfo.create(g_sfcb26_d)
               LET g_export_id[29]   = "s_detail28"
               LET g_export_node[30] = base.typeInfo.create(g_sfcb27_d)
               LET g_export_id[30]   = "s_detail29"
               LET g_export_node[31] = base.typeInfo.create(g_sfcb28_d)
               LET g_export_id[31]   = "s_detail30"
               LET g_export_node[32] = base.typeInfo.create(g_sfcb29_d)
               LET g_export_id[32]   = "s_detail31"
               LET g_export_node[33] = base.typeInfo.create(g_sfcb_d)
               LET g_export_id[33]   = "s_detail33"
               #END add-point
               CALL cl_export_to_excel_getpage()
               CALL cl_export_to_excel()
            END IF
 
         ON ACTION datarefresh   # 重新整理
            CALL axmq501_b_fill()
 
         ON ACTION qbehidden     #qbe頁籤折疊
            IF g_qbe_hidden THEN
               CALL gfrm_curr.setElementHidden("qbe",0)
               CALL gfrm_curr.setElementImage("qbehidden","16/mainhidden.png")
               LET g_qbe_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("qbe",1)
               CALL gfrm_curr.setElementImage("qbehidden","16/worksheethidden.png")
               LET g_qbe_hidden = 1     #hidden
            END IF
 
         ON ACTION detail_first               #page first
            LET g_action_choice = "detail_first"
            LET g_detail_page_action = "detail_first"
            CALL axmq501_b_fill()
 
         ON ACTION detail_previous                #page previous
            LET g_action_choice = "detail_previous"
            LET g_detail_page_action = "detail_previous"
            CALL axmq501_b_fill()
 
         ON ACTION detail_next               #page next
            LET g_action_choice = "detail_next"
            LET g_detail_page_action = "detail_next"
            CALL axmq501_b_fill()
 
         ON ACTION detail_last               #page last
            LET g_action_choice = "detail_last"
            LET g_detail_page_action = "detail_last"
            CALL axmq501_b_fill()
 
         #應用 qs19 樣板自動產生(Version:3)
         #有關於sel欄位選取的action段落
         #選擇全部
         ON ACTION selall
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 1)
            FOR li_idx = 1 TO g_xmda_d.getLength()
               LET g_xmda_d[li_idx].sel = "Y"
            END FOR
 
            #add-point:ui_dialog段on action selall name="ui_dialog.onaction_selall"
            
            #end add-point
 
         #取消全部
         ON ACTION selnone
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 0)
            FOR li_idx = 1 TO g_xmda_d.getLength()
               LET g_xmda_d[li_idx].sel = "N"
            END FOR
 
            #add-point:ui_dialog段on action selnone name="ui_dialog.onaction_selnone"
            
            #end add-point
 
         #勾選所選資料
         ON ACTION sel
            FOR li_idx = 1 TO g_xmda_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_xmda_d[li_idx].sel = "Y"
               END IF
            END FOR
 
            #add-point:ui_dialog段on action sel name="ui_dialog.onaction_sel"
            
            #end add-point
 
         #取消所選資料
         ON ACTION unsel
            FOR li_idx = 1 TO g_xmda_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_xmda_d[li_idx].sel = "N"
               END IF
            END FOR
 
            #add-point:ui_dialog段on action unsel name="ui_dialog.onaction_unsel"
            
            #end add-point
 
 
 
 
 
         #應用 qs16 樣板自動產生(Version:3)
         ON ACTION filter
            LET g_action_choice="filter"
            CALL axmq501_filter()
            #add-point:ON ACTION filter name="menu.filter"
            
            #END add-point
            EXIT DIALOG
 
 
 
 
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               
               #add-point:ON ACTION insert name="menu.insert"
               
               #END add-point
               
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               
               #END add-point
               
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION quickprint
            LET g_action_choice="quickprint"
            IF cl_auth_chk_act("quickprint") THEN
               
               #add-point:ON ACTION quickprint name="menu.quickprint"
               
               #END add-point
               
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION datainfo
            LET g_action_choice="datainfo"
            IF cl_auth_chk_act("datainfo") THEN
               
               #add-point:ON ACTION datainfo name="menu.datainfo"
               
               #END add-point
               
               
            END IF
 
 
 
 
      
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
 
         #add-point:查詢方案相關ACTION設定前 name="ui_dialog.set_qbe_action_before"
         
         #end add-point
 
         ON ACTION qbeclear   # 條件清除
            CLEAR FORM
            #add-point:條件清除後 name="ui_dialog.qbeclear"
            
            #end add-point
 
         #add-point:查詢方案相關ACTION設定後 name="ui_dialog.set_qbe_action_after"
         
         #end add-point
 
      END DIALOG 
   
   END WHILE
 
END FUNCTION
 
{</section>}
 
{<section id="axmq501.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION axmq501_b_fill()
   #add-point:b_fill段define-客製 name="b_fill.define_customerization"
   
   #end add-point
   DEFINE ls_wc           STRING
   DEFINE l_pid           LIKE type_t.chr50
   DEFINE ls_sql_rank     STRING
   #add-point:b_fill段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   DEFINE r_pmak003       LIKE pmak_t.pmak003   #一次性交易對象名稱   #161207-00033#5 add
   DEFINE l_pmaa004       LIKE pmaa_t.pmaa004   #法人類型            #161207-00033#5 add
   DEFINE l_sql           STRING                                    #161207-00033#5 add
   #end add-point
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   CALL cl_set_comp_visible("page_2",FALSE)
   CALL cl_set_comp_visible("page_3",FALSE)
   CALL cl_set_comp_visible("page_4",FALSE)
   CALL cl_set_comp_visible("page_5",FALSE)
   CALL cl_set_comp_visible("page_6",FALSE)
   CALL cl_set_comp_visible("page_7",FALSE)
   CALL cl_set_comp_visible("page_8",FALSE)
   CALL cl_set_comp_visible("page_9",FALSE)
   CALL cl_set_comp_visible("page_10",FALSE)
   CALL cl_set_comp_visible("page_11",FALSE)
   CALL cl_set_comp_visible("page_12",FALSE)
   CALL cl_set_comp_visible("page_13",FALSE)
   CALL cl_set_comp_visible("page_14",FALSE)
   CALL cl_set_comp_visible("page_15",FALSE)
   CALL cl_set_comp_visible("page_16",FALSE)
   CALL cl_set_comp_visible("page_17",FALSE)
   CALL cl_set_comp_visible("page_18",FALSE)
   CALL cl_set_comp_visible("page_19",FALSE)
   CALL cl_set_comp_visible("page_20",FALSE)
   CALL cl_set_comp_visible("page_21",FALSE)
   CALL cl_set_comp_visible("page_22",FALSE)
   CALL cl_set_comp_visible("page_23",FALSE)
   CALL cl_set_comp_visible("page_24",FALSE)
   CALL cl_set_comp_visible("page_25",FALSE)
   CALL cl_set_comp_visible("page_26",FALSE)
   CALL cl_set_comp_visible("page_27",FALSE)
   CALL cl_set_comp_visible("page_28",FALSE)
   CALL cl_set_comp_visible("page_29",FALSE)
   CALL cl_set_comp_visible("page_30",FALSE)
   CALL cl_set_comp_visible("page_31",FALSE)
   #end add-point
 
 
   IF cl_null(g_wc_filter) THEN
      LET g_wc_filter = " 1=1"
   END IF
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
 
   LET ls_wc = g_wc, " AND ", g_wc2, " AND ", g_wc_filter, cl_sql_auth_filter()   #(ver:34) add cl_sql_auth_filter()
 
   CALL g_xmda_d.clear()
 
   #add-point:陣列清空 name="b_fill.array_clear"
   
   #end add-point
 
   LET g_cnt = l_ac
   IF g_cnt = 0 THEN
      LET g_cnt = 1
   END IF
   LET l_ac = 1
 
   # b_fill段sql組成及FOREACH撰寫
   #應用 qs04 樣板自動產生(Version:9)
   #+ b_fill段資料取得(包含sql組成及FOREACH段撰寫)
   LET ls_sql_rank = "SELECT  UNIQUE '',xmda004,'',xmdadocno,xmdadocdt,xmda002,'',xmda003,''  ,DENSE_RANK() OVER( ORDER BY xmda_t.xmdadocno) AS RANK FROM xmda_t", 
 
 
 
                     "",
                     " WHERE xmdaent= ? AND 1=1 AND ", ls_wc
   LET ls_sql_rank = ls_sql_rank, cl_sql_add_filter("xmda_t"),
                     " ORDER BY xmda_t.xmdadocno"
 
   #add-point:b_fill段rank_sql_after name="b_fill.rank_sql_after"
   LET ls_sql_rank = " SELECT UNIQUE '',xmda004,'',xmdadocno,xmdadocdt,xmda002,'',xmda003,'' ",
                     "        ,DENSE_RANK() OVER( ORDER BY xmda_t.xmdadocno) AS RANK ",
                     "   FROM xmda_t,xmdc_t ",
                     "   LEFT OUTER JOIN imaa_t ON imaaent = xmdcent AND imaa001 = xmdc001 ",
                     "  WHERE xmdaent = ? AND ",ls_wc,
                     "    AND xmdasite = '",g_site,"' ",
                     "    AND xmdcent = xmdaent ",
                     "    AND xmdcdocno = xmdadocno "
   LET ls_sql_rank = ls_sql_rank,cl_sql_add_filter("xmda_t"),
                     " ORDER BY '' "
   
   IF tm.chk1 = 'Y' THEN
      LET ls_sql_rank = ls_sql_rank,",xmda004"
   END IF
   IF tm.chk2 = 'Y' THEN
      LET ls_sql_rank = ls_sql_rank,",xmdadocno"
   END IF
   IF tm.chk3 = 'Y' THEN
      LET ls_sql_rank = ls_sql_rank,",xmdadocdt"
   END IF
   IF tm.chk4 = 'Y' THEN
      LET ls_sql_rank = ls_sql_rank,",xmda002"
   END IF
   IF tm.chk5 = 'Y' THEN
      LET ls_sql_rank = ls_sql_rank,",xmda003"
   END IF

   #end add-point
 
   LET g_sql = "SELECT COUNT(1) FROM (",ls_sql_rank,")"
 
   PREPARE b_fill_cnt_pre FROM g_sql  #總筆數
   EXECUTE b_fill_cnt_pre USING g_enterprise INTO g_tot_cnt
   FREE b_fill_cnt_pre
 
   #add-point:b_fill段rank_sql_after_count name="b_fill.rank_sql_after_count"
   
   #end add-point
 
   CASE g_detail_page_action
      WHEN "detail_first"
          LET g_pagestart = 1
 
      WHEN "detail_previous"
          LET g_pagestart = g_pagestart - g_num_in_page
          IF g_pagestart < 1 THEN
              LET g_pagestart = 1
          END IF
 
      WHEN "detail_next"
         LET g_pagestart = g_pagestart + g_num_in_page
         IF g_pagestart > g_tot_cnt THEN
            LET g_pagestart = g_tot_cnt - (g_tot_cnt mod g_num_in_page) + 1
            WHILE g_pagestart > g_tot_cnt
               LET g_pagestart = g_pagestart - g_num_in_page
            END WHILE
         END IF
 
      WHEN "detail_last"
         LET g_pagestart = g_tot_cnt - (g_tot_cnt mod g_num_in_page) + 1
         WHILE g_pagestart > g_tot_cnt
            LET g_pagestart = g_pagestart - g_num_in_page
         END WHILE
 
      OTHERWISE
         LET g_pagestart = 1
 
   END CASE
 
   LET g_sql = "SELECT '',xmda004,'',xmdadocno,xmdadocdt,xmda002,'',xmda003,''",
               " FROM (",ls_sql_rank,")",
              " WHERE RANK >= ",g_pagestart,
                " AND RANK < ",g_pagestart + g_num_in_page
 
   #add-point:b_fill段sql_after name="b_fill.sql_after"
   LET g_sql = " SELECT UNIQUE '' "
   
   IF tm.chk1 = 'Y' THEN
      #160503-00030#13-mod-(S)
#      LET g_sql = g_sql," ,xmda004,'' "
      LET g_sql = g_sql," ,xmda004,(SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"'",
                        "              AND pmaal001 = xmda004 AND pmaal002='"||g_dlang||"') pmaal004"
      #160503-00030#13-mod-(E)
   ELSE
      LET g_sql = g_sql," ,'','' "
   END IF
   
   IF tm.chk2 = 'Y' THEN
      LET g_sql = g_sql," ,xmdadocno "
   ELSE
      LET g_sql = g_sql," ,'' "
   END IF
   
   IF tm.chk3 = 'Y' THEN
      LET g_sql = g_sql," ,xmdadocdt "
   ELSE
      LET g_sql = g_sql," ,'' "
   END IF
   
   IF tm.chk4 = 'Y' THEN
      #160503-00030#13-mod-(S)
#      LET g_sql = g_sql," ,xmda002,xmda002,'' "
      LET g_sql = g_sql," ,xmda002,xmda002,(SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"'",
                        "                      AND ooag001=xmda002) ooag011"
      #160503-00030#13-mod-(E)
   ELSE
      LET g_sql = g_sql," ,'','','' "
   END IF
   
   IF tm.chk5 = 'Y' THEN
      #160503-00030#13-mod-(S)
#      LET g_sql = g_sql," ,xmda003,'' "
      LET g_sql = g_sql," ,xmda003,(SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"'",
                        "              AND ooefl001=xmda003 AND ooefl002='"||g_dlang||"') ooefl003"
      #160503-00030#13-mod-(E)
   ELSE
      LET g_sql = g_sql," ,'','' "
   END IF
   
   LET g_sql = g_sql,
               " FROM (",ls_sql_rank,")",
               " WHERE RANK >= ",g_pagestart,
               " AND RANK < ",g_pagestart + g_num_in_page
   #161207-00033#5-s add
   LET l_sql = "SELECT pmaa004 FROM pmaa_t        ",
               " WHERE pmaaent ='",g_enterprise,"'",
               "   AND pmaa001 = ?                "
   PREPARE axmq501_pb3 FROM l_sql
   #161207-00033#5-e add

   #end add-point
 
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE axmq501_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR axmq501_pb
 
   OPEN b_fill_curs USING g_enterprise
 
   FOREACH b_fill_curs INTO g_xmda_d[l_ac].sel,g_xmda_d[l_ac].xmda004,g_xmda_d[l_ac].xmda004_desc,g_xmda_d[l_ac].xmdadocno, 
       g_xmda_d[l_ac].xmdadocdt,g_xmda_d[l_ac].xmda002,g_xmda_d[l_ac].url_b_xmda002,g_xmda_d[l_ac].xmda002_desc, 
       g_xmda_d[l_ac].xmda003,g_xmda_d[l_ac].xmda003_desc
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
 
      
 
      #add-point:b_fill段資料填充 name="b_fill.fill"
      #161207-00033#5-s add
      EXECUTE axmq501_pb3 USING g_xmda_d[l_ac].xmda004 INTO l_pmaa004
      IF l_pmaa004 = '2' THEN   #2.一次性交易對象
         #一次性交易對象全名
         CALL s_desc_axm_get_oneturn_guest_desc('1',g_xmda_d[l_ac].xmdadocno)
              RETURNING r_pmak003
         
         IF NOT cl_null(r_pmak003) THEN
            LET g_xmda_d[l_ac].xmda004_desc = r_pmak003
         END IF
      END IF
      #161207-00033#5-e add         
      #end add-point
 
      CALL axmq501_detail_show("'1'")
 
      CALL axmq501_xmda_t_mask()
 
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend =  "" 
            LET g_errparam.code   =  9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
 
         END IF
         EXIT FOREACH
      END IF
      LET l_ac = l_ac + 1
 
   END FOREACH
 
 
 
 
 
   #應用 qs05 樣板自動產生(Version:4)
   #+ b_fill段其他table資料取得(包含sql組成及資料填充)
 
 
 
 
 
 
   #add-point:b_fill段資料填充(其他單身) name="b_fill.others.fill"
   
   #end add-point
 
   CALL g_xmda_d.deleteElement(g_xmda_d.getLength())
 
   #add-point:陣列長度調整 name="b_fill.array_deleteElement"
   CALL cl_set_comp_visible("b_xmda004,b_xmda004_desc,b_xmdadocno,b_xmdadocdt",TRUE)
   CALL cl_set_comp_visible("b_xmda002,b_xmda002_desc,b_xmda003,b_xmda003_desc",TRUE)

   IF tm.chk1 = 'Y' THEN
      CALL cl_set_comp_visible("b_xmda004,b_xmda004_desc",TRUE)
   ELSE
      CALL cl_set_comp_visible("b_xmda004,b_xmda004_desc",FALSE)
   END IF

   IF tm.chk2 = 'Y' THEN
      CALL cl_set_comp_visible("b_xmdadocno",TRUE)
   ELSE
      CALL cl_set_comp_visible("b_xmdadocno",FALSE)
   END IF

   IF tm.chk3 = 'Y' THEN
      CALL cl_set_comp_visible("b_xmdadocdt",TRUE)
   ELSE
      CALL cl_set_comp_visible("b_xmdadocdt",FALSE)
   END IF

   IF tm.chk4 = 'Y' THEN
      CALL cl_set_comp_visible("b_xmda002,b_xmda002_desc",TRUE)
   ELSE
      CALL cl_set_comp_visible("b_xmda002,b_xmda002_desc",FALSE)
   END IF

   IF tm.chk5 = 'Y' THEN
      CALL cl_set_comp_visible("b_xmda003,b_xmda003_desc",TRUE)
   ELSE
      CALL cl_set_comp_visible("b_xmda003,b_xmda003_desc",FALSE)
   END IF
   #end add-point
 
   LET g_error_show = 0
 
   LET g_detail_cnt = g_xmda_d.getLength()
   LET l_ac = g_cnt
   LET g_cnt = 0
 
   #應用 qs06 樣板自動產生(Version:3)
   #+ b_fill段CURSOR釋放
   CLOSE b_fill_curs
   FREE axmq501_pb
 
 
 
 
 
 
   #調整單身index指標，避免翻頁後指到空白筆數
   CALL axmq501_detail_index_setting()
 
   #重新計算單身筆數並呈現
   CALL axmq501_detail_action_trans()
 
   LET l_ac = 1
   IF g_xmda_d.getLength() > 0 THEN
      CALL axmq501_b_fill2()
   END IF
 
      CALL axmq501_filter_show('xmda004','b_xmda004')
   CALL axmq501_filter_show('xmdadocno','b_xmdadocno')
   CALL axmq501_filter_show('xmdadocdt','b_xmdadocdt')
   CALL axmq501_filter_show('xmda002','b_xmda002')
   CALL axmq501_filter_show('xmda003','b_xmda003')
 
 
END FUNCTION
 
{</section>}
 
{<section id="axmq501.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION axmq501_b_fill2()
   #add-point:b_fill2段define-客製 name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE li_ac           LIKE type_t.num10
   #add-point:b_fill2段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
 
   #add-point:FUNCTION前置處理 name="b_fill2.before_function"
   
   #end add-point
 
   LET li_ac = l_ac
 
   #單身組成
   #應用 qs07 樣板自動產生(Version:7)
   #+ b_fill2段table資料取得(包含sql組成及資料填充)
 
   #add-point:陣列清空 name="b_fill2.array_clear"
   CALL g_sfaa_d.clear()
   CALL g_sfcb_d.clear()
   CALL g_sfcb00_d.clear()
   CALL g_sfcb01_d.clear()
   CALL g_sfcb02_d.clear()
   CALL g_sfcb03_d.clear()
   CALL g_sfcb04_d.clear()
   CALL g_sfcb05_d.clear()
   CALL g_sfcb06_d.clear()
   CALL g_sfcb07_d.clear()
   CALL g_sfcb08_d.clear()
   CALL g_sfcb09_d.clear()
   CALL g_sfcb10_d.clear()
   CALL g_sfcb11_d.clear()
   CALL g_sfcb12_d.clear()
   CALL g_sfcb13_d.clear()
   CALL g_sfcb14_d.clear()
   CALL g_sfcb15_d.clear()
   CALL g_sfcb16_d.clear()
   CALL g_sfcb17_d.clear()
   CALL g_sfcb18_d.clear()
   CALL g_sfcb19_d.clear()
   CALL g_sfcb20_d.clear()
   CALL g_sfcb21_d.clear()
   CALL g_sfcb22_d.clear()
   CALL g_sfcb23_d.clear()
   CALL g_sfcb24_d.clear()
   CALL g_sfcb25_d.clear()
   CALL g_sfcb26_d.clear()
   CALL g_sfcb27_d.clear()
   CALL g_sfcb28_d.clear()
   CALL g_sfcb29_d.clear()
   
   #160503-00030#13-mod-(S)
#   LET g_sql = " SELECT sfaadocno,sfaadocdt,sfaa002,ooag011,sfab003,sfab007,sfaa010,imaal003,imaal004, ",
#               "        sfaa013,oocal003,sfaa012,sfaa049,sfaa050,sfaa051,sfaa055,sfaa056,sfaastus ",
#               "   FROM xmda_t,sfab_t,sfaa_t ",
#               "   LEFT JOIN ooag_t ON ooagent = sfaaent AND sfaa002 = ooag001 ",
#               "   LEFT JOIN imaal_t ON imaalent = sfaaent AND sfaa010 = imaal001 AND imaal002 = '"||g_dlang||"' ",
#               "   LEFT JOIN oocal_t ON oocalent = sfaaent AND sfaa013 = oocal001 AND oocal002 = '"||g_dlang||"' ",
#               "  WHERE xmdaent = sfaaent ",
#               "    AND xmdasite = sfaasite ",
#               "    AND sfabent = sfaaent ",
#               "    AND sfabdocno = sfaadocno ",
#               "    AND sfab002 = xmdadocno ",
#               "    AND sfaasite = '",g_site,"' ",
#               "    AND sfaaent = ",g_enterprise
   LET g_sql = " SELECT sfaadocno,sfaadocdt,sfaa002,",
               "        (SELECT ooag011 FROM ooag_t where ooagent = sfaaent AND sfaa002 = ooag001) ooag011,",
               "        sfab003,sfab007,sfaa010,",
               "        (SELECT imaal003 from imaal_t where imaalent = sfaaent AND sfaa010 = imaal001 AND imaal002 = '"||g_dlang||"') imaal003, ",
               "        (SELECT imaal004 from imaal_t WHERE imaalent = sfaaent AND sfaa010 = imaal001 AND imaal002 = '"||g_dlang||"') imaal004, ",
               "        sfaa013, ",
               "        (select oocal003 from oocal_t where oocalent = sfaaent AND sfaa013 = oocal001 AND oocal002 = '"||g_dlang||"') oocal003, ",
               "        sfaa012,sfaa049,sfaa050,sfaa051,sfaa055,sfaa056,sfaastus ",
               "   FROM xmda_t,sfab_t,sfaa_t ",
               "  WHERE xmdaent = sfaaent ",
               "    AND xmdasite = sfaasite ",
               "    AND sfabent = sfaaent ",
               "    AND sfabdocno = sfaadocno ",
               "    AND sfab002 = xmdadocno ",
               "    AND sfaasite = '",g_site,"' ",
               "    AND sfaaent = ",g_enterprise
               
               
   #160503-00030#13-mod-(E)
   IF tm.chk1 = 'Y' THEN
      LET g_sql = g_sql," AND xmda004 = '",g_xmda_d[g_detail_idx].xmda004,"' "
   END IF
   IF tm.chk2 = 'Y' THEN
      LET g_sql = g_sql," AND xmdadocno = '",g_xmda_d[g_detail_idx].xmdadocno,"' "
   END IF
   IF tm.chk3 = 'Y' THEN
      LET g_sql = g_sql," AND xmdadocdt = '",g_xmda_d[g_detail_idx].xmdadocdt,"' "
   END IF
   IF tm.chk4 = 'Y' THEN
      LET g_sql = g_sql," AND xmda002 = '",g_xmda_d[g_detail_idx].xmda002,"' "
   END IF
   IF tm.chk5 = 'Y' THEN
      LET g_sql = g_sql," AND xmda003 = '",g_xmda_d[g_detail_idx].xmda003,"' "
   END IF
   
   LET g_sql = g_sql,"ORDER BY sfaadocno,sfaadocdt,sfaa002,sfab003"
   
   PREPARE axmq501_pb2 FROM g_sql
   DECLARE b_fill_curs2 CURSOR FOR axmq501_pb2

   LET l_ac = 1
   FOREACH b_fill_curs2 INTO g_sfaa_d[l_ac].sfaadocno,g_sfaa_d[l_ac].sfaadocdt,
                             g_sfaa_d[l_ac].sfaa002,g_sfaa_d[l_ac].sfaa002_desc,
                             g_sfaa_d[l_ac].sfab003,g_sfaa_d[l_ac].sfab007,
                             g_sfaa_d[l_ac].sfaa010,g_sfaa_d[l_ac].sfaa010_desc,
                             g_sfaa_d[l_ac].sfaa010_desc_1,g_sfaa_d[l_ac].sfaa013,
                             g_sfaa_d[l_ac].sfaa013_desc,g_sfaa_d[l_ac].sfaa012,
                             g_sfaa_d[l_ac].sfaa049,g_sfaa_d[l_ac].sfaa050,
                             g_sfaa_d[l_ac].sfaa051,g_sfaa_d[l_ac].sfaa055,
                             g_sfaa_d[l_ac].sfaa056,g_sfaa_d[l_ac].sfaastus
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         EXIT FOREACH
      END IF
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   =  9035
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         EXIT FOREACH
      END IF
      LET l_ac = l_ac + 1
   END FOREACH
   
   #end add-point
 
 
 
 
   #add-point:陣列長度調整 name="b_fill2.array_deleteElement"
   CALL g_sfaa_d.deleteElement(g_sfaa_d.getLength())
   LET li_ac = g_sfaa_d.getLength()
   #end add-point
 
 
   DISPLAY li_ac TO FORMONLY.cnt
   LET g_detail_idx2 = 1
   DISPLAY g_detail_idx2 TO FORMONLY.idx
 
 
 
 
 
   #add-point:單身填充後 name="b_fill2.after_fill"
   FREE axmq501_pb2
   CALL axmq501_b_fill3()
   #end add-point
 
   LET l_ac = li_ac
 
END FUNCTION
 
{</section>}
 
{<section id="axmq501.detail_show" >}
#+ 顯示相關資料
PRIVATE FUNCTION axmq501_detail_show(ps_page)
   #add-point:show段define-客製 name="detail_show.define_customerization"
   
   #end add-point
   DEFINE ps_page    STRING
   DEFINE ls_sql     STRING
   #add-point:show段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   
   #end add-point
 
   #add-point:detail_show段之前 name="detail_show.before"
   
   #end add-point
 
   
 
   #讀入ref值
   IF ps_page.getIndexOf("'1'",1) > 0 THEN
      #帶出公用欄位reference值page1
      
 
      #add-point:show段單身reference name="detail_show.body.reference"
      #160503-00030#13-mark-(S)
#      CALL s_desc_get_trading_partner_abbr_desc(g_xmda_d[l_ac].xmda004)
#           RETURNING g_xmda_d[l_ac].xmda004_desc
#     
#      CALL s_desc_get_person_desc(g_xmda_d[l_ac].xmda002)
#           RETURNING g_xmda_d[l_ac].xmda002_desc
#     
#      CALL s_desc_get_department_desc(g_xmda_d[l_ac].xmda003)
#           RETURNING g_xmda_d[l_ac].xmda003_desc
      #160503-00030#13-mark-(E)
      #end add-point
   END IF
 
 
 
   #add-point:detail_show段之後 name="detail_show.after"
   
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="axmq501.filter" >}
#應用 qs13 樣板自動產生(Version:8)
#+ filter段相關程式段
#+ filter過濾功能
PRIVATE FUNCTION axmq501_filter()
   #add-point:filter段define-客製 name="filter.define_customerization"
   
   #end add-point
   DEFINE  ls_result   STRING
   #add-point:filter段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   
   #end add-point
 
   #add-point:FUNCTION前置處理 name="filter.before_function"
   
   #end add-point
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
 
   CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
   CALL gfrm_curr.setFieldHidden("formonly.b_statepic", TRUE)
 
   
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   #應用 qs08 樣板自動產生(Version:5)
   #+ filter段DIALOG段的組成
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON xmda004,xmdadocno,xmdadocdt,xmda002,xmda003
                          FROM s_detail1[1].b_xmda004,s_detail1[1].b_xmdadocno,s_detail1[1].b_xmdadocdt, 
                              s_detail1[1].b_xmda002,s_detail1[1].b_xmda003
 
         BEFORE CONSTRUCT
                     DISPLAY axmq501_filter_parser('xmda004') TO s_detail1[1].b_xmda004
            DISPLAY axmq501_filter_parser('xmdadocno') TO s_detail1[1].b_xmdadocno
            DISPLAY axmq501_filter_parser('xmdadocdt') TO s_detail1[1].b_xmdadocdt
            DISPLAY axmq501_filter_parser('xmda002') TO s_detail1[1].b_xmda002
            DISPLAY axmq501_filter_parser('xmda003') TO s_detail1[1].b_xmda003
 
 
         #單身公用欄位開窗相關處理
         
 
         #單身一般欄位開窗相關處理
                  #----<<sel>>----
         #----<<b_xmda004>>----
         #Ctrlp:construct.c.page1.b_xmda004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_xmda004
            #add-point:ON ACTION controlp INFIELD b_xmda004 name="construct.c.filter.page1.b_xmda004"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_xmda004  #顯示到畫面上
            NEXT FIELD b_xmda004                     #返回原欄位
    


            #END add-point
 
 
         #----<<b_xmda004_desc>>----
         #----<<b_xmdadocno>>----
         #Ctrlp:construct.c.page1.b_xmdadocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_xmdadocno
            #add-point:ON ACTION controlp INFIELD b_xmdadocno name="construct.c.filter.page1.b_xmdadocno"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_xmdadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_xmdadocno  #顯示到畫面上
            NEXT FIELD b_xmdadocno                     #返回原欄位
    


            #END add-point
 
 
         #----<<b_xmdadocdt>>----
         #Ctrlp:construct.c.filter.page1.b_xmdadocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_xmdadocdt
            #add-point:ON ACTION controlp INFIELD b_xmdadocdt name="construct.c.filter.page1.b_xmdadocdt"
            
            #END add-point
 
 
         #----<<b_xmda002>>----
         #Ctrlp:construct.c.page1.b_xmda002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_xmda002
            #add-point:ON ACTION controlp INFIELD b_xmda002 name="construct.c.filter.page1.b_xmda002"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_xmda002  #顯示到畫面上
            NEXT FIELD b_xmda002                     #返回原欄位
    


            #END add-point
 
 
         #----<<url_b_xmda002>>----
         #----<<b_xmda002_desc>>----
         #----<<b_xmda003>>----
         #Ctrlp:construct.c.page1.b_xmda003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_xmda003
            #add-point:ON ACTION controlp INFIELD b_xmda003 name="construct.c.filter.page1.b_xmda003"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_xmda003  #顯示到畫面上
            NEXT FIELD b_xmda003                     #返回原欄位
    


            #END add-point
 
 
         #----<<b_xmda003_desc>>----
 
 
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         
         #end add-point
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
 
   END DIALOG
 
 
 
 
 
   
 
   #add-point:離開DIALOG後相關處理 name="filter.after_dialog"
   
   #end add-point
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = g_wc_filter, " "
   ELSE
      LET g_wc_filter = g_wc_filter_t
   END IF
 
      CALL axmq501_filter_show('xmda004','b_xmda004')
   CALL axmq501_filter_show('xmdadocno','b_xmdadocno')
   CALL axmq501_filter_show('xmdadocdt','b_xmdadocdt')
   CALL axmq501_filter_show('xmda002','b_xmda002')
   CALL axmq501_filter_show('xmda003','b_xmda003')
 
 
   CALL axmq501_b_fill()
 
   CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
   CALL gfrm_curr.setFieldHidden("formonly.b_statepic", FALSE)
 
END FUNCTION
 
{</section>}
 
{<section id="axmq501.filter_parser" >}
#應用 qs14 樣板自動產生(Version:6)
#+ filter pasara段
#+ filter欄位解析
PRIVATE FUNCTION axmq501_filter_parser(ps_field)
   #add-point:filter段define-客製 name="filter_parser.define_customerization"
   
   #end add-point
   {<Local define>}
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   {</Local define>}
   #add-point:filter段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   
   #end add-point
 
   #add-point:FUNCTION前置處理 name="filter_parser.before_function"
   
   #end add-point
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
 
{</section>}
 
{<section id="axmq501.filter_show" >}
#應用 qs15 樣板自動產生(Version:6)
#+ filter標題欄位顯示搜尋條件
PRIVATE FUNCTION axmq501_filter_show(ps_field,ps_object)
   #add-point:filter_show段define-客製 name="filter_show.define_customerization"
   
   #end add-point
   DEFINE ps_field         STRING
   DEFINE ps_object        STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
   #add-point:filter_show段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_show.define"
   
   #end add-point
 
   #add-point:FUNCTION前置處理 name="filter_show.before_function"
   
   #end add-point
 
   LET ls_name = "formonly.", ps_object
 
 
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LET ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = axmq501_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
 
{</section>}
 
{<section id="axmq501.detail_action_trans" >}
#+ 單身分頁筆數顯示及action圖片顯示切換功能
PRIVATE FUNCTION axmq501_detail_action_trans()
   #add-point:detail_action_trans段define-客製 name="detail_action_trans.define_customerization"
   
   #end add-point
   #add-point:detail_action_trans段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_action_trans.define"
   
   #end add-point
 
 
   #add-point:FUNCTION前置處理 name="detail_action_trans.before_function"
   
   #end add-point
 
   #因應單身切頁功能，筆數計算方式調整
   LET g_current_row_tot = g_pagestart + g_detail_idx - 1
   DISPLAY g_current_row_tot TO FORMONLY.h_index
   DISPLAY g_tot_cnt TO FORMONLY.h_count
 
   #顯示單身頁面的起始與結束筆數
   LET g_page_start_num = g_pagestart
   LET g_page_end_num = g_pagestart + g_num_in_page - 1
   DISPLAY g_page_start_num TO FORMONLY.p_start
   DISPLAY g_page_end_num TO FORMONLY.p_end
 
   #目前不支援跳頁功能
   LET g_page_act_list = "detail_first,detail_previous,'',detail_next,detail_last"
   CALL cl_navigator_detail_page_setting(g_page_act_list,g_current_row_tot,g_pagestart,g_num_in_page,g_tot_cnt)
 
END FUNCTION
 
{</section>}
 
{<section id="axmq501.detail_index_setting" >}
#+ 單身切頁後，index重新調整，避免翻頁後指到空白筆數
PRIVATE FUNCTION axmq501_detail_index_setting()
   #add-point:detail_index_setting段define-客製 name="detail_index_setting.define_customerization"
   
   #end add-point
   DEFINE li_redirect     BOOLEAN
   DEFINE ldig_curr       ui.Dialog
   #add-point:detail_index_setting段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_index_setting.define"
   
   #end add-point
 
   #add-point:FUNCTION前置處理 name="detail_index_setting.before_function"
   
   #end add-point
 
   IF g_curr_diag IS NOT NULL THEN
      CASE
         WHEN g_curr_diag.getCurrentRow("s_detail1") <= "0"
            LET g_detail_idx = 1
            IF g_xmda_d.getLength() > 0 THEN
               LET li_redirect = TRUE
            END IF
         WHEN g_curr_diag.getCurrentRow("s_detail1") > g_xmda_d.getLength() AND g_xmda_d.getLength() > 0
            LET g_detail_idx = g_xmda_d.getLength()
            LET li_redirect = TRUE
         WHEN g_curr_diag.getCurrentRow("s_detail1") != g_detail_idx
            IF g_detail_idx > g_xmda_d.getLength() THEN
               LET g_detail_idx = g_xmda_d.getLength()
            END IF
            LET li_redirect = TRUE
      END CASE
   END IF
 
   IF li_redirect THEN
      LET ldig_curr = ui.Dialog.getCurrent()
      CALL ldig_curr.setCurrentRow("s_detail1", g_detail_idx)
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="axmq501.mask_functions" >}
 &include "erp/axm/axmq501_mask.4gl"
 
{</section>}
 
{<section id="axmq501.other_function" readonly="Y" >}

################################################################################
# Descriptions...: RunCard單身陣列填充
# Memo...........:
# Usage..........: CALL axmq501_b_fill3()
# Input parameter: 
# Return code....: 
# Date & Author..: 150724 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION axmq501_b_fill3()
DEFINE l_sfcb001    LIKE sfcb_t.sfcb001
DEFINE l_ac00       LIKE type_t.num10
DEFINE l_ac01       LIKE type_t.num10
DEFINE l_ac02       LIKE type_t.num10
DEFINE l_ac03       LIKE type_t.num10
DEFINE l_ac04       LIKE type_t.num10
DEFINE l_ac05       LIKE type_t.num10
DEFINE l_ac06       LIKE type_t.num10
DEFINE l_ac07       LIKE type_t.num10
DEFINE l_ac08       LIKE type_t.num10
DEFINE l_ac09       LIKE type_t.num10
DEFINE l_ac10       LIKE type_t.num10
DEFINE l_ac11       LIKE type_t.num10
DEFINE l_ac12       LIKE type_t.num10
DEFINE l_ac13       LIKE type_t.num10
DEFINE l_ac14       LIKE type_t.num10
DEFINE l_ac15       LIKE type_t.num10
DEFINE l_ac16       LIKE type_t.num10
DEFINE l_ac17       LIKE type_t.num10
DEFINE l_ac18       LIKE type_t.num10
DEFINE l_ac19       LIKE type_t.num10
DEFINE l_ac20       LIKE type_t.num10
DEFINE l_ac21       LIKE type_t.num10
DEFINE l_ac22       LIKE type_t.num10
DEFINE l_ac23       LIKE type_t.num10
DEFINE l_ac24       LIKE type_t.num10
DEFINE l_ac25       LIKE type_t.num10
DEFINE l_ac26       LIKE type_t.num10
DEFINE l_ac27       LIKE type_t.num10
DEFINE l_ac28       LIKE type_t.num10
DEFINE l_ac29       LIKE type_t.num10
DEFINE li_ac        LIKE type_t.num10

   IF cl_null(g_sfaa_d[g_detail_idx2].sfaadocno) THEN
      RETURN
   END IF
   
   LET l_ac00 = 1
   LET l_ac01 = 1
   LET l_ac02 = 1
   LET l_ac03 = 1
   LET l_ac04 = 1
   LET l_ac05 = 1
   LET l_ac06 = 1
   LET l_ac07 = 1
   LET l_ac08 = 1
   LET l_ac09 = 1
   LET l_ac10 = 1
   LET l_ac11 = 1
   LET l_ac12 = 1
   LET l_ac13 = 1
   LET l_ac14 = 1
   LET l_ac15 = 1
   LET l_ac16 = 1
   LET l_ac17 = 1
   LET l_ac18 = 1
   LET l_ac19 = 1
   LET l_ac20 = 1
   LET l_ac21 = 1
   LET l_ac22 = 1
   LET l_ac23 = 1
   LET l_ac24 = 1
   LET l_ac25 = 1
   LET l_ac26 = 1
   LET l_ac27 = 1
   LET l_ac28 = 1
   LET l_ac29 = 1

   LET g_sql = " SELECT UNIQUE sfcb001 ",
               "   FROM sfcb_t ",
               "  WHERE sfcbdocno = '",g_sfaa_d[g_detail_idx2].sfaadocno,"' ",
               "    AND sfcbent = ",g_enterprise,
               "  ORDER BY sfcb001"
   PREPARE sel_sfcb001_bp FROM g_sql
   DECLARE sel_sfcb001_cs CURSOR FOR sel_sfcb001_bp
   
   LET g_sql = " SELECT sfcb002,sfcb003,oocql004,sfcb004,sfcb050, ",
               "        sfcb046,sfcb047,sfcb028,sfcb029,sfcb030, ",
               "        sfcb031,sfcb032,sfcb033,sfcb034,sfcb035, ",
               "        sfcb038,sfcb039,sfcb036,sfcb037,sfcb040, ",
               "        sfcb041,sfcb042,sfcb048,sfcb049,sfcb051 ",
               "   FROM sfcb_t ",
               "   LEFT OUTER JOIN oocql_t ON oocqlent = sfcbent AND oocql001 = '221' AND oocql002 = sfcb003 AND oocql003 = '"||g_dlang||"' ",
               "  WHERE sfcb001 = ? ",
               "    AND sfcbdocno = '",g_sfaa_d[g_detail_idx2].sfaadocno,"' ",
               "    AND sfcbsite = '",g_site,"' ",
               "    AND sfcbent = ",g_enterprise,
               "  ORDER BY sfcb002"
   PREPARE sel_sfcb_bp FROM g_sql
   DECLARE sel_sfcb_cs CURSOR FOR sel_sfcb_bp
   
   LET l_sfcb001 = ''
   FOREACH sel_sfcb001_cs INTO l_sfcb001
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         EXIT FOREACH
      END IF
      
      CASE l_sfcb001
         WHEN '0'
            FOREACH sel_sfcb_cs USING l_sfcb001
               INTO g_sfcb00_d[l_ac00].sfcb002,g_sfcb00_d[l_ac00].sfcb003,
                    g_sfcb00_d[l_ac00].sfcb003_desc,g_sfcb00_d[l_ac00].sfcb004,
                    g_sfcb00_d[l_ac00].sfcb050,g_sfcb00_d[l_ac00].sfcb046,
                    g_sfcb00_d[l_ac00].sfcb047,g_sfcb00_d[l_ac00].sfcb028,
                    g_sfcb00_d[l_ac00].sfcb029,g_sfcb00_d[l_ac00].sfcb030,
                    g_sfcb00_d[l_ac00].sfcb031,g_sfcb00_d[l_ac00].sfcb032,
                    g_sfcb00_d[l_ac00].sfcb033,g_sfcb00_d[l_ac00].sfcb034,
                    g_sfcb00_d[l_ac00].sfcb035,g_sfcb00_d[l_ac00].sfcb038,
                    g_sfcb00_d[l_ac00].sfcb039,g_sfcb00_d[l_ac00].sfcb036,
                    g_sfcb00_d[l_ac00].sfcb037,g_sfcb00_d[l_ac00].sfcb040,
                    g_sfcb00_d[l_ac00].sfcb041,g_sfcb00_d[l_ac00].sfcb042,
                    g_sfcb00_d[l_ac00].sfcb048,g_sfcb00_d[l_ac00].sfcb049,
                    g_sfcb00_d[l_ac00].sfcb051
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = "FOREACH:"
                  LET g_errparam.code   = SQLCA.sqlcode
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  EXIT FOREACH
               END IF
               CALL cl_set_comp_visible("page_30",TRUE)
               LET l_ac00 = l_ac00 + 1
            END FOREACH
         WHEN '1'
            FOREACH sel_sfcb_cs USING l_sfcb001
               INTO g_sfcb01_d[l_ac01].sfcb002,g_sfcb01_d[l_ac01].sfcb003,
                    g_sfcb01_d[l_ac01].sfcb003_desc,g_sfcb01_d[l_ac01].sfcb004,
                    g_sfcb01_d[l_ac01].sfcb050,g_sfcb01_d[l_ac01].sfcb046,
                    g_sfcb01_d[l_ac01].sfcb047,g_sfcb01_d[l_ac01].sfcb028,
                    g_sfcb01_d[l_ac01].sfcb029,g_sfcb01_d[l_ac01].sfcb030,
                    g_sfcb01_d[l_ac01].sfcb031,g_sfcb01_d[l_ac01].sfcb032,
                    g_sfcb01_d[l_ac01].sfcb033,g_sfcb01_d[l_ac01].sfcb034,
                    g_sfcb01_d[l_ac01].sfcb035,g_sfcb01_d[l_ac01].sfcb038,
                    g_sfcb01_d[l_ac01].sfcb039,g_sfcb01_d[l_ac01].sfcb036,
                    g_sfcb01_d[l_ac01].sfcb037,g_sfcb01_d[l_ac01].sfcb040,
                    g_sfcb01_d[l_ac01].sfcb041,g_sfcb01_d[l_ac01].sfcb042,
                    g_sfcb01_d[l_ac01].sfcb048,g_sfcb01_d[l_ac01].sfcb049,
                    g_sfcb01_d[l_ac01].sfcb051
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = "FOREACH:"
                  LET g_errparam.code   = SQLCA.sqlcode
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  EXIT FOREACH
               END IF
               CALL cl_set_comp_visible("page_31",TRUE)
               LET l_ac01 = l_ac01 + 1
            END FOREACH
         WHEN '2'
            FOREACH sel_sfcb_cs USING l_sfcb001
               INTO g_sfcb02_d[l_ac02].sfcb002,g_sfcb02_d[l_ac02].sfcb003,
                    g_sfcb02_d[l_ac02].sfcb003_desc,g_sfcb02_d[l_ac02].sfcb004,
                    g_sfcb02_d[l_ac02].sfcb050,g_sfcb02_d[l_ac02].sfcb046,
                    g_sfcb02_d[l_ac02].sfcb047,g_sfcb02_d[l_ac02].sfcb028,
                    g_sfcb02_d[l_ac02].sfcb029,g_sfcb02_d[l_ac02].sfcb030,
                    g_sfcb02_d[l_ac02].sfcb031,g_sfcb02_d[l_ac02].sfcb032,
                    g_sfcb02_d[l_ac02].sfcb033,g_sfcb02_d[l_ac02].sfcb034,
                    g_sfcb02_d[l_ac02].sfcb035,g_sfcb02_d[l_ac02].sfcb038,
                    g_sfcb02_d[l_ac02].sfcb039,g_sfcb02_d[l_ac02].sfcb036,
                    g_sfcb02_d[l_ac02].sfcb037,g_sfcb02_d[l_ac02].sfcb040,
                    g_sfcb02_d[l_ac02].sfcb041,g_sfcb02_d[l_ac02].sfcb042,
                    g_sfcb02_d[l_ac02].sfcb048,g_sfcb02_d[l_ac02].sfcb049,
                    g_sfcb02_d[l_ac02].sfcb051
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = "FOREACH:"
                  LET g_errparam.code   = SQLCA.sqlcode
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  EXIT FOREACH
               END IF
               CALL cl_set_comp_visible("page_2",TRUE)
               LET l_ac02 = l_ac02 + 1
            END FOREACH
         WHEN '3'
            FOREACH sel_sfcb_cs USING l_sfcb001
               INTO g_sfcb03_d[l_ac03].sfcb002,g_sfcb03_d[l_ac03].sfcb003,
                    g_sfcb03_d[l_ac03].sfcb003_desc,g_sfcb03_d[l_ac03].sfcb004,
                    g_sfcb03_d[l_ac03].sfcb050,g_sfcb03_d[l_ac03].sfcb046,
                    g_sfcb03_d[l_ac03].sfcb047,g_sfcb03_d[l_ac03].sfcb028,
                    g_sfcb03_d[l_ac03].sfcb029,g_sfcb03_d[l_ac03].sfcb030,
                    g_sfcb03_d[l_ac03].sfcb031,g_sfcb03_d[l_ac03].sfcb032,
                    g_sfcb03_d[l_ac03].sfcb033,g_sfcb03_d[l_ac03].sfcb034,
                    g_sfcb03_d[l_ac03].sfcb035,g_sfcb03_d[l_ac03].sfcb038,
                    g_sfcb03_d[l_ac03].sfcb039,g_sfcb03_d[l_ac03].sfcb036,
                    g_sfcb03_d[l_ac03].sfcb037,g_sfcb03_d[l_ac03].sfcb040,
                    g_sfcb03_d[l_ac03].sfcb041,g_sfcb03_d[l_ac03].sfcb042,
                    g_sfcb03_d[l_ac03].sfcb048,g_sfcb03_d[l_ac03].sfcb049,
                    g_sfcb03_d[l_ac03].sfcb051
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = "FOREACH:"
                  LET g_errparam.code   = SQLCA.sqlcode
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  EXIT FOREACH
               END IF
               CALL cl_set_comp_visible("page_3",TRUE)
               LET l_ac03 = l_ac03 + 1
            END FOREACH
         WHEN '4'
            FOREACH sel_sfcb_cs USING l_sfcb001
               INTO g_sfcb04_d[l_ac04].sfcb002,g_sfcb04_d[l_ac04].sfcb003,
                    g_sfcb04_d[l_ac04].sfcb003_desc,g_sfcb04_d[l_ac04].sfcb004,
                    g_sfcb04_d[l_ac04].sfcb050,g_sfcb04_d[l_ac04].sfcb046,
                    g_sfcb04_d[l_ac04].sfcb047,g_sfcb04_d[l_ac04].sfcb028,
                    g_sfcb04_d[l_ac04].sfcb029,g_sfcb04_d[l_ac04].sfcb030,
                    g_sfcb04_d[l_ac04].sfcb031,g_sfcb04_d[l_ac04].sfcb032,
                    g_sfcb04_d[l_ac04].sfcb033,g_sfcb04_d[l_ac04].sfcb034,
                    g_sfcb04_d[l_ac04].sfcb035,g_sfcb04_d[l_ac04].sfcb038,
                    g_sfcb04_d[l_ac04].sfcb039,g_sfcb04_d[l_ac04].sfcb036,
                    g_sfcb04_d[l_ac04].sfcb037,g_sfcb04_d[l_ac04].sfcb040,
                    g_sfcb04_d[l_ac04].sfcb041,g_sfcb04_d[l_ac04].sfcb042,
                    g_sfcb04_d[l_ac04].sfcb048,g_sfcb04_d[l_ac04].sfcb049,
                    g_sfcb04_d[l_ac04].sfcb051
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = "FOREACH:"
                  LET g_errparam.code   = SQLCA.sqlcode
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  EXIT FOREACH
               END IF
               CALL cl_set_comp_visible("page_4",TRUE)
               LET l_ac04 = l_ac04 + 1
            END FOREACH
         WHEN '5'
            FOREACH sel_sfcb_cs USING l_sfcb001
               INTO g_sfcb05_d[l_ac05].sfcb002,g_sfcb05_d[l_ac05].sfcb003,
                    g_sfcb05_d[l_ac05].sfcb003_desc,g_sfcb05_d[l_ac05].sfcb004,
                    g_sfcb05_d[l_ac05].sfcb050,g_sfcb05_d[l_ac05].sfcb046,
                    g_sfcb05_d[l_ac05].sfcb047,g_sfcb05_d[l_ac05].sfcb028,
                    g_sfcb05_d[l_ac05].sfcb029,g_sfcb05_d[l_ac05].sfcb030,
                    g_sfcb05_d[l_ac05].sfcb031,g_sfcb05_d[l_ac05].sfcb032,
                    g_sfcb05_d[l_ac05].sfcb033,g_sfcb05_d[l_ac05].sfcb034,
                    g_sfcb05_d[l_ac05].sfcb035,g_sfcb05_d[l_ac05].sfcb038,
                    g_sfcb05_d[l_ac05].sfcb039,g_sfcb05_d[l_ac05].sfcb036,
                    g_sfcb05_d[l_ac05].sfcb037,g_sfcb05_d[l_ac05].sfcb040,
                    g_sfcb05_d[l_ac05].sfcb041,g_sfcb05_d[l_ac05].sfcb042,
                    g_sfcb05_d[l_ac05].sfcb048,g_sfcb05_d[l_ac05].sfcb049,
                    g_sfcb05_d[l_ac05].sfcb051
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = "FOREACH:"
                  LET g_errparam.code   = SQLCA.sqlcode
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  EXIT FOREACH
               END IF
               CALL cl_set_comp_visible("page_5",TRUE)
               LET l_ac05 = l_ac05 + 1
            END FOREACH
         WHEN '6'
            FOREACH sel_sfcb_cs USING l_sfcb001
               INTO g_sfcb06_d[l_ac06].sfcb002,g_sfcb06_d[l_ac06].sfcb003,
                    g_sfcb06_d[l_ac06].sfcb003_desc,g_sfcb06_d[l_ac06].sfcb004,
                    g_sfcb06_d[l_ac06].sfcb050,g_sfcb06_d[l_ac06].sfcb046,
                    g_sfcb06_d[l_ac06].sfcb047,g_sfcb06_d[l_ac06].sfcb028,
                    g_sfcb06_d[l_ac06].sfcb029,g_sfcb06_d[l_ac06].sfcb030,
                    g_sfcb06_d[l_ac06].sfcb031,g_sfcb06_d[l_ac06].sfcb032,
                    g_sfcb06_d[l_ac06].sfcb033,g_sfcb06_d[l_ac06].sfcb034,
                    g_sfcb06_d[l_ac06].sfcb035,g_sfcb06_d[l_ac06].sfcb038,
                    g_sfcb06_d[l_ac06].sfcb039,g_sfcb06_d[l_ac06].sfcb036,
                    g_sfcb06_d[l_ac06].sfcb037,g_sfcb06_d[l_ac06].sfcb040,
                    g_sfcb06_d[l_ac06].sfcb041,g_sfcb06_d[l_ac06].sfcb042,
                    g_sfcb06_d[l_ac06].sfcb048,g_sfcb06_d[l_ac06].sfcb049,
                    g_sfcb06_d[l_ac06].sfcb051
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = "FOREACH:"
                  LET g_errparam.code   = SQLCA.sqlcode
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  EXIT FOREACH
               END IF
               CALL cl_set_comp_visible("page_6",TRUE)
               LET l_ac06 = l_ac06 + 1
            END FOREACH
         WHEN '7'
            FOREACH sel_sfcb_cs USING l_sfcb001
               INTO g_sfcb07_d[l_ac07].sfcb002,g_sfcb07_d[l_ac07].sfcb003,
                    g_sfcb07_d[l_ac07].sfcb003_desc,g_sfcb07_d[l_ac07].sfcb004,
                    g_sfcb07_d[l_ac07].sfcb050,g_sfcb07_d[l_ac07].sfcb046,
                    g_sfcb07_d[l_ac07].sfcb047,g_sfcb07_d[l_ac07].sfcb028,
                    g_sfcb07_d[l_ac07].sfcb029,g_sfcb07_d[l_ac07].sfcb030,
                    g_sfcb07_d[l_ac07].sfcb031,g_sfcb07_d[l_ac07].sfcb032,
                    g_sfcb07_d[l_ac07].sfcb033,g_sfcb07_d[l_ac07].sfcb034,
                    g_sfcb07_d[l_ac07].sfcb035,g_sfcb07_d[l_ac07].sfcb038,
                    g_sfcb07_d[l_ac07].sfcb039,g_sfcb07_d[l_ac07].sfcb036,
                    g_sfcb07_d[l_ac07].sfcb037,g_sfcb07_d[l_ac07].sfcb040,
                    g_sfcb07_d[l_ac07].sfcb041,g_sfcb07_d[l_ac07].sfcb042,
                    g_sfcb07_d[l_ac07].sfcb048,g_sfcb07_d[l_ac07].sfcb049,
                    g_sfcb07_d[l_ac07].sfcb051
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = "FOREACH:"
                  LET g_errparam.code   = SQLCA.sqlcode
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  EXIT FOREACH
               END IF
               CALL cl_set_comp_visible("page_7",TRUE)
               LET l_ac07 = l_ac07 + 1
            END FOREACH
         WHEN '8'
            FOREACH sel_sfcb_cs USING l_sfcb001
               INTO g_sfcb08_d[l_ac08].sfcb002,g_sfcb08_d[l_ac08].sfcb003,
                    g_sfcb08_d[l_ac08].sfcb003_desc,g_sfcb08_d[l_ac08].sfcb004,
                    g_sfcb08_d[l_ac08].sfcb050,g_sfcb08_d[l_ac08].sfcb046,
                    g_sfcb08_d[l_ac08].sfcb047,g_sfcb08_d[l_ac08].sfcb028,
                    g_sfcb08_d[l_ac08].sfcb029,g_sfcb08_d[l_ac08].sfcb030,
                    g_sfcb08_d[l_ac08].sfcb031,g_sfcb08_d[l_ac08].sfcb032,
                    g_sfcb08_d[l_ac08].sfcb033,g_sfcb08_d[l_ac08].sfcb034,
                    g_sfcb08_d[l_ac08].sfcb035,g_sfcb08_d[l_ac08].sfcb038,
                    g_sfcb08_d[l_ac08].sfcb039,g_sfcb08_d[l_ac08].sfcb036,
                    g_sfcb08_d[l_ac08].sfcb037,g_sfcb08_d[l_ac08].sfcb040,
                    g_sfcb08_d[l_ac08].sfcb041,g_sfcb08_d[l_ac08].sfcb042,
                    g_sfcb08_d[l_ac08].sfcb048,g_sfcb08_d[l_ac08].sfcb049,
                    g_sfcb08_d[l_ac08].sfcb051
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = "FOREACH:"
                  LET g_errparam.code   = SQLCA.sqlcode
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  EXIT FOREACH
               END IF
               CALL cl_set_comp_visible("page_8",TRUE)
               LET l_ac08 = l_ac08 + 1
            END FOREACH
         WHEN '9'
            FOREACH sel_sfcb_cs USING l_sfcb001
               INTO g_sfcb09_d[l_ac09].sfcb002,g_sfcb09_d[l_ac09].sfcb003,
                    g_sfcb09_d[l_ac09].sfcb003_desc,g_sfcb09_d[l_ac09].sfcb004,
                    g_sfcb09_d[l_ac09].sfcb050,g_sfcb09_d[l_ac09].sfcb046,
                    g_sfcb09_d[l_ac09].sfcb047,g_sfcb09_d[l_ac09].sfcb028,
                    g_sfcb09_d[l_ac09].sfcb029,g_sfcb09_d[l_ac09].sfcb030,
                    g_sfcb09_d[l_ac09].sfcb031,g_sfcb09_d[l_ac09].sfcb032,
                    g_sfcb09_d[l_ac09].sfcb033,g_sfcb09_d[l_ac09].sfcb034,
                    g_sfcb09_d[l_ac09].sfcb035,g_sfcb09_d[l_ac09].sfcb038,
                    g_sfcb09_d[l_ac09].sfcb039,g_sfcb09_d[l_ac09].sfcb036,
                    g_sfcb09_d[l_ac09].sfcb037,g_sfcb09_d[l_ac09].sfcb040,
                    g_sfcb09_d[l_ac09].sfcb041,g_sfcb09_d[l_ac09].sfcb042,
                    g_sfcb09_d[l_ac09].sfcb048,g_sfcb09_d[l_ac09].sfcb049,
                    g_sfcb09_d[l_ac09].sfcb051
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = "FOREACH:"
                  LET g_errparam.code   = SQLCA.sqlcode
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  EXIT FOREACH
               END IF
               CALL cl_set_comp_visible("page_9",TRUE)
               LET l_ac09 = l_ac09 + 1
            END FOREACH
         WHEN '10'
            FOREACH sel_sfcb_cs USING l_sfcb001
               INTO g_sfcb10_d[l_ac10].sfcb002,g_sfcb10_d[l_ac10].sfcb003,
                    g_sfcb10_d[l_ac10].sfcb003_desc,g_sfcb10_d[l_ac10].sfcb004,
                    g_sfcb10_d[l_ac10].sfcb050,g_sfcb10_d[l_ac10].sfcb046,
                    g_sfcb10_d[l_ac10].sfcb047,g_sfcb10_d[l_ac10].sfcb028,
                    g_sfcb10_d[l_ac10].sfcb029,g_sfcb10_d[l_ac10].sfcb030,
                    g_sfcb10_d[l_ac10].sfcb031,g_sfcb10_d[l_ac10].sfcb032,
                    g_sfcb10_d[l_ac10].sfcb033,g_sfcb10_d[l_ac10].sfcb034,
                    g_sfcb10_d[l_ac10].sfcb035,g_sfcb10_d[l_ac10].sfcb038,
                    g_sfcb10_d[l_ac10].sfcb039,g_sfcb10_d[l_ac10].sfcb036,
                    g_sfcb10_d[l_ac10].sfcb037,g_sfcb10_d[l_ac10].sfcb040,
                    g_sfcb10_d[l_ac10].sfcb041,g_sfcb10_d[l_ac10].sfcb042,
                    g_sfcb10_d[l_ac10].sfcb048,g_sfcb10_d[l_ac10].sfcb049,
                    g_sfcb10_d[l_ac10].sfcb051
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = "FOREACH:"
                  LET g_errparam.code   = SQLCA.sqlcode
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  EXIT FOREACH
               END IF
               CALL cl_set_comp_visible("page_10",TRUE)
               LET l_ac10 = l_ac10 + 1
            END FOREACH
         WHEN '11'
            FOREACH sel_sfcb_cs USING l_sfcb001
               INTO g_sfcb11_d[l_ac11].sfcb002,g_sfcb11_d[l_ac11].sfcb003,
                    g_sfcb11_d[l_ac11].sfcb003_desc,g_sfcb11_d[l_ac11].sfcb004,
                    g_sfcb11_d[l_ac11].sfcb050,g_sfcb11_d[l_ac11].sfcb046,
                    g_sfcb11_d[l_ac11].sfcb047,g_sfcb11_d[l_ac11].sfcb028,
                    g_sfcb11_d[l_ac11].sfcb029,g_sfcb11_d[l_ac11].sfcb030,
                    g_sfcb11_d[l_ac11].sfcb031,g_sfcb11_d[l_ac11].sfcb032,
                    g_sfcb11_d[l_ac11].sfcb033,g_sfcb11_d[l_ac11].sfcb034,
                    g_sfcb11_d[l_ac11].sfcb035,g_sfcb11_d[l_ac11].sfcb038,
                    g_sfcb11_d[l_ac11].sfcb039,g_sfcb11_d[l_ac11].sfcb036,
                    g_sfcb11_d[l_ac11].sfcb037,g_sfcb11_d[l_ac11].sfcb040,
                    g_sfcb11_d[l_ac11].sfcb041,g_sfcb11_d[l_ac11].sfcb042,
                    g_sfcb11_d[l_ac11].sfcb048,g_sfcb11_d[l_ac11].sfcb049,
                    g_sfcb11_d[l_ac11].sfcb051
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = "FOREACH:"
                  LET g_errparam.code   = SQLCA.sqlcode
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  EXIT FOREACH
               END IF
               CALL cl_set_comp_visible("page_11",TRUE)
               LET l_ac11 = l_ac11 + 1
            END FOREACH
         WHEN '12'
            FOREACH sel_sfcb_cs USING l_sfcb001
               INTO g_sfcb12_d[l_ac12].sfcb002,g_sfcb12_d[l_ac12].sfcb003,
                    g_sfcb12_d[l_ac12].sfcb003_desc,g_sfcb12_d[l_ac12].sfcb004,
                    g_sfcb12_d[l_ac12].sfcb050,g_sfcb12_d[l_ac12].sfcb046,
                    g_sfcb12_d[l_ac12].sfcb047,g_sfcb12_d[l_ac12].sfcb028,
                    g_sfcb12_d[l_ac12].sfcb029,g_sfcb12_d[l_ac12].sfcb030,
                    g_sfcb12_d[l_ac12].sfcb031,g_sfcb12_d[l_ac12].sfcb032,
                    g_sfcb12_d[l_ac12].sfcb033,g_sfcb12_d[l_ac12].sfcb034,
                    g_sfcb12_d[l_ac12].sfcb035,g_sfcb12_d[l_ac12].sfcb038,
                    g_sfcb12_d[l_ac12].sfcb039,g_sfcb12_d[l_ac12].sfcb036,
                    g_sfcb12_d[l_ac12].sfcb037,g_sfcb12_d[l_ac12].sfcb040,
                    g_sfcb12_d[l_ac12].sfcb041,g_sfcb12_d[l_ac12].sfcb042,
                    g_sfcb12_d[l_ac12].sfcb048,g_sfcb12_d[l_ac12].sfcb049,
                    g_sfcb12_d[l_ac12].sfcb051
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = "FOREACH:"
                  LET g_errparam.code   = SQLCA.sqlcode
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  EXIT FOREACH
               END IF
               CALL cl_set_comp_visible("page_12",TRUE)
               LET l_ac12 = l_ac12 + 1
            END FOREACH
         WHEN '13'
            FOREACH sel_sfcb_cs USING l_sfcb001
               INTO g_sfcb13_d[l_ac13].sfcb002,g_sfcb13_d[l_ac13].sfcb003,
                    g_sfcb13_d[l_ac13].sfcb003_desc,g_sfcb13_d[l_ac13].sfcb004,
                    g_sfcb13_d[l_ac13].sfcb050,g_sfcb13_d[l_ac13].sfcb046,
                    g_sfcb13_d[l_ac13].sfcb047,g_sfcb13_d[l_ac13].sfcb028,
                    g_sfcb13_d[l_ac13].sfcb029,g_sfcb13_d[l_ac13].sfcb030,
                    g_sfcb13_d[l_ac13].sfcb031,g_sfcb13_d[l_ac13].sfcb032,
                    g_sfcb13_d[l_ac13].sfcb033,g_sfcb13_d[l_ac13].sfcb034,
                    g_sfcb13_d[l_ac13].sfcb035,g_sfcb13_d[l_ac13].sfcb038,
                    g_sfcb13_d[l_ac13].sfcb039,g_sfcb13_d[l_ac13].sfcb036,
                    g_sfcb13_d[l_ac13].sfcb037,g_sfcb13_d[l_ac13].sfcb040,
                    g_sfcb13_d[l_ac13].sfcb041,g_sfcb13_d[l_ac13].sfcb042,
                    g_sfcb13_d[l_ac13].sfcb048,g_sfcb13_d[l_ac13].sfcb049,
                    g_sfcb13_d[l_ac13].sfcb051
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = "FOREACH:"
                  LET g_errparam.code   = SQLCA.sqlcode
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  EXIT FOREACH
               END IF
               CALL cl_set_comp_visible("page_13",TRUE)
               LET l_ac13 = l_ac13 + 1
            END FOREACH
         WHEN '14'
            FOREACH sel_sfcb_cs USING l_sfcb001
               INTO g_sfcb14_d[l_ac14].sfcb002,g_sfcb14_d[l_ac14].sfcb003,
                    g_sfcb14_d[l_ac14].sfcb003_desc,g_sfcb14_d[l_ac14].sfcb004,
                    g_sfcb14_d[l_ac14].sfcb050,g_sfcb14_d[l_ac14].sfcb046,
                    g_sfcb14_d[l_ac14].sfcb047,g_sfcb14_d[l_ac14].sfcb028,
                    g_sfcb14_d[l_ac14].sfcb029,g_sfcb14_d[l_ac14].sfcb030,
                    g_sfcb14_d[l_ac14].sfcb031,g_sfcb14_d[l_ac14].sfcb032,
                    g_sfcb14_d[l_ac14].sfcb033,g_sfcb14_d[l_ac14].sfcb034,
                    g_sfcb14_d[l_ac14].sfcb035,g_sfcb14_d[l_ac14].sfcb038,
                    g_sfcb14_d[l_ac14].sfcb039,g_sfcb14_d[l_ac14].sfcb036,
                    g_sfcb14_d[l_ac14].sfcb037,g_sfcb14_d[l_ac14].sfcb040,
                    g_sfcb14_d[l_ac14].sfcb041,g_sfcb14_d[l_ac14].sfcb042,
                    g_sfcb14_d[l_ac14].sfcb048,g_sfcb14_d[l_ac14].sfcb049,
                    g_sfcb14_d[l_ac14].sfcb051
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = "FOREACH:"
                  LET g_errparam.code   = SQLCA.sqlcode
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  EXIT FOREACH
               END IF
               CALL cl_set_comp_visible("page_14",TRUE)
               LET l_ac14 = l_ac14 + 1
            END FOREACH
         WHEN '15'
            FOREACH sel_sfcb_cs USING l_sfcb001
               INTO g_sfcb15_d[l_ac15].sfcb002,g_sfcb15_d[l_ac15].sfcb003,
                    g_sfcb15_d[l_ac15].sfcb003_desc,g_sfcb15_d[l_ac15].sfcb004,
                    g_sfcb15_d[l_ac15].sfcb050,g_sfcb15_d[l_ac15].sfcb046,
                    g_sfcb15_d[l_ac15].sfcb047,g_sfcb15_d[l_ac15].sfcb028,
                    g_sfcb15_d[l_ac15].sfcb029,g_sfcb15_d[l_ac15].sfcb030,
                    g_sfcb15_d[l_ac15].sfcb031,g_sfcb15_d[l_ac15].sfcb032,
                    g_sfcb15_d[l_ac15].sfcb033,g_sfcb15_d[l_ac15].sfcb034,
                    g_sfcb15_d[l_ac15].sfcb035,g_sfcb15_d[l_ac15].sfcb038,
                    g_sfcb15_d[l_ac15].sfcb039,g_sfcb15_d[l_ac15].sfcb036,
                    g_sfcb15_d[l_ac15].sfcb037,g_sfcb15_d[l_ac15].sfcb040,
                    g_sfcb15_d[l_ac15].sfcb041,g_sfcb15_d[l_ac15].sfcb042,
                    g_sfcb15_d[l_ac15].sfcb048,g_sfcb15_d[l_ac15].sfcb049,
                    g_sfcb15_d[l_ac15].sfcb051
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = "FOREACH:"
                  LET g_errparam.code   = SQLCA.sqlcode
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  EXIT FOREACH
               END IF
               CALL cl_set_comp_visible("page_15",TRUE)
               LET l_ac15 = l_ac15 + 1
            END FOREACH
         WHEN '16'
            FOREACH sel_sfcb_cs USING l_sfcb001
               INTO g_sfcb16_d[l_ac16].sfcb002,g_sfcb16_d[l_ac16].sfcb003,
                    g_sfcb16_d[l_ac16].sfcb003_desc,g_sfcb16_d[l_ac16].sfcb004,
                    g_sfcb16_d[l_ac16].sfcb050,g_sfcb16_d[l_ac16].sfcb046,
                    g_sfcb16_d[l_ac16].sfcb047,g_sfcb16_d[l_ac16].sfcb028,
                    g_sfcb16_d[l_ac16].sfcb029,g_sfcb16_d[l_ac16].sfcb030,
                    g_sfcb16_d[l_ac16].sfcb031,g_sfcb16_d[l_ac16].sfcb032,
                    g_sfcb16_d[l_ac16].sfcb033,g_sfcb16_d[l_ac16].sfcb034,
                    g_sfcb16_d[l_ac16].sfcb035,g_sfcb16_d[l_ac16].sfcb038,
                    g_sfcb16_d[l_ac16].sfcb039,g_sfcb16_d[l_ac16].sfcb036,
                    g_sfcb16_d[l_ac16].sfcb037,g_sfcb16_d[l_ac16].sfcb040,
                    g_sfcb16_d[l_ac16].sfcb041,g_sfcb16_d[l_ac16].sfcb042,
                    g_sfcb16_d[l_ac16].sfcb048,g_sfcb16_d[l_ac16].sfcb049,
                    g_sfcb16_d[l_ac16].sfcb051
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = "FOREACH:"
                  LET g_errparam.code   = SQLCA.sqlcode
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  EXIT FOREACH
               END IF
               CALL cl_set_comp_visible("page_16",TRUE)
               LET l_ac16 = l_ac16 + 1
            END FOREACH
         WHEN '17'
            FOREACH sel_sfcb_cs USING l_sfcb001
               INTO g_sfcb17_d[l_ac17].sfcb002,g_sfcb17_d[l_ac17].sfcb003,
                    g_sfcb17_d[l_ac17].sfcb003_desc,g_sfcb17_d[l_ac17].sfcb004,
                    g_sfcb17_d[l_ac17].sfcb050,g_sfcb17_d[l_ac17].sfcb046,
                    g_sfcb17_d[l_ac17].sfcb047,g_sfcb17_d[l_ac17].sfcb028,
                    g_sfcb17_d[l_ac17].sfcb029,g_sfcb17_d[l_ac17].sfcb030,
                    g_sfcb17_d[l_ac17].sfcb031,g_sfcb17_d[l_ac17].sfcb032,
                    g_sfcb17_d[l_ac17].sfcb033,g_sfcb17_d[l_ac17].sfcb034,
                    g_sfcb17_d[l_ac17].sfcb035,g_sfcb17_d[l_ac17].sfcb038,
                    g_sfcb17_d[l_ac17].sfcb039,g_sfcb17_d[l_ac17].sfcb036,
                    g_sfcb17_d[l_ac17].sfcb037,g_sfcb17_d[l_ac17].sfcb040,
                    g_sfcb17_d[l_ac17].sfcb041,g_sfcb17_d[l_ac17].sfcb042,
                    g_sfcb17_d[l_ac17].sfcb048,g_sfcb17_d[l_ac17].sfcb049,
                    g_sfcb17_d[l_ac17].sfcb051
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = "FOREACH:"
                  LET g_errparam.code   = SQLCA.sqlcode
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  EXIT FOREACH
               END IF
               CALL cl_set_comp_visible("page_17",TRUE)
               LET l_ac17 = l_ac17 + 1
            END FOREACH
         WHEN '18'
            FOREACH sel_sfcb_cs USING l_sfcb001
               INTO g_sfcb18_d[l_ac18].sfcb002,g_sfcb18_d[l_ac18].sfcb003,
                    g_sfcb18_d[l_ac18].sfcb003_desc,g_sfcb18_d[l_ac18].sfcb004,
                    g_sfcb18_d[l_ac18].sfcb050,g_sfcb18_d[l_ac18].sfcb046,
                    g_sfcb18_d[l_ac18].sfcb047,g_sfcb18_d[l_ac18].sfcb028,
                    g_sfcb18_d[l_ac18].sfcb029,g_sfcb18_d[l_ac18].sfcb030,
                    g_sfcb18_d[l_ac18].sfcb031,g_sfcb18_d[l_ac18].sfcb032,
                    g_sfcb18_d[l_ac18].sfcb033,g_sfcb18_d[l_ac18].sfcb034,
                    g_sfcb18_d[l_ac18].sfcb035,g_sfcb18_d[l_ac18].sfcb038,
                    g_sfcb18_d[l_ac18].sfcb039,g_sfcb18_d[l_ac18].sfcb036,
                    g_sfcb18_d[l_ac18].sfcb037,g_sfcb18_d[l_ac18].sfcb040,
                    g_sfcb18_d[l_ac18].sfcb041,g_sfcb18_d[l_ac18].sfcb042,
                    g_sfcb18_d[l_ac18].sfcb048,g_sfcb18_d[l_ac18].sfcb049,
                    g_sfcb18_d[l_ac18].sfcb051
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = "FOREACH:"
                  LET g_errparam.code   = SQLCA.sqlcode
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  EXIT FOREACH
               END IF
               CALL cl_set_comp_visible("page_18",TRUE)
               LET l_ac18 = l_ac18 + 1
            END FOREACH
         WHEN '19'
            FOREACH sel_sfcb_cs USING l_sfcb001
               INTO g_sfcb19_d[l_ac19].sfcb002,g_sfcb19_d[l_ac19].sfcb003,
                    g_sfcb19_d[l_ac19].sfcb003_desc,g_sfcb19_d[l_ac19].sfcb004,
                    g_sfcb19_d[l_ac19].sfcb050,g_sfcb19_d[l_ac19].sfcb046,
                    g_sfcb19_d[l_ac19].sfcb047,g_sfcb19_d[l_ac19].sfcb028,
                    g_sfcb19_d[l_ac19].sfcb029,g_sfcb19_d[l_ac19].sfcb030,
                    g_sfcb19_d[l_ac19].sfcb031,g_sfcb19_d[l_ac19].sfcb032,
                    g_sfcb19_d[l_ac19].sfcb033,g_sfcb19_d[l_ac19].sfcb034,
                    g_sfcb19_d[l_ac19].sfcb035,g_sfcb19_d[l_ac19].sfcb038,
                    g_sfcb19_d[l_ac19].sfcb039,g_sfcb19_d[l_ac19].sfcb036,
                    g_sfcb19_d[l_ac19].sfcb037,g_sfcb19_d[l_ac19].sfcb040,
                    g_sfcb19_d[l_ac19].sfcb041,g_sfcb19_d[l_ac19].sfcb042,
                    g_sfcb19_d[l_ac19].sfcb048,g_sfcb19_d[l_ac19].sfcb049,
                    g_sfcb19_d[l_ac19].sfcb051
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = "FOREACH:"
                  LET g_errparam.code   = SQLCA.sqlcode
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  EXIT FOREACH
               END IF
               CALL cl_set_comp_visible("page_19",TRUE)
               LET l_ac19 = l_ac19 + 1
            END FOREACH
         WHEN '20'
            FOREACH sel_sfcb_cs USING l_sfcb001
               INTO g_sfcb20_d[l_ac20].sfcb002,g_sfcb20_d[l_ac20].sfcb003,
                    g_sfcb20_d[l_ac20].sfcb003_desc,g_sfcb20_d[l_ac20].sfcb004,
                    g_sfcb20_d[l_ac20].sfcb050,g_sfcb20_d[l_ac20].sfcb046,
                    g_sfcb20_d[l_ac20].sfcb047,g_sfcb20_d[l_ac20].sfcb028,
                    g_sfcb20_d[l_ac20].sfcb029,g_sfcb20_d[l_ac20].sfcb030,
                    g_sfcb20_d[l_ac20].sfcb031,g_sfcb20_d[l_ac20].sfcb032,
                    g_sfcb20_d[l_ac20].sfcb033,g_sfcb20_d[l_ac20].sfcb034,
                    g_sfcb20_d[l_ac20].sfcb035,g_sfcb20_d[l_ac20].sfcb038,
                    g_sfcb20_d[l_ac20].sfcb039,g_sfcb20_d[l_ac20].sfcb036,
                    g_sfcb20_d[l_ac20].sfcb037,g_sfcb20_d[l_ac20].sfcb040,
                    g_sfcb20_d[l_ac20].sfcb041,g_sfcb20_d[l_ac20].sfcb042,
                    g_sfcb20_d[l_ac20].sfcb048,g_sfcb20_d[l_ac20].sfcb049,
                    g_sfcb20_d[l_ac20].sfcb051
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = "FOREACH:"
                  LET g_errparam.code   = SQLCA.sqlcode
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  EXIT FOREACH
               END IF
               CALL cl_set_comp_visible("page_20",TRUE)
               LET l_ac20 = l_ac20 + 1
            END FOREACH
         WHEN '21'
            FOREACH sel_sfcb_cs USING l_sfcb001
               INTO g_sfcb21_d[l_ac21].sfcb002,g_sfcb21_d[l_ac21].sfcb003,
                    g_sfcb21_d[l_ac21].sfcb003_desc,g_sfcb21_d[l_ac21].sfcb004,
                    g_sfcb21_d[l_ac21].sfcb050,g_sfcb21_d[l_ac21].sfcb046,
                    g_sfcb21_d[l_ac21].sfcb047,g_sfcb21_d[l_ac21].sfcb028,
                    g_sfcb21_d[l_ac21].sfcb029,g_sfcb21_d[l_ac21].sfcb030,
                    g_sfcb21_d[l_ac21].sfcb031,g_sfcb21_d[l_ac21].sfcb032,
                    g_sfcb21_d[l_ac21].sfcb033,g_sfcb21_d[l_ac21].sfcb034,
                    g_sfcb21_d[l_ac21].sfcb035,g_sfcb21_d[l_ac21].sfcb038,
                    g_sfcb21_d[l_ac21].sfcb039,g_sfcb21_d[l_ac21].sfcb036,
                    g_sfcb21_d[l_ac21].sfcb037,g_sfcb21_d[l_ac21].sfcb040,
                    g_sfcb21_d[l_ac21].sfcb041,g_sfcb21_d[l_ac21].sfcb042,
                    g_sfcb21_d[l_ac21].sfcb048,g_sfcb21_d[l_ac21].sfcb049,
                    g_sfcb21_d[l_ac21].sfcb051
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = "FOREACH:"
                  LET g_errparam.code   = SQLCA.sqlcode
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  EXIT FOREACH
               END IF
               CALL cl_set_comp_visible("page_21",TRUE)
               LET l_ac21 = l_ac21 + 1
            END FOREACH
         WHEN '22'
            FOREACH sel_sfcb_cs USING l_sfcb001
               INTO g_sfcb22_d[l_ac22].sfcb002,g_sfcb22_d[l_ac22].sfcb003,
                    g_sfcb22_d[l_ac22].sfcb003_desc,g_sfcb22_d[l_ac22].sfcb004,
                    g_sfcb22_d[l_ac22].sfcb050,g_sfcb22_d[l_ac22].sfcb046,
                    g_sfcb22_d[l_ac22].sfcb047,g_sfcb22_d[l_ac22].sfcb028,
                    g_sfcb22_d[l_ac22].sfcb029,g_sfcb22_d[l_ac22].sfcb030,
                    g_sfcb22_d[l_ac22].sfcb031,g_sfcb22_d[l_ac22].sfcb032,
                    g_sfcb22_d[l_ac22].sfcb033,g_sfcb22_d[l_ac22].sfcb034,
                    g_sfcb22_d[l_ac22].sfcb035,g_sfcb22_d[l_ac22].sfcb038,
                    g_sfcb22_d[l_ac22].sfcb039,g_sfcb22_d[l_ac22].sfcb036,
                    g_sfcb22_d[l_ac22].sfcb037,g_sfcb22_d[l_ac22].sfcb040,
                    g_sfcb22_d[l_ac22].sfcb041,g_sfcb22_d[l_ac22].sfcb042,
                    g_sfcb22_d[l_ac22].sfcb048,g_sfcb22_d[l_ac22].sfcb049,
                    g_sfcb22_d[l_ac22].sfcb051
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = "FOREACH:"
                  LET g_errparam.code   = SQLCA.sqlcode
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  EXIT FOREACH
               END IF
               CALL cl_set_comp_visible("page_22",TRUE)
               LET l_ac22 = l_ac22 + 1
            END FOREACH
         WHEN '23'
            FOREACH sel_sfcb_cs USING l_sfcb001
               INTO g_sfcb23_d[l_ac23].sfcb002,g_sfcb23_d[l_ac23].sfcb003,
                    g_sfcb23_d[l_ac23].sfcb003_desc,g_sfcb23_d[l_ac23].sfcb004,
                    g_sfcb23_d[l_ac23].sfcb050,g_sfcb23_d[l_ac23].sfcb046,
                    g_sfcb23_d[l_ac23].sfcb047,g_sfcb23_d[l_ac23].sfcb028,
                    g_sfcb23_d[l_ac23].sfcb029,g_sfcb23_d[l_ac23].sfcb030,
                    g_sfcb23_d[l_ac23].sfcb031,g_sfcb23_d[l_ac23].sfcb032,
                    g_sfcb23_d[l_ac23].sfcb033,g_sfcb23_d[l_ac23].sfcb034,
                    g_sfcb23_d[l_ac23].sfcb035,g_sfcb23_d[l_ac23].sfcb038,
                    g_sfcb23_d[l_ac23].sfcb039,g_sfcb23_d[l_ac23].sfcb036,
                    g_sfcb23_d[l_ac23].sfcb037,g_sfcb23_d[l_ac23].sfcb040,
                    g_sfcb23_d[l_ac23].sfcb041,g_sfcb23_d[l_ac23].sfcb042,
                    g_sfcb23_d[l_ac23].sfcb048,g_sfcb23_d[l_ac23].sfcb049,
                    g_sfcb23_d[l_ac23].sfcb051
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = "FOREACH:"
                  LET g_errparam.code   = SQLCA.sqlcode
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  EXIT FOREACH
               END IF
               CALL cl_set_comp_visible("page_23",TRUE)
               LET l_ac23 = l_ac23 + 1
            END FOREACH
         WHEN '24'
            FOREACH sel_sfcb_cs USING l_sfcb001
               INTO g_sfcb24_d[l_ac24].sfcb002,g_sfcb24_d[l_ac24].sfcb003,
                    g_sfcb24_d[l_ac24].sfcb003_desc,g_sfcb24_d[l_ac24].sfcb004,
                    g_sfcb24_d[l_ac24].sfcb050,g_sfcb24_d[l_ac24].sfcb046,
                    g_sfcb24_d[l_ac24].sfcb047,g_sfcb24_d[l_ac24].sfcb028,
                    g_sfcb24_d[l_ac24].sfcb029,g_sfcb24_d[l_ac24].sfcb030,
                    g_sfcb24_d[l_ac24].sfcb031,g_sfcb24_d[l_ac24].sfcb032,
                    g_sfcb24_d[l_ac24].sfcb033,g_sfcb24_d[l_ac24].sfcb034,
                    g_sfcb24_d[l_ac24].sfcb035,g_sfcb24_d[l_ac24].sfcb038,
                    g_sfcb24_d[l_ac24].sfcb039,g_sfcb24_d[l_ac24].sfcb036,
                    g_sfcb24_d[l_ac24].sfcb037,g_sfcb24_d[l_ac24].sfcb040,
                    g_sfcb24_d[l_ac24].sfcb041,g_sfcb24_d[l_ac24].sfcb042,
                    g_sfcb24_d[l_ac24].sfcb048,g_sfcb24_d[l_ac24].sfcb049,
                    g_sfcb24_d[l_ac24].sfcb051
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = "FOREACH:"
                  LET g_errparam.code   = SQLCA.sqlcode
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  EXIT FOREACH
               END IF
               CALL cl_set_comp_visible("page_24",TRUE)
               LET l_ac24 = l_ac24 + 1
            END FOREACH
         WHEN '25'
            FOREACH sel_sfcb_cs USING l_sfcb001
               INTO g_sfcb25_d[l_ac25].sfcb002,g_sfcb25_d[l_ac25].sfcb003,
                    g_sfcb25_d[l_ac25].sfcb003_desc,g_sfcb25_d[l_ac25].sfcb004,
                    g_sfcb25_d[l_ac25].sfcb050,g_sfcb25_d[l_ac25].sfcb046,
                    g_sfcb25_d[l_ac25].sfcb047,g_sfcb25_d[l_ac25].sfcb028,
                    g_sfcb25_d[l_ac25].sfcb029,g_sfcb25_d[l_ac25].sfcb030,
                    g_sfcb25_d[l_ac25].sfcb031,g_sfcb25_d[l_ac25].sfcb032,
                    g_sfcb25_d[l_ac25].sfcb033,g_sfcb25_d[l_ac25].sfcb034,
                    g_sfcb25_d[l_ac25].sfcb035,g_sfcb25_d[l_ac25].sfcb038,
                    g_sfcb25_d[l_ac25].sfcb039,g_sfcb25_d[l_ac25].sfcb036,
                    g_sfcb25_d[l_ac25].sfcb037,g_sfcb25_d[l_ac25].sfcb040,
                    g_sfcb25_d[l_ac25].sfcb041,g_sfcb25_d[l_ac25].sfcb042,
                    g_sfcb25_d[l_ac25].sfcb048,g_sfcb25_d[l_ac25].sfcb049,
                    g_sfcb25_d[l_ac25].sfcb051
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = "FOREACH:"
                  LET g_errparam.code   = SQLCA.sqlcode
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  EXIT FOREACH
               END IF
               CALL cl_set_comp_visible("page_25",TRUE)
               LET l_ac25 = l_ac25 + 1
            END FOREACH
         WHEN '26'
            FOREACH sel_sfcb_cs USING l_sfcb001
               INTO g_sfcb26_d[l_ac26].sfcb002,g_sfcb26_d[l_ac26].sfcb003,
                    g_sfcb26_d[l_ac26].sfcb003_desc,g_sfcb26_d[l_ac26].sfcb004,
                    g_sfcb26_d[l_ac26].sfcb050,g_sfcb26_d[l_ac26].sfcb046,
                    g_sfcb26_d[l_ac26].sfcb047,g_sfcb26_d[l_ac26].sfcb028,
                    g_sfcb26_d[l_ac26].sfcb029,g_sfcb26_d[l_ac26].sfcb030,
                    g_sfcb26_d[l_ac26].sfcb031,g_sfcb26_d[l_ac26].sfcb032,
                    g_sfcb26_d[l_ac26].sfcb033,g_sfcb26_d[l_ac26].sfcb034,
                    g_sfcb26_d[l_ac26].sfcb035,g_sfcb26_d[l_ac26].sfcb038,
                    g_sfcb26_d[l_ac26].sfcb039,g_sfcb26_d[l_ac26].sfcb036,
                    g_sfcb26_d[l_ac26].sfcb037,g_sfcb26_d[l_ac26].sfcb040,
                    g_sfcb26_d[l_ac26].sfcb041,g_sfcb26_d[l_ac26].sfcb042,
                    g_sfcb26_d[l_ac26].sfcb048,g_sfcb26_d[l_ac26].sfcb049,
                    g_sfcb26_d[l_ac26].sfcb051
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = "FOREACH:"
                  LET g_errparam.code   = SQLCA.sqlcode
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  EXIT FOREACH
               END IF
               CALL cl_set_comp_visible("page_26",TRUE)
               LET l_ac26 = l_ac26 + 1
            END FOREACH
         WHEN '27'
            FOREACH sel_sfcb_cs USING l_sfcb001
               INTO g_sfcb27_d[l_ac27].sfcb002,g_sfcb27_d[l_ac27].sfcb003,
                    g_sfcb27_d[l_ac27].sfcb003_desc,g_sfcb27_d[l_ac27].sfcb004,
                    g_sfcb27_d[l_ac27].sfcb050,g_sfcb27_d[l_ac27].sfcb046,
                    g_sfcb27_d[l_ac27].sfcb047,g_sfcb27_d[l_ac27].sfcb028,
                    g_sfcb27_d[l_ac27].sfcb029,g_sfcb27_d[l_ac27].sfcb030,
                    g_sfcb27_d[l_ac27].sfcb031,g_sfcb27_d[l_ac27].sfcb032,
                    g_sfcb27_d[l_ac27].sfcb033,g_sfcb27_d[l_ac27].sfcb034,
                    g_sfcb27_d[l_ac27].sfcb035,g_sfcb27_d[l_ac27].sfcb038,
                    g_sfcb27_d[l_ac27].sfcb039,g_sfcb27_d[l_ac27].sfcb036,
                    g_sfcb27_d[l_ac27].sfcb037,g_sfcb27_d[l_ac27].sfcb040,
                    g_sfcb27_d[l_ac27].sfcb041,g_sfcb27_d[l_ac27].sfcb042,
                    g_sfcb27_d[l_ac27].sfcb048,g_sfcb27_d[l_ac27].sfcb049,
                    g_sfcb27_d[l_ac27].sfcb051
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = "FOREACH:"
                  LET g_errparam.code   = SQLCA.sqlcode
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  EXIT FOREACH
               END IF
               CALL cl_set_comp_visible("page_27",TRUE)
               LET l_ac27 = l_ac27 + 1
            END FOREACH
         WHEN '28'
            FOREACH sel_sfcb_cs USING l_sfcb001
               INTO g_sfcb28_d[l_ac28].sfcb002,g_sfcb28_d[l_ac28].sfcb003,
                    g_sfcb28_d[l_ac28].sfcb003_desc,g_sfcb28_d[l_ac28].sfcb004,
                    g_sfcb28_d[l_ac28].sfcb050,g_sfcb28_d[l_ac28].sfcb046,
                    g_sfcb28_d[l_ac28].sfcb047,g_sfcb28_d[l_ac28].sfcb028,
                    g_sfcb28_d[l_ac28].sfcb029,g_sfcb28_d[l_ac28].sfcb030,
                    g_sfcb28_d[l_ac28].sfcb031,g_sfcb28_d[l_ac28].sfcb032,
                    g_sfcb28_d[l_ac28].sfcb033,g_sfcb28_d[l_ac28].sfcb034,
                    g_sfcb28_d[l_ac28].sfcb035,g_sfcb28_d[l_ac28].sfcb038,
                    g_sfcb28_d[l_ac28].sfcb039,g_sfcb28_d[l_ac28].sfcb036,
                    g_sfcb28_d[l_ac28].sfcb037,g_sfcb28_d[l_ac28].sfcb040,
                    g_sfcb28_d[l_ac28].sfcb041,g_sfcb28_d[l_ac28].sfcb042,
                    g_sfcb28_d[l_ac28].sfcb048,g_sfcb28_d[l_ac28].sfcb049,
                    g_sfcb28_d[l_ac28].sfcb051
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = "FOREACH:"
                  LET g_errparam.code   = SQLCA.sqlcode
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  EXIT FOREACH
               END IF
               CALL cl_set_comp_visible("page_28",TRUE)
               LET l_ac28 = l_ac28 + 1
            END FOREACH
         WHEN '29'
            FOREACH sel_sfcb_cs USING l_sfcb001
               INTO g_sfcb29_d[l_ac29].sfcb002,g_sfcb29_d[l_ac29].sfcb003,
                    g_sfcb29_d[l_ac29].sfcb003_desc,g_sfcb29_d[l_ac29].sfcb004,
                    g_sfcb29_d[l_ac29].sfcb050,g_sfcb29_d[l_ac29].sfcb046,
                    g_sfcb29_d[l_ac29].sfcb047,g_sfcb29_d[l_ac29].sfcb028,
                    g_sfcb29_d[l_ac29].sfcb029,g_sfcb29_d[l_ac29].sfcb030,
                    g_sfcb29_d[l_ac29].sfcb031,g_sfcb29_d[l_ac29].sfcb032,
                    g_sfcb29_d[l_ac29].sfcb033,g_sfcb29_d[l_ac29].sfcb034,
                    g_sfcb29_d[l_ac29].sfcb035,g_sfcb29_d[l_ac29].sfcb038,
                    g_sfcb29_d[l_ac29].sfcb039,g_sfcb29_d[l_ac29].sfcb036,
                    g_sfcb29_d[l_ac29].sfcb037,g_sfcb29_d[l_ac29].sfcb040,
                    g_sfcb29_d[l_ac29].sfcb041,g_sfcb29_d[l_ac29].sfcb042,
                    g_sfcb29_d[l_ac29].sfcb048,g_sfcb29_d[l_ac29].sfcb049,
                    g_sfcb29_d[l_ac29].sfcb051
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = "FOREACH:"
                  LET g_errparam.code   = SQLCA.sqlcode
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  EXIT FOREACH
               END IF
               CALL cl_set_comp_visible("page_29",TRUE)
               LET l_ac29 = l_ac29 + 1
            END FOREACH
         OTHERWISE EXIT CASE
      END CASE
      
   END FOREACH
   
   
   LET g_sql = " SELECT '',sfcb003,oocql004,sfcb004,SUM(sfcb050), ",
               "        SUM(sfcb046),SUM(sfcb047),SUM(sfcb028),SUM(sfcb029),SUM(sfcb030), ",
               "        SUM(sfcb031),SUM(sfcb032),SUM(sfcb033),SUM(sfcb034),SUM(sfcb035), ",
               "        SUM(sfcb038),SUM(sfcb039),SUM(sfcb036),SUM(sfcb037),SUM(sfcb040), ",
               "        SUM(sfcb041),SUM(sfcb042),SUM(sfcb048),SUM(sfcb049),SUM(sfcb051) ",
               "   FROM sfcb_t ",
               "   LEFT OUTER JOIN oocql_t ON oocqlent = sfcbent AND oocql001 = '221' AND oocql002 = sfcb003 AND oocql003 = '"||g_dlang||"' ",
               "  WHERE sfcbdocno = '",g_sfaa_d[g_detail_idx2].sfaadocno,"' ",
               "    AND sfcbent = ",g_enterprise,
               "  GROUP BY sfcb003,oocql004,sfcb004",
               "  ORDER BY sfcb003,oocql004,sfcb004"
   PREPARE b_fill3_bp FROM g_sql
   DECLARE b_fill3_cs CURSOR FOR b_fill3_bp
   
   LET li_ac = l_ac
   LET l_ac = 1
   FOREACH b_fill3_cs INTO g_sfcb_d[l_ac].sfcb002,g_sfcb_d[l_ac].sfcb003,
                           g_sfcb_d[l_ac].sfcb003_desc,g_sfcb_d[l_ac].sfcb004,
                           g_sfcb_d[l_ac].sfcb050,g_sfcb_d[l_ac].sfcb046,
                           g_sfcb_d[l_ac].sfcb047,g_sfcb_d[l_ac].sfcb028,
                           g_sfcb_d[l_ac].sfcb029,g_sfcb_d[l_ac].sfcb030,
                           g_sfcb_d[l_ac].sfcb031,g_sfcb_d[l_ac].sfcb032,
                           g_sfcb_d[l_ac].sfcb033,g_sfcb_d[l_ac].sfcb034,
                           g_sfcb_d[l_ac].sfcb035,g_sfcb_d[l_ac].sfcb038,
                           g_sfcb_d[l_ac].sfcb039,g_sfcb_d[l_ac].sfcb036,
                           g_sfcb_d[l_ac].sfcb037,g_sfcb_d[l_ac].sfcb040,
                           g_sfcb_d[l_ac].sfcb041,g_sfcb_d[l_ac].sfcb042,
                           g_sfcb_d[l_ac].sfcb048,g_sfcb_d[l_ac].sfcb049,
                           g_sfcb_d[l_ac].sfcb051
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         EXIT FOREACH
      END IF
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   =  9035
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         EXIT FOREACH
      END IF
      LET l_ac = l_ac + 1
   END FOREACH
   
   CALL g_sfcb_d.deleteElement(g_sfcb_d.getLength())
   CALL g_sfcb00_d.deleteElement(g_sfcb00_d.getLength())
   CALL g_sfcb01_d.deleteElement(g_sfcb01_d.getLength())
   CALL g_sfcb02_d.deleteElement(g_sfcb02_d.getLength())
   CALL g_sfcb03_d.deleteElement(g_sfcb03_d.getLength())
   CALL g_sfcb04_d.deleteElement(g_sfcb04_d.getLength())
   CALL g_sfcb05_d.deleteElement(g_sfcb05_d.getLength())
   CALL g_sfcb06_d.deleteElement(g_sfcb06_d.getLength())
   CALL g_sfcb07_d.deleteElement(g_sfcb07_d.getLength())
   CALL g_sfcb08_d.deleteElement(g_sfcb08_d.getLength())
   CALL g_sfcb09_d.deleteElement(g_sfcb09_d.getLength())
   CALL g_sfcb10_d.deleteElement(g_sfcb10_d.getLength())
   CALL g_sfcb11_d.deleteElement(g_sfcb11_d.getLength())
   CALL g_sfcb12_d.deleteElement(g_sfcb12_d.getLength())
   CALL g_sfcb13_d.deleteElement(g_sfcb13_d.getLength())
   CALL g_sfcb14_d.deleteElement(g_sfcb14_d.getLength())
   CALL g_sfcb15_d.deleteElement(g_sfcb15_d.getLength())
   CALL g_sfcb16_d.deleteElement(g_sfcb16_d.getLength())
   CALL g_sfcb17_d.deleteElement(g_sfcb17_d.getLength())
   CALL g_sfcb18_d.deleteElement(g_sfcb18_d.getLength())
   CALL g_sfcb19_d.deleteElement(g_sfcb19_d.getLength())
   CALL g_sfcb20_d.deleteElement(g_sfcb20_d.getLength())
   CALL g_sfcb21_d.deleteElement(g_sfcb21_d.getLength())
   CALL g_sfcb22_d.deleteElement(g_sfcb22_d.getLength())
   CALL g_sfcb23_d.deleteElement(g_sfcb23_d.getLength())
   CALL g_sfcb24_d.deleteElement(g_sfcb24_d.getLength())
   CALL g_sfcb25_d.deleteElement(g_sfcb25_d.getLength())
   CALL g_sfcb26_d.deleteElement(g_sfcb26_d.getLength())
   CALL g_sfcb27_d.deleteElement(g_sfcb27_d.getLength())
   CALL g_sfcb28_d.deleteElement(g_sfcb28_d.getLength())
   CALL g_sfcb29_d.deleteElement(g_sfcb29_d.getLength())
   
   FREE sel_sfcb001_bp
   FREE sel_sfcb_bp
   FREE b_fill3_bp
 
   LET l_ac = li_ac

END FUNCTION

 
{</section>}
 
