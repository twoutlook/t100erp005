#該程式未解開Section, 採用最新樣板產出!
{<section id="axmt540.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0044(2017-02-15 17:46:02), PR版次:0044(2017-02-17 14:04:30)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 001160
#+ Filename...: axmt540
#+ Description: 出貨單維護作業
#+ Creator....: 04543(2014-02-20 14:42:25)
#+ Modifier...: 08992 -SD/PR- 06814
 
{</section>}
 
{<section id="axmt540.global" >}
#應用 t01 樣板自動產生(Version:79)
#add-point:填寫註解說明 name="global.memo" 
#151118-00012#1  2015/11/18 By Shiun     更改抓取匯率時的基準日期及增加"更改文件地址"action
#151117-00005#1  2015/12/04 By TSD.Tim   資料異動時異動條碼資料(bcae_t,bcaf_t)
#151208-00018#1  2015/12/09 By earl      修改銷售替代料元件
#151209-00018#1  2015/12/09 By earl      修正無來源時計價單位預設問題、重新取價時跳出詢問視窗
#151224-00025#5  2015/12/28 By dorishsu  產品特徵欄位若無開窗輸入反而自行手動輸入時,則無法新增至inam_t
#151210-00009#1  2015/12/30 By earl      多角流水號一致時，開窗、校驗調整
#150721-00001#1  2016/01/08 By earl      控制組過濾、單據別與客戶預設資料調整
#                                        單據別預設資料要高於客戶預設資料
#150917-00001#3  2016/01/19 By earl      多角中斷調整為可拆單功能
#160119-00015#1  2016/01/20 By dorislai  嘜頭編號欄位開窗改用「收貨客戶」篩選
#160125-00025#2  2016/02/15 By earl      整理條碼產生邏輯
#160225-00047#1  2016/03/09 By earl      補上單據別控制組限制開窗條件
#160125-00015#1  2016/03/10 By whitney   add 庫存管理特微 imaf055 控卡
#160314-00008#1  2016/03/16 By catmoon   批/序號3:不控管時,修改儲位/批號時沒有更新到inao_t
#160316-00007#4  2016/03/17 By xianghui  库存管理特征需增加制造批序号的处理逻辑
#160314-00009#15 2016/03/29 By xujing    产品特征自动开窗增加参数判断
#160318-00005#41 2016/04/01 by pengxin   修正azzi920重复定义之错误讯息
#160330-00009#1  2016/04/06 By Ann_Huang 修正規格庫存管理特徵屬性CASE改為none
#160318-00025#15 2016/04/06 BY 07900     重复错误讯息的修改
#160408-00035#5  2016/04/15 By shiun     如果有做硬備置，那麼出貨單產生單身資料的時候，要自動帶出備置的庫儲批與數量
#160408-00035#7  2016/04/21 By xianghui  过帐和过帐还原时，如果有备置量需要回写订单xmdr的已备置量
#160531-00047#1  2016/06/02 By shiun     在客戶編號輸入一次性交易對象，彈出一次性交易對項基本資料的小視窗 
#160603-00026#1  2016/06/15 By ming      不控管批序號的不需要彈窗，將axmt540中160314-00008#1這張單號改的東西還原成判斷s_lot_batch_number
#160623-00014#1  2016/06/20 By dorislai  mark init裡面的g_prog
#160512-00004#2  2016/06/23 By dorislai  依aimm212撿貨策略(imaf059)預帶庫儲批
#160603-00004#1  2016/06/23 By tsungyung 單身批序號明細單身匯處EXCEL資料與欄位無法對應。
#160623-00014#1 16/06/27 By dorislai     為應應行業別，修改g_prog。
#                                        原：g_prog='程式代碼'→改成：g_prog MATCHES '程式代碼*' (CASE WHEN 也有改)
#160705-00040#1  16/07/07 By Sarah       axmt540_send中呼叫確認元件後若有錯誤時應該RETURN FALSE
#160705-00042#11 16/07/14 By sakura      #160623-00014#1,g_prog MATCHES '程式代碼*'→g_prog MATCHES '程式代碼'
#160705-00042#12 16/07/15 By 02159       把gzcb002=固定寫死的作業代號改成g_prog,然後gzcb_t要多JOIN gzzz_t
#160510-00043#2  16/07/25 By 02097       T類作業在browser_fill()組SQL前,呼叫s_aooi200_filter_slip將回傳條件組進去g_wc中
#160519-00008#8  16/07/28 By 02097       单据上库存管理特征栏位依依料件设定控管
#160809-00020#1  16/08/09 By 02040       出貨單確認信用額度未超現時，不會call 確認段，導致未回寫相關資料
#160805-00004#1  16/08/17 By 02040       調整訂單結案流程，需多角拋轉完後，才做結案
#160812-00017#6  16/08/22 By 06814       在satatchange( )的FUNCTION中，有RETURN指令但沒有加上transaction_end( ) 
#                                        造成transaction沒有結束就直接RETURN
#160818-00017#43 2016/08/26 By lixh      单据类作业修改，删除时需重新检查状态
#160831-00033#1  2016/08/31 By 02097     修改FUNCTION axmt540_qrystr(),將單號改成傳入la_param.param[2]
#160901-00052#1  2016/09/13 By 02097     排除資料殘留問題
#160907-00054#1  2016/09/13 By 02097     单别aooi200中设置了出货单别的在途成本库位的预设值。
#160912-00035#1  2016/09/29 By 02040     發票編號改為只顯示不可做編輯 
#160927-00022#1  2016/10/12 By shiun     訂單備置後多庫儲批頁簽未帶出備置量
#161011-00017#1  2016/10/13 By dorislai  輸入完資料後，重新計算尾差
#161012-00055#1  2016/10/19 By 02040     整單操作增加”已開立銷貨發票查詢”
#161017-00031#1  2016/11/01 By shiun     出貨單過帳時，會自動call結案處理，這部份取消，不進行自動結案，全改由axmp500設背景排程進行
#161101-00091#1  2016/11/02 By shiun     當出貨單為外銷(xmdk042=2)時，結關日期(xmdk032)需預設g_today並卡必輸
#161109-00085#4  2016/11/10 By lienjunqi 整批調整系統星號寫法
#161124-00004#1  2016/11/24 By ouhz      调整axmt541查询开窗出货单单号报错-201问题
#161125-00001#1  2016/11/29 By ouhz      调整参数设定多角单据自动抛转时，若抛转未成功，弹出错误信息，并将单据资料一并还原
#161027-00035#1  2016/11/28 By Whitney   修正#161125-00001#1以及修正statechange()return沒有關閉axmt540_cl
#161109-00085#76 2016/12/14 By 08171     整批調整系統星號寫法
#161205-00025#10 2016/12/19 By lori      效能調整
#161130-00043#1  2016/12/20 By Sarah     訂單轉過來的費用資料，出貨數量、計價數量固定為1
#161207-00033#30 2016/12/22 By 08993     一次性交易對象名稱顯示要改抓pmak003
#161226-00077#1  2016/12/30 By ouhz      调整s_axmt500_ins_pmao(）料件/产品特征参数给值错误
#170101-00003#1  2017/01/04 By ouhz      调整交运方式为空,清空起运地/目的地栏位并且不允许输入 
#170103-00034#1  2017/01/04 By ouhz      调整根据费用料号自动带出订单单号信息
#170103-00026#1  2017/01/06 By ouhz      调整1.单头签收仓未带出aooi200中设定的默认库位 2.单身料件录入后，未自动带出料件的单位
#161221-00064#17 2017/01/10 By zhujing   增加pmao000(1-采购，2-销售),用于区分axmi120和apmi120数据显示
#160907-00015#1  2017/01/13 By lixh      BEFORE INSERT 没有清空，没有清空对应的g_xmdl2_d[l_ac.*],造成取价更新资料错误
#170116-00044#2  2017/11/16 By dorislai  若料號為費用性料號，庫儲批不需輸入
#170117-00040#1  2017/01/20 By Ann_Huang 調整若出貨單位是由訂單或出通單帶入且子件特性為9樣品,則出貨單位要與來源資料的單位一致
#170119-00008#5  2017/01/23 By 08171     1.新增时，部门开窗和手动输入检核不一致，开窗开不出其他法人归属的部门，但手动输入提交OK
#                                        2.新增时，单头“出通单号”栏位开窗会带出流通分销出货通知单
#                                        3.新增时，单头“订单单号”栏位开窗会带出流通分销订单
#                                        4.新增时，单身已经输入订单单号，则单身“料件编号”栏位应只开窗带出显示该笔订单对应的料件编号或替代料信息提供开窗，目前开出所有的料件编号，选择后再提示无替代关系不符合对应订单单号的检核
#160604-00034#18 2017/02/02 By 08993     若aoos020"進銷存過帳日期控管方式"參數設定為"不可修改"時，則將過帳日期關閉
#161031-00025#26 2017/02/09 By 08992     1.將aooi360_01以嵌入的方式，用頁籤放在axmt540單頭多帳期頁籤與異動資訊頁籤中間
#                                           要可修改
#                                           控制類型 =3:內部資訊傳遞 取消不要了
#                                           項次固定寫入0
#                                        2.原axmt540的備註action，改為確認後可執行，直接修改單頭新的"備註"頁籤
#                                        3.axmt540單身最後面增加顯示"長備註"欄位，一樣抓取aooi360的備註顯示
#                                          項次 = 單身項次
#                                          控制類型 = 列印在後
#170217-00017#1 2017/02/17  By 06814     修正axmt541無訂單時,料件編號開窗bug
#end add-point   
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"
IMPORT FGL sub_s_lot
IMPORT FGL aoo_aooi360_01   #161031-00025#26
#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"
GLOBALS "../../../com/sub/4gl/s_axmt580.inc"
GLOBALS "../../../com/sub/4gl/s_aic_carry.inc"
#161031-00025#26-s
GLOBALS
TYPE type_g_ooff_d        RECORD
       ooff001 LIKE ooff_t.ooff001, 
   ooff002 LIKE ooff_t.ooff002, 
   ooff004 LIKE ooff_t.ooff004, 
   ooff005 LIKE ooff_t.ooff005, 
   ooff006 LIKE ooff_t.ooff006, 
   ooff007 LIKE ooff_t.ooff007, 
   ooff008 LIKE ooff_t.ooff008, 
   ooff009 LIKE ooff_t.ooff009, 
   ooff010 LIKE ooff_t.ooff010, 
   ooff011 LIKE ooff_t.ooff011, 
   ooff003 LIKE ooff_t.ooff003, 
   ooff012 LIKE ooff_t.ooff012, 
   ooff013 LIKE ooff_t.ooff013, 
   ooff014 LIKE ooff_t.ooff014
       END RECORD
 
DEFINE g_ooff_d4          DYNAMIC ARRAY OF type_g_ooff_d

DEFINE g_detail_insert   LIKE type_t.num5   #單身的新增權限
DEFINE g_detail_delete   LIKE type_t.num5   #單身的刪除權限
DEFINE g_wc2_i36001      STRING             #备注单身QBE條件
DEFINE g_d_idx_i36001    LIKE type_t.num5   #备注单身所在筆數
DEFINE g_d_cnt_i36001    LIKE type_t.num5   #备注单身總筆數
DEFINE g_appoint_idx     LIKE type_t.num5   #指定進入單身行數
DEFINE g_ooff001_d       LIKE ooff_t.ooff001
DEFINE g_ooff002_d       LIKE ooff_t.ooff002
DEFINE g_ooff003_d       LIKE ooff_t.ooff003
DEFINE g_ooff004_d       LIKE ooff_t.ooff004
DEFINE g_ooff005_d       LIKE ooff_t.ooff005
DEFINE g_ooff006_d       LIKE ooff_t.ooff006
DEFINE g_ooff007_d       LIKE ooff_t.ooff007
DEFINE g_ooff008_d       LIKE ooff_t.ooff008
DEFINE g_ooff009_d       LIKE ooff_t.ooff009
DEFINE g_ooff010_d       LIKE ooff_t.ooff010
DEFINE g_ooff011_d       LIKE ooff_t.ooff011
END GLOBALS
#161031-00025#26-e
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_xmdk_m        RECORD
       xmdk000 LIKE xmdk_t.xmdk000, 
   xmdksite LIKE xmdk_t.xmdksite, 
   xmdkdocno LIKE xmdk_t.xmdkdocno, 
   xmdkdocno_desc LIKE type_t.chr80, 
   xmdkdocdt LIKE xmdk_t.xmdkdocdt, 
   xmdk001 LIKE xmdk_t.xmdk001, 
   xmdk003 LIKE xmdk_t.xmdk003, 
   xmdk003_desc LIKE type_t.chr80, 
   xmdk004 LIKE xmdk_t.xmdk004, 
   xmdk004_desc LIKE type_t.chr80, 
   xmdkstus LIKE xmdk_t.xmdkstus, 
   xmdk005 LIKE xmdk_t.xmdk005, 
   xmdk006 LIKE xmdk_t.xmdk006, 
   xmdk007 LIKE xmdk_t.xmdk007, 
   xmdk007_desc LIKE type_t.chr80, 
   xmdk009 LIKE xmdk_t.xmdk009, 
   xmdk009_desc LIKE type_t.chr80, 
   xmdk008 LIKE xmdk_t.xmdk008, 
   xmdk008_desc LIKE type_t.chr80, 
   xmdk202 LIKE xmdk_t.xmdk202, 
   xmdk202_desc LIKE type_t.chr80, 
   xmdk047 LIKE xmdk_t.xmdk047, 
   xmdk002 LIKE xmdk_t.xmdk002, 
   xmdk045 LIKE xmdk_t.xmdk045, 
   xmdk032 LIKE xmdk_t.xmdk032, 
   xmdk030 LIKE xmdk_t.xmdk030, 
   xmdk030_desc LIKE type_t.chr80, 
   xmdk028 LIKE xmdk_t.xmdk028, 
   xmdk029 LIKE xmdk_t.xmdk029, 
   xmdk037 LIKE xmdk_t.xmdk037, 
   xmdk034 LIKE xmdk_t.xmdk034, 
   xmdk034_desc LIKE type_t.chr80, 
   xmdk054 LIKE xmdk_t.xmdk054, 
   xmdk039 LIKE xmdk_t.xmdk039, 
   xmdk039_desc LIKE type_t.chr80, 
   xmdk040 LIKE xmdk_t.xmdk040, 
   xmdk040_desc LIKE type_t.chr80, 
   xmdk087 LIKE xmdk_t.xmdk087, 
   xmdk021 LIKE xmdk_t.xmdk021, 
   xmdk021_desc LIKE type_t.chr80, 
   address LIKE type_t.chr500, 
   xmdk022 LIKE xmdk_t.xmdk022, 
   xmdk022_desc LIKE type_t.chr80, 
   xmdk023 LIKE xmdk_t.xmdk023, 
   xmdk023_desc LIKE type_t.chr80, 
   xmdk024 LIKE xmdk_t.xmdk024, 
   xmdk024_desc LIKE type_t.chr80, 
   xmdk020 LIKE xmdk_t.xmdk020, 
   xmdk020_desc LIKE type_t.chr80, 
   xmdk025 LIKE xmdk_t.xmdk025, 
   xmdk026 LIKE xmdk_t.xmdk026, 
   xmdk027 LIKE xmdk_t.xmdk027, 
   xmdk027_desc LIKE type_t.chr80, 
   xmdk038 LIKE xmdk_t.xmdk038, 
   xmdk038_desc LIKE type_t.chr80, 
   xmdk055 LIKE xmdk_t.xmdk055, 
   xmdk010 LIKE xmdk_t.xmdk010, 
   xmdk010_desc LIKE type_t.chr80, 
   xmdk011 LIKE xmdk_t.xmdk011, 
   xmdk011_desc LIKE type_t.chr80, 
   xmdk012 LIKE xmdk_t.xmdk012, 
   xmdk012_desc LIKE type_t.chr80, 
   xmdk013 LIKE xmdk_t.xmdk013, 
   xmdk014 LIKE xmdk_t.xmdk014, 
   xmdk015 LIKE xmdk_t.xmdk015, 
   xmdk015_desc LIKE type_t.chr80, 
   xmdk016 LIKE xmdk_t.xmdk016, 
   xmdk016_desc LIKE type_t.chr80, 
   xmdk017 LIKE xmdk_t.xmdk017, 
   xmdk018 LIKE xmdk_t.xmdk018, 
   xmdk018_desc LIKE type_t.chr80, 
   xmdk019 LIKE xmdk_t.xmdk019, 
   xmdk019_desc LIKE type_t.chr80, 
   xmdk042 LIKE xmdk_t.xmdk042, 
   xmdk043 LIKE xmdk_t.xmdk043, 
   xmdk031 LIKE xmdk_t.xmdk031, 
   xmdk031_desc LIKE type_t.chr80, 
   xmdk033 LIKE xmdk_t.xmdk033, 
   xmdk033_desc LIKE type_t.chr80, 
   xmdk044 LIKE xmdk_t.xmdk044, 
   xmdk035 LIKE xmdk_t.xmdk035, 
   xmdk046 LIKE xmdk_t.xmdk046, 
   xmdk036 LIKE xmdk_t.xmdk036, 
   xmdk083 LIKE xmdk_t.xmdk083, 
   xmdkownid LIKE xmdk_t.xmdkownid, 
   xmdkownid_desc LIKE type_t.chr80, 
   xmdkowndp LIKE xmdk_t.xmdkowndp, 
   xmdkowndp_desc LIKE type_t.chr80, 
   xmdkcrtid LIKE xmdk_t.xmdkcrtid, 
   xmdkcrtid_desc LIKE type_t.chr80, 
   xmdkcrtdp LIKE xmdk_t.xmdkcrtdp, 
   xmdkcrtdp_desc LIKE type_t.chr80, 
   xmdkcrtdt LIKE xmdk_t.xmdkcrtdt, 
   xmdkmodid LIKE xmdk_t.xmdkmodid, 
   xmdkmodid_desc LIKE type_t.chr80, 
   xmdkmoddt LIKE xmdk_t.xmdkmoddt, 
   xmdkcnfid LIKE xmdk_t.xmdkcnfid, 
   xmdkcnfid_desc LIKE type_t.chr80, 
   xmdkcnfdt LIKE xmdk_t.xmdkcnfdt, 
   xmdkpstid LIKE xmdk_t.xmdkpstid, 
   xmdkpstid_desc LIKE type_t.chr80, 
   xmdkpstdt LIKE xmdk_t.xmdkpstdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_xmdl_d        RECORD
       xmdlsite LIKE xmdl_t.xmdlsite, 
   xmdlseq LIKE xmdl_t.xmdlseq, 
   xmdl001 LIKE xmdl_t.xmdl001, 
   xmdl002 LIKE xmdl_t.xmdl002, 
   xmdl003 LIKE xmdl_t.xmdl003, 
   xmdl004 LIKE xmdl_t.xmdl004, 
   xmdl005 LIKE xmdl_t.xmdl005, 
   xmdl006 LIKE xmdl_t.xmdl006, 
   xmda033 LIKE type_t.chr500, 
   xmdl007 LIKE xmdl_t.xmdl007, 
   xmdl008 LIKE xmdl_t.xmdl008, 
   xmdl008_desc LIKE type_t.chr500, 
   xmdl008_desc_desc LIKE type_t.chr500, 
   xmdl009 LIKE xmdl_t.xmdl009, 
   xmdl009_desc LIKE type_t.chr500, 
   xmdl033 LIKE xmdl_t.xmdl033, 
   l_pmao009 LIKE type_t.chr500, 
   l_pmao010 LIKE type_t.chr500, 
   xmdl011 LIKE xmdl_t.xmdl011, 
   xmdl011_desc LIKE type_t.chr500, 
   xmdl012 LIKE xmdl_t.xmdl012, 
   xmdl017 LIKE xmdl_t.xmdl017, 
   xmdl017_desc LIKE type_t.chr500, 
   xmdl018 LIKE xmdl_t.xmdl018, 
   xmdl019 LIKE xmdl_t.xmdl019, 
   xmdl019_desc LIKE type_t.chr500, 
   xmdl020 LIKE xmdl_t.xmdl020, 
   xmdl010 LIKE xmdl_t.xmdl010, 
   xmdl013 LIKE xmdl_t.xmdl013, 
   xmdl014 LIKE xmdl_t.xmdl014, 
   xmdl014_desc LIKE type_t.chr500, 
   xmdl015 LIKE xmdl_t.xmdl015, 
   xmdl015_desc LIKE type_t.chr500, 
   xmdl016 LIKE xmdl_t.xmdl016, 
   xmdl052 LIKE xmdl_t.xmdl052, 
   xmdl021 LIKE xmdl_t.xmdl021, 
   xmdl021_desc LIKE type_t.chr500, 
   xmdl022 LIKE xmdl_t.xmdl022, 
   xmdl050 LIKE xmdl_t.xmdl050, 
   xmdl050_desc LIKE type_t.chr500, 
   xmdl023 LIKE xmdl_t.xmdl023, 
   xmdl041 LIKE xmdl_t.xmdl041, 
   xmdl030 LIKE xmdl_t.xmdl030, 
   xmdl030_desc LIKE type_t.chr500, 
   xmdl031 LIKE xmdl_t.xmdl031, 
   xmdl031_desc LIKE type_t.chr500, 
   xmdl032 LIKE xmdl_t.xmdl032, 
   xmdl032_desc LIKE type_t.chr500, 
   xmdl051 LIKE xmdl_t.xmdl051, 
   xmdl035 LIKE xmdl_t.xmdl035, 
   xmdl036 LIKE xmdl_t.xmdl036, 
   xmdl037 LIKE xmdl_t.xmdl037, 
   xmdl056 LIKE xmdl_t.xmdl056, 
   xmdl088 LIKE xmdl_t.xmdl088, 
   xmdl034 LIKE xmdl_t.xmdl034, 
   ooff013 LIKE type_t.chr500
       END RECORD
PRIVATE TYPE type_g_xmdl2_d RECORD
       xmdlseq LIKE xmdl_t.xmdlseq, 
   xmdl0071 LIKE type_t.chr500, 
   xmdl0081 LIKE type_t.chr500, 
   xmdl0081_desc LIKE type_t.chr500, 
   xmdl0081_desc_desc LIKE type_t.chr500, 
   xmdl0091 LIKE type_t.chr500, 
   xmdl0091_desc LIKE type_t.chr500, 
   xmdl0111 LIKE type_t.chr500, 
   xmdl0121 LIKE type_t.chr500, 
   xmdl0171 LIKE type_t.chr500, 
   xmdl0171_desc LIKE type_t.chr500, 
   xmdl0181 LIKE type_t.num20_6, 
   xmdl0211 LIKE type_t.chr500, 
   xmdl0211_desc LIKE type_t.chr500, 
   xmdl0221 LIKE type_t.num20_6, 
   xmdl024 LIKE xmdl_t.xmdl024, 
   xmdl025 LIKE xmdl_t.xmdl025, 
   xmdl025_desc LIKE type_t.chr500, 
   xmdl026 LIKE xmdl_t.xmdl026, 
   xmdl027 LIKE xmdl_t.xmdl027, 
   xmdl028 LIKE xmdl_t.xmdl028, 
   xmdl029 LIKE xmdl_t.xmdl029, 
   xmdl042 LIKE xmdl_t.xmdl042, 
   xmdl043 LIKE xmdl_t.xmdl043, 
   xmdl044 LIKE xmdl_t.xmdl044, 
   xmdl045 LIKE xmdl_t.xmdl045, 
   xmdl046 LIKE xmdl_t.xmdl046, 
   xmdl087 LIKE xmdl_t.xmdl087
       END RECORD
PRIVATE TYPE type_g_xmdl3_d RECORD
       xmdmsite LIKE xmdm_t.xmdmsite, 
   xmdmseq LIKE xmdm_t.xmdmseq, 
   xmdmseq1 LIKE xmdm_t.xmdmseq1, 
   xmdm001 LIKE xmdm_t.xmdm001, 
   xmdm001_desc LIKE type_t.chr500, 
   xmdm001_desc_desc LIKE type_t.chr500, 
   xmdm002 LIKE xmdm_t.xmdm002, 
   xmdm002_desc LIKE type_t.chr500, 
   xmdm003 LIKE xmdm_t.xmdm003, 
   xmdm004 LIKE xmdm_t.xmdm004, 
   xmdm005 LIKE xmdm_t.xmdm005, 
   xmdm005_desc LIKE type_t.chr500, 
   xmdm006 LIKE xmdm_t.xmdm006, 
   xmdm006_desc LIKE type_t.chr500, 
   xmdm007 LIKE xmdm_t.xmdm007, 
   xmdm033 LIKE xmdm_t.xmdm033, 
   xmdm008 LIKE xmdm_t.xmdm008, 
   xmdm008_desc LIKE type_t.chr500, 
   xmdm009 LIKE xmdm_t.xmdm009, 
   xmdm010 LIKE xmdm_t.xmdm010, 
   xmdm010_desc LIKE type_t.chr500, 
   xmdm011 LIKE xmdm_t.xmdm011, 
   xmdm012 LIKE xmdm_t.xmdm012, 
   xmdm013 LIKE xmdm_t.xmdm013, 
   xmdm014 LIKE xmdm_t.xmdm014
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_xmdkdocno LIKE xmdk_t.xmdkdocno,
      b_xmdk026 LIKE xmdk_t.xmdk026,
      b_xmdk003 LIKE xmdk_t.xmdk003,
   b_xmdk003_desc LIKE type_t.chr80,
      b_xmdk004 LIKE xmdk_t.xmdk004,
   b_xmdk004_desc LIKE type_t.chr80,
      b_xmdk006 LIKE xmdk_t.xmdk006,
      b_xmdk007 LIKE xmdk_t.xmdk007,
   b_xmdk007_desc LIKE type_t.chr80,
      b_xmdk008 LIKE xmdk_t.xmdk008,
   b_xmdk008_desc LIKE type_t.chr80,
      b_xmdk009 LIKE xmdk_t.xmdk009,
   b_xmdk009_desc LIKE type_t.chr80
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"

DEFINE g_oodb011   LIKE oodb_t.oodb011    #稅別應用(1.依料建設定2.正常稅率)

DEFINE g_xmdh011   LIKE xmdh_t.xmdh011    #來源多庫儲批
DEFINE g_xmdh012   LIKE xmdh_t.xmdh012    #來源庫位
DEFINE g_xmdh013   LIKE xmdh_t.xmdh013    #來源儲位
DEFINE g_xmdh014   LIKE xmdh_t.xmdh014    #來源批號
DEFINE g_xmdh029   LIKE xmdh_t.xmdh029    #來源庫存管理特徵

DEFINE g_ask       LIKE type_t.num5       #詢問是否自動產生單身
DEFINE g_pmao_flag LIKE type_t.chr1
DEFINE g_ratedate  LIKE xmdk_t.xmdkdocdt  #匯率基準日期   #add--151118-00012#1 By shiun
DEFINE g_flag      LIKE type_t.num5       #add by lixiang 2015/11/20
DEFINE g_aic_doc   LIKE type_t.num5       #151210-00009#1  2015/12/30 By earl add
DEFINE g_pmaa004   LIKE pmaa_t.pmaa004    #法人類型       #add--160531-00047#1 By shiun
DEFINE g_xmdlseq   LIKE xmdl_t.xmdlseq    #項次  #160512-00004#2-add 為了給chkeck_inag008用
#160603-00004#1 add start -----
GLOBALS 
 TYPE type_g_inao_d        RECORD
    inao000           LIKE inao_t.inao000,
    inao013           LIKE inao_t.inao013,
    inaodocno         LIKE inao_t.inaodocno,
    inaoseq           LIKE inao_t.inaoseq,
    inaoseq1          LIKE inao_t.inaoseq1,
    inaoseq2          LIKE inao_t.inaoseq2,
    inao001           LIKE inao_t.inao001,
    inao001_desc      LIKE type_t.chr500,
    inao001_desc_desc LIKE type_t.chr500,
    inao008           LIKE inao_t.inao008,
    inao009           LIKE inao_t.inao009,
    inao012           LIKE inao_t.inao012,
    inao010           LIKE inao_t.inao010,
    inao011           LIKE inao_t.inao011
                  END RECORD

DEFINE g_inao_d   DYNAMIC ARRAY OF type_g_inao_d
DEFINE g_inao_d_t type_g_inao_d                 
END GLOBALS
#160603-00004#1 add end   -----
DEFINE g_slip_wc          STRING     #160510-00043#2
DEFINE g_slip_wc1         STRING     #170119-00008#5  2017/01/23 By 08171 add
DEFINE g_slip_wc2         STRING     #170119-00008#5  2017/01/23 By 08171 add
DEFINE g_detail_id          STRING           #紀錄停留在哪個Page #161031-00025#26 add
#end add-point
       
#模組變數(Module Variables)
DEFINE g_xmdk_m          type_g_xmdk_m
DEFINE g_xmdk_m_t        type_g_xmdk_m
DEFINE g_xmdk_m_o        type_g_xmdk_m
DEFINE g_xmdk_m_mask_o   type_g_xmdk_m #轉換遮罩前資料
DEFINE g_xmdk_m_mask_n   type_g_xmdk_m #轉換遮罩後資料
 
   DEFINE g_xmdkdocno_t LIKE xmdk_t.xmdkdocno
 
 
DEFINE g_xmdl_d          DYNAMIC ARRAY OF type_g_xmdl_d
DEFINE g_xmdl_d_t        type_g_xmdl_d
DEFINE g_xmdl_d_o        type_g_xmdl_d
DEFINE g_xmdl_d_mask_o   DYNAMIC ARRAY OF type_g_xmdl_d #轉換遮罩前資料
DEFINE g_xmdl_d_mask_n   DYNAMIC ARRAY OF type_g_xmdl_d #轉換遮罩後資料
DEFINE g_xmdl2_d          DYNAMIC ARRAY OF type_g_xmdl2_d
DEFINE g_xmdl2_d_t        type_g_xmdl2_d
DEFINE g_xmdl2_d_o        type_g_xmdl2_d
DEFINE g_xmdl2_d_mask_o   DYNAMIC ARRAY OF type_g_xmdl2_d #轉換遮罩前資料
DEFINE g_xmdl2_d_mask_n   DYNAMIC ARRAY OF type_g_xmdl2_d #轉換遮罩後資料
DEFINE g_xmdl3_d          DYNAMIC ARRAY OF type_g_xmdl3_d
DEFINE g_xmdl3_d_t        type_g_xmdl3_d
DEFINE g_xmdl3_d_o        type_g_xmdl3_d
DEFINE g_xmdl3_d_mask_o   DYNAMIC ARRAY OF type_g_xmdl3_d #轉換遮罩前資料
DEFINE g_xmdl3_d_mask_n   DYNAMIC ARRAY OF type_g_xmdl3_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="axmt540.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
                           
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axm","")
 
   #add-point:作業初始化 name="main.init"
   LET g_errshow = '1'    
   LET g_flag = FALSE   
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
                           
   #end add-point
   LET g_forupd_sql = " SELECT xmdk000,xmdksite,xmdkdocno,'',xmdkdocdt,xmdk001,xmdk003,'',xmdk004,'', 
       xmdkstus,xmdk005,xmdk006,xmdk007,'',xmdk009,'',xmdk008,'',xmdk202,'',xmdk047,xmdk002,xmdk045, 
       xmdk032,xmdk030,'',xmdk028,xmdk029,xmdk037,xmdk034,'',xmdk054,xmdk039,'',xmdk040,'',xmdk087,xmdk021, 
       '','',xmdk022,'',xmdk023,'',xmdk024,'',xmdk020,'',xmdk025,xmdk026,xmdk027,'',xmdk038,'',xmdk055, 
       xmdk010,'',xmdk011,'',xmdk012,'',xmdk013,xmdk014,xmdk015,'',xmdk016,'',xmdk017,xmdk018,'',xmdk019, 
       '',xmdk042,xmdk043,xmdk031,'',xmdk033,'',xmdk044,xmdk035,xmdk046,xmdk036,xmdk083,xmdkownid,'', 
       xmdkowndp,'',xmdkcrtid,'',xmdkcrtdp,'',xmdkcrtdt,xmdkmodid,'',xmdkmoddt,xmdkcnfid,'',xmdkcnfdt, 
       xmdkpstid,'',xmdkpstdt", 
                      " FROM xmdk_t",
                      " WHERE xmdkent= ? AND xmdkdocno=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
                           
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt540_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.xmdk000,t0.xmdksite,t0.xmdkdocno,t0.xmdkdocdt,t0.xmdk001,t0.xmdk003, 
       t0.xmdk004,t0.xmdkstus,t0.xmdk005,t0.xmdk006,t0.xmdk007,t0.xmdk009,t0.xmdk008,t0.xmdk202,t0.xmdk047, 
       t0.xmdk002,t0.xmdk045,t0.xmdk032,t0.xmdk030,t0.xmdk028,t0.xmdk029,t0.xmdk037,t0.xmdk034,t0.xmdk054, 
       t0.xmdk039,t0.xmdk040,t0.xmdk087,t0.xmdk021,t0.xmdk022,t0.xmdk023,t0.xmdk024,t0.xmdk020,t0.xmdk025, 
       t0.xmdk026,t0.xmdk027,t0.xmdk038,t0.xmdk055,t0.xmdk010,t0.xmdk011,t0.xmdk012,t0.xmdk013,t0.xmdk014, 
       t0.xmdk015,t0.xmdk016,t0.xmdk017,t0.xmdk018,t0.xmdk019,t0.xmdk042,t0.xmdk043,t0.xmdk031,t0.xmdk033, 
       t0.xmdk044,t0.xmdk035,t0.xmdk046,t0.xmdk036,t0.xmdk083,t0.xmdkownid,t0.xmdkowndp,t0.xmdkcrtid, 
       t0.xmdkcrtdp,t0.xmdkcrtdt,t0.xmdkmodid,t0.xmdkmoddt,t0.xmdkcnfid,t0.xmdkcnfdt,t0.xmdkpstid,t0.xmdkpstdt, 
       t1.ooag011 ,t2.ooefl003 ,t3.pmaal004 ,t4.pmaal004 ,t5.pmaal004 ,t6.pmaal004 ,t7.oojdl003 ,t8.oocql004 , 
       t9.inayl003 ,t10.inayl003 ,t12.oocql004 ,t13.pmaal003 ,t14.xmaol004 ,t15.oocql004 ,t16.ooibl004 , 
       t17.oocql004 ,t18.xmahl003 ,t19.ooidl003 ,t20.ooag011 ,t21.ooefl003 ,t22.ooag011 ,t23.ooefl003 , 
       t24.ooag011 ,t25.ooag011 ,t26.ooag011",
               " FROM xmdk_t t0",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent="||g_enterprise||" AND t1.ooag001=t0.xmdk003  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=t0.xmdk004 AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t3 ON t3.pmaalent="||g_enterprise||" AND t3.pmaal001=t0.xmdk007 AND t3.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t4 ON t4.pmaalent="||g_enterprise||" AND t4.pmaal001=t0.xmdk009 AND t4.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t5 ON t5.pmaalent="||g_enterprise||" AND t5.pmaal001=t0.xmdk008 AND t5.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t6 ON t6.pmaalent="||g_enterprise||" AND t6.pmaal001=t0.xmdk202 AND t6.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN oojdl_t t7 ON t7.oojdlent="||g_enterprise||" AND t7.oojdl001=t0.xmdk030 AND t7.oojdl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t8 ON t8.oocqlent="||g_enterprise||" AND t8.oocql001='297' AND t8.oocql002=t0.xmdk034 AND t8.oocql003='"||g_dlang||"' ",
               " LEFT JOIN inayl_t t9 ON t9.inaylent="||g_enterprise||" AND t9.inayl001=t0.xmdk039 AND t9.inayl002='"||g_dlang||"' ",
               " LEFT JOIN inayl_t t10 ON t10.inaylent="||g_enterprise||" AND t10.inayl001=t0.xmdk040 AND t10.inayl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t12 ON t12.oocqlent="||g_enterprise||" AND t12.oocql001='263' AND t12.oocql002=t0.xmdk022 AND t12.oocql003='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t13 ON t13.pmaalent="||g_enterprise||" AND t13.pmaal001=t0.xmdk020 AND t13.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN xmaol_t t14 ON t14.xmaolent="||g_enterprise||" AND t14.xmaol001=t0.xmdk007 AND t14.xmaol002=t0.xmdk027 AND t14.xmaol003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t15 ON t15.oocqlent="||g_enterprise||" AND t15.oocql001='299' AND t15.oocql002=t0.xmdk038 AND t15.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooibl_t t16 ON t16.ooiblent="||g_enterprise||" AND t16.ooibl002=t0.xmdk010 AND t16.ooibl003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t17 ON t17.oocqlent="||g_enterprise||" AND t17.oocql001='238' AND t17.oocql002=t0.xmdk011 AND t17.oocql003='"||g_dlang||"' ",
               " LEFT JOIN xmahl_t t18 ON t18.xmahlent="||g_enterprise||" AND t18.xmahl001=t0.xmdk018 AND t18.xmahl002='"||g_dlang||"' ",
               " LEFT JOIN ooidl_t t19 ON t19.ooidlent="||g_enterprise||" AND t19.ooidl001=t0.xmdk019 AND t19.ooidl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t20 ON t20.ooagent="||g_enterprise||" AND t20.ooag001=t0.xmdkownid  ",
               " LEFT JOIN ooefl_t t21 ON t21.ooeflent="||g_enterprise||" AND t21.ooefl001=t0.xmdkowndp AND t21.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t22 ON t22.ooagent="||g_enterprise||" AND t22.ooag001=t0.xmdkcrtid  ",
               " LEFT JOIN ooefl_t t23 ON t23.ooeflent="||g_enterprise||" AND t23.ooefl001=t0.xmdkcrtdp AND t23.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t24 ON t24.ooagent="||g_enterprise||" AND t24.ooag001=t0.xmdkmodid  ",
               " LEFT JOIN ooag_t t25 ON t25.ooagent="||g_enterprise||" AND t25.ooag001=t0.xmdkcnfid  ",
               " LEFT JOIN ooag_t t26 ON t26.ooagent="||g_enterprise||" AND t26.ooag001=t0.xmdkpstid  ",
 
               " WHERE t0.xmdkent = " ||g_enterprise|| " AND t0.xmdkdocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE axmt540_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
                                                      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axmt540 WITH FORM cl_ap_formpath("axm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axmt540_init()   
 
      #進入選單 Menu (="N")
      CALL axmt540_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
                                                      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axmt540
      
   END IF 
   
   CLOSE axmt540_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   CALL axmt540_01_drop_temp_table()   #axmt540_01   刪除temp_table
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="axmt540.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION axmt540_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   DEFINE l_success    LIKE type_t.num5
   DEFINE l_gzze003    LIKE gzze_t.gzze003
   DEFINE l_prog_o     LIKE type_t.chr10 #170119-00008#5  2017/01/23 By 08171
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('xmdkstus','13','N,Y,S,A,D,R,W,UH,H,Z,X')
 
      CALL cl_set_combo_scc('xmdk000','2077') 
   CALL cl_set_combo_scc('xmdk002','2063') 
   CALL cl_set_combo_scc('xmdk045','2064') 
   CALL cl_set_combo_scc('xmdk042','2085') 
   CALL cl_set_combo_scc('xmdk043','2084') 
   CALL cl_set_combo_scc('xmdk046','4060') 
   CALL cl_set_combo_scc('xmdl007','2055') 
   CALL cl_set_combo_scc('xmdl042','2067') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1','2',","1")
   CALL g_idx_group.addAttribute("'3',","1")
   CALL g_idx_group.addAttribute("","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   #161031-00025#26-s
   #子程式畫面取代主程式元件
   CALL cl_ui_replace_sub_window(cl_ap_formpath("aoo", "aooi360_01"), "grid_remarks", "Table", "s_detail1_aooi360_01")
   CALL cl_set_combo_scc_part('ooff012','11','1,2,4')
   CALL cl_set_comp_visible("ooff003",FALSE)
   #161031-00025#26-e
   CALL cl_set_combo_scc_part('xmdkstus','13','N,X,Y,S,A,D,R,W,H')
   
   CALL cl_set_combo_scc('xmdl0071','2055')
   
   CALL axmt540_01_create_temp_table() RETURNING l_success   #axmt540_01   建立temp_table
   CALL s_tax_recount_tmp()

   #判斷據點參數若不使用產品特徵時，則產品特徵需隱藏不可以維護(據點參數:S-BAS-0036)
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0036') = 'N' THEN
      CALL cl_set_comp_visible("xmdl009,xmdl009_desc,xmdl0091,xmdl0091_desc,xmdm002,xmdm002_desc",FALSE)
   END IF
   
   #判斷據點參數若不使用參考單位時，則參考單位、數量需隱藏不可以維護(據點參數:S-BAS-0028)
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0028') = 'N' THEN
      CALL cl_set_comp_visible("xmdl019,xmdl019_desc,xmdl020,xmdm010,xmdm010_desc,xmdm011",FALSE)
   END IF
   
   #整體參數未使用採購計價單位
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0007') = "N" THEN
      CALL cl_set_comp_visible("xmdl021,xmdl0211,xmdl021_desc,xmdl0211_desc,xmdl022,xmdl0221",FALSE)
   END IF   
   
   IF cl_null(g_argv[01]) THEN
      LET g_argv[01] = '1'  #預設為axmt540
   END IF

   CASE g_argv[01]
      WHEN '1'   #axmt540
#         LET g_prog = 'axmt540'  #160623-00014#1-mark
         CALL cl_set_combo_scc_part('xmdk002','2063','1,2,3,4')
         CALL cl_set_act_visible_toolbaritem('axmt540_refresh_price',FALSE)
         
      WHEN '2'   #axmt541
#         LET g_prog = 'axmt541'  #160623-00014#1-mark
         CALL cl_set_combo_scc_part('xmdk043','2084','2,3,4,5') 
         CALL cl_set_combo_scc_part('xmdk002','2063','1,3,4')
         CALL cl_set_comp_visible("xmdk005,xmdk006,b_xmdk006",FALSE)         
         CALL cl_set_comp_visible("xmdl001,xmdl002,xmdl003,xmdl004,xmdl005,xmdl006",FALSE)
         CALL cl_set_comp_visible("prog_xmdk005,prog_xmdk006",FALSE)
         CALL cl_set_act_visible("prog_axmt520",FALSE)
         CALL cl_set_act_visible("prog_axmt500",FALSE)
         CALL cl_set_comp_visible("xmda033",FALSE)   #150120新增"客戶訂單號碼"  earl
         
      WHEN '3'   #axmt542
#         LET g_prog = 'axmt542'  #160623-00014#1-mark
         CALL cl_set_combo_scc_part('xmdk002','2063','8')         
         CALL cl_set_act_visible_toolbaritem('axmt540_refresh_price',FALSE)
         CALL cl_set_act_visible_toolbaritem('axmt540_produce_axmt580',FALSE)
        
         #借貨出貨單號
         CALL cl_getmsg('axm-00533',g_dlang) RETURNING l_gzze003
         CALL cl_set_comp_att_text('xmdkdocno',l_gzze003)
         CALL cl_set_comp_att_text('b_xmdkdocno',l_gzze003)
         
         #借貨出通單號
         CALL cl_getmsg('axm-00558',g_dlang) RETURNING l_gzze003
         CALL cl_set_comp_att_text('xmdk005',l_gzze003)
         CALL cl_set_comp_att_text('xmdl001',l_gzze003)
         
         #借貨訂單單號
         CALL cl_getmsg('axm-00534',g_dlang) RETURNING l_gzze003
         CALL cl_set_comp_att_text('xmdk006',l_gzze003)
         CALL cl_set_comp_att_text('b_xmdk006',l_gzze003)
         CALL cl_set_comp_att_text('xmdl003',l_gzze003)
         
         #已借貨還價數量
         CALL cl_getmsg('axm-00572',g_dlang) RETURNING l_gzze003
         CALL cl_set_comp_att_text('xmdl035',l_gzze003)
         CALL cl_set_comp_att_text('xmdm012',l_gzze003)
         
         #已借貨還量數量
         CALL cl_getmsg('axm-00573',g_dlang) RETURNING l_gzze003
         CALL cl_set_comp_att_text('xmdl036',l_gzze003)
         CALL cl_set_comp_att_text('xmdm013',l_gzze003)
         
   END CASE
   #150821-xianghui-b
   CALL cl_set_toolbaritem_visible("s_lot_sel",TRUE)
   CALL cl_ui_replace_sub_window(cl_ap_formpath("sub", "s_lot_s01"), "grid_s_lot", "Table", "s_detail1_s_lot_s01")
   CALL s_lot_sel_create_tmp()     
   #150821-xianghui-e
   
   #add by lixiang 2015/11/20 --begin--
   CALL cl_set_toolbaritem_visible("apjm210_shift_to",TRUE)
   #無訂單出貨時，才可執行此action(執行預算轉入)
   IF g_argv[01] <> '2' THEN
      CALL cl_set_toolbaritem_visible("apjm210_shift_to",FALSE)
   END IF
   #add by lixiang 2015/11/20 --begin--
   
   #151210-00009#1  2015/12/30 By earl s
   IF cl_get_para(g_enterprise,'','E-BAS-0018') = 'Y' THEN
      LET g_aic_doc = TRUE
   ELSE
      LET g_aic_doc = FALSE
   END IF
   #151210-00009#1  2015/12/30 By earl e
   CALL s_aooi200_filter_slip('xmdkdocno') RETURNING g_slip_wc    #160510-00043#2
   #170119-00008#5  2017/01/23 By 08171 --s add
   LET l_prog_o = g_prog
   LET g_prog = 'adbt520' 
   CALL s_aooi200_filter_slip('xmdgdocno') RETURNING g_slip_wc1 
   LET g_prog = 'adbt500' 
   CALL s_aooi200_filter_slip('xmdadocno') RETURNING g_slip_wc2 
   LET g_prog = l_prog_o
   #170119-00008#5  2017/01/23 By 08171 --e add
   #end add-point
   
   #初始化搜尋條件
   CALL axmt540_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="axmt540.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION axmt540_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   DEFINE l_success   LIKE type_t.num5
   DEFINE l_xmdkdocno LIKE xmdk_t.xmdkdocno
   #add--2015/08/03 By shiun--(S)
   DEFINE tran_master RECORD
                    wc  STRING
                    END RECORD
   DEFINE l_tran      STRING
   DEFINE ls_js2      STRING
   #add--2015/08/03 By shiun--(E)   
   DEFINE l_cnt   LIKE type_t.num5  #add--2015/08/27 By shiun
   DEFINE l_xmdl001   LIKE xmdl_t.xmdl001,      #151014--xianghui
          l_xmdl002   LIKE xmdl_t.xmdl002,      #151014--xianghui
          l_xmdl013   LIKE xmdl_t.xmdl013       #151014--xianghui
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL axmt540_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
                                                                        
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
                                    
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
 
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_xmdk_m.* TO NULL
         CALL g_xmdl_d.clear()
         CALL g_xmdl2_d.clear()
         CALL g_xmdl3_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL axmt540_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL axmt540_fetch('') # reload data
               LET l_ac = 1
               CALL axmt540_ui_detailshow() #Setting the current row 
         
               CALL axmt540_idx_chk()
               #NEXT FIELD xmdlseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_xmdl_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axmt540_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1','2',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
                              
               #單身Action隱藏
               CALL axmt540_detail_action_hidden(l_ac)
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1','2',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL axmt540_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               
               CALL axmt540_show()
               #單身Action隱藏
               CALL axmt540_detail_action_hidden(l_ac)
               CALL axmt540_set_act_visible_b()
               CALL axmt540_set_act_no_visible_b()
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION axmt540_call_axmt540_01
            LET g_action_choice="axmt540_call_axmt540_01"
            IF cl_auth_chk_act("axmt540_call_axmt540_01") THEN
               
               #add-point:ON ACTION axmt540_call_axmt540_01 name="menu.detail_show.page1.axmt540_call_axmt540_01"
               
               CALL axmt540_call_axmt540_01(g_xmdl_d[g_detail_idx].xmdlseq)
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION detail_qrystr
               MENU "" ATTRIBUTE(STYLE="popup")
                  #add-point:ON ACTION detail_qrystr相關動作 name="menu.detail_show.page1_sub.detail_qrystr"
                  BEFORE MENU
                     IF cl_null(g_xmdl_d[l_ac].xmdl001) THEN
                        HIDE OPTION "prog_axmt520"
                     END IF
                     IF cl_null(g_xmdl_d[l_ac].xmdl003) THEN
                        HIDE OPTION "prog_axmt500"
                     END IF
                     IF cl_null(g_xmdl_d[l_ac].xmdl001) AND cl_null(g_xmdl_d[l_ac].xmdl003) THEN
                        EXIT MENU
                     END IF
                  #END add-point
                                 #應用 a43 樣板自動產生(Version:4)
               ON ACTION prog_axmt520
                  LET g_action_choice="prog_axmt520"
                  IF cl_auth_chk_act("prog_axmt520") THEN
                     
                     #add-point:ON ACTION prog_axmt520 name="menu.detail_show.page1_sub.prog_axmt520"
               #應用 a41 樣板自動產生(Version:2)
               #使用JSON格式組合參數與作業編號(串查)
               CALL axmt540_qrystr(g_xmdl_d[l_ac].xmdl001)
                     #END add-point
                     
                  END IF
 
 
 
               #應用 a43 樣板自動產生(Version:4)
               ON ACTION prog_axmt500
                  LET g_action_choice="prog_axmt500"
                  IF cl_auth_chk_act("prog_axmt500") THEN
                     
                     #add-point:ON ACTION prog_axmt500 name="menu.detail_show.page1_sub.prog_axmt500"
               #應用 a41 樣板自動產生(Version:2)
               #使用JSON格式組合參數與作業編號(串查)
               CALL axmt540_qrystr(g_xmdl_d[l_ac].xmdl003)
                     #END add-point
                     
                  END IF
 
 
 
 
               END MENU
 
 
 
               #add-point:ON ACTION detail_qrystr name="menu.detail_show.page1.detail_qrystr"
               
               #END add-point
 
 
 
 
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
 
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_xmdl2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axmt540_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[2] = l_ac
               CALL g_idx_group.addAttribute("'3',",l_ac)
               
               #add-point:page2, before row動作 name="ui_dialog.body2.before_row"

               #單身Action隱藏
               CALL axmt540_detail_action_hidden(l_ac)

               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL axmt540_idx_chk()
               #add-point:page2自定義行為 name="ui_dialog.body2.before_display"

               CALL axmt540_show()
               #單身Action隱藏
               CALL axmt540_detail_action_hidden(l_ac)

               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION axmt540_call_axmt540_01
            LET g_action_choice="axmt540_call_axmt540_01"
            IF cl_auth_chk_act("axmt540_call_axmt540_01") THEN
               
               #add-point:ON ACTION axmt540_call_axmt540_01 name="menu.detail_show.page2.axmt540_call_axmt540_01"
               
               CALL axmt540_call_axmt540_01(g_xmdl2_d[g_detail_idx].xmdlseq)
               
               #END add-point
               
            END IF
 
 
 
 
         
            #add-point:page2自定義行為 name="ui_dialog.body2.action"
                                                                                                            
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_xmdl3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axmt540_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[3] = l_ac
               CALL g_idx_group.addAttribute("",l_ac)
               
               #add-point:page3, before row動作 name="ui_dialog.body3.before_row"
                                                                                                                                       
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue(""))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
               #顯示單身筆數
               CALL axmt540_idx_chk()
               #add-point:page3自定義行為 name="ui_dialog.body3.before_display"

               CALL axmt540_show()

               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION s_lot_sel
            LET g_action_choice="s_lot_sel"
            IF cl_auth_chk_act("s_lot_sel") THEN
               
               #add-point:ON ACTION s_lot_sel name="menu.detail_show.page3.s_lot_sel"
               #150821-xianghui-b
               IF cl_null(g_detail_idx) OR g_detail_idx = 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abm-00073'
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CONTINUE DIALOG
               END IF
               
               IF g_xmdk_m.xmdkstus <> 'N' THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apm-00035'
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CONTINUE DIALOG
               END IF
               
               IF cl_null(g_xmdl3_d[g_detail_idx].xmdm005) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'sub-00126'
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CONTINUE DIALOG
               END IF  
               
               IF NOT cl_null(g_xmdk_m.xmdkdocno) AND
                  NOT cl_null(g_xmdl3_d[g_detail_idx].xmdmseq) AND
                  NOT cl_null(g_xmdl3_d[g_detail_idx].xmdmseq1) AND
                  NOT cl_null(g_xmdl3_d[g_detail_idx].xmdm001) AND
                  NOT cl_null(g_xmdl3_d[g_detail_idx].xmdm008) AND
                  NOT cl_null(g_xmdl3_d[g_detail_idx].xmdm009) THEN
                  LET l_success = ''
                  CALL s_transaction_begin()
                  SELECT xmdl001,xmdl002,xmdl013
                    INTO l_xmdl001,l_xmdl002,l_xmdl013                  
                    FROM xmdl_t
                   WHERE xmdlent = g_enterprise
                     AND xmdldocno = g_xmdk_m.xmdkdocno
                  IF cl_get_para(g_enterprise,g_site,'S-BAS-0048') = 'N' OR l_xmdl001 IS NULL THEN
                     CALL s_lot_sel('1','2',g_site,g_xmdk_m.xmdkdocno,g_xmdl3_d[g_detail_idx].xmdmseq,g_xmdl3_d[g_detail_idx].xmdmseq1,g_xmdl3_d[g_detail_idx].xmdm001,g_xmdl3_d[g_detail_idx].xmdm002,g_xmdl3_d[g_detail_idx].xmdm033,g_xmdl3_d[g_detail_idx].xmdm005,g_xmdl3_d[g_detail_idx].xmdm006,g_xmdl3_d[g_detail_idx].xmdm007,g_xmdl3_d[g_detail_idx].xmdm008,g_xmdl3_d[g_detail_idx].xmdm009,'-1',g_prog,'','','','','0')
                          RETURNING l_success
                  ELSE
                     
                     CALL s_axmt540_inao_copy(l_xmdl001,l_xmdl002,'2',g_xmdl3_d[g_detail_idx].xmdm033,g_xmdl3_d[g_detail_idx].xmdm005,g_xmdl3_d[g_detail_idx].xmdm006,g_xmdl3_d[g_detail_idx].xmdm007,g_xmdk_m.xmdkdocno,g_xmdl3_d[g_detail_idx].xmdmseq,g_xmdl3_d[g_detail_idx].xmdmseq1,'1',l_xmdl013,'1') RETURNING l_success
                 
                     CALL s_lot_sel('2','2',g_site,g_xmdk_m.xmdkdocno,g_xmdl3_d[g_detail_idx].xmdmseq,g_xmdl3_d[g_detail_idx].xmdmseq1,g_xmdl3_d[g_detail_idx].xmdm001,g_xmdl3_d[g_detail_idx].xmdm002,g_xmdl3_d[g_detail_idx].xmdm033,g_xmdl3_d[g_detail_idx].xmdm005,g_xmdl3_d[g_detail_idx].xmdm006,g_xmdl3_d[g_detail_idx].xmdm007,g_xmdl3_d[g_detail_idx].xmdm008,g_xmdl3_d[g_detail_idx].xmdm009,'-1',g_prog,'','','','','0')
                          RETURNING l_success 

                     IF l_success THEN     
                        CALL s_axmt540_update_inao(g_xmdk_m.xmdkdocno,g_xmdl3_d[g_detail_idx].xmdmseq,g_xmdl3_d[g_detail_idx].xmdmseq1,l_xmdl001,l_xmdl002,'1','1') RETURNING l_success 
                     END IF   
                     #刪除申請資料                              
                     DELETE FROM inao_t 
                      WHERE inaoent = g_enterprise 
                        AND inaosite = g_site
                        AND inaodocno = g_xmdk_m.xmdkdocno
                        AND inaoseq = g_xmdl3_d[g_detail_idx].xmdmseq
                        AND inaoseq1 = g_xmdl3_d[g_detail_idx].xmdmseq1
                        AND inao000 = '1'
                        AND inao013 = '-1'                       
                  END IF        
                  IF l_success THEN
                     CALL s_transaction_end('Y','0')
                  ELSE
                     CALL s_transaction_end('N','0')
                  END IF
                  IF NOT cl_null(g_xmdk_m.xmdkdocno) THEN   
                     CALL s_lot_b_fill('1',g_site,'2',g_xmdk_m.xmdkdocno,'','','-1')                              
                  END IF                  
               END IF    
               #150821-xianghui-e
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION axmt540_call_axmt540_01
            LET g_action_choice="axmt540_call_axmt540_01"
            IF cl_auth_chk_act("axmt540_call_axmt540_01") THEN
               
               #add-point:ON ACTION axmt540_call_axmt540_01 name="menu.detail_show.page3.axmt540_call_axmt540_01"

               CALL axmt540_call_axmt540_01(g_xmdl3_d[g_detail_idx].xmdmseq)

               #END add-point
               
            END IF
 
 
 
 
         
            #add-point:page3自定義行為 name="ui_dialog.body3.action"
                                                                                                            
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         SUBDIALOG sub_s_lot.s_lot_display         
         SUBDIALOG aoo_aooi360_01.aooi360_01_display     #161031-00025#26 add          
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL axmt540_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL axmt540_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL axmt540_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL axmt540_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            
            #150721-00001#1  2016/01/08 By earl mod s
            CALL axmt540_set_act_visible()
            CALL axmt540_set_act_no_visible()
            #150721-00001#1  2016/01/08 By earl mod e
            
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         #161031-00025#26-s
         ON ACTION remarks_page
            LET g_detail_id = "remarks_page"
            NEXT FIELD ooff012
         #161031-00025#26-e
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL axmt540_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL axmt540_set_act_visible()   
            CALL axmt540_set_act_no_visible()
            IF NOT (g_xmdk_m.xmdkdocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " xmdkent = " ||g_enterprise|| " AND",
                                  " xmdkdocno = '", g_xmdk_m.xmdkdocno, "' "
 
               #填到對應位置
               CALL axmt540_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:3)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status name="menu.bpm_status"
            
            #END add-point
 
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "xmdk_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmdl_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmdm_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
                  OR NOT cl_null(g_wc2_table2)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL axmt540_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "xmdk_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmdl_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmdm_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
                  OR NOT cl_null(g_wc2_table2)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL axmt540_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code = "-100" 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL axmt540_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:4)
            #過濾瀏覽頁資料
            ON ACTION filter
               LET g_action_choice = "fetch"
               #add-point:filter action name="ui_dialog.action.filter"
               
               #end add-point
               CALL axmt540_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL axmt540_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt540_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL axmt540_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt540_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL axmt540_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt540_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL axmt540_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt540_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL axmt540_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axmt540_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_xmdl_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_xmdl2_d)
                  LET g_export_id[2]   = "s_detail2"
                  LET g_export_node[3] = base.typeInfo.create(g_xmdl3_d)
                  LET g_export_id[3]   = "s_detail3"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  #160603-00004#1 add start -----
                  LET g_export_node[4] = base.typeInfo.create(g_inao_d)
                  LET g_export_id[4]   = "s_detail1_s_lot_s01"
                  #160603-00004#1 add end   -----
                  #161031-00025#26-s
                  LET g_export_node[5] = base.typeInfo.create(g_ooff_d4)
                  LET g_export_id[5]   = "s_detail1_aooi360_01"
                  #161031-00025#26-e
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD xmdlseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION axmt540_produce_axmt580
            LET g_action_choice="axmt540_produce_axmt580"
            IF cl_auth_chk_act("axmt540_produce_axmt580") THEN
               
               #add-point:ON ACTION axmt540_produce_axmt580 name="menu.axmt540_produce_axmt580"
               
               CALL s_transaction_begin()
               CALL axmt540_produce_axmt580(g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkstus,g_xmdk_m.xmdk002)
               RETURNING l_success,l_xmdkdocno
               
               IF NOT l_success THEN
                  CALL s_transaction_end('N',0)
               ELSE
                  CALL s_transaction_end('Y',0)
                  
                  #開啟簽收單axmt580
                  #使用JSON格式組合參數與作業編號(串查)
                  INITIALIZE la_param.* TO NULL
                  LET la_param.prog = 'axmt580'
                  LET la_param.param[1] = l_xmdkdocno
                  LET ls_js = util.JSON.stringify( la_param )
                  CALL cl_cmdrun(ls_js)
               END IF
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL axmt540_modify()
               #add-point:ON ACTION modify name="menu.modify"
                                                                                                                                       
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL axmt540_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
                                                                                                                                       
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION address_modify
            LET g_action_choice="address_modify"
            IF cl_auth_chk_act("address_modify") THEN
               
               #add-point:ON ACTION address_modify name="menu.address_modify"
               #add--151118-00012#1 By shiun--(S)
               CALL axmt540_address_mod()
               #將關閉的欄位開起
#               CALL axmt540_set_entry_foract()
               #add--151118-00012#1 By shiun--(E)
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION axmt540_modify_xmdk055
            LET g_action_choice="axmt540_modify_xmdk055"
            IF cl_auth_chk_act("axmt540_modify_xmdk055") THEN
               
               #add-point:ON ACTION axmt540_modify_xmdk055 name="menu.axmt540_modify_xmdk055"
               
               CALL s_transaction_begin()
               IF NOT axmt540_modify_xmdk055() THEN
                  CALL s_transaction_end('N',0)
               ELSE
                  CALL s_transaction_end('Y',0)
               END IF
                              
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL axmt540_delete()
               #add-point:ON ACTION delete name="menu.delete"
                                                                                                                                       
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL axmt540_insert()
               #add-point:ON ACTION insert name="menu.insert"
                                                                                                                                       
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_memo
            LET g_action_choice="open_memo"
            IF cl_auth_chk_act("open_memo") THEN
               
               #add-point:ON ACTION open_memo name="menu.open_memo"

               #CALL aooi360_02('6',g_prog,g_xmdk_m.xmdkdocno,'','','','','','','','','4')  #161031-00025#26 mark
               #161031-00025#26-s
               IF NOT cl_null(g_xmdk_m.xmdkdocno) THEN
                  CALL axmt540_remaks()
               END IF
               #161031-00025#26-e
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION aisp320_cmd
            LET g_action_choice="aisp320_cmd"
            IF cl_auth_chk_act("aisp320_cmd") THEN
               
               #add-point:ON ACTION aisp320_cmd name="menu.aisp320_cmd"
               IF NOT cl_null(g_xmdk_m.xmdkdocno) THEN
                  SELECT COUNT(*) INTO l_cnt 
                    FROM xmdl_t
                   WHERE xmdlent = g_enterprise 
                     AND xmdldocno = g_xmdk_m.xmdkdocno 
                     AND xmdl038 > 0
                  IF l_cnt = 0 THEN
                     LET tran_master.wc  = "xmdkdocno = '",g_xmdk_m.xmdkdocno,"' "
                     LET l_tran = util.JSON.stringify(tran_master)    #打包參數
                     
                     INITIALIZE la_param.* TO NULL
                     LET la_param.prog = 'aisp320'
                     LET la_param.param[1] = l_tran       #把打包的參數 放到cmd_run的第一個參數
                     LET la_param.background = 'N'
                     
                     LET ls_js2 = util.JSON.stringify(la_param)
                     
                     CALL cl_cmdrun_wait(ls_js2)
                  ELSE
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'axm-00711'   #已產生帳款單, 不可重覆執行！
                     LET g_errparam.extend = g_xmdk_m.xmdkdocno
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                  END IF
               END IF
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION axmt540_show_price
            LET g_action_choice="axmt540_show_price"
            IF cl_auth_chk_act("axmt540_show_price") THEN
               
               #add-point:ON ACTION axmt540_show_price name="menu.axmt540_show_price"
               
               #顯示價格資訊頁籤
               CALL cl_set_comp_visible("page_7",TRUE)
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
#               CALL axmr540_g01("xmdkent ="|| g_enterprise ||"  AND xmdkdocno ='"|| g_xmdk_m.xmdkdocno||"'",'Y','Y')
               LET g_rep_wc = "xmdkent ="|| g_enterprise ||"  AND xmdkdocno ='"|| g_xmdk_m.xmdkdocno||"'"
               #END add-point
               &include "erp/axm/axmt540_rep.4gl"
               #add-point:ON ACTION output.after name="menu.after_output"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION quickprint
            LET g_action_choice="quickprint"
            IF cl_auth_chk_act("quickprint") THEN
               
               #add-point:ON ACTION quickprint name="menu.quickprint"
#               CALL axmr540_g01("xmdkent ="|| g_enterprise ||"  AND xmdkdocno ='"|| g_xmdk_m.xmdkdocno||"'",'Y','Y')
               LET g_rep_wc = "xmdkent ="|| g_enterprise ||"  AND xmdkdocno ='"|| g_xmdk_m.xmdkdocno||"'"
               #END add-point
               &include "erp/axm/axmt540_rep.4gl"
               #add-point:ON ACTION quickprint.after name="menu.after_quickprint"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL axmt540_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
                                                                                                                                       
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION axmt540_modify_price
            LET g_action_choice="axmt540_modify_price"
            IF cl_auth_chk_act("axmt540_modify_price") THEN
               
               #add-point:ON ACTION axmt540_modify_price name="menu.axmt540_modify_price"
               #單據為已扣帳，則需重新更新信用額度           
               #150812--polly--add--(s) 
               IF g_xmdk_m.xmdkstus = 'S' THEN
                  IF g_xmdk_m.xmdk000 MATCHES '[12]' AND g_xmdk_m.xmdk002 <> '3' THEN
                     #更新信用餘額檔(反向)
                     CALL s_transaction_begin()                      
                     IF s_axmt540_credit('3',g_xmdk_m.xmdkdocno) THEN                                                
                        CALL s_transaction_end('Y','0')
                     ELSE   
                        CALL s_transaction_end('N','0')
                     END IF
                  END IF                  
               END IF            
               #150812--polly--add--(e)                
               CALL axmt540_modify_price() 
               #150812--polly--add--(s)                
               IF g_xmdk_m.xmdkstus = 'S' THEN
                  IF g_xmdk_m.xmdk000 MATCHES '[12]' AND g_xmdk_m.xmdk002 <> '3' THEN
                     #更新信用餘額檔(正向)
                     CALL s_transaction_begin()                      
                     IF s_axmt540_credit('2',g_xmdk_m.xmdkdocno) THEN                                                
                       CALL s_transaction_end('Y','0')
                     ELSE   
                        CALL s_transaction_end('N','0')
                    END IF
                  END IF                  
               END IF            
               #150812--polly--add--(e)                
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL axmt540_query()
               #add-point:ON ACTION query name="menu.query"
                                                                                                                                       
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
               CALL g_curr_diag.setCurrentRow("s_detail3",1)
 
 
 
 
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION apjm210_shift_to
            LET g_action_choice="apjm210_shift_to"
            IF cl_auth_chk_act("apjm210_shift_to") THEN
               
               #add-point:ON ACTION apjm210_shift_to name="menu.apjm210_shift_to"
               #無訂單出貨時，才可執行此action(執行預算轉入)
               IF (NOT cl_null(g_xmdk_m.xmdkdocno)) AND g_xmdk_m.xmdk000 = '2' THEN
                  CALL s_transaction_begin()
                  IF NOT axmt540_apjm210_shift_to() THEN
                     CALL s_transaction_end('N',0)
                  ELSE
                     CALL s_transaction_end('Y',0)
                     CALL axmt540_b_fill()
                  END IF
               END IF
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION axmt540_refresh_price
            LET g_action_choice="axmt540_refresh_price"
            IF cl_auth_chk_act("axmt540_refresh_price") THEN
               
               #add-point:ON ACTION axmt540_refresh_price name="menu.axmt540_refresh_price"

               #更新單身(重新取價)
               CALL s_transaction_begin()
               IF NOT axmt540_detail_update('','',g_xmdk_m.xmdk017,'4') THEN
                  CALL s_transaction_end('N',0)
               ELSE
                  CALL s_transaction_end('Y',0)
               END IF

               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_aist310_03
            LET g_action_choice="open_aist310_03"
            IF cl_auth_chk_act("open_aist310_03") THEN
               
               #add-point:ON ACTION open_aist310_03 name="menu.open_aist310_03"
               #161012-00055#1-s-add
               IF NOT cl_null(g_xmdk_m.xmdkdocno) THEN
                  CALL aist310_03(g_xmdk_m.xmdkdocno)
               END IF   
               #161012-00055#e-s-add
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION prog_ainq100
            LET g_action_choice="prog_ainq100"
            IF cl_auth_chk_act("prog_ainq100") THEN
               
               #add-point:ON ACTION prog_ainq100 name="menu.prog_ainq100"
               #應用 a41 樣板自動產生(Version:2)
               #使用JSON格式組合參數與作業編號(串查)
               IF NOT cl_null(g_xmdk_m.xmdkdocno) THEN
                  INITIALIZE la_param.* TO NULL
                  LET la_param.prog     = 'ainq100'
                  LET la_param.param[1] = '6'
                  LET la_param.param[2] = g_xmdk_m.xmdkdocno
                  LET ls_js = util.JSON.stringify(la_param)
                  CALL cl_cmdrun_wait(ls_js)
               END IF


               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION prog_xmdk003
            LET g_action_choice="prog_xmdk003"
            IF cl_auth_chk_act("prog_xmdk003") THEN
               
               #add-point:ON ACTION prog_xmdk003 name="menu.prog_xmdk003"
               CALL cl_user_contact("aooi130", "ooag_t", "ooag002", "ooag001",g_xmdk_m.xmdk003)
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION prog_xmdk005
            LET g_action_choice="prog_xmdk005"
            IF cl_auth_chk_act("prog_xmdk005") THEN
               
               #add-point:ON ACTION prog_xmdk005 name="menu.prog_xmdk005"
               #應用 a41 樣板自動產生(Version:2)
               #使用JSON格式組合參數與作業編號(串查)
               CALL axmt540_qrystr(g_xmdk_m.xmdk005)               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION prog_xmdk006
            LET g_action_choice="prog_xmdk006"
            IF cl_auth_chk_act("prog_xmdk006") THEN
               
               #add-point:ON ACTION prog_xmdk006 name="menu.prog_xmdk006"
               #應用 a41 樣板自動產生(Version:2)
               #使用JSON格式組合參數與作業編號(串查)
               CALL axmt540_qrystr(g_xmdk_m.xmdk006)
               #END add-point
               
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL axmt540_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL axmt540_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL axmt540_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow(g_xmdk_m.xmdkdocdt)
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
 
      #(ver:79) ---add start---
      #add-point:ui_dialog段 after dialog name="ui_dialog.exit_dialog"
      
      #end add-point
      #(ver:79) --- add end ---
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
 
{</section>}
 
{<section id="axmt540.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION axmt540_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   DEFINE l_pmak003  LIKE pmak_t.pmak003   #一次性交易對象全名   #161207-00033#30 add                             
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   #161031-00025#26-s
   IF cl_null(g_add_browse) THEN
      CALL aooi360_01_clear_detail()   #清除备注单身
   END IF
   #161031-00025#26-e
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   
   #過濾g_site
   #160623-00014#1-mod-(S)
#   CASE g_prog
#      WHEN 'axmt540'   #出貨單
#         LET l_wc = l_wc, " AND xmdksite = '",g_site,"'",
#                          " AND xmdk000 = '1'",
#                          " AND xmdk002 <> '8'"
#                          
#      WHEN 'axmt541'   #無訂單出貨
#         LET l_wc = l_wc, " AND xmdksite = '",g_site,"'",
#                          " AND xmdk000 = '2'"
#                          
#      WHEN 'axmt542'   #借貨出貨單
#         LET l_wc = l_wc, " AND xmdksite = '",g_site,"'",
#                          " AND xmdk000 = '1'",
#                          " AND xmdk002 = '8'"
#   END CASE
   CASE 
      WHEN g_prog MATCHES 'axmt540'   #出貨單
         LET l_wc = l_wc, " AND xmdksite = '",g_site,"'",
                          " AND xmdk000 = '1'",
                          " AND xmdk002 <> '8'"
      WHEN g_prog MATCHES 'axmt541'   #無訂單出貨
         LET l_wc = l_wc, " AND xmdksite = '",g_site,"'",
                          " AND xmdk000 = '2'"
      WHEN g_prog MATCHES 'axmt542'   #借貨出貨單
         LET l_wc = l_wc, " AND xmdksite = '",g_site,"'",
                          " AND xmdk000 = '1'",
                          " AND xmdk002 = '8'"
   END CASE
   #160623-00014#1-mod-(E)
   #160510-00043#2--(S)
   IF NOT cl_null(g_slip_wc) THEN
      LET l_wc = l_wc," AND ",g_slip_wc
   END IF   
   #160510-00043#2--(E)
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT xmdkdocno ",
                      " FROM xmdk_t ",
                      " ",
                      " LEFT JOIN xmdl_t ON xmdlent = xmdkent AND xmdkdocno = xmdldocno ", "  ",
                      #add-point:browser_fill段sql(xmdl_t1) name="browser_fill.cnt.join.}"
                      " LEFT JOIN xmda_t ON xmdaent = xmdkent AND xmdadocno = xmdl003 ",      #150120新增"客戶訂單號碼"  earl
                      #end add-point
                      " LEFT JOIN xmdm_t ON xmdment = xmdkent AND xmdkdocno = xmdmdocno", "  ",
                      #add-point:browser_fill段sql(xmdm_t1) name="browser_fill.cnt.join.xmdm_t1"
                      " AND xmdmseq = xmdlseq ",
                      " LEFT JOIN ooff_t ON ooffent = xmdkent AND ooff001 = '7' 
                        AND ooff002 = '",g_prog,"' AND xmdkdocno = ooff003  AND ooff004 = xmdlseq ",  "  ",   #161031-00025#26 add
                      #end add-point
 
 
 
                      " ", 
                      " ", 
                      " ",                      
 
 
 
                      " WHERE xmdkent = " ||g_enterprise|| " AND xmdlent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("xmdk_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT xmdkdocno ",
                      " FROM xmdk_t ", 
                      "  ",
                      "  ",
                      " WHERE xmdkent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("xmdk_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   #161031-00025#26-s
   IF NOT cl_null(g_wc2_i36001) AND g_wc2_i36001 <> " 1=1" THEN
      LET l_sub_sql = l_sub_sql CLIPPED, " AND EXISTS (SELECT ooff003 FROM ooff_t 
                                                        WHERE ooffent = ",g_enterprise," AND ooff001 = '6' 
                                                          AND ooff002 = '",g_prog,"' AND ooff003 = xmdkdocno
                                                          AND ooff004 = '0' AND ",g_wc2_i36001 CLIPPED ,")" 
   END IF                                                    
   #161031-00025#26-e
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
 
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code = 9035 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_xmdk_m.* TO NULL
      CALL g_xmdl_d.clear()        
      CALL g_xmdl2_d.clear() 
      CALL g_xmdl3_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.xmdkdocno,t0.xmdk026,t0.xmdk003,t0.xmdk004,t0.xmdk006,t0.xmdk007,t0.xmdk008,t0.xmdk009 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.xmdkstus,t0.xmdkdocno,t0.xmdk026,t0.xmdk003,t0.xmdk004,t0.xmdk006, 
          t0.xmdk007,t0.xmdk008,t0.xmdk009,t1.ooag011 ,t2.ooefl003 ,t3.pmaal004 ,t4.pmaal004 ,t5.pmaal004 ", 
 
                  " FROM xmdk_t t0",
                  "  ",
                  "  LEFT JOIN xmdl_t ON xmdlent = xmdkent AND xmdkdocno = xmdldocno ", "  ", 
                  #add-point:browser_fill段sql(xmdl_t1) name="browser_fill.join.xmdl_t1"
               "  LEFT JOIN xmda_t ON xmdaent = xmdkent AND xmdadocno = xmdl003 ",      #150120新增"客戶訂單號碼"  earl
                  #end add-point
                  "  LEFT JOIN xmdm_t ON xmdment = xmdkent AND xmdkdocno = xmdmdocno", "  ", 
                  #add-point:browser_fill段sql(xmdm_t1) name="browser_fill.join.xmdm_t1"
               " AND xmdmseq = xmdlseq ",
               " LEFT JOIN ooff_t ON ooffent = xmdkent AND ooff001 = '7' 
                 AND ooff002 = '",g_prog,"' AND xmdkdocno = ooff003  AND ooff004 = xmdlseq ",  "  ",   #161031-00025#26 add               
                  #end add-point
 
 
 
                  " ", 
                  " ",                      
 
 
 
                                 " LEFT JOIN ooag_t t1 ON t1.ooagent="||g_enterprise||" AND t1.ooag001=t0.xmdk003  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=t0.xmdk004 AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t3 ON t3.pmaalent="||g_enterprise||" AND t3.pmaal001=t0.xmdk007 AND t3.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t4 ON t4.pmaalent="||g_enterprise||" AND t4.pmaal001=t0.xmdk008 AND t4.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t5 ON t5.pmaalent="||g_enterprise||" AND t5.pmaal001=t0.xmdk009 AND t5.pmaal002='"||g_dlang||"' ",
 
                  " WHERE t0.xmdkent = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("xmdk_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.xmdkstus,t0.xmdkdocno,t0.xmdk026,t0.xmdk003,t0.xmdk004,t0.xmdk006, 
          t0.xmdk007,t0.xmdk008,t0.xmdk009,t1.ooag011 ,t2.ooefl003 ,t3.pmaal004 ,t4.pmaal004 ,t5.pmaal004 ", 
 
                  " FROM xmdk_t t0",
                  "  ",
                                 " LEFT JOIN ooag_t t1 ON t1.ooagent="||g_enterprise||" AND t1.ooag001=t0.xmdk003  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=t0.xmdk004 AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t3 ON t3.pmaalent="||g_enterprise||" AND t3.pmaal001=t0.xmdk007 AND t3.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t4 ON t4.pmaalent="||g_enterprise||" AND t4.pmaal001=t0.xmdk008 AND t4.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t5 ON t5.pmaalent="||g_enterprise||" AND t5.pmaal001=t0.xmdk009 AND t5.pmaal002='"||g_dlang||"' ",
 
                  " WHERE t0.xmdkent = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("xmdk_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   #161031-00025#26-s
   IF NOT cl_null(g_wc2_i36001) AND g_wc2_i36001 <> " 1=1" THEN
      LET g_sql = g_sql CLIPPED, " AND EXISTS (SELECT ooff003 FROM ooff_t 
                                                        WHERE ooffent = ",g_enterprise," AND ooff001 = '6' 
                                                          AND ooff002 = ''",g_prog,"' AND ooff003 = xmdkdocno
                                                          AND ooff004 = '0' AND ",g_wc2_i36001 CLIPPED ,")" 
   END IF                                                    
   #161031-00025#26-e
   #end add-point
   LET g_sql = g_sql, " ORDER BY xmdkdocno ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
                           
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"xmdk_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
                           
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_xmdkdocno,g_browser[g_cnt].b_xmdk026, 
          g_browser[g_cnt].b_xmdk003,g_browser[g_cnt].b_xmdk004,g_browser[g_cnt].b_xmdk006,g_browser[g_cnt].b_xmdk007, 
          g_browser[g_cnt].b_xmdk008,g_browser[g_cnt].b_xmdk009,g_browser[g_cnt].b_xmdk003_desc,g_browser[g_cnt].b_xmdk004_desc, 
          g_browser[g_cnt].b_xmdk007_desc,g_browser[g_cnt].b_xmdk008_desc,g_browser[g_cnt].b_xmdk009_desc 
 
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
         #161207-00033#30-s add
         #一次性交易對象全名
         CALL s_desc_axm_get_oneturn_guest_desc('3',g_browser[g_cnt].b_xmdkdocno)
              RETURNING l_pmak003
         
         IF NOT cl_null(l_pmak003) THEN
            LET g_browser[g_cnt].b_xmdk007_desc = l_pmak003
            IF g_browser[g_cnt].b_xmdk008 = g_browser[g_cnt].b_xmdk007 THEN   #帳款客戶
               LET g_browser[g_cnt].b_xmdk008_desc = g_browser[g_cnt].b_xmdk007_desc
            END IF
            IF g_browser[g_cnt].b_xmdk009 = g_browser[g_cnt].b_xmdk007 THEN   #收貨客戶
               LET g_browser[g_cnt].b_xmdk009_desc = g_browser[g_cnt].b_xmdk007_desc
            END IF
         END IF
         #161207-00033#30-e add                                                               
         #end add-point
      
         #遮罩相關處理
         CALL axmt540_browser_mask()
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "S"
            LET g_browser[g_cnt].b_statepic = "stus/16/posted.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "UH"
            LET g_browser[g_cnt].b_statepic = "stus/16/unhold.png"
         WHEN "H"
            LET g_browser[g_cnt].b_statepic = "stus/16/hold.png"
         WHEN "Z"
            LET g_browser[g_cnt].b_statepic = "stus/16/unposted.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_xmdkdocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
                           
   #end add-point   
 
END FUNCTION
 
{</section>}
 
{<section id="axmt540.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION axmt540_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
                           
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_xmdk_m.xmdkdocno = g_browser[g_current_idx].b_xmdkdocno   
 
   EXECUTE axmt540_master_referesh USING g_xmdk_m.xmdkdocno INTO g_xmdk_m.xmdk000,g_xmdk_m.xmdksite, 
       g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001,g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdkstus, 
       g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk007,g_xmdk_m.xmdk009,g_xmdk_m.xmdk008,g_xmdk_m.xmdk202, 
       g_xmdk_m.xmdk047,g_xmdk_m.xmdk002,g_xmdk_m.xmdk045,g_xmdk_m.xmdk032,g_xmdk_m.xmdk030,g_xmdk_m.xmdk028, 
       g_xmdk_m.xmdk029,g_xmdk_m.xmdk037,g_xmdk_m.xmdk034,g_xmdk_m.xmdk054,g_xmdk_m.xmdk039,g_xmdk_m.xmdk040, 
       g_xmdk_m.xmdk087,g_xmdk_m.xmdk021,g_xmdk_m.xmdk022,g_xmdk_m.xmdk023,g_xmdk_m.xmdk024,g_xmdk_m.xmdk020, 
       g_xmdk_m.xmdk025,g_xmdk_m.xmdk026,g_xmdk_m.xmdk027,g_xmdk_m.xmdk038,g_xmdk_m.xmdk055,g_xmdk_m.xmdk010, 
       g_xmdk_m.xmdk011,g_xmdk_m.xmdk012,g_xmdk_m.xmdk013,g_xmdk_m.xmdk014,g_xmdk_m.xmdk015,g_xmdk_m.xmdk016, 
       g_xmdk_m.xmdk017,g_xmdk_m.xmdk018,g_xmdk_m.xmdk019,g_xmdk_m.xmdk042,g_xmdk_m.xmdk043,g_xmdk_m.xmdk031, 
       g_xmdk_m.xmdk033,g_xmdk_m.xmdk044,g_xmdk_m.xmdk035,g_xmdk_m.xmdk046,g_xmdk_m.xmdk036,g_xmdk_m.xmdk083, 
       g_xmdk_m.xmdkownid,g_xmdk_m.xmdkowndp,g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtdp,g_xmdk_m.xmdkcrtdt, 
       g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmoddt,g_xmdk_m.xmdkcnfid,g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid, 
       g_xmdk_m.xmdkpstdt,g_xmdk_m.xmdk003_desc,g_xmdk_m.xmdk004_desc,g_xmdk_m.xmdk007_desc,g_xmdk_m.xmdk009_desc, 
       g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk202_desc,g_xmdk_m.xmdk030_desc,g_xmdk_m.xmdk034_desc,g_xmdk_m.xmdk039_desc, 
       g_xmdk_m.xmdk040_desc,g_xmdk_m.xmdk022_desc,g_xmdk_m.xmdk020_desc,g_xmdk_m.xmdk027_desc,g_xmdk_m.xmdk038_desc, 
       g_xmdk_m.xmdk010_desc,g_xmdk_m.xmdk011_desc,g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdk019_desc,g_xmdk_m.xmdkownid_desc, 
       g_xmdk_m.xmdkowndp_desc,g_xmdk_m.xmdkcrtid_desc,g_xmdk_m.xmdkcrtdp_desc,g_xmdk_m.xmdkmodid_desc, 
       g_xmdk_m.xmdkcnfid_desc,g_xmdk_m.xmdkpstid_desc
   
   CALL axmt540_xmdk_t_mask()
   CALL axmt540_show()
      
END FUNCTION
 
{</section>}
 
{<section id="axmt540.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION axmt540_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
                           
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
                           
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
                           
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="axmt540.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION axmt540_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
 
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_xmdkdocno = g_xmdk_m.xmdkdocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="axmt540.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION axmt540_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   DEFINE l_gzcb004   LIKE gzcb_t.gzcb004
   DEFINE l_success   LIKE type_t.num5
   DEFINE l_ooef019   LIKE ooef_t.ooef019
   DEFINE l_form_wc   STRING    #150120新增"客戶訂單號碼"  earl
   DEFINE l_where     STRING    #150921-00014 earl add
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   CALL aooi360_01_clear_detail()   #清除备注单身  #161031-00025#26 add
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_xmdk_m.* TO NULL
   CALL g_xmdl_d.clear()        
   CALL g_xmdl2_d.clear() 
   CALL g_xmdl3_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
                           
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON xmdk000,xmdksite,xmdkdocno,xmdkdocdt,xmdk001,xmdk003,xmdk004,xmdkstus, 
          xmdk005,xmdk006,xmdk007,xmdk009,xmdk008,xmdk202,xmdk047,xmdk002,xmdk045,xmdk032,xmdk030,xmdk028, 
          xmdk029,xmdk037,xmdk034,xmdk054,xmdk039,xmdk040,xmdk087,xmdk021,address,xmdk022,xmdk023,xmdk024, 
          xmdk024_desc,xmdk020,xmdk025,xmdk026,xmdk027,xmdk038,xmdk055,xmdk010,xmdk011,xmdk012,xmdk012_desc, 
          xmdk013,xmdk014,xmdk015,xmdk015_desc,xmdk016,xmdk016_desc,xmdk017,xmdk018,xmdk019,xmdk042, 
          xmdk043,xmdk031,xmdk033,xmdk044,xmdk035,xmdk046,xmdk036,xmdk083,xmdkownid,xmdkowndp,xmdkcrtid, 
          xmdkcrtdp,xmdkcrtdt,xmdkmodid,xmdkmoddt,xmdkcnfid,xmdkcnfdt,xmdkpstid,xmdkpstdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
                                                                                                            
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<xmdkcrtdt>>----
         AFTER FIELD xmdkcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<xmdkmoddt>>----
         AFTER FIELD xmdkmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmdkcnfdt>>----
         AFTER FIELD xmdkcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmdkpstdt>>----
         AFTER FIELD xmdkpstdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
 
            
         #一般欄位開窗相關處理    
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk000
            #add-point:BEFORE FIELD xmdk000 name="construct.b.xmdk000"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk000
            
            #add-point:AFTER FIELD xmdk000 name="construct.a.xmdk000"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk000
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk000
            #add-point:ON ACTION controlp INFIELD xmdk000 name="construct.c.xmdk000"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdksite
            #add-point:BEFORE FIELD xmdksite name="construct.b.xmdksite"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdksite
            
            #add-point:AFTER FIELD xmdksite name="construct.a.xmdksite"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdksite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdksite
            #add-point:ON ACTION controlp INFIELD xmdksite name="construct.c.xmdksite"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.xmdkdocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdkdocno
            #add-point:ON ACTION controlp INFIELD xmdkdocno name="construct.c.xmdkdocno"
            
            #此段落由子樣板a08產生
            #開窗c段
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
   			LET g_qryparam.reqry = FALSE
   			#160623-00014#1-mod-(S)
#   			CASE g_prog
#   			   WHEN 'axmt540'
#   			      LET g_qryparam.arg1 = '1'
#   			      LET g_qryparam.where = "xmdk002 <> '8' "
#   			      
#   			   WHEN 'axmt541'
#   			      LET g_qryparam.arg1 = '2'
#   			      
#   			   WHEN 'axmt542'
#   			      LET g_qryparam.arg1 = '1'
#   			      LET g_qryparam.where = "xmdk002 = '8' "
#   			      
#   			END CASE
            CASE 
   			   WHEN g_prog MATCHES 'axmt540'
   			      LET g_qryparam.arg1 = '1'
   			      LET g_qryparam.where = "xmdk002 <> '8' "
   			   WHEN g_prog MATCHES 'axmt541'
   			      LET g_qryparam.arg1 = '2'
   			   WHEN g_prog MATCHES 'axmt542'
   			      LET g_qryparam.arg1 = '1'
   			      LET g_qryparam.where = "xmdk002 = '8' "
   			   #160510-00043#2--(S)
   			   OTHERWISE
   			      LET g_qryparam.where = " 1=1"
   			   #160510-00043#2--(E)
   			END CASE
			   #160623-00014#1-mod-(E)
			   #160510-00043#2--(S)
            IF NOT cl_null(g_slip_wc) THEN
            #161124-00004#1 ---add---begin---
              CASE 
   			   WHEN g_prog MATCHES 'axmt541'
   			     LET g_qryparam.where = g_qryparam.where, g_slip_wc           
   			   WHEN g_prog MATCHES 'axmt540'
                 LET g_qryparam.where = g_qryparam.where," AND ", g_slip_wc  
              END CASE
            #161124-00004#1 ---add---end---
            END IF   
            #160510-00043#2--(E)
            CALL q_xmdkdocno_2()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdkdocno  #顯示到畫面上

            NEXT FIELD xmdkdocno                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdkdocno
            #add-point:BEFORE FIELD xmdkdocno name="construct.b.xmdkdocno"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdkdocno
            
            #add-point:AFTER FIELD xmdkdocno name="construct.a.xmdkdocno"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdkdocdt
            #add-point:BEFORE FIELD xmdkdocdt name="construct.b.xmdkdocdt"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdkdocdt
            
            #add-point:AFTER FIELD xmdkdocdt name="construct.a.xmdkdocdt"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdkdocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdkdocdt
            #add-point:ON ACTION controlp INFIELD xmdkdocdt name="construct.c.xmdkdocdt"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk001
            #add-point:BEFORE FIELD xmdk001 name="construct.b.xmdk001"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk001
            
            #add-point:AFTER FIELD xmdk001 name="construct.a.xmdk001"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk001
            #add-point:ON ACTION controlp INFIELD xmdk001 name="construct.c.xmdk001"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.xmdk003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk003
            #add-point:ON ACTION controlp INFIELD xmdk003 name="construct.c.xmdk003"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
		   	LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk003  #顯示到畫面上

            NEXT FIELD xmdk003                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk003
            #add-point:BEFORE FIELD xmdk003 name="construct.b.xmdk003"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk003
            
            #add-point:AFTER FIELD xmdk003 name="construct.a.xmdk003"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk004
            #add-point:ON ACTION controlp INFIELD xmdk004 name="construct.c.xmdk004"
            
            #此段落由子樣板a08產生
            #開窗c段
	   		INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
		   	LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk004  #顯示到畫面上

            NEXT FIELD xmdk004                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk004
            #add-point:BEFORE FIELD xmdk004 name="construct.b.xmdk004"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk004
            
            #add-point:AFTER FIELD xmdk004 name="construct.a.xmdk004"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdkstus
            #add-point:BEFORE FIELD xmdkstus name="construct.b.xmdkstus"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdkstus
            
            #add-point:AFTER FIELD xmdkstus name="construct.a.xmdkstus"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdkstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdkstus
            #add-point:ON ACTION controlp INFIELD xmdkstus name="construct.c.xmdkstus"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.xmdk005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk005
            #add-point:ON ACTION controlp INFIELD xmdk005 name="construct.c.xmdk005"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   #160623-00014#1-mod-(S)
#   			CASE g_prog
#   			   WHEN 'axmt542'
#   			      LET g_qryparam.where = "xmdg001 = '8' "
#   			   OTHERWISE
#   			      LET g_qryparam.where = "xmdg001 <> '8' "
#   			END CASE
            CASE 
   			   WHEN g_prog MATCHES 'axmt542'
   			      LET g_qryparam.where = "xmdg001 = '8' "
   			   OTHERWISE
   			      LET g_qryparam.where = "xmdg001 <> '8' "
   			END CASE
			   #160623-00014#1-mod-(E)
			   #170119-00008#5  2017/01/23 By 08171 --s add
            IF NOT cl_null(g_slip_wc1) THEN
               LET g_qryparam.WHERE = g_qryparam.WHERE," AND NOT ",g_slip_wc1
            END IF
            #170119-00008#5  2017/01/23 By 08171 --e add
			   
            CALL q_xmdgdocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk005  #顯示到畫面上

            NEXT FIELD xmdk005                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk005
            #add-point:BEFORE FIELD xmdk005 name="construct.b.xmdk005"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk005
            
            #add-point:AFTER FIELD xmdk005 name="construct.a.xmdk005"
                                                                                   
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk006
            #add-point:ON ACTION controlp INFIELD xmdk006 name="construct.c.xmdk006"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   #160623-00014#1-mod-(S)
#   			CASE g_prog
#   			   WHEN 'axmt542'
#   			      LET g_qryparam.where = "xmda005 = '8' "
#   			   OTHERWISE
#   			      LET g_qryparam.where = "xmda005 <> '8' "
#   			END CASE
            CASE 
   			   WHEN g_prog MATCHES 'axmt542'
   			      LET g_qryparam.where = "xmda005 = '8' "
   			   OTHERWISE
   			      LET g_qryparam.where = "xmda005 <> '8' "
   			END CASE
			   #160623-00014#1-mod-(E)
			   #170119-00008#5  2017/01/23 By 08171 --s add
            IF NOT cl_null(g_slip_wc2) THEN
               LET g_qryparam.WHERE = g_qryparam.WHERE," AND NOT ",g_slip_wc2
            END IF
            #170119-00008#5  2017/01/23 By 08171 --e add
            CALL q_xmdadocno_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk006  #顯示到畫面上

            NEXT FIELD xmdk006                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk006
            #add-point:BEFORE FIELD xmdk006 name="construct.b.xmdk006"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk006
            
            #add-point:AFTER FIELD xmdk006 name="construct.a.xmdk006"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk007
            #add-point:ON ACTION controlp INFIELD xmdk007 name="construct.c.xmdk007"
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            CALL q_pmaa001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk007  #顯示到畫面上

            NEXT FIELD xmdk007                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk007
            #add-point:BEFORE FIELD xmdk007 name="construct.b.xmdk007"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk007
            
            #add-point:AFTER FIELD xmdk007 name="construct.a.xmdk007"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk009
            #add-point:ON ACTION controlp INFIELD xmdk009 name="construct.c.xmdk009"
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg2 = g_site
            CALL q_pmac002_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk009  #顯示到畫面上

            NEXT FIELD xmdk009                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk009
            #add-point:BEFORE FIELD xmdk009 name="construct.b.xmdk009"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk009
            
            #add-point:AFTER FIELD xmdk009 name="construct.a.xmdk009"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk008
            #add-point:ON ACTION controlp INFIELD xmdk008 name="construct.c.xmdk008"
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg2 = g_site
            CALL q_pmac002_5()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk008  #顯示到畫面上

            NEXT FIELD xmdk008                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk008
            #add-point:BEFORE FIELD xmdk008 name="construct.b.xmdk008"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk008
            
            #add-point:AFTER FIELD xmdk008 name="construct.a.xmdk008"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk202
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk202
            #add-point:ON ACTION controlp INFIELD xmdk202 name="construct.c.xmdk202"
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg2 = g_site
            CALL q_pmac002_7()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk202  #顯示到畫面上

            NEXT FIELD xmdk202                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk202
            #add-point:BEFORE FIELD xmdk202 name="construct.b.xmdk202"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk202
            
            #add-point:AFTER FIELD xmdk202 name="construct.a.xmdk202"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk047
            #add-point:BEFORE FIELD xmdk047 name="construct.b.xmdk047"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk047
            
            #add-point:AFTER FIELD xmdk047 name="construct.a.xmdk047"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk047
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk047
            #add-point:ON ACTION controlp INFIELD xmdk047 name="construct.c.xmdk047"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk002
            #add-point:BEFORE FIELD xmdk002 name="construct.b.xmdk002"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk002
            
            #add-point:AFTER FIELD xmdk002 name="construct.a.xmdk002"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk002
            #add-point:ON ACTION controlp INFIELD xmdk002 name="construct.c.xmdk002"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk045
            #add-point:BEFORE FIELD xmdk045 name="construct.b.xmdk045"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk045
            
            #add-point:AFTER FIELD xmdk045 name="construct.a.xmdk045"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk045
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk045
            #add-point:ON ACTION controlp INFIELD xmdk045 name="construct.c.xmdk045"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk032
            #add-point:BEFORE FIELD xmdk032 name="construct.b.xmdk032"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk032
            
            #add-point:AFTER FIELD xmdk032 name="construct.a.xmdk032"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk032
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk032
            #add-point:ON ACTION controlp INFIELD xmdk032 name="construct.c.xmdk032"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.xmdk030
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk030
            #add-point:ON ACTION controlp INFIELD xmdk030 name="construct.c.xmdk030"
            
            #此段落由子樣板a08產生
            #開窗c段
	   		INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
		   	LET g_qryparam.reqry = FALSE
			
			   #160621-00003#3 20160627 modify by beckxie---S
			   #LET g_qryparam.arg1 = "275"
            #CALL q_oocq002()                           #呼叫開窗
            LET g_qryparam.arg1 = '1'
            CALL q_oojd001_1()
            #160621-00003#3 20160627 modify by beckxie---E
            
            DISPLAY g_qryparam.return1 TO xmdk030  #顯示到畫面上

            NEXT FIELD xmdk030                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk030
            #add-point:BEFORE FIELD xmdk030 name="construct.b.xmdk030"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk030
            
            #add-point:AFTER FIELD xmdk030 name="construct.a.xmdk030"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk028
            #add-point:BEFORE FIELD xmdk028 name="construct.b.xmdk028"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk028
            
            #add-point:AFTER FIELD xmdk028 name="construct.a.xmdk028"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk028
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk028
            #add-point:ON ACTION controlp INFIELD xmdk028 name="construct.c.xmdk028"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk029
            #add-point:BEFORE FIELD xmdk029 name="construct.b.xmdk029"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk029
            
            #add-point:AFTER FIELD xmdk029 name="construct.a.xmdk029"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk029
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk029
            #add-point:ON ACTION controlp INFIELD xmdk029 name="construct.c.xmdk029"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk037
            #add-point:BEFORE FIELD xmdk037 name="construct.b.xmdk037"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk037
            
            #add-point:AFTER FIELD xmdk037 name="construct.a.xmdk037"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk037
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk037
            #add-point:ON ACTION controlp INFIELD xmdk037 name="construct.c.xmdk037"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.xmdk034
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk034
            #add-point:ON ACTION controlp INFIELD xmdk034 name="construct.c.xmdk034"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			
			   LET g_qryparam.arg1 = '297'
			
            CALL q_oocq002()                       #呼叫開窗            
            DISPLAY g_qryparam.return1 TO xmdk034  #顯示到畫面上

            NEXT FIELD xmdk034                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk034
            #add-point:BEFORE FIELD xmdk034 name="construct.b.xmdk034"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk034
            
            #add-point:AFTER FIELD xmdk034 name="construct.a.xmdk034"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk054
            #add-point:BEFORE FIELD xmdk054 name="construct.b.xmdk054"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk054
            
            #add-point:AFTER FIELD xmdk054 name="construct.a.xmdk054"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk054
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk054
            #add-point:ON ACTION controlp INFIELD xmdk054 name="construct.c.xmdk054"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.xmdk039
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk039
            #add-point:ON ACTION controlp INFIELD xmdk039 name="construct.c.xmdk039"
            
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            
            LET g_qryparam.where = "inaa010 = 'Y' "
                        
            CALL q_inaa001_2()                               #呼叫開窗
            
            DISPLAY g_qryparam.return1 TO xmdk039  #顯示到畫面上
            NEXT FIELD xmdk039                     #返回原欄位
    
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk039
            #add-point:BEFORE FIELD xmdk039 name="construct.b.xmdk039"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk039
            
            #add-point:AFTER FIELD xmdk039 name="construct.a.xmdk039"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk040
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk040
            #add-point:ON ACTION controlp INFIELD xmdk040 name="construct.c.xmdk040"
            
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            
            LET g_qryparam.where = "inaa010 = 'N' "
            
            CALL q_inaa001_2()                               #呼叫開窗
            
            DISPLAY g_qryparam.return1 TO xmdk040  #顯示到畫面上
            NEXT FIELD xmdk040                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk040
            #add-point:BEFORE FIELD xmdk040 name="construct.b.xmdk040"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk040
            
            #add-point:AFTER FIELD xmdk040 name="construct.a.xmdk040"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk087
            #add-point:BEFORE FIELD xmdk087 name="construct.b.xmdk087"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk087
            
            #add-point:AFTER FIELD xmdk087 name="construct.a.xmdk087"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk087
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk087
            #add-point:ON ACTION controlp INFIELD xmdk087 name="construct.c.xmdk087"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmdk021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk021
            #add-point:ON ACTION controlp INFIELD xmdk021 name="construct.c.xmdk021"
           
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE			
			
            CALL q_oofb019_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk021  #顯示到畫面上

            NEXT FIELD xmdk021                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk021
            #add-point:BEFORE FIELD xmdk021 name="construct.b.xmdk021"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk021
            
            #add-point:AFTER FIELD xmdk021 name="construct.a.xmdk021"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD address
            #add-point:BEFORE FIELD address name="construct.b.address"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD address
            
            #add-point:AFTER FIELD address name="construct.a.address"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.address
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD address
            #add-point:ON ACTION controlp INFIELD address name="construct.c.address"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmdk022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk022
            #add-point:ON ACTION controlp INFIELD xmdk022 name="construct.c.xmdk022"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			
			   LET g_qryparam.arg1 = '263'
			
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk022  #顯示到畫面上

            NEXT FIELD xmdk022                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk022
            #add-point:BEFORE FIELD xmdk022 name="construct.b.xmdk022"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk022
            
            #add-point:AFTER FIELD xmdk022 name="construct.a.xmdk022"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk023
            #add-point:ON ACTION controlp INFIELD xmdk023 name="construct.c.xmdk023"
            
            #開窗c段   
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            #160623-00014#1-mod-(S)
#   			CASE g_prog
#   			   WHEN 'axmt540'
#   			      LET g_qryparam.arg1 = '1'
#   			      LET g_qryparam.where = "xmdk002 <> '8' "
#   			      
#   			   WHEN 'axmt541'
#   			      LET g_qryparam.arg1 = '2'
#   			      
#   			   WHEN 'axmt542'
#   			      LET g_qryparam.arg1 = '1'
#   			      LET g_qryparam.where = "xmdk002 = '8' "
#   			      
#   			END CASE
            CASE 
   			   WHEN g_prog MATCHES 'axmt540'
   			      LET g_qryparam.arg1 = '1'
   			      LET g_qryparam.where = "xmdk002 <> '8' "
   			   WHEN g_prog MATCHES 'axmt541'
   			      LET g_qryparam.arg1 = '2'
   			   WHEN g_prog MATCHES 'axmt542'
   			      LET g_qryparam.arg1 = '1'
   			      LET g_qryparam.where = "xmdk002 = '8' "
   			END CASE
			   #160623-00014#1-mod-(E)
            CALL q_xmdk023()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk023  #顯示到畫面上

            NEXT FIELD xmdk023                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk023
            #add-point:BEFORE FIELD xmdk023 name="construct.b.xmdk023"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk023
            
            #add-point:AFTER FIELD xmdk023 name="construct.a.xmdk023"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk024
            #add-point:ON ACTION controlp INFIELD xmdk024 name="construct.c.xmdk024"
           
            #開窗c段   
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            #160623-00014#1-mod-(S)
   			CASE 
   			   WHEN g_prog MATCHES 'axmt540'
   			      LET g_qryparam.arg1 = '1'
   			      LET g_qryparam.where = "xmdk002 <> '8' "
   			   WHEN g_prog MATCHES 'axmt541'
   			      LET g_qryparam.arg1 = '2'
   			   WHEN g_prog MATCHES 'axmt542'
   			      LET g_qryparam.arg1 = '1'
   			      LET g_qryparam.where = "xmdk002 = '8' "
   			      
   			END CASE
			   #160623-00014#1-mod-(E)
            CALL q_xmdk024()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk024  #顯示到畫面上

            NEXT FIELD xmdk024                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk024
            #add-point:BEFORE FIELD xmdk024 name="construct.b.xmdk024"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk024
            
            #add-point:AFTER FIELD xmdk024 name="construct.a.xmdk024"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk024_desc
            #add-point:BEFORE FIELD xmdk024_desc name="construct.b.xmdk024_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk024_desc
            
            #add-point:AFTER FIELD xmdk024_desc name="construct.a.xmdk024_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk024_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk024_desc
            #add-point:ON ACTION controlp INFIELD xmdk024_desc name="construct.c.xmdk024_desc"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmdk020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk020
            #add-point:ON ACTION controlp INFIELD xmdk020 name="construct.c.xmdk020"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk020  #顯示到畫面上

            NEXT FIELD xmdk020                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk020
            #add-point:BEFORE FIELD xmdk020 name="construct.b.xmdk020"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk020
            
            #add-point:AFTER FIELD xmdk020 name="construct.a.xmdk020"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk025
            #add-point:BEFORE FIELD xmdk025 name="construct.b.xmdk025"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk025
            
            #add-point:AFTER FIELD xmdk025 name="construct.a.xmdk025"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk025
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk025
            #add-point:ON ACTION controlp INFIELD xmdk025 name="construct.c.xmdk025"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk026
            #add-point:BEFORE FIELD xmdk026 name="construct.b.xmdk026"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk026
            
            #add-point:AFTER FIELD xmdk026 name="construct.a.xmdk026"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk026
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk026
            #add-point:ON ACTION controlp INFIELD xmdk026 name="construct.c.xmdk026"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.xmdk027
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk027
            #add-point:ON ACTION controlp INFIELD xmdk027 name="construct.c.xmdk027"
            
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xmao002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk027  #顯示到畫面上
            NEXT FIELD xmdk027                     #返回原欄位    
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk027
            #add-point:BEFORE FIELD xmdk027 name="construct.b.xmdk027"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk027
            
            #add-point:AFTER FIELD xmdk027 name="construct.a.xmdk027"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk038
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk038
            #add-point:ON ACTION controlp INFIELD xmdk038 name="construct.c.xmdk038"
            
            #此段落由子樣板a08產生
            #開窗c段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			
			   LET g_qryparam.arg1 = '299'
			
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk038  #顯示到畫面上

            NEXT FIELD xmdk038                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk038
            #add-point:BEFORE FIELD xmdk038 name="construct.b.xmdk038"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk038
            
            #add-point:AFTER FIELD xmdk038 name="construct.a.xmdk038"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk055
            #add-point:BEFORE FIELD xmdk055 name="construct.b.xmdk055"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk055
            
            #add-point:AFTER FIELD xmdk055 name="construct.a.xmdk055"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk055
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk055
            #add-point:ON ACTION controlp INFIELD xmdk055 name="construct.c.xmdk055"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmdk010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk010
            #add-point:ON ACTION controlp INFIELD xmdk010 name="construct.c.xmdk010"
            
            #此段落由子樣板a08產生
            #開窗c段
	   		INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
		   	LET g_qryparam.reqry = FALSE
			
		   	LET g_qryparam.arg1 = g_xmdk_m.xmdk007
			
            CALL q_pmad002_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk010  #顯示到畫面上

            NEXT FIELD xmdk010                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk010
            #add-point:BEFORE FIELD xmdk010 name="construct.b.xmdk010"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk010
            
            #add-point:AFTER FIELD xmdk010 name="construct.a.xmdk010"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk011
            #add-point:ON ACTION controlp INFIELD xmdk011 name="construct.c.xmdk011"
           
            #此段落由子樣板a08產生
            #開窗c段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
		   	LET g_qryparam.reqry = FALSE
			
			   LET g_qryparam.arg1 = '238'
			
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk011  #顯示到畫面上

            NEXT FIELD xmdk011                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk011
            #add-point:BEFORE FIELD xmdk011 name="construct.b.xmdk011"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk011
            
            #add-point:AFTER FIELD xmdk011 name="construct.a.xmdk011"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk012
            #add-point:ON ACTION controlp INFIELD xmdk012 name="construct.c.xmdk012"
            
            #此段落由子樣板a08產生
            #開窗c段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			
			   LET g_qryparam.arg1 = g_site
			
            CALL q_oodb002_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk012  #顯示到畫面上

            NEXT FIELD xmdk012                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk012
            #add-point:BEFORE FIELD xmdk012 name="construct.b.xmdk012"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk012
            
            #add-point:AFTER FIELD xmdk012 name="construct.a.xmdk012"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk012_desc
            #add-point:BEFORE FIELD xmdk012_desc name="construct.b.xmdk012_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk012_desc
            
            #add-point:AFTER FIELD xmdk012_desc name="construct.a.xmdk012_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk012_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk012_desc
            #add-point:ON ACTION controlp INFIELD xmdk012_desc name="construct.c.xmdk012_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk013
            #add-point:BEFORE FIELD xmdk013 name="construct.b.xmdk013"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk013
            
            #add-point:AFTER FIELD xmdk013 name="construct.a.xmdk013"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk013
            #add-point:ON ACTION controlp INFIELD xmdk013 name="construct.c.xmdk013"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk014
            #add-point:BEFORE FIELD xmdk014 name="construct.b.xmdk014"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk014
            
            #add-point:AFTER FIELD xmdk014 name="construct.a.xmdk014"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk014
            #add-point:ON ACTION controlp INFIELD xmdk014 name="construct.c.xmdk014"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.xmdk015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk015
            #add-point:ON ACTION controlp INFIELD xmdk015 name="construct.c.xmdk015"

            #取得稅區
            CALL s_tax_get_ooef019(g_site) RETURNING l_success,l_ooef019
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE						   
						
			   LET g_qryparam.arg1 = l_ooef019    #稅區編號 
            LET g_qryparam.arg2 = '2'        #銷項
			
            CALL q_isac002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk015  #顯示到畫面上

            NEXT FIELD xmdk015                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk015
            #add-point:BEFORE FIELD xmdk015 name="construct.b.xmdk015"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk015
            
            #add-point:AFTER FIELD xmdk015 name="construct.a.xmdk015"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk015_desc
            #add-point:BEFORE FIELD xmdk015_desc name="construct.b.xmdk015_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk015_desc
            
            #add-point:AFTER FIELD xmdk015_desc name="construct.a.xmdk015_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk015_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk015_desc
            #add-point:ON ACTION controlp INFIELD xmdk015_desc name="construct.c.xmdk015_desc"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmdk016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk016
            #add-point:ON ACTION controlp INFIELD xmdk016 name="construct.c.xmdk016"
            
            #此段落由子樣板a08產生
            #開窗c段
	   		INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
		   	LET g_qryparam.reqry = FALSE
			
		   	LET g_qryparam.arg1 = g_site
			
            CALL q_ooaj002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk016  #顯示到畫面上

            NEXT FIELD xmdk016                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk016
            #add-point:BEFORE FIELD xmdk016 name="construct.b.xmdk016"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk016
            
            #add-point:AFTER FIELD xmdk016 name="construct.a.xmdk016"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk016_desc
            #add-point:BEFORE FIELD xmdk016_desc name="construct.b.xmdk016_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk016_desc
            
            #add-point:AFTER FIELD xmdk016_desc name="construct.a.xmdk016_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk016_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk016_desc
            #add-point:ON ACTION controlp INFIELD xmdk016_desc name="construct.c.xmdk016_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk017
            #add-point:BEFORE FIELD xmdk017 name="construct.b.xmdk017"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk017
            
            #add-point:AFTER FIELD xmdk017 name="construct.a.xmdk017"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk017
            #add-point:ON ACTION controlp INFIELD xmdk017 name="construct.c.xmdk017"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.xmdk018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk018
            #add-point:ON ACTION controlp INFIELD xmdk018 name="construct.c.xmdk018"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
		   	LET g_qryparam.reqry = FALSE
            CALL q_xmah001()                          #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk018  #顯示到畫面上

            NEXT FIELD xmdk018                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk018
            #add-point:BEFORE FIELD xmdk018 name="construct.b.xmdk018"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk018
            
            #add-point:AFTER FIELD xmdk018 name="construct.a.xmdk018"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk019
            #add-point:ON ACTION controlp INFIELD xmdk019 name="construct.c.xmdk019"
            
            #此段落由子樣板a08產生
            #開窗c段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_ooid001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk019  #顯示到畫面上

            NEXT FIELD xmdk019                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk019
            #add-point:BEFORE FIELD xmdk019 name="construct.b.xmdk019"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk019
            
            #add-point:AFTER FIELD xmdk019 name="construct.a.xmdk019"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk042
            #add-point:BEFORE FIELD xmdk042 name="construct.b.xmdk042"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk042
            
            #add-point:AFTER FIELD xmdk042 name="construct.a.xmdk042"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk042
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk042
            #add-point:ON ACTION controlp INFIELD xmdk042 name="construct.c.xmdk042"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk043
            #add-point:BEFORE FIELD xmdk043 name="construct.b.xmdk043"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk043
            
            #add-point:AFTER FIELD xmdk043 name="construct.a.xmdk043"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk043
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk043
            #add-point:ON ACTION controlp INFIELD xmdk043 name="construct.c.xmdk043"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmdk031
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk031
            #add-point:ON ACTION controlp INFIELD xmdk031 name="construct.c.xmdk031"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			
			   LET g_qryparam.arg1 = "295"
			
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk031  #顯示到畫面上

            NEXT FIELD xmdk031                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk031
            #add-point:BEFORE FIELD xmdk031 name="construct.b.xmdk031"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk031
            
            #add-point:AFTER FIELD xmdk031 name="construct.a.xmdk031"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk033
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk033
            #add-point:ON ACTION controlp INFIELD xmdk033 name="construct.c.xmdk033"
            
            #此段落由子樣板a08產生
            #開窗c段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
   			LET g_qryparam.reqry = FALSE
			
	   		LET g_qryparam.arg1 = '209'
			
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk033  #顯示到畫面上

            NEXT FIELD xmdk033                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk033
            #add-point:BEFORE FIELD xmdk033 name="construct.b.xmdk033"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk033
            
            #add-point:AFTER FIELD xmdk033 name="construct.a.xmdk033"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk044
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk044
            #add-point:ON ACTION controlp INFIELD xmdk044 name="construct.c.xmdk044"

            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			
            CALL q_icaa001_3()                      #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk044  #顯示到畫面上
            
            NEXT FIELD xmdk044                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk044
            #add-point:BEFORE FIELD xmdk044 name="construct.b.xmdk044"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk044
            
            #add-point:AFTER FIELD xmdk044 name="construct.a.xmdk044"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk035
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk035
            #add-point:ON ACTION controlp INFIELD xmdk035 name="construct.c.xmdk035"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            #160623-00014#1-mod-(S)
#   			CASE g_prog
#   			   WHEN 'axmt540'
#   			      LET g_qryparam.arg1 = '1'
#   			      LET g_qryparam.where = " xmdk002 <> '8' AND xmdksite = '",g_site,"'"
#   			      
#   			   WHEN 'axmt541'
#   			      LET g_qryparam.arg1 = '2'
#   			      LET g_qryparam.where = " xmdksite = '",g_site,"'"
#   			      
#   			   WHEN 'axmt542'
#   			      LET g_qryparam.arg1 = '1'
#   			      LET g_qryparam.where = " xmdk002 = '8' AND xmdksite = '",g_site,"'"
#   			      
#   			END CASE
            CASE 
   			   WHEN g_prog MATCHES 'axmt540'
   			      LET g_qryparam.arg1 = '1'
   			      LET g_qryparam.where = " xmdk002 <> '8' AND xmdksite = '",g_site,"'"
   			   WHEN g_prog MATCHES 'axmt541'
   			      LET g_qryparam.arg1 = '2'
   			      LET g_qryparam.where = " xmdksite = '",g_site,"'"
   			   WHEN g_prog MATCHES 'axmt542'
   			      LET g_qryparam.arg1 = '1'
   			      LET g_qryparam.where = " xmdk002 = '8' AND xmdksite = '",g_site,"'"
   			END CASE
			   #160623-00014#1-mod-(E)
            CALL q_xmdk035()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk035  #顯示到畫面上

            NEXT FIELD xmdk035                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk035
            #add-point:BEFORE FIELD xmdk035 name="construct.b.xmdk035"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk035
            
            #add-point:AFTER FIELD xmdk035 name="construct.a.xmdk035"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk046
            #add-point:BEFORE FIELD xmdk046 name="construct.b.xmdk046"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk046
            
            #add-point:AFTER FIELD xmdk046 name="construct.a.xmdk046"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk046
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk046
            #add-point:ON ACTION controlp INFIELD xmdk046 name="construct.c.xmdk046"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmdk036
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk036
            #add-point:ON ACTION controlp INFIELD xmdk036 name="construct.c.xmdk036"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            
            #160623-00014#1-mod-(S)
#   			CASE g_prog
#   			   WHEN 'axmt540'
#   			      LET g_qryparam.arg1 = '1'
#   			      LET g_qryparam.where = " xmdk002 <> '8' "
#   			      
#   			   WHEN 'axmt541'
#   			      LET g_qryparam.arg1 = '2'
#   			      
#   			   WHEN 'axmt542'
#   			      LET g_qryparam.arg1 = '1'
#   			      LET g_qryparam.where = " xmdk002 = '8' "
#   			      
#   			END CASE
            CASE 
   			   WHEN g_prog MATCHES 'axmt540'
   			      LET g_qryparam.arg1 = '1'
   			      LET g_qryparam.where = " xmdk002 <> '8' "
   			   WHEN g_prog MATCHES 'axmt541'
   			      LET g_qryparam.arg1 = '2'
   			   WHEN g_prog MATCHES 'axmt542'
   			      LET g_qryparam.arg1 = '1'
   			      LET g_qryparam.where = " xmdk002 = '8' "
   			END CASE
			   #160623-00014#1-mod-(E)
			   
            CALL q_xmdk036()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk036  #顯示到畫面上

            NEXT FIELD xmdk036                     #返回原欄位
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk036
            #add-point:BEFORE FIELD xmdk036 name="construct.b.xmdk036"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk036
            
            #add-point:AFTER FIELD xmdk036 name="construct.a.xmdk036"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk083
            #add-point:BEFORE FIELD xmdk083 name="construct.b.xmdk083"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk083
            
            #add-point:AFTER FIELD xmdk083 name="construct.a.xmdk083"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdk083
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk083
            #add-point:ON ACTION controlp INFIELD xmdk083 name="construct.c.xmdk083"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmdkownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdkownid
            #add-point:ON ACTION controlp INFIELD xmdkownid name="construct.c.xmdkownid"
            
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdkownid  #顯示到畫面上

            NEXT FIELD xmdkownid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdkownid
            #add-point:BEFORE FIELD xmdkownid name="construct.b.xmdkownid"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdkownid
            
            #add-point:AFTER FIELD xmdkownid name="construct.a.xmdkownid"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdkowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdkowndp
            #add-point:ON ACTION controlp INFIELD xmdkowndp name="construct.c.xmdkowndp"
            
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdkowndp  #顯示到畫面上

            NEXT FIELD xmdkowndp                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdkowndp
            #add-point:BEFORE FIELD xmdkowndp name="construct.b.xmdkowndp"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdkowndp
            
            #add-point:AFTER FIELD xmdkowndp name="construct.a.xmdkowndp"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdkcrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdkcrtid
            #add-point:ON ACTION controlp INFIELD xmdkcrtid name="construct.c.xmdkcrtid"
            
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdkcrtid  #顯示到畫面上

            NEXT FIELD xmdkcrtid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdkcrtid
            #add-point:BEFORE FIELD xmdkcrtid name="construct.b.xmdkcrtid"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdkcrtid
            
            #add-point:AFTER FIELD xmdkcrtid name="construct.a.xmdkcrtid"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdkcrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdkcrtdp
            #add-point:ON ACTION controlp INFIELD xmdkcrtdp name="construct.c.xmdkcrtdp"
            
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdkcrtdp  #顯示到畫面上

            NEXT FIELD xmdkcrtdp                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdkcrtdp
            #add-point:BEFORE FIELD xmdkcrtdp name="construct.b.xmdkcrtdp"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdkcrtdp
            
            #add-point:AFTER FIELD xmdkcrtdp name="construct.a.xmdkcrtdp"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdkcrtdt
            #add-point:BEFORE FIELD xmdkcrtdt name="construct.b.xmdkcrtdt"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.xmdkmodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdkmodid
            #add-point:ON ACTION controlp INFIELD xmdkmodid name="construct.c.xmdkmodid"
            
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdkmodid  #顯示到畫面上

            NEXT FIELD xmdkmodid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdkmodid
            #add-point:BEFORE FIELD xmdkmodid name="construct.b.xmdkmodid"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdkmodid
            
            #add-point:AFTER FIELD xmdkmodid name="construct.a.xmdkmodid"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdkmoddt
            #add-point:BEFORE FIELD xmdkmoddt name="construct.b.xmdkmoddt"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.xmdkcnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdkcnfid
            #add-point:ON ACTION controlp INFIELD xmdkcnfid name="construct.c.xmdkcnfid"
           
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdkcnfid  #顯示到畫面上

            NEXT FIELD xmdkcnfid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdkcnfid
            #add-point:BEFORE FIELD xmdkcnfid name="construct.b.xmdkcnfid"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdkcnfid
            
            #add-point:AFTER FIELD xmdkcnfid name="construct.a.xmdkcnfid"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdkcnfdt
            #add-point:BEFORE FIELD xmdkcnfdt name="construct.b.xmdkcnfdt"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.xmdkpstid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdkpstid
            #add-point:ON ACTION controlp INFIELD xmdkpstid name="construct.c.xmdkpstid"
            
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdkpstid  #顯示到畫面上

            NEXT FIELD xmdkpstid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdkpstid
            #add-point:BEFORE FIELD xmdkpstid name="construct.b.xmdkpstid"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdkpstid
            
            #add-point:AFTER FIELD xmdkpstid name="construct.a.xmdkpstid"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdkpstdt
            #add-point:BEFORE FIELD xmdkpstdt name="construct.b.xmdkpstdt"
                                                                                                            
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON xmdlsite,xmdlseq,xmdl001,xmdl002,xmdl003,xmdl004,xmdl005,xmdl006,xmdl007, 
          xmdl008,xmdl009,xmdl009_desc,xmdl033,xmdl011,xmdl012,xmdl017,xmdl018,xmdl019,xmdl020,xmdl010, 
          xmdl013,xmdl014,xmdl015,xmdl016,xmdl052,xmdl021,xmdl022,xmdl050,xmdl050_desc,xmdl023,xmdl041, 
          xmdl030,xmdl031,xmdl032,xmdl051,xmdl035,xmdl036,xmdl037,xmdl056,xmdl088,xmdl034,ooff013,xmdl024, 
          xmdl025,xmdl025_desc,xmdl026,xmdl027,xmdl028,xmdl029,xmdl042,xmdl043,xmdl044,xmdl045,xmdl046, 
          xmdl087
           FROM s_detail1[1].xmdlsite,s_detail1[1].xmdlseq,s_detail1[1].xmdl001,s_detail1[1].xmdl002, 
               s_detail1[1].xmdl003,s_detail1[1].xmdl004,s_detail1[1].xmdl005,s_detail1[1].xmdl006,s_detail1[1].xmdl007, 
               s_detail1[1].xmdl008,s_detail1[1].xmdl009,s_detail1[1].xmdl009_desc,s_detail1[1].xmdl033, 
               s_detail1[1].xmdl011,s_detail1[1].xmdl012,s_detail1[1].xmdl017,s_detail1[1].xmdl018,s_detail1[1].xmdl019, 
               s_detail1[1].xmdl020,s_detail1[1].xmdl010,s_detail1[1].xmdl013,s_detail1[1].xmdl014,s_detail1[1].xmdl015, 
               s_detail1[1].xmdl016,s_detail1[1].xmdl052,s_detail1[1].xmdl021,s_detail1[1].xmdl022,s_detail1[1].xmdl050, 
               s_detail1[1].xmdl050_desc,s_detail1[1].xmdl023,s_detail1[1].xmdl041,s_detail1[1].xmdl030, 
               s_detail1[1].xmdl031,s_detail1[1].xmdl032,s_detail1[1].xmdl051,s_detail1[1].xmdl035,s_detail1[1].xmdl036, 
               s_detail1[1].xmdl037,s_detail1[1].xmdl056,s_detail1[1].xmdl088,s_detail1[1].xmdl034,s_detail1[1].ooff013, 
               s_detail2[1].xmdl024,s_detail2[1].xmdl025,s_detail2[1].xmdl025_desc,s_detail2[1].xmdl026, 
               s_detail2[1].xmdl027,s_detail2[1].xmdl028,s_detail2[1].xmdl029,s_detail2[1].xmdl042,s_detail2[1].xmdl043, 
               s_detail2[1].xmdl044,s_detail2[1].xmdl045,s_detail2[1].xmdl046,s_detail2[1].xmdl087
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
                                                                                                            
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdlsite
            #add-point:BEFORE FIELD xmdlsite name="construct.b.page1.xmdlsite"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdlsite
            
            #add-point:AFTER FIELD xmdlsite name="construct.a.page1.xmdlsite"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdlsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdlsite
            #add-point:ON ACTION controlp INFIELD xmdlsite name="construct.c.page1.xmdlsite"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdlseq
            #add-point:BEFORE FIELD xmdlseq name="construct.b.page1.xmdlseq"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdlseq
            
            #add-point:AFTER FIELD xmdlseq name="construct.a.page1.xmdlseq"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdlseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdlseq
            #add-point:ON ACTION controlp INFIELD xmdlseq name="construct.c.page1.xmdlseq"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdl001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl001
            #add-point:ON ACTION controlp INFIELD xmdl001 name="construct.c.page1.xmdl001"
            
            #此段落由子樣板a08產生
            #開窗c段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_xmdgdocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl001  #顯示到畫面上

            NEXT FIELD xmdl001                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl001
            #add-point:BEFORE FIELD xmdl001 name="construct.b.page1.xmdl001"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl001
            
            #add-point:AFTER FIELD xmdl001 name="construct.a.page1.xmdl001"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl002
            #add-point:BEFORE FIELD xmdl002 name="construct.b.page1.xmdl002"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl002
            
            #add-point:AFTER FIELD xmdl002 name="construct.a.page1.xmdl002"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl002
            #add-point:ON ACTION controlp INFIELD xmdl002 name="construct.c.page1.xmdl002"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdl003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl003
            #add-point:ON ACTION controlp INFIELD xmdl003 name="construct.c.page1.xmdl003"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_xmdadocno_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl003  #顯示到畫面上

            NEXT FIELD xmdl003                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl003
            #add-point:BEFORE FIELD xmdl003 name="construct.b.page1.xmdl003"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl003
            
            #add-point:AFTER FIELD xmdl003 name="construct.a.page1.xmdl003"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl004
            #add-point:BEFORE FIELD xmdl004 name="construct.b.page1.xmdl004"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl004
            
            #add-point:AFTER FIELD xmdl004 name="construct.a.page1.xmdl004"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl004
            #add-point:ON ACTION controlp INFIELD xmdl004 name="construct.c.page1.xmdl004"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl005
            #add-point:BEFORE FIELD xmdl005 name="construct.b.page1.xmdl005"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl005
            
            #add-point:AFTER FIELD xmdl005 name="construct.a.page1.xmdl005"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl005
            #add-point:ON ACTION controlp INFIELD xmdl005 name="construct.c.page1.xmdl005"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl006
            #add-point:BEFORE FIELD xmdl006 name="construct.b.page1.xmdl006"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl006
            
            #add-point:AFTER FIELD xmdl006 name="construct.a.page1.xmdl006"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl006
            #add-point:ON ACTION controlp INFIELD xmdl006 name="construct.c.page1.xmdl006"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl007
            #add-point:BEFORE FIELD xmdl007 name="construct.b.page1.xmdl007"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl007
            
            #add-point:AFTER FIELD xmdl007 name="construct.a.page1.xmdl007"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl007
            #add-point:ON ACTION controlp INFIELD xmdl007 name="construct.c.page1.xmdl007"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdl008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl008
            #add-point:ON ACTION controlp INFIELD xmdl008 name="construct.c.page1.xmdl008"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_imaf001_15()                    #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl008  #顯示到畫面上

            NEXT FIELD xmdl008                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl008
            #add-point:BEFORE FIELD xmdl008 name="construct.b.page1.xmdl008"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl008
            
            #add-point:AFTER FIELD xmdl008 name="construct.a.page1.xmdl008"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl009
            #add-point:ON ACTION controlp INFIELD xmdl009 name="construct.c.page1.xmdl009"

            #開窗c段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            #160623-00014#1-mod-(S)
#   			CASE g_prog
#   			   WHEN 'axmt540'
#   			      LET g_qryparam.arg1 = '1'
#   			      LET g_qryparam.where = "xmdk002 <> '8' "
#   			      
#   			   WHEN 'axmt541'
#   			      LET g_qryparam.arg1 = '2'
#   			      
#   			   WHEN 'axmt542'
#   			      LET g_qryparam.arg1 = '1'
#   			      LET g_qryparam.where = "xmdk002 = '8' "
#   			      
#   			END CASE
            CASE 
   			   WHEN g_prog MATCHES 'axmt540'
   			      LET g_qryparam.arg1 = '1'
   			      LET g_qryparam.where = "xmdk002 <> '8' "
   			   WHEN g_prog MATCHES 'axmt541'
   			      LET g_qryparam.arg1 = '2'
   			   WHEN g_prog MATCHES 'axmt542'
   			      LET g_qryparam.arg1 = '1'
   			      LET g_qryparam.where = "xmdk002 = '8' "
   			END CASE
			   #160623-00014#1-mod-(E)
            CALL q_xmdl009()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl009  #顯示到畫面上

            NEXT FIELD xmdl009                    #返回原欄位
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl009
            #add-point:BEFORE FIELD xmdl009 name="construct.b.page1.xmdl009"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl009
            
            #add-point:AFTER FIELD xmdl009 name="construct.a.page1.xmdl009"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl009_desc
            #add-point:BEFORE FIELD xmdl009_desc name="construct.b.page1.xmdl009_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl009_desc
            
            #add-point:AFTER FIELD xmdl009_desc name="construct.a.page1.xmdl009_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl009_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl009_desc
            #add-point:ON ACTION controlp INFIELD xmdl009_desc name="construct.c.page1.xmdl009_desc"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdl033
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl033
            #add-point:ON ACTION controlp INFIELD xmdl033 name="construct.c.page1.xmdl033"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_pmao004_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl033  #顯示到畫面上

            NEXT FIELD xmdl033                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl033
            #add-point:BEFORE FIELD xmdl033 name="construct.b.page1.xmdl033"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl033
            
            #add-point:AFTER FIELD xmdl033 name="construct.a.page1.xmdl033"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl011
            #add-point:ON ACTION controlp INFIELD xmdl011 name="construct.c.page1.xmdl011"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			
			   LET g_qryparam.arg1 = '221'
			
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl011  #顯示到畫面上

            NEXT FIELD xmdl011                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl011
            #add-point:BEFORE FIELD xmdl011 name="construct.b.page1.xmdl011"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl011
            
            #add-point:AFTER FIELD xmdl011 name="construct.a.page1.xmdl011"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl012
            #add-point:BEFORE FIELD xmdl012 name="construct.b.page1.xmdl012"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl012
            
            #add-point:AFTER FIELD xmdl012 name="construct.a.page1.xmdl012"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl012
            #add-point:ON ACTION controlp INFIELD xmdl012 name="construct.c.page1.xmdl012"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdl017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl017
            #add-point:ON ACTION controlp INFIELD xmdl017 name="construct.c.page1.xmdl017"
            
            #此段落由子樣板a08產生
            #開窗c段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl017  #顯示到畫面上

            NEXT FIELD xmdl017                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl017
            #add-point:BEFORE FIELD xmdl017 name="construct.b.page1.xmdl017"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl017
            
            #add-point:AFTER FIELD xmdl017 name="construct.a.page1.xmdl017"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl018
            #add-point:BEFORE FIELD xmdl018 name="construct.b.page1.xmdl018"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl018
            
            #add-point:AFTER FIELD xmdl018 name="construct.a.page1.xmdl018"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl018
            #add-point:ON ACTION controlp INFIELD xmdl018 name="construct.c.page1.xmdl018"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdl019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl019
            #add-point:ON ACTION controlp INFIELD xmdl019 name="construct.c.page1.xmdl019"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl019  #顯示到畫面上

            NEXT FIELD xmdl019                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl019
            #add-point:BEFORE FIELD xmdl019 name="construct.b.page1.xmdl019"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl019
            
            #add-point:AFTER FIELD xmdl019 name="construct.a.page1.xmdl019"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl020
            #add-point:BEFORE FIELD xmdl020 name="construct.b.page1.xmdl020"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl020
            
            #add-point:AFTER FIELD xmdl020 name="construct.a.page1.xmdl020"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl020
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl020
            #add-point:ON ACTION controlp INFIELD xmdl020 name="construct.c.page1.xmdl020"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl010
            #add-point:BEFORE FIELD xmdl010 name="construct.b.page1.xmdl010"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl010
            
            #add-point:AFTER FIELD xmdl010 name="construct.a.page1.xmdl010"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl010
            #add-point:ON ACTION controlp INFIELD xmdl010 name="construct.c.page1.xmdl010"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl013
            #add-point:BEFORE FIELD xmdl013 name="construct.b.page1.xmdl013"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl013
            
            #add-point:AFTER FIELD xmdl013 name="construct.a.page1.xmdl013"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl013
            #add-point:ON ACTION controlp INFIELD xmdl013 name="construct.c.page1.xmdl013"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdl014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl014
            #add-point:ON ACTION controlp INFIELD xmdl014 name="construct.c.page1.xmdl014"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			
            CALL q_inaa001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl014  #顯示到畫面上

            NEXT FIELD xmdl014                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl014
            #add-point:BEFORE FIELD xmdl014 name="construct.b.page1.xmdl014"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl014
            
            #add-point:AFTER FIELD xmdl014 name="construct.a.page1.xmdl014"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl015
            #add-point:ON ACTION controlp INFIELD xmdl015 name="construct.c.page1.xmdl015"
            
            #此段落由子樣板a08產生
            #開窗c段
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
	   		LET g_qryparam.reqry = FALSE
	   		
            CALL q_inab002_5()                           #呼叫開窗
            
            DISPLAY g_qryparam.return1 TO xmdl015  #顯示到畫面上

            NEXT FIELD xmdl015                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl015
            #add-point:BEFORE FIELD xmdl015 name="construct.b.page1.xmdl015"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl015
            
            #add-point:AFTER FIELD xmdl015 name="construct.a.page1.xmdl015"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl016
            #add-point:ON ACTION controlp INFIELD xmdl016 name="construct.c.page1.xmdl016"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   
			   LET g_qryparam.arg1 = g_site
			
            CALL q_inad003()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl016  #顯示到畫面上

            NEXT FIELD xmdl016                     #返回原欄位
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl016
            #add-point:BEFORE FIELD xmdl016 name="construct.b.page1.xmdl016"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl016
            
            #add-point:AFTER FIELD xmdl016 name="construct.a.page1.xmdl016"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl052
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl052
            #add-point:ON ACTION controlp INFIELD xmdl052 name="construct.c.page1.xmdl052"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE

			   LET g_qryparam.arg1 = g_site

            CALL q_xmdl052()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl052  #顯示到畫面上

            NEXT FIELD xmdl052                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl052
            #add-point:BEFORE FIELD xmdl052 name="construct.b.page1.xmdl052"
 
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl052
            
            #add-point:AFTER FIELD xmdl052 name="construct.a.page1.xmdl052"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl021
            #add-point:ON ACTION controlp INFIELD xmdl021 name="construct.c.page1.xmdl021"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl021  #顯示到畫面上

            NEXT FIELD xmdl021                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl021
            #add-point:BEFORE FIELD xmdl021 name="construct.b.page1.xmdl021"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl021
            
            #add-point:AFTER FIELD xmdl021 name="construct.a.page1.xmdl021"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl022
            #add-point:BEFORE FIELD xmdl022 name="construct.b.page1.xmdl022"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl022
            
            #add-point:AFTER FIELD xmdl022 name="construct.a.page1.xmdl022"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl022
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl022
            #add-point:ON ACTION controlp INFIELD xmdl022 name="construct.c.page1.xmdl022"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdl050
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl050
            #add-point:ON ACTION controlp INFIELD xmdl050 name="construct.c.page1.xmdl050"
            
            #此段落由子樣板a08產生
            #開窗c段             
            LET l_gzcb004 = ''
            #160705-00042#12 160715 by sakura mark(S)            
            #SELECT gzcb004
            #  INTO l_gzcb004
            #  FROM gzcb_t
            # WHERE gzcb001 = '24'
            #   AND gzcb002 = 'axmt540'   #出貨單、無訂單出貨共用
            #160705-00042#12 160715 by sakura mark(E)
            #160705-00042#12 160715 by sakura add(S)               
            SELECT gzcb004
              INTO l_gzcb004
              FROM gzcb_t,gzzz_t 
             WHERE gzcb001 = '24' 
               AND gzcb002 = gzzz006 
               AND gzzz001 = g_prog
            #160705-00042#12 160715 by sakura add(E)               
                        
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
	   		LET g_qryparam.reqry = FALSE
			
	     		LET g_qryparam.arg1 = l_gzcb004
			
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl050  #顯示到畫面上

            NEXT FIELD xmdl050                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl050
            #add-point:BEFORE FIELD xmdl050 name="construct.b.page1.xmdl050"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl050
            
            #add-point:AFTER FIELD xmdl050 name="construct.a.page1.xmdl050"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl050_desc
            #add-point:BEFORE FIELD xmdl050_desc name="construct.b.page1.xmdl050_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl050_desc
            
            #add-point:AFTER FIELD xmdl050_desc name="construct.a.page1.xmdl050_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl050_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl050_desc
            #add-point:ON ACTION controlp INFIELD xmdl050_desc name="construct.c.page1.xmdl050_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl023
            #add-point:BEFORE FIELD xmdl023 name="construct.b.page1.xmdl023"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl023
            
            #add-point:AFTER FIELD xmdl023 name="construct.a.page1.xmdl023"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl023
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl023
            #add-point:ON ACTION controlp INFIELD xmdl023 name="construct.c.page1.xmdl023"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl041
            #add-point:BEFORE FIELD xmdl041 name="construct.b.page1.xmdl041"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl041
            
            #add-point:AFTER FIELD xmdl041 name="construct.a.page1.xmdl041"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl041
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl041
            #add-point:ON ACTION controlp INFIELD xmdl041 name="construct.c.page1.xmdl041"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdl030
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl030
            #add-point:ON ACTION controlp INFIELD xmdl030 name="construct.c.page1.xmdl030"
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_pjba001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl030  #顯示到畫面上
            NEXT FIELD xmdl030                     #返回原欄位
    
                                                                                                           
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl030
            #add-point:BEFORE FIELD xmdl030 name="construct.b.page1.xmdl030"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl030
            
            #add-point:AFTER FIELD xmdl030 name="construct.a.page1.xmdl030"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl031
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl031
            #add-point:ON ACTION controlp INFIELD xmdl031 name="construct.c.page1.xmdl031"
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_pjbb002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl031  #顯示到畫面上
            NEXT FIELD xmdl031                     #返回原欄位
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl031
            #add-point:BEFORE FIELD xmdl031 name="construct.b.page1.xmdl031"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl031
            
            #add-point:AFTER FIELD xmdl031 name="construct.a.page1.xmdl031"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl032
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl032
            #add-point:ON ACTION controlp INFIELD xmdl032 name="construct.c.page1.xmdl032"
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_pjbm002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl032  #顯示到畫面上
            NEXT FIELD xmdl032                     #返回原欄位
                                                                                                    
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl032
            #add-point:BEFORE FIELD xmdl032 name="construct.b.page1.xmdl032"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl032
            
            #add-point:AFTER FIELD xmdl032 name="construct.a.page1.xmdl032"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl051
            #add-point:BEFORE FIELD xmdl051 name="construct.b.page1.xmdl051"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl051
            
            #add-point:AFTER FIELD xmdl051 name="construct.a.page1.xmdl051"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl051
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl051
            #add-point:ON ACTION controlp INFIELD xmdl051 name="construct.c.page1.xmdl051"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl035
            #add-point:BEFORE FIELD xmdl035 name="construct.b.page1.xmdl035"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl035
            
            #add-point:AFTER FIELD xmdl035 name="construct.a.page1.xmdl035"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl035
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl035
            #add-point:ON ACTION controlp INFIELD xmdl035 name="construct.c.page1.xmdl035"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl036
            #add-point:BEFORE FIELD xmdl036 name="construct.b.page1.xmdl036"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl036
            
            #add-point:AFTER FIELD xmdl036 name="construct.a.page1.xmdl036"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl036
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl036
            #add-point:ON ACTION controlp INFIELD xmdl036 name="construct.c.page1.xmdl036"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl037
            #add-point:BEFORE FIELD xmdl037 name="construct.b.page1.xmdl037"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl037
            
            #add-point:AFTER FIELD xmdl037 name="construct.a.page1.xmdl037"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl037
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl037
            #add-point:ON ACTION controlp INFIELD xmdl037 name="construct.c.page1.xmdl037"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl056
            #add-point:BEFORE FIELD xmdl056 name="construct.b.page1.xmdl056"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl056
            
            #add-point:AFTER FIELD xmdl056 name="construct.a.page1.xmdl056"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl056
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl056
            #add-point:ON ACTION controlp INFIELD xmdl056 name="construct.c.page1.xmdl056"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl088
            #add-point:BEFORE FIELD xmdl088 name="construct.b.page1.xmdl088"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl088
            
            #add-point:AFTER FIELD xmdl088 name="construct.a.page1.xmdl088"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl088
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl088
            #add-point:ON ACTION controlp INFIELD xmdl088 name="construct.c.page1.xmdl088"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl034
            #add-point:BEFORE FIELD xmdl034 name="construct.b.page1.xmdl034"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl034
            
            #add-point:AFTER FIELD xmdl034 name="construct.a.page1.xmdl034"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdl034
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl034
            #add-point:ON ACTION controlp INFIELD xmdl034 name="construct.c.page1.xmdl034"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD ooff013
            #add-point:BEFORE FIELD ooff013 name="construct.b.page1.ooff013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD ooff013
            
            #add-point:AFTER FIELD ooff013 name="construct.a.page1.ooff013"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.ooff013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD ooff013
            #add-point:ON ACTION controlp INFIELD ooff013 name="construct.c.page1.ooff013"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl024
            #add-point:BEFORE FIELD xmdl024 name="construct.b.page2.xmdl024"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl024
            
            #add-point:AFTER FIELD xmdl024 name="construct.a.page2.xmdl024"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdl024
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl024
            #add-point:ON ACTION controlp INFIELD xmdl024 name="construct.c.page2.xmdl024"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.xmdl025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl025
            #add-point:ON ACTION controlp INFIELD xmdl025 name="construct.c.page2.xmdl025"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			
			   LET g_qryparam.arg1 = g_site
			
            CALL q_oodb002_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl025  #顯示到畫面上

            NEXT FIELD xmdl025                     #返回原欄位     
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl025
            #add-point:BEFORE FIELD xmdl025 name="construct.b.page2.xmdl025"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl025
            
            #add-point:AFTER FIELD xmdl025 name="construct.a.page2.xmdl025"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl025_desc
            #add-point:BEFORE FIELD xmdl025_desc name="construct.b.page2.xmdl025_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl025_desc
            
            #add-point:AFTER FIELD xmdl025_desc name="construct.a.page2.xmdl025_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdl025_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl025_desc
            #add-point:ON ACTION controlp INFIELD xmdl025_desc name="construct.c.page2.xmdl025_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl026
            #add-point:BEFORE FIELD xmdl026 name="construct.b.page2.xmdl026"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl026
            
            #add-point:AFTER FIELD xmdl026 name="construct.a.page2.xmdl026"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdl026
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl026
            #add-point:ON ACTION controlp INFIELD xmdl026 name="construct.c.page2.xmdl026"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl027
            #add-point:BEFORE FIELD xmdl027 name="construct.b.page2.xmdl027"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl027
            
            #add-point:AFTER FIELD xmdl027 name="construct.a.page2.xmdl027"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdl027
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl027
            #add-point:ON ACTION controlp INFIELD xmdl027 name="construct.c.page2.xmdl027"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl028
            #add-point:BEFORE FIELD xmdl028 name="construct.b.page2.xmdl028"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl028
            
            #add-point:AFTER FIELD xmdl028 name="construct.a.page2.xmdl028"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdl028
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl028
            #add-point:ON ACTION controlp INFIELD xmdl028 name="construct.c.page2.xmdl028"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl029
            #add-point:BEFORE FIELD xmdl029 name="construct.b.page2.xmdl029"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl029
            
            #add-point:AFTER FIELD xmdl029 name="construct.a.page2.xmdl029"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdl029
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl029
            #add-point:ON ACTION controlp INFIELD xmdl029 name="construct.c.page2.xmdl029"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl042
            #add-point:BEFORE FIELD xmdl042 name="construct.b.page2.xmdl042"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl042
            
            #add-point:AFTER FIELD xmdl042 name="construct.a.page2.xmdl042"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdl042
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl042
            #add-point:ON ACTION controlp INFIELD xmdl042 name="construct.c.page2.xmdl042"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl043
            #add-point:BEFORE FIELD xmdl043 name="construct.b.page2.xmdl043"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl043
            
            #add-point:AFTER FIELD xmdl043 name="construct.a.page2.xmdl043"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdl043
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl043
            #add-point:ON ACTION controlp INFIELD xmdl043 name="construct.c.page2.xmdl043"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl044
            #add-point:BEFORE FIELD xmdl044 name="construct.b.page2.xmdl044"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl044
            
            #add-point:AFTER FIELD xmdl044 name="construct.a.page2.xmdl044"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdl044
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl044
            #add-point:ON ACTION controlp INFIELD xmdl044 name="construct.c.page2.xmdl044"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl045
            #add-point:BEFORE FIELD xmdl045 name="construct.b.page2.xmdl045"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl045
            
            #add-point:AFTER FIELD xmdl045 name="construct.a.page2.xmdl045"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdl045
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl045
            #add-point:ON ACTION controlp INFIELD xmdl045 name="construct.c.page2.xmdl045"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl046
            #add-point:BEFORE FIELD xmdl046 name="construct.b.page2.xmdl046"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl046
            
            #add-point:AFTER FIELD xmdl046 name="construct.a.page2.xmdl046"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdl046
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl046
            #add-point:ON ACTION controlp INFIELD xmdl046 name="construct.c.page2.xmdl046"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl087
            #add-point:BEFORE FIELD xmdl087 name="construct.b.page2.xmdl087"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl087
            
            #add-point:AFTER FIELD xmdl087 name="construct.a.page2.xmdl087"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xmdl087
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl087
            #add-point:ON ACTION controlp INFIELD xmdl087 name="construct.c.page2.xmdl087"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON xmdmsite,xmdmseq,xmdmseq1,xmdm001,xmdm002,xmdm002_desc,xmdm003,xmdm004, 
          xmdm005,xmdm006,xmdm007,xmdm033,xmdm008,xmdm009,xmdm010,xmdm011,xmdm012,xmdm013,xmdm014
           FROM s_detail3[1].xmdmsite,s_detail3[1].xmdmseq,s_detail3[1].xmdmseq1,s_detail3[1].xmdm001, 
               s_detail3[1].xmdm002,s_detail3[1].xmdm002_desc,s_detail3[1].xmdm003,s_detail3[1].xmdm004, 
               s_detail3[1].xmdm005,s_detail3[1].xmdm006,s_detail3[1].xmdm007,s_detail3[1].xmdm033,s_detail3[1].xmdm008, 
               s_detail3[1].xmdm009,s_detail3[1].xmdm010,s_detail3[1].xmdm011,s_detail3[1].xmdm012,s_detail3[1].xmdm013, 
               s_detail3[1].xmdm014
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body2.before_construct"
                                                                                                            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdmsite
            #add-point:BEFORE FIELD xmdmsite name="construct.b.page3.xmdmsite"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdmsite
            
            #add-point:AFTER FIELD xmdmsite name="construct.a.page3.xmdmsite"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdmsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdmsite
            #add-point:ON ACTION controlp INFIELD xmdmsite name="construct.c.page3.xmdmsite"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdmseq
            #add-point:BEFORE FIELD xmdmseq name="construct.b.page3.xmdmseq"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdmseq
            
            #add-point:AFTER FIELD xmdmseq name="construct.a.page3.xmdmseq"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdmseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdmseq
            #add-point:ON ACTION controlp INFIELD xmdmseq name="construct.c.page3.xmdmseq"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdmseq1
            #add-point:BEFORE FIELD xmdmseq1 name="construct.b.page3.xmdmseq1"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdmseq1
            
            #add-point:AFTER FIELD xmdmseq1 name="construct.a.page3.xmdmseq1"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdmseq1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdmseq1
            #add-point:ON ACTION controlp INFIELD xmdmseq1 name="construct.c.page3.xmdmseq1"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.page3.xmdm001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdm001
            #add-point:ON ACTION controlp INFIELD xmdm001 name="construct.c.page3.xmdm001"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_imaf001_15()                    #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdm001  #顯示到畫面上

            NEXT FIELD xmdm001                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdm001
            #add-point:BEFORE FIELD xmdm001 name="construct.b.page3.xmdm001"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdm001
            
            #add-point:AFTER FIELD xmdm001 name="construct.a.page3.xmdm001"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdm002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdm002
            #add-point:ON ACTION controlp INFIELD xmdm002 name="construct.c.page3.xmdm002"

            #開窗c段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            #160623-00014#1-mod-(S)
#   			CASE g_prog
#   			   WHEN 'axmt540'
#   			      LET g_qryparam.arg1 = '1'
#   			      LET g_qryparam.where = "xmdk002 <> '8' "
#   			      
#   			   WHEN 'axmt541'
#   			      LET g_qryparam.arg1 = '2'
#   			      
#   			   WHEN 'axmt542'
#   			      LET g_qryparam.arg1 = '1'
#   			      LET g_qryparam.where = "xmdk002 = '8' "
#   			      
#   			END CASE
            CASE 
   			   WHEN g_prog MATCHES 'axmt540'
   			      LET g_qryparam.arg1 = '1'
   			      LET g_qryparam.where = "xmdk002 <> '8' "
   			   WHEN g_prog MATCHES 'axmt541'
   			      LET g_qryparam.arg1 = '2'
   			   WHEN g_prog MATCHES 'axmt542'
   			      LET g_qryparam.arg1 = '1'
   			      LET g_qryparam.where = "xmdk002 = '8' "
   			END CASE
			   #160623-00014#1-mod-(E)
            CALL q_xmdl009()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdm002  #顯示到畫面上

            NEXT FIELD xmdm002                    #返回原欄位
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdm002
            #add-point:BEFORE FIELD xmdm002 name="construct.b.page3.xmdm002"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdm002
            
            #add-point:AFTER FIELD xmdm002 name="construct.a.page3.xmdm002"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdm002_desc
            #add-point:BEFORE FIELD xmdm002_desc name="construct.b.page3.xmdm002_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdm002_desc
            
            #add-point:AFTER FIELD xmdm002_desc name="construct.a.page3.xmdm002_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdm002_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdm002_desc
            #add-point:ON ACTION controlp INFIELD xmdm002_desc name="construct.c.page3.xmdm002_desc"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page3.xmdm003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdm003
            #add-point:ON ACTION controlp INFIELD xmdm003 name="construct.c.page3.xmdm003"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			
			   LET g_qryparam.arg1 = '221'
			
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdm003  #顯示到畫面上

            NEXT FIELD xmdm003                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdm003
            #add-point:BEFORE FIELD xmdm003 name="construct.b.page3.xmdm003"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdm003
            
            #add-point:AFTER FIELD xmdm003 name="construct.a.page3.xmdm003"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdm004
            #add-point:BEFORE FIELD xmdm004 name="construct.b.page3.xmdm004"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdm004
            
            #add-point:AFTER FIELD xmdm004 name="construct.a.page3.xmdm004"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdm004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdm004
            #add-point:ON ACTION controlp INFIELD xmdm004 name="construct.c.page3.xmdm004"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.page3.xmdm005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdm005
            #add-point:ON ACTION controlp INFIELD xmdm005 name="construct.c.page3.xmdm005"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			
            CALL q_inaa001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdm005  #顯示到畫面上

            NEXT FIELD xmdm005                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdm005
            #add-point:BEFORE FIELD xmdm005 name="construct.b.page3.xmdm005"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdm005
            
            #add-point:AFTER FIELD xmdm005 name="construct.a.page3.xmdm005"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdm006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdm006
            #add-point:ON ACTION controlp INFIELD xmdm006 name="construct.c.page3.xmdm006"
            
            #此段落由子樣板a08產生
            #開窗c段
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
	   		LET g_qryparam.reqry = FALSE
	   		
            CALL q_inab002_5()                           #呼叫開窗
            
            DISPLAY g_qryparam.return1 TO xmdm006  #顯示到畫面上

            NEXT FIELD xmdm006                     #返回原欄位            

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdm006
            #add-point:BEFORE FIELD xmdm006 name="construct.b.page3.xmdm006"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdm006
            
            #add-point:AFTER FIELD xmdm006 name="construct.a.page3.xmdm006"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdm007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdm007
            #add-point:ON ACTION controlp INFIELD xmdm007 name="construct.c.page3.xmdm007"

            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   
			   LET g_qryparam.arg1 = g_site
			
            CALL q_inad003()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdm007  #顯示到畫面上

            NEXT FIELD xmdm007                     #返回原欄位
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdm007
            #add-point:BEFORE FIELD xmdm007 name="construct.b.page3.xmdm007"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdm007
            
            #add-point:AFTER FIELD xmdm007 name="construct.a.page3.xmdm007"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdm033
            #add-point:BEFORE FIELD xmdm033 name="construct.b.page3.xmdm033"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdm033
            
            #add-point:AFTER FIELD xmdm033 name="construct.a.page3.xmdm033"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdm033
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdm033
            #add-point:ON ACTION controlp INFIELD xmdm033 name="construct.c.page3.xmdm033"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			
			   LET g_qryparam.arg1 = g_site
			
            CALL q_xmdl052()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdm033  #顯示到畫面上

            NEXT FIELD xmdm033                     #返回原欄位
            #END add-point
 
 
         #Ctrlp:construct.c.page3.xmdm008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdm008
            #add-point:ON ACTION controlp INFIELD xmdm008 name="construct.c.page3.xmdm008"
            
            #此段落由子樣板a08產生
            #開窗c段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdm008  #顯示到畫面上

            NEXT FIELD xmdm008                     #返回原欄位
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdm008
            #add-point:BEFORE FIELD xmdm008 name="construct.b.page3.xmdm008"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdm008
            
            #add-point:AFTER FIELD xmdm008 name="construct.a.page3.xmdm008"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdm009
            #add-point:BEFORE FIELD xmdm009 name="construct.b.page3.xmdm009"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdm009
            
            #add-point:AFTER FIELD xmdm009 name="construct.a.page3.xmdm009"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdm009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdm009
            #add-point:ON ACTION controlp INFIELD xmdm009 name="construct.c.page3.xmdm009"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:construct.c.page3.xmdm010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdm010
            #add-point:ON ACTION controlp INFIELD xmdm010 name="construct.c.page3.xmdm010"
            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdm010  #顯示到畫面上

            NEXT FIELD xmdm010                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdm010
            #add-point:BEFORE FIELD xmdm010 name="construct.b.page3.xmdm010"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdm010
            
            #add-point:AFTER FIELD xmdm010 name="construct.a.page3.xmdm010"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdm011
            #add-point:BEFORE FIELD xmdm011 name="construct.b.page3.xmdm011"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdm011
            
            #add-point:AFTER FIELD xmdm011 name="construct.a.page3.xmdm011"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdm011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdm011
            #add-point:ON ACTION controlp INFIELD xmdm011 name="construct.c.page3.xmdm011"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdm012
            #add-point:BEFORE FIELD xmdm012 name="construct.b.page3.xmdm012"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdm012
            
            #add-point:AFTER FIELD xmdm012 name="construct.a.page3.xmdm012"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdm012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdm012
            #add-point:ON ACTION controlp INFIELD xmdm012 name="construct.c.page3.xmdm012"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdm013
            #add-point:BEFORE FIELD xmdm013 name="construct.b.page3.xmdm013"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdm013
            
            #add-point:AFTER FIELD xmdm013 name="construct.a.page3.xmdm013"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdm013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdm013
            #add-point:ON ACTION controlp INFIELD xmdm013 name="construct.c.page3.xmdm013"
                                                                                                            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdm014
            #add-point:BEFORE FIELD xmdm014 name="construct.b.page3.xmdm014"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdm014
            
            #add-point:AFTER FIELD xmdm014 name="construct.a.page3.xmdm014"
                                                                                                            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdm014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdm014
            #add-point:ON ACTION controlp INFIELD xmdm014 name="construct.c.page3.xmdm014"
                                                                                                            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      SUBDIALOG aoo_aooi360_01.aooi360_01_construct   #备注单身  #161031-00025#26
      #150120新增"客戶訂單號碼"  earl(s)
      CONSTRUCT l_form_wc ON xmda033 FROM s_detail1[1].xmda033
                      
         BEFORE CONSTRUCT
      
         ON ACTION controlp INFIELD xmda033
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
	   		LET g_qryparam.reqry = FALSE
            CALL q_xmda033()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda033  #顯示到畫面上
            NEXT FIELD xmda033
      
      END CONSTRUCT
      #150120新增"客戶訂單號碼"  earl(e)
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"

         #沒加的話第一個頁籤會無法construct
         LET g_xmdl_d[1].xmdlseq = ""
         DISPLAY ARRAY g_xmdl_d TO s_detail1.*
            BEFORE DISPLAY
               EXIT DISPLAY
         END DISPLAY

         #沒加的話第二個頁籤會無法construct
         LET g_xmdl3_d[1].xmdmseq = ""
         DISPLAY ARRAY g_xmdl3_d TO s_detail3.*
            BEFORE DISPLAY
               EXIT DISPLAY
         END DISPLAY

         #沒加的話第三個頁籤會無法construct
         LET g_xmdl2_d[1].xmdlseq = ""
         DISPLAY ARRAY g_xmdl2_d TO s_detail2.*
            BEFORE DISPLAY
               EXIT DISPLAY
         END DISPLAY

         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
            INITIALIZE g_wc2_table2 TO NULL
 
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "xmdk_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "xmdl_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "xmdm_t" 
                     LET g_wc2_table2 = la_wc[li_idx].wc
 
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
 
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   #150120新增"客戶訂單號碼"  earl(s)
   IF l_form_wc <> " 1=1" THEN
      LET g_wc2 = g_wc2," AND ",l_form_wc
      LET g_wc2_table1 = g_wc2_table1," AND xmdl003 IN (SELECT xmdadocno",
                                      "                   FROM xmda_t",
                                      "                  WHERE xmdaent = ",g_enterprise,
                                      "                    AND ",l_form_wc,")"
   END IF
   #150120新增"客戶訂單號碼"  earl(e)
   
   #xmdl
   IF (NOT cl_null(g_wc2_table2) AND g_wc2_table2.trim() <> '1=1') THEN
      LET g_wc2_table1 = g_wc2_table1," AND xmdlseq IN (SELECT xmdmseq",
                                      "                  FROM xmdm_t",
                                      "                 WHERE xmdment = xmdlent",
                                      "                   AND xmdmdocno = xmdldocno",
                                      "                   AND ",g_wc2_table2,")"
   END IF
   
   #xmdm
   IF (NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1') THEN
      LET g_wc2_table2 = g_wc2_table2," AND xmdmseq IN (SELECT xmdlseq",
                                      "                  FROM xmdl_t",
                                      "                 WHERE xmdlent = xmdment",
                                      "                   AND xmdldocno = xmdmdocno",
                                      "                   AND ",g_wc2_table1,")"
   END IF
   
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="axmt540.filter" >}
#應用 a50 樣板自動產生(Version:8)
#+ filter過濾功能
PRIVATE FUNCTION axmt540_filter()
   #add-point:filter段define name="filter.define_customerization"
   
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
                           
   #end add-point   
   
   #add-point:Function前置處理  name="filter.pre_function"
   
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON xmdkdocno,xmdk026,xmdk003,xmdk004,xmdk006,xmdk007,xmdk008,xmdk009
                          FROM s_browse[1].b_xmdkdocno,s_browse[1].b_xmdk026,s_browse[1].b_xmdk003,s_browse[1].b_xmdk004, 
                              s_browse[1].b_xmdk006,s_browse[1].b_xmdk007,s_browse[1].b_xmdk008,s_browse[1].b_xmdk009 
 
 
         BEFORE CONSTRUCT
               DISPLAY axmt540_filter_parser('xmdkdocno') TO s_browse[1].b_xmdkdocno
            DISPLAY axmt540_filter_parser('xmdk026') TO s_browse[1].b_xmdk026
            DISPLAY axmt540_filter_parser('xmdk003') TO s_browse[1].b_xmdk003
            DISPLAY axmt540_filter_parser('xmdk004') TO s_browse[1].b_xmdk004
            DISPLAY axmt540_filter_parser('xmdk006') TO s_browse[1].b_xmdk006
            DISPLAY axmt540_filter_parser('xmdk007') TO s_browse[1].b_xmdk007
            DISPLAY axmt540_filter_parser('xmdk008') TO s_browse[1].b_xmdk008
            DISPLAY axmt540_filter_parser('xmdk009') TO s_browse[1].b_xmdk009
      
         #add-point:filter段cs_ctrl name="filter.cs_ctrl"
         
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
                                                      
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
                                                                                 
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL axmt540_filter_show('xmdkdocno')
   CALL axmt540_filter_show('xmdk026')
   CALL axmt540_filter_show('xmdk003')
   CALL axmt540_filter_show('xmdk004')
   CALL axmt540_filter_show('xmdk006')
   CALL axmt540_filter_show('xmdk007')
   CALL axmt540_filter_show('xmdk008')
   CALL axmt540_filter_show('xmdk009')
 
END FUNCTION
 
{</section>}
 
{<section id="axmt540.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION axmt540_filter_parser(ps_field)
   #add-point:filter段define name="filter_parser.define_customerization"
   
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
                           
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="axmt540.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION axmt540_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = axmt540_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="axmt540.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION axmt540_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
                           
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_xmdl_d.clear()
   CALL g_xmdl2_d.clear()
   CALL g_xmdl3_d.clear()
 
   
   #add-point:query段other name="query.other"
   CALL aooi360_01_clear_detail()   #清除备注单身  #161031-00025#26 add                                
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL axmt540_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL axmt540_browser_fill("")
      CALL axmt540_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL axmt540_filter_show('xmdkdocno')
   CALL axmt540_filter_show('xmdk026')
   CALL axmt540_filter_show('xmdk003')
   CALL axmt540_filter_show('xmdk004')
   CALL axmt540_filter_show('xmdk006')
   CALL axmt540_filter_show('xmdk007')
   CALL axmt540_filter_show('xmdk008')
   CALL axmt540_filter_show('xmdk009')
   CALL axmt540_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "-100" 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
   ELSE
      CALL axmt540_fetch("F") 
      #顯示單身筆數
      CALL axmt540_idx_chk()
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="axmt540.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION axmt540_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
                           
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_xmdk_m.xmdkdocno = g_browser[g_current_idx].b_xmdkdocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE axmt540_master_referesh USING g_xmdk_m.xmdkdocno INTO g_xmdk_m.xmdk000,g_xmdk_m.xmdksite, 
       g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001,g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdkstus, 
       g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk007,g_xmdk_m.xmdk009,g_xmdk_m.xmdk008,g_xmdk_m.xmdk202, 
       g_xmdk_m.xmdk047,g_xmdk_m.xmdk002,g_xmdk_m.xmdk045,g_xmdk_m.xmdk032,g_xmdk_m.xmdk030,g_xmdk_m.xmdk028, 
       g_xmdk_m.xmdk029,g_xmdk_m.xmdk037,g_xmdk_m.xmdk034,g_xmdk_m.xmdk054,g_xmdk_m.xmdk039,g_xmdk_m.xmdk040, 
       g_xmdk_m.xmdk087,g_xmdk_m.xmdk021,g_xmdk_m.xmdk022,g_xmdk_m.xmdk023,g_xmdk_m.xmdk024,g_xmdk_m.xmdk020, 
       g_xmdk_m.xmdk025,g_xmdk_m.xmdk026,g_xmdk_m.xmdk027,g_xmdk_m.xmdk038,g_xmdk_m.xmdk055,g_xmdk_m.xmdk010, 
       g_xmdk_m.xmdk011,g_xmdk_m.xmdk012,g_xmdk_m.xmdk013,g_xmdk_m.xmdk014,g_xmdk_m.xmdk015,g_xmdk_m.xmdk016, 
       g_xmdk_m.xmdk017,g_xmdk_m.xmdk018,g_xmdk_m.xmdk019,g_xmdk_m.xmdk042,g_xmdk_m.xmdk043,g_xmdk_m.xmdk031, 
       g_xmdk_m.xmdk033,g_xmdk_m.xmdk044,g_xmdk_m.xmdk035,g_xmdk_m.xmdk046,g_xmdk_m.xmdk036,g_xmdk_m.xmdk083, 
       g_xmdk_m.xmdkownid,g_xmdk_m.xmdkowndp,g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtdp,g_xmdk_m.xmdkcrtdt, 
       g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmoddt,g_xmdk_m.xmdkcnfid,g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid, 
       g_xmdk_m.xmdkpstdt,g_xmdk_m.xmdk003_desc,g_xmdk_m.xmdk004_desc,g_xmdk_m.xmdk007_desc,g_xmdk_m.xmdk009_desc, 
       g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk202_desc,g_xmdk_m.xmdk030_desc,g_xmdk_m.xmdk034_desc,g_xmdk_m.xmdk039_desc, 
       g_xmdk_m.xmdk040_desc,g_xmdk_m.xmdk022_desc,g_xmdk_m.xmdk020_desc,g_xmdk_m.xmdk027_desc,g_xmdk_m.xmdk038_desc, 
       g_xmdk_m.xmdk010_desc,g_xmdk_m.xmdk011_desc,g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdk019_desc,g_xmdk_m.xmdkownid_desc, 
       g_xmdk_m.xmdkowndp_desc,g_xmdk_m.xmdkcrtid_desc,g_xmdk_m.xmdkcrtdp_desc,g_xmdk_m.xmdkmodid_desc, 
       g_xmdk_m.xmdkcnfid_desc,g_xmdk_m.xmdkpstid_desc
   
   #遮罩相關處理
   LET g_xmdk_m_mask_o.* =  g_xmdk_m.*
   CALL axmt540_xmdk_t_mask()
   LET g_xmdk_m_mask_n.* =  g_xmdk_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt540_set_act_visible()   
   CALL axmt540_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
 
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   LET g_ask = TRUE
   #end add-point
   
   #保存單頭舊值
   LET g_xmdk_m_t.* = g_xmdk_m.*
   LET g_xmdk_m_o.* = g_xmdk_m.*
   
   LET g_data_owner = g_xmdk_m.xmdkownid      
   LET g_data_dept  = g_xmdk_m.xmdkowndp
   
   #重新顯示   
   CALL axmt540_show()
 
   #應用 a56 樣板自動產生(Version:3)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
 
END FUNCTION
 
{</section>}
 
{<section id="axmt540.insert" >}
#+ 資料新增
PRIVATE FUNCTION axmt540_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
                           
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_xmdl_d.clear()   
   CALL g_xmdl2_d.clear()  
   CALL g_xmdl3_d.clear()  
 
 
   INITIALIZE g_xmdk_m.* TO NULL             #DEFAULT 設定
   
   LET g_xmdkdocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   CALL aooi360_01_clear_detail()   #清除备注单身  #161031-00025#26 add
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_xmdk_m.xmdkownid = g_user
      LET g_xmdk_m.xmdkowndp = g_dept
      LET g_xmdk_m.xmdkcrtid = g_user
      LET g_xmdk_m.xmdkcrtdp = g_dept 
      LET g_xmdk_m.xmdkcrtdt = cl_get_current()
      LET g_xmdk_m.xmdkmodid = g_user
      LET g_xmdk_m.xmdkmoddt = cl_get_current()
      LET g_xmdk_m.xmdkstus = 'N'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_xmdk_m.xmdk000 = "1"
      LET g_xmdk_m.xmdk002 = "1"
      LET g_xmdk_m.xmdk045 = "1"
      LET g_xmdk_m.xmdk028 = "N"
      LET g_xmdk_m.xmdk029 = "N"
      LET g_xmdk_m.xmdk087 = "N"
      LET g_xmdk_m.xmdk038 = "1"
      LET g_xmdk_m.xmdk014 = "N"
      LET g_xmdk_m.xmdk042 = "1"
      LET g_xmdk_m.xmdk043 = "1"
      LET g_xmdk_m.xmdk046 = "1"
      LET g_xmdk_m.xmdk083 = "N"
 
  
      #add-point:單頭預設值 name="insert.default"
      #161031-00025#26-s
      LET g_ooff001_d = '6'   #6.單據單頭備註
      LET g_ooff002_d = g_prog
      LET g_ooff003_d = ''    #单号
      LET g_ooff004_d = '0'     #项次
      LET g_ooff005_d = ' '
      LET g_ooff006_d = ' '
      LET g_ooff007_d = ' '
      LET g_ooff008_d = ' '
      LET g_ooff009_d = ' '
      LET g_ooff010_d = ' '
      LET g_ooff011_d = ' '
      #161031-00025#26-e
      LET g_xmdk_m.xmdksite = g_site
      LET g_xmdk_m.xmdkdocdt = g_today
      LET g_xmdk_m.xmdk001 = g_today
#      LET g_xmdk_m.xmdk032 = g_today   #mark--151118-00012 By shiun
      LET g_xmdk_m.xmdkstus = 'N'
      LET g_xmdk_m.xmdk026 = g_today
      
      LET g_xmdk_m.xmdk003 = g_user
      CALL s_desc_get_person_desc(g_xmdk_m.xmdk003) RETURNING g_xmdk_m.xmdk003_desc
      DISPLAY BY NAME g_xmdk_m.xmdk003_desc
      
      LET g_xmdk_m.xmdk004 = g_dept
      CALL s_desc_get_department_desc(g_xmdk_m.xmdk004) RETURNING g_xmdk_m.xmdk004_desc
      DISPLAY BY NAME g_xmdk_m.xmdk004_desc
      
      CALL s_desc_get_acc_desc('299',g_xmdk_m.xmdk038) RETURNING g_xmdk_m.xmdk038_desc
      DISPLAY BY NAME g_xmdk_m.xmdk038_desc
      #160623-00014#1-mod-(S)
#      CASE g_prog
#         WHEN 'axmt540'
#            LET g_xmdk_m.xmdk000 = "1"
#            LET g_xmdk_m.xmdk002 = "1"
#
#         WHEN 'axmt541'
#            LET g_xmdk_m.xmdk000 = "2"
#            LET g_xmdk_m.xmdk002 = "1"
#            
#         WHEN 'axmt542'
#            LET g_xmdk_m.xmdk000 = "1"
#            LET g_xmdk_m.xmdk002 = "8"
#            
#      END CASE
      CASE 
         WHEN g_prog MATCHES 'axmt540'
            LET g_xmdk_m.xmdk000 = "1"
            LET g_xmdk_m.xmdk002 = "1"
         WHEN g_prog MATCHES 'axmt541'
            LET g_xmdk_m.xmdk000 = "2"
            LET g_xmdk_m.xmdk002 = "1"
         WHEN g_prog MATCHES 'axmt542'
            LET g_xmdk_m.xmdk000 = "1"
            LET g_xmdk_m.xmdk002 = "8"
      END CASE
      #160623-00014#1-mod-(E)
      
      #add by lixiang 2015/12/30--begin---
      #若aoos020参数S-FIN-1003='3',xmdk087='Y';
      #若S-FIN-1003<>'3',xmdk087='N'
      IF cl_get_para(g_enterprise,g_site,'S-FIN-1003') = '3' THEN
         LET g_xmdk_m.xmdk087 = "Y"
      ELSE
         LET g_xmdk_m.xmdk087 = "N"
      END IF
      #add by lixiang 2015/12/30--end---
      
      INITIALIZE g_xmdk_m_t.* TO NULL
      INITIALIZE g_xmdk_m_o.* TO NULL
      
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_xmdk_m_t.* = g_xmdk_m.*
      LET g_xmdk_m_o.* = g_xmdk_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_xmdk_m.xmdkstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "UH"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unhold.png")
         WHEN "H"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/hold.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
    
      CALL axmt540_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
                                                      
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_xmdk_m.* TO NULL
         INITIALIZE g_xmdl_d TO NULL
         INITIALIZE g_xmdl2_d TO NULL
         INITIALIZE g_xmdl3_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         
         #end add-point 
         CALL axmt540_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_xmdl_d.clear()
      #CALL g_xmdl2_d.clear()
      #CALL g_xmdl3_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt540_set_act_visible()   
   CALL axmt540_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_xmdkdocno_t = g_xmdk_m.xmdkdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " xmdkent = " ||g_enterprise|| " AND",
                      " xmdkdocno = '", g_xmdk_m.xmdkdocno, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axmt540_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE axmt540_cl
   
   CALL axmt540_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE axmt540_master_referesh USING g_xmdk_m.xmdkdocno INTO g_xmdk_m.xmdk000,g_xmdk_m.xmdksite, 
       g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001,g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdkstus, 
       g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk007,g_xmdk_m.xmdk009,g_xmdk_m.xmdk008,g_xmdk_m.xmdk202, 
       g_xmdk_m.xmdk047,g_xmdk_m.xmdk002,g_xmdk_m.xmdk045,g_xmdk_m.xmdk032,g_xmdk_m.xmdk030,g_xmdk_m.xmdk028, 
       g_xmdk_m.xmdk029,g_xmdk_m.xmdk037,g_xmdk_m.xmdk034,g_xmdk_m.xmdk054,g_xmdk_m.xmdk039,g_xmdk_m.xmdk040, 
       g_xmdk_m.xmdk087,g_xmdk_m.xmdk021,g_xmdk_m.xmdk022,g_xmdk_m.xmdk023,g_xmdk_m.xmdk024,g_xmdk_m.xmdk020, 
       g_xmdk_m.xmdk025,g_xmdk_m.xmdk026,g_xmdk_m.xmdk027,g_xmdk_m.xmdk038,g_xmdk_m.xmdk055,g_xmdk_m.xmdk010, 
       g_xmdk_m.xmdk011,g_xmdk_m.xmdk012,g_xmdk_m.xmdk013,g_xmdk_m.xmdk014,g_xmdk_m.xmdk015,g_xmdk_m.xmdk016, 
       g_xmdk_m.xmdk017,g_xmdk_m.xmdk018,g_xmdk_m.xmdk019,g_xmdk_m.xmdk042,g_xmdk_m.xmdk043,g_xmdk_m.xmdk031, 
       g_xmdk_m.xmdk033,g_xmdk_m.xmdk044,g_xmdk_m.xmdk035,g_xmdk_m.xmdk046,g_xmdk_m.xmdk036,g_xmdk_m.xmdk083, 
       g_xmdk_m.xmdkownid,g_xmdk_m.xmdkowndp,g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtdp,g_xmdk_m.xmdkcrtdt, 
       g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmoddt,g_xmdk_m.xmdkcnfid,g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid, 
       g_xmdk_m.xmdkpstdt,g_xmdk_m.xmdk003_desc,g_xmdk_m.xmdk004_desc,g_xmdk_m.xmdk007_desc,g_xmdk_m.xmdk009_desc, 
       g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk202_desc,g_xmdk_m.xmdk030_desc,g_xmdk_m.xmdk034_desc,g_xmdk_m.xmdk039_desc, 
       g_xmdk_m.xmdk040_desc,g_xmdk_m.xmdk022_desc,g_xmdk_m.xmdk020_desc,g_xmdk_m.xmdk027_desc,g_xmdk_m.xmdk038_desc, 
       g_xmdk_m.xmdk010_desc,g_xmdk_m.xmdk011_desc,g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdk019_desc,g_xmdk_m.xmdkownid_desc, 
       g_xmdk_m.xmdkowndp_desc,g_xmdk_m.xmdkcrtid_desc,g_xmdk_m.xmdkcrtdp_desc,g_xmdk_m.xmdkmodid_desc, 
       g_xmdk_m.xmdkcnfid_desc,g_xmdk_m.xmdkpstid_desc
   
   
   #遮罩相關處理
   LET g_xmdk_m_mask_o.* =  g_xmdk_m.*
   CALL axmt540_xmdk_t_mask()
   LET g_xmdk_m_mask_n.* =  g_xmdk_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_xmdk_m.xmdk000,g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocno_desc,g_xmdk_m.xmdkdocdt, 
       g_xmdk_m.xmdk001,g_xmdk_m.xmdk003,g_xmdk_m.xmdk003_desc,g_xmdk_m.xmdk004,g_xmdk_m.xmdk004_desc, 
       g_xmdk_m.xmdkstus,g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk007,g_xmdk_m.xmdk007_desc,g_xmdk_m.xmdk009, 
       g_xmdk_m.xmdk009_desc,g_xmdk_m.xmdk008,g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk202,g_xmdk_m.xmdk202_desc, 
       g_xmdk_m.xmdk047,g_xmdk_m.xmdk002,g_xmdk_m.xmdk045,g_xmdk_m.xmdk032,g_xmdk_m.xmdk030,g_xmdk_m.xmdk030_desc, 
       g_xmdk_m.xmdk028,g_xmdk_m.xmdk029,g_xmdk_m.xmdk037,g_xmdk_m.xmdk034,g_xmdk_m.xmdk034_desc,g_xmdk_m.xmdk054, 
       g_xmdk_m.xmdk039,g_xmdk_m.xmdk039_desc,g_xmdk_m.xmdk040,g_xmdk_m.xmdk040_desc,g_xmdk_m.xmdk087, 
       g_xmdk_m.xmdk021,g_xmdk_m.xmdk021_desc,g_xmdk_m.address,g_xmdk_m.xmdk022,g_xmdk_m.xmdk022_desc, 
       g_xmdk_m.xmdk023,g_xmdk_m.xmdk023_desc,g_xmdk_m.xmdk024,g_xmdk_m.xmdk024_desc,g_xmdk_m.xmdk020, 
       g_xmdk_m.xmdk020_desc,g_xmdk_m.xmdk025,g_xmdk_m.xmdk026,g_xmdk_m.xmdk027,g_xmdk_m.xmdk027_desc, 
       g_xmdk_m.xmdk038,g_xmdk_m.xmdk038_desc,g_xmdk_m.xmdk055,g_xmdk_m.xmdk010,g_xmdk_m.xmdk010_desc, 
       g_xmdk_m.xmdk011,g_xmdk_m.xmdk011_desc,g_xmdk_m.xmdk012,g_xmdk_m.xmdk012_desc,g_xmdk_m.xmdk013, 
       g_xmdk_m.xmdk014,g_xmdk_m.xmdk015,g_xmdk_m.xmdk015_desc,g_xmdk_m.xmdk016,g_xmdk_m.xmdk016_desc, 
       g_xmdk_m.xmdk017,g_xmdk_m.xmdk018,g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdk019,g_xmdk_m.xmdk019_desc, 
       g_xmdk_m.xmdk042,g_xmdk_m.xmdk043,g_xmdk_m.xmdk031,g_xmdk_m.xmdk031_desc,g_xmdk_m.xmdk033,g_xmdk_m.xmdk033_desc, 
       g_xmdk_m.xmdk044,g_xmdk_m.xmdk035,g_xmdk_m.xmdk046,g_xmdk_m.xmdk036,g_xmdk_m.xmdk083,g_xmdk_m.xmdkownid, 
       g_xmdk_m.xmdkownid_desc,g_xmdk_m.xmdkowndp,g_xmdk_m.xmdkowndp_desc,g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtid_desc, 
       g_xmdk_m.xmdkcrtdp,g_xmdk_m.xmdkcrtdp_desc,g_xmdk_m.xmdkcrtdt,g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmodid_desc, 
       g_xmdk_m.xmdkmoddt,g_xmdk_m.xmdkcnfid,g_xmdk_m.xmdkcnfid_desc,g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid, 
       g_xmdk_m.xmdkpstid_desc,g_xmdk_m.xmdkpstdt
   
   #add-point:新增結束後 name="insert.after"
   CALL axmt540_show()  #161207-00033#30-add
   #end add-point 
   
   LET g_data_owner = g_xmdk_m.xmdkownid      
   LET g_data_dept  = g_xmdk_m.xmdkowndp
   
   #功能已完成,通報訊息中心
   CALL axmt540_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="axmt540.modify" >}
#+ 資料修改
PRIVATE FUNCTION axmt540_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING
 
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
                           
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   #保存單頭舊值
   LET g_xmdk_m_t.* = g_xmdk_m.*
   LET g_xmdk_m_o.* = g_xmdk_m.*
   
   IF g_xmdk_m.xmdkdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_xmdkdocno_t = g_xmdk_m.xmdkdocno
 
   CALL s_transaction_begin()
   
   OPEN axmt540_cl USING g_enterprise,g_xmdk_m.xmdkdocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axmt540_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE axmt540_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axmt540_master_referesh USING g_xmdk_m.xmdkdocno INTO g_xmdk_m.xmdk000,g_xmdk_m.xmdksite, 
       g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001,g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdkstus, 
       g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk007,g_xmdk_m.xmdk009,g_xmdk_m.xmdk008,g_xmdk_m.xmdk202, 
       g_xmdk_m.xmdk047,g_xmdk_m.xmdk002,g_xmdk_m.xmdk045,g_xmdk_m.xmdk032,g_xmdk_m.xmdk030,g_xmdk_m.xmdk028, 
       g_xmdk_m.xmdk029,g_xmdk_m.xmdk037,g_xmdk_m.xmdk034,g_xmdk_m.xmdk054,g_xmdk_m.xmdk039,g_xmdk_m.xmdk040, 
       g_xmdk_m.xmdk087,g_xmdk_m.xmdk021,g_xmdk_m.xmdk022,g_xmdk_m.xmdk023,g_xmdk_m.xmdk024,g_xmdk_m.xmdk020, 
       g_xmdk_m.xmdk025,g_xmdk_m.xmdk026,g_xmdk_m.xmdk027,g_xmdk_m.xmdk038,g_xmdk_m.xmdk055,g_xmdk_m.xmdk010, 
       g_xmdk_m.xmdk011,g_xmdk_m.xmdk012,g_xmdk_m.xmdk013,g_xmdk_m.xmdk014,g_xmdk_m.xmdk015,g_xmdk_m.xmdk016, 
       g_xmdk_m.xmdk017,g_xmdk_m.xmdk018,g_xmdk_m.xmdk019,g_xmdk_m.xmdk042,g_xmdk_m.xmdk043,g_xmdk_m.xmdk031, 
       g_xmdk_m.xmdk033,g_xmdk_m.xmdk044,g_xmdk_m.xmdk035,g_xmdk_m.xmdk046,g_xmdk_m.xmdk036,g_xmdk_m.xmdk083, 
       g_xmdk_m.xmdkownid,g_xmdk_m.xmdkowndp,g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtdp,g_xmdk_m.xmdkcrtdt, 
       g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmoddt,g_xmdk_m.xmdkcnfid,g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid, 
       g_xmdk_m.xmdkpstdt,g_xmdk_m.xmdk003_desc,g_xmdk_m.xmdk004_desc,g_xmdk_m.xmdk007_desc,g_xmdk_m.xmdk009_desc, 
       g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk202_desc,g_xmdk_m.xmdk030_desc,g_xmdk_m.xmdk034_desc,g_xmdk_m.xmdk039_desc, 
       g_xmdk_m.xmdk040_desc,g_xmdk_m.xmdk022_desc,g_xmdk_m.xmdk020_desc,g_xmdk_m.xmdk027_desc,g_xmdk_m.xmdk038_desc, 
       g_xmdk_m.xmdk010_desc,g_xmdk_m.xmdk011_desc,g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdk019_desc,g_xmdk_m.xmdkownid_desc, 
       g_xmdk_m.xmdkowndp_desc,g_xmdk_m.xmdkcrtid_desc,g_xmdk_m.xmdkcrtdp_desc,g_xmdk_m.xmdkmodid_desc, 
       g_xmdk_m.xmdkcnfid_desc,g_xmdk_m.xmdkpstid_desc
   
   #檢查是否允許此動作
   IF NOT axmt540_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_xmdk_m_mask_o.* =  g_xmdk_m.*
   CALL axmt540_xmdk_t_mask()
   LET g_xmdk_m_mask_n.* =  g_xmdk_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
 
 
   
   CALL axmt540_show()
   #add-point:modify段show之後 name="modify.after_show"
   
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 
 
 
 
    
   WHILE TRUE
      LET g_xmdkdocno_t = g_xmdk_m.xmdkdocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_xmdk_m.xmdkmodid = g_user 
LET g_xmdk_m.xmdkmoddt = cl_get_current()
LET g_xmdk_m.xmdkmodid_desc = cl_get_username(g_xmdk_m.xmdkmodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      #「D抽單 / R已拒絕」狀況碼更改資料後，需還原為「N未確認」
      IF g_xmdk_m.xmdkstus MATCHES "[DR]" THEN 
         LET g_xmdk_m.xmdkstus = "N"
      END IF
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL axmt540_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
                                                      
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE xmdk_t SET (xmdkmodid,xmdkmoddt) = (g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmoddt)
          WHERE xmdkent = g_enterprise AND xmdkdocno = g_xmdkdocno_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_xmdk_m.* = g_xmdk_m_t.*
            CALL axmt540_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_xmdk_m.xmdkdocno != g_xmdk_m_t.xmdkdocno
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
                                                                                 
         #end add-point
         
         #更新單身key值
         UPDATE xmdl_t SET xmdldocno = g_xmdk_m.xmdkdocno
 
          WHERE xmdlent = g_enterprise AND xmdldocno = g_xmdk_m_t.xmdkdocno
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
                                                                                 
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "xmdl_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmdl_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
                                                                                 
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update2"
                                                                                 
         #end add-point
         
         UPDATE xmdm_t
            SET xmdmdocno = g_xmdk_m.xmdkdocno
 
          WHERE xmdment = g_enterprise AND
                xmdmdocno = g_xmdkdocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update2"
                                                                                 
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "xmdm_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmdm_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update2"
                                                                                 
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt540_set_act_visible()   
   CALL axmt540_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " xmdkent = " ||g_enterprise|| " AND",
                      " xmdkdocno = '", g_xmdk_m.xmdkdocno, "' "
 
   #填到對應位置
   CALL axmt540_browser_fill("")
 
   CLOSE axmt540_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL axmt540_msgcentre_notify('modify')
 
END FUNCTION 
 
{</section>}
 
{<section id="axmt540.input" >}
#+ 資料輸入
PRIVATE FUNCTION axmt540_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE l_success              LIKE type_t.num5
   DEFINE l_rollback             LIKE type_t.num5
   DEFINE l_para_data            LIKE type_t.chr80      #接參數用
   DEFINE l_ooef004              LIKE ooef_t.ooef004    #單據別參照表號
   DEFINE l_flag                 LIKE type_t.num5
   DEFINE l_xmdg001              LIKE xmdg_t.xmdg001    #出通單出貨性質
   DEFINE l_xmda005              LIKE xmda_t.xmda005    #訂單性質
   DEFINE l_gzcb004              LIKE gzcb_t.gzcb004
   DEFINE l_where                STRING                 #單據別過濾sql條件
   DEFINE l_where1               STRING                 #單據別過濾sql條件
   DEFINE l_oocq019              LIKE oocq_t.oocq019    #運輸方式
   DEFINE l_imaa005              LIKE imaa_t.imaa005    #產品特徵
   DEFINE l_inam              DYNAMIC ARRAY OF RECORD   #紀錄產品特徵
             inam001             LIKE inam_t.inam001,
             inam002             LIKE inam_t.inam002,
             inam004             LIKE inam_t.inam004
                              END RECORD
   DEFINE l_xmdlseq              LIKE xmdl_t.xmdlseq

   DEFINE l_xmdh011              LIKE xmdh_t.xmdh011
   DEFINE l_num                  LIKE xmdl_t.xmdl018
   DEFINE l_xmdlseq_backup       LIKE xmdl_t.xmdlseq    #紀錄新增多庫儲批時的項次
   
   DEFINE l_oodb002              LIKE oodb_t.oodb002    #稅別
   DEFINE l_oodb005              LIKE oodb_t.oodb005    #含稅否
   DEFINE l_oodb006              LIKE oodb_t.oodb006    #稅率
   DEFINE l_oodbl004             LIKE oodbl_t.oodbl004  #稅率說明
   DEFINE l_oodb011              LIKE oodb_t.oodb011    #稅別應用
   
   DEFINE l_ooef019              LIKE ooef_t.ooef019    #稅區
   DEFINE l_xmdl033              LIKE xmdl_t.xmdl033    #客戶料號
   DEFINE l_xmdl008              LIKE xmdl_t.xmdl008
   DEFINE l_xmdl009              LIKE xmdl_t.xmdl009
   DEFINE l_xmdk017              LIKE xmdk_t.xmdk017
   
   DEFINE l_xmdl014              LIKE xmdl_t.xmdl014
   DEFINE l_xmdl015              LIKE xmdl_t.xmdl015
   DEFINE l_xmdl016              LIKE xmdl_t.xmdl016
   DEFINE l_xmdl052              LIKE xmdl_t.xmdl052
   DEFINE l_msg                  LIKE type_t.chr10
   
   #151209-00018#1  2015/12/10 By earl add s
   DEFINE l_price   RECORD
      source           LIKE xmdc_t.xmdc040,
      docno            LIKE xmdc_t.xmdcdocno,
      seq              LIKE xmdc_t.xmdcseq,
      price            LIKE xmdc_t.xmdc043
      
                    END RECORD
   #151209-00018#1  2015/12/10 By earl add e
   DEFINE l_msg1                 LIKE gzze_t.gzze003   #160621-00003#3 20160629 add by beckxie
   DEFINE l_imaf055     LIKE imaf_t.imaf055  #160519-00008#8
   DEFINE l_imaf061     LIKE imaf_t.imaf061  #160519-00008#8
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   #160621-00003#3 20160629 add by beckxie---S
   LET l_msg1 = ''
   SELECT gzze003 INTO l_msg1 FROM gzze_t WHERE gzze001 = 'aoo-00708' AND gzze002 = g_dlang 
   #160621-00003#3 20160629 add by beckxie---E
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xmdk_m.xmdk000,g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocno_desc,g_xmdk_m.xmdkdocdt, 
       g_xmdk_m.xmdk001,g_xmdk_m.xmdk003,g_xmdk_m.xmdk003_desc,g_xmdk_m.xmdk004,g_xmdk_m.xmdk004_desc, 
       g_xmdk_m.xmdkstus,g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk007,g_xmdk_m.xmdk007_desc,g_xmdk_m.xmdk009, 
       g_xmdk_m.xmdk009_desc,g_xmdk_m.xmdk008,g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk202,g_xmdk_m.xmdk202_desc, 
       g_xmdk_m.xmdk047,g_xmdk_m.xmdk002,g_xmdk_m.xmdk045,g_xmdk_m.xmdk032,g_xmdk_m.xmdk030,g_xmdk_m.xmdk030_desc, 
       g_xmdk_m.xmdk028,g_xmdk_m.xmdk029,g_xmdk_m.xmdk037,g_xmdk_m.xmdk034,g_xmdk_m.xmdk034_desc,g_xmdk_m.xmdk054, 
       g_xmdk_m.xmdk039,g_xmdk_m.xmdk039_desc,g_xmdk_m.xmdk040,g_xmdk_m.xmdk040_desc,g_xmdk_m.xmdk087, 
       g_xmdk_m.xmdk021,g_xmdk_m.xmdk021_desc,g_xmdk_m.address,g_xmdk_m.xmdk022,g_xmdk_m.xmdk022_desc, 
       g_xmdk_m.xmdk023,g_xmdk_m.xmdk023_desc,g_xmdk_m.xmdk024,g_xmdk_m.xmdk024_desc,g_xmdk_m.xmdk020, 
       g_xmdk_m.xmdk020_desc,g_xmdk_m.xmdk025,g_xmdk_m.xmdk026,g_xmdk_m.xmdk027,g_xmdk_m.xmdk027_desc, 
       g_xmdk_m.xmdk038,g_xmdk_m.xmdk038_desc,g_xmdk_m.xmdk055,g_xmdk_m.xmdk010,g_xmdk_m.xmdk010_desc, 
       g_xmdk_m.xmdk011,g_xmdk_m.xmdk011_desc,g_xmdk_m.xmdk012,g_xmdk_m.xmdk012_desc,g_xmdk_m.xmdk013, 
       g_xmdk_m.xmdk014,g_xmdk_m.xmdk015,g_xmdk_m.xmdk015_desc,g_xmdk_m.xmdk016,g_xmdk_m.xmdk016_desc, 
       g_xmdk_m.xmdk017,g_xmdk_m.xmdk018,g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdk019,g_xmdk_m.xmdk019_desc, 
       g_xmdk_m.xmdk042,g_xmdk_m.xmdk043,g_xmdk_m.xmdk031,g_xmdk_m.xmdk031_desc,g_xmdk_m.xmdk033,g_xmdk_m.xmdk033_desc, 
       g_xmdk_m.xmdk044,g_xmdk_m.xmdk035,g_xmdk_m.xmdk046,g_xmdk_m.xmdk036,g_xmdk_m.xmdk083,g_xmdk_m.xmdkownid, 
       g_xmdk_m.xmdkownid_desc,g_xmdk_m.xmdkowndp,g_xmdk_m.xmdkowndp_desc,g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtid_desc, 
       g_xmdk_m.xmdkcrtdp,g_xmdk_m.xmdkcrtdp_desc,g_xmdk_m.xmdkcrtdt,g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmodid_desc, 
       g_xmdk_m.xmdkmoddt,g_xmdk_m.xmdkcnfid,g_xmdk_m.xmdkcnfid_desc,g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid, 
       g_xmdk_m.xmdkpstid_desc,g_xmdk_m.xmdkpstdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
                           
   #end add-point 
   LET g_forupd_sql = "SELECT xmdlsite,xmdlseq,xmdl001,xmdl002,xmdl003,xmdl004,xmdl005,xmdl006,xmdl007, 
       xmdl008,xmdl009,xmdl033,xmdl011,xmdl012,xmdl017,xmdl018,xmdl019,xmdl020,xmdl010,xmdl013,xmdl014, 
       xmdl015,xmdl016,xmdl052,xmdl021,xmdl022,xmdl050,xmdl023,xmdl041,xmdl030,xmdl031,xmdl032,xmdl051, 
       xmdl035,xmdl036,xmdl037,xmdl056,xmdl088,xmdl034,xmdlseq,xmdl024,xmdl025,xmdl026,xmdl027,xmdl028, 
       xmdl029,xmdl042,xmdl043,xmdl044,xmdl045,xmdl046,xmdl087 FROM xmdl_t WHERE xmdlent=? AND xmdldocno=?  
       AND xmdlseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
                           
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt540_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql name="input.define_sql2"
                           
   #end add-point    
   LET g_forupd_sql = "SELECT xmdmsite,xmdmseq,xmdmseq1,xmdm001,xmdm002,xmdm003,xmdm004,xmdm005,xmdm006, 
       xmdm007,xmdm033,xmdm008,xmdm009,xmdm010,xmdm011,xmdm012,xmdm013,xmdm014 FROM xmdm_t WHERE xmdment=?  
       AND xmdmdocno=? AND xmdmseq=? AND xmdmseq1=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql2"
                           
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axmt540_bcl2 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql name="input.other_sql"
                           
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL axmt540_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   #將單身輸入權限放入共用變數給嵌入的子程式用, 若子程式要自己控管, 還是可以從子程式中覆蓋掉值
   #161031-00025#26-s
   LET g_detail_insert = l_allow_insert
   LET g_detail_delete = l_allow_delete
   #161031-00025#26-e
   CALL axmt540_set_no_required(p_cmd)
   CALL axmt540_set_required(p_cmd)
   #end add-point
   CALL axmt540_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_xmdk_m.xmdk000,g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001, 
       g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdkstus,g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk007, 
       g_xmdk_m.xmdk009,g_xmdk_m.xmdk008,g_xmdk_m.xmdk202,g_xmdk_m.xmdk047,g_xmdk_m.xmdk002,g_xmdk_m.xmdk045, 
       g_xmdk_m.xmdk032,g_xmdk_m.xmdk030,g_xmdk_m.xmdk028,g_xmdk_m.xmdk029,g_xmdk_m.xmdk034,g_xmdk_m.xmdk054, 
       g_xmdk_m.xmdk039,g_xmdk_m.xmdk040,g_xmdk_m.xmdk087,g_xmdk_m.xmdk021,g_xmdk_m.address,g_xmdk_m.xmdk022, 
       g_xmdk_m.xmdk023,g_xmdk_m.xmdk024,g_xmdk_m.xmdk020,g_xmdk_m.xmdk025,g_xmdk_m.xmdk026,g_xmdk_m.xmdk027, 
       g_xmdk_m.xmdk038,g_xmdk_m.xmdk055,g_xmdk_m.xmdk010,g_xmdk_m.xmdk011,g_xmdk_m.xmdk012,g_xmdk_m.xmdk013, 
       g_xmdk_m.xmdk014,g_xmdk_m.xmdk015,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,g_xmdk_m.xmdk018,g_xmdk_m.xmdk019, 
       g_xmdk_m.xmdk042,g_xmdk_m.xmdk043,g_xmdk_m.xmdk031,g_xmdk_m.xmdk033,g_xmdk_m.xmdk044,g_xmdk_m.xmdk035, 
       g_xmdk_m.xmdk046,g_xmdk_m.xmdk036
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
 
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="axmt540.input.head" >}
      #單頭段
      INPUT BY NAME g_xmdk_m.xmdk000,g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001, 
          g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdkstus,g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk007, 
          g_xmdk_m.xmdk009,g_xmdk_m.xmdk008,g_xmdk_m.xmdk202,g_xmdk_m.xmdk047,g_xmdk_m.xmdk002,g_xmdk_m.xmdk045, 
          g_xmdk_m.xmdk032,g_xmdk_m.xmdk030,g_xmdk_m.xmdk028,g_xmdk_m.xmdk029,g_xmdk_m.xmdk034,g_xmdk_m.xmdk054, 
          g_xmdk_m.xmdk039,g_xmdk_m.xmdk040,g_xmdk_m.xmdk087,g_xmdk_m.xmdk021,g_xmdk_m.address,g_xmdk_m.xmdk022, 
          g_xmdk_m.xmdk023,g_xmdk_m.xmdk024,g_xmdk_m.xmdk020,g_xmdk_m.xmdk025,g_xmdk_m.xmdk026,g_xmdk_m.xmdk027, 
          g_xmdk_m.xmdk038,g_xmdk_m.xmdk055,g_xmdk_m.xmdk010,g_xmdk_m.xmdk011,g_xmdk_m.xmdk012,g_xmdk_m.xmdk013, 
          g_xmdk_m.xmdk014,g_xmdk_m.xmdk015,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,g_xmdk_m.xmdk018,g_xmdk_m.xmdk019, 
          g_xmdk_m.xmdk042,g_xmdk_m.xmdk043,g_xmdk_m.xmdk031,g_xmdk_m.xmdk033,g_xmdk_m.xmdk044,g_xmdk_m.xmdk035, 
          g_xmdk_m.xmdk046,g_xmdk_m.xmdk036 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN axmt540_cl USING g_enterprise,g_xmdk_m.xmdkdocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axmt540_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE axmt540_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL axmt540_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            
            CALL cl_showmsg_init()
            
            CALL axmt540_set_no_required(p_cmd)
            CALL axmt540_set_required(p_cmd)
            #end add-point
            CALL axmt540_set_no_entry(p_cmd)
    
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk000
            #add-point:BEFORE FIELD xmdk000 name="input.b.xmdk000"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk000
            
            #add-point:AFTER FIELD xmdk000 name="input.a.xmdk000"
                                                                                                            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk000
            #add-point:ON CHANGE xmdk000 name="input.g.xmdk000"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdksite
            #add-point:BEFORE FIELD xmdksite name="input.b.xmdksite"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdksite
            
            #add-point:AFTER FIELD xmdksite name="input.a.xmdksite"
                                                                                                            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdksite
            #add-point:ON CHANGE xmdksite name="input.g.xmdksite"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdkdocno
            
            #add-point:AFTER FIELD xmdkdocno name="input.a.xmdkdocno"
            CALL s_aooi200_get_slip_desc(g_xmdk_m.xmdkdocno) RETURNING g_xmdk_m.xmdkdocno_desc
            DISPLAY BY NAME g_xmdk_m.xmdkdocno_desc
   
            IF cl_null(g_xmdk_m.xmdkdocno) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'sub-00324'   #單號欄位不可為空！
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

               NEXT FIELD CURRENT
            END IF

            #重複性檢查
            IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xmdk_m.xmdkdocno != g_xmdkdocno_t )) THEN
               IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmdk_t WHERE "||"xmdkent = '" ||g_enterprise|| "' AND "||"xmdkdocno = '"||g_xmdk_m.xmdkdocno ||"'",'std-00004',0) THEN
                  LET g_xmdk_m.xmdkdocno = g_xmdkdocno_t
                  CALL s_aooi200_get_slip_desc(g_xmdk_m.xmdkdocno) RETURNING g_xmdk_m.xmdkdocno_desc
                  DISPLAY BY NAME g_xmdk_m.xmdkdocno_desc                  
                  
                  NEXT FIELD CURRENT
               END IF
            END IF

            IF g_xmdk_m.xmdkdocno <> g_xmdk_m_o.xmdkdocno OR cl_null(g_xmdk_m_o.xmdkdocno) THEN
               #檢查單別
               IF NOT s_aooi200_chk_slip(g_site,'',g_xmdk_m.xmdkdocno,g_prog) THEN
                  LET g_xmdk_m.xmdkdocno = g_xmdk_m_o.xmdkdocno

                  CALL s_aooi200_get_slip_desc(g_xmdk_m.xmdkdocno) RETURNING g_xmdk_m.xmdkdocno_desc
                  DISPLAY BY NAME g_xmdk_m.xmdkdocno_desc

                  NEXT FIELD CURRENT
               END IF
            
               #檢核輸入的單據別是否可以被key人員對應的控制組使用,'2' 為銷售控制組類型
               CALL s_control_chk_doc('1',g_xmdk_m.xmdkdocno,'2',g_user,g_dept,'','') RETURNING l_success,l_flag
               IF NOT l_success OR NOT l_flag THEN
                  LET g_xmdk_m.xmdkdocno = g_xmdk_m_o.xmdkdocno

                  CALL s_aooi200_get_slip_desc(g_xmdk_m.xmdkdocno) RETURNING g_xmdk_m.xmdkdocno_desc
                  DISPLAY BY NAME g_xmdk_m.xmdkdocno_desc

                  NEXT FIELD CURRENT
               END IF

#               IF NOT cl_null(g_xmdk_m.xmdk005) THEN  #已輸入出通單
#                  #檢核前後置單別的合理性
#                  IF NOT s_aooi210_check_doc(g_site,'',g_xmdk_m.xmdk005,g_xmdk_m.xmdkdocno,'3','') THEN
#                     LET g_xmdk_m.xmdkdocno = g_xmdk_m_o.xmdkdocno
#
#                     CALL s_aooi200_get_slip_desc(g_xmdk_m.xmdkdocno) RETURNING g_xmdk_m.xmdkdocno_desc
#                     DISPLAY BY NAME g_xmdk_m.xmdkdocno_desc
#
#                     NEXT FIELD CURRENT
#                  END IF
#               ELSE
#                  IF NOT cl_null(g_xmdk_m.xmdk006) THEN  #已輸入訂單
#                     #檢核前後置單別的合理性
#                     IF NOT s_aooi210_check_doc(g_site,'',g_xmdk_m.xmdk006,g_xmdk_m.xmdkdocno,'3','') THEN
#                        LET g_xmdk_m.xmdkdocno = g_xmdk_m_o.xmdkdocno
#
#                        CALL s_aooi200_get_slip_desc(g_xmdk_m.xmdkdocno) RETURNING g_xmdk_m.xmdkdocno_desc
#                        DISPLAY BY NAME g_xmdk_m.xmdkdocno_desc
#
#                        NEXT FIELD CURRENT
#                     END IF               
#                  END IF
#               END IF

               #客戶編號檢查
               IF NOT cl_null(g_xmdk_m.xmdk007) THEN               
                  IF NOT s_axmt540_client_chk(g_xmdk_m.xmdkdocno,'1',g_xmdk_m.xmdk007,'') THEN
                     LET g_xmdk_m.xmdkdocno = g_xmdk_m_o.xmdkdocno

                     CALL s_aooi200_get_slip_desc(g_xmdk_m.xmdkdocno) RETURNING g_xmdk_m.xmdkdocno_desc
                     DISPLAY BY NAME g_xmdk_m.xmdkdocno_desc
                  
                     NEXT FIELD CURRENT
                  END IF
               END IF

               LET g_xmdk_m.xmdk005 = ''  #出通單號為空
               LET g_xmdk_m.xmdk006 = ''  #訂單單號清空
               LET g_xmdk_m.xmdk018 = ''  #取價方式
               LET g_xmdk_m.xmdk034 = ''  #留置原因
               LET g_xmdk_m.xmdk035 = ''  #多角序號
               LET g_xmdk_m.xmdk036 = ''  #POS單號
               LET g_xmdk_m.xmdk037 = ''  #發票號碼
               LET g_xmdk_m.xmdk083 = 'N' #多角貿易已拋轉
             
               DISPLAY BY NAME g_xmdk_m.xmdk005
               DISPLAY BY NAME g_xmdk_m.xmdk006
               DISPLAY BY NAME g_xmdk_m.xmdk018
               DISPLAY BY NAME g_xmdk_m.xmdk034
               DISPLAY BY NAME g_xmdk_m.xmdk035
               DISPLAY BY NAME g_xmdk_m.xmdk036
               DISPLAY BY NAME g_xmdk_m.xmdk037
               DISPLAY BY NAME g_xmdk_m.xmdk083
               
               CALL axmt540_xmdk018_ref()
               CALL s_desc_get_acc_desc('297',g_xmdk_m.xmdk034) RETURNING g_xmdk_m.xmdk034_desc
               DISPLAY BY NAME g_xmdk_m.xmdk034_desc
               
               #單據別預設欄位
               CALL axmt540_doc_default()            
            END IF
            
            LET g_xmdk_m_o.xmdkdocno = g_xmdk_m.xmdkdocno

            CALL axmt540_set_entry(p_cmd)
            CALL axmt540_set_no_required(p_cmd)
            CALL axmt540_set_required(p_cmd)
            CALL axmt540_set_no_entry(p_cmd)
                      
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdkdocno
            #add-point:BEFORE FIELD xmdkdocno name="input.b.xmdkdocno"
                                                                                                
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdkdocno
            #add-point:ON CHANGE xmdkdocno name="input.g.xmdkdocno"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdkdocdt
            #add-point:BEFORE FIELD xmdkdocdt name="input.b.xmdkdocdt"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdkdocdt
            
            #add-point:AFTER FIELD xmdkdocdt name="input.a.xmdkdocdt"
            IF NOT cl_null(g_xmdk_m.xmdkdocdt) THEN
               IF g_xmdk_m.xmdkdocdt <> g_xmdk_m_o.xmdkdocdt OR cl_null(g_xmdk_m_o.xmdkdocdt) THEN
               
                  IF NOT axmt540_xmdkdocdt_xmdk001_chk() THEN
                     LET g_xmdk_m.xmdkdocdt = g_xmdk_m_o.xmdkdocdt
                     
                     NEXT FIELD CURRENT
                  END IF
                  
               END IF
            END IF
            
            LET g_xmdk_m_o.xmdkdocdt = g_xmdk_m.xmdkdocdt
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdkdocdt
            #add-point:ON CHANGE xmdkdocdt name="input.g.xmdkdocdt"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk001
            #add-point:BEFORE FIELD xmdk001 name="input.b.xmdk001"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk001
            
            #add-point:AFTER FIELD xmdk001 name="input.a.xmdk001"
            
            IF NOT cl_null(g_xmdk_m.xmdk001) THEN
               IF g_xmdk_m.xmdk001 <> g_xmdk_m_o.xmdk001 OR cl_null(g_xmdk_m_o.xmdk001) THEN
                  
                  IF NOT axmt540_xmdkdocdt_xmdk001_chk() THEN
                     LET g_xmdk_m.xmdk001 = g_xmdk_m_o.xmdk001
                     NEXT FIELD CURRENT
                  END IF
                  
                  CALL cl_get_para(g_enterprise,g_site,'S-MFG-0031') RETURNING l_para_data
                  IF g_xmdk_m.xmdk001 <= l_para_data THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'axm-00077'   #扣帳日期小於關帳日期，請重新輸入！
                     LET g_errparam.extend = g_xmdk_m.xmdk001
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_xmdk_m.xmdk001 = g_xmdk_m_o.xmdk001
                     NEXT FIELD CURRENT
                  END IF
                  
               END IF
            END IF
            
            LET g_xmdk_m_o.xmdk001 = g_xmdk_m.xmdk001            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk001
            #add-point:ON CHANGE xmdk001 name="input.g.xmdk001"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk003
            
            #add-point:AFTER FIELD xmdk003 name="input.a.xmdk003"
            CALL s_desc_get_person_desc(g_xmdk_m.xmdk003) RETURNING g_xmdk_m.xmdk003_desc
            DISPLAY BY NAME g_xmdk_m.xmdk003_desc

            IF NOT cl_null(g_xmdk_m.xmdk003) THEN
               IF g_xmdk_m.xmdk003 <> g_xmdk_m_o.xmdk003 OR cl_null(g_xmdk_m_o.xmdk003) THEN
               
                  IF NOT s_employee_chk(g_xmdk_m.xmdk003) THEN
                     LET g_xmdk_m.xmdk003 = g_xmdk_m_o.xmdk003

                     CALL s_desc_get_person_desc(g_xmdk_m.xmdk003) RETURNING g_xmdk_m.xmdk003_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk003_desc

                     NEXT FIELD CURRENT
                  END IF            
               
                  #帶出歸屬部門ooag003
                  SELECT ooag003 INTO g_xmdk_m.xmdk004
                    FROM ooag_t
                   WHERE ooagent = g_enterprise
                     AND ooag001 = g_xmdk_m.xmdk003
               
                  LET g_xmdk_m_o.xmdk004 = g_xmdk_m.xmdk004
                  DISPLAY BY NAME g_xmdk_m.xmdk004

                  CALL s_desc_get_department_desc(g_xmdk_m.xmdk004) RETURNING g_xmdk_m.xmdk004_desc
                  DISPLAY BY NAME g_xmdk_m.xmdk004_desc

               END IF
            END IF

            LET g_xmdk_m_o.xmdk003 = g_xmdk_m.xmdk003
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk003
            #add-point:BEFORE FIELD xmdk003 name="input.b.xmdk003"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk003
            #add-point:ON CHANGE xmdk003 name="input.g.xmdk003"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk004
            
            #add-point:AFTER FIELD xmdk004 name="input.a.xmdk004"

            CALL s_desc_get_department_desc(g_xmdk_m.xmdk004) RETURNING g_xmdk_m.xmdk004_desc
            DISPLAY BY NAME g_xmdk_m.xmdk004_desc

            IF NOT cl_null(g_xmdk_m.xmdk004) THEN 
               IF g_xmdk_m.xmdk004 <> g_xmdk_m_o.xmdk004 OR cl_null(g_xmdk_m_o.xmdk004) THEN

                  IF NOT s_department_chk(g_xmdk_m.xmdk004,g_xmdk_m.xmdkdocdt) THEN
                     LET g_xmdk_m.xmdk004 = g_xmdk_m_o.xmdk004

                     CALL s_desc_get_department_desc(g_xmdk_m.xmdk004) RETURNING g_xmdk_m.xmdk004_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk004_desc

                     NEXT FIELD CURRENT
                  END IF  
                  #170119-00008#5  2017/01/23 By 08171 --s add 
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmdk_m.xmdk004    
                  LET g_chkparam.arg2 = g_xmdk_m.xmdkdocdt
                  LET g_errshow = TRUE #是否開窗
                  LET g_chkparam.err_str[1] = "aoo-00029:sub-01302|aooi125|",cl_get_progname("aooi125",g_lang,"2"),"|:EXEPROGaooi125"                  
                  IF NOT cl_chk_exist("v_ooeg001") THEN   
                     LET g_xmdk_m.xmdk004 = g_xmdk_m_o.xmdk004

                     CALL s_desc_get_department_desc(g_xmdk_m.xmdk004) RETURNING g_xmdk_m.xmdk004_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk004_desc

                     NEXT FIELD CURRENT
                  END IF                  
                  #170119-00008#5  2017/01/23 By 08171 --e add                  
               END IF
            END IF 

            LET g_xmdk_m_o.xmdk004 = g_xmdk_m.xmdk004
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk004
            #add-point:BEFORE FIELD xmdk004 name="input.b.xmdk004"
            IF cl_null(g_xmdk_m.xmdkdocdt) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'sub-00508'  #單據日期不可為空!
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               
               CALL cl_err()
               NEXT FIELD xmdkdocdt
            END IF
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk004
            #add-point:ON CHANGE xmdk004 name="input.g.xmdk004"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdkstus
            #add-point:BEFORE FIELD xmdkstus name="input.b.xmdkstus"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdkstus
            
            #add-point:AFTER FIELD xmdkstus name="input.a.xmdkstus"
                                                                                                            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdkstus
            #add-point:ON CHANGE xmdkstus name="input.g.xmdkstus"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk005
            #add-point:BEFORE FIELD xmdk005 name="input.b.xmdk005"
 
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk005
            
            #add-point:AFTER FIELD xmdk005 name="input.a.xmdk005"
            
            IF NOT cl_null(g_xmdk_m.xmdk005) THEN
               IF g_xmdk_m.xmdk005 <> g_xmdk_m_o.xmdk005 OR cl_null(g_xmdk_m_o.xmdk005) THEN
                  
                  IF NOT axmt540_notice_chk(g_xmdk_m.xmdk005,'1') THEN
                     LET g_xmdk_m.xmdk005 = g_xmdk_m_o.xmdk005                  
                     NEXT FIELD CURRENT
                  END IF
                                                            
                  CALL axmt540_source_default(g_xmdk_m.xmdk005,'1')    #帶出出通單單頭
               END IF
               
            ELSE
               #NoEntry欄位清空
               LET g_xmdk_m.xmdk006 = ''  #訂單單號清空
               LET g_xmdk_m_o.xmdk006 = g_xmdk_m.xmdk006
               DISPLAY BY NAME g_xmdk_m.xmdk006
               
               LET g_xmdk_m.xmdk018 = ''  #取價方式
               LET g_xmdk_m_o.xmdk018 = g_xmdk_m.xmdk018               
               DISPLAY BY NAME g_xmdk_m.xmdk018
               CALL axmt540_xmdk018_ref()               
               
               LET g_xmdk_m.xmdk034 = ''  #留置原因
               LET g_xmdk_m_o.xmdk034 = g_xmdk_m.xmdk034
               DISPLAY BY NAME g_xmdk_m.xmdk034

               CALL s_desc_get_acc_desc('297',g_xmdk_m.xmdk034) RETURNING g_xmdk_m.xmdk034_desc
               DISPLAY BY NAME g_xmdk_m.xmdk034_desc
               
               LET g_xmdk_m.xmdk035 = ''  #多角序號
               LET g_xmdk_m_o.xmdk035 = g_xmdk_m.xmdk035
               DISPLAY BY NAME g_xmdk_m.xmdk035
               
               LET g_xmdk_m.xmdk083 = 'N' #多角貿易已拋轉
               LET g_xmdk_m_o.xmdk083 = g_xmdk_m.xmdk083
               DISPLAY BY NAME g_xmdk_m.xmdk083
            END IF
             
            LET g_xmdk_m_o.xmdk005 = g_xmdk_m.xmdk005

            CALL axmt540_set_entry(p_cmd)
            CALL axmt540_set_no_required(p_cmd)
            CALL axmt540_set_required(p_cmd)
            CALL axmt540_set_no_entry(p_cmd)
            CALL axmt540_xmdk047_ref(g_xmdk_m.xmdk047,p_cmd) RETURNING g_xmdk_m.xmdk007_desc   #161207-00033#30 add                         
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk005
            #add-point:ON CHANGE xmdk005 name="input.g.xmdk005"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk006
            #add-point:BEFORE FIELD xmdk006 name="input.b.xmdk006"
                                                                                               
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk006
            
            #add-point:AFTER FIELD xmdk006 name="input.a.xmdk006"
                        
            IF NOT cl_null(g_xmdk_m.xmdk006) THEN 
               IF g_xmdk_m.xmdk006 <> g_xmdk_m_o.xmdk006 OR cl_null(g_xmdk_m_o.xmdk006) THEN            
                  
                  IF NOT axmt540_order_chk(g_xmdk_m.xmdk006,'1') THEN
                     LET g_xmdk_m.xmdk006 = g_xmdk_m_o.xmdk006
                     NEXT FIELD CURRENT
                  END IF
                  
                  CALL axmt540_source_default(g_xmdk_m.xmdk006,'2')  #帶出訂單單頭
            
               END IF
            ELSE
               #NoEntry欄位清空
               LET g_xmdk_m.xmdk018 = ''  #取價方式
               LET g_xmdk_m_o.xmdk018 = g_xmdk_m.xmdk018
               DISPLAY BY NAME g_xmdk_m.xmdk018
               CALL axmt540_xmdk018_ref()
               
               LET g_xmdk_m.xmdk034 = ''  #留置原因
               LET g_xmdk_m_o.xmdk034 = g_xmdk_m.xmdk034
               DISPLAY BY NAME g_xmdk_m.xmdk034

               CALL s_desc_get_acc_desc('297',g_xmdk_m.xmdk034) RETURNING g_xmdk_m.xmdk034_desc
               DISPLAY BY NAME g_xmdk_m.xmdk034_desc
               
               LET g_xmdk_m.xmdk035 = ''  #多角序號
               LET g_xmdk_m_o.xmdk035 = g_xmdk_m.xmdk035
               DISPLAY BY NAME g_xmdk_m.xmdk035
               
               LET g_xmdk_m.xmdk083 = 'N' #多角貿易已拋轉
               LET g_xmdk_m_o.xmdk083 = g_xmdk_m.xmdk083
               DISPLAY BY NAME g_xmdk_m.xmdk083
            END IF               

            LET g_xmdk_m_o.xmdk006 = g_xmdk_m.xmdk006

            CALL axmt540_set_entry(p_cmd)
            CALL axmt540_set_no_required(p_cmd)
            CALL axmt540_set_required(p_cmd)
            CALL axmt540_set_no_entry(p_cmd)
            CALL axmt540_xmdk047_ref(g_xmdk_m.xmdk047,p_cmd) RETURNING g_xmdk_m.xmdk007_desc   #161207-00033#30 add                         
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk006
            #add-point:ON CHANGE xmdk006 name="input.g.xmdk006"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk007
            
            #add-point:AFTER FIELD xmdk007 name="input.a.xmdk007"
            
            CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk007) RETURNING g_xmdk_m.xmdk007_desc
            DISPLAY BY NAME g_xmdk_m.xmdk007_desc


            IF NOT cl_null(g_xmdk_m.xmdk007) THEN
               IF g_xmdk_m.xmdk007 <> g_xmdk_m_o.xmdk007 OR cl_null(g_xmdk_m_o.xmdk007) THEN

                  IF NOT s_axmt540_client_chk(g_xmdk_m.xmdkdocno,'1',g_xmdk_m.xmdk007,'') THEN
                     LET g_xmdk_m.xmdk007 = g_xmdk_m_o.xmdk007

                     CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk007) RETURNING g_xmdk_m.xmdk007_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk007_desc


                     NEXT FIELD CURRENT
                  END IF
                  #160119-00015#1-mark-(S) 麥頭換用收貨客戶對應，所以這段要mark
#                  IF NOT axmt540_xmdk007_xmdk027_chk(g_xmdk_m.xmdk007,g_xmdk_m.xmdk027) THEN
#                     LET g_xmdk_m.xmdk007 = g_xmdk_m_o.xmdk007
#
#                     CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk007) RETURNING g_xmdk_m.xmdk007_desc
#                     DISPLAY BY NAME g_xmdk_m.xmdk007_desc
#
#                     NEXT FIELD CURRENT
#                  END IF
                  #160119-00015#1-mark-(E)
                  CALL axmt540_xmdk007_default()     #自動帶出客戶預設資料

                  #更新單身
                  IF NOT axmt540_detail_update('','',g_xmdk_m.xmdk017,'0') THEN
                     LET g_xmdk_m.xmdk007 = g_xmdk_m_o.xmdk007

                     CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk007) RETURNING g_xmdk_m.xmdk007_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk007_desc

                     CALL s_transaction_end('N',0)
                     CALL s_transaction_begin()

                     NEXT FIELD CURRENT
                  END IF

                  #帶出收款客戶            
                  CALL s_axmt540_client_partner(g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk007,'1') RETURNING g_xmdk_m.xmdk008
                  LET g_xmdk_m_o.xmdk008 = g_xmdk_m.xmdk008
                  DISPLAY BY NAME g_xmdk_m.xmdk008
            
                  CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk008) RETURNING g_xmdk_m.xmdk008_desc
                  DISPLAY BY NAME g_xmdk_m.xmdk008_desc
                                          
                  #帶出收貨客戶
                  CALL s_axmt540_client_partner(g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk007,'2') RETURNING g_xmdk_m.xmdk009
                  LET g_xmdk_m_o.xmdk009 = g_xmdk_m.xmdk009
                  DISPLAY BY NAME g_xmdk_m.xmdk009
                  
                  CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk009) RETURNING g_xmdk_m.xmdk009_desc
                  DISPLAY BY NAME g_xmdk_m.xmdk009_desc
                  
                  #帶出發票客戶
                  CALL s_axmt540_client_partner(g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk007,'3') RETURNING g_xmdk_m.xmdk202
                  LET g_xmdk_m_o.xmdk202 = g_xmdk_m.xmdk202
                  DISPLAY BY NAME g_xmdk_m.xmdk202

                  CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk202) RETURNING g_xmdk_m.xmdk202_desc
                  DISPLAY BY NAME g_xmdk_m.xmdk202_desc
                  
                  #add--160531-00047#1 By shiun--(S)
                  #供應商的法人類型為'2:一次性交易'或是'4:內部員工'時需維護一次性交易對項基本資料並回傳對象識別碼給xmda028欄位
#                  IF g_prog = 'axmt541' THEN        #160623-00014#1-mod-(S)
                  IF g_prog MATCHES 'axmt541' THEN  #160623-00014#1-mod-(E)
                     LET g_pmaa004 = ''
                     SELECT pmaa004 INTO g_pmaa004 FROM pmaa_t WHERE pmaaent = g_enterprise AND pmaa001 = g_xmdk_m.xmdk007
                     IF g_pmaa004 = '2' THEN   #一次性交易對象
                        CALL apmi004_01('1',g_xmdk_m.xmdk047,g_xmdk_m.xmdk007,g_xmdk_m.xmdkdocno) RETURNING g_xmdk_m.xmdk047
                     END IF
                     IF g_pmaa004 = '4' THEN   #內部員工
                        CALL apmi004_01('2',g_xmdk_m.xmdk047,g_xmdk_m.xmdk007,g_xmdk_m.xmdkdocno) RETURNING g_xmdk_m.xmdk047
                     END IF 
                  END IF
                  #add--160531-00047#1 By shiun--(E)
               END IF
            END IF               

            LET g_xmdk_m_o.xmdk007 = g_xmdk_m.xmdk007                 
            #add--160531-00047#1 By shiun--(S)
#            IF g_prog = 'axmt541' THEN        #160623-00014#1-mod-(S)
            IF g_prog MATCHES 'axmt541' THEN  #160623-00014#1-mod-(E)
               IF g_pmaa004 MATCHES '[24]' THEN
#                  CALL axmt540_xmdk047_ref(g_xmdk_m.xmdk047) RETURNING g_xmdk_m.xmdk007_desc   #161207-00033#30   mark
                  CALL axmt540_xmdk047_ref(g_xmdk_m.xmdk047,p_cmd) RETURNING g_xmdk_m.xmdk007_desc   #161207-00033#30 mod

               ELSE
                  CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk007) RETURNING g_xmdk_m.xmdk007_desc
               END IF   
            END IF
            DISPLAY BY NAME g_xmdk_m.xmdk007_desc
            #add--160531-00047#1 By shiun--(E)
            CALL axmt540_xmdk027_ref(g_xmdk_m.xmdk007,g_xmdk_m.xmdk027) RETURNING  g_xmdk_m.xmdk027_desc 
            DISPLAY BY NAME g_xmdk_m.xmdk027_desc

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk007
            #add-point:BEFORE FIELD xmdk007 name="input.b.xmdk007"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk007
            #add-point:ON CHANGE xmdk007 name="input.g.xmdk007"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk009
            
            #add-point:AFTER FIELD xmdk009 name="input.a.xmdk009"
            IF g_xmdk_m.xmdk009 <> g_xmdk_m_o.xmdk009 OR cl_null(g_xmdk_m_o.xmdk009) THEN   #161207-00033#30-add
               CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk009) RETURNING g_xmdk_m.xmdk009_desc
               DISPLAY BY NAME g_xmdk_m.xmdk009_desc
            END IF #161207-00033#30-add
            
            IF NOT cl_null(g_xmdk_m.xmdk009) THEN                                                   
               IF g_xmdk_m.xmdk009 <> g_xmdk_m_o.xmdk009 OR cl_null(g_xmdk_m_o.xmdk009) THEN
               
                  IF NOT s_axmt540_client_chk('','2',g_xmdk_m.xmdk007,g_xmdk_m.xmdk009) THEN
                     LET g_xmdk_m.xmdk009 = g_xmdk_m_o.xmdk009

                     CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk009) RETURNING g_xmdk_m.xmdk009_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk009_desc

                     NEXT FIELD CURRENT
                  END IF
                  #160119-00015#1-add-(S) 換用收貨客戶對應麥頭，故需在此增加檢查
                  IF NOT axmt540_xmdk009_xmdk027_chk(g_xmdk_m.xmdk009,g_xmdk_m.xmdk027) THEN
                     LET g_xmdk_m.xmdk009 = g_xmdk_m_o.xmdk009

                     CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk009) RETURNING g_xmdk_m.xmdk009_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk009_desc

                     NEXT FIELD CURRENT
                  END IF
                  #160119-00015#1-add-(E)
                  #檢查送貨地址
                  IF NOT axmt540_xmdk009_xmdk021_chk() THEN
                     LET g_xmdk_m.xmdk009 = g_xmdk_m_o.xmdk009

                     CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk009) RETURNING g_xmdk_m.xmdk009_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk009_desc

                     NEXT FIELD CURRENT
                  END IF                  
                  
               END IF                              
            END IF 

            LET g_xmdk_m_o.xmdk009 = g_xmdk_m.xmdk009

            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk009
            #add-point:BEFORE FIELD xmdk009 name="input.b.xmdk009"
            IF cl_null(g_xmdk_m.xmdk007) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00145'  #請先輸入客戶編號
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               
               CALL cl_err()       
               NEXT FIELD xmdk007
            END IF                                                                                              
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk009
            #add-point:ON CHANGE xmdk009 name="input.g.xmdk009"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk008
            
            #add-point:AFTER FIELD xmdk008 name="input.a.xmdk008"
            IF g_xmdk_m.xmdk008 <> g_xmdk_m_o.xmdk008 OR cl_null(g_xmdk_m_o.xmdk008) THEN  #161207-00033#30-add
               CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk008) RETURNING g_xmdk_m.xmdk008_desc
               DISPLAY BY NAME g_xmdk_m.xmdk008_desc
            END IF #161207-00033#30-add

            IF NOT cl_null(g_xmdk_m.xmdk008) THEN                              
               IF g_xmdk_m.xmdk008 <> g_xmdk_m_o.xmdk008 OR cl_null(g_xmdk_m_o.xmdk008) THEN
               
                  IF NOT s_axmt540_client_chk('','3',g_xmdk_m.xmdk007,g_xmdk_m.xmdk008) THEN
                     LET g_xmdk_m.xmdk008 = g_xmdk_m_o.xmdk008

                     CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk008) RETURNING g_xmdk_m.xmdk008_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk008_desc

                     NEXT FIELD CURRENT
                  END IF
                  
               END IF            
            END IF 

            LET g_xmdk_m_o.xmdk008 = g_xmdk_m.xmdk008
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk008
            #add-point:BEFORE FIELD xmdk008 name="input.b.xmdk008"
                                              
            IF cl_null(g_xmdk_m.xmdk007) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00145' #請先輸入客戶編號
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
       
               NEXT FIELD xmdk007
            END IF
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk008
            #add-point:ON CHANGE xmdk008 name="input.g.xmdk008"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk202
            
            #add-point:AFTER FIELD xmdk202 name="input.a.xmdk202"
            IF g_xmdk_m.xmdk202 <> g_xmdk_m_o.xmdk202 OR cl_null(g_xmdk_m_o.xmdk202) THEN #161207-00033#30-add
               CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk202) RETURNING g_xmdk_m.xmdk202_desc
               DISPLAY BY NAME g_xmdk_m.xmdk202_desc
            END IF #161207-00033#30-add
            IF NOT cl_null(g_xmdk_m.xmdk202) THEN                              
               IF g_xmdk_m.xmdk202 <> g_xmdk_m_o.xmdk202 OR cl_null(g_xmdk_m_o.xmdk202) THEN
               
                  IF NOT s_axmt540_client_chk('','4',g_xmdk_m.xmdk007,g_xmdk_m.xmdk202) THEN
                     LET g_xmdk_m.xmdk202 = g_xmdk_m_o.xmdk202

                     CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk202) RETURNING g_xmdk_m.xmdk202_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk202_desc

                     NEXT FIELD CURRENT
                  END IF
                  
               END IF            
            END IF 

            LET g_xmdk_m_o.xmdk202 = g_xmdk_m.xmdk202
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk202
            #add-point:BEFORE FIELD xmdk202 name="input.b.xmdk202"
            IF cl_null(g_xmdk_m.xmdk007) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00145' #請先輸入客戶編號
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
       
               NEXT FIELD xmdk007
            END IF

            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk202
            #add-point:ON CHANGE xmdk202 name="input.g.xmdk202"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk047
            #add-point:BEFORE FIELD xmdk047 name="input.b.xmdk047"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk047
            
            #add-point:AFTER FIELD xmdk047 name="input.a.xmdk047"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk047
            #add-point:ON CHANGE xmdk047 name="input.g.xmdk047"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk002
            #add-point:BEFORE FIELD xmdk002 name="input.b.xmdk002"
                                                                                               
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk002
            
            #add-point:AFTER FIELD xmdk002 name="input.a.xmdk002"
            
            IF NOT cl_null(g_xmdk_m.xmdk002) THEN
               IF g_xmdk_m.xmdk002 <> g_xmdk_m_o.xmdk002 OR cl_null(g_xmdk_m_o.xmdk002) THEN
                  
                  IF NOT axmt540_xmdk044_chk(g_xmdk_m.xmdk044,g_xmdk_m.xmdk002) THEN
                     LET g_xmdk_m.xmdk002 = g_xmdk_m_o.xmdk002
                     NEXT FIELD CURRENT
                  END IF

                  #若不為簽收訂單、調貨訂單、借貨訂單
                  IF g_xmdk_m.xmdk002 <> '3' AND g_xmdk_m.xmdk002 <> '4' AND 
                     g_xmdk_m.xmdk002 <> '8' THEN
                     
                     LET g_xmdk_m.xmdk039 = ''
                     LET g_xmdk_m.xmdk040 = ''
                  ELSE   
                     LET g_xmdk_m.xmdk039 = g_xmdk_m_o.xmdk039
                     LET g_xmdk_m.xmdk040 = g_xmdk_m_o.xmdk040
                  END IF
                  
                  DISPLAY BY NAME g_xmdk_m.xmdk039
                  DISPLAY BY NAME g_xmdk_m.xmdk040
                  
                  CALL s_desc_get_stock_desc(g_site,g_xmdk_m.xmdk039) RETURNING g_xmdk_m.xmdk039_desc
                  DISPLAY BY NAME g_xmdk_m.xmdk039_desc

                  CALL s_desc_get_stock_desc(g_site,g_xmdk_m.xmdk040) RETURNING g_xmdk_m.xmdk040_desc
                  DISPLAY BY NAME g_xmdk_m.xmdk040_desc
   
               END IF
            END IF
            
            LET g_xmdk_m_o.xmdk002 = g_xmdk_m.xmdk002
            
            CALL axmt540_set_entry(p_cmd) 
            CALL axmt540_set_no_entry(p_cmd)
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk002
            #add-point:ON CHANGE xmdk002 name="input.g.xmdk002"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk045
            #add-point:BEFORE FIELD xmdk045 name="input.b.xmdk045"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk045
            
            #add-point:AFTER FIELD xmdk045 name="input.a.xmdk045"
            
            IF NOT cl_null(g_xmdk_m.xmdk045) THEN
               IF g_xmdk_m.xmdk045 <> g_xmdk_m_o.xmdk045 OR cl_null(g_xmdk_m_o.xmdk045) THEN
            
                  #3統銷統收時，清空多角流程代碼
                  IF g_xmdk_m.xmdk045 = '3' THEN
                     LET g_xmdk_m.xmdk044 = ''
                  END IF
                  
               END IF
            END IF
            
            LET g_xmdk_m_o.xmdk044 = g_xmdk_m.xmdk044
            LET g_xmdk_m_o.xmdk045 = g_xmdk_m.xmdk045
            
            CALL axmt540_set_entry(p_cmd)
            CALL axmt540_set_no_required(p_cmd)
            CALL axmt540_set_required(p_cmd)
            CALL axmt540_set_no_entry(p_cmd)
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk045
            #add-point:ON CHANGE xmdk045 name="input.g.xmdk045"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk032
            #add-point:BEFORE FIELD xmdk032 name="input.b.xmdk032"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk032
            
            #add-point:AFTER FIELD xmdk032 name="input.a.xmdk032"
            #add--151118-00012#1 By shiun--(S)
            IF NOT cl_null(g_xmdk_m.xmdk032) THEN
               IF g_xmdk_m.xmdk032 <> g_xmdk_m_o.xmdk032 OR cl_null(g_xmdk_m_o.xmdk032) THEN

                  #帶出匯率
                  #modify--151118-00012#1 By shiun  更改取匯率方式--(S)
                  CALL axmt540_xmda_xmdk017() RETURNING l_xmdk017
                  IF cl_null(l_xmdk017) THEN
                     CALL axmt540_get_ratedate() RETURNING g_ratedate
                     CALL s_axmt540_get_exchange(g_xmdk_m.xmdk042,g_xmdk_m.xmdk016,g_ratedate) RETURNING l_xmdk017
                  END IF
                  #modify--151118-00012#1 By shiun  更改取匯率方式--(E)

                  #更新單身
                  IF NOT axmt540_detail_update('','',l_xmdk017,'2') THEN
                     LET g_xmdk_m.xmdk032 = g_xmdk_m_o.xmdk032

                     CALL s_transaction_end('N',0)
                     CALL s_transaction_begin()

                     NEXT FIELD CURRENT
                  END IF
                  
                  LET g_xmdk_m.xmdk017 = l_xmdk017
                  LET g_xmdk_m_o.xmdk017 = g_xmdk_m.xmdk017
                  DISPLAY BY NAME g_xmdk_m.xmdk017

               END IF
            END IF
            
            LET g_xmdk_m_o.xmdk032 = g_xmdk_m.xmdk032
            #add--151118-00012#1 By shiun--(E)
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk032
            #add-point:ON CHANGE xmdk032 name="input.g.xmdk032"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk030
            
            #add-point:AFTER FIELD xmdk030 name="input.a.xmdk030"
            
            #160621-00003#3 20160629 modify by beckxie---S
            #CALL s_desc_get_acc_desc('275',g_xmdk_m.xmdk030) RETURNING g_xmdk_m.xmdk030_desc
            CALL s_desc_get_oojdl003_desc(g_xmdk_m.xmdk030) RETURNING g_xmdk_m.xmdk030_desc
            #160621-00003#3 20160629 modify by beckxie---E
                     
            DISPLAY BY NAME g_xmdk_m.xmdk030_desc
   
            IF NOT cl_null(g_xmdk_m.xmdk030) THEN 
               IF g_xmdk_m.xmdk030 <> g_xmdk_m_o.xmdk030 OR cl_null(g_xmdk_m_o.xmdk030) THEN 
               
                  #160621-00003#3 20160627 modify by beckxie---S
                  #IF NOT s_azzi650_chk_exist('275',g_xmdk_m.xmdk030) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmdk_m.xmdk030
                  LET g_chkparam.arg2 = '1'
                  LET g_chkparam.err_str[1] = "aoo-00299|",l_msg1
                  IF NOT cl_chk_exist("v_oojd001") THEN
                  #160621-00003#3 20160627 modify by beckxie---E
                  
                     LET g_xmdk_m.xmdk030 = g_xmdk_m_o.xmdk030
 
                     #160621-00003#3 20160629 modify by beckxie---S
                     #CALL s_desc_get_acc_desc('275',g_xmdk_m.xmdk030) RETURNING g_xmdk_m.xmdk030_desc
                     CALL s_desc_get_oojdl003_desc(g_xmdk_m.xmdk030) RETURNING g_xmdk_m.xmdk030_desc
                     #160621-00003#3 20160629 modify by beckxie---E
                     DISPLAY BY NAME g_xmdk_m.xmdk030_desc

                     NEXT FIELD CURRENT
                  END IF           
                  
                  #更新單身
                  IF NOT axmt540_detail_update('','',g_xmdk_m.xmdk017,'0') THEN
                     LET g_xmdk_m.xmdk030 = g_xmdk_m_o.xmdk030
                     
                     #160621-00003#3 20160629 modify by beckxie---S
                     #CALL s_desc_get_acc_desc('275',g_xmdk_m.xmdk030) RETURNING g_xmdk_m.xmdk030_desc
                     CALL s_desc_get_oojdl003_desc(g_xmdk_m.xmdk030) RETURNING g_xmdk_m.xmdk030_desc
                     #160621-00003#3 20160629 modify by beckxie---E
                     DISPLAY BY NAME g_xmdk_m.xmdk030_desc

                     CALL s_transaction_end('N',0)
                     CALL s_transaction_begin()

                     NEXT FIELD CURRENT
                  END IF  
                  
               END IF
            END IF 
            
            LET g_xmdk_m_o.xmdk030 = g_xmdk_m.xmdk030

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk030
            #add-point:BEFORE FIELD xmdk030 name="input.b.xmdk030"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk030
            #add-point:ON CHANGE xmdk030 name="input.g.xmdk030"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk028
            #add-point:BEFORE FIELD xmdk028 name="input.b.xmdk028"
 
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk028
            
            #add-point:AFTER FIELD xmdk028 name="input.a.xmdk028"
 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk028
            #add-point:ON CHANGE xmdk028 name="input.g.xmdk028"
 
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk029
            #add-point:BEFORE FIELD xmdk029 name="input.b.xmdk029"
 
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk029
            
            #add-point:AFTER FIELD xmdk029 name="input.a.xmdk029"
 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk029
            #add-point:ON CHANGE xmdk029 name="input.g.xmdk029"
 
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk034
            
            #add-point:AFTER FIELD xmdk034 name="input.a.xmdk034"
            
            CALL s_desc_get_acc_desc('297',g_xmdk_m.xmdk034) RETURNING g_xmdk_m.xmdk034_desc
            DISPLAY BY NAME g_xmdk_m.xmdk034_desc

            IF NOT cl_null(g_xmdk_m.xmdk034) THEN 
               IF g_xmdk_m.xmdk034 <> g_xmdk_m_o.xmdk034 OR cl_null(g_xmdk_m_o.xmdk034) THEN
               
                  IF NOT s_azzi650_chk_exist('297',g_xmdk_m.xmdk034) THEN
                     LET g_xmdk_m.xmdk034 = g_xmdk_m_o.xmdk034

                     CALL s_desc_get_acc_desc('297',g_xmdk_m.xmdk034) RETURNING g_xmdk_m.xmdk034_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk034_desc

                     NEXT FIELD CURRENT
                  END IF            
               END IF
            END IF 

            LET g_xmdk_m_o.xmdk034 = g_xmdk_m.xmdk034
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk034
            #add-point:BEFORE FIELD xmdk034 name="input.b.xmdk034"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk034
            #add-point:ON CHANGE xmdk034 name="input.g.xmdk034"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk054
            #add-point:BEFORE FIELD xmdk054 name="input.b.xmdk054"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk054
            
            #add-point:AFTER FIELD xmdk054 name="input.a.xmdk054"
                                                                                                            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk054
            #add-point:ON CHANGE xmdk054 name="input.g.xmdk054"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk039
            
            #add-point:AFTER FIELD xmdk039 name="input.a.xmdk039"
            
            CALL s_desc_get_stock_desc(g_site,g_xmdk_m.xmdk039) RETURNING g_xmdk_m.xmdk039_desc
            DISPLAY BY NAME g_xmdk_m.xmdk039_desc
            
            IF NOT cl_null(g_xmdk_m.xmdk039) THEN
               IF g_xmdk_m.xmdk039 <> g_xmdk_m_o.xmdk039 OR cl_null(g_xmdk_m_o.xmdk039) THEN
            
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_site
                  LET g_chkparam.arg2 = g_xmdk_m.xmdk039
                  LET g_chkparam.arg3 = 'Y'
                     
                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_inaa001_6") THEN
                     LET g_xmdk_m.xmdk039 = g_xmdk_m_o.xmdk039
                     CALL s_desc_get_stock_desc(g_site,g_xmdk_m.xmdk039) RETURNING g_xmdk_m.xmdk039_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk039_desc
             
                     NEXT FIELD CURRENT
                  END IF
                  
                  #150921-00014 earl add s
                  #檢核輸入的庫位(To)是否在單據別限制範圍內
                  CALL s_control_chk_doc('7',g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk039,'','','','')
                  RETURNING l_success,l_flag
                  
                  IF NOT l_success OR NOT l_flag THEN
                     LET g_xmdk_m.xmdk039 = g_xmdk_m_o.xmdk039
                     CALL s_desc_get_stock_desc(g_site,g_xmdk_m.xmdk039) RETURNING g_xmdk_m.xmdk039_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk039_desc
             
                     NEXT FIELD CURRENT                     
                  END IF
                  #150921-00014 earl add e

               END IF
            END IF
            
            LET g_xmdk_m_o.xmdk039 = g_xmdk_m.xmdk039
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk039
            #add-point:BEFORE FIELD xmdk039 name="input.b.xmdk039"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk039
            #add-point:ON CHANGE xmdk039 name="input.g.xmdk039"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk040
            
            #add-point:AFTER FIELD xmdk040 name="input.a.xmdk040"
            
            CALL s_desc_get_stock_desc(g_site,g_xmdk_m.xmdk040) RETURNING g_xmdk_m.xmdk040_desc
            DISPLAY BY NAME g_xmdk_m.xmdk040_desc
            
            IF NOT cl_null(g_xmdk_m.xmdk040) THEN
               IF g_xmdk_m.xmdk040 <> g_xmdk_m_o.xmdk040 OR cl_null(g_xmdk_m_o.xmdk040) THEN
            
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_site
                  LET g_chkparam.arg2 = g_xmdk_m.xmdk040
                  LET g_chkparam.arg3 = 'N'
                     
                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_inaa001_6") THEN
                     LET g_xmdk_m.xmdk040 = g_xmdk_m_o.xmdk040
                     CALL s_desc_get_stock_desc(g_site,g_xmdk_m.xmdk040) RETURNING g_xmdk_m.xmdk040_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk040_desc
               
                     NEXT FIELD CURRENT
                  END IF
                  
                  #150921-00014 earl add s
                  #檢核輸入的庫位(To)是否在單據別限制範圍內
                  CALL s_control_chk_doc('7',g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk040,'','','','')
                  RETURNING l_success,l_flag
                  
                  IF NOT l_success OR NOT l_flag THEN
                     LET g_xmdk_m.xmdk040 = g_xmdk_m_o.xmdk040
                     CALL s_desc_get_stock_desc(g_site,g_xmdk_m.xmdk040) RETURNING g_xmdk_m.xmdk040_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk040_desc
                     
                     NEXT FIELD CURRENT
                  END IF
                  #150921-00014 earl add e
                  
               END IF
            END IF 

            LET g_xmdk_m_o.xmdk040 = g_xmdk_m.xmdk040
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk040
            #add-point:BEFORE FIELD xmdk040 name="input.b.xmdk040"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk040
            #add-point:ON CHANGE xmdk040 name="input.g.xmdk040"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk087
            #add-point:BEFORE FIELD xmdk087 name="input.b.xmdk087"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk087
            
            #add-point:AFTER FIELD xmdk087 name="input.a.xmdk087"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk087
            #add-point:ON CHANGE xmdk087 name="input.g.xmdk087"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk021
            
            #add-point:AFTER FIELD xmdk021 name="input.a.xmdk021"
                        
            CALL axmt540_xmdk021_ref()
            IF NOT cl_null(g_xmdk_m.xmdk021) THEN                                
               IF g_xmdk_m.xmdk021 <> g_xmdk_m_o.xmdk021 OR cl_null(g_xmdk_m_o.xmdk021) THEN
               
                  IF NOT axmt540_xmdk009_xmdk021_chk() THEN
                     LET g_xmdk_m.xmdk021 = g_xmdk_m_o.xmdk021
                     CALL axmt540_xmdk021_ref()

                     NEXT FIELD xmdk021
                  END IF
               END IF            
            END IF 

            LET g_xmdk_m_o.xmdk021 = g_xmdk_m.xmdk021
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk021
            #add-point:BEFORE FIELD xmdk021 name="input.b.xmdk021"
            IF cl_null(g_xmdk_m.xmdk009) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00146'  #請先輸入收貨客戶
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()       

               NEXT FIELD xmdk009
            END IF                                                                                                           
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk021
            #add-point:ON CHANGE xmdk021 name="input.g.xmdk021"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD address
            #add-point:BEFORE FIELD address name="input.b.address"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD address
            
            #add-point:AFTER FIELD address name="input.a.address"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE address
            #add-point:ON CHANGE address name="input.g.address"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk022
            
            #add-point:AFTER FIELD xmdk022 name="input.a.xmdk022"

            CALL s_desc_get_acc_desc('263',g_xmdk_m.xmdk022) RETURNING g_xmdk_m.xmdk022_desc
            DISPLAY BY NAME g_xmdk_m.xmdk022_desc

            IF NOT cl_null(g_xmdk_m.xmdk022) THEN
               IF g_xmdk_m.xmdk022 <> g_xmdk_m_o.xmdk022 OR cl_null(g_xmdk_m_o.xmdk022) THEN
            
                  IF NOT s_azzi650_chk_exist('263',g_xmdk_m.xmdk022) THEN
                     LET g_xmdk_m.xmdk022 = g_xmdk_m_o.xmdk022

                     CALL s_desc_get_acc_desc('263',g_xmdk_m.xmdk022) RETURNING g_xmdk_m.xmdk022_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk022_desc

                     NEXT FIELD CURRENT
                  END IF

                  #檢查起運地
                  IF NOT cl_null(g_xmdk_m.xmdk023) THEN
                     IF NOT s_apmi011_check_location(g_xmdk_m.xmdk022,g_xmdk_m.xmdk023) THEN

                        LET g_xmdk_m.xmdk022 = g_xmdk_m_o.xmdk022

                        CALL s_desc_get_acc_desc('263',g_xmdk_m.xmdk022) RETURNING g_xmdk_m.xmdk022_desc
                        DISPLAY BY NAME g_xmdk_m.xmdk022_desc

                        NEXT FIELD CURRENT

                     END IF
                  END IF

                  #檢查目的地
                  IF NOT cl_null(g_xmdk_m.xmdk024) THEN
                     IF NOT s_apmi011_check_location(g_xmdk_m.xmdk022,g_xmdk_m.xmdk024) THEN

                        LET g_xmdk_m.xmdk022 = g_xmdk_m_o.xmdk022

                        CALL s_desc_get_acc_desc('263',g_xmdk_m.xmdk022) RETURNING g_xmdk_m.xmdk022_desc
                        DISPLAY BY NAME g_xmdk_m.xmdk022_desc

                        NEXT FIELD CURRENT

                     END IF
                  END IF              

               END IF    
           #170101-00003#1----add---begin----
               CALL cl_set_comp_entry("xmdk023,xmdk024",TRUE)
            ELSE
               INITIALIZE g_xmdk_m.xmdk023 TO NULL
               INITIALIZE g_xmdk_m.xmdk024 TO NULL
               CALL cl_set_comp_entry("xmdk023,xmdk024",FALSE)
            #170101-00003#1----add---end------               
            END IF 
            
            LET g_xmdk_m_o.xmdk022 = g_xmdk_m.xmdk022

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk022
            #add-point:BEFORE FIELD xmdk022 name="input.b.xmdk022"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk022
            #add-point:ON CHANGE xmdk022 name="input.g.xmdk022"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk023
            
            #add-point:AFTER FIELD xmdk023 name="input.a.xmdk023"
            
            CALL axmt540_location_ref(g_xmdk_m.xmdk022,g_xmdk_m.xmdk023) RETURNING g_xmdk_m.xmdk023_desc
            DISPLAY BY NAME g_xmdk_m.xmdk023_desc
            
            IF NOT cl_null(g_xmdk_m.xmdk023) THEN
               IF g_xmdk_m.xmdk023 <> g_xmdk_m_o.xmdk023 OR cl_null(g_xmdk_m_o.xmdk023) THEN
               
                  IF NOT s_apmi011_check_location(g_xmdk_m.xmdk022,g_xmdk_m.xmdk023) THEN
                     LET g_xmdk_m.xmdk023 = g_xmdk_m_o.xmdk023
                     
                     CALL axmt540_location_ref(g_xmdk_m.xmdk022,g_xmdk_m.xmdk023) RETURNING g_xmdk_m.xmdk023_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk023_desc
          
                     NEXT FIELD CURRENT
                  END IF
               END IF
           
            END IF 
            
            LET g_xmdk_m_o.xmdk023 = g_xmdk_m.xmdk023
            
            #檢查目的地
            IF NOT cl_null(g_xmdk_m.xmdk024) THEN
               IF NOT s_apmi011_check_location(g_xmdk_m.xmdk022,g_xmdk_m.xmdk024) THEN
                  LET g_xmdk_m_o.xmdk024 = ''
                  NEXT FIELD xmdk024
               END IF
            END IF
            
            CALL axmt540_location_ref(g_xmdk_m.xmdk022,g_xmdk_m.xmdk024) RETURNING g_xmdk_m.xmdk024_desc
            DISPLAY BY NAME g_xmdk_m.xmdk024_desc  

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk023
            #add-point:BEFORE FIELD xmdk023 name="input.b.xmdk023"
            IF cl_null(g_xmdk_m.xmdk022) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00085'  #請先輸入運輸方式
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
       
               NEXT FIELD xmdk022
            END IF  
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk023
            #add-point:ON CHANGE xmdk023 name="input.g.xmdk023"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk024
            
            #add-point:AFTER FIELD xmdk024 name="input.a.xmdk024"
            
            CALL axmt540_location_ref(g_xmdk_m.xmdk022,g_xmdk_m.xmdk024) RETURNING g_xmdk_m.xmdk024_desc
            DISPLAY BY NAME g_xmdk_m.xmdk024_desc
            
            IF NOT cl_null(g_xmdk_m.xmdk024) THEN
               IF g_xmdk_m.xmdk024 <> g_xmdk_m_o.xmdk024 OR cl_null(g_xmdk_m_o.xmdk024) THEN
                           
                  IF NOT s_apmi011_check_location(g_xmdk_m.xmdk022,g_xmdk_m.xmdk024) THEN
                     LET g_xmdk_m.xmdk024 = g_xmdk_m_o.xmdk024
                        
                     CALL axmt540_location_ref(g_xmdk_m.xmdk022,g_xmdk_m.xmdk024) RETURNING g_xmdk_m.xmdk024_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk024_desc
                        
                     NEXT FIELD CURRENT
               
                  END IF
               END IF
            END IF
            
            LET g_xmdk_m_o.xmdk024 = g_xmdk_m.xmdk024
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk024
            #add-point:BEFORE FIELD xmdk024 name="input.b.xmdk024"
            IF cl_null(g_xmdk_m.xmdk022) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00085'  #請先輸入運輸方式
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
       
               NEXT FIELD xmdk022
            END IF 
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk024
            #add-point:ON CHANGE xmdk024 name="input.g.xmdk024"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk020
            
            #add-point:AFTER FIELD xmdk020 name="input.a.xmdk020"

            CALL s_desc_get_trading_partner_full_desc(g_xmdk_m.xmdk020) RETURNING g_xmdk_m.xmdk020_desc
            DISPLAY BY NAME g_xmdk_m.xmdk020_desc

            IF NOT cl_null(g_xmdk_m.xmdk020) THEN
               IF g_xmdk_m.xmdk020 <> g_xmdk_m_o.xmdk020 OR cl_null(g_xmdk_m_o.xmdk020) THEN

                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
               
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmdk_m.xmdk020
                  
                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_pmaa001_1") THEN
                     LET g_xmdk_m.xmdk020 = g_xmdk_m_o.xmdk020

                     CALL s_desc_get_trading_partner_full_desc(g_xmdk_m.xmdk020) RETURNING g_xmdk_m.xmdk020_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk020_desc

                     NEXT FIELD CURRENT
                  END IF
                  
                  #150721-00001#1  2016/01/08 By earl add s                  
                  #檢核供應商編號的生命週期是否在單據別的限制範圍內
                  CALL s_control_chk_doc('2',g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk020,'','','','')
                       RETURNING l_success,l_flag
                  IF NOT l_success OR NOT l_flag THEN
                     LET g_xmdk_m.xmdk020 = g_xmdk_m_o.xmdk020

                     CALL s_desc_get_trading_partner_full_desc(g_xmdk_m.xmdk020) RETURNING g_xmdk_m.xmdk020_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk020_desc

                     NEXT FIELD CURRENT
                  END IF
                  
                  #150721-00001#1  2016/01/08 By earl add e
                  
               END IF            
            END IF

            LET g_xmdk_m_o.xmdk020 = g_xmdk_m.xmdk020
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk020
            #add-point:BEFORE FIELD xmdk020 name="input.b.xmdk020"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk020
            #add-point:ON CHANGE xmdk020 name="input.g.xmdk020"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk025
            #add-point:BEFORE FIELD xmdk025 name="input.b.xmdk025"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk025
            
            #add-point:AFTER FIELD xmdk025 name="input.a.xmdk025"
                                                                                                            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk025
            #add-point:ON CHANGE xmdk025 name="input.g.xmdk025"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk026
            #add-point:BEFORE FIELD xmdk026 name="input.b.xmdk026"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk026
            
            #add-point:AFTER FIELD xmdk026 name="input.a.xmdk026"
                                                                                                            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk026
            #add-point:ON CHANGE xmdk026 name="input.g.xmdk026"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk027
            
            #add-point:AFTER FIELD xmdk027 name="input.a.xmdk027"
            
            CALL axmt540_xmdk027_ref(g_xmdk_m.xmdk007,g_xmdk_m.xmdk027)
            RETURNING  g_xmdk_m.xmdk027_desc 
            DISPLAY BY NAME g_xmdk_m.xmdk027_desc
            
            IF NOT cl_null(g_xmdk_m.xmdk027) THEN
               IF g_xmdk_m.xmdk027 <> g_xmdk_m_o.xmdk027 OR cl_null(g_xmdk_m_o.xmdk027) THEN
               
#                  IF NOT axmt540_xmdk007_xmdk027_chk(g_xmdk_m.xmdk007,g_xmdk_m.xmdk027) THEN #160119-00015#1-mod-(S)
                  IF NOT axmt540_xmdk009_xmdk027_chk(g_xmdk_m.xmdk009,g_xmdk_m.xmdk027) THEN  #160119-00015#1-mod-(E)
                     LET g_xmdk_m.xmdk027 = g_xmdk_m_o.xmdk027

                     CALL axmt540_xmdk027_ref(g_xmdk_m.xmdk007,g_xmdk_m.xmdk027)
                     RETURNING  g_xmdk_m.xmdk027_desc 
                     DISPLAY BY NAME g_xmdk_m.xmdk027_desc

                     NEXT FIELD CURRENT
                  END IF
                  
               END IF
            END IF  
            
            LET g_xmdk_m_o.xmdk027 = g_xmdk_m.xmdk027
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk027
            #add-point:BEFORE FIELD xmdk027 name="input.b.xmdk027"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk027
            #add-point:ON CHANGE xmdk027 name="input.g.xmdk027"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk038
            
            #add-point:AFTER FIELD xmdk038 name="input.a.xmdk038"
            
            CALL s_desc_get_acc_desc('299',g_xmdk_m.xmdk038) RETURNING g_xmdk_m.xmdk038_desc
            DISPLAY BY NAME g_xmdk_m.xmdk038_desc
            
            IF NOT cl_null(g_xmdk_m.xmdk038) THEN 
               IF g_xmdk_m.xmdk038 <> g_xmdk_m_o.xmdk038 OR cl_null(g_xmdk_m_o.xmdk038) THEN
               
                  IF NOT s_azzi650_chk_exist('299',g_xmdk_m.xmdk038) THEN
                     LET g_xmdk_m.xmdk038 = g_xmdk_m_o.xmdk038

                     CALL s_desc_get_acc_desc('299',g_xmdk_m.xmdk038) RETURNING g_xmdk_m.xmdk038_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk038_desc

                     NEXT FIELD CURRENT
                  END IF
                  
               END IF
            END IF 

            LET g_xmdk_m_o.xmdk038 = g_xmdk_m.xmdk038
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk038
            #add-point:BEFORE FIELD xmdk038 name="input.b.xmdk038"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk038
            #add-point:ON CHANGE xmdk038 name="input.g.xmdk038"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk055
            #add-point:BEFORE FIELD xmdk055 name="input.b.xmdk055"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk055
            
            #add-point:AFTER FIELD xmdk055 name="input.a.xmdk055"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk055
            #add-point:ON CHANGE xmdk055 name="input.g.xmdk055"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk010
            
            #add-point:AFTER FIELD xmdk010 name="input.a.xmdk010"
 
            CALL s_desc_get_ooib002_desc(g_xmdk_m.xmdk010) RETURNING g_xmdk_m.xmdk010_desc
            DISPLAY BY NAME g_xmdk_m.xmdk010_desc
            
            IF NOT cl_null(g_xmdk_m.xmdk010) THEN
               IF g_xmdk_m.xmdk010 <> g_xmdk_m_o.xmdk010 OR cl_null(g_xmdk_m_o.xmdk010) THEN
               
                  IF NOT s_axmt540_receive_condition_chk(g_xmdk_m.xmdk007,g_xmdk_m.xmdk010) THEN
                     LET g_xmdk_m.xmdk010 = g_xmdk_m_o.xmdk010

                     CALL s_desc_get_ooib002_desc(g_xmdk_m.xmdk010) RETURNING g_xmdk_m.xmdk010_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk010_desc

                     NEXT FIELD CURRENT
                  END IF
                  
                  #更新單身
                  IF NOT axmt540_detail_update('','',g_xmdk_m.xmdk017,'0') THEN
                     LET g_xmdk_m.xmdk010 = g_xmdk_m_o.xmdk010
                     
                     CALL s_desc_get_ooib002_desc(g_xmdk_m.xmdk010) RETURNING g_xmdk_m.xmdk010_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk010_desc

                     CALL s_transaction_end('N',0)
                     CALL s_transaction_begin()

                     NEXT FIELD CURRENT
                  END IF
                  
               END IF            
            END IF 
            
            LET g_xmdk_m_o.xmdk010 = g_xmdk_m.xmdk010
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk010
            #add-point:BEFORE FIELD xmdk010 name="input.b.xmdk010"
            IF cl_null(g_xmdk_m.xmdk007) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00145'          #請先輸入客戶編號
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
               NEXT FIELD xmdk007
            END IF
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk010
            #add-point:ON CHANGE xmdk010 name="input.g.xmdk010"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk011
            
            #add-point:AFTER FIELD xmdk011 name="input.a.xmdk011"
            CALL s_desc_get_acc_desc('238',g_xmdk_m.xmdk011) RETURNING g_xmdk_m.xmdk011_desc
            DISPLAY BY NAME g_xmdk_m.xmdk011_desc

            IF NOT cl_null(g_xmdk_m.xmdk011) THEN
               IF g_xmdk_m.xmdk011 <> g_xmdk_m_o.xmdk011 OR cl_null(g_xmdk_m_o.xmdk011) THEN
               
                  IF NOT s_azzi650_chk_exist('238',g_xmdk_m.xmdk011) THEN
                     LET g_xmdk_m.xmdk011 = g_xmdk_m_o.xmdk011

                     CALL s_desc_get_acc_desc('238',g_xmdk_m.xmdk011) RETURNING g_xmdk_m.xmdk011_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk011_desc

                     NEXT FIELD CURRENT
                  END IF
                  
                  #更新單身
                  IF NOT axmt540_detail_update('','',g_xmdk_m.xmdk017,'0') THEN
                     LET g_xmdk_m.xmdk011 = g_xmdk_m_o.xmdk011
                     
                     CALL s_desc_get_acc_desc('238',g_xmdk_m.xmdk011) RETURNING g_xmdk_m.xmdk011_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk011_desc

                     CALL s_transaction_end('N',0)
                     CALL s_transaction_begin()

                     NEXT FIELD CURRENT
                  END IF                  
                  
               END IF            
            END IF 
            
            LET g_xmdk_m_o.xmdk011 = g_xmdk_m.xmdk011
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk011
            #add-point:BEFORE FIELD xmdk011 name="input.b.xmdk011"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk011
            #add-point:ON CHANGE xmdk011 name="input.g.xmdk011"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk012
            
            #add-point:AFTER FIELD xmdk012 name="input.a.xmdk012"
            CALL s_desc_get_tax_desc1(g_site,g_xmdk_m.xmdk012) RETURNING g_xmdk_m.xmdk012_desc
            DISPLAY BY NAME g_xmdk_m.xmdk012_desc            
            
            IF NOT cl_null(g_xmdk_m.xmdk012) THEN 
               IF g_xmdk_m.xmdk012 <> g_xmdk_m_o.xmdk012 OR cl_null(g_xmdk_m_o.xmdk012) THEN
                  
                  #檢查、取得稅別、單價含稅否
                  CALL s_tax_chk(g_site,g_xmdk_m.xmdk012) RETURNING l_success,l_oodbl004,l_oodb005,l_oodb006,l_oodb011
       
                  IF NOT l_success THEN
                     LET g_xmdk_m.xmdk012 = g_xmdk_m_o.xmdk012
                     
                     CALL s_desc_get_tax_desc1(g_site,g_xmdk_m.xmdk012) RETURNING g_xmdk_m.xmdk012_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk012_desc
                     
                     NEXT FIELD CURRENT
                  END IF
                  
                  #更新單身
                  IF NOT axmt540_detail_update(l_oodb006,l_oodb011,g_xmdk_m.xmdk017,'1') THEN
                     LET g_xmdk_m.xmdk012 = g_xmdk_m_o.xmdk012
                     DISPLAY BY NAME g_xmdk_m.xmdk012
                     
                     CALL s_transaction_end('N',0)
                     CALL s_transaction_begin()
                     
                     CALL s_desc_get_tax_desc1(g_site,g_xmdk_m.xmdk012) RETURNING g_xmdk_m.xmdk012_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk012_desc
                     
                     NEXT FIELD CURRENT
                  END IF
                              
                  LET g_xmdk_m.xmdk013 = l_oodb006
                  DISPLAY BY NAME g_xmdk_m.xmdk013
                  LET g_xmdk_m.xmdk014 = l_oodb005
                  DISPLAY BY NAME g_xmdk_m.xmdk014

               END IF
            END IF             
            
            LET g_xmdk_m_o.xmdk012 = g_xmdk_m.xmdk012
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk012
            #add-point:BEFORE FIELD xmdk012 name="input.b.xmdk012"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk012
            #add-point:ON CHANGE xmdk012 name="input.g.xmdk012"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk013
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdk_m.xmdk013,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xmdk013
            END IF 
 
 
 
            #add-point:AFTER FIELD xmdk013 name="input.a.xmdk013"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk013
            #add-point:BEFORE FIELD xmdk013 name="input.b.xmdk013"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk013
            #add-point:ON CHANGE xmdk013 name="input.g.xmdk013"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk014
            #add-point:BEFORE FIELD xmdk014 name="input.b.xmdk014"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk014
            
            #add-point:AFTER FIELD xmdk014 name="input.a.xmdk014"
                                                                                                            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk014
            #add-point:ON CHANGE xmdk014 name="input.g.xmdk014"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk015
            
            #add-point:AFTER FIELD xmdk015 name="input.a.xmdk015"
            
            CALL s_desc_get_invoice_type_desc1(g_site,g_xmdk_m.xmdk015) RETURNING g_xmdk_m.xmdk015_desc
            DISPLAY BY NAME g_xmdk_m.xmdk015_desc
            
            IF NOT cl_null(g_xmdk_m.xmdk015) THEN 
               IF g_xmdk_m.xmdk015 <> g_xmdk_m_o.xmdk015 OR cl_null(g_xmdk_m_o.xmdk015) THEN

                  #取得稅區
                  CALL s_tax_get_ooef019(g_site) RETURNING l_success,l_ooef019

                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
               
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = l_ooef019
                  LET g_chkparam.arg2 = g_xmdk_m.xmdk015
                  
                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_isac002") THEN
                     LET g_xmdk_m.xmdk015 = g_xmdk_m_o.xmdk015

                     CALL s_desc_get_invoice_type_desc1(g_site,g_xmdk_m.xmdk015) RETURNING g_xmdk_m.xmdk015_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk015_desc

                     NEXT FIELD CURRENT
                  END IF            
               END IF
            END IF 
            
            LET g_xmdk_m_o.xmdk015 = g_xmdk_m.xmdk015
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk015
            #add-point:BEFORE FIELD xmdk015 name="input.b.xmdk015"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk015
            #add-point:ON CHANGE xmdk015 name="input.g.xmdk015"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk016
            
            #add-point:AFTER FIELD xmdk016 name="input.a.xmdk016"
            CALL s_desc_get_currency_desc(g_xmdk_m.xmdk016) RETURNING g_xmdk_m.xmdk016_desc
            DISPLAY BY NAME g_xmdk_m.xmdk016_desc

            IF NOT cl_null(g_xmdk_m.xmdk016) THEN
               IF g_xmdk_m.xmdk016 <> g_xmdk_m_o.xmdk016 OR cl_null(g_xmdk_m_o.xmdk016) THEN
                  
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  #160318-00025#15 by 07900 --add-str 
                  LET g_errshow = TRUE #是否開窗
                  #160318-00025#15 by 07900 --add-end
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_site
                  LET g_chkparam.arg2 = g_xmdk_m.xmdk016
                  #160318-00025#15 by 07900 --add-str 
                  LET g_chkparam.err_str[1] ="aoo-00176:sub-01302|aooi150|",cl_get_progname("aooi150",g_lang,"2"),"|:EXEPROGaooi150"
                  #160318-00025#15 by 07900 --add-end 
                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_ooaj002") THEN
                     LET g_xmdk_m.xmdk016 = g_xmdk_m_o.xmdk016
                     
                     CALL s_desc_get_currency_desc(g_xmdk_m.xmdk016) RETURNING g_xmdk_m.xmdk016_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk016_desc
                     
                     NEXT FIELD CURRENT
                  END IF

                  #帶出匯率
                  #modify--151118-00012#1 By shiun  更改取匯率方式--(S)
                  CALL axmt540_xmda_xmdk017() RETURNING l_xmdk017
                  IF cl_null(l_xmdk017) THEN
                     CALL axmt540_get_ratedate() RETURNING g_ratedate
                     CALL s_axmt540_get_exchange(g_xmdk_m.xmdk042,g_xmdk_m.xmdk016,g_ratedate) RETURNING l_xmdk017
                  END IF
                  #modify--151118-00012#1 By shiun  更改取匯率方式--(E)

                  #更新單身
                  IF NOT axmt540_detail_update('','',l_xmdk017,'2') THEN
                     LET g_xmdk_m.xmdk016 = g_xmdk_m_o.xmdk016
                     CALL s_desc_get_currency_desc(g_xmdk_m.xmdk016) RETURNING g_xmdk_m.xmdk016_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk016_desc

                     CALL s_transaction_end('N',0)
                     CALL s_transaction_begin()                     
                     
                     NEXT FIELD CURRENT
                  END IF
                  
                  LET g_xmdk_m.xmdk017 = l_xmdk017
                  LET g_xmdk_m_o.xmdk017 = g_xmdk_m.xmdk017
                  DISPLAY BY NAME g_xmdk_m.xmdk017

               END IF
            END IF                         
            
            LET g_xmdk_m_o.xmdk016 = g_xmdk_m.xmdk016
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk016
            #add-point:BEFORE FIELD xmdk016 name="input.b.xmdk016"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk016
            #add-point:ON CHANGE xmdk016 name="input.g.xmdk016"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk017
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdk_m.xmdk017,"0","0","","","azz-00079",1) THEN
               NEXT FIELD xmdk017
            END IF 
 
 
 
            #add-point:AFTER FIELD xmdk017 name="input.a.xmdk017"
            IF NOT cl_null(g_xmdk_m.xmdk017) THEN
               IF g_xmdk_m.xmdk017 <> g_xmdk_m_o.xmdk017 OR cl_null(g_xmdk_m_o.xmdk017) THEN

                  #更新單身
                  IF NOT axmt540_detail_update('','',g_xmdk_m.xmdk017,'2') THEN
                     LET g_xmdk_m.xmdk017 = g_xmdk_m_o.xmdk017

                     CALL s_transaction_end('N',0)
                     CALL s_transaction_begin()
                     
                     NEXT FIELD CURRENT
                  END IF

               END IF
            END IF
            
            LET g_xmdk_m_o.xmdk017 = g_xmdk_m.xmdk017
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk017
            #add-point:BEFORE FIELD xmdk017 name="input.b.xmdk017"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk017
            #add-point:ON CHANGE xmdk017 name="input.g.xmdk017"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk018
            
            #add-point:AFTER FIELD xmdk018 name="input.a.xmdk018"
            
            CALL axmt540_xmdk018_ref()            
            IF NOT cl_null(g_xmdk_m.xmdk018) THEN
               IF g_xmdk_m.xmdk018 <> g_xmdk_m_o.xmdk018 OR cl_null(g_xmdk_m_o.xmdk018) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                   #160318-00025#15 by 07900 --add-str 
                  LET g_errshow = TRUE #是否開窗
                  #160318-00025#15 by 07900 --add-end
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmdk_m.xmdk018
                  #160318-00025#15 by 07900 --add-str 
                  LET g_chkparam.err_str[1] ="axm-00026:sub-01302|axmi130|",cl_get_progname("axmi130",g_lang,"2"),"|:EXEPROGaxmi130"
                  #160318-00025#15 by 07900 --add-end
                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_xmah001") THEN
                     LET g_xmdk_m.xmdk018 = g_xmdk_m_o.xmdk018
                     CALL axmt540_xmdk018_ref()
                     
                     NEXT FIELD CURRENT
                  END IF
                  
                  #更新單身
                  IF NOT axmt540_detail_update('','',g_xmdk_m.xmdk017,'0') THEN
                     LET g_xmdk_m.xmdk018 = g_xmdk_m_o.xmdk018
                     CALL axmt540_xmdk018_ref()

                     CALL s_transaction_end('N',0)
                     CALL s_transaction_begin()

                     NEXT FIELD CURRENT
                  END IF
                  
               END IF
            END IF 

            LET g_xmdk_m_o.xmdk018 = g_xmdk_m.xmdk018
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk018
            #add-point:BEFORE FIELD xmdk018 name="input.b.xmdk018"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk018
            #add-point:ON CHANGE xmdk018 name="input.g.xmdk018"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk019
            
            #add-point:AFTER FIELD xmdk019 name="input.a.xmdk019"

            CALL s_desc_ooid001_desc(g_xmdk_m.xmdk019) RETURNING g_xmdk_m.xmdk019_desc
            DISPLAY BY NAME g_xmdk_m.xmdk019_desc

            IF NOT cl_null(g_xmdk_m.xmdk019) THEN 
               IF g_xmdk_m.xmdk019 <> g_xmdk_m_o.xmdk019 OR cl_null(g_xmdk_m_o.xmdk019) THEN
                  
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                   #160318-00025#15 by 07900 --add-str 
                  LET g_errshow = TRUE #是否開窗
                   #160318-00025#15 by 07900 --add-end
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmdk_m.xmdk019
                  #160318-00025#15 by 07900 --add-str 
                 LET g_chkparam.err_str[1] ="aoo-00194:sub-01302|aooi717|",cl_get_progname("aooi717",g_lang,"2"),"|:EXEPROGaooi717"
                 #160318-00025#15 by 07900 --add-end
                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_ooid001_2") THEN
                     LET g_xmdk_m.xmdk019 = g_xmdk_m_o.xmdk019

                     CALL s_desc_ooid001_desc(g_xmdk_m.xmdk019) RETURNING g_xmdk_m.xmdk019_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk019_desc

                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 

            LET g_xmdk_m_o.xmdk019 = g_xmdk_m.xmdk019
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk019
            #add-point:BEFORE FIELD xmdk019 name="input.b.xmdk019"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk019
            #add-point:ON CHANGE xmdk019 name="input.g.xmdk019"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk042
            #add-point:BEFORE FIELD xmdk042 name="input.b.xmdk042"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk042
            
            #add-point:AFTER FIELD xmdk042 name="input.a.xmdk042"
            IF NOT cl_null(g_xmdk_m.xmdk042) THEN
               IF g_xmdk_m.xmdk042 <> g_xmdk_m_o.xmdk042 OR cl_null(g_xmdk_m_o.xmdk042) THEN

                  #帶出匯率
                  #modify--151118-00012#1 By shiun  更改取匯率方式--(S)
                  CALL axmt540_xmda_xmdk017() RETURNING l_xmdk017
                  IF cl_null(l_xmdk017) THEN
                     CALL axmt540_get_ratedate() RETURNING g_ratedate
                     CALL s_axmt540_get_exchange(g_xmdk_m.xmdk042,g_xmdk_m.xmdk016,g_ratedate) RETURNING l_xmdk017
                  END IF
                  #modify--151118-00012#1 By shiun  更改取匯率方式--(E)

                  #更新單身
                  IF NOT axmt540_detail_update('','',l_xmdk017,'2') THEN
                     LET g_xmdk_m.xmdk042 = g_xmdk_m_o.xmdk042

                     CALL s_transaction_end('N',0)
                     CALL s_transaction_begin()

                     NEXT FIELD CURRENT
                  END IF
                  
                  LET g_xmdk_m.xmdk017 = l_xmdk017
                  LET g_xmdk_m_o.xmdk017 = g_xmdk_m.xmdk017
                  DISPLAY BY NAME g_xmdk_m.xmdk017

               END IF
            END IF
            
            LET g_xmdk_m_o.xmdk042 = g_xmdk_m.xmdk042
            CALL axmt540_set_no_required(p_cmd)
            CALL axmt540_set_required(p_cmd)
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk042
            #add-point:ON CHANGE xmdk042 name="input.g.xmdk042"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk043
            #add-point:BEFORE FIELD xmdk043 name="input.b.xmdk043"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk043
            
            #add-point:AFTER FIELD xmdk043 name="input.a.xmdk043"
            IF NOT cl_null(g_xmdk_m.xmdk043) THEN
               IF g_xmdk_m.xmdk043 <> g_xmdk_m_o.xmdk043 OR cl_null(g_xmdk_m_o.xmdk043) THEN             
                  
                  #匯率計算基準為 1:依訂單日匯率
                  IF NOT cl_null(g_xmdk_m.xmdk006) AND g_xmdk_m.xmdk043 = '1' THEN
                     LET l_xmdk017 = ''
                     SELECT xmda016 INTO l_xmdk017
                       FROM xmda_t
                      WHERE xmdaent = g_enterprise
                        AND xmdadocno = g_xmdk_m.xmdk006

                     #更新單身
                     IF NOT axmt540_detail_update('','',l_xmdk017,'2') THEN
                        LET g_xmdk_m.xmdk043 = g_xmdk_m_o.xmdk043

                        CALL s_transaction_end('N',0)
                        CALL s_transaction_begin()

                        NEXT FIELD CURRENT
                     END IF
                  
                     LET g_xmdk_m.xmdk017 = l_xmdk017
                     LET g_xmdk_m_o.xmdk017 = g_xmdk_m.xmdk017
                     DISPLAY BY NAME g_xmdk_m.xmdk017

                  END IF
               END IF
            END IF 

            LET g_xmdk_m_o.xmdk043 = g_xmdk_m.xmdk043

            CALL axmt540_set_entry(p_cmd)
            CALL axmt540_set_no_entry(p_cmd)
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk043
            #add-point:ON CHANGE xmdk043 name="input.g.xmdk043"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk031
            
            #add-point:AFTER FIELD xmdk031 name="input.a.xmdk031"
            CALL s_desc_get_acc_desc('295',g_xmdk_m.xmdk031) RETURNING g_xmdk_m.xmdk031_desc
            DISPLAY BY NAME g_xmdk_m.xmdk031_desc

            IF NOT cl_null(g_xmdk_m.xmdk031) THEN
               IF g_xmdk_m.xmdk031 <> g_xmdk_m_o.xmdk031 OR cl_null(g_xmdk_m_o.xmdk031) THEN 
               
                  IF NOT s_azzi650_chk_exist('295',g_xmdk_m.xmdk031) THEN
                     LET g_xmdk_m.xmdk031 = g_xmdk_m_o.xmdk031
                
                     CALL s_desc_get_acc_desc('295',g_xmdk_m.xmdk031) RETURNING g_xmdk_m.xmdk031_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk031_desc
                
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 
            
            LET g_xmdk_m_o.xmdk031 = g_xmdk_m.xmdk031
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk031
            #add-point:BEFORE FIELD xmdk031 name="input.b.xmdk031"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk031
            #add-point:ON CHANGE xmdk031 name="input.g.xmdk031"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk033
            
            #add-point:AFTER FIELD xmdk033 name="input.a.xmdk033"
            CALL s_desc_get_acc_desc('209',g_xmdk_m.xmdk033) RETURNING g_xmdk_m.xmdk033_desc
            DISPLAY BY NAME g_xmdk_m.xmdk033_desc
            
            IF NOT cl_null(g_xmdk_m.xmdk033) THEN
               IF g_xmdk_m.xmdk033 <> g_xmdk_m_o.xmdk033 OR cl_null(g_xmdk_m_o.xmdk033) THEN
            
                  IF NOT s_azzi650_chk_exist('209',g_xmdk_m.xmdk033) THEN
                     LET g_xmdk_m.xmdk033 = g_xmdk_m_o.xmdk033
                
                     CALL s_desc_get_acc_desc('209',g_xmdk_m.xmdk033) RETURNING g_xmdk_m.xmdk033_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk033_desc
                
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 

            LET g_xmdk_m_o.xmdk033 = g_xmdk_m.xmdk033
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk033
            #add-point:BEFORE FIELD xmdk033 name="input.b.xmdk033"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk033
            #add-point:ON CHANGE xmdk033 name="input.g.xmdk033"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk044
            
            #add-point:AFTER FIELD xmdk044 name="input.a.xmdk044"
            IF NOT cl_null(g_xmdk_m.xmdk044) THEN 
               IF g_xmdk_m.xmdk044 <> g_xmdk_m_o.xmdk044 OR cl_null(g_xmdk_m_o.xmdk044) THEN
               
                  IF NOT axmt540_xmdk044_chk(g_xmdk_m.xmdk044,g_xmdk_m.xmdk002) THEN
                     LET g_xmdk_m.xmdk044 = g_xmdk_m_o.xmdk044
                     NEXT FIELD CURRENT
                  END IF
                  
               END IF
            END IF 

            LET g_xmdk_m_o.xmdk044 = g_xmdk_m.xmdk044
            
            CALL axmt540_set_entry(p_cmd)
            CALL axmt540_set_no_entry(p_cmd)
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk044
            #add-point:BEFORE FIELD xmdk044 name="input.b.xmdk044"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk044
            #add-point:ON CHANGE xmdk044 name="input.g.xmdk044"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk035
            #add-point:BEFORE FIELD xmdk035 name="input.b.xmdk035"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk035
            
            #add-point:AFTER FIELD xmdk035 name="input.a.xmdk035"
            IF NOT cl_null(g_xmdk_m.xmdk035) THEN 
               IF g_xmdk_m.xmdk035 <> g_xmdk_m_o.xmdk035 OR cl_null(g_xmdk_m_o.xmdk035) THEN
                  
                  #150917-00001#3  2016/01/19 By earl mark s
#                  #中斷續拋
#                  IF axmt540_break_continue(g_xmdk_m.xmdk044) THEN
#                     #多角序號檢查
#                     IF NOT cl_null(g_xmdk_m.xmdk005) THEN
#                        IF NOT axmt540_source_xmdk035_chk('1',g_xmdk_m.xmdk005,g_xmdk_m.xmdk035) THEN
#                           LET g_xmdk_m.xmdk035 = g_xmdk_m_o.xmdk035
#                           NEXT FIELD CURRENT
#                        END IF
#                     ELSE
#                        IF NOT cl_null(g_xmdk_m.xmdk006) THEN
#                           IF NOT axmt540_source_xmdk035_chk('2',g_xmdk_m.xmdk006,g_xmdk_m.xmdk035) THEN
#                              LET g_xmdk_m.xmdk035 = g_xmdk_m_o.xmdk035
#                              NEXT FIELD CURRENT
#                           END IF
#                        END IF
#                     END IF
#                  END IF
                  #150917-00001#3  2016/01/19 By earl mark e
                  
               END IF
            END IF 

            LET g_xmdk_m_o.xmdk035 = g_xmdk_m.xmdk035

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk035
            #add-point:ON CHANGE xmdk035 name="input.g.xmdk035"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk046
            #add-point:BEFORE FIELD xmdk046 name="input.b.xmdk046"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk046
            
            #add-point:AFTER FIELD xmdk046 name="input.a.xmdk046"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk046
            #add-point:ON CHANGE xmdk046 name="input.g.xmdk046"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdk036
            #add-point:BEFORE FIELD xmdk036 name="input.b.xmdk036"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdk036
            
            #add-point:AFTER FIELD xmdk036 name="input.a.xmdk036"
                                                                                                            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdk036
            #add-point:ON CHANGE xmdk036 name="input.g.xmdk036"
                                                                                                            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.xmdk000
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk000
            #add-point:ON ACTION controlp INFIELD xmdk000 name="input.c.xmdk000"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.xmdksite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdksite
            #add-point:ON ACTION controlp INFIELD xmdksite name="input.c.xmdksite"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.xmdkdocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdkdocno
            #add-point:ON ACTION controlp INFIELD xmdkdocno name="input.c.xmdkdocno"
            
            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdkdocno             #給予default值

            #給予arg
            LET l_ooef004 = ''
            SELECT ooef004 
              INTO l_ooef004
              FROM ooef_t
             WHERE ooefent = g_enterprise 
               AND ooef001 = g_site 
               AND ooefstus = 'Y'
             
            LET g_qryparam.arg1 = l_ooef004
            LET g_qryparam.arg2 = g_prog

            IF NOT cl_null(g_xmdk_m.xmdk005) THEN  #已有輸入出通單
               CALL s_aooi210_get_search_sql(g_site,'',g_xmdk_m.xmdk005,g_prog) RETURNING l_success,l_where
            ELSE
               IF NOT cl_null(g_xmdk_m.xmdk006) THEN  #已有輸入訂單
                  CALL s_aooi210_get_search_sql(g_site,'',g_xmdk_m.xmdk006,g_prog) RETURNING l_success,l_where
               ELSE  #皆無輸入
                  LET l_success = TRUE
                  LET l_where = ' 1=1 '
               END IF
            END IF

            IF l_success THEN
               #160225-00047#1  2016/3/9 By earl add s
               CALL s_control_get_docno_sql(g_user,g_dept) RETURNING l_success,l_where1
               IF l_success THEN
                  LET l_where = l_where,' AND ',l_where1
               END IF
               #160225-00047#1  2016/3/9 By earl add e
            
               #151210-00009#1  2015/12/30 By earl s
               IF g_aic_doc THEN
                  LET l_where = l_where,
                                " AND NOT EXISTS (SELECT 1 FROM icaa_t,icab_t a,icac_t ",
                                "                  WHERE icaaent = a.icabent AND a.icabent = icacent AND icacent = ",g_enterprise,
                                "                    AND icaa001 = a.icab001 AND a.icab001 = icac001",
                                "                    AND a.icab002 = icac002",
                                "                    AND a.icab003 = '",g_site,"'",
                                "                    AND (ooba002 = icac007 OR ooba002 = icac015)",
                                #排除正拋初始站、逆拋最終站、逆拋中斷初始站
                                "                    AND NOT ((icaa003 = '1'",
                                "                              AND (icaa004 = '1' OR (icaa004 = '2' AND icaa005 = 'Y')) AND a.icab002 = '0')",
                                "                          OR ((icaa003 = '1' OR icaa003 = '2')",
                                "                              AND icaa004 = '2' AND a.icab002 = (SELECT MAX(b.icab002) FROM icab_t b",
                                "                                                                  WHERE b.icabent = icaaent",
                                "                                                                    AND b.icab001 = icaa001))",
                                "                            )",
                                "                )"
               END IF
               #151210-00009#1  2015/12/30 By earl e
               
               LET g_qryparam.where = l_where
               CALL q_ooba002_1()                                #呼叫開窗

               LET g_xmdk_m.xmdkdocno = g_qryparam.return1              #將開窗取得的值回傳到變數

               DISPLAY g_xmdk_m.xmdkdocno TO xmdkdocno              #顯示到畫面上

               CALL s_aooi200_get_slip_desc(g_xmdk_m.xmdkdocno) RETURNING g_xmdk_m.xmdkdocno_desc
               DISPLAY BY NAME g_xmdk_m.xmdkdocno_desc
            
            END IF
            
            NEXT FIELD xmdkdocno                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmdkdocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdkdocdt
            #add-point:ON ACTION controlp INFIELD xmdkdocdt name="input.c.xmdkdocdt"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk001
            #add-point:ON ACTION controlp INFIELD xmdk001 name="input.c.xmdk001"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk003
            #add-point:ON ACTION controlp INFIELD xmdk003 name="input.c.xmdk003"
            
            #此段落由子樣板a07產生            
            #開窗i段
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
   			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk003             #給予default值

            #給予arg

#wujie 151222 --begin 
            LET g_qryparam.where = " ooag004 ='",g_site,"'"
#wujie 151222 --end

            CALL q_ooag001()                                #呼叫開窗

            LET g_xmdk_m.xmdk003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk003 TO xmdk003              #顯示到畫面上

            CALL s_desc_get_person_desc(g_xmdk_m.xmdk003) RETURNING g_xmdk_m.xmdk003_desc
            DISPLAY BY NAME g_xmdk_m.xmdk003_desc

            NEXT FIELD xmdk003                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmdk004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk004
            #add-point:ON ACTION controlp INFIELD xmdk004 name="input.c.xmdk004"
            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk004             #給予default值

            #給予arg
            IF NOT cl_null(g_xmdk_m.xmdkdocdt) THEN
               LET g_qryparam.arg1 = g_xmdk_m.xmdkdocdt
            ELSE
               LET g_qryparam.arg1 = g_today
            END IF

#wujie 151222 --begin 
            LET g_qryparam.where = " EXISTS (SELECT 1 FROM ooef_t WHERE ooefent = '",g_enterprise,"' AND ooef001 ='",g_site,"' AND ooef017 = ooeg009 )"
#wujie 151222 --end

            CALL q_ooeg001()                                #呼叫開窗

            LET g_xmdk_m.xmdk004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk004 TO xmdk004              #顯示到畫面上

            CALL s_desc_get_department_desc(g_xmdk_m.xmdk004) RETURNING g_xmdk_m.xmdk004_desc
            DISPLAY BY NAME g_xmdk_m.xmdk004_desc

            NEXT FIELD xmdk004                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmdkstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdkstus
            #add-point:ON ACTION controlp INFIELD xmdkstus name="input.c.xmdkstus"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk005
            #add-point:ON ACTION controlp INFIELD xmdk005 name="input.c.xmdk005"
            
            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk005             #給予default值

            #組合過濾前後置單據資料SQL
            CALL s_aooi210_get_check_sql(g_site,'',g_xmdk_m.xmdkdocno,'4','','xmdgdocno') RETURNING l_success,l_where
            #170119-00008#5  2017/01/23 By 08171 --s add
            IF NOT cl_null(g_slip_wc1) AND l_where = '1=1' THEN
               LET g_qryparam.where = "NOT",g_slip_wc1
            ELSE
               LET g_qryparam.where = l_where
            END IF
            #170119-00008#5  2017/01/23 By 08171 --e add
            IF l_success THEN
      			#160623-00014#1-mod-(S)
#      			CASE g_prog
#      			   WHEN 'axmt542'
#      			      LET l_where = l_where," AND xmdg001 = '8' "
#      			   OTHERWISE
#      			      LET l_where = l_where," AND xmdg001 <> '8' "
#      			END CASE
               CASE 
      			   WHEN g_prog MATCHES 'axmt542'
      			      LET l_where = l_where," AND xmdg001 = '8' "
      			   OTHERWISE
      			      LET l_where = l_where," AND xmdg001 <> '8' "
      			END CASE
               #160623-00014#1-mod-(E)
               #過濾已全數輸入出貨單
               LET l_where = l_where," AND xmdh017 > (SELECT COALESCE(SUM(xmdl018),0) ",
                                     "                  FROM xmdk_t,xmdl_t ",
                                     "                 WHERE xmdkent = xmdlent",
                                     "                   AND xmdlent = ",g_enterprise,
                                     "                   AND xmdkdocno = xmdldocno",
                                     "                   AND xmdk000 = '",g_xmdk_m.xmdk000,"'",
                                     "                   AND xmdkstus <> 'X'",
                                     "                   AND xmdl001 = xmdhdocno",
                                     "                   AND xmdl002 = xmdhseq)"
               
               #多角流程代碼限制
               LET l_where = l_where,
                             " AND (xmdg056 IS NULL ",
                             "      OR (xmdg056 IN (SELECT icaa001 FROM icaa_t LEFT OUTER JOIN icab_t ON icabent = icaaent AND icab001 = icaa001 WHERE icaaent = ",g_enterprise, "AND icaastus = 'Y'",
                             "                         AND ((icaa003 = '1' AND icaa004 = '1' AND icab002 = 0 AND icab003 = '",g_site,"')",
                             "                              OR ((icaa003 = '1' OR icaa003 = '2') AND icaa004 = '2' AND icab002 = (SELECT MAX(icab002) FROM icab_t WHERE icabent = icaaent AND icab001 = icaa001) AND icab003 = '",g_site,"')",
                             "                              OR (icaa005 = 'Y' AND icaa003 = '1' AND icaa004 = '2'  AND icab002 = 0 AND icab003 = '",g_site,"')",
                             "                             )",
                             "                     )",
                             "         )",
                             "     )"

              #LET g_qryparam.where = l_where #170119-00008#5  2017/01/23 By 08171 mark
               LET g_qryparam.where = g_qryparam.where," AND ",l_where #170119-00008#5  2017/01/23 By 08171 add
               
               CALL q_xmdgdocno()                                #呼叫開窗

               LET g_xmdk_m.xmdk005 = g_qryparam.return1              #將開窗取得的值回傳到變數
               DISPLAY g_xmdk_m.xmdk005 TO xmdk005              #顯示到畫面上
               
            END IF

            NEXT FIELD xmdk005                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmdk006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk006
            #add-point:ON ACTION controlp INFIELD xmdk006 name="input.c.xmdk006"
            
            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk006             #給予default值

            #組合過濾前後置單據資料SQL
            CALL s_aooi210_get_check_sql(g_site,'',g_xmdk_m.xmdkdocno,'4','','xmdadocno') RETURNING l_success,l_where
            
            #170119-00008#5  2017/01/23 By 08171 --s add
            IF NOT cl_null(g_slip_wc2) AND l_where = '1=1' THEN
               LET g_qryparam.where = "NOT",g_slip_wc2
            ELSE
               LET g_qryparam.where = l_where
            END IF
            #170119-00008#5  2017/01/23 By 08171 --e add
            
            IF l_success THEN
               #160623-00014#1-mod-(S)
#      			CASE g_prog
#      			   WHEN 'axmt542'
#      			      LET l_where = l_where," AND xmda005 = '8' "
#      			   OTHERWISE
#      			      LET l_where = l_where," AND xmda005 <> '8' "
#      			END CASE 
               CASE 
      			   WHEN g_prog MATCHES 'axmt542'
      			      LET l_where = l_where," AND xmda005 = '8' "
      			   OTHERWISE
      			      LET l_where = l_where," AND xmda005 <> '8' "
      			END CASE
               #160623-00014#1-mod-(E)
               #過濾已全數輸入出貨單
               LET l_where = l_where," AND (COALESCE(xmdd006,0)+COALESCE(xmdd016,0)+COALESCE(xmdd034,0)) > (SELECT COALESCE(SUM(xmdl018),0) ",
                                     "                  FROM xmdk_t,xmdl_t ",
                                     "                 WHERE xmdkent = xmdlent",
                                     "                   AND xmdlent = ",g_enterprise,
                                     "                   AND xmdkdocno = xmdldocno",
                                     "                   AND xmdk000 = '",g_xmdk_m.xmdk000,"'",
                                     "                   AND xmdkstus <> 'X'",
                                     "                   AND xmdl003 = xmdddocno",
                                     "                   AND xmdl004 = xmddseq",
                                     "                   AND xmdl005 = xmddseq1",
                                     "                   AND xmdl006 = xmddseq2)"

               #多角流程代碼限制
               LET l_where = l_where,
                             " AND (xmda050 IS NULL ",
                             "      OR (xmda050 IN (SELECT icaa001 FROM icaa_t LEFT OUTER JOIN icab_t ON icabent = icaaent AND icab001 = icaa001 WHERE icaaent = ",g_enterprise," AND icaastus = 'Y'",
                             "                         AND ((icaa003 = '1' AND icaa004 = '1' AND icab002 = 0 AND icab003 = '",g_site,"')",
                             "                              OR ((icaa003 = '1' OR icaa003 = '2') AND icaa004 = '2' AND icab002 = (SELECT MAX(icab002) FROM icab_t WHERE icabent = icaaent AND icab001 = icaa001) AND icab003 = '",g_site,"')",
                             "                              OR (icaa005 = 'Y' AND icaa003 = '1' AND icaa004 = '2'  AND icab002 = 0 AND icab003 = '",g_site,"')",
                             "                             )",
                             "                     )",
                             "         )",
                             "      )"

              #LET g_qryparam.where = l_where #170119-00008#5  2017/01/23 By 08171 mark
               LET g_qryparam.where = g_qryparam.where," AND ",l_where #170119-00008#5  2017/01/23 By 08171 add

               CALL q_xmdadocno_2()                                #呼叫開窗

               LET g_xmdk_m.xmdk006 = g_qryparam.return1              #將開窗取得的值回傳到變數
               DISPLAY g_xmdk_m.xmdk006 TO xmdk006              #顯示到畫面上
            
            END IF

            NEXT FIELD xmdk006                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmdk007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk007
            #add-point:ON ACTION controlp INFIELD xmdk007 name="input.c.xmdk007"
            
            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.default1 = g_xmdk_m.xmdk007             #給予default值
			
			   #單據別是否設置限用的資料
            CALL s_control_get_customer_sql('2',g_site,g_user,g_dept,g_xmdk_m.xmdkdocno) RETURNING l_success,l_where
            IF l_success THEN
               LET g_qryparam.where = l_where
            END IF

            LET g_qryparam.arg1 = g_site
            CALL q_pmaa001_6()                                #呼叫開窗

            LET g_xmdk_m.xmdk007 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk007 TO xmdk007              #顯示到畫面上

            CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk007) RETURNING g_xmdk_m.xmdk007_desc
            DISPLAY BY NAME g_xmdk_m.xmdk007_desc

            NEXT FIELD xmdk007                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmdk009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk009
            #add-point:ON ACTION controlp INFIELD xmdk009 name="input.c.xmdk009"
            #此段落由子樣板a07產生            
            #開窗i段
            IF cl_null(g_xmdk_m.xmdk007) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00145'  #請先輸入客戶編號
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()       
               NEXT FIELD xmdk007
            END IF
                        
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk009             #給予default值
            LET g_qryparam.default2 = g_xmdk_m.xmdk009_desc

            #給予arg
            LET g_qryparam.arg1 = g_xmdk_m.xmdk007
            LET g_qryparam.arg2 = g_site

            CALL q_pmac002_6()                                #呼叫開窗

            LET g_xmdk_m.xmdk009 = g_qryparam.return1       #將開窗取得的值回傳到變數
            LET g_xmdk_m.xmdk009_desc = g_qryparam.return2  #交易對象簡稱

            DISPLAY g_xmdk_m.xmdk009 TO xmdk009              #顯示到畫面上
            DISPLAY g_xmdk_m.xmdk009_desc TO xmdk009_desc    #交易對象簡稱
            
            NEXT FIELD xmdk009                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmdk008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk008
            #add-point:ON ACTION controlp INFIELD xmdk008 name="input.c.xmdk008"
            
            #此段落由子樣板a07產生            
            #開窗i段
            IF cl_null(g_xmdk_m.xmdk007) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00145'  #請先輸入客戶編號
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               
               CALL cl_err()       
               NEXT FIELD xmdk007
            END IF
            
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk008             #給予default值
            LET g_qryparam.default2 = g_xmdk_m.xmdk008_desc

            #給予arg
            LET g_qryparam.arg1 = g_xmdk_m.xmdk007
            LET g_qryparam.arg2 = g_site

            CALL q_pmac002_5()                               #呼叫開窗

            LET g_xmdk_m.xmdk008 = g_qryparam.return1              #將開窗取得的值回傳到變數
            LET g_xmdk_m.xmdk008_desc = g_qryparam.return2         #交易對象簡稱

            DISPLAY g_xmdk_m.xmdk008 TO xmdk008              #顯示到畫面上
            DISPLAY g_xmdk_m.xmdk008_desc TO xmdk008_desc    #交易對象簡稱

            NEXT FIELD xmdk008                          #返回原欄位
            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk202
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk202
            #add-point:ON ACTION controlp INFIELD xmdk202 name="input.c.xmdk202"
            
            #此段落由子樣板a07產生            
            #開窗i段
            IF cl_null(g_xmdk_m.xmdk007) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00145'  #請先輸入客戶編號
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               
               CALL cl_err()       
               NEXT FIELD xmdk007
            END IF
            
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk202           #給予default值
            LET g_qryparam.default2 = g_xmdk_m.xmdk202_desc

            #給予arg
            LET g_qryparam.arg1 = g_xmdk_m.xmdk007
            LET g_qryparam.arg2 = g_site

            CALL q_pmac002_7()                               #呼叫開窗

            LET g_xmdk_m.xmdk202 = g_qryparam.return1              #將開窗取得的值回傳到變數
            LET g_xmdk_m.xmdk202_desc = g_qryparam.return2         #交易對象簡稱

            DISPLAY g_xmdk_m.xmdk202 TO xmdk202              #顯示到畫面上
            DISPLAY g_xmdk_m.xmdk202_desc TO xmdk202_desc    #交易對象簡稱

            NEXT FIELD xmdk202                          #返回原欄位
            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk047
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk047
            #add-point:ON ACTION controlp INFIELD xmdk047 name="input.c.xmdk047"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk002
            #add-point:ON ACTION controlp INFIELD xmdk002 name="input.c.xmdk002"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk045
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk045
            #add-point:ON ACTION controlp INFIELD xmdk045 name="input.c.xmdk045"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk032
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk032
            #add-point:ON ACTION controlp INFIELD xmdk032 name="input.c.xmdk032"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk030
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk030
            #add-point:ON ACTION controlp INFIELD xmdk030 name="input.c.xmdk030"
            #此段落由子樣板a07產生            
            #開窗i段
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
   			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk030             #給予default值

            #給予arg
            #160621-00003#3 20160627 modify by beckxie---S
			   #LET g_qryparam.arg1 = "275"
            #CALL q_oocq002()                           #呼叫開窗
            LET g_qryparam.arg1 = '1'
            CALL q_oojd001_1()
            #160621-00003#3 20160627 modify by beckxie---E

            LET g_xmdk_m.xmdk030 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk030 TO xmdk030              #顯示到畫面上

            #160621-00003#3 20160629 modify by beckxie---S
            #CALL s_desc_get_acc_desc('275',g_xmdk_m.xmdk030) RETURNING g_xmdk_m.xmdk030_desc
            CALL s_desc_get_oojdl003_desc(g_xmdk_m.xmdk030) RETURNING g_xmdk_m.xmdk030_desc
            #160621-00003#3 20160629 modify by beckxie---E
            DISPLAY BY NAME g_xmdk_m.xmdk030_desc

            NEXT FIELD xmdk030                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmdk028
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk028
            #add-point:ON ACTION controlp INFIELD xmdk028 name="input.c.xmdk028"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk029
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk029
            #add-point:ON ACTION controlp INFIELD xmdk029 name="input.c.xmdk029"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk034
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk034
            #add-point:ON ACTION controlp INFIELD xmdk034 name="input.c.xmdk034"
            #此段落由子樣板a07產生            
            #開窗i段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk034             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '297'

            CALL q_oocq002()                                #呼叫開窗

            LET g_xmdk_m.xmdk034 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk034 TO xmdk034              #顯示到畫面上


            CALL s_desc_get_acc_desc('297',g_xmdk_m.xmdk034) RETURNING g_xmdk_m.xmdk034_desc
            DISPLAY BY NAME g_xmdk_m.xmdk034_desc

            NEXT FIELD xmdk034                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmdk054
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk054
            #add-point:ON ACTION controlp INFIELD xmdk054 name="input.c.xmdk054"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk039
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk039
            #add-point:ON ACTION controlp INFIELD xmdk039 name="input.c.xmdk039"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk039             #給予default值

            LET g_qryparam.where = "inaa010 = 'Y' "
            
            #150921-00014 earl add s
            #單據別庫位限制(To)
            CALL s_control_get_doc_sql('inaa001',g_xmdk_m.xmdkdocno,'7') RETURNING l_success,l_where
            IF l_success THEN
               LET g_qryparam.where = g_qryparam.where," AND ",l_where
            END IF
            #150921-00014 earl add e
            
            CALL q_inaa001_2()                               #呼叫開窗                               #呼叫開窗

            LET g_xmdk_m.xmdk039 = g_qryparam.return1              

            DISPLAY g_xmdk_m.xmdk039 TO xmdk039              #

            CALL s_desc_get_stock_desc(g_site,g_xmdk_m.xmdk039) RETURNING g_xmdk_m.xmdk039_desc
            DISPLAY BY NAME g_xmdk_m.xmdk039_desc

            NEXT FIELD xmdk039                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmdk040
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk040
            #add-point:ON ACTION controlp INFIELD xmdk040 name="input.c.xmdk040"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk040             #給予default值

            LET g_qryparam.where = "inaa010 = 'N' "

            #150921-00014 earl add s
            #單據別庫位限制(To)
            CALL s_control_get_doc_sql('inaa001',g_xmdk_m.xmdkdocno,'7') RETURNING l_success,l_where
            IF l_success THEN
               LET g_qryparam.where = g_qryparam.where," AND ",l_where
            END IF
            #150921-00014 earl add e
            
            CALL q_inaa001_2()                              #呼叫開窗

            LET g_xmdk_m.xmdk040 = g_qryparam.return1              

            DISPLAY g_xmdk_m.xmdk040 TO xmdk040              #

            CALL s_desc_get_stock_desc(g_site,g_xmdk_m.xmdk040) RETURNING g_xmdk_m.xmdk040_desc
            DISPLAY BY NAME g_xmdk_m.xmdk040_desc            
            
            NEXT FIELD xmdk040                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmdk087
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk087
            #add-point:ON ACTION controlp INFIELD xmdk087 name="input.c.xmdk087"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk021
            #add-point:ON ACTION controlp INFIELD xmdk021 name="input.c.xmdk021"
            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk021             #給予default值

            #給予arg            
            LET g_qryparam.arg1 = s_axmt500_get_pmaa027(g_xmdk_m.xmdk009)

            CALL q_oofb019_1()                                #呼叫開窗

            LET g_xmdk_m.xmdk021 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk021 TO xmdk021              #顯示到畫面上

            CALL axmt540_xmdk021_ref()
            NEXT FIELD xmdk021                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.address
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD address
            #add-point:ON ACTION controlp INFIELD address name="input.c.address"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk022
            #add-point:ON ACTION controlp INFIELD xmdk022 name="input.c.xmdk022"
            
            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk022             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '263'

            CALL q_oocq002()                                #呼叫開窗

            LET g_xmdk_m.xmdk022 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk022 TO xmdk022              #顯示到畫面上

            CALL s_desc_get_acc_desc('263',g_xmdk_m.xmdk022) RETURNING g_xmdk_m.xmdk022_desc
            DISPLAY BY NAME g_xmdk_m.xmdk022_desc

            NEXT FIELD xmdk022                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmdk023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk023
            #add-point:ON ACTION controlp INFIELD xmdk023 name="input.c.xmdk023"
            
            #開窗i段   
            IF cl_null(g_xmdk_m.xmdk022) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00085'  #請先輸入運輸方式
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
       
               NEXT FIELD xmdk022
            END IF   
            
            LET l_oocq019 = ''
            SELECT oocq019 INTO l_oocq019
              FROM oocq_t
             WHERE oocqent = g_enterprise
               AND oocq001 = '263'
               AND oocq002 = g_xmdk_m.xmdk022
            
            CASE
               WHEN l_oocq019 = '1' OR l_oocq019 = '4'      #陸運、海運
                  INITIALIZE g_qryparam.* TO NULL
                  LET g_qryparam.state = 'i'
	               LET g_qryparam.reqry = FALSE

                  LET g_qryparam.default1 = g_xmdk_m.xmdk023             #給予default值

                  LET g_qryparam.arg1 = '315'
                  CALL q_oocq002()                           #呼叫開窗
                  
                  LET g_xmdk_m.xmdk023 = g_qryparam.return1        #將開窗取得的值回傳到變數
                  DISPLAY g_xmdk_m.xmdk023 TO xmdk023              #顯示到畫面上
                 
                    
               WHEN l_oocq019 = '2'      #空運
                  INITIALIZE g_qryparam.* TO NULL
                  LET g_qryparam.state = 'i'
	               LET g_qryparam.reqry = FALSE	              
	              
	               LET g_qryparam.default1 = g_xmdk_m.xmdk023             #給予default值
	              
	               LET g_qryparam.arg1 = '262'
	              
                  CALL q_oocq002()                           #呼叫開窗

                  LET g_xmdk_m.xmdk023 = g_qryparam.return1        #將開窗取得的值回傳到變數
                  DISPLAY g_xmdk_m.xmdk023 TO xmdk023              #顯示到畫面上
               
               WHEN l_oocq019 = '3'      #其它
                  INITIALIZE g_qryparam.* TO NULL
                  LET g_qryparam.state = 'i'
	               LET g_qryparam.reqry = FALSE
	              
	               LET g_qryparam.default1 = g_xmdk_m.xmdk023             #給予default值
	              
	               LET g_qryparam.arg1 = '276'
	              
                  CALL q_oocq002()                           #呼叫開窗

                  LET g_xmdk_m.xmdk023 = g_qryparam.return1        #將開窗取得的值回傳到變數
                  DISPLAY g_xmdk_m.xmdk023 TO xmdk023              #顯示到畫面上
              
            END CASE
            
            CALL axmt540_location_ref(g_xmdk_m.xmdk022,g_xmdk_m.xmdk023) RETURNING g_xmdk_m.xmdk023_desc
            DISPLAY BY NAME g_xmdk_m.xmdk023_desc
            
            NEXT FIELD xmdk023     #返回原欄位 
            #END add-point
 
 
         #Ctrlp:input.c.xmdk024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk024
            #add-point:ON ACTION controlp INFIELD xmdk024 name="input.c.xmdk024"
            
            #開窗i段   
            IF cl_null(g_xmdk_m.xmdk022) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00085'  #請先輸入運輸方式
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
       
               NEXT FIELD xmdk022
            END IF   
            
            LET l_oocq019 = ''
            SELECT oocq019 INTO l_oocq019
              FROM oocq_t
             WHERE oocqent = g_enterprise
               AND oocq001 = '263'
               AND oocq002 = g_xmdk_m.xmdk022
            
            CASE
               WHEN l_oocq019 = '1' OR l_oocq019 = '4'      #陸運、海運                    
                  INITIALIZE g_qryparam.* TO NULL
                  LET g_qryparam.state = 'i'
	               LET g_qryparam.reqry = FALSE

                  LET g_qryparam.default1 = g_xmdk_m.xmdk024             #給予default值
                  
                  LET g_qryparam.arg1 = '315'
	              
                  CALL q_oocq002()                           #呼叫開窗
                  
                  LET g_xmdk_m.xmdk024 = g_qryparam.return1        #將開窗取得的值回傳到變數
                  DISPLAY g_xmdk_m.xmdk024 TO xmdk024              #顯示到畫面上
                 
                    
               WHEN l_oocq019 = '2'      #空運
                  INITIALIZE g_qryparam.* TO NULL
                  LET g_qryparam.state = 'i'
	               LET g_qryparam.reqry = FALSE	              
	              
	               LET g_qryparam.default1 = g_xmdk_m.xmdk024             #給予default值
	              
	               LET g_qryparam.arg1 = '262'
	              
                  CALL q_oocq002()                           #呼叫開窗

                  LET g_xmdk_m.xmdk024 = g_qryparam.return1        #將開窗取得的值回傳到變數
                  DISPLAY g_xmdk_m.xmdk024 TO xmdk024              #顯示到畫面上
               
               WHEN l_oocq019 = '3'      #其它
                  INITIALIZE g_qryparam.* TO NULL
                  LET g_qryparam.state = 'i'
	               LET g_qryparam.reqry = FALSE
	              
	               LET g_qryparam.default1 = g_xmdk_m.xmdk024             #給予default值
	              
	               LET g_qryparam.arg1 = '276'
	              
                  CALL q_oocq002()                           #呼叫開窗

                  LET g_xmdk_m.xmdk024 = g_qryparam.return1        #將開窗取得的值回傳到變數
                  DISPLAY g_xmdk_m.xmdk024 TO xmdk024              #顯示到畫面上
              
            END CASE
            
            CALL axmt540_location_ref(g_xmdk_m.xmdk022,g_xmdk_m.xmdk024) RETURNING g_xmdk_m.xmdk024_desc
            DISPLAY BY NAME g_xmdk_m.xmdk024_desc
            
            NEXT FIELD xmdk024     #返回原欄位 
            #END add-point
 
 
         #Ctrlp:input.c.xmdk020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk020
            #add-point:ON ACTION controlp INFIELD xmdk020 name="input.c.xmdk020"
            
            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk020             #給予default值

            #給予arg

            CALL q_pmaa001_3()                                #呼叫開窗

            LET g_xmdk_m.xmdk020 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk020 TO xmdk020              #顯示到畫面上

            CALL s_desc_get_trading_partner_full_desc(g_xmdk_m.xmdk020) RETURNING g_xmdk_m.xmdk020_desc
            DISPLAY BY NAME g_xmdk_m.xmdk020_desc

            NEXT FIELD xmdk020                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmdk025
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk025
            #add-point:ON ACTION controlp INFIELD xmdk025 name="input.c.xmdk025"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk026
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk026
            #add-point:ON ACTION controlp INFIELD xmdk026 name="input.c.xmdk026"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk027
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk027
            #add-point:ON ACTION controlp INFIELD xmdk027 name="input.c.xmdk027"
            
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdk_m.xmdk027            
#            LET g_qryparam.where = " xmao001 = '",g_xmdk_m.xmdk007,"'" #160119-00015#1-mod-(S)
            LET g_qryparam.where = " xmao001 = '",g_xmdk_m.xmdk009,"'"  #160119-00015#1-mod-(E)
            CALL q_xmao002()                                #呼叫開窗
            LET g_xmdk_m.xmdk027 = g_qryparam.return1              
            DISPLAY g_xmdk_m.xmdk027 TO xmdk027         
            
            CALL axmt540_xmdk027_ref(g_xmdk_m.xmdk007,g_xmdk_m.xmdk027) 
              RETURNING  g_xmdk_m.xmdk027_desc 
            DISPLAY BY NAME g_xmdk_m.xmdk027_desc               
            
            NEXT FIELD xmdk027                              #返回原欄位
            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk038
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk038
            #add-point:ON ACTION controlp INFIELD xmdk038 name="input.c.xmdk038"
           
            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk038             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '299'

            CALL q_oocq002()                                #呼叫開窗

            LET g_xmdk_m.xmdk038 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk038 TO xmdk038              #顯示到畫面上


            CALL s_desc_get_acc_desc('299',g_xmdk_m.xmdk038) RETURNING g_xmdk_m.xmdk038_desc
            DISPLAY BY NAME g_xmdk_m.xmdk038_desc

            NEXT FIELD xmdk038                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmdk055
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk055
            #add-point:ON ACTION controlp INFIELD xmdk055 name="input.c.xmdk055"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk010
            #add-point:ON ACTION controlp INFIELD xmdk010 name="input.c.xmdk010"
            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk010             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_xmdk_m.xmdk007            #客戶編號

            CALL q_pmad002_3()                                #呼叫開窗

            LET g_xmdk_m.xmdk010 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk010 TO xmdk010              #顯示到畫面上

            CALL s_desc_get_ooib002_desc(g_xmdk_m.xmdk010) RETURNING g_xmdk_m.xmdk010_desc
            DISPLAY BY NAME g_xmdk_m.xmdk010_desc
            
            NEXT FIELD xmdk010                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmdk011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk011
            #add-point:ON ACTION controlp INFIELD xmdk011 name="input.c.xmdk011"
            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk011             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '238' #

            CALL q_oocq002()                                #呼叫開窗

            LET g_xmdk_m.xmdk011 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk011 TO xmdk011              #顯示到畫面上

            CALL s_desc_get_acc_desc('238',g_xmdk_m.xmdk011) RETURNING g_xmdk_m.xmdk011_desc
            DISPLAY BY NAME g_xmdk_m.xmdk011_desc

            NEXT FIELD xmdk011                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmdk012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk012
            #add-point:ON ACTION controlp INFIELD xmdk012 name="input.c.xmdk012"
            
            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk012             #給予default值

            LET g_qryparam.arg1 = g_site

            CALL q_oodb002_3()                                #呼叫開窗

            LET g_xmdk_m.xmdk012 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk012 TO xmdk012              #顯示到畫面上

            CALL s_desc_get_tax_desc1(g_site,g_xmdk_m.xmdk012) RETURNING g_xmdk_m.xmdk012_desc
            DISPLAY BY NAME g_xmdk_m.xmdk012_desc
            
            NEXT FIELD xmdk012                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmdk013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk013
            #add-point:ON ACTION controlp INFIELD xmdk013 name="input.c.xmdk013"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk014
            #add-point:ON ACTION controlp INFIELD xmdk014 name="input.c.xmdk014"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk015
            #add-point:ON ACTION controlp INFIELD xmdk015 name="input.c.xmdk015"
            
            #取得稅區
            CALL s_tax_get_ooef019(g_site) RETURNING l_success,l_ooef019            
            
            #此段落由子樣板a07產生            
            #開窗i段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk015             #給予default值

            #給予arg
            LET g_qryparam.arg1 = l_ooef019  #稅區編號 
            LET g_qryparam.arg2 = '2'        #銷項

            CALL q_isac002_1()                                #呼叫開窗

            LET g_xmdk_m.xmdk015 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk015 TO xmdk015              #顯示到畫面上

            CALL s_desc_get_invoice_type_desc1(g_site,g_xmdk_m.xmdk015) RETURNING g_xmdk_m.xmdk015_desc
            DISPLAY BY NAME g_xmdk_m.xmdk015_desc
   
            NEXT FIELD xmdk015                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmdk016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk016
            #add-point:ON ACTION controlp INFIELD xmdk016 name="input.c.xmdk016"
            #開窗i段
	   		INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk016             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_site

            CALL q_ooaj002_1()                                #呼叫開窗

            LET g_xmdk_m.xmdk016 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk016 TO xmdk016              #顯示到畫面上

            CALL s_desc_get_currency_desc(g_xmdk_m.xmdk016) RETURNING g_xmdk_m.xmdk016_desc
            DISPLAY BY NAME g_xmdk_m.xmdk016_desc
            
            NEXT FIELD xmdk016                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmdk017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk017
            #add-point:ON ACTION controlp INFIELD xmdk017 name="input.c.xmdk017"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk018
            #add-point:ON ACTION controlp INFIELD xmdk018 name="input.c.xmdk018"
            
            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk018             #給予default值

            #給予arg

            CALL q_xmah001()                               #呼叫開窗

            LET g_xmdk_m.xmdk018 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk018 TO xmdk018              #顯示到畫面上

            CALL axmt540_xmdk018_ref()
            NEXT FIELD xmdk018                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmdk019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk019
            #add-point:ON ACTION controlp INFIELD xmdk019 name="input.c.xmdk019"
            
            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk019             #給予default值

            #給予arg

            CALL q_ooid001_1()                                #呼叫開窗

            LET g_xmdk_m.xmdk019 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk019 TO xmdk019              #顯示到畫面上

            CALL s_desc_ooid001_desc(g_xmdk_m.xmdk019) RETURNING g_xmdk_m.xmdk019_desc
            DISPLAY BY NAME g_xmdk_m.xmdk019_desc

            NEXT FIELD xmdk019                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmdk042
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk042
            #add-point:ON ACTION controlp INFIELD xmdk042 name="input.c.xmdk042"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk043
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk043
            #add-point:ON ACTION controlp INFIELD xmdk043 name="input.c.xmdk043"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk031
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk031
            #add-point:ON ACTION controlp INFIELD xmdk031 name="input.c.xmdk031"
            
            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk031             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "295"

            CALL q_oocq002()                                #呼叫開窗

            LET g_xmdk_m.xmdk031 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk031 TO xmdk031              #顯示到畫面上

            CALL s_desc_get_acc_desc('295',g_xmdk_m.xmdk031) RETURNING g_xmdk_m.xmdk031_desc
            DISPLAY BY NAME g_xmdk_m.xmdk031_desc

            NEXT FIELD xmdk031                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmdk033
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk033
            #add-point:ON ACTION controlp INFIELD xmdk033 name="input.c.xmdk033"
            
            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
   			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk033             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '209'

            CALL q_oocq002()                                #呼叫開窗

            LET g_xmdk_m.xmdk033 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk033 TO xmdk033              #顯示到畫面上

            CALL s_desc_get_acc_desc('209',g_xmdk_m.xmdk033) RETURNING g_xmdk_m.xmdk033_desc
            DISPLAY BY NAME g_xmdk_m.xmdk033_desc

            NEXT FIELD xmdk033                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmdk044
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk044
            #add-point:ON ACTION controlp INFIELD xmdk044 name="input.c.xmdk044"

            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
   			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk044             #給予default值

            IF g_xmdk_m.xmdk002 = '3' THEN #簽收訂單
               LET g_qryparam.where = "icaa004 = '2'"
            END IF

            CALL q_icaa001_3()                                #呼叫開窗

            LET g_xmdk_m.xmdk044 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk044 TO xmdk044              #顯示到畫面上

            NEXT FIELD xmdk044                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmdk035
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk035
            #add-point:ON ACTION controlp INFIELD xmdk035 name="input.c.xmdk035"

            #此段落由子樣板a08產生
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk035             #給予default值

            LET l_where = ''
            
			   #有來源單號限制
			   IF NOT cl_null(g_xmdk_m.xmdk005) THEN
			      LET l_where = " xmdkdocno IN (SELECT xmdkdocno FROM xmdk_t",
			                    "                WHERE xmdkent = ",g_enterprise,
			                    "                  AND xmdk083 = 'Y'",
			                    "                  AND xmdksite = (SELECT icab003 FROM icab_t ",
			                    "                                   WHERE icabent = ",g_enterprise,
			                    "                                     AND icab001 = xmdk044",
			                    "                                     AND icab002 = (SELECT MAX(icab002) FROM icab_t",
			                    "                                                     WHERE icabent = ",g_enterprise,
			                    "                                                       AND icab001 = xmdk044))",
			                    "                  AND xmdk005 IN (SELECT xmdgdocno FROM xmdg_t",
			                    "                                   WHERE xmdgent = ",g_enterprise,
                             "                                     AND xmdg055 IN (SELECT xmdg055 FROM xmdg_t",
                             "                                                      WHERE xmdgent = ",g_enterprise,
                             "                                                        AND xmdgdocno = '",g_xmdk_m.xmdk005,"')))"

			   ELSE
			      IF NOT cl_null(g_xmdk_m.xmdk006) THEN
			         LET l_where = " xmdkdocno IN (SELECT xmdkdocno FROM xmdk_t",
			                       "                WHERE xmdkent = ",g_enterprise,
			                       "                  AND xmdk083 = 'Y'",
			                       "                  AND xmdksite = (SELECT icab003 FROM icab_t ",
			                       "                                   WHERE icabent = ",g_enterprise,
			                       "                                     AND icab001 = xmdk044",
			                       "                                     AND icab002 = (SELECT MAX(icab002) FROM icab_t",
			                       "                                                     WHERE icabent = ",g_enterprise,
			                       "                                                       AND icab001 = xmdk044))",
			                       "                  AND xmdk006 IN (SELECT xmdadocno FROM xmda_t",
			                       "                                   WHERE xmdaent = ",g_enterprise,
                                "                                     AND xmda031 IN (SELECT xmda031 FROM xmda_t",
                                "                                                      WHERE xmdaent = ",g_enterprise,
                                "                                                        AND xmdadocno = '",g_xmdk_m.xmdk006,"')))"
			      END IF
			   END IF
            #160623-00014#1-mod-(S)
#   			CASE g_prog
#   			   WHEN 'axmt540'
#   			      LET g_qryparam.arg1 = '1'
#   			      LET g_qryparam.arg2 = g_xmdk_m.xmdkdocno
#   			      LET g_qryparam.arg3 = '1'
#   			      LET l_where = l_where," AND xmdk002 <> '8' "
#   			      
#   			   WHEN 'axmt541'
#   			      LET g_qryparam.arg1 = '2'
#   			      LET g_qryparam.arg2 = g_xmdk_m.xmdkdocno
#   			      LET g_qryparam.arg3 = '1'
#   			      
#   			   WHEN 'axmt542'
#   			      LET g_qryparam.arg1 = '1'
#   			      LET g_qryparam.arg2 = g_xmdk_m.xmdkdocno
#   			      LET g_qryparam.arg3 = '1'
#   			      LET l_where = l_where," AND xmdk002 = '8' "
#   			      
#   			END CASE
            CASE 
   			   WHEN g_prog MATCHES 'axmt540'
   			      LET g_qryparam.arg1 = '1'
   			      LET g_qryparam.arg2 = g_xmdk_m.xmdkdocno
   			      LET g_qryparam.arg3 = '1'
   			      LET l_where = l_where," AND xmdk002 <> '8' "
   			   WHEN g_prog MATCHES 'axmt541'
   			      LET g_qryparam.arg1 = '2'
   			      LET g_qryparam.arg2 = g_xmdk_m.xmdkdocno
   			      LET g_qryparam.arg3 = '1'
   			   WHEN g_prog MATCHES 'axmt542'
   			      LET g_qryparam.arg1 = '1'
   			      LET g_qryparam.arg2 = g_xmdk_m.xmdkdocno
   			      LET g_qryparam.arg3 = '1'
   			      LET l_where = l_where," AND xmdk002 = '8' "
   			END CASE
			   #160623-00014#1-mod-(E)			   
			   LET g_qryparam.where = l_where
			   
            CALL q_xmdk035()                           #呼叫開窗
            
            LET g_xmdk_m.xmdk035 = g_qryparam.return1
            
            DISPLAY g_xmdk_m.xmdk035 TO xmdk035  #顯示到畫面上

            NEXT FIELD xmdk035                     #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmdk046
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk046
            #add-point:ON ACTION controlp INFIELD xmdk046 name="input.c.xmdk046"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmdk036
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdk036
            #add-point:ON ACTION controlp INFIELD xmdk036 name="input.c.xmdk036"
                                                                                                            
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_xmdk_m.xmdkdocno
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
               
               #自動產生單號
               CALL s_aooi200_gen_docno(g_site,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocdt,g_prog)
               RETURNING l_success,g_xmdk_m.xmdkdocno
               IF l_success = 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apm-00003'
                  LET g_errparam.extend = g_xmdk_m.xmdkdocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  NEXT FIELD xmdkdocno
               END IF
               DISPLAY BY NAME g_xmdk_m.xmdkdocno
               #end add-point
               
               INSERT INTO xmdk_t (xmdkent,xmdk000,xmdksite,xmdkdocno,xmdkdocdt,xmdk001,xmdk003,xmdk004, 
                   xmdkstus,xmdk005,xmdk006,xmdk007,xmdk009,xmdk008,xmdk202,xmdk047,xmdk002,xmdk045, 
                   xmdk032,xmdk030,xmdk028,xmdk029,xmdk037,xmdk034,xmdk054,xmdk039,xmdk040,xmdk087,xmdk021, 
                   xmdk022,xmdk023,xmdk024,xmdk020,xmdk025,xmdk026,xmdk027,xmdk038,xmdk055,xmdk010,xmdk011, 
                   xmdk012,xmdk013,xmdk014,xmdk015,xmdk016,xmdk017,xmdk018,xmdk019,xmdk042,xmdk043,xmdk031, 
                   xmdk033,xmdk044,xmdk035,xmdk046,xmdk036,xmdk083,xmdkownid,xmdkowndp,xmdkcrtid,xmdkcrtdp, 
                   xmdkcrtdt,xmdkmodid,xmdkmoddt,xmdkcnfid,xmdkcnfdt,xmdkpstid,xmdkpstdt)
               VALUES (g_enterprise,g_xmdk_m.xmdk000,g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocdt, 
                   g_xmdk_m.xmdk001,g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdkstus,g_xmdk_m.xmdk005, 
                   g_xmdk_m.xmdk006,g_xmdk_m.xmdk007,g_xmdk_m.xmdk009,g_xmdk_m.xmdk008,g_xmdk_m.xmdk202, 
                   g_xmdk_m.xmdk047,g_xmdk_m.xmdk002,g_xmdk_m.xmdk045,g_xmdk_m.xmdk032,g_xmdk_m.xmdk030, 
                   g_xmdk_m.xmdk028,g_xmdk_m.xmdk029,g_xmdk_m.xmdk037,g_xmdk_m.xmdk034,g_xmdk_m.xmdk054, 
                   g_xmdk_m.xmdk039,g_xmdk_m.xmdk040,g_xmdk_m.xmdk087,g_xmdk_m.xmdk021,g_xmdk_m.xmdk022, 
                   g_xmdk_m.xmdk023,g_xmdk_m.xmdk024,g_xmdk_m.xmdk020,g_xmdk_m.xmdk025,g_xmdk_m.xmdk026, 
                   g_xmdk_m.xmdk027,g_xmdk_m.xmdk038,g_xmdk_m.xmdk055,g_xmdk_m.xmdk010,g_xmdk_m.xmdk011, 
                   g_xmdk_m.xmdk012,g_xmdk_m.xmdk013,g_xmdk_m.xmdk014,g_xmdk_m.xmdk015,g_xmdk_m.xmdk016, 
                   g_xmdk_m.xmdk017,g_xmdk_m.xmdk018,g_xmdk_m.xmdk019,g_xmdk_m.xmdk042,g_xmdk_m.xmdk043, 
                   g_xmdk_m.xmdk031,g_xmdk_m.xmdk033,g_xmdk_m.xmdk044,g_xmdk_m.xmdk035,g_xmdk_m.xmdk046, 
                   g_xmdk_m.xmdk036,g_xmdk_m.xmdk083,g_xmdk_m.xmdkownid,g_xmdk_m.xmdkowndp,g_xmdk_m.xmdkcrtid, 
                   g_xmdk_m.xmdkcrtdp,g_xmdk_m.xmdkcrtdt,g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmoddt,g_xmdk_m.xmdkcnfid, 
                   g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid,g_xmdk_m.xmdkpstdt) 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_xmdk_m:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               LET g_ooff003_d = g_xmdk_m.xmdkdocno   #161031-00025#26 add
               #end add-point
               
               
               
               
               #add-point:單頭新增後 name="input.head.a_insert"
               
               LET g_ask = TRUE
               
               #150917-00001#3  2016/01/19 By earl mark s
#               #中斷續拋，直接由最終站將資料帶出
#               IF axmt540_break_continue(g_xmdk_m.xmdk044) THEN
#                  
#                  CALL axmt540_default(g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk006,g_xmdk_m.xmdk044,g_xmdk_m.xmdk035)
#                  RETURNING l_success
#                                    
#                  LET g_ask = FALSE
#               
#               ELSE
                  #160623-00014#1-mod-(S)
#                  IF g_prog = 'axmt542' THEN   #借貨出貨單'
#                     LET l_msg = 'axm-00579'   #是否由[借貨出貨通知單axmt521]自動產生單身資料！
#                  ELSE
#                     LET l_msg = 'axm-00098'   #是否由[出貨通知單axmt520]自動產生單身資料！
#                  END IF
                  IF g_prog MATCHES 'axmt542' THEN   #借貨出貨單'
                     LET l_msg = 'axm-00579'   #是否由[借貨出貨通知單axmt521]自動產生單身資料！
                  ELSE
                     LET l_msg = 'axm-00098'   #是否由[出貨通知單axmt520]自動產生單身資料！
                  END IF
                  #160623-00014#1-mod-(E)
                  IF NOT cl_null(g_xmdk_m.xmdk005) THEN
                     IF cl_ask_confirm(l_msg) THEN
                        CALL axmt540_auto_insert_1() RETURNING l_success #自動帶入出通單單身
                     END IF
                  ELSE
                     IF NOT cl_null(g_xmdk_m.xmdk006) THEN               #自動帶入訂單單身
                        CALL axmt540_detail_ask() RETURNING l_success
                     END IF
                  END IF
                  
                  LET g_ask = FALSE
                  
                  IF l_success THEN
                     #重新計算整單的未稅、含稅總金額
                     CALL axmt540_tax_recount(g_xmdk_m.xmdkdocno) RETURNING l_success
                  END IF

#               END IF
               #150917-00001#3  2016/01/19 By earl mark e
               
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF                              
               
               CALL axmt540_b_fill()
               
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL axmt540_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL axmt540_b_fill()
                  CALL axmt540_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
                                
               #end add-point
               
               #將遮罩欄位還原
               CALL axmt540_xmdk_t_mask_restore('restore_mask_o')
               
               UPDATE xmdk_t SET (xmdk000,xmdksite,xmdkdocno,xmdkdocdt,xmdk001,xmdk003,xmdk004,xmdkstus, 
                   xmdk005,xmdk006,xmdk007,xmdk009,xmdk008,xmdk202,xmdk047,xmdk002,xmdk045,xmdk032,xmdk030, 
                   xmdk028,xmdk029,xmdk037,xmdk034,xmdk054,xmdk039,xmdk040,xmdk087,xmdk021,xmdk022,xmdk023, 
                   xmdk024,xmdk020,xmdk025,xmdk026,xmdk027,xmdk038,xmdk055,xmdk010,xmdk011,xmdk012,xmdk013, 
                   xmdk014,xmdk015,xmdk016,xmdk017,xmdk018,xmdk019,xmdk042,xmdk043,xmdk031,xmdk033,xmdk044, 
                   xmdk035,xmdk046,xmdk036,xmdk083,xmdkownid,xmdkowndp,xmdkcrtid,xmdkcrtdp,xmdkcrtdt, 
                   xmdkmodid,xmdkmoddt,xmdkcnfid,xmdkcnfdt,xmdkpstid,xmdkpstdt) = (g_xmdk_m.xmdk000, 
                   g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001,g_xmdk_m.xmdk003, 
                   g_xmdk_m.xmdk004,g_xmdk_m.xmdkstus,g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk007, 
                   g_xmdk_m.xmdk009,g_xmdk_m.xmdk008,g_xmdk_m.xmdk202,g_xmdk_m.xmdk047,g_xmdk_m.xmdk002, 
                   g_xmdk_m.xmdk045,g_xmdk_m.xmdk032,g_xmdk_m.xmdk030,g_xmdk_m.xmdk028,g_xmdk_m.xmdk029, 
                   g_xmdk_m.xmdk037,g_xmdk_m.xmdk034,g_xmdk_m.xmdk054,g_xmdk_m.xmdk039,g_xmdk_m.xmdk040, 
                   g_xmdk_m.xmdk087,g_xmdk_m.xmdk021,g_xmdk_m.xmdk022,g_xmdk_m.xmdk023,g_xmdk_m.xmdk024, 
                   g_xmdk_m.xmdk020,g_xmdk_m.xmdk025,g_xmdk_m.xmdk026,g_xmdk_m.xmdk027,g_xmdk_m.xmdk038, 
                   g_xmdk_m.xmdk055,g_xmdk_m.xmdk010,g_xmdk_m.xmdk011,g_xmdk_m.xmdk012,g_xmdk_m.xmdk013, 
                   g_xmdk_m.xmdk014,g_xmdk_m.xmdk015,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,g_xmdk_m.xmdk018, 
                   g_xmdk_m.xmdk019,g_xmdk_m.xmdk042,g_xmdk_m.xmdk043,g_xmdk_m.xmdk031,g_xmdk_m.xmdk033, 
                   g_xmdk_m.xmdk044,g_xmdk_m.xmdk035,g_xmdk_m.xmdk046,g_xmdk_m.xmdk036,g_xmdk_m.xmdk083, 
                   g_xmdk_m.xmdkownid,g_xmdk_m.xmdkowndp,g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtdp,g_xmdk_m.xmdkcrtdt, 
                   g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmoddt,g_xmdk_m.xmdkcnfid,g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid, 
                   g_xmdk_m.xmdkpstdt)
                WHERE xmdkent = g_enterprise AND xmdkdocno = g_xmdkdocno_t
 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "xmdk_t:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               
               #150917-00001#3  2016/01/19 By earl mark s
#               #中斷續拋，直接由最終站將資料帶出
#               IF axmt540_break_continue(g_xmdk_m.xmdk044) THEN
#                  
#                  CALL axmt540_default(g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk006,g_xmdk_m.xmdk044,g_xmdk_m.xmdk035)
#                  RETURNING l_success
#                  
#                  IF NOT l_success THEN
#                     CALL s_transaction_end('N','0')
#                     CONTINUE DIALOG
#                  END IF    
#               
#                  CALL axmt540_b_fill()
#               END IF
               #150917-00001#3  2016/01/19 By earl mark e
               
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL axmt540_xmdk_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_xmdk_m_t)
               LET g_log2 = util.JSON.stringify(g_xmdk_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
 
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_xmdkdocno_t = g_xmdk_m.xmdkdocno
 
            
      END INPUT
   
 
{</section>}
 
{<section id="axmt540.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_xmdl_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION s_lot_sel
            LET g_action_choice="s_lot_sel"
            IF cl_auth_chk_act("s_lot_sel") THEN
               
               #add-point:ON ACTION s_lot_sel name="input.detail_input.page1.s_lot_sel"
               IF NOT cl_null(g_xmdk_m.xmdkdocno) AND
                  NOT cl_null(g_xmdl_d[g_detail_idx].xmdlseq) AND
                  NOT cl_null(g_xmdl_d[g_detail_idx].xmdl008) AND
                  NOT cl_null(g_xmdl_d[g_detail_idx].xmdl017) AND
                  NOT cl_null(g_xmdl_d[g_detail_idx].xmdl018) AND 
                  NOT cl_null(g_xmdl_d[g_detail_idx].xmdl014) THEN
                  LET l_success = ''
                  IF cl_get_para(g_enterprise,g_site,'S-BAS-0048') = 'N' OR g_xmdl_d[g_detail_idx].xmdl001 IS NULL THEN
                     CALL s_lot_sel('1','2',g_site,g_xmdk_m.xmdkdocno,g_xmdl_d[g_detail_idx].xmdlseq,'1',g_xmdl_d[g_detail_idx].xmdl008,g_xmdl_d[g_detail_idx].xmdl009,g_xmdl_d[g_detail_idx].xmdl052,g_xmdl_d[g_detail_idx].xmdl014,g_xmdl_d[g_detail_idx].xmdl015,g_xmdl_d[g_detail_idx].xmdl016,g_xmdl_d[g_detail_idx].xmdl017,g_xmdl_d[g_detail_idx].xmdl018,'-1',g_prog,'','','','','0')
                          RETURNING l_success
                  ELSE
                     CALL s_axmt540_inao_copy(g_xmdl_d[g_detail_idx].xmdl001,g_xmdl_d[g_detail_idx].xmdl002,'2',g_xmdl_d[g_detail_idx].xmdl052,g_xmdl_d[g_detail_idx].xmdl014,g_xmdl_d[g_detail_idx].xmdl015,g_xmdl_d[g_detail_idx].xmdl016,g_xmdk_m.xmdkdocno,g_xmdl_d[g_detail_idx].xmdlseq,'1','1',g_xmdl_d[g_detail_idx].xmdl013,'1') RETURNING l_success
                                   
                     CALL s_lot_sel('2','2',g_site,g_xmdk_m.xmdkdocno,g_xmdl_d[g_detail_idx].xmdlseq,'1',g_xmdl_d[g_detail_idx].xmdl008,g_xmdl_d[g_detail_idx].xmdl009,g_xmdl_d[g_detail_idx].xmdl052,g_xmdl_d[g_detail_idx].xmdl014,g_xmdl_d[g_detail_idx].xmdl015,g_xmdl_d[g_detail_idx].xmdl016,g_xmdl_d[g_detail_idx].xmdl017,g_xmdl_d[g_detail_idx].xmdl018,'-1',g_prog,'','','','','0')
                          RETURNING l_success 

                     IF l_success THEN     
                        CALL s_axmt540_update_inao(g_xmdk_m.xmdkdocno,g_xmdl_d[g_detail_idx].xmdlseq,'1',g_xmdl_d[g_detail_idx].xmdl001,g_xmdl_d[g_detail_idx].xmdl002,'1','1') RETURNING l_success 
                     END IF
                     #刪除申請資料                              
                     DELETE FROM inao_t 
                      WHERE inaoent = g_enterprise 
                        AND inaosite = g_site
                        AND inaodocno = g_xmdk_m.xmdkdocno
                        AND inaoseq = g_xmdl_d[g_detail_idx].xmdlseq
                        AND inaoseq1 = '1'
                        AND inao000 = '1'
                        AND inao013 = '-1'                      
                  END IF        
               END IF
               #END add-point
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION apjm210_shift_to
            LET g_action_choice="apjm210_shift_to"
            IF cl_auth_chk_act("apjm210_shift_to") THEN
               
               #add-point:ON ACTION apjm210_shift_to name="input.detail_input.page1.apjm210_shift_to"
               #無訂單出貨時，才可執行此action(執行預算轉入)
               IF (NOT cl_null(g_xmdk_m.xmdkdocno)) AND g_xmdk_m.xmdk000 = '2' THEN
                  IF axmt540_apjm210_shift_to() THEN
                     LET g_flag = TRUE
                     EXIT DIALOG
                  END IF
               END IF
               #END add-point
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION axmt540_call_axmt540_01
            LET g_action_choice="axmt540_call_axmt540_01"
            IF cl_auth_chk_act("axmt540_call_axmt540_01") THEN
               
               #add-point:ON ACTION axmt540_call_axmt540_01 name="input.detail_input.page1.axmt540_call_axmt540_01"
               #150821-xianghui-b
               #CREATE TEMP TABLE
               DROP TABLE axmt540_inao2
               LET g_sql = "CREATE GLOBAL TEMPORARY TABLE axmt540_inao2 AS ",
                            #mod--161109-00085#4-s
                            #"SELECT * FROM inao_t"
                            #161109-00085#76 --s mark
                            #"SELECT inaoent,inaosite,inaodocno,inaoseq,inaoseq1,
                            #        inaoseq2,inao000,inao001,inao002,inao003,
                            #        inao004,inao005,inao006,inao007,inao008,
                            #        inao009,inao010,inao011,inao012,inao013,
                            #        inao014,inao020,inao021,inao022,inao023,
                            #        inao024,inao025 
                            # FROM inao_t "
                            #161109-00085#76 --e mark
                            #mod--161109-00085#4-e
                            #161109-00085#76 --s add
                            " SELECT inaoent,inaosite,inaodocno,inaoseq,inaoseq1, ",
                            "        inaoseq2,inao000,inao001,inao002,inao003, ",
                            "        inao004,inao005,inao006,inao007,inao008, ",
                            "        inao009,inao010,inao011,inao012,inao013, ",
                            "        inaoud001,inaoud002,inaoud003,inaoud004,inaoud005, ",
                            "        inaoud006,inaoud007,inaoud008,inaoud009,inaoud010, ",
                            "        inaoud011,inaoud012,inaoud013,inaoud014,inaoud015, ",
                            "        inaoud016,inaoud017,inaoud018,inaoud019,inaoud020, ",
                            "        inaoud021,inaoud022,inaoud023,inaoud024,inaoud025, ",
                            "        inaoud026,inaoud027,inaoud028,inaoud029,inaoud030, ",
                            "        inao014,inao020,inao021,inao022,inao023, ",
                            "        inao024,inao025 ",
                            "   FROM inao_t "
                            #161109-00085#76 --e add
               PREPARE inao_tbl2 FROM g_sql
               EXECUTE inao_tbl2
               FREE inao_tbl2              
               INSERT INTO axmt540_inao2 
                                           #mod--161109-00085#4-s
                                           #SELECT * FROM inao_t
                                           SELECT inaoent,inaosite,inaodocno,inaoseq,inaoseq1,
                                                  inaoseq2,inao000,inao001,inao002,inao003,
                                                  inao004,inao005,inao006,inao007,inao008,
                                                  inao009,inao010,inao011,inao012,inao013,
                                                  #161109-00085#76 --s add
                                                  inaoud001,inaoud002,inaoud003,inaoud004,inaoud005,
                                                  inaoud006,inaoud007,inaoud008,inaoud009,inaoud010,
                                                  inaoud011,inaoud012,inaoud013,inaoud014,inaoud015,
                                                  inaoud016,inaoud017,inaoud018,inaoud019,inaoud020,
                                                  inaoud021,inaoud022,inaoud023,inaoud024,inaoud025,
                                                  inaoud026,inaoud027,inaoud028,inaoud029,inaoud030,
                                                  #161109-00085#76 --e add
                                                  inao014,inao020,inao021,inao022,inao023,
                                                  inao024,inao025 
                                           FROM inao_t 
                                           #mod--161109-00085#4-e                                          
                                           WHERE inaoent = g_enterprise 
                                             AND inaodocno = g_xmdk_m.xmdkdocno
                                             AND inaoseq = g_xmdl_d[l_ac].xmdlseq
               #150821-xianghui-e                                             
               CALL axmt540_01('1',g_xmdk_m.xmdksite,'',g_xmdk_m.xmdkdocno,
                               l_xmdlseq_backup,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,
                               g_xmdl_d[l_ac].xmdl011,g_xmdl_d[l_ac].xmdl012,
                               g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,'',
                               g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl020,'',
                               g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,g_xmdl_d[l_ac].xmdl030)
                               RETURNING l_success,l_rollback,l_xmdl014,l_xmdl015,l_xmdl016,l_xmdl052
               #150821-xianghui-b
               IF l_success = FALSE AND l_rollback = FALSE THEN 
                  DELETE FROM inao_t 
                   WHERE inaoent = g_enterprise 
                     AND inaodocno = g_xmdk_m.xmdkdocno
                     AND inaoseq = g_xmdl_d[l_ac].xmdlseq       
                  #將資料塞回原table   
                  INSERT INTO inao_t 
                  #mod--161109-00085#4-s
                  #SELECT *
                  SELECT inaoent,inaosite,inaodocno,inaoseq,inaoseq1,
                         inaoseq2,inao000,inao001,inao002,inao003,
                         inao004,inao005,inao006,inao007,inao008,
                         inao009,inao010,inao011,inao012,inao013,
                         #161109-00085#76 --s add
                         inaoud001,inaoud002,inaoud003,inaoud004,inaoud005,
                         inaoud006,inaoud007,inaoud008,inaoud009,inaoud010,
                         inaoud011,inaoud012,inaoud013,inaoud014,inaoud015,
                         inaoud016,inaoud017,inaoud018,inaoud019,inaoud020,
                         inaoud021,inaoud022,inaoud023,inaoud024,inaoud025,
                         inaoud026,inaoud027,inaoud028,inaoud029,inaoud030,
                         #161109-00085#76 --e add
                         inao014,inao020,inao021,inao022,inao023,
                         inao024,inao025
                  #mod--161109-00085#4-e   
                  FROM axmt540_inao2
                  DROP TABLE axmt540_inao2
               END IF  
               #150821-xianghui-e               
               IF l_rollback THEN  #多庫儲批資料錯誤必須rollback
                  CLOSE axmt540_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF

               IF l_success THEN
                  IF NOT cl_null(l_xmdl014) THEN  #只有一筆
                     LET g_xmdl_d[l_ac].xmdl013 = 'N'
                     LET g_xmdl_d[l_ac].xmdl014 = l_xmdl014
                     LET g_xmdl_d[l_ac].xmdl015 = l_xmdl015
                     LET g_xmdl_d[l_ac].xmdl016 = l_xmdl016
                     LET g_xmdl_d[l_ac].xmdl052 = l_xmdl052
                  ELSE
                     LET g_xmdl_d[l_ac].xmdl013 = 'Y'
                     LET g_xmdl_d[l_ac].xmdl014 = ' '
                     LET g_xmdl_d[l_ac].xmdl015 = ' '
                     LET g_xmdl_d[l_ac].xmdl016 = ' '
                     LET g_xmdl_d[l_ac].xmdl052 = ' '
                  END IF

                  CALL s_desc_get_stock_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014) RETURNING g_xmdl_d[l_ac].xmdl014_desc
                  CALL s_desc_get_locator_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015) RETURNING g_xmdl_d[l_ac].xmdl015_desc
               END IF
               
               LET l_xmdlseq_backup = g_xmdl_d[l_ac].xmdlseq #紀錄產生庫儲批所用的項次
               #END add-point
            END IF
 
 
 
 
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            
            #150917-00001#3  2016/01/19 By earl mark s
#            #中斷續拋，不可修改單身
#            IF axmt540_break_continue(g_xmdk_m.xmdk044) THEN
#               EXIT DIALOG
#            END IF
            #150917-00001#3  2016/01/19 By earl mark e
            
            
            IF g_ask THEN
               LET l_num = 0
               SELECT COUNT(xmdlseq) INTO l_num
                 FROM xmdl_t
                WHERE xmdlent = g_enterprise
                  AND xmdldocno = g_xmdk_m.xmdkdocno
           
               IF l_num = 0 THEN   #單身無輸入資料
               
                  LET l_success = FALSE
                  CALL s_transaction_begin()                      #單身transaction
                  #160623-00014#1-mod-(S)
#                  IF g_prog = 'axmt542' THEN   #借貨出貨單'
#                     LET l_msg = 'axm-00579'   #是否由[借貨出貨通知單axmt521]自動產生單身資料！
#                  ELSE
#                     LET l_msg = 'axm-00098'   #是否由[出貨通知單axmt520]自動產生單身資料！
#                  END IF
                  IF g_prog MATCHES 'axmt542' THEN   #借貨出貨單'
                     LET l_msg = 'axm-00579'   #是否由[借貨出貨通知單axmt521]自動產生單身資料！
                  ELSE
                     LET l_msg = 'axm-00098'   #是否由[出貨通知單axmt520]自動產生單身資料！
                  END IF
                  #160623-00014#1-mod-(E)
                  IF NOT cl_null(g_xmdk_m.xmdk005) THEN
                     IF cl_ask_confirm(l_msg) THEN
                        CALL axmt540_auto_insert_1() RETURNING l_success #自動帶入出通單單身
                     END IF
                  ELSE
                     IF NOT cl_null(g_xmdk_m.xmdk006) THEN               #自動帶入訂單單身
                        CALL axmt540_detail_ask() RETURNING l_success
                     END IF
                  END IF
           
                  IF l_success THEN
                     #重新計算整單的未稅、含稅總金額
                     CALL axmt540_tax_recount(g_xmdk_m.xmdkdocno) RETURNING l_success
                  END IF
           
                  IF l_success THEN
                     CALL s_transaction_end('Y','0')
                  ELSE
                     CALL s_transaction_end('N','0')
                  END IF
               END IF
            ELSE
               LET g_ask = TRUE
            END IF
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xmdl_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axmt540_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1','2',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_xmdl_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            
            #取得單頭稅別應用
            CALL s_tax_chk(g_site,g_xmdk_m.xmdk012)
            RETURNING l_success,l_oodbl004,l_oodb005,l_oodb006,g_oodb011
            
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
 
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN axmt540_cl USING g_enterprise,g_xmdk_m.xmdkdocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axmt540_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE axmt540_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_xmdl_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xmdl_d[l_ac].xmdlseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xmdl_d_t.* = g_xmdl_d[l_ac].*  #BACKUP
               LET g_xmdl_d_o.* = g_xmdl_d[l_ac].*  #BACKUP
               CALL axmt540_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
 
               #end add-point  
               CALL axmt540_set_no_entry_b(l_cmd)
               IF NOT axmt540_lock_b("xmdl_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axmt540_bcl INTO g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdlseq,g_xmdl_d[l_ac].xmdl001, 
                      g_xmdl_d[l_ac].xmdl002,g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,g_xmdl_d[l_ac].xmdl005, 
                      g_xmdl_d[l_ac].xmdl006,g_xmdl_d[l_ac].xmdl007,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009, 
                      g_xmdl_d[l_ac].xmdl033,g_xmdl_d[l_ac].xmdl011,g_xmdl_d[l_ac].xmdl012,g_xmdl_d[l_ac].xmdl017, 
                      g_xmdl_d[l_ac].xmdl018,g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl020,g_xmdl_d[l_ac].xmdl010, 
                      g_xmdl_d[l_ac].xmdl013,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016, 
                      g_xmdl_d[l_ac].xmdl052,g_xmdl_d[l_ac].xmdl021,g_xmdl_d[l_ac].xmdl022,g_xmdl_d[l_ac].xmdl050, 
                      g_xmdl_d[l_ac].xmdl023,g_xmdl_d[l_ac].xmdl041,g_xmdl_d[l_ac].xmdl030,g_xmdl_d[l_ac].xmdl031, 
                      g_xmdl_d[l_ac].xmdl032,g_xmdl_d[l_ac].xmdl051,g_xmdl_d[l_ac].xmdl035,g_xmdl_d[l_ac].xmdl036, 
                      g_xmdl_d[l_ac].xmdl037,g_xmdl_d[l_ac].xmdl056,g_xmdl_d[l_ac].xmdl088,g_xmdl_d[l_ac].xmdl034, 
                      g_xmdl2_d[l_ac].xmdlseq,g_xmdl2_d[l_ac].xmdl024,g_xmdl2_d[l_ac].xmdl025,g_xmdl2_d[l_ac].xmdl026, 
                      g_xmdl2_d[l_ac].xmdl027,g_xmdl2_d[l_ac].xmdl028,g_xmdl2_d[l_ac].xmdl029,g_xmdl2_d[l_ac].xmdl042, 
                      g_xmdl2_d[l_ac].xmdl043,g_xmdl2_d[l_ac].xmdl044,g_xmdl2_d[l_ac].xmdl045,g_xmdl2_d[l_ac].xmdl046, 
                      g_xmdl2_d[l_ac].xmdl087
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_xmdl_d_t.xmdlseq,":",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_xmdl_d_mask_o[l_ac].* =  g_xmdl_d[l_ac].*
                  CALL axmt540_xmdl_t_mask()
                  LET g_xmdl_d_mask_n[l_ac].* =  g_xmdl_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL axmt540_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            
            LET l_xmdlseq_backup = g_xmdl_d[l_ac].xmdlseq  #備份多庫儲批項次
            LET g_pmao_flag = 'N'
            
            #單身Action隱藏
            CALL axmt540_detail_action_hidden(l_ac)
            CALL axmt540_set_act_visible_b()
            CALL axmt540_set_act_no_visible_b()            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
 
            #其他table進行lock
            
 
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmdl_d[l_ac].* TO NULL 
            INITIALIZE g_xmdl_d_t.* TO NULL 
            INITIALIZE g_xmdl_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_xmdl_d[l_ac].xmdl007 = "1"
      LET g_xmdl_d[l_ac].xmdl018 = "0"
      LET g_xmdl_d[l_ac].xmdl020 = "0"
      LET g_xmdl_d[l_ac].xmdl013 = "N"
      LET g_xmdl_d[l_ac].xmdl022 = "0"
      LET g_xmdl_d[l_ac].xmdl023 = "Y"
      LET g_xmdl_d[l_ac].xmdl041 = "N"
      LET g_xmdl_d[l_ac].xmdl035 = "0"
      LET g_xmdl_d[l_ac].xmdl036 = "0"
      LET g_xmdl_d[l_ac].xmdl037 = "0"
      LET g_xmdl_d[l_ac].xmdl056 = "0"
 
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            #160907-00015#1-S
            INITIALIZE g_xmdl2_d[l_ac].* TO NULL 
            INITIALIZE g_xmdl2_d_t.* TO NULL 
            INITIALIZE g_xmdl2_d_o.* TO NULL 
            #160907-00015#1-E            
            LET g_pmao_flag = 'N'
            LET g_xmdl_d[l_ac].xmdlsite = g_site
            LET g_xmdl_d[l_ac].xmdl088 = g_xmdk_m.xmdk044  #多角流程代碼
            
            #需自立應收否 #151105改為Y
            LET g_xmdl2_d[l_ac].xmdl087 = "Y"     #需自立應收
            
#            #150901 earl add s
#            #若為2:銷售多角、3:統銷統收、5:中間交易、7:代採購出貨，自立應收為"N"
#            IF g_xmdk_m.xmdk045 MATCHES "[2357]" THEN
#               LET g_xmdl2_d[l_ac].xmdl087 = "N"
#            ELSE
#               LET g_xmdl2_d[l_ac].xmdl087 = "Y"     #需自立應收
#            END IF
#            #150901 earl add e
               
            #預設來源單別
            IF NOT cl_null(g_xmdk_m.xmdk005) THEN
               LET g_xmdl_d[l_ac].xmdl001 = g_xmdk_m.xmdk005
            ELSE
               LET g_xmdl_d[l_ac].xmdl003 = g_xmdk_m.xmdk006
            END IF

            #稅別應用為'1'正常稅率帶入單頭的稅率
            IF g_oodb011 = '1' THEN
               LET g_xmdl2_d[l_ac].xmdl025 = g_xmdk_m.xmdk012
               LET g_xmdl2_d[l_ac].xmdl026 = g_xmdk_m.xmdk013
            END IF

            IF cl_null(g_xmdl_d[l_ac].xmdlseq) THEN
               SELECT MAX(xmdlseq)+1
                 INTO g_xmdl_d[l_ac].xmdlseq
                 FROM xmdl_t
                WHERE xmdlent = g_enterprise
                  AND xmdldocno = g_xmdk_m.xmdkdocno 

               IF cl_null(g_xmdl_d[l_ac].xmdlseq) THEN
                 LET g_xmdl_d[l_ac].xmdlseq = 1
               END IF
            END IF

            #end add-point
            LET g_xmdl_d_t.* = g_xmdl_d[l_ac].*     #新輸入資料
            LET g_xmdl_d_o.* = g_xmdl_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axmt540_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
 
            #end add-point
            CALL axmt540_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmdl_d[li_reproduce_target].* = g_xmdl_d[li_reproduce].*
               LET g_xmdl2_d[li_reproduce_target].* = g_xmdl2_d[li_reproduce].*
 
               LET g_xmdl_d[li_reproduce_target].xmdlseq = NULL
 
            END IF
            
 
 
            #add-point:modify段before insert name="input.body.before_insert"

            LET l_xmdlseq_backup = g_xmdl_d[l_ac].xmdlseq   #備份多庫儲批項次
            
            CALL axmt540_xmdl014_default(g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015)
            RETURNING g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015  #dorislai-20150824-add
            
            #單身Action隱藏
            CALL axmt540_detail_action_hidden(l_ac)            
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            CALL axmt540_row_default()
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM xmdl_t 
             WHERE xmdlent = g_enterprise AND xmdldocno = g_xmdk_m.xmdkdocno
 
               AND xmdlseq = g_xmdl_d[l_ac].xmdlseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               IF g_pmao_flag = 'Y' THEN
                  
                     #IF NOT s_axmt500_ins_pmao(g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk007,g_xmdl_d[l_ac].xmdl006,g_xmdl_d[l_ac].xmdl007,g_xmdl_d[l_ac].xmdl033, #161226-00077#1 mark
                      IF NOT s_axmt500_ins_pmao(g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk007,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,g_xmdl_d[l_ac].xmdl033, #161226-00077#1 add 
                                                g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010) THEN
                        LET g_xmdl_d[l_ac].xmdl033 = ''
                        LET g_xmdl_d[l_ac].l_pmao009 = ''
                        LET g_xmdl_d[l_ac].l_pmao010 = ''
                        DISPLAY BY NAME g_xmdl_d[l_ac].xmdl007,g_xmdl_d[l_ac].xmdl033,
                                                g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
                      END IF
                  
               END IF                
               #稅額計算
               CALL s_axmt540_tax_count('',g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,g_site,g_xmdl2_d[l_ac].xmdl025,
                                        g_xmdl_d[l_ac].xmdl022,g_xmdl2_d[l_ac].xmdl024,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,
                                        g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,g_xmdl_d[l_ac].xmdl018)
               RETURNING g_xmdl2_d[l_ac].xmdl027,g_xmdl2_d[l_ac].xmdl028,g_xmdl2_d[l_ac].xmdl029
               
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmdk_m.xmdkdocno
               LET gs_keys[2] = g_xmdl_d[g_detail_idx].xmdlseq
               CALL axmt540_insert_b('xmdl_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               #161031-00025#26-s
               IF NOT cl_null(g_xmdl_d[l_ac].ooff013) THEN
                  CALL s_aooi360_gen('7',g_prog,g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,'','','','','','','','1',g_xmdl_d[l_ac].ooff013) RETURNING l_success
               END IF
               #161031-00025#26-e
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               INITIALIZE g_xmdl_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmdl_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axmt540_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               #新增多庫儲批
               CALL axmt540_01_xmdm_modify('1',l_xmdlseq_backup,g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,
                                           g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,g_xmdl_d[l_ac].xmdl011,g_xmdl_d[l_ac].xmdl012,
                                           g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,g_xmdl_d[l_ac].xmdl052,
                                           g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl020,
                                           '','') RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  CANCEL INSERT
               END IF
               
               #重新計算整單的未稅、含稅總金額
               CALL axmt540_tax_recount(g_xmdk_m.xmdkdocno) RETURNING l_success                     
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  CANCEL INSERT
               END IF
               
               CALL s_transaction_end('Y','0')
               
               #產品特徵碼insert
               CALL s_transaction_begin()
               
               #若有來源時不可新增多筆產品特徵
               IF NOT cl_null(g_xmdl_d[l_ac].xmdl001) OR NOT cl_null(g_xmdl_d[l_ac].xmdl003) THEN
                  CALL l_inam.clear()
               END IF
               
               IF l_inam.getLength() > 1 THEN   #第一筆已呈現在畫面上，固從第二筆開始新增               
                  LET l_xmdlseq = ''               
                  INITIALIZE g_xmdl.* TO NULL
                  
                  SELECT xmdl001,xmdl002,
                         xmdl003,xmdl004,xmdl005,xmdl006,
                         xmdl007,xmdl008,xmdl010,
                         xmdl011,
                         xmdl012,xmdl014,xmdl015,xmdl016,
                         xmdl017,xmdl018,xmdl019,xmdl020,xmdl021,
                         xmdl022,xmdl023,xmdl024,xmdl025,xmdl026,
                         xmdl027,xmdl028,xmdl029,xmdl030,xmdl031,
                         xmdl032,xmdl033,xmdl034,xmdl035,xmdl036,
                         xmdl037,xmdl038,xmdl039,xmdl040,xmdl041,
                         xmdl042,xmdl043,xmdl044,xmdl045,xmdl046,
                         xmdl050,xmdl051,xmdl081,xmdl082,xmdl083,
                         xmdl084,xmdl087,
                         xmdl056
                    INTO g_xmdl.xmdl001,g_xmdl.xmdl002,
                         g_xmdl.xmdl003,g_xmdl.xmdl004,g_xmdl.xmdl005,g_xmdl.xmdl006,
                         g_xmdl.xmdl007,g_xmdl.xmdl008,g_xmdl.xmdl010,g_xmdl.xmdl011,
                         g_xmdl.xmdl012,g_xmdl.xmdl014,g_xmdl.xmdl015,g_xmdl.xmdl016,
                         g_xmdl.xmdl017,g_xmdl.xmdl018,g_xmdl.xmdl019,g_xmdl.xmdl020,g_xmdl.xmdl021,
                         g_xmdl.xmdl022,g_xmdl.xmdl023,g_xmdl.xmdl024,g_xmdl.xmdl025,g_xmdl.xmdl026,
                         g_xmdl.xmdl027,g_xmdl.xmdl028,g_xmdl.xmdl029,g_xmdl.xmdl030,g_xmdl.xmdl031,
                         g_xmdl.xmdl032,g_xmdl.xmdl033,g_xmdl.xmdl034,g_xmdl.xmdl035,g_xmdl.xmdl036,
                         g_xmdl.xmdl037,g_xmdl.xmdl038,g_xmdl.xmdl039,g_xmdl.xmdl040,g_xmdl.xmdl041,
                         g_xmdl.xmdl042,g_xmdl.xmdl043,g_xmdl.xmdl044,g_xmdl.xmdl045,g_xmdl.xmdl046,
                         g_xmdl.xmdl050,g_xmdl.xmdl051,g_xmdl.xmdl081,g_xmdl.xmdl082,g_xmdl.xmdl083,
                         g_xmdl.xmdl084,g_xmdl.xmdl087,
                         g_xmdl.xmdl056
                    FROM xmdl_t
                   WHERE xmdlent = g_enterprise
                     AND xmdldocno = g_xmdk_m.xmdkdocno
                     AND xmdlseq = g_xmdl_d[l_ac].xmdlseq

                  FOR l_i = 2 TO l_inam.getLength()
                     SELECT MAX(xmdlseq)+1 INTO l_xmdlseq
                       FROM xmdl_t
                      WHERE xmdlent = g_enterprise
                        AND xmdldocno = g_xmdk_m.xmdkdocno
                        
                     #取位
                     CALL s_aooi250_take_decimals(g_xmdl.xmdl017,l_inam[l_i].inam004) RETURNING l_success,l_inam[l_i].inam004

                     #推算參考數量
                     IF NOT cl_null(g_xmdl.xmdl008) AND NOT cl_null(g_xmdl.xmdl017) AND
                        NOT cl_null(g_xmdl.xmdl019) AND NOT cl_null(l_inam[l_i].inam004) THEN
                        
                        CALL s_aooi250_convert_qty(g_xmdl.xmdl008,g_xmdl.xmdl017,g_xmdl.xmdl019,l_inam[l_i].inam004)
                        RETURNING l_success,g_xmdl.xmdl020
                     ELSE
                        LET g_xmdl.xmdl020 = ''
                     END IF  

                     #推算計價數量
                     IF NOT cl_null(g_xmdl.xmdl008) AND NOT cl_null(g_xmdl.xmdl017) AND
                        NOT cl_null(g_xmdl.xmdl021) AND NOT cl_null(l_inam[l_i].inam004) THEN
                        
                        CALL s_aooi250_convert_qty(g_xmdl.xmdl008,g_xmdl.xmdl017,g_xmdl.xmdl021,l_inam[l_i].inam004)
                        RETURNING l_success,g_xmdl.xmdl022
                     ELSE
                        LET g_xmdl.xmdl022 = ''
                     END IF

                     #稅額計算                     
                     CALL s_axmt540_tax_count('',g_xmdk_m.xmdkdocno,l_xmdlseq,g_site,g_xmdl.xmdl025,
                                              g_xmdl.xmdl022,g_xmdl.xmdl024,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,
                                              g_xmdl.xmdl003,g_xmdl.xmdl004,l_inam[l_i].inam004)
                     RETURNING g_xmdl.xmdl027,g_xmdl.xmdl028,g_xmdl.xmdl029                                             
                        
                     INSERT INTO xmdl_t (xmdlent,xmdlsite,xmdldocno,xmdlseq,xmdl001,
                                         xmdl002,xmdl003,xmdl004,xmdl005,xmdl006,
                                         xmdl007,xmdl008,xmdl009,xmdl010,xmdl011,
                                         xmdl012,xmdl013,xmdl014,xmdl015,xmdl016,
                                         xmdl017,xmdl018,xmdl019,xmdl020,xmdl021,
                                         xmdl022,xmdl023,xmdl024,xmdl025,xmdl026,
                                         xmdl027,xmdl028,xmdl029,xmdl030,xmdl031,
                                         xmdl032,xmdl033,xmdl034,xmdl035,xmdl036,
                                         xmdl037,xmdl038,xmdl039,xmdl040,xmdl041,
                                         xmdl042,xmdl043,xmdl044,xmdl045,xmdl046,
                                         xmdl050,xmdl051,xmdl081,xmdl082,xmdl083,
                                         xmdl084,xmdl087,xmdl088,xmdl052,
                                         xmdl056)
                          VALUES (g_enterprise,g_site,g_xmdk_m.xmdkdocno,l_xmdlseq,g_xmdl.xmdl001,
                                  g_xmdl.xmdl002,g_xmdl.xmdl003,g_xmdl.xmdl004,g_xmdl.xmdl005,g_xmdl.xmdl006,
                                  g_xmdl.xmdl007,g_xmdl.xmdl008,l_inam[l_i].inam002,g_xmdl.xmdl010,g_xmdl.xmdl011,
                                  g_xmdl.xmdl012,'N',g_xmdl.xmdl014,g_xmdl.xmdl015,g_xmdl.xmdl016,
                                  g_xmdl.xmdl017,l_inam[l_i].inam004,g_xmdl.xmdl019,g_xmdl.xmdl020,g_xmdl.xmdl021,
                                  g_xmdl.xmdl022,g_xmdl.xmdl023,g_xmdl.xmdl024,g_xmdl.xmdl025,g_xmdl.xmdl026,
                                  g_xmdl.xmdl027,g_xmdl.xmdl028,g_xmdl.xmdl029,g_xmdl.xmdl030,g_xmdl.xmdl031,
                                  g_xmdl.xmdl032,g_xmdl.xmdl033,g_xmdl.xmdl034,g_xmdl.xmdl035,g_xmdl.xmdl036,
                                  g_xmdl.xmdl037,g_xmdl.xmdl038,g_xmdl.xmdl039,g_xmdl.xmdl040,g_xmdl.xmdl041,
                                  g_xmdl.xmdl042,g_xmdl.xmdl043,g_xmdl.xmdl044,g_xmdl.xmdl045,g_xmdl.xmdl046,
                                  g_xmdl.xmdl050,g_xmdl.xmdl051,g_xmdl.xmdl081,g_xmdl.xmdl082,g_xmdl.xmdl083,
                                  g_xmdl.xmdl084,g_xmdl.xmdl087,g_xmdl.xmdl088,g_xmdl.xmdl052,
                                  g_xmdl.xmdl056)
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = "xmdl_t"
                        LET g_errparam.popup = FALSE
                        CALL cl_err()
                        
                        CALL s_transaction_end('N','0')                    
                        CANCEL INSERT                        
                     END IF

                     #新增多庫儲批
                     CALL axmt540_01_xmdm_modify('1',l_xmdlseq,g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,l_xmdlseq,
                                                 g_xmdl.xmdl008,l_inam[l_i].inam002,g_xmdl.xmdl011,g_xmdl.xmdl012,
                                                 g_xmdl.xmdl014,g_xmdl.xmdl015,g_xmdl.xmdl016,g_xmdl.xmdl052,
                                                 g_xmdl.xmdl017,l_inam[l_i].inam004,g_xmdl.xmdl019,g_xmdl.xmdl020,
                                                 '','') RETURNING l_success                   
                     IF NOT l_success THEN 
                        CALL s_transaction_end('N','0')                    
                        CANCEL INSERT
                     END IF

                     #重新計算整單的未稅、含稅總金額
                     CALL axmt540_tax_recount(g_xmdk_m.xmdkdocno) RETURNING l_success                     
                     IF NOT l_success THEN
                        CALL s_transaction_end('N','0')
                        CANCEL INSERT
                     END IF

                  END FOR  
                  CALL axmt540_show()
                  LET g_rec_b = l_inam.getLength() - 1                  
               END IF
                                     
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               CALL s_transaction_end('N','0')   #151015-xianghui
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               #刪除多庫儲批
               IF NOT axmt540_01_xmdm_delete('1',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'N') THEN                                    
                  CALL s_transaction_end('N','0')
                  CLOSE axmt540_bcl
                  CANCEL DELETE                   
               END IF
               
               #刪除稅額xrcd
               CALL s_axmt540_tax_delete(g_xmdk_m.xmdkdocno,g_xmdl_d_t.xmdlseq,'2') RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt540_bcl
                  CANCEL DELETE
               END IF

               #重新計算整單的未稅、含稅總金額
               CALL axmt540_tax_recount(g_xmdk_m.xmdkdocno) RETURNING l_success                     
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt540_bcl
                  CANCEL DELETE
               END IF
               #150821-xianghui-b
               #回寫出貨
               IF NOT s_axmt540_update_inao(g_xmdk_m.xmdkdocno,g_xmdl_d_t.xmdlseq,'',g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,'0','1') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt540_bcl
                  CANCEL DELETE                  
               END IF               
               DELETE FROM inao_t
                WHERE inaoent = g_enterprise
                  AND inaodocno = g_xmdk_m.xmdkdocno
                  AND inaoseq = g_xmdl_d_t.xmdlseq
               IF SQLCA.sqlcode THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt540_bcl
                  CANCEL DELETE
               END IF 
               #150821-xianghui-e

               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_xmdk_m.xmdkdocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_xmdl_d_t.xmdlseq
 
            
               #刪除同層單身
               IF NOT axmt540_delete_b('xmdl_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt540_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT axmt540_key_delete_b(gs_keys,'xmdl_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axmt540_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
               #161031-00025#26-s
               CALL s_aooi360_del('7',g_prog,g_xmdk_m.xmdkdocno,g_xmdl_d_t.xmdlseq,'','','','','','','','1') RETURNING l_success
               #161031-00025#26-e                                                                                                                                       
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE axmt540_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
 
               #end add-point
               LET l_count = g_xmdl_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
 
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_xmdl_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdlsite
            #add-point:BEFORE FIELD xmdlsite name="input.b.page1.xmdlsite"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdlsite
            
            #add-point:AFTER FIELD xmdlsite name="input.a.page1.xmdlsite"
                                                                                                            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdlsite
            #add-point:ON CHANGE xmdlsite name="input.g.page1.xmdlsite"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdlseq
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdl_d[l_ac].xmdlseq,"0","0","","","azz-00079",1) THEN
               NEXT FIELD xmdlseq
            END IF 
 
 
 
            #add-point:AFTER FIELD xmdlseq name="input.a.page1.xmdlseq"
            
            #此段落由子樣板a05產生
            IF  g_xmdk_m.xmdkdocno IS NOT NULL AND g_xmdl_d[g_detail_idx].xmdlseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmdk_m.xmdkdocno != g_xmdkdocno_t OR g_xmdl_d[g_detail_idx].xmdlseq != g_xmdl_d_t.xmdlseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmdl_t WHERE "||"xmdlent = '" ||g_enterprise|| "' AND "||"xmdldocno = '"||g_xmdk_m.xmdkdocno ||"' AND "|| "xmdlseq = '"||g_xmdl_d[g_detail_idx].xmdlseq ||"'",'std-00004',0) THEN 
                     LET g_xmdl_d[g_detail_idx].xmdlseq = g_xmdl_d_t.xmdlseq
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdlseq
            #add-point:BEFORE FIELD xmdlseq name="input.b.page1.xmdlseq"
 
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdlseq
            #add-point:ON CHANGE xmdlseq name="input.g.page1.xmdlseq"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl001
            #add-point:BEFORE FIELD xmdl001 name="input.b.page1.xmdl001"
 
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl001
            
            #add-point:AFTER FIELD xmdl001 name="input.a.page1.xmdl001"
      
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl001) THEN
               #單頭有輸入出通單號
               IF NOT cl_null(g_xmdk_m.xmdk005) THEN
                  IF g_xmdl_d[l_ac].xmdl001 <> g_xmdk_m.xmdk005 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "axm-00520"   #單身來源單號不可與單頭不同！
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     
                     LET g_xmdl_d[l_ac].xmdl001 = g_xmdl_d_o.xmdl001
                     LET g_xmdl_d[l_ac].xmdl002 = g_xmdl_d_o.xmdl002                  
                     NEXT FIELD CURRENT
                  END IF
               END IF
               
               IF g_xmdl_d[l_ac].xmdl001 <> g_xmdl_d_o.xmdl001 OR cl_null(g_xmdl_d_o.xmdl001) THEN

                  IF NOT axmt540_notice_chk(g_xmdl_d[l_ac].xmdl001,'2') THEN
                     LET g_xmdl_d[l_ac].xmdl001 = g_xmdl_d_o.xmdl001
                     LET g_xmdl_d[l_ac].xmdl002 = g_xmdl_d_o.xmdl002
                     NEXT FIELD CURRENT
                  END IF

                  IF NOT axmt540_xmdl001_xmdl002_chk() THEN
                     LET g_xmdl_d[l_ac].xmdl001 = g_xmdl_d_o.xmdl001
                     LET g_xmdl_d[l_ac].xmdl002 = g_xmdl_d_o.xmdl002
                     NEXT FIELD CURRENT
                  END IF

                  #刪除多庫儲批
                  IF NOT axmt540_01_xmdm_delete('1',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
                     LET g_xmdl_d[l_ac].xmdl001 = g_xmdl_d_o.xmdl001
                     LET g_xmdl_d[l_ac].xmdl002 = g_xmdl_d_o.xmdl002
                     NEXT FIELD CURRENT
                  ELSE
                     LET g_xmdl_d[l_ac].xmdl013 = 'N'
                     LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013
                  END IF

                  #帶出出通單
                  IF NOT axmt540_xmdl001_xmdl002_default() THEN
                     LET g_xmdl_d[l_ac].xmdl001 = g_xmdl_d_o.xmdl001
                     LET g_xmdl_d[l_ac].xmdl002 = g_xmdl_d_o.xmdl002
                     NEXT FIELD CURRENT
                  END IF
                  
               END IF
               
            ELSE
               #刪除多庫儲批
               IF NOT axmt540_01_xmdm_delete('1',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
                  LET g_xmdl_d[l_ac].xmdl001 = g_xmdl_d_o.xmdl001
                  LET g_xmdl_d[l_ac].xmdl002 = g_xmdl_d_o.xmdl002
                  NEXT FIELD CURRENT
               ELSE
                  LET g_xmdl_d[l_ac].xmdl013 = 'N'
                  LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013
               END IF            
            
               #清空出通單欄位
               IF NOT axmt540_xmdl001_xmdl002_default() THEN
                  LET g_xmdl_d[l_ac].xmdl001 = g_xmdl_d_o.xmdl001
                  LET g_xmdl_d[l_ac].xmdl002 = g_xmdl_d_o.xmdl002
                  NEXT FIELD CURRENT
               END IF
            END IF 

            LET g_xmdl_d_o.xmdl001 = g_xmdl_d[l_ac].xmdl001
            LET g_xmdl_d_o.xmdl002 = g_xmdl_d[l_ac].xmdl002

            CALL axmt540_set_entry_b(l_cmd)
            CALL axmt540_set_no_entry_b(l_cmd)
            
            #單身Action隱藏
            CALL axmt540_detail_action_hidden(l_ac)
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl001
            #add-point:ON CHANGE xmdl001 name="input.g.page1.xmdl001"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl002
            
            #add-point:AFTER FIELD xmdl002 name="input.a.page1.xmdl002"
                                                            
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl002) THEN 
               IF g_xmdl_d[l_ac].xmdl002 <> g_xmdl_d_o.xmdl002 OR cl_null(g_xmdl_d_o.xmdl002) THEN
               
                  #刪除多庫儲批
                  IF NOT axmt540_01_xmdm_delete('1',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
                     LET g_xmdl_d[l_ac].xmdl002 = g_xmdl_d_o.xmdl002
                     NEXT FIELD CURRENT                   
                  ELSE
                     LET g_xmdl_d[l_ac].xmdl013 = 'N'
                     LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013
                  END IF
               
                  IF NOT axmt540_xmdl001_xmdl002_chk() THEN
                     LET g_xmdl_d[l_ac].xmdl002 = g_xmdl_d_o.xmdl002
                     NEXT FIELD CURRENT
                  END IF
                  
                  #帶出出通單
                  IF NOT axmt540_xmdl001_xmdl002_default() THEN
                     LET g_xmdl_d[l_ac].xmdl002 = g_xmdl_d_o.xmdl002
                     NEXT FIELD CURRENT
                  END IF
                  
               END IF
            ELSE
               #刪除多庫儲批
               IF NOT axmt540_01_xmdm_delete('1',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
                  LET g_xmdl_d[l_ac].xmdl002 = g_xmdl_d_o.xmdl002
                  NEXT FIELD CURRENT                   
               ELSE
                  LET g_xmdl_d[l_ac].xmdl013 = 'N'
                  LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013
               END IF            
            
               #清空出通單欄位
               IF NOT axmt540_xmdl001_xmdl002_default() THEN
                  LET g_xmdl_d[l_ac].xmdl002 = g_xmdl_d_o.xmdl002
                  NEXT FIELD CURRENT
               END IF
            END IF 

            LET g_xmdl_d_o.xmdl002 = g_xmdl_d[l_ac].xmdl002

            CALL axmt540_set_entry_b(l_cmd)
            CALL axmt540_set_no_entry_b(l_cmd)
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl002
            #add-point:BEFORE FIELD xmdl002 name="input.b.page1.xmdl002"
                                                                                           
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl002
            #add-point:ON CHANGE xmdl002 name="input.g.page1.xmdl002"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl003
            #add-point:BEFORE FIELD xmdl003 name="input.b.page1.xmdl003"
                                                       
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl003
            
            #add-point:AFTER FIELD xmdl003 name="input.a.page1.xmdl003"
                                    
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl003) THEN
               #單頭有輸入出通單號
               IF NOT cl_null(g_xmdk_m.xmdk006) THEN
                  IF g_xmdl_d[l_ac].xmdl003 <> g_xmdk_m.xmdk006 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "axm-00520"   #單身來源單號不可與單頭不同！
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     
                     LET g_xmdl_d[l_ac].xmdl003 = g_xmdl_d_o.xmdl003
                     LET g_xmdl_d[l_ac].xmdl004 = g_xmdl_d_o.xmdl004
                     LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
                     LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
                     NEXT FIELD CURRENT
                  END IF
               END IF
            
               IF g_xmdl_d[l_ac].xmdl003 <> g_xmdl_d_o.xmdl003 OR cl_null(g_xmdl_d_o.xmdl003) THEN                  
                  IF NOT cl_null(g_xmdl_d[l_ac].xmdl001) AND cl_null(g_xmdl_d[l_ac].xmdl002) THEN #費用料號(來源為出通單)
                     LET l_num = 0
                     SELECT COUNT(xmdhseq) INTO l_num
                       FROM xmdh_t
                      WHERE xmdhent = g_enterprise
                        AND xmdhdocno = g_xmdl_d[l_ac].xmdl001
                        AND xmdh001 = g_xmdl_d[l_ac].xmdl003

                     IF l_num = 0 THEN
                        INITIALIZE g_errparam TO NULL 
                        LET g_errparam.extend = "" 
                        #160623-00014#1-mod-(S)
#                        CASE g_prog
#                           WHEN 'axmt542'
#                              LET g_errparam.code   = "axm-00591"  #輸入的資料不存在出通單單身明細檔中！
#                           OTHERWISE
#                              LET g_errparam.code   = "axm-00069"  #輸入的資料不存在出通單單身明細檔中！
#                        END CASE
                        CASE 
                           WHEN g_prog MATCHES 'axmt542'
                              LET g_errparam.code   = "axm-00591"  #輸入的資料不存在出通單單身明細檔中！
                           OTHERWISE
                              LET g_errparam.code   = "axm-00069"  #輸入的資料不存在出通單單身明細檔中！
                        END CASE
                        #160623-00014#1-mod-(E)
                        LET g_errparam.popup  = TRUE
                        CALL cl_err()
                        
                        LET g_xmdl_d[l_ac].xmdl003 = g_xmdl_d_o.xmdl003
                        LET g_xmdl_d[l_ac].xmdl004 = g_xmdl_d_o.xmdl004
                        LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
                        LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
                        NEXT FIELD CURRENT
                        
                     END IF
                                          
                  ELSE
                     IF NOT axmt540_order_chk(g_xmdl_d[l_ac].xmdl003,'2') THEN
                        LET g_xmdl_d[l_ac].xmdl003 = g_xmdl_d_o.xmdl003
                        LET g_xmdl_d[l_ac].xmdl004 = g_xmdl_d_o.xmdl004
                        LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
                        LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
                        NEXT FIELD CURRENT
                     END IF
                 
                     CALL axmt540_xmdl005_count()   #若項序唯一自動產生
                     CALL axmt540_xmdl006_count()   #若分批序唯一自動產生
                 
                     IF NOT axmt540_xmdl003_xmdl004_xmdl005_xmdl006_chk() THEN
                        LET g_xmdl_d[l_ac].xmdl003 = g_xmdl_d_o.xmdl003
                        LET g_xmdl_d[l_ac].xmdl004 = g_xmdl_d_o.xmdl004
                        LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
                        LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
                        NEXT FIELD CURRENT
                     END IF
                     
                     IF NOT axmt540_xmdl003_xmdl004_xmdl005_xmdl006_default() THEN  #帶出訂單
                        LET g_xmdl_d[l_ac].xmdl003 = g_xmdl_d_o.xmdl003
                        LET g_xmdl_d[l_ac].xmdl004 = g_xmdl_d_o.xmdl004
                        LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
                        LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
                        NEXT FIELD CURRENT
                     END IF
                  END IF
                  
                  #刪除多庫儲批
                  IF NOT axmt540_01_xmdm_delete('1',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
                     LET g_xmdl_d[l_ac].xmdl003 = g_xmdl_d_o.xmdl003
                     LET g_xmdl_d[l_ac].xmdl004 = g_xmdl_d_o.xmdl004
                     LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
                     LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
                     NEXT FIELD CURRENT
                  ELSE
                     LET g_xmdl_d[l_ac].xmdl013 = 'N'
                     LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013
                  END IF
                  
               END IF
               
            ELSE
               #刪除多庫儲批
               IF NOT axmt540_01_xmdm_delete('1',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
                  LET g_xmdl_d[l_ac].xmdl003 = g_xmdl_d_o.xmdl003
                  LET g_xmdl_d[l_ac].xmdl004 = g_xmdl_d_o.xmdl004
                  LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
                  LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
                  NEXT FIELD CURRENT                   
               ELSE
                  LET g_xmdl_d[l_ac].xmdl013 = 'N'
                  LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013
               END IF
               
               #清空訂單欄位
               IF NOT axmt540_xmdl003_xmdl004_xmdl005_xmdl006_default() THEN
                  LET g_xmdl_d[l_ac].xmdl003 = g_xmdl_d_o.xmdl003
                  LET g_xmdl_d[l_ac].xmdl004 = g_xmdl_d_o.xmdl004
                  LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
                  LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
                  NEXT FIELD CURRENT
               END IF
            END IF 

            LET g_xmdl_d_o.xmdl003 = g_xmdl_d[l_ac].xmdl003
            LET g_xmdl_d_o.xmdl004 = g_xmdl_d[l_ac].xmdl004
            LET g_xmdl_d_o.xmdl005 = g_xmdl_d[l_ac].xmdl005
            LET g_xmdl_d_o.xmdl006 = g_xmdl_d[l_ac].xmdl006

            CALL axmt540_set_entry_b(l_cmd) 
            CALL axmt540_set_no_entry_b(l_cmd)
            CALL axmt540_set_act_visible_b()
            CALL axmt540_set_act_no_visible_b()            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl003
            #add-point:ON CHANGE xmdl003 name="input.g.page1.xmdl003"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl004
            
            #add-point:AFTER FIELD xmdl004 name="input.a.page1.xmdl004"
                                                     
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl004) THEN
               IF g_xmdl_d[l_ac].xmdl004 <> g_xmdl_d_o.xmdl004 OR cl_null(g_xmdl_d_o.xmdl004) THEN                  

                  #刪除多庫儲批
                  IF NOT axmt540_01_xmdm_delete('1',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
                     LET g_xmdl_d[l_ac].xmdl004 = g_xmdl_d_o.xmdl004
                     LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
                     LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
                     NEXT FIELD CURRENT                   
                  ELSE
                     LET g_xmdl_d[l_ac].xmdl013 = 'N'
                     LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013
                  END IF

                  CALL axmt540_xmdl005_count()    #若項序唯一自動產生
                  CALL axmt540_xmdl006_count()    #若分批序唯一自動產生

                  IF NOT axmt540_xmdl003_xmdl004_xmdl005_xmdl006_chk() THEN
                     LET g_xmdl_d[l_ac].xmdl004 = g_xmdl_d_o.xmdl004
                     LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
                     LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
                     NEXT FIELD CURRENT
                  END IF
                  
                  IF NOT axmt540_xmdl003_xmdl004_xmdl005_xmdl006_default() THEN  #帶出訂單
                     LET g_xmdl_d[l_ac].xmdl004 = g_xmdl_d_o.xmdl004
                     LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
                     LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
                     NEXT FIELD CURRENT
                  END IF  
                  
               END IF
               
            ELSE
               #刪除多庫儲批
               IF NOT axmt540_01_xmdm_delete('1',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
                  LET g_xmdl_d[l_ac].xmdl004 = g_xmdl_d_o.xmdl004
                  LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
                  LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
                  NEXT FIELD CURRENT                   
               ELSE
                  LET g_xmdl_d[l_ac].xmdl013 = 'N'
                  LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013
               END IF
               
               #清空訂單欄位
               IF NOT axmt540_xmdl003_xmdl004_xmdl005_xmdl006_default() THEN
                  LET g_xmdl_d[l_ac].xmdl004 = g_xmdl_d_o.xmdl004
                  LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
                  LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
                  NEXT FIELD CURRENT
               END IF

            END IF 

            LET g_xmdl_d_o.xmdl004 = g_xmdl_d[l_ac].xmdl004
            LET g_xmdl_d_o.xmdl005 = g_xmdl_d[l_ac].xmdl005
            LET g_xmdl_d_o.xmdl006 = g_xmdl_d[l_ac].xmdl006

            CALL axmt540_set_entry_b(l_cmd) 
            CALL axmt540_set_no_entry_b(l_cmd)
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl004
            #add-point:BEFORE FIELD xmdl004 name="input.b.page1.xmdl004"
                                                                                               
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl004
            #add-point:ON CHANGE xmdl004 name="input.g.page1.xmdl004"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl005
            
            #add-point:AFTER FIELD xmdl005 name="input.a.page1.xmdl005"
                                                 
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl005) THEN
               IF g_xmdl_d[l_ac].xmdl005 <> g_xmdl_d_o.xmdl005 OR cl_null(g_xmdl_d_o.xmdl005) THEN

                  #刪除多庫儲批
                  IF NOT axmt540_01_xmdm_delete('1',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
                     LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
                     LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
                     NEXT FIELD CURRENT                   
                  ELSE
                     LET g_xmdl_d[l_ac].xmdl013 = 'N'
                     LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013
                  END IF

                  CALL axmt540_xmdl006_count()   #若分批序唯一自動產生

                  IF NOT axmt540_xmdl003_xmdl004_xmdl005_xmdl006_chk() THEN
                     LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
                     LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
                     NEXT FIELD CURRENT
                  END IF
                  
                  IF NOT axmt540_xmdl003_xmdl004_xmdl005_xmdl006_default() THEN  #帶出訂單
                     LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
                     LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
                     NEXT FIELD CURRENT
                  END IF  
                  
               END IF
               
            ELSE
               #刪除多庫儲批
               IF NOT axmt540_01_xmdm_delete('1',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
                  LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
                  LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
                  NEXT FIELD CURRENT                   
               ELSE
                  LET g_xmdl_d[l_ac].xmdl013 = 'N'
                  LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013
               END IF

               #清空訂單欄位
               IF NOT axmt540_xmdl003_xmdl004_xmdl005_xmdl006_default() THEN
                  LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
                  LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
                  NEXT FIELD CURRENT
               END IF  
            END IF

            LET g_xmdl_d_o.xmdl005 = g_xmdl_d[l_ac].xmdl005
            LET g_xmdl_d_o.xmdl006 = g_xmdl_d[l_ac].xmdl006
            CALL axmt540_set_act_visible_b()
            CALL axmt540_set_act_no_visible_b()            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl005
            #add-point:BEFORE FIELD xmdl005 name="input.b.page1.xmdl005"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl005
            #add-point:ON CHANGE xmdl005 name="input.g.page1.xmdl005"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl006
            
            #add-point:AFTER FIELD xmdl006 name="input.a.page1.xmdl006"
                                                 
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl006) THEN
               IF g_xmdl_d[l_ac].xmdl006 <> g_xmdl_d_o.xmdl006 OR cl_null(g_xmdl_d_o.xmdl006) THEN
                  
                  #刪除多庫儲批
                  IF NOT axmt540_01_xmdm_delete('1',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
                     LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
                     NEXT FIELD CURRENT                   
                  ELSE
                     LET g_xmdl_d[l_ac].xmdl013 = 'N'
                     LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013
                  END IF
                  
                  IF NOT axmt540_xmdl003_xmdl004_xmdl005_xmdl006_chk() THEN
                     LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
                     NEXT FIELD CURRENT
                  END IF
                  
                  IF NOT axmt540_xmdl003_xmdl004_xmdl005_xmdl006_default() THEN  #帶出訂單
                     LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
                     NEXT FIELD CURRENT
                  END IF  
                  
               END IF
            ELSE
               #刪除多庫儲批
               IF NOT axmt540_01_xmdm_delete('1',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
                  LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
                  NEXT FIELD CURRENT                   
               ELSE
                  LET g_xmdl_d[l_ac].xmdl013 = 'N'
                  LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013
               END IF

               #清空訂單欄位
               IF NOT axmt540_xmdl003_xmdl004_xmdl005_xmdl006_default() THEN
                  LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
                  NEXT FIELD CURRENT
               END IF  

            END IF

            LET g_xmdl_d_o.xmdl006 = g_xmdl_d[l_ac].xmdl006
            CALL axmt540_set_act_visible_b()
            CALL axmt540_set_act_no_visible_b()            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl006
            #add-point:BEFORE FIELD xmdl006 name="input.b.page1.xmdl006"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl006
            #add-point:ON CHANGE xmdl006 name="input.g.page1.xmdl006"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl007
            #add-point:BEFORE FIELD xmdl007 name="input.b.page1.xmdl007"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl007
            
            #add-point:AFTER FIELD xmdl007 name="input.a.page1.xmdl007"
                        
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl007) THEN
               IF g_xmdl_d[l_ac].xmdl007 <> g_xmdl_d_o.xmdl007 OR cl_null(g_xmdl_d_o.xmdl007) THEN

#改用no_entry去卡
#                  IF NOT axmt540_xmdl007_chk() THEN
#                     LET g_xmdl_d[l_ac].xmdl007 = g_xmdl_d_o.xmdl007
#                     NEXT FIELD CURRENT
#                  END IF
                  
                  LET g_xmdl2_d[l_ac].xmdl024 = 0
                  LET g_xmdl2_d_o.xmdl024 = g_xmdl2_d[l_ac].xmdl024
               END IF
            END IF

            LET g_xmdl_d_o.xmdl007 = g_xmdl_d[l_ac].xmdl007

            CALL axmt540_set_entry_b(l_cmd)
            CALL axmt540_set_no_entry_b(l_cmd)
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl007
            #add-point:ON CHANGE xmdl007 name="input.g.page1.xmdl007"
                                                                                                
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl008
            
            #add-point:AFTER FIELD xmdl008 name="input.a.page1.xmdl008"
            CALL s_desc_get_item_desc(g_xmdl_d[l_ac].xmdl008)RETURNING g_xmdl_d[l_ac].xmdl008_desc,g_xmdl_d[l_ac].xmdl008_desc_desc
                        
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) THEN 
               IF g_xmdl_d[l_ac].xmdl008 <> g_xmdl_d_o.xmdl008 OR cl_null(g_xmdl_d_o.xmdl008) THEN

                  #判斷料件是否存在產品特徵
                  CALL s_axmt500_get_imaa005(g_enterprise,g_xmdl_d[l_ac].xmdl008) RETURNING l_imaa005
                  IF cl_null(l_imaa005) THEN
                     LET g_xmdl_d[l_ac].xmdl009 = ' '
                  ELSE
                     LET g_xmdl_d[l_ac].xmdl009 = ''
                  END IF  
                  CALL s_feature_description(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,g_xmdl_d[l_ac].xmdl009_desc

                  IF NOT axmt540_xmdl008_chk() THEN
                     LET g_xmdl_d[l_ac].xmdl008 = g_xmdl_d_o.xmdl008
                     LET g_xmdl_d[l_ac].xmdl009 = g_xmdl_d_o.xmdl009
                     CALL s_desc_get_item_desc(g_xmdl_d[l_ac].xmdl008)RETURNING g_xmdl_d[l_ac].xmdl008_desc,g_xmdl_d[l_ac].xmdl008_desc_desc
                     CALL s_feature_description(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,g_xmdl_d[l_ac].xmdl009_desc

                     NEXT FIELD CURRENT
                  END IF

                  #檢查批號
                  IF NOT s_axmt540_xmdl016_chk(g_xmdh011,g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,
                                               g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,g_xmdl_d[l_ac].xmdl016) THEN
                     LET g_xmdl_d[l_ac].xmdl008 = g_xmdl_d_o.xmdl008
                     LET g_xmdl_d[l_ac].xmdl009 = g_xmdl_d_o.xmdl009
                     CALL s_desc_get_item_desc(g_xmdl_d[l_ac].xmdl008)RETURNING g_xmdl_d[l_ac].xmdl008_desc,g_xmdl_d[l_ac].xmdl008_desc_desc
                     CALL s_feature_description(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,g_xmdl_d[l_ac].xmdl009_desc

                     NEXT FIELD CURRENT
                  END IF

                  #刪除多庫儲批
                  IF NOT axmt540_01_xmdm_delete('1',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
                     LET g_xmdl_d[l_ac].xmdl008 = g_xmdl_d_o.xmdl008
                     LET g_xmdl_d[l_ac].xmdl009 = g_xmdl_d_o.xmdl009
                     CALL s_desc_get_item_desc(g_xmdl_d[l_ac].xmdl008)RETURNING g_xmdl_d[l_ac].xmdl008_desc,g_xmdl_d[l_ac].xmdl008_desc_desc
                     CALL s_feature_description(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,g_xmdl_d[l_ac].xmdl009_desc
                     
                     NEXT FIELD CURRENT
                  ELSE
                     LET g_xmdl_d[l_ac].xmdl013 = 'N'
                     LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013
                  END IF                      

                  #若稅別應用為2.依料件設定，呼叫應用元件帶出稅別、稅率
                  IF g_oodb011 = '2' THEN
                     CALL s_tax_chktype(g_site,g_xmdk_m.xmdk007,g_xmdl_d[l_ac].xmdl008,'1',g_xmdk_m.xmdk031)
                     RETURNING l_success,l_oodb002,l_oodb006

                     IF NOT l_success THEN
                        LET g_xmdl2_d[l_ac].xmdl025 = ''
                        LET g_xmdl2_d[l_ac].xmdl026 = ''
                     ELSE                     
                        LET g_xmdl2_d[l_ac].xmdl025 = l_oodb002
                        LET g_xmdl2_d[l_ac].xmdl026 = l_oodb006
                     END IF
                     
                  ELSE
                     LET g_xmdl2_d[l_ac].xmdl025 = g_xmdk_m.xmdk012   #稅別
                     LET g_xmdl2_d[l_ac].xmdl026 = g_xmdk_m.xmdk013   #稅率
                  END IF
                  
                  LET g_xmdl2_d_o.xmdl025 = g_xmdl2_d[l_ac].xmdl025
                  LET g_xmdl2_d_o.xmdl026 = g_xmdl2_d[l_ac].xmdl026
                  
                  #料號預帶欄位
                  LET g_xmdlseq = g_xmdl_d[l_ac].xmdlseq  #160512-00004#2-add
                  CALL axmt540_xmdl008_default()
                  
                  #顯示客戶料號
                  CALL s_axmt540_client_no(g_xmdk_m.xmdk007,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,l_xmdl033
                  IF l_success THEN
                     LET g_xmdl_d[l_ac].xmdl033 = l_xmdl033
                     LET g_xmdl_d_o.xmdl033 = g_xmdl_d[l_ac].xmdl033
                  ELSE
                     LET g_xmdl_d[l_ac].xmdl033 = ''
                     LET g_xmdl_d_o.xmdl033 = g_xmdl_d[l_ac].xmdl033
                  END IF                  
                  SELECT pmao009,pmao010
                    INTO g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
                    FROM pmao_t
                   WHERE pmaoent = g_enterprise
                     AND pmao001 = g_xmdk_m.xmdk007
                     AND pmao002 = g_xmdl_d[l_ac].xmdl008
                     AND pmao003 = g_xmdl_d[l_ac].xmdl009
                     AND pmao004 = g_xmdl_d[l_ac].xmdl033 
                     AND pmao000 = '2' #161221-00064#17 add                     
                  DISPLAY BY NAME g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
               END IF 
            END IF
                                                            
            LET g_xmdl_d_o.xmdl008 = g_xmdl_d[l_ac].xmdl008
            LET g_xmdl_d_o.xmdl009 = g_xmdl_d[l_ac].xmdl009
            
            CALL axmt540_set_entry_b(l_cmd)  
            CALL axmt540_set_no_entry_b(l_cmd)
            CALL axmt540_set_act_visible_b()
            CALL axmt540_set_act_no_visible_b()            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl008
            #add-point:BEFORE FIELD xmdl008 name="input.b.page1.xmdl008"
 
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl008
            #add-point:ON CHANGE xmdl008 name="input.g.page1.xmdl008"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl009
            
            #add-point:AFTER FIELD xmdl009 name="input.a.page1.xmdl009"
            CALL s_feature_description(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,g_xmdl_d[l_ac].xmdl009_desc
            
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl009) THEN 
               IF g_xmdl_d[l_ac].xmdl009 <> g_xmdl_d_o.xmdl009 OR cl_null(g_xmdl_d_o.xmdl009) THEN
                          
                  #產品特徵、替代料號檢查
                  IF NOT axmt540_xmdl008_xmdl009_chk() THEN
                     LET g_xmdl_d[l_ac].xmdl009 = g_xmdl_d_o.xmdl009
                     CALL s_feature_description(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,g_xmdl_d[l_ac].xmdl009_desc

                     NEXT FIELD CURRENT
                  END IF             
                                    
                  #檢查批號
                  IF NOT s_axmt540_xmdl016_chk(g_xmdh011,g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,
                                               g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,g_xmdl_d[l_ac].xmdl016) THEN
                     LET g_xmdl_d[l_ac].xmdl009 = g_xmdl_d_o.xmdl009
                     CALL s_feature_description(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,g_xmdl_d[l_ac].xmdl009_desc

                     NEXT FIELD CURRENT
                  END IF
                  
                  #151224-00025#5---dorishsu---151228---add--
                  IF NOT s_feature_direct_input(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,g_xmdl_d_o.xmdl009,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdksite) THEN
                     NEXT FIELD CURRENT
                  END IF
                  #151224-00025#5---dorishsu---151228---end--

                  #刪除多庫儲批
                  IF NOT axmt540_01_xmdm_delete('1',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
                     LET g_xmdl_d[l_ac].xmdl009 = g_xmdl_d_o.xmdl009
                     CALL s_feature_description(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,g_xmdl_d[l_ac].xmdl009_desc
                     
                     NEXT FIELD CURRENT                     
                  ELSE
                     LET g_xmdl_d[l_ac].xmdl013 = 'N'
                     LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013
                  END IF                     

                  #料號預帶欄位
                  LET g_xmdlseq = g_xmdl_d[l_ac].xmdlseq  #160512-00004#2-add
                  CALL axmt540_xmdl008_default()

                  #顯示客戶料號
                  CALL s_axmt540_client_no(g_xmdk_m.xmdk007,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,l_xmdl033
                  IF l_success THEN
                     LET g_xmdl_d[l_ac].xmdl033 = l_xmdl033
                     LET g_xmdl_d_o.xmdl033 = g_xmdl_d[l_ac].xmdl033
                  ELSE
                     LET g_xmdl_d[l_ac].xmdl033 = ''
                     LET g_xmdl_d_o.xmdl033 = g_xmdl_d[l_ac].xmdl033            
                  END IF                  
                  SELECT pmao009,pmao010
                    INTO g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
                    FROM pmao_t
                   WHERE pmaoent = g_enterprise
                     AND pmao001 = g_xmdk_m.xmdk007
                     AND pmao002 = g_xmdl_d[l_ac].xmdl006
                     AND pmao003 = g_xmdl_d[l_ac].xmdl007
                     AND pmao004 = g_xmdl_d[l_ac].xmdl033
                     AND pmao000 = '2' #161221-00064#17 add                     
                  DISPLAY BY NAME g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
                  #數量檢查
                  IF NOT axmt540_xmdl018_chk() THEN
                     LET g_xmdl_d[l_ac].xmdl018 = ''
                  END IF
                  
               END IF
            END IF    
            LET g_xmdl_d_o.xmdl009 = g_xmdl_d[l_ac].xmdl009
  
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl009
            #add-point:BEFORE FIELD xmdl009 name="input.b.page1.xmdl009"
              
            #必須先輸入料號            
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) THEN
               #無來源時才可新增多筆產品特徵
               IF cl_null(g_xmdl_d[l_ac].xmdl001) AND cl_null(g_xmdl_d[l_ac].xmdl003) THEN
                  #取得產品特徵類別
                  CALL s_axmt500_get_imaa005(g_enterprise,g_xmdl_d[l_ac].xmdl008) RETURNING l_imaa005

                  IF NOT cl_null(l_imaa005) THEN
                     IF s_feature_auto_chk(g_xmdl_d[l_ac].xmdl008) THEN #160314-00009#15 add
                        CALL l_inam.clear()
                        
                        IF l_cmd = 'a' AND cl_null(g_xmdl_d[l_ac].xmdl009) THEN   #新增且無值時開啟
                           CALL s_feature_multi(g_xmdl_d[l_ac].xmdl008,'','',g_site,g_xmdk_m.xmdkdocno) RETURNING l_success,l_inam
                           IF l_success THEN
                              LET g_xmdl_d[l_ac].xmdl009 = l_inam[1].inam002
                              LET g_xmdl_d[l_ac].xmdl018 = l_inam[1].inam004
                        
                           END IF
                        
                        END IF     #160314-00009#15 add
                     END IF   
                  END IF
               END IF
            END IF
            
            CALL s_feature_description(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,g_xmdl_d[l_ac].xmdl009_desc
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl009
            #add-point:ON CHANGE xmdl009 name="input.g.page1.xmdl009"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl009_desc
            #add-point:BEFORE FIELD xmdl009_desc name="input.b.page1.xmdl009_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl009_desc
            
            #add-point:AFTER FIELD xmdl009_desc name="input.a.page1.xmdl009_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl009_desc
            #add-point:ON CHANGE xmdl009_desc name="input.g.page1.xmdl009_desc"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl033
            
            #add-point:AFTER FIELD xmdl033 name="input.a.page1.xmdl033"
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl033) THEN 
               IF g_xmdl_d[l_ac].xmdl033 <> g_xmdl_d_o.xmdl033 OR cl_null(g_xmdl_d_o.xmdl033) THEN
                
                  #顯示客戶料號
                  CALL s_axmt540_makings_no(g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk007,
                                            g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,g_xmdl_d[l_ac].xmdl033)
                  RETURNING l_success,l_xmdl008,l_xmdl009
                          ,g_pmao_flag          
                  IF NOT l_success THEN
                     LET g_xmdl_d[l_ac].xmdl033 = g_xmdl_d_o.xmdl033
                     LET g_xmdl_d[l_ac].l_pmao009 = g_xmdl_d_o.l_pmao009
                     LET g_xmdl_d[l_ac].l_pmao010 = g_xmdl_d_o.l_pmao010
                     DISPLAY BY NAME g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
                     NEXT FIELD CURRENT
                  ELSE
                     LET g_xmdl_d[l_ac].xmdl008 = l_xmdl008
                     LET g_xmdl_d[l_ac].xmdl009 = l_xmdl009
                  END IF
   
                  #料號檢查
                  IF NOT axmt540_xmdl008_chk() THEN
                     LET g_xmdl_d[l_ac].xmdl008 = g_xmdl_d_o.xmdl008
                     LET g_xmdl_d[l_ac].xmdl009 = g_xmdl_d_o.xmdl009
                     LET g_xmdl_d[l_ac].xmdl033 = g_xmdl_d_o.xmdl033
                     LET g_xmdl_d[l_ac].l_pmao009 = g_xmdl_d_o.l_pmao009
                     LET g_xmdl_d[l_ac].l_pmao010 = g_xmdl_d_o.l_pmao010
                     DISPLAY BY NAME g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
                     CALL s_desc_get_item_desc(g_xmdl_d[l_ac].xmdl008)RETURNING g_xmdl_d[l_ac].xmdl008_desc,g_xmdl_d[l_ac].xmdl008_desc_desc
               
                     NEXT FIELD CURRENT
                  END IF
                  SELECT pmao009,pmao010
                    INTO g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
                    FROM pmao_t
                   WHERE pmaoent = g_enterprise
                     AND pmao001 = g_xmdk_m.xmdk007
                     AND pmao002 = g_xmdl_d[l_ac].xmdl008
                     AND pmao003 = g_xmdl_d[l_ac].xmdl009
                     AND pmao004 = g_xmdl_d[l_ac].xmdl033                     
                     AND pmao000 = '2' #161221-00064#17 add                     
                  DISPLAY BY NAME g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
               ELSE
                  LET g_xmdl_d[l_ac].l_pmao009 =''
                  LET g_xmdl_d[l_ac].l_pmao010 =''
                  DISPLAY BY NAME g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
               END IF
               
               LET g_xmdl_d_o.xmdl008 = g_xmdl_d[l_ac].xmdl008
               LET g_xmdl_d_o.xmdl009 = g_xmdl_d[l_ac].xmdl009
               CALL s_desc_get_item_desc(g_xmdl_d[l_ac].xmdl008)RETURNING g_xmdl_d[l_ac].xmdl008_desc,g_xmdl_d[l_ac].xmdl008_desc_desc

            END IF
            CALL axmt540_set_no_entry_b(l_cmd)  
            LET g_xmdl_d_o.xmdl033 = g_xmdl_d[l_ac].xmdl033
            IF g_pmao_flag = 'Y' THEN
               NEXT FIELD l_pmao009
            END IF 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl033
            #add-point:BEFORE FIELD xmdl033 name="input.b.page1.xmdl033"
             CALL axmt540_set_entry_b(l_cmd)                                                                                               
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl033
            #add-point:ON CHANGE xmdl033 name="input.g.page1.xmdl033"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_pmao009
            #add-point:BEFORE FIELD l_pmao009 name="input.b.page1.l_pmao009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_pmao009
            
            #add-point:AFTER FIELD l_pmao009 name="input.a.page1.l_pmao009"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_pmao009
            #add-point:ON CHANGE l_pmao009 name="input.g.page1.l_pmao009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_pmao010
            #add-point:BEFORE FIELD l_pmao010 name="input.b.page1.l_pmao010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_pmao010
            
            #add-point:AFTER FIELD l_pmao010 name="input.a.page1.l_pmao010"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_pmao010
            #add-point:ON CHANGE l_pmao010 name="input.g.page1.l_pmao010"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl011
            
            #add-point:AFTER FIELD xmdl011 name="input.a.page1.xmdl011"
            
            CALL s_desc_get_acc_desc('221',g_xmdl_d[l_ac].xmdl011) RETURNING g_xmdl_d[l_ac].xmdl011_desc           

            IF NOT cl_null(g_xmdl_d[l_ac].xmdl011) THEN 
               IF g_xmdl_d[l_ac].xmdl011 <> g_xmdl_d_o.xmdl011 OR cl_null(g_xmdl_d_o.xmdl011) THEN
               
                  #呼叫檢查存在並帶值的library
                  IF NOT s_azzi650_chk_exist('221',g_xmdl_d[l_ac].xmdl011) THEN
                     LET g_xmdl_d[l_ac].xmdl011 = g_xmdl_d_o.xmdl011
                   
                     CALL s_desc_get_acc_desc('221',g_xmdl_d[l_ac].xmdl011) RETURNING g_xmdl_d[l_ac].xmdl011_desc
                  
                     NEXT FIELD CURRENT               
                  END IF
               END IF
            END IF      
            
            LET g_xmdl_d_o.xmdl011 = g_xmdl_d[l_ac].xmdl011
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl011
            #add-point:BEFORE FIELD xmdl011 name="input.b.page1.xmdl011"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl011
            #add-point:ON CHANGE xmdl011 name="input.g.page1.xmdl011"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl012
            #add-point:BEFORE FIELD xmdl012 name="input.b.page1.xmdl012"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl012
            
            #add-point:AFTER FIELD xmdl012 name="input.a.page1.xmdl012"
                                                                                                            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl012
            #add-point:ON CHANGE xmdl012 name="input.g.page1.xmdl012"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl017
            
            #add-point:AFTER FIELD xmdl017 name="input.a.page1.xmdl017"
            
            CALL s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl017) RETURNING g_xmdl_d[l_ac].xmdl017_desc
            
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl017) THEN
               IF g_xmdl_d[l_ac].xmdl017 <> g_xmdl_d_o.xmdl017 OR cl_null(g_xmdl_d_o.xmdl017) THEN            

                  #單位檢查
                  IF NOT s_axmt540_unit_chk(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl017) THEN
                     LET g_xmdl_d[l_ac].xmdl017 = g_xmdl_d_o.xmdl017
                  
                     CALL s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl017) RETURNING g_xmdl_d[l_ac].xmdl017_desc
                  
                     NEXT FIELD CURRENT
                  END IF

                  #刪除多庫儲批
                  IF NOT axmt540_01_xmdm_delete('1',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
                     LET g_xmdl_d[l_ac].xmdl017 = g_xmdl_d_o.xmdl017                  
                     CALL s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl017) RETURNING g_xmdl_d[l_ac].xmdl017_desc
                     
                     NEXT FIELD CURRENT
                  ELSE
                     LET g_xmdl_d[l_ac].xmdl013 = 'N'
                     LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013
                  END IF

                  #151209-00018#1  2015/12/09 By earl add s
                  #變更計價單位
                  CALL axmt540_xmdl021()
                  #151209-00018#1  2015/12/09 By earl add e

                  #推算參考數量
                  IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) AND NOT cl_null(g_xmdl_d[l_ac].xmdl017) AND
                     NOT cl_null(g_xmdl_d[l_ac].xmdl019) AND NOT cl_null(g_xmdl_d[l_ac].xmdl018) THEN
                     
                     CALL s_aooi250_convert_qty(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl018)
                     RETURNING l_success,g_xmdl_d[l_ac].xmdl020
                     LET g_xmdl_d_o.xmdl020 = g_xmdl_d[l_ac].xmdl020
                  ELSE
                     LET g_xmdl_d[l_ac].xmdl020 = ''
                     LET g_xmdl_d_o.xmdl020 = g_xmdl_d[l_ac].xmdl020
                  END IF

                  #推算計價數量
                  IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) AND NOT cl_null(g_xmdl_d[l_ac].xmdl017) AND
                     NOT cl_null(g_xmdl_d[l_ac].xmdl021) AND NOT cl_null(g_xmdl_d[l_ac].xmdl018) THEN
                     
                     CALL s_aooi250_convert_qty(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl021,g_xmdl_d[l_ac].xmdl018)
                     RETURNING l_success,g_xmdl_d[l_ac].xmdl022
                     LET g_xmdl_d_o.xmdl022 = g_xmdl_d[l_ac].xmdl022
                  ELSE
                     LET g_xmdl_d[l_ac].xmdl022 = ''
                     LET g_xmdl_d_o.xmdl022 = g_xmdl_d[l_ac].xmdl022
                  END IF                                                            

                  #取價
                  #151209-00018#1  2015/12/10 By earl mod s
                  IF cl_null(g_xmdl_d[l_ac].xmdl001) AND cl_null(g_xmdl_d[l_ac].xmdl003) THEN   #無來源且有輸入料號、產品特徵時才做取價
                     INITIALIZE l_price.* TO NULL
                     CALL axmt540_get_price(l_ac)
                     RETURNING l_price.source,l_price.docno,l_price.seq,l_price.price
                     
                     #重新取價
                     IF cl_null(g_xmdl2_d[l_ac].xmdl042) THEN
                        LET g_xmdl2_d[l_ac].xmdl042 = l_price.source
                        LET g_xmdl2_d[l_ac].xmdl043 = l_price.docno
                        LET g_xmdl2_d[l_ac].xmdl044 = l_price.seq
                        LET g_xmdl2_d[l_ac].xmdl045 = l_price.price
                     ELSE
                        IF g_xmdl2_d[l_ac].xmdl045 <> l_price.price THEN
                           IF cl_ask_confirm('axm-00230') THEN
                              LET g_xmdl2_d[l_ac].xmdl042 = l_price.source
                              LET g_xmdl2_d[l_ac].xmdl043 = l_price.docno
                              LET g_xmdl2_d[l_ac].xmdl044 = l_price.seq
                              LET g_xmdl2_d[l_ac].xmdl045 = l_price.price
                           END IF
                        END IF
                     END IF
                  #151209-00018#1  2015/12/10 By earl mod e
                     
                     LET g_xmdl2_d[l_ac].xmdl024 = g_xmdl2_d[l_ac].xmdl045
                     LET g_xmdl2_d_o.xmdl024 = g_xmdl2_d[l_ac].xmdl024
                  END IF

               END IF
            END IF 

            LET g_xmdl_d_o.xmdl017 = g_xmdl_d[l_ac].xmdl017
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl017
            #add-point:BEFORE FIELD xmdl017 name="input.b.page1.xmdl017"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl017
            #add-point:ON CHANGE xmdl017 name="input.g.page1.xmdl017"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl018
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdl_d[l_ac].xmdl018,"0","0","","","azz-00079",1) THEN
               NEXT FIELD xmdl018
            END IF 
 
 
 
            #add-point:AFTER FIELD xmdl018 name="input.a.page1.xmdl018"
            
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl018) THEN     
               #150821-xianghui-add--b
               LET l_cnt = 1 
               #若料件設置要做製造批序號管理時，新增時維護完數量時自動開啟批序號維護作業維護相關資料
               #160603-00026#1 20160615 modify by ming -----(S) 
               ##IF s_lot_batch_number(g_xmdl_d[l_ac].xmdl008,g_site) THEN     #160314-00008#1 mark
               #IF s_lot_batch_number_1n3(g_xmdl_d[l_ac].xmdl008,g_site) THEN #160314-00008#1 add
               IF s_lot_batch_number(g_xmdl_d[l_ac].xmdl008,g_site) THEN
               #160603-00026#1 20160615 modify by ming -----(E) 
                  SELECT COUNT(*) INTO l_cnt 
                    FROM inao_t 
                   WHERE inaoent = g_enterprise
                     AND inaodocno = g_xmdk_m.xmdkdocno
                     AND inaoseq = g_xmdl_d[l_ac].xmdlseq                     
               END IF 
               #150821-xianghui-add--e
               IF g_xmdl_d[l_ac].xmdl018 <> g_xmdl_d_o.xmdl018 OR cl_null(g_xmdl_d_o.xmdl018) OR l_cnt = 0 THEN
                  
                  IF NOT axmt540_xmdl018_chk() THEN
                     LET g_xmdl_d[l_ac].xmdl018 = g_xmdl_d_o.xmdl018
                     
                     NEXT FIELD CURRENT
                  END IF
                  
               END IF
            END IF 
            
            LET g_xmdl_d_o.xmdl018 = g_xmdl_d[l_ac].xmdl018
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl018
            #add-point:BEFORE FIELD xmdl018 name="input.b.page1.xmdl018"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl018
            #add-point:ON CHANGE xmdl018 name="input.g.page1.xmdl018"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl019
            
            #add-point:AFTER FIELD xmdl019 name="input.a.page1.xmdl019"
 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl019
            #add-point:BEFORE FIELD xmdl019 name="input.b.page1.xmdl019"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl019
            #add-point:ON CHANGE xmdl019 name="input.g.page1.xmdl019"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl020
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdl_d[l_ac].xmdl020,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD xmdl020
            END IF 
 
 
 
            #add-point:AFTER FIELD xmdl020 name="input.a.page1.xmdl020"
            
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl020) THEN                
               #參考數量取位
               CALL s_aooi250_take_decimals(g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl020) RETURNING l_success,g_xmdl_d[l_ac].xmdl020
            END IF 

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl020
            #add-point:BEFORE FIELD xmdl020 name="input.b.page1.xmdl020"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl020
            #add-point:ON CHANGE xmdl020 name="input.g.page1.xmdl020"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl010
            #add-point:BEFORE FIELD xmdl010 name="input.b.page1.xmdl010"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl010
            
            #add-point:AFTER FIELD xmdl010 name="input.a.page1.xmdl010"
                                                                                                            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl010
            #add-point:ON CHANGE xmdl010 name="input.g.page1.xmdl010"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl013
            #add-point:BEFORE FIELD xmdl013 name="input.b.page1.xmdl013"
                                                                                                
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl013
            
            #add-point:AFTER FIELD xmdl013 name="input.a.page1.xmdl013"

            LET g_xmdl_d_o.xmdl014 = g_xmdl_d[l_ac].xmdl014
            LET g_xmdl_d_o.xmdl015 = g_xmdl_d[l_ac].xmdl015
            LET g_xmdl_d_o.xmdl016 = g_xmdl_d[l_ac].xmdl016
            LET g_xmdl_d_o.xmdl052 = g_xmdl_d[l_ac].xmdl052               
            LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013

            CALL axmt540_set_entry_b(l_cmd)
            CALL axmt540_set_no_entry_b(l_cmd)
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl013
            #add-point:ON CHANGE xmdl013 name="input.g.page1.xmdl013"
            #開啟多庫儲批
            IF g_xmdl_d[l_ac].xmdl013 = 'Y' THEN
               #150821-xianghui-b
               DROP TABLE axmt540_inao3
               LET g_sql = "CREATE GLOBAL TEMPORARY TABLE axmt540_inao3 AS ",
                            #mod--161109-00085#4-s
                            #"SELECT * FROM inao_t"
                            #161109-00085#76 --s mark
                            #"SELECT inaoent,inaosite,inaodocno,inaoseq,inaoseq1,
                            #        inaoseq2,inao000,inao001,inao002,inao003,
                            #        inao004,inao005,inao006,inao007,inao008,
                            #        inao009,inao010,inao011,inao012,inao013,
                            #        inao014,inao020,inao021,inao022,inao023,
                            #        inao024,inao025 
                            # FROM inao_t "
                            #161109-00085#76 --e mark
                            #mod--161109-00085#4-e
                            #161109-00085#76 --s add
                            " SELECT inaoent,inaosite,inaodocno,inaoseq,inaoseq1, ",
                            "        inaoseq2,inao000,inao001,inao002,inao003, ",
                            "        inao004,inao005,inao006,inao007,inao008, ",
                            "        inao009,inao010,inao011,inao012,inao013, ",
                            "        inaoud001,inaoud002,inaoud003,inaoud004,inaoud005, ",
                            "        inaoud006,inaoud007,inaoud008,inaoud009,inaoud010, ",
                            "        inaoud011,inaoud012,inaoud013,inaoud014,inaoud015, ",
                            "        inaoud016,inaoud017,inaoud018,inaoud019,inaoud020, ",
                            "        inaoud021,inaoud022,inaoud023,inaoud024,inaoud025, ",
                            "        inaoud026,inaoud027,inaoud028,inaoud029,inaoud030, ",
                            "        inao014,inao020,inao021,inao022,inao023, ",
                            "        inao024,inao025 ",
                            "   FROM inao_t "
                            #161109-00085#76 --e add
               PREPARE inao_tbl3 FROM g_sql
               EXECUTE inao_tbl3
               FREE inao_tbl3                
               INSERT INTO axmt540_inao3
               #mod--161109-00085#4-s               
               #SELECT *
               SELECT inaoent,inaosite,inaodocno,inaoseq,inaoseq1,
                      inaoseq2,inao000,inao001,inao002,inao003,
                      inao004,inao005,inao006,inao007,inao008,
                      inao009,inao010,inao011,inao012,inao013,
                      #161109-00085#76 --s add
                      inaoud001,inaoud002,inaoud003,inaoud004,inaoud005,
                      inaoud006,inaoud007,inaoud008,inaoud009,inaoud010,
                      inaoud011,inaoud012,inaoud013,inaoud014,inaoud015,
                      inaoud016,inaoud017,inaoud018,inaoud019,inaoud020,
                      inaoud021,inaoud022,inaoud023,inaoud024,inaoud025,
                      inaoud026,inaoud027,inaoud028,inaoud029,inaoud030,
                      #161109-00085#76 --e add
                      inao014,inao020,inao021,inao022,inao023,
                      inao024,inao025
               #mod--161109-00085#4-e  
               FROM inao_t 
               WHERE inaoent = g_enterprise 
                 AND inaodocno = g_xmdk_m.xmdkdocno
                 AND inaoseq = g_xmdl_d[l_ac].xmdlseq 
               DELETE FROM inao_t 
                WHERE inaoent = g_enterprise 
                  AND inaodocno = g_xmdk_m.xmdkdocno
                  AND inaoseq = g_xmdl_d[l_ac].xmdlseq                             
               #150821-xianghui-e                                              
               CALL axmt540_01('1',g_xmdk_m.xmdksite,'',g_xmdk_m.xmdkdocno,
                               g_xmdl_d[l_ac].xmdlseq,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,
                               g_xmdl_d[l_ac].xmdl011,g_xmdl_d[l_ac].xmdl012,
                               g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,'',
                               g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl020,'',
                               g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,g_xmdl_d[l_ac].xmdl030)
                               RETURNING l_success,l_rollback,l_xmdl014,l_xmdl015,l_xmdl016,l_xmdl052
               #150821-xianghui-b
               IF l_success = FALSE AND l_rollback = FALSE THEN 
                  DELETE FROM inao_t 
                   WHERE inaoent = g_enterprise 
                     AND inaodocno = g_xmdk_m.xmdkdocno
                     AND inaoseq = g_xmdl_d[l_ac].xmdlseq       
                  #將資料塞回原table   
                  INSERT INTO inao_t 
                  #mod--161109-00085#4-s
                  #SELECT *
                  SELECT inaoent,inaosite,inaodocno,inaoseq,inaoseq1,
                         inaoseq2,inao000,inao001,inao002,inao003,
                         inao004,inao005,inao006,inao007,inao008,
                         inao009,inao010,inao011,inao012,inao013,
                         #161109-00085#76 --s add
                         inaoud001,inaoud002,inaoud003,inaoud004,inaoud005,
                         inaoud006,inaoud007,inaoud008,inaoud009,inaoud010,
                         inaoud011,inaoud012,inaoud013,inaoud014,inaoud015,
                         inaoud016,inaoud017,inaoud018,inaoud019,inaoud020,
                         inaoud021,inaoud022,inaoud023,inaoud024,inaoud025,
                         inaoud026,inaoud027,inaoud028,inaoud029,inaoud030,
                         #161109-00085#76 --e add
                         inao014,inao020,inao021,inao022,inao023,
                         inao024,inao025
                  #mod--161109-00085#4-e    
                  FROM axmt540_inao3
                  DROP TABLE axmt540_inao3
               END IF 
               #150821-xianghui-e               
               IF l_rollback THEN  #多庫儲批資料錯誤必須rollback
                  CLOSE axmt540_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF

               IF l_success THEN
                  IF NOT cl_null(l_xmdl014) THEN  #只有一筆
                     LET g_xmdl_d[l_ac].xmdl013 = 'N'
                     LET g_xmdl_d[l_ac].xmdl014 = l_xmdl014
                     LET g_xmdl_d[l_ac].xmdl015 = l_xmdl015
                     LET g_xmdl_d[l_ac].xmdl016 = l_xmdl016
                     LET g_xmdl_d[l_ac].xmdl052 = l_xmdl052
                  ELSE
                     LET g_xmdl_d[l_ac].xmdl013 = 'Y'
                     LET g_xmdl_d[l_ac].xmdl014 = ' '
                     LET g_xmdl_d[l_ac].xmdl015 = ' '
                     LET g_xmdl_d[l_ac].xmdl016 = ' '
                     LET g_xmdl_d[l_ac].xmdl052 = ' '
                  END IF

                  DISPLAY BY NAME g_xmdl_d[l_ac].xmdl013
                  DISPLAY BY NAME g_xmdl_d[l_ac].xmdl014
                  DISPLAY BY NAME g_xmdl_d[l_ac].xmdl015
                  DISPLAY BY NAME g_xmdl_d[l_ac].xmdl016
                  DISPLAY BY NAME g_xmdl_d[l_ac].xmdl052

                  CALL s_desc_get_stock_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014) RETURNING g_xmdl_d[l_ac].xmdl014_desc
                  DISPLAY BY NAME g_xmdl_d[l_ac].xmdl014_desc
                  CALL s_desc_get_locator_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015) RETURNING g_xmdl_d[l_ac].xmdl015_desc
                  DISPLAY BY NAME g_xmdl_d[l_ac].xmdl015_desc
                  
               ELSE
                  LET g_xmdl_d[l_ac].xmdl013 = g_xmdl_d_o.xmdl013

                  NEXT FIELD CURRENT
               END IF
               
               LET l_xmdlseq_backup = g_xmdl_d[l_ac].xmdlseq #紀錄產生庫儲批所用的項次

            ELSE
            
               #檢查是否可多庫儲批若為"N"刪除舊值
               IF NOT axmt540_01_xmdm_delete('1',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
                  LET g_xmdl_d[l_ac].xmdl013 = g_xmdl_d_o.xmdl013
               
                  NEXT FIELD CURRENT
               END IF

            END IF
            CALL axmt540_set_act_visible_b()
            CALL axmt540_set_act_no_visible_b()            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl014
            
            #add-point:AFTER FIELD xmdl014 name="input.a.page1.xmdl014"
            CALL s_desc_get_stock_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014) RETURNING g_xmdl_d[l_ac].xmdl014_desc
            
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl014) THEN
               IF g_xmdl_d[l_ac].xmdl014 <> g_xmdl_d_o.xmdl014 OR cl_null(g_xmdl_d_o.xmdl014) 
                  OR g_xmdl_d[l_ac].xmdl015 <> g_xmdl_d_o.xmdl015 OR g_xmdl_d_o.xmdl015 IS NULL      #150821-xianghui
                  OR g_xmdl_d[l_ac].xmdl016 <> g_xmdl_d_o.xmdl016 OR g_xmdl_d_o.xmdl016 IS NULL THEN  #150821-xianghui
                  #150921-00014 earl mod
                  IF NOT s_axmt540_xmdl014_chk(g_xmdh011,g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,g_xmdl_d[l_ac].xmdl014,g_xmdk_m.xmdkdocno) THEN
                     LET g_xmdl_d[l_ac].xmdl014 = g_xmdl_d_o.xmdl014
                     CALL s_desc_get_stock_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014) RETURNING g_xmdl_d[l_ac].xmdl014_desc
                     
                     NEXT FIELD CURRENT
                  END IF

                  #檢查儲位
                  IF NOT s_axmt540_xmdl015_chk(g_xmdh011,g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015) THEN
                     LET g_xmdl_d[l_ac].xmdl014 = g_xmdl_d_o.xmdl014                            
                     CALL s_desc_get_stock_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014) RETURNING g_xmdl_d[l_ac].xmdl014_desc
                            
                     NEXT FIELD CURRENT
                  END IF                 
                  
                  #在揀量check
                  IF NOT s_axmt540_xmdl014_xmdl015_xmdl016_xmdk052_chk(g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,
                                                                       g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,g_xmdl_d[l_ac].xmdl052,
                                                                       g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,
                                                                       g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq) THEN
                                              
                     LET g_xmdl_d[l_ac].xmdl014 = g_xmdl_d_o.xmdl014                            
                     CALL s_desc_get_stock_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014) RETURNING g_xmdl_d[l_ac].xmdl014_desc
                            
                     NEXT FIELD CURRENT
                  END IF                  

                  #150821-xianghui
                  #160603-00026#1 20160615 modify by ming -----(S) 
                  ##IF s_lot_batch_number(g_xmdl_d[l_ac].xmdl008,g_site) THEN     #160314-00008#1 mark
                  #IF s_lot_batch_number_1n3(g_xmdl_d[l_ac].xmdl008,g_site) THEN #160314-00008#1 add
                  IF s_lot_batch_number(g_xmdl_d[l_ac].xmdl008,g_site) THEN     
                  #160603-00026#1 20160615 modify by ming -----(E) 
                     CALL s_lot_inao_chk(g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,1,'2',g_site) RETURNING l_success,l_cnt
                     IF l_cnt > 0 THEN 
                        IF l_success THEN 
                           #刪除資料                              
                           DELETE FROM inao_t 
                            WHERE inaoent = g_enterprise 
                              AND inaosite = g_site
                              AND inaodocno = g_xmdk_m.xmdkdocno
                              AND inaoseq = g_xmdl_d[l_ac].xmdlseq
                              AND inaoseq1 = '1'
                              AND inao000 = '2'
                              AND inao013 = '-1'                       
                           CALL axmt540_inao() 
                        ELSE
                           LET g_xmdl_d[l_ac].xmdl014 = g_xmdl_d_o.xmdl014                            
                           CALL s_desc_get_stock_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014) RETURNING g_xmdl_d[l_ac].xmdl014_desc
                           LET g_xmdl_d[l_ac].xmdl015 = g_xmdl_d_o.xmdl015
                           CALL s_desc_get_locator_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015) RETURNING g_xmdl_d[l_ac].xmdl015_desc                     
                           LET g_xmdl_d[l_ac].xmdl016 = g_xmdl_d_o.xmdl016
                        END IF
                     ELSE
                        CALL axmt540_inao()
                     END IF
                  END IF                  
                  #150821-xianghui
                  
                  #儲位控管若為5.不使用儲位控管
                  IF NOT s_axmt540_inaa007_chk(g_xmdl_d[l_ac].xmdl014) THEN
                     LET g_xmdl_d[l_ac].xmdl015 = ' '
                     LET g_xmdl_d_o.xmdl015 = g_xmdl_d[l_ac].xmdl015
                     CALL s_desc_get_locator_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015) RETURNING g_xmdl_d[l_ac].xmdl015_desc
                  END IF                  
               END IF
            END IF            

            LET g_xmdl_d_o.xmdl014 = g_xmdl_d[l_ac].xmdl014
            LET g_xmdl_d_o.xmdl015 = g_xmdl_d[l_ac].xmdl015    #150821-xianghui
            LET g_xmdl_d_o.xmdl016 = g_xmdl_d[l_ac].xmdl016    #150821-xianghui
            CALL axmt540_set_entry_b(l_cmd)
            CALL axmt540_set_no_entry_b(l_cmd)
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl014
            #add-point:BEFORE FIELD xmdl014 name="input.b.page1.xmdl014"
                                                                                      
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl014
            #add-point:ON CHANGE xmdl014 name="input.g.page1.xmdl014"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl015
            
            #add-point:AFTER FIELD xmdl015 name="input.a.page1.xmdl015"
            CALL s_desc_get_locator_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015) RETURNING g_xmdl_d[l_ac].xmdl015_desc
            #150821-xianghui
            IF g_xmdl_d[l_ac].xmdl015 IS NULL THEN 
               LET g_xmdl_d[l_ac].xmdl015 = ' '
            END IF
            #150821-xianghui
            #IF NOT cl_null(g_xmdl_d[l_ac].xmdl015) THEN   #150821-xianghui-mark
            IF g_xmdl_d[l_ac].xmdl015 IS NOT NULL THEN   #150821-xianghui
               #IF g_xmdl_d[l_ac].xmdl015 <> g_xmdl_d_o.xmdl015 OR cl_null(g_xmdl_d_o.xmdl015)    #150821-xianghui mark
               IF g_xmdl_d[l_ac].xmdl015 <> g_xmdl_d_o.xmdl015 OR g_xmdl_d_o.xmdl015 IS NULL     #150821-xianghui
                  OR g_xmdl_d[l_ac].xmdl016 <> g_xmdl_d_o.xmdl016 OR g_xmdl_d_o.xmdl016 IS NULL  THEN   #150821-xianghui
                  
                  IF NOT cl_null(g_xmdl_d[l_ac].xmdl015) THEN   #150821-xianghui
                     IF NOT s_axmt540_xmdl015_chk(g_xmdh011,g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015) THEN
                        LET g_xmdl_d[l_ac].xmdl015 = g_xmdl_d_o.xmdl015                  
                        CALL s_desc_get_locator_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015) RETURNING g_xmdl_d[l_ac].xmdl015_desc
                        
                        NEXT FIELD CURRENT
                     END IF
                     
                     #在揀量check
                     IF NOT s_axmt540_xmdl014_xmdl015_xmdl016_xmdk052_chk(g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,
                                                                          g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,g_xmdl_d[l_ac].xmdl052,
                                                                          g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,
                                                                          g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq) THEN
                        LET g_xmdl_d[l_ac].xmdl015 = g_xmdl_d_o.xmdl015
                        CALL s_desc_get_locator_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015) RETURNING g_xmdl_d[l_ac].xmdl015_desc
                     
                        NEXT FIELD CURRENT
                     END IF
                  END IF        #150821-xianghui
                  #150821-xianghui
                  #160603-00026#1 20160615 modify by ming -----(S) 
                  ##IF s_lot_batch_number(g_xmdl_d[l_ac].xmdl008,g_site) THEN     #160314-00008#1 mark
                  #IF s_lot_batch_number_1n3(g_xmdl_d[l_ac].xmdl008,g_site) THEN #160314-00008#1 add
                  IF s_lot_batch_number(g_xmdl_d[l_ac].xmdl008,g_site) THEN     
                  #160603-00026#1 20160615 modify by ming -----(E) 
                     CALL s_lot_inao_chk(g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,1,'2',g_site) RETURNING l_success,l_cnt
                     IF l_cnt > 0 THEN 
                        IF l_success THEN 
                           #刪除資料                              
                           DELETE FROM inao_t 
                            WHERE inaoent = g_enterprise 
                              AND inaosite = g_site
                              AND inaodocno = g_xmdk_m.xmdkdocno
                              AND inaoseq = g_xmdl_d[l_ac].xmdlseq
                              AND inaoseq1 = '1'
                              AND inao000 = '2'
                              AND inao013 = '-1'                       
                           CALL axmt540_inao() 
                        ELSE
                           LET g_xmdl_d[l_ac].xmdl015 = g_xmdl_d_o.xmdl015
                           CALL s_desc_get_locator_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015) RETURNING g_xmdl_d[l_ac].xmdl015_desc
                           LET g_xmdl_d[l_ac].xmdl016 = g_xmdl_d_o.xmdl016
                        END IF
                     ELSE
                       CALL axmt540_inao()
                     END IF
                  END IF                  
                  #150821-xianghui                 
               END IF
            END IF

            LET g_xmdl_d_o.xmdl015 = g_xmdl_d[l_ac].xmdl015
            LET g_xmdl_d_o.xmdl016 = g_xmdl_d[l_ac].xmdl016    #150821-xianghui
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl015
            #add-point:BEFORE FIELD xmdl015 name="input.b.page1.xmdl015"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl015
            #add-point:ON CHANGE xmdl015 name="input.g.page1.xmdl015"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl016
            
            #add-point:AFTER FIELD xmdl016 name="input.a.page1.xmdl016"
            #150821-xianghui
            IF g_xmdl_d[l_ac].xmdl016 IS NULL THEN 
               LET g_xmdl_d[l_ac].xmdl016 = ' '
            END IF
            #150821-xianghui
            
            #IF NOT cl_null(g_xmdl_d[l_ac].xmdl016) THEN             #150821-xianghui mark
            IF g_xmdl_d[l_ac].xmdl016 IS NOT NULL THEN    #150821-xianghui
               #IF g_xmdl_d[l_ac].xmdl016 <> g_xmdl_d_o.xmdl016 OR cl_null(g_xmdl_d_o.xmdl016) THEN     #150821-xianghui mark
               IF g_xmdl_d[l_ac].xmdl016 <> g_xmdl_d_o.xmdl016 OR g_xmdl_d_o.xmdl016 IS NULL THEN      #150821-xianghui 
                  IF NOT cl_null(g_xmdl_d[l_ac].xmdl016) THEN             #150821-xianghui
                     IF NOT s_axmt540_xmdl016_chk(g_xmdh011,g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,
                                                  g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,g_xmdl_d[l_ac].xmdl016) THEN
                        LET g_xmdl_d[l_ac].xmdl016 = g_xmdl_d_o.xmdl016
                        
                        NEXT FIELD CURRENT
                     END IF
                   
                     #在揀量check
                     IF NOT s_axmt540_xmdl014_xmdl015_xmdl016_xmdk052_chk(g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,
                                                                          g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,g_xmdl_d[l_ac].xmdl052,
                                                                          g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,
                                                                          g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq) THEN
                        LET g_xmdl_d[l_ac].xmdl016 = g_xmdl_d_o.xmdl016
                        
                        NEXT FIELD CURRENT
                     END IF
                  END IF   #150821-xianghui   
                  #150821-xianghui 
                  #160603-00026#1 20160615 modify by ming -----(S) 
                  ##IF s_lot_batch_number(g_xmdl_d[l_ac].xmdl008,g_site) THEN     #160314-00008#1 mark
                  #IF s_lot_batch_number_1n3(g_xmdl_d[l_ac].xmdl008,g_site) THEN #160314-00008#1 add
                  IF s_lot_batch_number(g_xmdl_d[l_ac].xmdl008,g_site) THEN     
                  #160603-00026#1 20160615 modify by ming -----(E) 
                     CALL s_lot_inao_chk(g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,1,'2',g_site) RETURNING l_success,l_cnt
                     IF l_cnt > 0 THEN 
                        IF l_success THEN
                           #刪除資料                              
                           DELETE FROM inao_t 
                            WHERE inaoent = g_enterprise 
                              AND inaosite = g_site
                              AND inaodocno = g_xmdk_m.xmdkdocno
                              AND inaoseq = g_xmdl_d[l_ac].xmdlseq
                              AND inaoseq1 = '1'
                              AND inao000 = '2'
                              AND inao013 = '-1'                      
                           CALL axmt540_inao() 
                        ELSE
                           LET g_xmdl_d[l_ac].xmdl016 = g_xmdl_d_o.xmdl016
                        END IF
                     ELSE
                        CALL axmt540_inao()
                     END IF
                  END IF                     
                  #150821-xianghui
               END IF
            END IF
            LET g_xmdl_d_o.xmdl016 = g_xmdl_d[l_ac].xmdl016
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl016
            #add-point:BEFORE FIELD xmdl016 name="input.b.page1.xmdl016"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl016
            #add-point:ON CHANGE xmdl016 name="input.g.page1.xmdl016"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl052
            #add-point:BEFORE FIELD xmdl052 name="input.b.page1.xmdl052"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl052
            
            #add-point:AFTER FIELD xmdl052 name="input.a.page1.xmdl052"
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl052) THEN            
               IF g_xmdl_d[l_ac].xmdl052 <> g_xmdl_d_o.xmdl052 OR cl_null(g_xmdl_d_o.xmdl052) THEN

                  #檢查庫存管理特徵
                  IF NOT s_axmt540_xmdl052_chk(g_xmdh011,g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,g_xmdl_d[l_ac].xmdl052) THEN
                     LET g_xmdl_d[l_ac].xmdl052 = g_xmdl_d_o.xmdl052

                     NEXT FIELD CURRENT
                  END IF

                  #在揀量check
                  IF NOT s_axmt540_xmdl014_xmdl015_xmdl016_xmdk052_chk(g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,
                                                                       g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,g_xmdl_d[l_ac].xmdl052,
                                                                       g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,
                                                                       g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq) THEN
                     LET g_xmdl_d[l_ac].xmdl052 = g_xmdl_d_o.xmdl052
                     
                     NEXT FIELD CURRENT
                  END IF                 
               END IF
            END IF
            #160316-00007#4---add---begin
            #庫存管理特微
            CALL s_axmt540_get_imaf(g_xmdl_d[l_ac].xmdl008) RETURNING l_imaf055,l_imaf061    #160519-00008#8
            IF l_imaf055  = '3' THEN   #160519-00008#8
               IF g_xmdl_d[l_ac].xmdl052 IS NULL THEN 
                  LET g_xmdl_d[l_ac].xmdl052 = ' '
               END IF    
            END IF                     #160519-00008#8
            IF g_xmdl_d[l_ac].xmdl052 IS NOT NULL THEN
               IF g_xmdl_d[l_ac].xmdl052 <> g_xmdl_d_o.xmdl052 OR g_xmdl_d_o.xmdl052 IS NULL THEN             
                  IF s_lot_batch_number_1n3(g_xmdl_d[l_ac].xmdl008,g_site) THEN
                     CALL s_lot_inao_chk(g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,1,'2',g_site) RETURNING l_success,l_cnt
                     IF l_cnt > 0 THEN 
                        IF l_success THEN
                           #刪除資料                              
                           DELETE FROM inao_t 
                            WHERE inaoent = g_enterprise 
                              AND inaosite = g_site
                              AND inaodocno = g_xmdk_m.xmdkdocno
                              AND inaoseq = g_xmdl_d[l_ac].xmdlseq
                              AND inaoseq1 = '1'
                              AND inao000 = '2'
                              AND inao013 = '-1'                      
                           CALL axmt540_inao() 
                        ELSE
                           LET g_xmdl_d[l_ac].xmdl052 = g_xmdl_d_o.xmdl052
                        END IF
                     ELSE
                        CALL axmt540_inao()
                     END IF
                  END IF 
               END IF
            END IF    
            #160316-00007#4---add---end             
            LET g_xmdl_d_o.xmdl052 = g_xmdl_d[l_ac].xmdl052
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl052
            #add-point:ON CHANGE xmdl052 name="input.g.page1.xmdl052"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl021
            
            #add-point:AFTER FIELD xmdl021 name="input.a.page1.xmdl021"
 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl021
            #add-point:BEFORE FIELD xmdl021 name="input.b.page1.xmdl021"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl021
            #add-point:ON CHANGE xmdl021 name="input.g.page1.xmdl021"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl022
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdl_d[l_ac].xmdl022,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD xmdl022
            END IF 
 
 
 
            #add-point:AFTER FIELD xmdl022 name="input.a.page1.xmdl022"
            
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl022) THEN
               IF g_xmdl_d[l_ac].xmdl022 <> g_xmdl_d_o.xmdl022 OR cl_null(g_xmdl_d_o.xmdl022) THEN
               
                  #取位
                  CALL s_aooi250_take_decimals(g_xmdl_d[l_ac].xmdl021,g_xmdl_d[l_ac].xmdl022) RETURNING l_success,g_xmdl_d[l_ac].xmdl022
               
                  #取價
                  #151209-00018#1  2015/12/10 By earl mod s
                  IF cl_null(g_xmdl_d[l_ac].xmdl001) AND cl_null(g_xmdl_d[l_ac].xmdl003) THEN   #無來源且有輸入料號、產品特徵時才做取價
                     INITIALIZE l_price.* TO NULL
                     CALL axmt540_get_price(l_ac)
                     RETURNING l_price.source,l_price.docno,l_price.seq,l_price.price
                     
                     #重新取價
                     IF cl_null(g_xmdl2_d[l_ac].xmdl042) THEN
                        LET g_xmdl2_d[l_ac].xmdl042 = l_price.source
                        LET g_xmdl2_d[l_ac].xmdl043 = l_price.docno
                        LET g_xmdl2_d[l_ac].xmdl044 = l_price.seq
                        LET g_xmdl2_d[l_ac].xmdl045 = l_price.price
                     ELSE
                        IF g_xmdl2_d[l_ac].xmdl045 <> l_price.price THEN
                           IF cl_ask_confirm('axm-00230') THEN
                              LET g_xmdl2_d[l_ac].xmdl042 = l_price.source
                              LET g_xmdl2_d[l_ac].xmdl043 = l_price.docno
                              LET g_xmdl2_d[l_ac].xmdl044 = l_price.seq
                              LET g_xmdl2_d[l_ac].xmdl045 = l_price.price
                           END IF
                        END IF
                     END IF
                  #151209-00018#1  2015/12/10 By earl mod e
                     
                     LET g_xmdl2_d[l_ac].xmdl024 = g_xmdl2_d[l_ac].xmdl045
                     LET g_xmdl2_d_o.xmdl024 = g_xmdl2_d[l_ac].xmdl024
                  END IF
               
               END IF
            END IF
            
            LET g_xmdl_d_o.xmdl022 = g_xmdl_d[l_ac].xmdl022
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl022
            #add-point:BEFORE FIELD xmdl022 name="input.b.page1.xmdl022"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl022
            #add-point:ON CHANGE xmdl022 name="input.g.page1.xmdl022"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl050
            
            #add-point:AFTER FIELD xmdl050 name="input.a.page1.xmdl050"
             
            CALL axmt540_xmdl050_ref()
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl050) THEN
               IF g_xmdl_d[l_ac].xmdl050 <> g_xmdl_d_o.xmdl050 OR cl_null(g_xmdl_d_o.xmdl050) THEN
            
                  IF NOT axmt540_xmdl050_chk() THEN
                     LET g_xmdl_d[l_ac].xmdl050 = g_xmdl_d_o.xmdl050
                     CALL axmt540_xmdl050_ref()
                     
                     NEXT FIELD CURRENT
                  END IF
               
                  #檢核輸入的理由碼是否在單據別限制範圍內
                  CALL s_control_chk_doc('8',g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdl050,'','','','')
                  RETURNING l_success,l_flag
                  
                  IF NOT l_success OR NOT l_flag THEN
                     LET g_xmdl_d[l_ac].xmdl050 = g_xmdl_d_o.xmdl050
                     CALL axmt540_xmdl050_ref()
                     
                     NEXT FIELD CURRENT
                  END IF            
               END IF
            END IF
            
            LET g_xmdl_d_o.xmdl050 = g_xmdl_d[l_ac].xmdl050
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl050
            #add-point:BEFORE FIELD xmdl050 name="input.b.page1.xmdl050"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl050
            #add-point:ON CHANGE xmdl050 name="input.g.page1.xmdl050"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl050_desc
            #add-point:BEFORE FIELD xmdl050_desc name="input.b.page1.xmdl050_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl050_desc
            
            #add-point:AFTER FIELD xmdl050_desc name="input.a.page1.xmdl050_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl050_desc
            #add-point:ON CHANGE xmdl050_desc name="input.g.page1.xmdl050_desc"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl023
            #add-point:BEFORE FIELD xmdl023 name="input.b.page1.xmdl023"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl023
            
            #add-point:AFTER FIELD xmdl023 name="input.a.page1.xmdl023"
                                                                                                            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl023
            #add-point:ON CHANGE xmdl023 name="input.g.page1.xmdl023"
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl023) THEN
               IF g_xmdl_d[l_ac].xmdl023 <> g_xmdl_d_o.xmdl023 OR cl_null(g_xmdl_d_o.xmdl023) THEN
               
                  #檢驗否(因只有axmt541與樣品才可更改故不控管)
                  IF g_xmdl_d[l_ac].xmdl023 = 'N' THEN
                     LET g_xmdl_d[l_ac].xmdl056 = g_xmdl_d[l_ac].xmdl018
                  ELSE
                     LET g_xmdl_d[l_ac].xmdl056 = 0
                  END IF
                  
               END IF
            END IF
            LET g_xmdl_d_o.xmdl023 = g_xmdl_d[l_ac].xmdl023
            LET g_xmdl_d_o.xmdl056 = g_xmdl_d[l_ac].xmdl056
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl041
            #add-point:BEFORE FIELD xmdl041 name="input.b.page1.xmdl041"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl041
            
            #add-point:AFTER FIELD xmdl041 name="input.a.page1.xmdl041"
                                                                                                            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl041
            #add-point:ON CHANGE xmdl041 name="input.g.page1.xmdl041"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl030
            
            #add-point:AFTER FIELD xmdl030 name="input.a.page1.xmdl030"
            CALL s_desc_get_project_desc(g_xmdl_d[l_ac].xmdl030) RETURNING g_xmdl_d[l_ac].xmdl030_desc
            DISPLAY BY NAME g_xmdl_d[l_ac].xmdl030_desc
            
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl030) THEN 
               IF g_xmdl_d[l_ac].xmdl030 != g_xmdl_d_o.xmdl030 OR cl_null(g_xmdl_d_o.xmdl030) THEN
#應用 a17 樣板自動產生(Version:2)
               #欄位存在檢查
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  #160318-00025#15 by 07900 --add-str 
                  LET g_errshow = TRUE #是否開窗
                  #160318-00025#15 by 07900 --add-end
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmdl_d[l_ac].xmdl030
                  #160318-00025#15 by 07900 --add-str 
                  LET g_chkparam.err_str[1] ="apj-00012:sub-01302|apjm200|",cl_get_progname("apjm200",g_lang,"2"),"|:EXEPROGapjm200"
                  #160318-00025#15 by 07900 --add-end    
                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_pjba001") THEN
                     #檢查成功時後續處理
                     LET g_xmdl_d[l_ac].xmdl030 = g_xmdl_d_o.xmdl030
                     CALL s_desc_get_project_desc(g_xmdl_d[l_ac].xmdl030) RETURNING g_xmdl_d[l_ac].xmdl030_desc
                     DISPLAY BY NAME g_xmdl_d[l_ac].xmdl030_desc
                     NEXT FIELD CURRENT
                  END IF
                  LET g_xmdl_d[l_ac].xmdl031 = ''
                  LET g_xmdl_d[l_ac].xmdl031_desc = ''
                  LET g_xmdl_d[l_ac].xmdl032 = ''
                  LET g_xmdl_d[l_ac].xmdl032_desc = ''
               END IF
            END IF 
            LET g_xmdl_d_o.xmdl030 = g_xmdl_d[l_ac].xmdl030                                                                                                
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl030
            #add-point:BEFORE FIELD xmdl030 name="input.b.page1.xmdl030"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl030
            #add-point:ON CHANGE xmdl030 name="input.g.page1.xmdl030"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl031
            
            #add-point:AFTER FIELD xmdl031 name="input.a.page1.xmdl031"
            CALL s_desc_get_wbs_desc(g_xmdl_d[l_ac].xmdl030,g_xmdl_d[l_ac].xmdl031) RETURNING g_xmdl_d[l_ac].xmdl031_desc
            DISPLAY BY NAME g_xmdl_d[l_ac].xmdl031_desc
            
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl031) THEN 
#應用 a17 樣板自動產生(Version:2)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmdl_d[l_ac].xmdl030
               LET g_chkparam.arg2 = g_xmdl_d[l_ac].xmdl031
                  
               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_pjbb002") THEN
                  #檢查失敗時後續處理
                  LET g_xmdl_d[l_ac].xmdl031 = g_xmdl_d_t.xmdl031
                  CALL s_desc_get_wbs_desc(g_xmdl_d[l_ac].xmdl030,g_xmdl_d[l_ac].xmdl031) RETURNING g_xmdl_d[l_ac].xmdl031_desc
                  DISPLAY BY NAME g_xmdl_d[l_ac].xmdl031_desc
                  NEXT FIELD CURRENT
               END IF

            END IF                                                                                                
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl031
            #add-point:BEFORE FIELD xmdl031 name="input.b.page1.xmdl031"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl031
            #add-point:ON CHANGE xmdl031 name="input.g.page1.xmdl031"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl032
            
            #add-point:AFTER FIELD xmdl032 name="input.a.page1.xmdl032"
            CALL s_desc_get_activity_desc(g_xmdl_d[l_ac].xmdl030,g_xmdl_d[l_ac].xmdl032) RETURNING g_xmdl_d[l_ac].xmdl032_desc
            DISPLAY BY NAME g_xmdl_d[l_ac].xmdl032_desc
            
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl032) THEN 
#應用 a17 樣板自動產生(Version:2)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmdl_d[l_ac].xmdl030
               LET g_chkparam.arg2 = g_xmdl_d[l_ac].xmdl032
                  
               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_pjbm002") THEN
                  #檢查失敗時後續處理
                  LET g_xmdl_d[l_ac].xmdl032 = g_xmdl_d_t.xmdl032
                  CALL s_desc_get_activity_desc(g_xmdl_d[l_ac].xmdl030,g_xmdl_d[l_ac].xmdl032) RETURNING g_xmdl_d[l_ac].xmdl032_desc
                  DISPLAY BY NAME g_xmdl_d[l_ac].xmdl032_desc
                  NEXT FIELD CURRENT
               END IF
            END IF                                                                                                
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl032
            #add-point:BEFORE FIELD xmdl032 name="input.b.page1.xmdl032"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl032
            #add-point:ON CHANGE xmdl032 name="input.g.page1.xmdl032"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl051
            #add-point:BEFORE FIELD xmdl051 name="input.b.page1.xmdl051"
                                                                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl051
            
            #add-point:AFTER FIELD xmdl051 name="input.a.page1.xmdl051"
                                                                                                            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl051
            #add-point:ON CHANGE xmdl051 name="input.g.page1.xmdl051"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl035
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdl_d[l_ac].xmdl035,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xmdl035
            END IF 
 
 
 
            #add-point:AFTER FIELD xmdl035 name="input.a.page1.xmdl035"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl035
            #add-point:BEFORE FIELD xmdl035 name="input.b.page1.xmdl035"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl035
            #add-point:ON CHANGE xmdl035 name="input.g.page1.xmdl035"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl036
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdl_d[l_ac].xmdl036,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xmdl036
            END IF 
 
 
 
            #add-point:AFTER FIELD xmdl036 name="input.a.page1.xmdl036"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl036
            #add-point:BEFORE FIELD xmdl036 name="input.b.page1.xmdl036"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl036
            #add-point:ON CHANGE xmdl036 name="input.g.page1.xmdl036"
                                                                                                            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl037
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdl_d[l_ac].xmdl037,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xmdl037
            END IF 
 
 
 
            #add-point:AFTER FIELD xmdl037 name="input.a.page1.xmdl037"
                                                                                                            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl037
            #add-point:BEFORE FIELD xmdl037 name="input.b.page1.xmdl037"
                                                                                                            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl037
            #add-point:ON CHANGE xmdl037 name="input.g.page1.xmdl037"
                                                                                                            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl056
            #add-point:BEFORE FIELD xmdl056 name="input.b.page1.xmdl056"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl056
            
            #add-point:AFTER FIELD xmdl056 name="input.a.page1.xmdl056"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl056
            #add-point:ON CHANGE xmdl056 name="input.g.page1.xmdl056"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl088
            #add-point:BEFORE FIELD xmdl088 name="input.b.page1.xmdl088"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl088
            
            #add-point:AFTER FIELD xmdl088 name="input.a.page1.xmdl088"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl088
            #add-point:ON CHANGE xmdl088 name="input.g.page1.xmdl088"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdl034
            #add-point:BEFORE FIELD xmdl034 name="input.b.page1.xmdl034"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdl034
            
            #add-point:AFTER FIELD xmdl034 name="input.a.page1.xmdl034"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdl034
            #add-point:ON CHANGE xmdl034 name="input.g.page1.xmdl034"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD ooff013
            #add-point:BEFORE FIELD ooff013 name="input.b.page1.ooff013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD ooff013
            
            #add-point:AFTER FIELD ooff013 name="input.a.page1.ooff013"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE ooff013
            #add-point:ON CHANGE ooff013 name="input.g.page1.ooff013"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.xmdlsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdlsite
            #add-point:ON ACTION controlp INFIELD xmdlsite name="input.c.page1.xmdlsite"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdlseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdlseq
            #add-point:ON ACTION controlp INFIELD xmdlseq name="input.c.page1.xmdlseq"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl001
            #add-point:ON ACTION controlp INFIELD xmdl001 name="input.c.page1.xmdl001"
            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl001             #給予default值
            LET g_qryparam.default2 = g_xmdl_d[l_ac].xmdl002
            
            #單頭有輸入出通單號
            IF NOT cl_null(g_xmdk_m.xmdk005) THEN
               LET g_qryparam.where = "xmdgdocno = '",g_xmdk_m.xmdk005,"'"      #出通單號
            ELSE
			      LET g_qryparam.where = " xmdg005 = '",g_xmdk_m.xmdk007,"'",      #客戶編號
                                      " AND xmdg006 = '",g_xmdk_m.xmdk008,"'",  #收款客戶
                                      " AND xmdg007 = '",g_xmdk_m.xmdk009,"'",  #收貨客戶
                                      " AND xmdg202 = '",g_xmdk_m.xmdk202,"'",  #發票客戶
                                      " AND xmdg001 = '",g_xmdk_m.xmdk002,"'",  #出貨性質
                                      #" AND xmdg034 = '",g_xmdk_m.xmdk045,"'",  #多角性質
                                      " AND xmdg010 = '",g_xmdk_m.xmdk012,"'",  #稅別
                                      " AND xmdg014 = '",g_xmdk_m.xmdk016,"'",  #幣別
                                      " AND xmdg009 = '",g_xmdk_m.xmdk011,"'",  #交易條件
                                      " AND xmdg008 = '",g_xmdk_m.xmdk010,"'",  #收款條件
                                      " AND xmdg013 = '",g_xmdk_m.xmdk015,"'",  #發票類型
                                      " AND xmdg032 = '",g_xmdk_m.xmdk042,"'",  #內外銷
                                      " AND ((xmdg056 IS NULL AND xmdg054 = 'N') OR 
                                             (xmdg056 IS NOT NULL AND xmdg054 = 'Y'))",
                                      " AND COALESCE(xmdg056,' ') = COALESCE('",g_xmdk_m.xmdk044,"',' ')" #多角流程代碼
            END IF

            IF g_xmdk_m.xmdk028 = 'Y' THEN     #包裝單
               LET g_qryparam.where = g_qryparam.where," AND xmdg024 = 'N'"
            END IF
            
            IF g_xmdk_m.xmdk029 = 'Y' THEN     #Invoice
               LET g_qryparam.where = g_qryparam.where," AND xmdg025 = 'N'"
            END IF

            #組合過濾前後置單據資料SQL
            CALL s_aooi210_get_check_sql(g_site,'',g_xmdk_m.xmdkdocno,'4','','xmdgdocno') RETURNING l_success,l_where
            
            IF l_success THEN

               LET g_qryparam.where = g_qryparam.where," AND ",l_where

               CALL q_xmdhdocno_2()                                #呼叫開窗

               LET g_xmdl_d[l_ac].xmdl001 = g_qryparam.return1              #將開窗取得的值回傳到變數
               LET g_xmdl_d[l_ac].xmdl002 = g_qryparam.return2              #將開窗取得的值回傳到變數

               DISPLAY g_xmdl_d[l_ac].xmdl001 TO xmdl001              #顯示到畫面上
               DISPLAY g_xmdl_d[l_ac].xmdl002 TO xmdl002              #顯示到畫面上

            END IF

            NEXT FIELD xmdl001                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl002
            #add-point:ON ACTION controlp INFIELD xmdl002 name="input.c.page1.xmdl002"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl003
            #add-point:ON ACTION controlp INFIELD xmdl003 name="input.c.page1.xmdl003"
            #開窗i段            
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl001) AND cl_null(g_xmdl_d[l_ac].xmdl002) THEN #費用料號
		      	INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
			      LET g_qryparam.reqry = FALSE            
            
               LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl003
               
               LET g_qryparam.where = "xmdadocno IN (SELECT xmdh001 FROM xmdh_t",
                                      "               WHERE xmdhent = ",g_enterprise,
                                      "                 AND xmdhdocno = '",g_xmdl_d[l_ac].xmdl001,"')"
               
               #組合過濾前後置單據資料SQL
               CALL s_aooi210_get_check_sql(g_site,'',g_xmdk_m.xmdkdocno,'4','','xmdadocno') RETURNING l_success,l_where
               
               IF l_success THEN
                  LET g_qryparam.where = g_qryparam.where," AND ",l_where
                  CALL q_xmdadocno_8()                                #呼叫開窗
            
                  LET g_xmdl_d[l_ac].xmdl003 = g_qryparam.return1              #將開窗取得的值回傳到變數            
                  DISPLAY g_xmdl_d[l_ac].xmdl003 TO xmdl003              #顯示到畫面上               
               END IF
                        
            ELSE
		      	INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
			      LET g_qryparam.reqry = FALSE
            
               LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl003             #給予default值
               LET g_qryparam.default2 = g_xmdl_d[l_ac].xmdl004
               LET g_qryparam.default3 = g_xmdl_d[l_ac].xmdl005
               LET g_qryparam.default4 = g_xmdl_d[l_ac].xmdl006
            
               #單頭有輸入訂單號
               IF NOT cl_null(g_xmdk_m.xmdk006) THEN
                  LET g_qryparam.where = "xmdadocno = '",g_xmdk_m.xmdk006,"'"      #出通單號
               ELSE
   		   	   LET g_qryparam.where = " xmda004 = '",g_xmdk_m.xmdk007,"'",      #客戶編號
                                         " AND xmda021 = '",g_xmdk_m.xmdk008,"'",  #收款客戶
                                         " AND xmda022 = '",g_xmdk_m.xmdk009,"'",  #收貨客戶
                                         " AND xmda203 = '",g_xmdk_m.xmdk202,"'",  #發票客戶
                                         " AND xmda011 = '",g_xmdk_m.xmdk012,"'",  #稅別
                                         " AND xmda015 = '",g_xmdk_m.xmdk016,"'",  #幣別
                                         " AND xmda010 = '",g_xmdk_m.xmdk011,"'",  #交易條件
                                         " AND xmda009 = '",g_xmdk_m.xmdk010,"'",  #收款條件
                                         " AND xmda035 = '",g_xmdk_m.xmdk015,"'",  #發票類型
                                         " AND xmda005 = '",g_xmdk_m.xmdk002,"'",  #出貨類型
                                         #" AND xmda006 = '",g_xmdk_m.xmdk045,"'",  #多角類型
                                         " AND xmda048 = '",g_xmdk_m.xmdk042,"'",  #內外銷
                                         " AND xmda005 <> '5'",                    #不可為預先訂單
                                         " AND xmda045 <> 'Y'",                    #不可為物流結案
                                         " AND ((xmda050 IS NULL AND xmda030 = 'N') OR 
                                                (xmda050 IS NOT NULL AND xmda030 = 'Y'))",
                                         " AND COALESCE(xmda050,' ') = COALESCE('",g_xmdk_m.xmdk044,"',' ')" #多角流程代碼
               END IF
                              
               #組合過濾前後置單據資料SQL
               CALL s_aooi210_get_check_sql(g_site,'',g_xmdk_m.xmdkdocno,'4','','xmdadocno') RETURNING l_success,l_where
               
               IF l_success THEN
               
                  LET g_qryparam.where = g_qryparam.where," AND ",l_where
                  
                  CALL q_xmdddocno_2()                                #呼叫開窗
            
                  LET g_xmdl_d[l_ac].xmdl003 = g_qryparam.return1              #將開窗取得的值回傳到變數
                  LET g_xmdl_d[l_ac].xmdl004 = g_qryparam.return2
                  LET g_xmdl_d[l_ac].xmdl005 = g_qryparam.return3
                  LET g_xmdl_d[l_ac].xmdl006 = g_qryparam.return4
            
                  DISPLAY g_xmdl_d[l_ac].xmdl003 TO xmdl003              #顯示到畫面上
                  DISPLAY g_xmdl_d[l_ac].xmdl004 TO xmdl004
                  DISPLAY g_xmdl_d[l_ac].xmdl005 TO xmdl005
                  DISPLAY g_xmdl_d[l_ac].xmdl006 TO xmdl006
                  
               END IF
            END IF

            NEXT FIELD xmdl003                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl004
            #add-point:ON ACTION controlp INFIELD xmdl004 name="input.c.page1.xmdl004"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl005
            #add-point:ON ACTION controlp INFIELD xmdl005 name="input.c.page1.xmdl005"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl006
            #add-point:ON ACTION controlp INFIELD xmdl006 name="input.c.page1.xmdl006"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl007
            #add-point:ON ACTION controlp INFIELD xmdl007 name="input.c.page1.xmdl007"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl008
            #add-point:ON ACTION controlp INFIELD xmdl008 name="input.c.page1.xmdl008"
            #開窗i段                        
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            
            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl008             #給予default值
             
            CALL s_control_get_doc_sql('imaf001',g_xmdk_m.xmdkdocno,'4') RETURNING l_success,l_where
            IF l_success THEN
               LET g_qryparam.where = l_where
            END IF
            
            CALL s_control_get_doc_sql('imaf001',g_xmdk_m.xmdkdocno,'5') RETURNING l_success,l_where
            IF l_success THEN
               LET g_qryparam.where = g_qryparam.where," AND ",l_where
            END IF
            
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl003) AND cl_null(g_xmdl_d[l_ac].xmdl004) THEN #費用料號
               LET g_qryparam.where = g_qryparam.where,
                                      " AND imaf001 IN (SELECT xmds001 FROM xmds_t",
                                      "                  WHERE xmdsent = ",g_enterprise,
                                      "                    AND xmdsdocno = '",g_xmdl_d[l_ac].xmdl003,"')"
               CALL q_imaf001_17()                                #呼叫開窗
            ELSE
               
               IF NOT (cl_null(g_xmdl_d[l_ac].xmdl003) OR cl_null(g_xmdk_m.xmdk007) OR cl_null(g_xmdl_d[l_ac].xmdl009)) THEN   #170217-00017#1 20170217 add by beckxie
                  #170119-00008#5  2017/01/23 By 08171 --s add
                  INITIALIZE g_qryparam.* TO NULL
                  LET g_qryparam.state = 'i'
	   		      LET g_qryparam.reqry = FALSE
                  LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl008 #給予default值
                  LET g_qryparam.arg1 = g_xmdl_d[l_ac].xmdl003
                  LET g_qryparam.arg2 = g_xmdk_m.xmdk007
                  LET g_qryparam.arg3 = g_xmdl_d[l_ac].xmdl009
                  LET g_qryparam.where = "1=1 "
                  CALL q_imaf001_26()
                  #170119-00008#5  2017/01/23 By 08171 --e add
               ELSE   #170217-00017#1 20170217 add by beckxie
               #CALL q_imaf001_15()                                #呼叫開窗 #170119-00008#5  2017/01/23 By 08171 mark
                  CALL q_imaf001_15()   #170217-00017#1 20170217 add by beckxie
               END IF   #170217-00017#1 20170217 add by beckxie
            END IF
             
            LET g_xmdl_d[l_ac].xmdl008 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdl_d[l_ac].xmdl008 TO xmdl008              #顯示到畫面上

            CALL s_desc_get_item_desc(g_xmdl_d[l_ac].xmdl008) RETURNING g_xmdl_d[l_ac].xmdl008_desc,g_xmdl_d[l_ac].xmdl008_desc_desc
            
            NEXT FIELD xmdl008                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl009
            #add-point:ON ACTION controlp INFIELD xmdl009 name="input.c.page1.xmdl009"
            
            #開窗i段                                                                                                
            #必須先輸入料號            
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) THEN
            
               #取得產品特徵
               CALL s_axmt500_get_imaa005(g_enterprise,g_xmdl_d[l_ac].xmdl008) RETURNING l_imaa005

               IF NOT cl_null(l_imaa005) THEN
#                  IF l_cmd = 'u' OR (l_cmd = 'a' AND NOT cl_null(g_xmdl_d[l_ac].xmdl009)) THEN        #160314-00009#15 add
                     CALL s_feature_single(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,g_site,g_xmdk_m.xmdkdocno)
                     RETURNING l_success,g_xmdl_d[l_ac].xmdl009

                     DISPLAY BY NAME g_xmdl_d[l_ac].xmdl009             
#                  END IF                                                                              #160314-00009#15 add
                  
               ELSE   #無使用產品特徵
               
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'ain-00121'
                  LET g_errparam.extend = g_xmdl_d[l_ac].xmdl008
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

               END IF
               
            ELSE      #未輸入料號
            
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00229'
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

            END IF

            CALL s_feature_description(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,g_xmdl_d[l_ac].xmdl009_desc
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl009_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl009_desc
            #add-point:ON ACTION controlp INFIELD xmdl009_desc name="input.c.page1.xmdl009_desc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl033
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl033
            #add-point:ON ACTION controlp INFIELD xmdl033 name="input.c.page1.xmdl033"
            
            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl033             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_xmdk_m.xmdk007
            LET g_qryparam.arg2 = g_xmdl_d[l_ac].xmdl008
            LET g_qryparam.arg3 = g_xmdl_d[l_ac].xmdl009

            CALL q_pmao004_1()                                #呼叫開窗

            LET g_xmdl_d[l_ac].xmdl033 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdl_d[l_ac].xmdl033 TO xmdl033              #顯示到畫面上
            SELECT pmao009,pmao010
             INTO g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
             FROM pmao_t
            WHERE pmaoent = g_enterprise
              AND pmao001 = g_xmdk_m.xmdk007
              AND pmao002 = g_xmdl_d[l_ac].xmdl008
              AND pmao003 = g_xmdl_d[l_ac].xmdl009
              AND pmao004 = g_xmdl_d[l_ac].xmdl033                     
              AND pmao000 = '2' #161221-00064#17 add                     
            DISPLAY BY NAME g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
            NEXT FIELD xmdl033                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.page1.l_pmao009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_pmao009
            #add-point:ON ACTION controlp INFIELD l_pmao009 name="input.c.page1.l_pmao009"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.l_pmao010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_pmao010
            #add-point:ON ACTION controlp INFIELD l_pmao010 name="input.c.page1.l_pmao010"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl011
            #add-point:ON ACTION controlp INFIELD xmdl011 name="input.c.page1.xmdl011"
            
            #開窗i段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl011             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '221'

            CALL q_oocq002()                                #呼叫開窗

            LET g_xmdl_d[l_ac].xmdl011 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdl_d[l_ac].xmdl011 TO xmdl011              #顯示到畫面上

            CALL s_desc_get_acc_desc('221',g_xmdl_d[l_ac].xmdl011) RETURNING g_xmdl_d[l_ac].xmdl011_desc
            NEXT FIELD xmdl011                          #返回原欄位                                                                                          
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl012
            #add-point:ON ACTION controlp INFIELD xmdl012 name="input.c.page1.xmdl012"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl017
            #add-point:ON ACTION controlp INFIELD xmdl017 name="input.c.page1.xmdl017"
                                                                                                            
            #開窗i段
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
			   
			   LET g_qryparam.arg1 = g_xmdl_d[l_ac].xmdl008

            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl017             #給予default值
     
            CALL q_imao002()                                #呼叫開窗

            LET g_xmdl_d[l_ac].xmdl017 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdl_d[l_ac].xmdl017 TO xmdl017              #顯示到畫面上

            CALL s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl017) RETURNING g_xmdl_d[l_ac].xmdl017_desc
            
            NEXT FIELD xmdl017                          #返回原欄位                                                                                                  
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl018
            #add-point:ON ACTION controlp INFIELD xmdl018 name="input.c.page1.xmdl018"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl019
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl019
            #add-point:ON ACTION controlp INFIELD xmdl019 name="input.c.page1.xmdl019"
 
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl020
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl020
            #add-point:ON ACTION controlp INFIELD xmdl020 name="input.c.page1.xmdl020"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl010
            #add-point:ON ACTION controlp INFIELD xmdl010 name="input.c.page1.xmdl010"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl013
            #add-point:ON ACTION controlp INFIELD xmdl013 name="input.c.page1.xmdl013"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl014
            #add-point:ON ACTION controlp INFIELD xmdl014 name="input.c.page1.xmdl014"
            
            CALL axmt540_xmdl014_xmdl015_xmdl016_xmdl052_qry('1')
            NEXT FIELD xmdl014                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl015
            #add-point:ON ACTION controlp INFIELD xmdl015 name="input.c.page1.xmdl015"

            CALL axmt540_xmdl014_xmdl015_xmdl016_xmdl052_qry('2')
            NEXT FIELD xmdl015                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl016
            #add-point:ON ACTION controlp INFIELD xmdl016 name="input.c.page1.xmdl016"
            
            CALL axmt540_xmdl014_xmdl015_xmdl016_xmdl052_qry('3')
            NEXT FIELD xmdl016                          #返回原欄位
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl052
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl052
            #add-point:ON ACTION controlp INFIELD xmdl052 name="input.c.page1.xmdl052"

            CALL axmt540_xmdl014_xmdl015_xmdl016_xmdl052_qry('4')
            NEXT FIELD xmdl052                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl021
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl021
            #add-point:ON ACTION controlp INFIELD xmdl021 name="input.c.page1.xmdl021"
                                                                                                          
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl022
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl022
            #add-point:ON ACTION controlp INFIELD xmdl022 name="input.c.page1.xmdl022"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl050
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl050
            #add-point:ON ACTION controlp INFIELD xmdl050 name="input.c.page1.xmdl050"
            
            #此段落由子樣板a07產生            
            #開窗i段
            LET l_gzcb004 = ''
            #160705-00042#12 160715 by sakura mark(S)            
            #SELECT gzcb004
            #  INTO l_gzcb004
            #  FROM gzcb_t
            # WHERE gzcb001 = '24'
            #   AND gzcb002 = 'axmt540'   #出貨單、無訂單出貨共用
            #160705-00042#12 160715 by sakura mark(E)
            #160705-00042#12 160715 by sakura add(S)
            SELECT gzcb004
              INTO l_gzcb004
              FROM gzcb_t,gzzz_t 
             WHERE gzcb001 = '24' 
               AND gzcb002 = gzzz006 
               AND gzzz001 = g_prog
            #160705-00042#12 160715 by sakura add(E)               
                                   
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl050             #給予default值
            
            CALL s_control_get_doc_sql('oocq002',g_xmdk_m.xmdkdocno,'8') RETURNING l_success,l_where
            IF l_success THEN
               LET g_qryparam.where = l_where
            END IF            

            #給予arg
            LET g_qryparam.arg1 = l_gzcb004

            CALL q_oocq002()                                #呼叫開窗

            LET g_xmdl_d[l_ac].xmdl050 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdl_d[l_ac].xmdl050 TO xmdl050              #顯示到畫面上

            CALL axmt540_xmdl050_ref()
            NEXT FIELD xmdl050                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl050_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl050_desc
            #add-point:ON ACTION controlp INFIELD xmdl050_desc name="input.c.page1.xmdl050_desc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl023
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl023
            #add-point:ON ACTION controlp INFIELD xmdl023 name="input.c.page1.xmdl023"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl041
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl041
            #add-point:ON ACTION controlp INFIELD xmdl041 name="input.c.page1.xmdl041"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl030
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl030
            #add-point:ON ACTION controlp INFIELD xmdl030 name="input.c.page1.xmdl030"
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl030             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_pjba001()                                #呼叫開窗

            LET g_xmdl_d[l_ac].xmdl030 = g_qryparam.return1              

            DISPLAY g_xmdl_d[l_ac].xmdl030 TO xmdl030              #
            CALL s_desc_get_project_desc(g_xmdl_d[l_ac].xmdl030) RETURNING g_xmdl_d[l_ac].xmdl030_desc
            DISPLAY BY NAME g_xmdl_d[l_ac].xmdl030_desc

            NEXT FIELD xmdl030                          #返回原欄位
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl031
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl031
            #add-point:ON ACTION controlp INFIELD xmdl031 name="input.c.page1.xmdl031"
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl031             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_xmdl_d[l_ac].xmdl030 #s


            CALL q_pjbb002_1()                                #呼叫開窗

            LET g_xmdl_d[l_ac].xmdl031 = g_qryparam.return1              

            DISPLAY g_xmdl_d[l_ac].xmdl031 TO xmdl031              #
            CALL s_desc_get_wbs_desc(g_xmdl_d[l_ac].xmdl030,g_xmdl_d[l_ac].xmdl031) RETURNING g_xmdl_d[l_ac].xmdl031_desc
            DISPLAY BY NAME g_xmdl_d[l_ac].xmdl031_desc

            NEXT FIELD xmdl031                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl032
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl032
            #add-point:ON ACTION controlp INFIELD xmdl032 name="input.c.page1.xmdl032"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl032             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_xmdl_d[l_ac].xmdl030 #s


            CALL q_pjbm002()                                #呼叫開窗

            LET g_xmdl_d[l_ac].xmdl032 = g_qryparam.return1              

            DISPLAY g_xmdl_d[l_ac].xmdl032 TO xmdl032              #
            CALL s_desc_get_activity_desc(g_xmdl_d[l_ac].xmdl030,g_xmdl_d[l_ac].xmdl032) RETURNING g_xmdl_d[l_ac].xmdl032_desc
            DISPLAY BY NAME g_xmdl_d[l_ac].xmdl032_desc

            NEXT FIELD xmdl032                          #返回原欄位

                                                                                                           
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl051
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl051
            #add-point:ON ACTION controlp INFIELD xmdl051 name="input.c.page1.xmdl051"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl035
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl035
            #add-point:ON ACTION controlp INFIELD xmdl035 name="input.c.page1.xmdl035"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl036
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl036
            #add-point:ON ACTION controlp INFIELD xmdl036 name="input.c.page1.xmdl036"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl037
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl037
            #add-point:ON ACTION controlp INFIELD xmdl037 name="input.c.page1.xmdl037"
                                                                                                            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl056
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl056
            #add-point:ON ACTION controlp INFIELD xmdl056 name="input.c.page1.xmdl056"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl088
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl088
            #add-point:ON ACTION controlp INFIELD xmdl088 name="input.c.page1.xmdl088"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xmdl034
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdl034
            #add-point:ON ACTION controlp INFIELD xmdl034 name="input.c.page1.xmdl034"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.ooff013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD ooff013
            #add-point:ON ACTION controlp INFIELD ooff013 name="input.c.page1.ooff013"
            #161031-00025#26-s
            IF NOT cl_null(g_xmdk_m.xmdkdocno) AND l_ac > 0 THEN
               CALL aooi360_02('7',g_prog,g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,'','','','','','','','1')
               CALL s_aooi360_sel('7',g_prog,g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,'','','','','','','','1') RETURNING l_success,g_xmdl_d[l_ac].ooff013
               LET g_ooff001_d = '6'   #6.單據單頭備註
               LET g_ooff002_d = g_prog
               LET g_ooff003_d = g_xmdk_m.xmdkdocno   #单号
               LET g_ooff004_d = 0     #项次
               LET g_ooff005_d = ' '
               LET g_ooff006_d = ' '
               LET g_ooff007_d = ' '
               LET g_ooff008_d = ' '
               LET g_ooff009_d = ' '
               LET g_ooff010_d = ' '
               LET g_ooff011_d = ' '
               CALL aooi360_01_b_fill(g_ooff001_d,g_ooff002_d,g_ooff003_d,g_ooff004_d,g_ooff005_d,g_ooff006_d,g_ooff007_d,g_ooff008_d,g_ooff009_d,g_ooff010_d,g_ooff011_d)   #备注单身 
            END IF
            #161031-00025#26-e
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_xmdl_d[l_ac].* = g_xmdl_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE axmt540_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_xmdl_d[l_ac].xmdlseq 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_xmdl_d[l_ac].* = g_xmdl_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
              IF g_pmao_flag = 'Y' THEN
                  
                     #IF NOT s_axmt500_ins_pmao(g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk007,g_xmdl_d[l_ac].xmdl006,g_xmdl_d[l_ac].xmdl007,g_xmdl_d[l_ac].xmdl033,  #161226-00077#1 mark
                      IF NOT s_axmt500_ins_pmao(g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk007,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,g_xmdl_d[l_ac].xmdl033,  #161226-00077#1 add 
                                                g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010) THEN
                        LET g_xmdl_d[l_ac].xmdl033 = ''
                        LET g_xmdl_d[l_ac].l_pmao009 = ''
                        LET g_xmdl_d[l_ac].l_pmao010 = ''
                        DISPLAY BY NAME g_xmdl_d[l_ac].xmdl007,g_xmdl_d[l_ac].xmdl033,
                                                g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
                      END IF
                  
               END IF
              CALL axmt540_row_default()

               #稅額計算
               CALL s_axmt540_tax_count(g_xmdl_d_t.xmdlseq,g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,g_site,g_xmdl2_d[l_ac].xmdl025,
                                        g_xmdl_d[l_ac].xmdl022,g_xmdl2_d[l_ac].xmdl024,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,
                                        g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,g_xmdl_d[l_ac].xmdl018)
               RETURNING g_xmdl2_d[l_ac].xmdl027,g_xmdl2_d[l_ac].xmdl028,g_xmdl2_d[l_ac].xmdl029
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL axmt540_xmdl_t_mask_restore('restore_mask_o')
      
               UPDATE xmdl_t SET (xmdldocno,xmdlsite,xmdlseq,xmdl001,xmdl002,xmdl003,xmdl004,xmdl005, 
                   xmdl006,xmdl007,xmdl008,xmdl009,xmdl033,xmdl011,xmdl012,xmdl017,xmdl018,xmdl019,xmdl020, 
                   xmdl010,xmdl013,xmdl014,xmdl015,xmdl016,xmdl052,xmdl021,xmdl022,xmdl050,xmdl023,xmdl041, 
                   xmdl030,xmdl031,xmdl032,xmdl051,xmdl035,xmdl036,xmdl037,xmdl056,xmdl088,xmdl034,xmdl024, 
                   xmdl025,xmdl026,xmdl027,xmdl028,xmdl029,xmdl042,xmdl043,xmdl044,xmdl045,xmdl046,xmdl087) = (g_xmdk_m.xmdkdocno, 
                   g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdlseq,g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002, 
                   g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,g_xmdl_d[l_ac].xmdl005,g_xmdl_d[l_ac].xmdl006, 
                   g_xmdl_d[l_ac].xmdl007,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,g_xmdl_d[l_ac].xmdl033, 
                   g_xmdl_d[l_ac].xmdl011,g_xmdl_d[l_ac].xmdl012,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018, 
                   g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl020,g_xmdl_d[l_ac].xmdl010,g_xmdl_d[l_ac].xmdl013, 
                   g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,g_xmdl_d[l_ac].xmdl052, 
                   g_xmdl_d[l_ac].xmdl021,g_xmdl_d[l_ac].xmdl022,g_xmdl_d[l_ac].xmdl050,g_xmdl_d[l_ac].xmdl023, 
                   g_xmdl_d[l_ac].xmdl041,g_xmdl_d[l_ac].xmdl030,g_xmdl_d[l_ac].xmdl031,g_xmdl_d[l_ac].xmdl032, 
                   g_xmdl_d[l_ac].xmdl051,g_xmdl_d[l_ac].xmdl035,g_xmdl_d[l_ac].xmdl036,g_xmdl_d[l_ac].xmdl037, 
                   g_xmdl_d[l_ac].xmdl056,g_xmdl_d[l_ac].xmdl088,g_xmdl_d[l_ac].xmdl034,g_xmdl2_d[l_ac].xmdl024, 
                   g_xmdl2_d[l_ac].xmdl025,g_xmdl2_d[l_ac].xmdl026,g_xmdl2_d[l_ac].xmdl027,g_xmdl2_d[l_ac].xmdl028, 
                   g_xmdl2_d[l_ac].xmdl029,g_xmdl2_d[l_ac].xmdl042,g_xmdl2_d[l_ac].xmdl043,g_xmdl2_d[l_ac].xmdl044, 
                   g_xmdl2_d[l_ac].xmdl045,g_xmdl2_d[l_ac].xmdl046,g_xmdl2_d[l_ac].xmdl087)
                WHERE xmdlent = g_enterprise AND xmdldocno = g_xmdk_m.xmdkdocno 
 
                  AND xmdlseq = g_xmdl_d_t.xmdlseq #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
 
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_xmdl_d[l_ac].* = g_xmdl_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmdl_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_xmdl_d[l_ac].* = g_xmdl_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmdl_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmdk_m.xmdkdocno
               LET gs_keys_bak[1] = g_xmdkdocno_t
               LET gs_keys[2] = g_xmdl_d[g_detail_idx].xmdlseq
               LET gs_keys_bak[2] = g_xmdl_d_t.xmdlseq
               CALL axmt540_update_b('xmdl_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL axmt540_xmdl_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_xmdl_d[g_detail_idx].xmdlseq = g_xmdl_d_t.xmdlseq 
 
                  ) THEN
                  LET gs_keys[01] = g_xmdk_m.xmdkdocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_xmdl_d_t.xmdlseq
 
                  CALL axmt540_key_update_b(gs_keys,'xmdl_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_xmdk_m),util.JSON.stringify(g_xmdl_d_t)
               LET g_log2 = util.JSON.stringify(g_xmdk_m),util.JSON.stringify(g_xmdl_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               #新增多庫儲批
               CALL axmt540_01_xmdm_modify('1',l_xmdlseq_backup,g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,
                                           g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,g_xmdl_d[l_ac].xmdl011,g_xmdl_d[l_ac].xmdl012,
                                           g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,g_xmdl_d[l_ac].xmdl052,
                                           g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl020,
                                           '','') RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  LET g_xmdl_d[l_ac].* = g_xmdl_d_t.*
               END IF
               
               #重新計算整單的未稅、含稅總金額
               CALL axmt540_tax_recount(g_xmdk_m.xmdkdocno) RETURNING l_success                     
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  LET g_xmdl_d[l_ac].* = g_xmdl_d_t.*
               END IF
               #161031-00025#26-s
               CALL s_aooi360_del('7',g_prog,g_xmdk_m.xmdkdocno,g_xmdl_d_t.xmdlseq,'','','','','','','','1') RETURNING l_success
               IF NOT cl_null(g_xmdl_d[l_ac].ooff013) THEN
                  CALL s_aooi360_gen('7',g_prog,g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,'','','','','','','','1',g_xmdl_d[l_ac].ooff013) RETURNING l_success
               END IF
               #161031-00025#26-e
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
 
            #end add-point
            CALL axmt540_unlock_b("xmdl_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
            
            CALL axmt540_b_fill()
            
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_xmdl_d[li_reproduce_target].* = g_xmdl_d[li_reproduce].*
               LET g_xmdl2_d[li_reproduce_target].* = g_xmdl2_d[li_reproduce].*
 
               LET g_xmdl_d[li_reproduce_target].xmdlseq = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_xmdl_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_xmdl_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      DISPLAY ARRAY g_xmdl2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL axmt540_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail2")
            LET g_detail_idx = l_ac
            
            #add-point:page2, before row動作 name="input.body2.before_row"
            
            #單身Action隱藏
            CALL axmt540_detail_action_hidden(l_ac)
            
            #FROMONLY顯示           
            CALL axmt540_xmdl_display()
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail2")
            CALL axmt540_idx_chk()
            LET g_current_page = 2
      
         #add-point:page2自定義行為 name="input.body2.action"
         
         #end add-point
      
      END DISPLAY
      DISPLAY ARRAY g_xmdl3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL axmt540_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail3")
            LET g_detail_idx = l_ac
            
            #add-point:page3, before row動作 name="input.body3.before_row"
                                                                                                            
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue(""))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail3")
            CALL axmt540_idx_chk()
            LET g_current_page = 3
      
         #add-point:page3自定義行為 name="input.body3.action"
            CALL axmt540_show()
         #end add-point
      
      END DISPLAY
 
 
 
{</section>}
 
{<section id="axmt540.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      SUBDIALOG aoo_aooi360_01.aooi360_01_input   #备注单身  #161031-00025#26 add                                                        
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         #161031-00025#26-s
         #為了修改功能doubleClick可以直接進入單身, 需指定要進入哪一個單身
         IF NOT cl_null(p_cmd) AND p_cmd != 'a' THEN
            CASE g_aw
               WHEN "s_detail1_aooi360_01"
                  NEXT FIELD ooff012     
            END CASE
         END IF
         #161031-00025#26-e
         #add by lixiang 2015/11/20---begin----
         IF g_flag THEN
            LET g_flag = FALSE
            NEXT FIELD xmdlseq
         END IF  
         #add by lixiang 2015/11/20---end----         
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1','2',"))      
         CALL DIALOG.setCurrentRow("s_detail2",g_idx_group.getValue("'3',"))
         CALL DIALOG.setCurrentRow("s_detail3",g_idx_group.getValue(""))
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            
            #end add-point  
            NEXT FIELD xmdkdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xmdlsite
               WHEN "s_detail2"
                  NEXT FIELD xmdlseq_2
               WHEN "s_detail3"
                  NEXT FIELD xmdmsite
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         CALL axmt540_b_fill()   #160901-00052#1
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   #add by lixiang 2015/11/20---begin----
   IF g_flag THEN
      CALL axmt540_input('u')
   END IF  
   #add by lixiang 2015/11/20---end----
   #end add-point    
 
END FUNCTION
 
{</section>}
 
{<section id="axmt540.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION axmt540_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   DEFINE l_success LIKE type_t.num5
   DEFINE l_pmak003  LIKE pmak_t.pmak003   #一次性交易對象全名   #161207-00033#30 add
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   LET g_xmdk_m_o.* = g_xmdk_m.*      #保存單頭舊值                        
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL axmt540_b_fill() #單身填充
      CALL axmt540_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL axmt540_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
   
   CALL axmt540_xmdk021_ref()
   
   CALL s_aooi200_get_slip_desc(g_xmdk_m.xmdkdocno) RETURNING g_xmdk_m.xmdkdocno_desc
   DISPLAY BY NAME g_xmdk_m.xmdkdocno_desc
   
   CALL axmt540_location_ref(g_xmdk_m.xmdk022,g_xmdk_m.xmdk023) RETURNING g_xmdk_m.xmdk023_desc
   DISPLAY BY NAME g_xmdk_m.xmdk023_desc
   
   CALL axmt540_location_ref(g_xmdk_m.xmdk022,g_xmdk_m.xmdk024) RETURNING g_xmdk_m.xmdk024_desc
   DISPLAY BY NAME g_xmdk_m.xmdk024_desc
   
   CALL s_desc_get_tax_desc1(g_site,g_xmdk_m.xmdk012) RETURNING g_xmdk_m.xmdk012_desc
   DISPLAY BY NAME g_xmdk_m.xmdk012_desc          

   CALL s_desc_get_invoice_type_desc1(g_site,g_xmdk_m.xmdk015) RETURNING g_xmdk_m.xmdk015_desc
   DISPLAY BY NAME g_xmdk_m.xmdk015_desc
   
   #add--160531-00047#1 By shiun--(S)
   LET g_pmaa004 = ''
   SELECT pmaa004 INTO g_pmaa004 FROM pmaa_t WHERE pmaaent = g_enterprise AND pmaa001 = g_xmdk_m.xmdk007
   IF g_pmaa004 MATCHES '[24]' THEN
#      CALL axmt540_xmdk047_ref(g_xmdk_m.xmdk047) RETURNING g_xmdk_m.xmdk007_desc   #161207-00033#30   mark
      CALL axmt540_xmdk047_ref(g_xmdk_m.xmdk047,'') RETURNING g_xmdk_m.xmdk007_desc   #161207-00033#30   mod
   ELSE
      CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk007) RETURNING g_xmdk_m.xmdk007_desc
   END IF
   DISPLAY BY NAME g_xmdk_m.xmdk007_desc
   #add--160531-00047#1 By shiun--(E)
   CALL s_desc_get_currency_desc(g_xmdk_m.xmdk016) RETURNING g_xmdk_m.xmdk016_desc           #160901-00040#1
   CALL axmt540_get_xmdk037(g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk037) RETURNING g_xmdk_m.xmdk037   #160912-00035#1 add   
   #end add-point
   
   #遮罩相關處理
   LET g_xmdk_m_mask_o.* =  g_xmdk_m.*
   CALL axmt540_xmdk_t_mask()
   LET g_xmdk_m_mask_n.* =  g_xmdk_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xmdk_m.xmdk000,g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocno_desc,g_xmdk_m.xmdkdocdt, 
       g_xmdk_m.xmdk001,g_xmdk_m.xmdk003,g_xmdk_m.xmdk003_desc,g_xmdk_m.xmdk004,g_xmdk_m.xmdk004_desc, 
       g_xmdk_m.xmdkstus,g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk007,g_xmdk_m.xmdk007_desc,g_xmdk_m.xmdk009, 
       g_xmdk_m.xmdk009_desc,g_xmdk_m.xmdk008,g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk202,g_xmdk_m.xmdk202_desc, 
       g_xmdk_m.xmdk047,g_xmdk_m.xmdk002,g_xmdk_m.xmdk045,g_xmdk_m.xmdk032,g_xmdk_m.xmdk030,g_xmdk_m.xmdk030_desc, 
       g_xmdk_m.xmdk028,g_xmdk_m.xmdk029,g_xmdk_m.xmdk037,g_xmdk_m.xmdk034,g_xmdk_m.xmdk034_desc,g_xmdk_m.xmdk054, 
       g_xmdk_m.xmdk039,g_xmdk_m.xmdk039_desc,g_xmdk_m.xmdk040,g_xmdk_m.xmdk040_desc,g_xmdk_m.xmdk087, 
       g_xmdk_m.xmdk021,g_xmdk_m.xmdk021_desc,g_xmdk_m.address,g_xmdk_m.xmdk022,g_xmdk_m.xmdk022_desc, 
       g_xmdk_m.xmdk023,g_xmdk_m.xmdk023_desc,g_xmdk_m.xmdk024,g_xmdk_m.xmdk024_desc,g_xmdk_m.xmdk020, 
       g_xmdk_m.xmdk020_desc,g_xmdk_m.xmdk025,g_xmdk_m.xmdk026,g_xmdk_m.xmdk027,g_xmdk_m.xmdk027_desc, 
       g_xmdk_m.xmdk038,g_xmdk_m.xmdk038_desc,g_xmdk_m.xmdk055,g_xmdk_m.xmdk010,g_xmdk_m.xmdk010_desc, 
       g_xmdk_m.xmdk011,g_xmdk_m.xmdk011_desc,g_xmdk_m.xmdk012,g_xmdk_m.xmdk012_desc,g_xmdk_m.xmdk013, 
       g_xmdk_m.xmdk014,g_xmdk_m.xmdk015,g_xmdk_m.xmdk015_desc,g_xmdk_m.xmdk016,g_xmdk_m.xmdk016_desc, 
       g_xmdk_m.xmdk017,g_xmdk_m.xmdk018,g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdk019,g_xmdk_m.xmdk019_desc, 
       g_xmdk_m.xmdk042,g_xmdk_m.xmdk043,g_xmdk_m.xmdk031,g_xmdk_m.xmdk031_desc,g_xmdk_m.xmdk033,g_xmdk_m.xmdk033_desc, 
       g_xmdk_m.xmdk044,g_xmdk_m.xmdk035,g_xmdk_m.xmdk046,g_xmdk_m.xmdk036,g_xmdk_m.xmdk083,g_xmdk_m.xmdkownid, 
       g_xmdk_m.xmdkownid_desc,g_xmdk_m.xmdkowndp,g_xmdk_m.xmdkowndp_desc,g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtid_desc, 
       g_xmdk_m.xmdkcrtdp,g_xmdk_m.xmdkcrtdp_desc,g_xmdk_m.xmdkcrtdt,g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmodid_desc, 
       g_xmdk_m.xmdkmoddt,g_xmdk_m.xmdkcnfid,g_xmdk_m.xmdkcnfid_desc,g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid, 
       g_xmdk_m.xmdkpstid_desc,g_xmdk_m.xmdkpstdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_xmdk_m.xmdkstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "UH"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unhold.png")
         WHEN "H"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/hold.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_xmdl_d.getLength()
      #add-point:show段單身reference name="show.body.reference"

#150123改至b_fill
#      CALL axmt540_xmdl050_ref()   #理由碼
#      
#      #產品特徵
#      CALL s_feature_description(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,g_xmdl_d[l_ac].xmdl009_desc
#      DISPLAY BY NAME g_xmdl_d[l_ac].xmdl009_desc
#
#      #150120新增"客戶訂單號碼"  earl(s)
#      SELECT xmda033 INTO g_xmdl_d[l_ac].xmda033
#        FROM xmda_t
#       WHERE xmdaent = g_enterprise
#         AND xmdadocno = g_xmdl_d[l_ac].xmdl003
#      #150120新增"客戶訂單號碼"  earl(e)

      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_xmdl2_d.getLength()
      #add-point:show段單身reference name="show.body2.reference"

#150123改至b_fill
#      CALL s_desc_get_tax_desc1(g_site,g_xmdl2_d[l_ac].xmdl025) RETURNING g_xmdl2_d[l_ac].xmdl025_desc
#      DISPLAY BY NAME g_xmdl2_d[l_ac].xmdl025_desc
#      
#      CALL axmt540_xmdl_display()

      #end add-point
   END FOR
   FOR l_ac = 1 TO g_xmdl3_d.getLength()
      #add-point:show段單身reference name="show.body3.reference"
      
#150123改至b_fill
#      #產品特徵
#      CALL s_feature_description(g_xmdl3_d[l_ac].xmdm001,g_xmdl3_d[l_ac].xmdm002) RETURNING l_success,g_xmdl3_d[l_ac].xmdm002_desc
#      DISPLAY BY NAME g_xmdl3_d[l_ac].xmdm002_desc
      
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other name="show.other"
                             
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL axmt540_detail_show()
 
   #add-point:show段之後 name="show.after"
   IF g_xmdl_d.getLength() > 0 THEN
      IF cl_null(g_xmdl_d[g_xmdl_d.getLength()].xmdlseq) THEN
         CALL g_xmdl_d.deleteElement(g_xmdl_d.getLength())
      END IF
   END IF
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="axmt540.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION axmt540_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
                           
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
                           
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
                           
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="axmt540.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION axmt540_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   
   #end add-point   
   DEFINE l_newno     LIKE xmdk_t.xmdkdocno 
   DEFINE l_oldno     LIKE xmdk_t.xmdkdocno 
 
   DEFINE l_master    RECORD LIKE xmdk_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE xmdl_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE xmdm_t.* #此變數樣板目前無使用
 
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   DEFINE l_num       LIKE xmdl_t.xmdl018
   DEFINE l_num1      LIKE xmdl_t.xmdl018
   DEFINE l_success   LIKE type_t.num5
   DEFINE l_xmdlseq   LIKE xmdl_t.xmdlseq
   DEFINE l_xmdl001   LIKE xmdl_t.xmdl001
   DEFINE l_xmdl002   LIKE xmdl_t.xmdl002
   DEFINE l_xmdl003   LIKE xmdl_t.xmdl003
   DEFINE l_xmdl004   LIKE xmdl_t.xmdl004
   DEFINE l_xmdl005   LIKE xmdl_t.xmdl005
   DEFINE l_xmdl006   LIKE xmdl_t.xmdl006
   DEFINE l_xmdl018   LIKE xmdl_t.xmdl018

   DEFINE l_xmdm005   LIKE xmdm_t.xmdm005
   DEFINE l_xmdm006   LIKE xmdm_t.xmdm006
   DEFINE l_xmdm007   LIKE xmdm_t.xmdm007
   DEFINE l_xmdm033   LIKE xmdm_t.xmdm033
   DEFINE l_xmdm009   LIKE xmdm_t.xmdm009
   
   DEFINE l_xmdh011   LIKE xmdh_t.xmdh011
   DEFINE l_xmdh012   LIKE xmdh_t.xmdh012
   DEFINE l_xmdh013   LIKE xmdh_t.xmdh013
   DEFINE l_xmdh014   LIKE xmdh_t.xmdh014
   DEFINE l_xmdh029   LIKE xmdh_t.xmdh029
   DEFINE l_xmdc032   LIKE xmdc_t.xmdc032   #160219-00003#1 add
   DEFINE l_pmdp023   LIKE pmdp_t.pmdp023   #160219-00003#1 add   

   LET g_sql = "SELECT xmdlseq,xmdl001,xmdl002,xmdl003,xmdl004,xmdl005,xmdl006,xmdl018",
               "  FROM xmdl_t",
               " WHERE xmdlent = '",g_enterprise,"'",
               "   AND xmdldocno = '",g_xmdk_m.xmdkdocno,"'"
   PREPARE axmt540_repro FROM g_sql
   DECLARE axmt540_repro_cs CURSOR FOR axmt540_repro

   LET g_sql = "SELECT xmdm005,xmdm006,xmdm007,xmdm033,xmdm009",
               "  FROM xmdm_t",
               " WHERE xmdment = '",g_enterprise,"'",
               "   AND xmdmdocno = '",g_xmdk_m.xmdkdocno,"'",
               "   AND xmdmseq = ?"
   PREPARE axmt540_repro01 FROM g_sql
   DECLARE axmt540_repro_cs01 CURSOR FOR axmt540_repro01

   LET l_success = TRUE
   LET g_errno = ''
   FOREACH axmt540_repro_cs INTO l_xmdlseq,l_xmdl001,l_xmdl002,l_xmdl003,l_xmdl004,l_xmdl005,l_xmdl006,l_xmdl018
   
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'FOREACH'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET l_success = FALSE
         EXIT FOREACH
      END IF
      
      LET l_num = 0
      LET l_num1 = 0
      
      IF NOT cl_null(l_xmdl001) THEN        #出通單
      
         #檢核不可大於(xmdh016-xmdh030-已登打出貨單未確認的數量)
         CALL s_axmt540_get_max_ship_qty(1,'','',l_xmdl001,l_xmdl002,'','') RETURNING l_num,l_num1
         IF l_num1 < l_xmdl018 THEN
            INITIALIZE g_errparam TO NULL
            #160623-00014#1-mod-(S)
#            CASE g_prog
#               WHEN 'axmt542'
#                  LET g_errparam.code = 'axm-00589'  #出貨量不可大於"申請出通數量" - "已轉出貨數量" - "已登打出貨單未確認的出貨量"！
#               OTHERWISE
#                  LET g_errparam.code = 'axm-00189'  #出貨量不可大於"申請出通數量" - "已轉出貨數量" - "已登打出貨單未確認的出貨量"！
#            END CASE
            CASE 
               WHEN g_prog MATCHES 'axmt542'
                  LET g_errparam.code = 'axm-00589'  #出貨量不可大於"申請出通數量" - "已轉出貨數量" - "已登打出貨單未確認的出貨量"！
               OTHERWISE
                  LET g_errparam.code = 'axm-00189'  #出貨量不可大於"申請出通數量" - "已轉出貨數量" - "已登打出貨單未確認的出貨量"！
            END CASE
            #160623-00014#1-mod-(E)
            LET g_errparam.extend = ''
            LET g_errparam.popup = TRUE
            CALL cl_err()

            LET l_success = FALSE
            EXIT FOREACH
         END IF

         #檢查是否存在來源出通單
         LET l_xmdh011 = 'N'  #多庫儲批
         LET l_xmdh012 = ''  #庫位
         LET l_xmdh013 = ''  #儲位
         LET l_xmdh014 = ''  #批號
         LET l_xmdh029 = ''  #庫存管理特徵
         CALL s_axmt540_source_define(g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004)
         RETURNING l_xmdh011,l_xmdh012,l_xmdh013,l_xmdh014,l_xmdh029
         
         #出通單若有做多庫儲批，檢查是否超出多庫儲批數量
         IF l_xmdh011 = 'Y' THEN

            #檢查是否超出出通單的多庫儲批
            OPEN axmt540_repro_cs01 USING l_xmdlseq
            FOREACH axmt540_repro_cs01 INTO l_xmdm005,l_xmdm006,l_xmdm007,l_xmdm033,l_xmdm009
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = 'FOREACH'
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
             
                  LET l_success = FALSE
                  EXIT FOREACH
               END IF
              
               CALL s_axmt540_get_max_ship_qty1('','',
                                                l_xmdm005,l_xmdm006,l_xmdm007,l_xmdm033,
                                                l_xmdl001,l_xmdl002) RETURNING l_num
      
               IF l_num < l_xmdm009 THEN
                  INITIALIZE g_errparam TO NULL
                  #160623-00014#1-mod-(S)
#                  CASE g_prog
#                     WHEN 'axmt542'
#                        LET g_errparam.code = 'axm-00589'  #出貨量不可大於"申請出通數量" - "已轉出貨數量" - "已登打出貨單未確認的出貨量"！
#                     OTHERWISE
#                        LET g_errparam.code = 'axm-00189'    #出貨量不可大於"申請出通數量" - "已轉出貨數量" - "已登打出貨單未確認的出貨量"！
#                  END CASE 
                  CASE 
                     WHEN g_prog MATCHES 'axmt542'
                        LET g_errparam.code = 'axm-00589'  #出貨量不可大於"申請出通數量" - "已轉出貨數量" - "已登打出貨單未確認的出貨量"！
                     OTHERWISE
                        LET g_errparam.code = 'axm-00189'    #出貨量不可大於"申請出通數量" - "已轉出貨數量" - "已登打出貨單未確認的出貨量"！
                  END CASE 
                  
                  #160623-00014#1-mod-(E)
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
            
                  LET l_success = FALSE
                  EXIT FOREACH
               END IF
                                                
            END FOREACH
            
            IF NOT l_success THEN
               EXIT FOREACH
            END IF
            
         END IF

      ELSE      
         IF NOT cl_null(l_xmdl003) THEN    #訂單
            #檢核不可大於(xmdd006-xmdd014-已登打出貨未過帳的出貨量+xmdd016+xmdd034)
            CALL s_axmt540_get_max_ship_qty(2,'','',l_xmdl003,l_xmdl004,l_xmdl005,l_xmdl006) RETURNING l_num,l_num1
            IF l_num1 < l_xmdl018 THEN         
               INITIALIZE g_errparam TO NULL
               #--160219-00003#1--add--(S)
               CALL s_axmt540_get_xmdc032(l_xmdl003,l_xmdl004,l_xmdl005,l_xmdl006)
                 RETURNING l_xmdc032,l_pmdp023
               IF l_xmdc032 = '3' THEN
                  LET g_errparam.code = 'axm-00753'   #訂單單身取貨方式為「供應商直送」，出通/出貨數量不足採購單已確認之需求量
               ELSE                
               #--160219-00003#1--add--(E)               
                  #160623-00014#1-mod-(S)
#                  CASE g_prog
#                     WHEN 'axmt542'
#                        LET g_errparam.code = 'axm-00590'  #出貨量不可大於"分批訂購數量"-"已出貨量"-"已登打出貨單未確認的出貨量"！
#                     OTHERWISE
#                        LET g_errparam.code = 'axm-00190'  #出貨量不可大於"分批訂購數量"-"已出貨量"-"已登打出貨單未確認的出貨量"！
#                  END CASE
                  CASE 
                     WHEN g_prog MATCHES 'axmt542'
                        LET g_errparam.code = 'axm-00590'  #出貨量不可大於"分批訂購數量"-"已出貨量"-"已登打出貨單未確認的出貨量"！
                     OTHERWISE
                        LET g_errparam.code = 'axm-00190'  #出貨量不可大於"分批訂購數量"-"已出貨量"-"已登打出貨單未確認的出貨量"！
                  END CASE
                  #160623-00014#1-mod-(E)
               END IF               
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET l_success = FALSE
               EXIT FOREACH
            END IF                                    
         END IF
      END IF

   END FOREACH
   
   FREE axmt540_repro
   CLOSE axmt540_repro_cs 
   FREE axmt540_repro01
   CLOSE axmt540_repro_cs01   
   
   IF NOT l_success THEN
      RETURN
   END IF
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_xmdk_m.xmdkdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_xmdkdocno_t = g_xmdk_m.xmdkdocno
 
    
   LET g_xmdk_m.xmdkdocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_xmdk_m.xmdkownid = g_user
      LET g_xmdk_m.xmdkowndp = g_dept
      LET g_xmdk_m.xmdkcrtid = g_user
      LET g_xmdk_m.xmdkcrtdp = g_dept 
      LET g_xmdk_m.xmdkcrtdt = cl_get_current()
      LET g_xmdk_m.xmdkmodid = g_user
      LET g_xmdk_m.xmdkmoddt = cl_get_current()
      LET g_xmdk_m.xmdkstus = 'N'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   
   LET g_xmdk_m.xmdkstus = 'N'
   LET g_xmdk_m.xmdkdocdt = g_today
   LET g_xmdk_m.xmdk001 = g_today
   LET g_xmdk_m.xmdk003 = g_user
   LET g_xmdk_m.xmdk004 = g_dept
   LET g_xmdk_m.xmdkpstid = ''
   LET g_xmdk_m.xmdkpstdt = ''
   LET g_xmdk_m.xmdkcnfid = ''
   LET g_xmdk_m.xmdkcnfdt = ''
   
   LET g_xmdk_m.xmdk028 = 'N'   #包裝單
   LET g_xmdk_m.xmdk029 = 'N'   #Invoice
   LET g_xmdk_m.xmdk037 = ''    #160912-00035#1
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_xmdk_m.xmdkstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "UH"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unhold.png")
         WHEN "H"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/hold.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
      LET g_xmdk_m.xmdkdocno_desc = ''
   DISPLAY BY NAME g_xmdk_m.xmdkdocno_desc
 
   
   CALL axmt540_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_xmdk_m.* TO NULL
      INITIALIZE g_xmdl_d TO NULL
      INITIALIZE g_xmdl2_d TO NULL
      INITIALIZE g_xmdl3_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      
      #end add-point
      CALL axmt540_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code = 9001 
      LET g_errparam.popup = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axmt540_set_act_visible()   
   CALL axmt540_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_xmdkdocno_t = g_xmdk_m.xmdkdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " xmdkent = " ||g_enterprise|| " AND",
                      " xmdkdocno = '", g_xmdk_m.xmdkdocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axmt540_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
                           
   #end add-point
   
   CALL axmt540_idx_chk()
   
   LET g_data_owner = g_xmdk_m.xmdkownid      
   LET g_data_dept  = g_xmdk_m.xmdkowndp
   
   #功能已完成,通報訊息中心
   CALL axmt540_msgcentre_notify('reproduce')
 
END FUNCTION
 
{</section>}
 
{<section id="axmt540.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION axmt540_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE xmdl_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE xmdm_t.* #此變數樣板目前無使用
 
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   DEFINE l_success  LIKE type_t.num5
   DEFINE l_xmdldocno  LIKE xmdl_t.xmdldocno
   DEFINE l_xmdlseq    LIKE xmdl_t.xmdlseq
   DEFINE l_xmdl001    LIKE xmdl_t.xmdl001
   DEFINE l_xmdl003    LIKE xmdl_t.xmdl003
   DEFINE l_xmdl018    LIKE xmdl_t.xmdl018
   DEFINE l_xmdl023    LIKE xmdl_t.xmdl023
   DEFINE l_xmdl056    LIKE xmdl_t.xmdl056
   DEFINE l_slip     LIKE ooba_t.ooba002
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE axmt540_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
                           
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xmdl_t
    WHERE xmdlent = g_enterprise AND xmdldocno = g_xmdkdocno_t
 
    INTO TEMP axmt540_detail
 
   #將key修正為調整後   
   UPDATE axmt540_detail 
      #更新key欄位
      SET xmdldocno = g_xmdk_m.xmdkdocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
 
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO xmdl_t SELECT * FROM axmt540_detail
   
   IF SQLCA.SQLCODE THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
 
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmt540_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
  #LET g_sql = "SELECT xmdhdocno,xmdhseq,xmdh001,xmdh016,xmdh022",
   LET g_sql = "SELECT xmdldocno,xmdlseq,xmdl001,xmdl003,xmdl018,xmdl023",
               "  FROM xmdl_t",
               " WHERE xmdlent = ",g_enterprise,
               "   AND xmdldocno = '",g_xmdk_m.xmdkdocno,"'"
   PREPARE axmt540_rep_xmdl_pre FROM g_sql
   DECLARE axmt540_rep_xmdl_cs CURSOR FOR axmt540_rep_xmdl_pre

   LET l_success = TRUE
   LET l_xmdldocno = ''
   LET l_xmdlseq   = ''
   LET l_xmdl001   = ''
   LET l_xmdl003   = ''
   LET l_xmdl018   = ''
   LET l_xmdl023   = ''
   
   FOREACH axmt540_rep_xmdl_cs INTO l_xmdldocno,l_xmdlseq,l_xmdl001,l_xmdl003,l_xmdl018,l_xmdl023
      IF SQLCA.sqlcode THEN
        INITIALIZE g_errparam TO NULL 
        LET g_errparam.extend = "FOREACH axmt540_rep_xmdl_cs" 
        LET g_errparam.code   = SQLCA.sqlcode 
        LET g_errparam.popup  = TRUE 
        CALL cl_err()
        
        LET l_success = FALSE
        EXIT FOREACH
      END IF

      #預設檢驗合格量
      IF l_xmdl023 = 'N' THEN
         LET l_xmdl056 =  l_xmdl018
      ELSE
         IF NOT cl_null(l_xmdl001) AND NOT cl_null(l_xmdl003) THEN  #來源為出通單
            #單據別參數
            CALL s_aooi200_get_slip(l_xmdl003) RETURNING l_success,l_slip
            IF NOT l_success THEN
               EXIT FOREACH
            END IF

            IF cl_get_doc_para(g_enterprise,g_site,l_slip,'D-BAS-0094') = '2' THEN   #OQC檢驗時機為"2出貨時檢驗"
               LET l_xmdl056 = 0
            ELSE
               LET l_xmdl056 = l_xmdl018
            END IF
            
         ELSE   #訂單或無訂單出貨
            LET l_xmdl056 =  0
         END IF
      END IF

      UPDATE xmdl_t
         SET xmdl038 = 0,          #主帳套已立帳數量
             xmdl039 = 0,          #帳套二已立帳數量
             xmdl040 = 0,          #帳套三已立帳數量
             xmdl047 = 0,          #已開發票數量
             xmdl053 = 0,          #主帳套暫估數量
             xmdl054 = 0,          #帳套二暫估數量
             xmdl055 = 0,          #帳套三暫估數量
             xmdl056 = l_xmdl056   #檢驗合格量
       WHERE xmdlent = g_enterprise
         AND xmdldocno = l_xmdldocno
         AND xmdlseq = l_xmdlseq
         
      IF SQLCA.sqlcode THEN
        INITIALIZE g_errparam TO NULL 
        LET g_errparam.extend = "UPDATE xmdl_t" 
        LET g_errparam.code   = SQLCA.sqlcode 
        LET g_errparam.popup  = TRUE 
        CALL cl_err()
        
        LET l_success = FALSE
        EXIT FOREACH
      END IF
         
   END FOREACH
   
   IF NOT l_success THEN
      RETURN
   END IF

   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table2.b_insert"
                           
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xmdm_t 
    WHERE xmdment = g_enterprise AND xmdmdocno = g_xmdkdocno_t
 
    INTO TEMP axmt540_detail
 
   #將key修正為調整後   
   UPDATE axmt540_detail SET xmdmdocno = g_xmdk_m.xmdkdocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table2.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO xmdm_t SELECT * FROM axmt540_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table2.m_insert"
                           
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axmt540_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table2.a_insert"
                           
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_xmdkdocno_t = g_xmdk_m.xmdkdocno
 
   
END FUNCTION
 
{</section>}
 
{<section id="axmt540.delete" >}
#+ 資料刪除
PRIVATE FUNCTION axmt540_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   DEFINE  l_success       LIKE type_t.num5
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_xmdk_m.xmdkdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN axmt540_cl USING g_enterprise,g_xmdk_m.xmdkdocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axmt540_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE axmt540_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axmt540_master_referesh USING g_xmdk_m.xmdkdocno INTO g_xmdk_m.xmdk000,g_xmdk_m.xmdksite, 
       g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001,g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdkstus, 
       g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk007,g_xmdk_m.xmdk009,g_xmdk_m.xmdk008,g_xmdk_m.xmdk202, 
       g_xmdk_m.xmdk047,g_xmdk_m.xmdk002,g_xmdk_m.xmdk045,g_xmdk_m.xmdk032,g_xmdk_m.xmdk030,g_xmdk_m.xmdk028, 
       g_xmdk_m.xmdk029,g_xmdk_m.xmdk037,g_xmdk_m.xmdk034,g_xmdk_m.xmdk054,g_xmdk_m.xmdk039,g_xmdk_m.xmdk040, 
       g_xmdk_m.xmdk087,g_xmdk_m.xmdk021,g_xmdk_m.xmdk022,g_xmdk_m.xmdk023,g_xmdk_m.xmdk024,g_xmdk_m.xmdk020, 
       g_xmdk_m.xmdk025,g_xmdk_m.xmdk026,g_xmdk_m.xmdk027,g_xmdk_m.xmdk038,g_xmdk_m.xmdk055,g_xmdk_m.xmdk010, 
       g_xmdk_m.xmdk011,g_xmdk_m.xmdk012,g_xmdk_m.xmdk013,g_xmdk_m.xmdk014,g_xmdk_m.xmdk015,g_xmdk_m.xmdk016, 
       g_xmdk_m.xmdk017,g_xmdk_m.xmdk018,g_xmdk_m.xmdk019,g_xmdk_m.xmdk042,g_xmdk_m.xmdk043,g_xmdk_m.xmdk031, 
       g_xmdk_m.xmdk033,g_xmdk_m.xmdk044,g_xmdk_m.xmdk035,g_xmdk_m.xmdk046,g_xmdk_m.xmdk036,g_xmdk_m.xmdk083, 
       g_xmdk_m.xmdkownid,g_xmdk_m.xmdkowndp,g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtdp,g_xmdk_m.xmdkcrtdt, 
       g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmoddt,g_xmdk_m.xmdkcnfid,g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid, 
       g_xmdk_m.xmdkpstdt,g_xmdk_m.xmdk003_desc,g_xmdk_m.xmdk004_desc,g_xmdk_m.xmdk007_desc,g_xmdk_m.xmdk009_desc, 
       g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk202_desc,g_xmdk_m.xmdk030_desc,g_xmdk_m.xmdk034_desc,g_xmdk_m.xmdk039_desc, 
       g_xmdk_m.xmdk040_desc,g_xmdk_m.xmdk022_desc,g_xmdk_m.xmdk020_desc,g_xmdk_m.xmdk027_desc,g_xmdk_m.xmdk038_desc, 
       g_xmdk_m.xmdk010_desc,g_xmdk_m.xmdk011_desc,g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdk019_desc,g_xmdk_m.xmdkownid_desc, 
       g_xmdk_m.xmdkowndp_desc,g_xmdk_m.xmdkcrtid_desc,g_xmdk_m.xmdkcrtdp_desc,g_xmdk_m.xmdkmodid_desc, 
       g_xmdk_m.xmdkcnfid_desc,g_xmdk_m.xmdkpstid_desc
   
   
   #檢查是否允許此動作
   IF NOT axmt540_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_xmdk_m_mask_o.* =  g_xmdk_m.*
   CALL axmt540_xmdk_t_mask()
   LET g_xmdk_m_mask_n.* =  g_xmdk_m.*
   
   CALL axmt540_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
                                                      
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL axmt540_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_xmdkdocno_t = g_xmdk_m.xmdkdocno
 
 
      DELETE FROM xmdk_t
       WHERE xmdkent = g_enterprise AND xmdkdocno = g_xmdk_m.xmdkdocno
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
                                                      
      #end add-point
       
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_xmdk_m.xmdkdocno,":",SQLERRMESSAGE  
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"

      IF NOT s_aooi200_del_docno(g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF

      #刪除稅額xrcd
      CALL s_axmt540_tax_delete(g_xmdk_m.xmdkdocno,'','1') RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF

      #刪除備註
      #161031-00025#26-s mark
#      CALL s_aooi360_del('6',g_prog,g_xmdk_m.xmdkdocno,'','','','','','','','','4') RETURNING l_success
#      IF NOT l_success THEN
#         CALL s_transaction_end('N','0')
#         RETURN
#      END IF
      #161031-00025#26-e mark
      #161031-00025#26-s
      #单头的aooi360_01的备注单身资料同步删除
      DELETE FROM ooff_t
       WHERE ooffent = g_enterprise AND ooff001 IN ('6','7')
         AND ooff002 = g_prog AND ooff003 = g_xmdk_m.xmdkdocno
         
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_xmdk_m.xmdkdocno,":",SQLERRMESSAGE  
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF   
      CALL aooi360_01_clear_detail()   #清除备注单身  
      #161031-00025#26-e 
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
                                                      
      #end add-point
      
      DELETE FROM xmdl_t
       WHERE xmdlent = g_enterprise AND xmdldocno = g_xmdk_m.xmdkdocno
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
                                                      
      #end add-point
         
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdl_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
                                                      
      #end add-point
      
            
                                                               
      #add-point:單身刪除前 name="delete.body.b_delete2"
                                                      
      #end add-point
      DELETE FROM xmdm_t
       WHERE xmdment = g_enterprise AND
             xmdmdocno = g_xmdk_m.xmdkdocno
      #add-point:單身刪除中 name="delete.body.m_delete2"
                                                      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdl_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete2"
      #150821-xianghui-b
      CALL s_axmt540_update_inao(g_xmdk_m.xmdkdocno,'','','','','0','1') RETURNING l_success
      DELETE FROM inao_t
         WHERE inaoent = g_enterprise AND inaosite = g_site AND inaodocno = g_xmdk_m.xmdkdocno
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "inao_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()
 
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
      CALL s_lot_clear_detail()
      #150821-xianghui-e   

      #end add-point
 
 
 
 
      
      #修改歷程記錄(刪除)
      LET g_log1 = util.JSON.stringify(g_xmdk_m)   #(ver:78)
      IF NOT cl_log_modified_record(g_log1,'') THEN    #(ver:78)
         CLOSE axmt540_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_xmdl_d.clear() 
      CALL g_xmdl2_d.clear()       
      CALL g_xmdl3_d.clear()       
 
     
      CALL axmt540_ui_browser_refresh()  
      #CALL axmt540_ui_headershow()  
      #CALL axmt540_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL axmt540_browser_fill("")
         CALL axmt540_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE axmt540_cl
 
   #功能已完成,通報訊息中心
   CALL axmt540_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="axmt540.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION axmt540_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   DEFINE l_success  LIKE type_t.num5
   DEFINE l_sql      STRING    #161205-00025#10 161219 by lori add
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #清空第一階單身
   CALL g_xmdl_d.clear()
   CALL g_xmdl2_d.clear()
   CALL g_xmdl3_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   #161205-00025#10 161219 by lori add---(S)
   LET l_sql = "SELECT xmda033 ",
               "  FROM xmda_t ",
               " WHERE xmdaent = ",g_enterprise,
               "   AND xmdadocno = ? "
   PREPARE axmt540_sel_xmda033 FROM l_sql

   LET l_sql = "SELECT pmao009,pmao010 ",
               "  FROM pmao_t ",
               "  WHERE pmaoent = ",g_enterprise,
               "    AND pmao000 = '2'",   #161221-00064#17 add                     
               "    AND pmao001 = '",g_xmdk_m.xmdk007,"' ",
               "    AND pmao002 = ? ",
               "    AND pmao003 = ? ",
               "    AND pmao004 = ? "
   PREPARE axmt540_sel_pmao FROM l_sql   
   #161205-00025#10 161219 by lori add---(E)
   #end add-point
   
   #判斷是否填充
   IF axmt540_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT xmdlsite,xmdlseq,xmdl001,xmdl002,xmdl003,xmdl004,xmdl005,xmdl006, 
             xmdl007,xmdl008,xmdl009,xmdl033,xmdl011,xmdl012,xmdl017,xmdl018,xmdl019,xmdl020,xmdl010, 
             xmdl013,xmdl014,xmdl015,xmdl016,xmdl052,xmdl021,xmdl022,xmdl050,xmdl023,xmdl041,xmdl030, 
             xmdl031,xmdl032,xmdl051,xmdl035,xmdl036,xmdl037,xmdl056,xmdl088,xmdl034,xmdlseq,xmdl024, 
             xmdl025,xmdl026,xmdl027,xmdl028,xmdl029,xmdl042,xmdl043,xmdl044,xmdl045,xmdl046,xmdl087 , 
             t1.imaal003 ,t2.imaal004 ,t3.oocql004 ,t4.oocal003 ,t5.oocal003 ,t6.inayl003 ,t7.inab003 , 
             t8.oocal003 ,t9.pjbal003 ,t10.pjbbl004 ,t11.pjbml004 FROM xmdl_t",   
                     " INNER JOIN xmdk_t ON xmdkent = " ||g_enterprise|| " AND xmdkdocno = xmdldocno ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
 
                                    " LEFT JOIN imaal_t t1 ON t1.imaalent="||g_enterprise||" AND t1.imaal001=xmdl008 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t2 ON t2.imaalent="||g_enterprise||" AND t2.imaal001=xmdl008 AND t2.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t3 ON t3.oocqlent="||g_enterprise||" AND t3.oocql001='221' AND t3.oocql002=xmdl011 AND t3.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t4 ON t4.oocalent="||g_enterprise||" AND t4.oocal001=xmdl017 AND t4.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t5 ON t5.oocalent="||g_enterprise||" AND t5.oocal001=xmdl019 AND t5.oocal002='"||g_dlang||"' ",
               " LEFT JOIN inayl_t t6 ON t6.inaylent="||g_enterprise||" AND t6.inayl001=xmdl014 AND t6.inayl002='"||g_dlang||"' ",
               " LEFT JOIN inab_t t7 ON t7.inabent="||g_enterprise||" AND t7.inabsite=xmdlsite AND t7.inab001=xmdl014 AND t7.inab002=xmdl015  ",
               " LEFT JOIN oocal_t t8 ON t8.oocalent="||g_enterprise||" AND t8.oocal001=xmdl021 AND t8.oocal002='"||g_dlang||"' ",
               " LEFT JOIN pjbal_t t9 ON t9.pjbalent="||g_enterprise||" AND t9.pjbal001=xmdl030 AND t9.pjbal002='"||g_dlang||"' ",
               " LEFT JOIN pjbbl_t t10 ON t10.pjbblent="||g_enterprise||" AND t10.pjbbl001=xmdl030 AND t10.pjbbl002=xmdl031 AND t10.pjbbl003='"||g_dlang||"' ",
               " LEFT JOIN pjbml_t t11 ON t11.pjbmlent="||g_enterprise||" AND t11.pjbml001=xmdl030 AND t11.pjbml002=xmdl032 AND t11.pjbml003='"||g_dlang||"' ",
 
                     " WHERE xmdlent=? AND xmdldocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         #161031-00025#26-s
         LET g_sql = "SELECT  DISTINCT xmdlsite,xmdlseq,xmdl001,xmdl002,xmdl003,xmdl004,xmdl005,xmdl006, 
             xmdl007,xmdl008,xmdl009,xmdl033,xmdl011,xmdl012,xmdl017,xmdl018,xmdl019,xmdl020,xmdl010, 
             xmdl013,xmdl014,xmdl015,xmdl016,xmdl052,xmdl021,xmdl022,xmdl050,xmdl023,xmdl041,xmdl030, 
             xmdl031,xmdl032,xmdl051,xmdl035,xmdl036,xmdl037,xmdl056,xmdl088,xmdl034,xmdlseq,xmdl024, 
             xmdl025,xmdl026,xmdl027,xmdl028,xmdl029,xmdl042,xmdl043,xmdl044,xmdl045,xmdl046,xmdl087 , 
             t1.imaal003 ,t2.imaal004 ,t3.oocql004 ,t4.oocal003 ,t5.oocal003 ,t6.inayl003 ,t7.inab003 , 
             t8.oocal003 ,t9.pjbal003 ,t10.pjbbl004 ,t11.pjbml004 FROM xmdl_t",   
                     " INNER JOIN xmdk_t ON xmdkent = " ||g_enterprise|| " AND xmdkdocno = xmdldocno ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
 
                                    " LEFT JOIN imaal_t t1 ON t1.imaalent="||g_enterprise||" AND t1.imaal001=xmdl008 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t2 ON t2.imaalent="||g_enterprise||" AND t2.imaal001=xmdl008 AND t2.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t3 ON t3.oocqlent="||g_enterprise||" AND t3.oocql001='221' AND t3.oocql002=xmdl011 AND t3.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t4 ON t4.oocalent="||g_enterprise||" AND t4.oocal001=xmdl017 AND t4.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t5 ON t5.oocalent="||g_enterprise||" AND t5.oocal001=xmdl019 AND t5.oocal002='"||g_dlang||"' ",
               " LEFT JOIN inayl_t t6 ON t6.inaylent="||g_enterprise||" AND t6.inayl001=xmdl014 AND t6.inayl002='"||g_dlang||"' ",
               " LEFT JOIN inab_t t7 ON t7.inabent="||g_enterprise||" AND t7.inabsite=xmdlsite AND t7.inab001=xmdl014 AND t7.inab002=xmdl015  ",
               " LEFT JOIN oocal_t t8 ON t8.oocalent="||g_enterprise||" AND t8.oocal001=xmdl021 AND t8.oocal002='"||g_dlang||"' ",
               " LEFT JOIN pjbal_t t9 ON t9.pjbalent="||g_enterprise||" AND t9.pjbal001=xmdl030 AND t9.pjbal002='"||g_dlang||"' ",
               " LEFT JOIN pjbbl_t t10 ON t10.pjbblent="||g_enterprise||" AND t10.pjbbl001=xmdl030 AND t10.pjbbl002=xmdl031 AND t10.pjbbl003='"||g_dlang||"' ",
               " LEFT JOIN pjbml_t t11 ON t11.pjbmlent="||g_enterprise||" AND t11.pjbml001=xmdl030 AND t11.pjbml002=xmdl032 AND t11.pjbml003='"||g_dlang||"' ",
               " LEFT JOIN ooff_t  ON ooffent="||g_enterprise||" AND ooff002 = '",g_prog,"' AND ooff003 = xmdldocno AND ooff004 = xmdlseq ",  
                     " WHERE xmdlent=? AND xmdldocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料  
         #161031-00025#26-e         
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xmdl_t.xmdlseq"
         
         #add-point:單身填充控制 name="b_fill.sql"
                                                      
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axmt540_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR axmt540_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
   #  OPEN b_fill_cs USING g_enterprise,g_xmdk_m.xmdkdocno   #(ver:78)
                                               
      FOREACH b_fill_cs USING g_enterprise,g_xmdk_m.xmdkdocno INTO g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdlseq, 
          g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004, 
          g_xmdl_d[l_ac].xmdl005,g_xmdl_d[l_ac].xmdl006,g_xmdl_d[l_ac].xmdl007,g_xmdl_d[l_ac].xmdl008, 
          g_xmdl_d[l_ac].xmdl009,g_xmdl_d[l_ac].xmdl033,g_xmdl_d[l_ac].xmdl011,g_xmdl_d[l_ac].xmdl012, 
          g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl020, 
          g_xmdl_d[l_ac].xmdl010,g_xmdl_d[l_ac].xmdl013,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015, 
          g_xmdl_d[l_ac].xmdl016,g_xmdl_d[l_ac].xmdl052,g_xmdl_d[l_ac].xmdl021,g_xmdl_d[l_ac].xmdl022, 
          g_xmdl_d[l_ac].xmdl050,g_xmdl_d[l_ac].xmdl023,g_xmdl_d[l_ac].xmdl041,g_xmdl_d[l_ac].xmdl030, 
          g_xmdl_d[l_ac].xmdl031,g_xmdl_d[l_ac].xmdl032,g_xmdl_d[l_ac].xmdl051,g_xmdl_d[l_ac].xmdl035, 
          g_xmdl_d[l_ac].xmdl036,g_xmdl_d[l_ac].xmdl037,g_xmdl_d[l_ac].xmdl056,g_xmdl_d[l_ac].xmdl088, 
          g_xmdl_d[l_ac].xmdl034,g_xmdl2_d[l_ac].xmdlseq,g_xmdl2_d[l_ac].xmdl024,g_xmdl2_d[l_ac].xmdl025, 
          g_xmdl2_d[l_ac].xmdl026,g_xmdl2_d[l_ac].xmdl027,g_xmdl2_d[l_ac].xmdl028,g_xmdl2_d[l_ac].xmdl029, 
          g_xmdl2_d[l_ac].xmdl042,g_xmdl2_d[l_ac].xmdl043,g_xmdl2_d[l_ac].xmdl044,g_xmdl2_d[l_ac].xmdl045, 
          g_xmdl2_d[l_ac].xmdl046,g_xmdl2_d[l_ac].xmdl087,g_xmdl_d[l_ac].xmdl008_desc,g_xmdl_d[l_ac].xmdl008_desc_desc, 
          g_xmdl_d[l_ac].xmdl011_desc,g_xmdl_d[l_ac].xmdl017_desc,g_xmdl_d[l_ac].xmdl019_desc,g_xmdl_d[l_ac].xmdl014_desc, 
          g_xmdl_d[l_ac].xmdl015_desc,g_xmdl_d[l_ac].xmdl021_desc,g_xmdl_d[l_ac].xmdl030_desc,g_xmdl_d[l_ac].xmdl031_desc, 
          g_xmdl_d[l_ac].xmdl032_desc   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
      
         CALL axmt540_xmdl050_ref()   #理由碼
      
         #產品特徵
         CALL s_feature_description(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,g_xmdl_d[l_ac].xmdl009_desc

        #161205-00025#10 161219 by lori mod---(S)
        ##150120新增"客戶訂單號碼"  earl(s)
        #SELECT xmda033 INTO g_xmdl_d[l_ac].xmda033
        #  FROM xmda_t
        # WHERE xmdaent = g_enterprise
        #   AND xmdadocno = g_xmdl_d[l_ac].xmdl003
        ##150120新增"客戶訂單號碼"  earl(e)
          EXECUTE axmt540_sel_xmda033 USING g_xmdl_d[l_ac].xmdl003
                                      INTO g_xmdl_d[l_ac].xmda033
        #161205-00025#10 161219 by lori mod---(E)
        
         CALL s_desc_get_tax_desc1(g_site,g_xmdl2_d[l_ac].xmdl025) RETURNING g_xmdl2_d[l_ac].xmdl025_desc
        #161205-00025#10 161219 by lori mark---(S) 
        ##add by lixiang 2015/06/18--s--
        #CALL s_desc_get_project_desc(g_xmdl_d[l_ac].xmdl030) RETURNING g_xmdl_d[l_ac].xmdl030_desc
        #DISPLAY BY NAME g_xmdl_d[l_ac].xmdl030_desc
        #
        #CALL s_desc_get_wbs_desc(g_xmdl_d[l_ac].xmdl030,g_xmdl_d[l_ac].xmdl031) RETURNING g_xmdl_d[l_ac].xmdl031_desc
        #DISPLAY BY NAME g_xmdl_d[l_ac].xmdl031_desc
        #
        #CALL s_desc_get_activity_desc(g_xmdl_d[l_ac].xmdl030,g_xmdl_d[l_ac].xmdl032) RETURNING g_xmdl_d[l_ac].xmdl032_desc
        #DISPLAY BY NAME g_xmdl_d[l_ac].xmdl032_desc
        ##add by lixiang 2015/06/18--e--
        #161205-00025#10 161219 by lori mark---(E)  
         CALL axmt540_xmdl_display()
        #161205-00025#10 161219 by lori mod---(S) 
        #SELECT pmao009,pmao010
        #  INTO g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
        #  FROM pmao_t
        #  WHERE pmaoent = g_enterprise
        #    AND pmao001 = g_xmdk_m.xmdk007
        #    AND pmao002 = g_xmdl_d[l_ac].xmdl008
        #    AND pmao003 = g_xmdl_d[l_ac].xmdl009
        #    AND pmao004 = g_xmdl_d[l_ac].xmdl033                     
        #DISPLAY BY NAME g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
         EXECUTE axmt540_sel_pmao USING g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,g_xmdl_d[l_ac].xmdl033
                                  INTO g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010         
        #161205-00025#10 161219 by lori mod---(E) 
         #161031-00025#26-s
         CALL s_aooi360_sel('7',g_prog,g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,'','','','','','','','1') RETURNING l_success,g_xmdl_d[l_ac].ooff013
         #161031-00025#26-e
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code = 9035 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
   #判斷是否填充
   IF axmt540_fill_chk(2) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body2.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT xmdmsite,xmdmseq,xmdmseq1,xmdm001,xmdm002,xmdm003,xmdm004,xmdm005, 
             xmdm006,xmdm007,xmdm033,xmdm008,xmdm009,xmdm010,xmdm011,xmdm012,xmdm013,xmdm014 ,t12.imaal003 , 
             t13.imaal004 ,t14.inayl003 ,t15.inab003 ,t16.oocal003 ,t17.oocal003 FROM xmdm_t",   
                     " INNER JOIN  xmdk_t ON xmdkent = " ||g_enterprise|| " AND xmdkdocno = xmdmdocno ",
 
                     "",
                     
                                    " LEFT JOIN imaal_t t12 ON t12.imaalent="||g_enterprise||" AND t12.imaal001=xmdm001 AND t12.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t13 ON t13.imaalent="||g_enterprise||" AND t13.imaal001=xmdm001 AND t13.imaal002='"||g_dlang||"' ",
               " LEFT JOIN inayl_t t14 ON t14.inaylent="||g_enterprise||" AND t14.inayl001=xmdm005 AND t14.inayl002='"||g_dlang||"' ",
               " LEFT JOIN inab_t t15 ON t15.inabent="||g_enterprise||" AND t15.inabsite=xmdmsite AND t15.inab001=xmdm005 AND t15.inab002=xmdm006  ",
               " LEFT JOIN oocal_t t16 ON t16.oocalent="||g_enterprise||" AND t16.oocal001=xmdm008 AND t16.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t17 ON t17.oocalent="||g_enterprise||" AND t17.oocal001=xmdm010 AND t17.oocal002='"||g_dlang||"' ",
 
                     " WHERE xmdment=? AND xmdmdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body2.fill_sql"
         #161031-00025#26-s
         LET g_sql = "SELECT  DISTINCT xmdmsite,xmdmseq,xmdmseq1,xmdm001,xmdm002,xmdm003,xmdm004,xmdm005, 
             xmdm006,xmdm007,xmdm033,xmdm008,xmdm009,xmdm010,xmdm011,xmdm012,xmdm013,xmdm014 ,t12.imaal003 , 
             t13.imaal004 ,t14.inayl003 ,t15.inab003 ,t16.oocal003 ,t17.oocal003 FROM xmdm_t",   
                     " INNER JOIN  xmdk_t ON xmdkent = " ||g_enterprise|| " AND xmdkdocno = xmdmdocno ",
 
                     "",
                     
                                    " LEFT JOIN imaal_t t12 ON t12.imaalent="||g_enterprise||" AND t12.imaal001=xmdm001 AND t12.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t13 ON t13.imaalent="||g_enterprise||" AND t13.imaal001=xmdm001 AND t13.imaal002='"||g_dlang||"' ",
               " LEFT JOIN inayl_t t14 ON t14.inaylent="||g_enterprise||" AND t14.inayl001=xmdm005 AND t14.inayl002='"||g_dlang||"' ",
               " LEFT JOIN inab_t t15 ON t15.inabent="||g_enterprise||" AND t15.inabsite=xmdmsite AND t15.inab001=xmdm005 AND t15.inab002=xmdm006  ",
               " LEFT JOIN oocal_t t16 ON t16.oocalent="||g_enterprise||" AND t16.oocal001=xmdm008 AND t16.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t17 ON t17.oocalent="||g_enterprise||" AND t17.oocal001=xmdm010 AND t17.oocal002='"||g_dlang||"' ",
               " LEFT JOIN ooff_t  ON ooffent="||g_enterprise||" AND ooff002 = '",g_prog,"' AND ooff003 = xmdmdocno AND ooff004 = '0' ",   
                     " WHERE xmdment=? AND xmdmdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #161031-00025#26-e
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xmdm_t.xmdmseq,xmdm_t.xmdmseq1"
         
         #add-point:單身填充控制 name="b_fill.sql2"
                                                      
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axmt540_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR axmt540_pb2
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs2 USING g_enterprise,g_xmdk_m.xmdkdocno   #(ver:78)
                                               
      FOREACH b_fill_cs2 USING g_enterprise,g_xmdk_m.xmdkdocno INTO g_xmdl3_d[l_ac].xmdmsite,g_xmdl3_d[l_ac].xmdmseq, 
          g_xmdl3_d[l_ac].xmdmseq1,g_xmdl3_d[l_ac].xmdm001,g_xmdl3_d[l_ac].xmdm002,g_xmdl3_d[l_ac].xmdm003, 
          g_xmdl3_d[l_ac].xmdm004,g_xmdl3_d[l_ac].xmdm005,g_xmdl3_d[l_ac].xmdm006,g_xmdl3_d[l_ac].xmdm007, 
          g_xmdl3_d[l_ac].xmdm033,g_xmdl3_d[l_ac].xmdm008,g_xmdl3_d[l_ac].xmdm009,g_xmdl3_d[l_ac].xmdm010, 
          g_xmdl3_d[l_ac].xmdm011,g_xmdl3_d[l_ac].xmdm012,g_xmdl3_d[l_ac].xmdm013,g_xmdl3_d[l_ac].xmdm014, 
          g_xmdl3_d[l_ac].xmdm001_desc,g_xmdl3_d[l_ac].xmdm001_desc_desc,g_xmdl3_d[l_ac].xmdm005_desc, 
          g_xmdl3_d[l_ac].xmdm006_desc,g_xmdl3_d[l_ac].xmdm008_desc,g_xmdl3_d[l_ac].xmdm010_desc   #(ver:78) 
 
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill2.fill"
      
         #產品特徵
         CALL s_feature_description(g_xmdl3_d[l_ac].xmdm001,g_xmdl3_d[l_ac].xmdm002) RETURNING l_success,g_xmdl3_d[l_ac].xmdm002_desc
      
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   IF NOT cl_null(g_xmdk_m.xmdkdocno) THEN   #150918 earl add
      CALL s_lot_b_fill('1',g_site,'2',g_xmdk_m.xmdkdocno,'','','-1')                              
   END IF
   #161031-00025#26-s
   LET g_ooff001_d = '6'   #6.單據單頭備註
   LET g_ooff002_d = g_prog
   LET g_ooff003_d = g_xmdk_m.xmdkdocno   #单号
   LET g_ooff004_d = '0'     #项次
   LET g_ooff005_d = ' '
   LET g_ooff006_d = ' '
   LET g_ooff007_d = ' '
   LET g_ooff008_d = ' '
   LET g_ooff009_d = ' '
   LET g_ooff010_d = ' '
   LET g_ooff011_d = ' '
   CALL aooi360_01_b_fill(g_ooff001_d,g_ooff002_d,g_ooff003_d,g_ooff004_d,g_ooff005_d,g_ooff006_d,g_ooff007_d,g_ooff008_d,g_ooff009_d,g_ooff010_d,g_ooff011_d)   #备注单身 
   #161031-00025#26-e
   #end add-point
   
   CALL g_xmdl_d.deleteElement(g_xmdl_d.getLength())
   CALL g_xmdl2_d.deleteElement(g_xmdl2_d.getLength())
   CALL g_xmdl3_d.deleteElement(g_xmdl3_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE axmt540_pb
   FREE axmt540_pb2
 
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_xmdl_d.getLength()
      LET g_xmdl_d_mask_o[l_ac].* =  g_xmdl_d[l_ac].*
      CALL axmt540_xmdl_t_mask()
      LET g_xmdl_d_mask_n[l_ac].* =  g_xmdl_d[l_ac].*
   END FOR
   
   LET g_xmdl2_d_mask_o.* =  g_xmdl2_d.*
   FOR l_ac = 1 TO g_xmdl2_d.getLength()
      LET g_xmdl2_d_mask_o[l_ac].* =  g_xmdl2_d[l_ac].*
      CALL axmt540_xmdl_t_mask()
      LET g_xmdl2_d_mask_n[l_ac].* =  g_xmdl2_d[l_ac].*
   END FOR
   LET g_xmdl3_d_mask_o.* =  g_xmdl3_d.*
   FOR l_ac = 1 TO g_xmdl3_d.getLength()
      LET g_xmdl3_d_mask_o[l_ac].* =  g_xmdl3_d[l_ac].*
      CALL axmt540_xmdm_t_mask()
      LET g_xmdl3_d_mask_n[l_ac].* =  g_xmdl3_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
 
{</section>}
 
{<section id="axmt540.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION axmt540_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
                           
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
                                                      
      #end add-point    
      DELETE FROM xmdl_t
       WHERE xmdlent = g_enterprise AND
         xmdldocno = ps_keys_bak[1] AND xmdlseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
                                                      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_xmdl_d.deleteElement(li_idx) 
      END IF 
      IF ps_page <> "'2'" THEN 
         CALL g_xmdl2_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete2"
                                                      
      #end add-point    
      DELETE FROM xmdm_t
       WHERE xmdment = g_enterprise AND
             xmdmdocno = ps_keys_bak[1] AND xmdmseq = ps_keys_bak[2] AND xmdmseq1 = ps_keys_bak[3]
      #add-point:delete_b段刪除中 name="delete_b.m_delete2"
                                                      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdm_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_xmdl3_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete2"
                                                      
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other name="delete_b.other"
                           
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="axmt540.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION axmt540_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
 
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
                                                      
      #end add-point 
      INSERT INTO xmdl_t
                  (xmdlent,
                   xmdldocno,
                   xmdlseq
                   ,xmdlsite,xmdl001,xmdl002,xmdl003,xmdl004,xmdl005,xmdl006,xmdl007,xmdl008,xmdl009,xmdl033,xmdl011,xmdl012,xmdl017,xmdl018,xmdl019,xmdl020,xmdl010,xmdl013,xmdl014,xmdl015,xmdl016,xmdl052,xmdl021,xmdl022,xmdl050,xmdl023,xmdl041,xmdl030,xmdl031,xmdl032,xmdl051,xmdl035,xmdl036,xmdl037,xmdl056,xmdl088,xmdl034,xmdl024,xmdl025,xmdl026,xmdl027,xmdl028,xmdl029,xmdl042,xmdl043,xmdl044,xmdl045,xmdl046,xmdl087) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_xmdl_d[g_detail_idx].xmdlsite,g_xmdl_d[g_detail_idx].xmdl001,g_xmdl_d[g_detail_idx].xmdl002, 
                       g_xmdl_d[g_detail_idx].xmdl003,g_xmdl_d[g_detail_idx].xmdl004,g_xmdl_d[g_detail_idx].xmdl005, 
                       g_xmdl_d[g_detail_idx].xmdl006,g_xmdl_d[g_detail_idx].xmdl007,g_xmdl_d[g_detail_idx].xmdl008, 
                       g_xmdl_d[g_detail_idx].xmdl009,g_xmdl_d[g_detail_idx].xmdl033,g_xmdl_d[g_detail_idx].xmdl011, 
                       g_xmdl_d[g_detail_idx].xmdl012,g_xmdl_d[g_detail_idx].xmdl017,g_xmdl_d[g_detail_idx].xmdl018, 
                       g_xmdl_d[g_detail_idx].xmdl019,g_xmdl_d[g_detail_idx].xmdl020,g_xmdl_d[g_detail_idx].xmdl010, 
                       g_xmdl_d[g_detail_idx].xmdl013,g_xmdl_d[g_detail_idx].xmdl014,g_xmdl_d[g_detail_idx].xmdl015, 
                       g_xmdl_d[g_detail_idx].xmdl016,g_xmdl_d[g_detail_idx].xmdl052,g_xmdl_d[g_detail_idx].xmdl021, 
                       g_xmdl_d[g_detail_idx].xmdl022,g_xmdl_d[g_detail_idx].xmdl050,g_xmdl_d[g_detail_idx].xmdl023, 
                       g_xmdl_d[g_detail_idx].xmdl041,g_xmdl_d[g_detail_idx].xmdl030,g_xmdl_d[g_detail_idx].xmdl031, 
                       g_xmdl_d[g_detail_idx].xmdl032,g_xmdl_d[g_detail_idx].xmdl051,g_xmdl_d[g_detail_idx].xmdl035, 
                       g_xmdl_d[g_detail_idx].xmdl036,g_xmdl_d[g_detail_idx].xmdl037,g_xmdl_d[g_detail_idx].xmdl056, 
                       g_xmdl_d[g_detail_idx].xmdl088,g_xmdl_d[g_detail_idx].xmdl034,g_xmdl2_d[g_detail_idx].xmdl024, 
                       g_xmdl2_d[g_detail_idx].xmdl025,g_xmdl2_d[g_detail_idx].xmdl026,g_xmdl2_d[g_detail_idx].xmdl027, 
                       g_xmdl2_d[g_detail_idx].xmdl028,g_xmdl2_d[g_detail_idx].xmdl029,g_xmdl2_d[g_detail_idx].xmdl042, 
                       g_xmdl2_d[g_detail_idx].xmdl043,g_xmdl2_d[g_detail_idx].xmdl044,g_xmdl2_d[g_detail_idx].xmdl045, 
                       g_xmdl2_d[g_detail_idx].xmdl046,g_xmdl2_d[g_detail_idx].xmdl087)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
                                                      
      #end add-point 
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdl_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_xmdl_d.insertElement(li_idx) 
      END IF 
      IF ps_page <> "'2'" THEN 
         CALL g_xmdl2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
 
      #end add-point 
   END IF
   
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert2"
                                                      
      #end add-point 
      INSERT INTO xmdm_t
                  (xmdment,
                   xmdmdocno,
                   xmdmseq,xmdmseq1
                   ,xmdmsite,xmdm001,xmdm002,xmdm003,xmdm004,xmdm005,xmdm006,xmdm007,xmdm033,xmdm008,xmdm009,xmdm010,xmdm011,xmdm012,xmdm013,xmdm014) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_xmdl3_d[g_detail_idx].xmdmsite,g_xmdl3_d[g_detail_idx].xmdm001,g_xmdl3_d[g_detail_idx].xmdm002, 
                       g_xmdl3_d[g_detail_idx].xmdm003,g_xmdl3_d[g_detail_idx].xmdm004,g_xmdl3_d[g_detail_idx].xmdm005, 
                       g_xmdl3_d[g_detail_idx].xmdm006,g_xmdl3_d[g_detail_idx].xmdm007,g_xmdl3_d[g_detail_idx].xmdm033, 
                       g_xmdl3_d[g_detail_idx].xmdm008,g_xmdl3_d[g_detail_idx].xmdm009,g_xmdl3_d[g_detail_idx].xmdm010, 
                       g_xmdl3_d[g_detail_idx].xmdm011,g_xmdl3_d[g_detail_idx].xmdm012,g_xmdl3_d[g_detail_idx].xmdm013, 
                       g_xmdl3_d[g_detail_idx].xmdm014)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert2"
                                                      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdm_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_xmdl3_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert2"
                                                      
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other name="insert_b.other"
                           
   #end add-point     
   
END FUNCTION
 
{</section>}
 
{<section id="axmt540.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION axmt540_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
                           
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmdl_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
                                                      
      #end add-point 
      
      #將遮罩欄位還原
      CALL axmt540_xmdl_t_mask_restore('restore_mask_o')
               
      UPDATE xmdl_t 
         SET (xmdldocno,
              xmdlseq
              ,xmdlsite,xmdl001,xmdl002,xmdl003,xmdl004,xmdl005,xmdl006,xmdl007,xmdl008,xmdl009,xmdl033,xmdl011,xmdl012,xmdl017,xmdl018,xmdl019,xmdl020,xmdl010,xmdl013,xmdl014,xmdl015,xmdl016,xmdl052,xmdl021,xmdl022,xmdl050,xmdl023,xmdl041,xmdl030,xmdl031,xmdl032,xmdl051,xmdl035,xmdl036,xmdl037,xmdl056,xmdl088,xmdl034,xmdl024,xmdl025,xmdl026,xmdl027,xmdl028,xmdl029,xmdl042,xmdl043,xmdl044,xmdl045,xmdl046,xmdl087) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_xmdl_d[g_detail_idx].xmdlsite,g_xmdl_d[g_detail_idx].xmdl001,g_xmdl_d[g_detail_idx].xmdl002, 
                  g_xmdl_d[g_detail_idx].xmdl003,g_xmdl_d[g_detail_idx].xmdl004,g_xmdl_d[g_detail_idx].xmdl005, 
                  g_xmdl_d[g_detail_idx].xmdl006,g_xmdl_d[g_detail_idx].xmdl007,g_xmdl_d[g_detail_idx].xmdl008, 
                  g_xmdl_d[g_detail_idx].xmdl009,g_xmdl_d[g_detail_idx].xmdl033,g_xmdl_d[g_detail_idx].xmdl011, 
                  g_xmdl_d[g_detail_idx].xmdl012,g_xmdl_d[g_detail_idx].xmdl017,g_xmdl_d[g_detail_idx].xmdl018, 
                  g_xmdl_d[g_detail_idx].xmdl019,g_xmdl_d[g_detail_idx].xmdl020,g_xmdl_d[g_detail_idx].xmdl010, 
                  g_xmdl_d[g_detail_idx].xmdl013,g_xmdl_d[g_detail_idx].xmdl014,g_xmdl_d[g_detail_idx].xmdl015, 
                  g_xmdl_d[g_detail_idx].xmdl016,g_xmdl_d[g_detail_idx].xmdl052,g_xmdl_d[g_detail_idx].xmdl021, 
                  g_xmdl_d[g_detail_idx].xmdl022,g_xmdl_d[g_detail_idx].xmdl050,g_xmdl_d[g_detail_idx].xmdl023, 
                  g_xmdl_d[g_detail_idx].xmdl041,g_xmdl_d[g_detail_idx].xmdl030,g_xmdl_d[g_detail_idx].xmdl031, 
                  g_xmdl_d[g_detail_idx].xmdl032,g_xmdl_d[g_detail_idx].xmdl051,g_xmdl_d[g_detail_idx].xmdl035, 
                  g_xmdl_d[g_detail_idx].xmdl036,g_xmdl_d[g_detail_idx].xmdl037,g_xmdl_d[g_detail_idx].xmdl056, 
                  g_xmdl_d[g_detail_idx].xmdl088,g_xmdl_d[g_detail_idx].xmdl034,g_xmdl2_d[g_detail_idx].xmdl024, 
                  g_xmdl2_d[g_detail_idx].xmdl025,g_xmdl2_d[g_detail_idx].xmdl026,g_xmdl2_d[g_detail_idx].xmdl027, 
                  g_xmdl2_d[g_detail_idx].xmdl028,g_xmdl2_d[g_detail_idx].xmdl029,g_xmdl2_d[g_detail_idx].xmdl042, 
                  g_xmdl2_d[g_detail_idx].xmdl043,g_xmdl2_d[g_detail_idx].xmdl044,g_xmdl2_d[g_detail_idx].xmdl045, 
                  g_xmdl2_d[g_detail_idx].xmdl046,g_xmdl2_d[g_detail_idx].xmdl087) 
         WHERE xmdlent = g_enterprise AND xmdldocno = ps_keys_bak[1] AND xmdlseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update"
                                                      
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmdl_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmdl_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL axmt540_xmdl_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
                                                      
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmdm_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update2"
                                                      
      #end add-point  
      
      #將遮罩欄位還原
      CALL axmt540_xmdm_t_mask_restore('restore_mask_o')
               
      UPDATE xmdm_t 
         SET (xmdmdocno,
              xmdmseq,xmdmseq1
              ,xmdmsite,xmdm001,xmdm002,xmdm003,xmdm004,xmdm005,xmdm006,xmdm007,xmdm033,xmdm008,xmdm009,xmdm010,xmdm011,xmdm012,xmdm013,xmdm014) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_xmdl3_d[g_detail_idx].xmdmsite,g_xmdl3_d[g_detail_idx].xmdm001,g_xmdl3_d[g_detail_idx].xmdm002, 
                  g_xmdl3_d[g_detail_idx].xmdm003,g_xmdl3_d[g_detail_idx].xmdm004,g_xmdl3_d[g_detail_idx].xmdm005, 
                  g_xmdl3_d[g_detail_idx].xmdm006,g_xmdl3_d[g_detail_idx].xmdm007,g_xmdl3_d[g_detail_idx].xmdm033, 
                  g_xmdl3_d[g_detail_idx].xmdm008,g_xmdl3_d[g_detail_idx].xmdm009,g_xmdl3_d[g_detail_idx].xmdm010, 
                  g_xmdl3_d[g_detail_idx].xmdm011,g_xmdl3_d[g_detail_idx].xmdm012,g_xmdl3_d[g_detail_idx].xmdm013, 
                  g_xmdl3_d[g_detail_idx].xmdm014) 
         WHERE xmdment = g_enterprise AND xmdmdocno = ps_keys_bak[1] AND xmdmseq = ps_keys_bak[2] AND xmdmseq1 = ps_keys_bak[3]
      #add-point:update_b段修改中 name="update_b.m_update2"
                                                      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmdm_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmdm_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL axmt540_xmdm_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update2"
                                                      
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
 
   
 
   
   #add-point:update_b段other name="update_b.other"
                           
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axmt540.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION axmt540_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="axmt540.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION axmt540_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="axmt540.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION axmt540_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
                           
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
    
   #先刷新資料
   #CALL axmt540_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1','2',"
   #僅鎖定自身table
   LET ls_group = "xmdl_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN axmt540_bcl USING g_enterprise,
                                       g_xmdk_m.xmdkdocno,g_xmdl_d[g_detail_idx].xmdlseq     
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "axmt540_bcl:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "xmdm_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN axmt540_bcl2 USING g_enterprise,
                                             g_xmdk_m.xmdkdocno,g_xmdl3_d[g_detail_idx].xmdmseq,g_xmdl3_d[g_detail_idx].xmdmseq1 
 
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "axmt540_bcl2:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other name="lock_b.other"
                           
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axmt540.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION axmt540_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
                           
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
    
   LET ls_group = "'1','2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmt540_bcl
   END IF
   
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axmt540_bcl2
   END IF
 
 
   
 
 
   #add-point:unlock_b段other name="unlock_b.other"
                           
   #end add-point  
 
END FUNCTION
 
{</section>}
 
{<section id="axmt540.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION axmt540_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
                           
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   CALL cl_set_comp_entry("xmdkdocno",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("xmdkdocno",TRUE)
      CALL cl_set_comp_entry("xmdkdocdt",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      CALL cl_set_comp_entry("xmdkdocdt",TRUE)                                                
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   CALL cl_set_comp_entry("xmdkdocno,xmdkdocdt",TRUE)
   CALL cl_set_comp_entry("xmdk001,xmdk002,xmdk003,xmdk004,xmdk005",TRUE)
   CALL cl_set_comp_entry("xmdk006,xmdk007,xmdk008,xmdk009,xmdk010",TRUE)
   CALL cl_set_comp_entry("xmdk011,xmdk012,xmdk015",TRUE)
   CALL cl_set_comp_entry("xmdk016,xmdk017,xmdk018,xmdk019,xmdk020",TRUE)
   CALL cl_set_comp_entry("xmdk021,xmdk022,xmdk023,xmdk024,xmdk025",TRUE)
   CALL cl_set_comp_entry("xmdk026,xmdk027,xmdk028,xmdk029,xmdk030",TRUE)
   CALL cl_set_comp_entry("xmdk031,xmdk032,xmdk033,xmdk034,xmdk035",TRUE)
   CALL cl_set_comp_entry("xmdk039,xmdk040",TRUE)
   CALL cl_set_comp_entry("xmdk042,xmdk043,xmdk044,xmdk045",TRUE)
   CALL cl_set_comp_entry("xmdk054,xmdk055",TRUE)
   CALL cl_set_comp_entry("xmdk202",TRUE)
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="axmt540.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION axmt540_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   
   DEFINE l_slip     LIKE ooba_t.ooba001
   DEFINE l_success  LIKE type_t.num5
   DEFINE l_numseq   LIKE type_t.num5
   DEFINE l_num01    LIKE type_t.num5
   DEFINE l_num03    LIKE type_t.num5
   DEFINE l_xmdg024  LIKE xmdg_t.xmdg024
   DEFINE l_xmdg025  LIKE xmdg_t.xmdg025
   DEFINE l_fields   STRING
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("xmdkdocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      CALL cl_set_comp_entry("xmdkdocdt",FALSE)
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("xmdkdocno",FALSE)
   END IF 
 
#  IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正) #(ver:78)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("xmdkdocdt",FALSE)
      END IF
#  END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   IF p_cmd <> 'h' OR cl_null(p_cmd) THEN
      CALL cl_set_comp_entry("xmdk034",FALSE)
   END IF
   
   #160623-00014#1-mod-(S)   
#   IF g_prog <> 'axmt541' THEN   #若為出貨單，匯率、取價方式NoEntry
#      CALL cl_set_comp_entry("xmdk018",FALSE)
#   END IF
   IF g_prog NOT MATCHES 'axmt541' THEN   #若為出貨單，匯率、取價方式NoEntry
      CALL cl_set_comp_entry("xmdk018",FALSE)
   END IF
   #160623-00014#1-mod-(E)
   
   IF NOT cl_null(g_xmdk_m.xmdkdocno) THEN
      #aooi200預設不可更改
      LET l_fields = ''
      CALL s_aooi200_get_doc_fields(g_site,'1',g_xmdk_m.xmdkdocno) RETURNING l_fields
      CALL cl_set_comp_entry(l_fields,FALSE)
         
      CALL s_aooi200_get_slip(g_xmdk_m.xmdkdocno) RETURNING l_success,l_slip
      IF l_success THEN
         IF cl_get_doc_para(g_enterprise,g_site,l_slip,'D-BAS-0062') = 'Y' THEN    #出貨單與出通單勾稽
            CALL cl_set_comp_entry("xmdk006",FALSE)
         ELSE
            CALL cl_set_comp_entry("xmdk005",FALSE)
         END IF
      END IF
   END IF

   IF NOT cl_null(g_xmdk_m.xmdk006) AND g_xmdk_m.xmdk043 = '1' THEN      #匯率計算基準為 1:依訂單日匯率
      CALL cl_set_comp_entry("xmdk017",FALSE)
   END IF

   CALL axmt540_detail_count() RETURNING l_numseq,l_num01,l_num03
   IF l_numseq <> 0 THEN       #取價方式、多角性質
      CALL cl_set_comp_entry("xmdk018,xmdk045",FALSE)
   END IF
   
   IF l_num01 <> 0 THEN        #單身有輸入出通單
      CALL cl_set_comp_entry("xmdk005",FALSE)
   END IF
   
   IF l_num03 <> 0 THEN         #單身有輸入訂單
      CALL cl_set_comp_entry("xmdk006",FALSE)
   END IF
   
   IF NOT cl_null(g_xmdk_m.xmdk005) OR    #出通單
      l_num01 <> 0 THEN                   #單身有輸入出通單
      CALL cl_set_comp_entry("xmdk002",FALSE)
      CALL cl_set_comp_entry("xmdk007,xmdk008,xmdk009,xmdk010",FALSE)
      CALL cl_set_comp_entry("xmdk011,xmdk012,xmdk015,xmdk016,xmdk027",FALSE)
      CALL cl_set_comp_entry("xmdk042,xmdk045,xmdk202",FALSE)
   END IF

   IF NOT cl_null(g_xmdk_m.xmdk006) OR   #訂單
      l_num03 <> 0 THEN                  #單身有輸入訂單
      CALL cl_set_comp_entry("xmdk002",FALSE)
      CALL cl_set_comp_entry("xmdk007,xmdk008,xmdk009,xmdk010",FALSE)
      CALL cl_set_comp_entry("xmdk011,xmdk012,xmdk015,xmdk016,xmdk027",FALSE)
      CALL cl_set_comp_entry("xmdk042,xmdk045,xmdk202",FALSE)
   END IF

   #輸入的訂單是『3統銷統收』時，不開放輸入
   IF g_xmdk_m.xmdk045 = '3' THEN
      CALL cl_set_comp_entry("xmdk044",FALSE)
   END IF
   
   IF NOT cl_null(g_xmdk_m.xmdk005) OR    #出通單
      l_num01 <> 0 THEN                   #單身有輸入出通單
      CALL cl_set_comp_entry("xmdk044",FALSE)
   END IF
      
   IF NOT cl_null(g_xmdk_m.xmdk006) OR   #訂單
      l_num03 <> 0 THEN                  #單身有輸入訂單
      CALL cl_set_comp_entry("xmdk044",FALSE)
   END IF
   
   IF g_xmdk_m.xmdk002 <> '3' AND g_xmdk_m.xmdk002 <> '4' AND
      g_xmdk_m.xmdk002 <> '8' THEN   #不為"簽收訂單","調撥訂單","借貨訂單"
      CALL cl_set_comp_entry("xmdk039,xmdk040",FALSE)
   END IF

   CALL axmt540_xmdk028_xmdk029_sel() RETURNING l_xmdg024,l_xmdg025
   #出通單已做包裝單
   IF l_xmdg024 = 'Y' THEN
      CALL cl_set_comp_entry("xmdk028",FALSE)
   END IF
   
   #出通單已做Invoice
   IF l_xmdg025 = 'Y' THEN
      CALL cl_set_comp_entry("xmdk029",FALSE)
   END IF
   
   #150917-00001#3  2016/01/19 By earl mark s
#   #有來源且中斷續拋
#   IF NOT (cl_null(g_xmdk_m.xmdk005) AND cl_null(g_xmdk_m.xmdk006))
#      AND axmt540_break_continue(g_xmdk_m.xmdk044) THEN
#   
#      #除多角序號xmdk035，剩餘欄位全鎖
#      CALL cl_set_comp_entry("xmdkdocno,xmdkdocdt",FALSE)
#      CALL cl_set_comp_entry("xmdk001,xmdk003,xmdk004",FALSE)
#      CALL cl_set_comp_entry("xmdk017,xmdk019,xmdk020",FALSE)
#      CALL cl_set_comp_entry("xmdk021,xmdk022,xmdk023,xmdk024,xmdk025",FALSE)
#      CALL cl_set_comp_entry("xmdk026,xmdk027,xmdk028,xmdk029,xmdk030",FALSE)
#      CALL cl_set_comp_entry("xmdk031,xmdk032,xmdk033,xmdk039,xmdk040",FALSE)
#      CALL cl_set_comp_entry("xmdk043,xmdk054,xmdk055",FALSE)
#
#   ELSE
      CALL cl_set_comp_entry("xmdk035",FALSE)  #多角序號
#   END IF
   #150917-00001#3  2016/01/19 By earl mark e
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="axmt540.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION axmt540_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
 
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   CALL cl_set_comp_entry("xmdl010,xmdl011,xmdl012,xmdl017,xmdl023,xmdl025",TRUE)
  
   CALL cl_set_comp_entry("xmdl001,xmdl002",TRUE)                 #來源出通單
   CALL cl_set_comp_entry("xmdl003,xmdl004,xmdl005,xmdl006",TRUE) #來源訂單
   CALL cl_set_comp_entry("xmdl007,xmdl008,xmdl009",TRUE)         #子料件特性、料件編號、產品特徵
   
   CALL cl_set_comp_entry("xmdl013,xmdl014,xmdl015,xmdl016,xmdl052",TRUE) #多庫儲批、庫位、儲位、批號、庫存管理特徵   
   CALL cl_set_comp_entry("xmdl018,xmdl020,xmdl022",TRUE)         #數量、參考數量、計價數量

   CALL cl_set_comp_entry("xmdl030,xmdl031,xmdl032",TRUE)  #add by lixiang 2015/06/18  #專案編號、WBS、活動編號
   
   CALL cl_set_comp_entry("l_pmao009,l_pmao010",TRUE)
   
  #CALL cl_set_comp_required("xmdl016,xmdl052",FALSE)  #160125-00015 by whitney add    #160519-00008#8 取消 xmdl052
   CALL cl_set_comp_required("xmdl016",FALSE)   #160519-00008#8
   CALL cl_set_comp_required("xmdl052",TRUE)    #160519-00008#8
   #end add-point  
END FUNCTION
 
{</section>}
 
{<section id="axmt540.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION axmt540_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   DEFINE l_slip       LIKE ooba_t.ooba001
   DEFINE l_success    LIKE type_t.num5
   DEFINE l_imaa005    LIKE imaa_t.imaa005
   DEFINE l_xmdc022    LIKE xmdc_t.xmdc022
   DEFINE l_onebyone   LIKE type_t.chr80
   DEFINE l_imaf055    LIKE imaf_t.imaf055  #160125-00015 by whitney add
   DEFINE l_imaf061    LIKE imaf_t.imaf061  #160125-00015 by whitney add
   DEFINE l_imaa004    LIKE imaa_t.imaa004  #170116-00044#2-add
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   #非無訂單出貨且非樣品
   #160623-00014#1-mod-(S)
#   IF g_prog <> 'axmt541' AND g_xmdl_d[l_ac].xmdl007 <> '9' THEN
#      CALL cl_set_comp_entry("xmdl010,xmdl011,xmdl012,xmdl017,xmdl023,xmdl025",FALSE)
#   END IF
   IF g_prog NOT MATCHES 'axmt541' AND g_xmdl_d[l_ac].xmdl007 <> '9' THEN
      CALL cl_set_comp_entry("xmdl010,xmdl011,xmdl012,xmdl017,xmdl023,xmdl025",FALSE)
   END IF
   #160623-00014#1-mod-(E)
   
   #來源單號no_entry
   IF NOT cl_null(g_xmdk_m.xmdkdocno) THEN
      CALL s_aooi200_get_slip(g_xmdk_m.xmdkdocno) RETURNING l_success,l_slip
      IF l_success THEN
         IF cl_get_doc_para(g_enterprise,g_site,l_slip,'D-BAS-0062') = 'Y' THEN    #出貨單與出通單勾稽
            CALL cl_set_comp_entry("xmdl004,xmdl005,xmdl006",FALSE)     #訂單欄位(訂單單號除外)

            IF cl_null(g_xmdl_d[l_ac].xmdl001) OR
               NOT cl_null(g_xmdl_d[l_ac].xmdl002) THEN
               CALL cl_set_comp_entry("xmdl003",FALSE)          #訂單單號
            END IF

            #費用料號(不輸入項次)
            IF cl_null(g_xmdl_d[l_ac].xmdl004) AND
               cl_null(g_xmdl_d[l_ac].xmdl005) AND
               cl_null(g_xmdl_d[l_ac].xmdl006) AND
               NOT cl_null(g_xmdl_d[l_ac].xmdl003) AND NOT cl_null(g_xmdl_d[l_ac].xmdl008) THEN
               CALL cl_set_comp_entry("xmdl018,xmdl020,xmdl022,xmdl013,xmdl014,xmdl015,xmdl016,xmdl052",FALSE)
               
               #如原本出通單即為費用料號不no_entry
               IF cl_null(g_xmdl_d[l_ac].xmdl002) THEN
                  CALL cl_set_comp_entry("xmdl002",FALSE)
               END IF
            END IF

            #子件特性為9.樣品不用輸入來源單號
            IF cl_null(g_xmdl_d[l_ac].xmdl001) AND g_xmdl_d[l_ac].xmdl007 = '9' THEN
               CALL cl_set_comp_entry("xmdl001,xmdl002,xmdl003,xmdl004,xmdl005,xmdl006",FALSE)
            END IF
            #170117-00040#1-(S)-add
            IF (NOT cl_null(g_xmdl_d[l_ac].xmdl003)) AND g_xmdl_d[l_ac].xmdl007 = '9' THEN
               CALL cl_set_comp_entry("xmdl017",FALSE)   #出貨單位
            END IF
            #170117-00040#1-(E)-add

         ELSE #出貨單與訂單勾稽
            
            CALL cl_set_comp_entry("xmdl001,xmdl002",FALSE)     #出通單欄位

            #費用料號(不輸入項次、項序、分批序)
            IF cl_null(g_xmdl_d[l_ac].xmdl004) AND
               cl_null(g_xmdl_d[l_ac].xmdl005) AND
               cl_null(g_xmdl_d[l_ac].xmdl006) AND
               NOT cl_null(g_xmdl_d[l_ac].xmdl003) AND NOT cl_null(g_xmdl_d[l_ac].xmdl008) THEN
               
               CALL cl_set_comp_entry("xmdl004,xmdl005,xmdl006",FALSE)
               CALL cl_set_comp_entry("xmdl018,xmdl020,xmdl022,xmdl013,xmdl014,xmdl015,xmdl016,xmdl052",FALSE)
            END IF

            #子件特性為9.樣品不用輸入來源單號
            IF cl_null(g_xmdl_d[l_ac].xmdl003) AND g_xmdl_d[l_ac].xmdl007 = '9' THEN
               CALL cl_set_comp_entry("xmdl001,xmdl002,xmdl003,xmdl004,xmdl005,xmdl006",FALSE)
            END IF
            #170117-00040#1-(S)-add
            IF (NOT cl_null(g_xmdl_d[l_ac].xmdl003)) AND g_xmdl_d[l_ac].xmdl007 = '9' THEN
               CALL cl_set_comp_entry("xmdl017",FALSE)    #出貨單位  
            END IF
            #170117-00040#1-(E)-add
            
         END IF
      END IF
   END IF
   #170116-00044#2-s-add
   #若料號為費用性料號，庫儲批不需輸入
   LET l_imaa004 = ''
   SELECT imaa004 INTO l_imaa004
     FROM imaa_t
    WHERE imaaent = g_enterprise AND imaa001 = g_xmdl_d[l_ac].xmdl008
   IF l_imaa004 = 'E' THEN
      LET g_xmdl_d[l_ac].xmdl013 = 'N'
      CALL cl_set_comp_entry("xmdl013,xmdl014,xmdl015,xmdl016",FALSE)
   END IF
   #170116-00044#2-e-add
   #有來源時"子件特性"no_entry
   IF NOT cl_null(g_xmdl_d[l_ac].xmdl001) OR NOT cl_null(g_xmdl_d[l_ac].xmdl003) THEN
      CALL cl_set_comp_entry("xmdl007",FALSE)
   END IF   

   #訂單設置不允許分批出貨時，則數量直接預設訂單分批量不可修改
   IF NOT cl_null(g_xmdl_d[l_ac].xmdl003) AND NOT cl_null(g_xmdl_d[l_ac].xmdl004) THEN
      
      LET l_xmdc022 = 'Y'
      SELECT xmdc022 INTO l_xmdc022
        FROM xmdc_t
       WHERE xmdcent = g_enterprise
         AND xmdcdocno = g_xmdl_d[l_ac].xmdl003
         AND xmdcseq = g_xmdl_d[l_ac].xmdl004
      IF l_xmdc022 = 'N' THEN
         CALL cl_set_comp_entry("xmdl018",FALSE)
      END IF
   END IF

   LET l_onebyone = ''
   IF NOT cl_null(g_xmdl_d[l_ac].xmdl001) THEN
      CALL s_aooi200_get_slip(g_xmdl_d[l_ac].xmdl001) RETURNING l_success,l_slip
      IF l_success THEN
         CALL cl_get_doc_para(g_enterprise,g_site,l_slip,'D-BAS-0060') RETURNING l_onebyone
         IF l_onebyone = '1' THEN #出通轉出貨單控管為"一對一"
            CALL cl_set_comp_entry("xmdl018",FALSE)
         END IF
      END IF
   END IF

   #檢查是否是否限定
   LET g_xmdh011 = 'N'  #多庫儲批
   LET g_xmdh012 = ''  #庫位
   LET g_xmdh013 = ''  #儲位
   LET g_xmdh014 = ''  #批號            
   LET g_xmdh029 = ''  #庫存管理特徵
   CALL s_axmt540_source_define(g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004)
   RETURNING g_xmdh011,g_xmdh012,g_xmdh013,g_xmdh014,g_xmdh029
               
   IF NOT cl_null(g_xmdh012) THEN  #限定庫位
      CALL cl_set_comp_entry("xmdl014",FALSE)
   END IF
      
   IF NOT cl_null(g_xmdh013) THEN  #限定儲位
      CALL cl_set_comp_entry("xmdl015",FALSE)
   END IF
      
   IF NOT cl_null(g_xmdh014) THEN  #限定批號
      CALL cl_set_comp_entry("xmdl016",FALSE)
   END IF

   IF NOT cl_null(g_xmdh029) THEN  #限定庫存管理特徵
      CALL cl_set_comp_entry("xmdl052",FALSE)
   END IF

   IF NOT cl_null(g_xmdh012) AND NOT cl_null(g_xmdh013) AND
      NOT cl_null(g_xmdh014) AND NOT cl_null(g_xmdh029) THEN
      
      CALL cl_set_comp_entry("xmdl013",FALSE)
   END IF

   #出通轉出貨單控管為"一對一"，且出通做多庫儲批，不可以取消多庫儲批，也不可以修改會影響多庫儲批的欄位
   IF g_xmdh011 = 'Y' AND l_onebyone = '1' THEN
      CALL cl_set_comp_entry("xmdl008,xmdl009,xmdl013",FALSE)      
   END IF

   #若為多庫儲批出貨
   IF g_xmdl_d[l_ac].xmdl013 = 'Y' THEN
      CALL cl_set_comp_required("xmdl052",FALSE)         #160519-00008#8
      CALL cl_set_comp_entry("xmdl014,xmdl015,xmdl016,xmdl052",FALSE)
   END IF
   
   #160125-00015 by whitney mark start
   #IF NOT s_axmt540_imaf061_chk(g_xmdl_d[l_ac].xmdl008) THEN
   #   CALL cl_set_comp_entry("xmdl016",FALSE)
   #END IF
   #160125-00015 by whitney mark end
   #160125-00015 by whitney add start
   #庫存管理特微
   CALL s_axmt540_get_imaf(g_xmdl_d[l_ac].xmdl008) RETURNING l_imaf055,l_imaf061
   #160519-00008#8--(S)
   IF l_imaf055 <> '1' THEN
      CALL cl_set_comp_required("xmdl052",FALSE)
   END IF
   #160519-00008#8--(E)
   CASE l_imaf055
      WHEN '1'  #必須有庫存管理特徵
        #160519-00008#8--(S)
        #CALL cl_set_comp_required("xmdl052",TRUE)    
         IF g_xmdl_d[l_ac].xmdl052 = ' ' THEN
            LET g_xmdl_d[l_ac].xmdl052 = ''
         END IF
         #160519-00008#8--(E)
      WHEN '2'  #不可有庫存管理特徵
         LET g_xmdl_d[l_ac].xmdl052 = ''  #160519-00008#8
         CALL cl_set_comp_entry("xmdl052",FALSE)
   END CASE
   #檢查料件是否使用批號
   CASE l_imaf061
      WHEN '1'  #必須有批號
         CALL cl_set_comp_required("xmdl016",TRUE)
      WHEN '2'  #不可有批號
         CALL cl_set_comp_entry("xmdl016",FALSE)
   END CASE
   #160125-00015 by whitney add end

   #儲位控管若為5.不使用儲位控管
   IF NOT s_axmt540_inaa007_chk(g_xmdl_d[l_ac].xmdl014) THEN
      CALL cl_set_comp_entry("xmdl015",FALSE)
   END IF

   #若無參考單位則不可輸入參考數量
   IF cl_null(g_xmdl_d[l_ac].xmdl019) THEN
      CALL cl_set_comp_entry("xmdl020",FALSE)
   END IF

   #判斷料件是否存在產品特徵
   IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) THEN
      CALL s_axmt500_get_imaa005(g_enterprise,g_xmdl_d[l_ac].xmdl008) RETURNING l_imaa005
      IF cl_null(l_imaa005) THEN
         CALL cl_set_comp_entry("xmdl009",FALSE)
      END IF
   END IF

   #整體參數未使用採購計價單位
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0007') = "N" THEN
      CALL cl_set_comp_entry("xmdl022",FALSE)
   END IF 

   #稅別應用為'1'正常稅率
   IF g_oodb011 = '1' THEN
      CALL cl_set_comp_entry("xmdl025",FALSE)
   END IF
  
   #add by lixiang 2015/06/18---s---
   #axmt541,無訂單出貨時，專案編號、WBS、活動編號可輸入，其他則不可輸入  
   IF g_argv[01] <> '2' THEN  
      CALL cl_set_comp_entry("xmdl030,xmdl031,xmdl032",FALSE)
   END IF
   #add by lixiang 2015/06/18---e----
   
   IF  g_pmao_flag = 'Y' THEN
   ELSE
      CALL cl_set_comp_entry("l_pmao009,l_pmao010",FALSE)
   END IF
  
   #end add-point     
END FUNCTION
 
{</section>}
 
{<section id="axmt540.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION axmt540_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
 
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   
   #150721-00001#1  2016/01/08 By earl mod s
   #整體單據Action控制
   CALL cl_set_act_visible("insert", TRUE)
   
   IF NOT cl_null(g_xmdk_m.xmdkdocno) THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
      CALL cl_set_act_visible("address_modify,aisp320_cmd,axmt540_modify_price,axmt540_modify_xmdk055,axmt540_produce_axmt580,axmt540_refresh_price",TRUE)
      CALL cl_set_act_visible("apjm210_shift_to,axmt540_call_axmt540_01,s_lot_sel",TRUE)
   END IF
   #150721-00001#1  2016/01/08 By earl mod e
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="axmt540.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION axmt540_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   #150721-00001#1  2016/01/08 By earl add s
   DEFINE l_success     LIKE type_t.num5
   DEFINE l_flag        LIKE type_t.num5
   #150721-00001#1  2016/01/08 By earl add e
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"

   CASE g_xmdk_m.xmdkstus
      WHEN 'N'   #未確認
         CALL cl_set_act_visible("axmt540_produce_axmt580",FALSE)         

      WHEN 'S'   #已扣帳
         CALL cl_set_act_visible("modify,delete,modify_detail",FALSE)         

      WHEN 'D'   #抽單
         CALL cl_set_act_visible("modify,delete,modify_detail",TRUE)
         CALL cl_set_act_visible("axmt540_produce_axmt580",FALSE)         

      WHEN 'R'   #已拒絕
         CALL cl_set_act_visible("axmt540_produce_axmt580",FALSE)         

      WHEN 'Y'   #已確認
         CALL cl_set_act_visible("modify,delete,modify_detail",FALSE)
         CALL cl_set_act_visible("axmt540_produce_axmt580",FALSE)

      WHEN 'H'   #留置
         CALL cl_set_act_visible("modify,delete,modify_detail",FALSE)
         CALL cl_set_act_visible("axmt540_produce_axmt580",FALSE)

      WHEN 'X'   #作廢
         CALL cl_set_act_visible("modify,delete,modify_detail",FALSE)
         CALL cl_set_act_visible("axmt540_produce_axmt580",FALSE)
         CALL cl_set_act_visible("axmt540_modify_xmdk055",FALSE)
         
      WHEN 'W'   #送簽中
         CALL cl_set_act_visible("modify,delete,modify_detail",FALSE)
         CALL cl_set_act_visible("axmt540_produce_axmt580",FALSE)
         
      WHEN 'A'   #已核准
         CALL cl_set_act_visible("modify,delete,modify_detail",FALSE)
         CALL cl_set_act_visible("axmt540_produce_axmt580",FALSE)      

   END CASE
   #add--2015/08/04 By shiun--(S)
   IF g_xmdk_m.xmdkstus <> 'S' THEN
      CALL cl_set_act_visible("aisp320_cmd",FALSE)
   END IF
   #add--2015/08/04 By shiun--(E)
   
   #add by lixiang 2015/11/20 --begin--
   IF g_xmdk_m.xmdkstus <> 'N' THEN
      CALL cl_set_act_visible("apjm210_shift_to",FALSE)
   END IF
   #add by lixiang 2015/11/20 --begin--
   
   #150721-00001#1  2016/01/08 By earl add s
   CALL s_control_chk_group('5','2',g_user,g_dept,g_site,'','','','') RETURNING l_success,l_flag
   IF NOT l_success OR NOT l_flag THEN    #處理狀態為FALSE 或 不在控制組範圍內
      CALL cl_set_act_visible("insert", FALSE)
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", FALSE)
      CALL cl_set_act_visible("address_modify,aisp320_cmd,axmt540_modify_price,axmt540_modify_xmdk055,axmt540_produce_axmt580,axmt540_refresh_price",FALSE)
      CALL cl_set_act_visible("apjm210_shift_to,axmt540_call_axmt540_01,s_lot_sel",FALSE)
   END IF
   #150721-00001#1  2016/01/08 By earl add e
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="axmt540.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION axmt540_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   CALL cl_set_act_visible("s_lot_sel",TRUE)
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="axmt540.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION axmt540_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   DEFINE l_imaf071     LIKE imaf_t.imaf071
   DEFINE l_imaf081     LIKE imaf_t.imaf081
   #150721-00001#1  2016/01/08 By earl add s
   DEFINE l_success     LIKE type_t.num5
   DEFINE l_flag        LIKE type_t.num5
   #150721-00001#1  2016/01/08 By earl add e
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   IF l_ac > 0 THEN    
      #抓取料件據點進銷存相關資訊
      LET l_imaf071 = NULL
      LET l_imaf081 = NULL
      SELECT imaf071,imaf081 INTO l_imaf071,l_imaf081 
        FROM imaf_t 
       WHERE imafent = g_enterprise
         AND imafsite = g_site AND imaf001 = g_xmdl_d[l_ac].xmdl008
      IF l_imaf071 ='2' AND l_imaf081 ='2' THEN 
         CALL cl_set_act_visible("s_lot_sel",FALSE)
      END IF
   END IF
   
   #150721-00001#1  2016/01/08 By earl add s
   CALL s_control_chk_group('5','2',g_user,g_dept,g_site,'','','','') RETURNING l_success,l_flag
   IF NOT l_success OR NOT l_flag THEN    #處理狀態為FALSE 或 不在控制組範圍內
      CALL cl_set_act_visible("s_lot_sel",FALSE)
   END IF
   #150721-00001#1  2016/01/08 By earl add e
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="axmt540.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION axmt540_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
                           
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
                           
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " xmdkdocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   LET ls_wc = ''
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = " xmdkdocno IN ('",g_argv[02],"') AND "
   END IF

   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
         INITIALIZE g_wc2_table2 TO NULL
 
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "xmdk_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "xmdl_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "xmdm_t" 
                  LET g_wc2_table2 = la_wc[li_idx].wc
 
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
            OR NOT cl_null(g_wc2_table2)
 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
            IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
            END IF
 
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
 
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
 
{</section>}
 
{<section id="axmt540.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION axmt540_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   DEFINE l_success       LIKE type_t.num5
   DEFINE l_xmaj003_1     LIKE xmaj_t.xmaj003      #訂單確認時超限控管方式(據點)
   DEFINE l_xmaj003_2     LIKE xmaj_t.xmaj003      #訂單確認時超限控管方式(集團)     
   DEFINE l_slip          LIKE ooba_t.ooba001
   #150626---earl---add---s
   DEFINE la_param   RECORD
          prog          STRING,
          actionid      STRING,
          background    LIKE type_t.chr1,
          param         DYNAMIC ARRAY OF STRING
                     END RECORD

   DEFINE ls_js         STRING
   DEFINE l_xmdk083       LIKE xmdk_t.xmdk083
   #150626---earl---add---e
   DEFINE l_flag          LIKE type_t.num5  #150925 by whiteny

   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
                           
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_xmdk_m.xmdkdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN axmt540_cl USING g_enterprise,g_xmdk_m.xmdkdocno
   IF STATUS THEN
      CLOSE axmt540_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axmt540_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE axmt540_master_referesh USING g_xmdk_m.xmdkdocno INTO g_xmdk_m.xmdk000,g_xmdk_m.xmdksite, 
       g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001,g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdkstus, 
       g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk007,g_xmdk_m.xmdk009,g_xmdk_m.xmdk008,g_xmdk_m.xmdk202, 
       g_xmdk_m.xmdk047,g_xmdk_m.xmdk002,g_xmdk_m.xmdk045,g_xmdk_m.xmdk032,g_xmdk_m.xmdk030,g_xmdk_m.xmdk028, 
       g_xmdk_m.xmdk029,g_xmdk_m.xmdk037,g_xmdk_m.xmdk034,g_xmdk_m.xmdk054,g_xmdk_m.xmdk039,g_xmdk_m.xmdk040, 
       g_xmdk_m.xmdk087,g_xmdk_m.xmdk021,g_xmdk_m.xmdk022,g_xmdk_m.xmdk023,g_xmdk_m.xmdk024,g_xmdk_m.xmdk020, 
       g_xmdk_m.xmdk025,g_xmdk_m.xmdk026,g_xmdk_m.xmdk027,g_xmdk_m.xmdk038,g_xmdk_m.xmdk055,g_xmdk_m.xmdk010, 
       g_xmdk_m.xmdk011,g_xmdk_m.xmdk012,g_xmdk_m.xmdk013,g_xmdk_m.xmdk014,g_xmdk_m.xmdk015,g_xmdk_m.xmdk016, 
       g_xmdk_m.xmdk017,g_xmdk_m.xmdk018,g_xmdk_m.xmdk019,g_xmdk_m.xmdk042,g_xmdk_m.xmdk043,g_xmdk_m.xmdk031, 
       g_xmdk_m.xmdk033,g_xmdk_m.xmdk044,g_xmdk_m.xmdk035,g_xmdk_m.xmdk046,g_xmdk_m.xmdk036,g_xmdk_m.xmdk083, 
       g_xmdk_m.xmdkownid,g_xmdk_m.xmdkowndp,g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtdp,g_xmdk_m.xmdkcrtdt, 
       g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmoddt,g_xmdk_m.xmdkcnfid,g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid, 
       g_xmdk_m.xmdkpstdt,g_xmdk_m.xmdk003_desc,g_xmdk_m.xmdk004_desc,g_xmdk_m.xmdk007_desc,g_xmdk_m.xmdk009_desc, 
       g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk202_desc,g_xmdk_m.xmdk030_desc,g_xmdk_m.xmdk034_desc,g_xmdk_m.xmdk039_desc, 
       g_xmdk_m.xmdk040_desc,g_xmdk_m.xmdk022_desc,g_xmdk_m.xmdk020_desc,g_xmdk_m.xmdk027_desc,g_xmdk_m.xmdk038_desc, 
       g_xmdk_m.xmdk010_desc,g_xmdk_m.xmdk011_desc,g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdk019_desc,g_xmdk_m.xmdkownid_desc, 
       g_xmdk_m.xmdkowndp_desc,g_xmdk_m.xmdkcrtid_desc,g_xmdk_m.xmdkcrtdp_desc,g_xmdk_m.xmdkmodid_desc, 
       g_xmdk_m.xmdkcnfid_desc,g_xmdk_m.xmdkpstid_desc
   
 
   #檢查是否允許此動作
   IF NOT axmt540_action_chk() THEN
      CLOSE axmt540_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_xmdk_m.xmdk000,g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocno_desc,g_xmdk_m.xmdkdocdt, 
       g_xmdk_m.xmdk001,g_xmdk_m.xmdk003,g_xmdk_m.xmdk003_desc,g_xmdk_m.xmdk004,g_xmdk_m.xmdk004_desc, 
       g_xmdk_m.xmdkstus,g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk007,g_xmdk_m.xmdk007_desc,g_xmdk_m.xmdk009, 
       g_xmdk_m.xmdk009_desc,g_xmdk_m.xmdk008,g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk202,g_xmdk_m.xmdk202_desc, 
       g_xmdk_m.xmdk047,g_xmdk_m.xmdk002,g_xmdk_m.xmdk045,g_xmdk_m.xmdk032,g_xmdk_m.xmdk030,g_xmdk_m.xmdk030_desc, 
       g_xmdk_m.xmdk028,g_xmdk_m.xmdk029,g_xmdk_m.xmdk037,g_xmdk_m.xmdk034,g_xmdk_m.xmdk034_desc,g_xmdk_m.xmdk054, 
       g_xmdk_m.xmdk039,g_xmdk_m.xmdk039_desc,g_xmdk_m.xmdk040,g_xmdk_m.xmdk040_desc,g_xmdk_m.xmdk087, 
       g_xmdk_m.xmdk021,g_xmdk_m.xmdk021_desc,g_xmdk_m.address,g_xmdk_m.xmdk022,g_xmdk_m.xmdk022_desc, 
       g_xmdk_m.xmdk023,g_xmdk_m.xmdk023_desc,g_xmdk_m.xmdk024,g_xmdk_m.xmdk024_desc,g_xmdk_m.xmdk020, 
       g_xmdk_m.xmdk020_desc,g_xmdk_m.xmdk025,g_xmdk_m.xmdk026,g_xmdk_m.xmdk027,g_xmdk_m.xmdk027_desc, 
       g_xmdk_m.xmdk038,g_xmdk_m.xmdk038_desc,g_xmdk_m.xmdk055,g_xmdk_m.xmdk010,g_xmdk_m.xmdk010_desc, 
       g_xmdk_m.xmdk011,g_xmdk_m.xmdk011_desc,g_xmdk_m.xmdk012,g_xmdk_m.xmdk012_desc,g_xmdk_m.xmdk013, 
       g_xmdk_m.xmdk014,g_xmdk_m.xmdk015,g_xmdk_m.xmdk015_desc,g_xmdk_m.xmdk016,g_xmdk_m.xmdk016_desc, 
       g_xmdk_m.xmdk017,g_xmdk_m.xmdk018,g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdk019,g_xmdk_m.xmdk019_desc, 
       g_xmdk_m.xmdk042,g_xmdk_m.xmdk043,g_xmdk_m.xmdk031,g_xmdk_m.xmdk031_desc,g_xmdk_m.xmdk033,g_xmdk_m.xmdk033_desc, 
       g_xmdk_m.xmdk044,g_xmdk_m.xmdk035,g_xmdk_m.xmdk046,g_xmdk_m.xmdk036,g_xmdk_m.xmdk083,g_xmdk_m.xmdkownid, 
       g_xmdk_m.xmdkownid_desc,g_xmdk_m.xmdkowndp,g_xmdk_m.xmdkowndp_desc,g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtid_desc, 
       g_xmdk_m.xmdkcrtdp,g_xmdk_m.xmdkcrtdp_desc,g_xmdk_m.xmdkcrtdt,g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmodid_desc, 
       g_xmdk_m.xmdkmoddt,g_xmdk_m.xmdkcnfid,g_xmdk_m.xmdkcnfid_desc,g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid, 
       g_xmdk_m.xmdkpstid_desc,g_xmdk_m.xmdkpstdt
 
   CASE g_xmdk_m.xmdkstus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "S"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "UH"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unhold.png")
      WHEN "H"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/hold.png")
      WHEN "Z"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   #add--160531-00047#1 By shiun--(S)
   LET g_pmaa004 = ''
   SELECT pmaa004 INTO g_pmaa004 FROM pmaa_t WHERE pmaaent = g_enterprise AND pmaa001 = g_xmdk_m.xmdk007
   IF g_pmaa004 MATCHES '[24]' THEN
#      CALL axmt540_xmdk047_ref(g_xmdk_m.xmdk047) RETURNING g_xmdk_m.xmdk007_desc   #161207-00033#30   mark
      CALL axmt540_xmdk047_ref(g_xmdk_m.xmdk047,'') RETURNING g_xmdk_m.xmdk007_desc   #161207-00033#30   mod
   ELSE
      CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk007) RETURNING g_xmdk_m.xmdk007_desc
   END IF
   DISPLAY BY NAME g_xmdk_m.xmdk007_desc
   #add--160531-00047#1 By shiun--(E)
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_xmdk_m.xmdkstus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "S"
               HIDE OPTION "posted"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "UH"
               HIDE OPTION "unhold"
            WHEN "H"
               HIDE OPTION "hold"
            WHEN "Z"
               HIDE OPTION "unposted"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      #approved    已核准(不卡)
      #rejection   已拒絕(不卡)
      #signing     提交
      #withdraw    抽單
      
      #confirmed   確認
      #unconfirmed 取消確認
      #posted      過帳
      #unposted    取消過帳
      #invalid     作廢
      #unhold      取消留置
      #hold        留置      
    
      CALL cl_set_act_visible("signing,withdraw",FALSE)
      CALL cl_set_act_visible("confirmed,unconfirmed,posted,unposted,invalid,unhold,hold",FALSE)

      CASE g_xmdk_m.xmdkstus
         WHEN "N"   #未確認
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            CALL cl_set_act_visible("invalid,confirmed",TRUE)

            IF cl_bpm_chk() THEN
               CALL cl_set_act_visible("signing",TRUE)
               CALL cl_set_act_visible("confirmed",FALSE)
            END IF  

         WHEN "X"   #作廢
            CALL s_transaction_end('N','0')   #160812-00017#6 20160822 add by beckxie
            RETURN

         WHEN "Y"   #已確認
            CALL cl_set_act_visible("unconfirmed,posted,hold",TRUE)

         WHEN "S"   #已過帳
            CALL cl_set_act_visible("unposted",TRUE)
           
         WHEN "A"   #已核准
            CALL cl_set_act_visible("confirmed ",TRUE)

         WHEN "R"   #已拒絕
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
#            CALL cl_set_act_visible("invalid,confirmed",TRUE) xujing mark
             CALL cl_set_act_visible("invalid",TRUE)

#            IF cl_bpm_chk() THEN                        xujing mark
#               CALL cl_set_act_visible("signing",TRUE)
#               CALL cl_set_act_visible("confirmed",FALSE)
#            END IF

         WHEN "D"   #抽單
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
#            CALL cl_set_act_visible("invalid,confirmed",TRUE) xujing mark
            CALL cl_set_act_visible("invalid",TRUE)
#            IF cl_bpm_chk() THEN                      xujing mark
#               CALL cl_set_act_visible("signing",TRUE)
#               CALL cl_set_act_visible("confirmed",FALSE)
#            END IF
            
         WHEN "W"   #送簽中
            CALL cl_set_act_visible("withdraw",TRUE)

         WHEN "H"  #留置
            CALL cl_set_act_visible("unhold",TRUE)         
         
#         WHEN "UH" #取消留置
#         WHEN "Z"  #扣帳還原

      END CASE   


      #end add-point
      
      #應用 a36 樣板自動產生(Version:5)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT axmt540_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE axmt540_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT axmt540_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE axmt540_cl
            RETURN
         END IF
 
 
 
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.unconfirmed"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.confirmed"
 
            #end add-point
         END IF
         EXIT MENU
      ON ACTION posted
         IF cl_auth_chk_act("posted") THEN
            LET lc_state = "S"
            #add-point:action控制 name="statechange.posted"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制 name="statechange.approved"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制 name="statechange.withdraw"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制 name="statechange.rejection"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制 name="statechange.signing"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION unhold
         IF cl_auth_chk_act("unhold") THEN
            LET lc_state = "UH"
            #add-point:action控制 name="statechange.unhold"
            LET lc_state = "Y"
            #end add-point
         END IF
         EXIT MENU
      ON ACTION hold
         IF cl_auth_chk_act("hold") THEN
            LET lc_state = "H"
            #add-point:action控制 name="statechange.hold"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION unposted
         IF cl_auth_chk_act("unposted") THEN
            LET lc_state = "Z"
            #add-point:action控制 name="statechange.unposted"
            LET lc_state = "Y"
            #end add-point
         END IF
         EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.invalid"
 
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
                                                      
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "S"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "UH"
      AND lc_state <> "H"
      AND lc_state <> "Z"
      AND lc_state <> "X"
      ) OR 
      g_xmdk_m.xmdkstus = lc_state OR cl_null(lc_state) THEN
      CLOSE axmt540_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   CALL cl_err_collect_init()
   
   CASE lc_state
      WHEN 'Y'
         IF g_xmdk_m.xmdkstus = 'N' OR
            g_xmdk_m.xmdkstus = 'A' OR
            g_xmdk_m.xmdkstus = 'D' OR
            g_xmdk_m.xmdkstus = 'R' THEN    #確認
            CALL s_axmt540_conf_chk(g_xmdk_m.xmdkdocno) RETURNING l_success
            IF NOT l_success THEN
               CALL cl_err_collect_show()
               CLOSE axmt540_cl  #161027-00035#1 add
               CALL s_transaction_end('N','0')   #160812-00017#6 20160822 add by beckxie
               RETURN
            #ELSE  #161027-00035#1 mark
            END IF  #161027-00035#1 add
            IF NOT cl_ask_confirm('aim-00108') THEN   #是否執行確認？
               CALL cl_err_collect_show()
               CLOSE axmt540_cl  #161027-00035#1 add
               CALL s_transaction_end('N','0')   #160812-00017#6 20160822 add by beckxie
               RETURN
            #ELSE  #161027-00035#1 mark
            END IF  #161027-00035#1 add
            #CALL s_transaction_begin()  #161027-00035#1 mark
            CALL s_aooi200_get_slip(g_xmdk_m.xmdkdocno) RETURNING l_success,l_slip
            IF NOT l_success THEN
               CALL cl_err_collect_show()
               CLOSE axmt540_cl  #161027-00035#1 add
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            #如果信用額度超限，超限控管方式為2警告且留置時，需做留置動作
            CALL s_axmt500_get_credit('6',g_xmdk_m.xmdk007) RETURNING l_xmaj003_1,l_xmaj003_2
            #150626 by whitney modify start
            IF (l_xmaj003_1 = '2' OR l_xmaj003_2 = '2') THEN   
               #"警告且留置"且"信用額度超限"
               #160809-00020#1-s-add
               CALL s_axmt540_conf_upd(g_xmdk_m.xmdkdocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL cl_err_collect_show()
                  CLOSE axmt540_cl  #161027-00035#1 add
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF                     
               #160809-00020#1-s-add
               CALL s_axmt540_credit('4',g_xmdk_m.xmdkdocno) RETURNING l_flag
               IF l_flag <> 1 THEN
                  CALL cl_ask_confirm3("axm-00440","")   #信用額度已超限，進行單據留置！
                  #160809-00020#1-s-mark
                  #CALL s_axmt540_conf_upd(g_xmdk_m.xmdkdocno) RETURNING l_success
                  #IF NOT l_success THEN
                  #   CALL s_transaction_end('N','0')
                  #   CALL cl_err_collect_show()
                  #   RETURN
                  #END IF
                  #160809-00020#1-s-mark
                  CASE l_flag
                     WHEN 0  #超限
                        LET g_xmdk_m.xmdk034 = cl_get_para(g_enterprise,g_site,'S-BAS-0047')
                     WHEN 2  #逾期
                        LET g_xmdk_m.xmdk034 = cl_get_para(g_enterprise,g_site,'S-BAS-0051')
                  END CASE
                  UPDATE xmdk_t
                     SET xmdk034 = g_xmdk_m.xmdk034
                   WHERE xmdkent = g_enterprise
                     AND xmdkdocno = g_xmdk_m.xmdkdocno
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "upd xmdk_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL cl_err_collect_show()
                     CLOSE axmt540_cl  #161027-00035#1 add
                     CALL s_transaction_end('N','0')
                     RETURN
                  END IF
                  LET lc_state = 'H'  #留置
                  #CALL s_transaction_end('Y','0')  #161027-00035#1 mark
               END IF
               #150925 by whitney modify end
            ELSE
               CALL s_axmt540_conf_upd(g_xmdk_m.xmdkdocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL cl_err_collect_show()
                  CLOSE axmt540_cl  #161027-00035#1 add
                  CALL s_transaction_end('N','0')
                  RETURN
               #ELSE  #161027-00035#1 mark
               END IF  #161027-00035#1 add
               #銷退單單別參數設置"自動過帳"
               IF cl_get_doc_para(g_enterprise,g_site,l_slip,'D-BAS-0083') = 'Y' THEN                  
                  LET lc_state = 'S'
               #161027-00035#1-s mark
               #      END IF
               #      
               #         CALL s_transaction_end('Y','0')
               #      END IF
               #                           
               #   END IF
               #   
               #161027-00035#1-e mark
               END IF
            END IF
         END IF
         
         IF g_xmdk_m.xmdkstus = 'S' THEN   #取消過帳
            CALL s_axmt540_unpost_chk(g_xmdk_m.xmdkdocno) RETURNING l_success
            IF NOT l_success THEN
               CALL cl_err_collect_show()
               CLOSE axmt540_cl  #161027-00035#1 add
               CALL s_transaction_end('N','0')   #160812-00017#6 20160822 add by beckxie
               RETURN
            #ELSE  #161027-00035#1 mark
            END IF  #161027-00035#1 add
            IF NOT cl_ask_confirm('sub-00361') THEN  #是否執行取消過帳？
               CALL cl_err_collect_show()
               CLOSE axmt540_cl  #161027-00035#1 add
               CALL s_transaction_end('N','0')   #160812-00017#6 20160822 add by beckxie
               RETURN
            #ELSE  #161027-00035#1 mark
            END IF  #161027-00035#1 add
            #150626---earl---add---s
            CALL s_transaction_end('Y','0')
            #多角自動拋轉還原
            IF cl_get_para(g_enterprise,'','E-BAS-0022') = 'Y' AND
               g_xmdk_m.xmdk045 MATCHES '[27]' AND 
               g_xmdk_m.xmdk044 IS NOT NULL THEN
               INITIALIZE la_param.* TO NULL
               LET la_param.prog     = 'aicp510'
               LET la_param.param[1] = g_xmdk_m.xmdkdocno
               LET ls_js = util.JSON.stringify(la_param)
               CALL cl_cmdrun_wait(ls_js)
            END IF
            LET l_xmdk083 = ''
            SELECT xmdk083 INTO l_xmdk083
              FROM xmdk_t
             WHERE xmdkent = g_enterprise
               AND xmdkdocno = g_xmdk_m.xmdkdocno
            IF l_xmdk083 = 'Y' THEN
               INITIALIZE g_errparam TO NULL
               #多角流程已拋轉之單據不可取消過帳！
               LET g_errparam.code   = 'aic-00181'
               LET g_errparam.popup  = TRUE
               CALL cl_err()
               CALL cl_err_collect_show()
               CLOSE axmt540_cl
               #CALL s_transaction_end('N','0')   #160812-00017#6 20160822 add by beckxie  #161027-00035#1 mark
               RETURN
            END IF
            #161027-00035#1-s mark
            CALL s_transaction_begin()
            #OPEN axmt540_cl USING g_enterprise,g_xmdk_m.xmdkdocno
            #IF STATUS THEN
            #   INITIALIZE g_errparam TO NULL
            #   LET g_errparam.extend = "OPEN axmt540_cl:"
            #   LET g_errparam.code   = STATUS
            #   LET g_errparam.popup  = TRUE
            #   CALL cl_err()
            #   CLOSE axmt540_cl
            #   CALL s_transaction_end('N','0')
            #   CALL cl_err_collect_show()
            #   RETURN
            #END IF
            #161027-00035#1-e mark
            #150626---earl---add---e
            CALL s_axmt540_unpost_upd(g_xmdk_m.xmdkdocno) RETURNING l_success
            IF NOT l_success THEN
               CALL cl_err_collect_show()
               CLOSE axmt540_cl  #161027-00035#1 add
               CALL s_transaction_end('N','0')
               RETURN
               #161027-00035#1-s mark
               #   ELSE
               #      #mark--161017-00031#1 By shiun--(S)
               #      ##160805-00004#1-s-add
               #      ##多角拋轉完後，才做訂單取消結案
               #      # CALL s_axmt540_xmda_closd('2',g_xmdk_m.xmdkdocno) RETURNING l_success
               #      ##160805-00004#1-e-add
               #      #mark--161017-00031#1 By shiun--(E)
               #      CALL s_transaction_end('Y','0')
               #   END IF
               #END IF
               #161027-00035#1-e mark
            END IF
         END IF
         
         IF g_xmdk_m.xmdkstus = 'H' THEN   #取消留置
            #CALL s_transaction_begin()  #161027-00035#1 mark
            CALL axmt540_hold_upd('2') RETURNING l_success
            IF NOT l_success THEN
               CALL cl_err_collect_show()
               CLOSE axmt540_cl  #161027-00035#1 add
               CALL s_transaction_end('N','0')
               RETURN
            #ELSE  #161027-00035#1 mark
            END IF  #161027-00035#1 add
            #161027-00035#1-s mark
            #   CALL s_transaction_end('Y','0')
            #END IF
            #161027-00035#1-e mark
            CALL axmt540_show()
         END IF
      
     
      WHEN 'X'   #作廢
         CALL s_axmt540_invalid_chk(g_xmdk_m.xmdkdocno) RETURNING l_success
         IF NOT l_success THEN
            CALL cl_err_collect_show()
            CLOSE axmt540_cl  #161027-00035#1 add
            CALL s_transaction_end('N','0')   #160812-00017#6 20160822 add by beckxie
            RETURN
         #ELSE  #161027-00035#1 mark
         END IF  #161027-00035#1 add
         IF NOT cl_ask_confirm('aim-00109') THEN  #是否執行作廢？
            CALL cl_err_collect_show()
            CLOSE axmt540_cl  #161027-00035#1 add
            CALL s_transaction_end('N','0')   #160812-00017#6 20160822 add by beckxie
            RETURN
         #ELSE  #161027-00035#1 mark
         END IF  #161027-00035#1 add
         #CALL s_transaction_begin()  #161027-00035#1 mark
         CALL s_axmt540_invalid_upd(g_xmdk_m.xmdkdocno) RETURNING l_success
         IF NOT l_success THEN
            CALL cl_err_collect_show()
            CLOSE axmt540_cl  #161027-00035#1 add
            CALL s_transaction_end('N','0')
            RETURN
            #161027-00035#1-s mark
            #   ELSE
            #      CALL s_transaction_end('Y','0')
            #   END IF
            #END IF
            #161027-00035#1-e mark
         END IF   
      
      WHEN 'S'  #過帳
         CALL s_axmt540_post_chk(g_xmdk_m.xmdkdocno) RETURNING l_success
         IF NOT l_success THEN
            CALL cl_err_collect_show()
            CLOSE axmt540_cl  #161027-00035#1 add
            CALL s_transaction_end('N','0')   #160812-00017#6 20160822 add by beckxie
            RETURN
         #ELSE  #161027-00035#1 mark
         END IF  #161027-00035#1 add
         IF NOT cl_ask_confirm('sub-00360') THEN  #是否執行過帳？
            CALL cl_err_collect_show()
            CLOSE axmt540_cl  #161027-00035#1 add
            CALL s_transaction_end('N','0')   #160812-00017#6 20160822 add by beckxie
            RETURN
         #ELSE  #161027-00035#1 mark
         END IF  #161027-00035#1 add
         #CALL s_transaction_begin()  #161027-00035#1 mark
         CALL cl_err_collect_show()  #回歸錯誤訊息顯示
         IF NOT axmt540_post_input() THEN  #INPUT
            CALL cl_err_collect_show()
            CLOSE axmt540_cl  #161027-00035#1 add
            CALL s_transaction_end('N','0')
            RETURN
         END IF
         CALL cl_err_collect_init()
         CALL s_axmt540_post_upd(g_xmdk_m.xmdkdocno) RETURNING l_success
         IF NOT l_success THEN
            CALL cl_err_collect_show()
            CLOSE axmt540_cl  #161027-00035#1 add
            CALL s_transaction_end('N','0')
            RETURN
         #ELSE  #161027-00035#1 mark
         END IF  #161027-00035#1 add
         CALL s_transaction_end('Y','0')
         #150626---earl---add---s
         #多角自動拋轉
         IF cl_get_para(g_enterprise,'','E-BAS-0022') = 'Y' AND
            g_xmdk_m.xmdk045 MATCHES '[27]' AND 
            g_xmdk_m.xmdk044 IS NOT NULL THEN
            INITIALIZE la_param.* TO NULL
            LET la_param.prog     = 'aicp500'
            LET la_param.param[1] = g_xmdk_m.xmdkdocno
            LET ls_js = util.JSON.stringify(la_param)
            CALL cl_cmdrun_wait(ls_js)
            #161027-00035#1-s add
            LET l_xmdk083 = ''
            SELECT xmdk083 INTO l_xmdk083
              FROM xmdk_t
             WHERE xmdkent = g_enterprise
               AND xmdkdocno = g_xmdk_m.xmdkdocno
            #多角流程拋轉失敗！
            IF l_xmdk083 <> 'Y' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code   = 'aic-00177'
               LET g_errparam.popup  = TRUE
               CALL cl_err()
               CALL s_transaction_begin()
               CALL s_axmt540_unpost_upd(g_xmdk_m.xmdkdocno) RETURNING l_success
               CALL s_transaction_end('Y','0')
               CALL cl_err_collect_show()
               CLOSE axmt540_cl
               RETURN
            END IF
            #161027-00035#1-e add
            ##161125-00001#1----add----end---------
            ##161027-00035#1-s mark
            #      END IF
            #      #150626---earl---add---e
            #      #mark--161017-00031#1 By shiun--(S)
            #      ##160805-00004#1-s-add
            #      ##多角拋轉完後，才做訂單結案
            #      #CALL s_axmt540_xmda_closd('1',g_xmdk_m.xmdkdocno) RETURNING l_success
            #      ##160805-00004#1-e-add
            #      #mark--161017-00031#1 By shiun--(E)
            #   END IF
            #END IF
            #161027-00035#1-e mark
         END IF   
      
      WHEN 'N'  #取消確認
         CALL s_axmt540_unconf_chk(g_xmdk_m.xmdkdocno) RETURNING l_success
         IF NOT l_success THEN
            CALL cl_err_collect_show()
            CLOSE axmt540_cl  #161027-00035#1 add
            CALL s_transaction_end('N','0')   #160812-00017#6 20160822 add by beckxie
            RETURN
         #ELSE  #161027-00035#1 mark
         END IF  #161027-00035#1 add
         IF NOT cl_ask_confirm('aim-00110') THEN   #是否執行取消確認？
            CALL cl_err_collect_show()
            CLOSE axmt540_cl  #161027-00035#1 add
            CALL s_transaction_end('N','0')   #160812-00017#6 20160822 add by beckxie
            RETURN
         #ELSE  #161027-00035#1 mark
         END IF  #161027-00035#1 add
         #CALL s_transaction_begin()  #161027-00035#1 mark
         CALL s_axmt540_unconf_upd(g_xmdk_m.xmdkdocno) RETURNING l_success
         IF NOT l_success THEN
            CALL cl_err_collect_show()
            CLOSE axmt540_cl  #161027-00035#1 add
            CALL s_transaction_end('N','0')
            RETURN
            #161027-00035#1-s mark
            #   ELSE
            #      CALL s_transaction_end('Y','0')
            #   END IF
            #END IF
            #161027-00035#1-e mark
         END IF
      
      WHEN 'H'   #留置
         #CALL s_transaction_begin()  #161027-00035#1 mark
         CALL axmt540_hold_upd('1') RETURNING l_success
         IF NOT l_success THEN
            CALL cl_err_collect_show()
            CLOSE axmt540_cl  #161027-00035#1 add
            CALL s_transaction_end('N','0')
            RETURN
         #ELSE  #161027-00035#1 mark
         END IF  #161027-00035#1 add
         #161027-00035#1-s mark
         #   CALL s_transaction_end('Y','0')
         #END IF
         #161027-00035#1-e mark
         CALL axmt540_show()         
         
   END CASE
   
   CALL cl_err_collect_show()
   #end add-point
   
   LET g_xmdk_m.xmdkmodid = g_user
   LET g_xmdk_m.xmdkmoddt = cl_get_current()
   LET g_xmdk_m.xmdkstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE xmdk_t 
      SET (xmdkstus,xmdkmodid,xmdkmoddt) 
        = (g_xmdk_m.xmdkstus,g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmoddt)     
    WHERE xmdkent = g_enterprise AND xmdkdocno = g_xmdk_m.xmdkdocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "UH"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unhold.png")
         WHEN "H"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/hold.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE axmt540_master_referesh USING g_xmdk_m.xmdkdocno INTO g_xmdk_m.xmdk000,g_xmdk_m.xmdksite, 
          g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001,g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdkstus, 
          g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk007,g_xmdk_m.xmdk009,g_xmdk_m.xmdk008,g_xmdk_m.xmdk202, 
          g_xmdk_m.xmdk047,g_xmdk_m.xmdk002,g_xmdk_m.xmdk045,g_xmdk_m.xmdk032,g_xmdk_m.xmdk030,g_xmdk_m.xmdk028, 
          g_xmdk_m.xmdk029,g_xmdk_m.xmdk037,g_xmdk_m.xmdk034,g_xmdk_m.xmdk054,g_xmdk_m.xmdk039,g_xmdk_m.xmdk040, 
          g_xmdk_m.xmdk087,g_xmdk_m.xmdk021,g_xmdk_m.xmdk022,g_xmdk_m.xmdk023,g_xmdk_m.xmdk024,g_xmdk_m.xmdk020, 
          g_xmdk_m.xmdk025,g_xmdk_m.xmdk026,g_xmdk_m.xmdk027,g_xmdk_m.xmdk038,g_xmdk_m.xmdk055,g_xmdk_m.xmdk010, 
          g_xmdk_m.xmdk011,g_xmdk_m.xmdk012,g_xmdk_m.xmdk013,g_xmdk_m.xmdk014,g_xmdk_m.xmdk015,g_xmdk_m.xmdk016, 
          g_xmdk_m.xmdk017,g_xmdk_m.xmdk018,g_xmdk_m.xmdk019,g_xmdk_m.xmdk042,g_xmdk_m.xmdk043,g_xmdk_m.xmdk031, 
          g_xmdk_m.xmdk033,g_xmdk_m.xmdk044,g_xmdk_m.xmdk035,g_xmdk_m.xmdk046,g_xmdk_m.xmdk036,g_xmdk_m.xmdk083, 
          g_xmdk_m.xmdkownid,g_xmdk_m.xmdkowndp,g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtdp,g_xmdk_m.xmdkcrtdt, 
          g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmoddt,g_xmdk_m.xmdkcnfid,g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid, 
          g_xmdk_m.xmdkpstdt,g_xmdk_m.xmdk003_desc,g_xmdk_m.xmdk004_desc,g_xmdk_m.xmdk007_desc,g_xmdk_m.xmdk009_desc, 
          g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk202_desc,g_xmdk_m.xmdk030_desc,g_xmdk_m.xmdk034_desc,g_xmdk_m.xmdk039_desc, 
          g_xmdk_m.xmdk040_desc,g_xmdk_m.xmdk022_desc,g_xmdk_m.xmdk020_desc,g_xmdk_m.xmdk027_desc,g_xmdk_m.xmdk038_desc, 
          g_xmdk_m.xmdk010_desc,g_xmdk_m.xmdk011_desc,g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdk019_desc,g_xmdk_m.xmdkownid_desc, 
          g_xmdk_m.xmdkowndp_desc,g_xmdk_m.xmdkcrtid_desc,g_xmdk_m.xmdkcrtdp_desc,g_xmdk_m.xmdkmodid_desc, 
          g_xmdk_m.xmdkcnfid_desc,g_xmdk_m.xmdkpstid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_xmdk_m.xmdk000,g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocno_desc, 
          g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001,g_xmdk_m.xmdk003,g_xmdk_m.xmdk003_desc,g_xmdk_m.xmdk004, 
          g_xmdk_m.xmdk004_desc,g_xmdk_m.xmdkstus,g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk007, 
          g_xmdk_m.xmdk007_desc,g_xmdk_m.xmdk009,g_xmdk_m.xmdk009_desc,g_xmdk_m.xmdk008,g_xmdk_m.xmdk008_desc, 
          g_xmdk_m.xmdk202,g_xmdk_m.xmdk202_desc,g_xmdk_m.xmdk047,g_xmdk_m.xmdk002,g_xmdk_m.xmdk045, 
          g_xmdk_m.xmdk032,g_xmdk_m.xmdk030,g_xmdk_m.xmdk030_desc,g_xmdk_m.xmdk028,g_xmdk_m.xmdk029, 
          g_xmdk_m.xmdk037,g_xmdk_m.xmdk034,g_xmdk_m.xmdk034_desc,g_xmdk_m.xmdk054,g_xmdk_m.xmdk039, 
          g_xmdk_m.xmdk039_desc,g_xmdk_m.xmdk040,g_xmdk_m.xmdk040_desc,g_xmdk_m.xmdk087,g_xmdk_m.xmdk021, 
          g_xmdk_m.xmdk021_desc,g_xmdk_m.address,g_xmdk_m.xmdk022,g_xmdk_m.xmdk022_desc,g_xmdk_m.xmdk023, 
          g_xmdk_m.xmdk023_desc,g_xmdk_m.xmdk024,g_xmdk_m.xmdk024_desc,g_xmdk_m.xmdk020,g_xmdk_m.xmdk020_desc, 
          g_xmdk_m.xmdk025,g_xmdk_m.xmdk026,g_xmdk_m.xmdk027,g_xmdk_m.xmdk027_desc,g_xmdk_m.xmdk038, 
          g_xmdk_m.xmdk038_desc,g_xmdk_m.xmdk055,g_xmdk_m.xmdk010,g_xmdk_m.xmdk010_desc,g_xmdk_m.xmdk011, 
          g_xmdk_m.xmdk011_desc,g_xmdk_m.xmdk012,g_xmdk_m.xmdk012_desc,g_xmdk_m.xmdk013,g_xmdk_m.xmdk014, 
          g_xmdk_m.xmdk015,g_xmdk_m.xmdk015_desc,g_xmdk_m.xmdk016,g_xmdk_m.xmdk016_desc,g_xmdk_m.xmdk017, 
          g_xmdk_m.xmdk018,g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdk019,g_xmdk_m.xmdk019_desc,g_xmdk_m.xmdk042, 
          g_xmdk_m.xmdk043,g_xmdk_m.xmdk031,g_xmdk_m.xmdk031_desc,g_xmdk_m.xmdk033,g_xmdk_m.xmdk033_desc, 
          g_xmdk_m.xmdk044,g_xmdk_m.xmdk035,g_xmdk_m.xmdk046,g_xmdk_m.xmdk036,g_xmdk_m.xmdk083,g_xmdk_m.xmdkownid, 
          g_xmdk_m.xmdkownid_desc,g_xmdk_m.xmdkowndp,g_xmdk_m.xmdkowndp_desc,g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtid_desc, 
          g_xmdk_m.xmdkcrtdp,g_xmdk_m.xmdkcrtdp_desc,g_xmdk_m.xmdkcrtdt,g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmodid_desc, 
          g_xmdk_m.xmdkmoddt,g_xmdk_m.xmdkcnfid,g_xmdk_m.xmdkcnfid_desc,g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid, 
          g_xmdk_m.xmdkpstid_desc,g_xmdk_m.xmdkpstdt
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   CALL axmt540_xmdk047_ref(g_xmdk_m.xmdk047,'') RETURNING g_xmdk_m.xmdk007_desc   #161207-00033#30 add  
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   
   #單身Action隱藏
   CALL axmt540_detail_action_hidden(g_detail_idx)
   
   #end add-point  
 
   CLOSE axmt540_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL axmt540_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axmt540.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION axmt540_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
 
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_xmdl_d.getLength() THEN
         LET g_detail_idx = g_xmdl_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmdl_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmdl_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_xmdl2_d.getLength() THEN
         LET g_detail_idx = g_xmdl2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmdl2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmdl2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_xmdl3_d.getLength() THEN
         LET g_detail_idx = g_xmdl3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmdl3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmdl3_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   
   #單身Action隱藏
   CALL axmt540_detail_action_hidden(g_detail_idx)
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axmt540.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION axmt540_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
 
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
                           
   #end add-point
    
   LET l_ac = li_ac
   
   CALL axmt540_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
 
{</section>}
 
{<section id="axmt540.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION axmt540_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
                           
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
 
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
                                                      
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axmt540.status_show" >}
PRIVATE FUNCTION axmt540_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="axmt540.mask_functions" >}
&include "erp/axm/axmt540_mask.4gl"
 
{</section>}
 
{<section id="axmt540.signature" >}
   #應用 a39 樣板自動產生(Version:10)
#+ BPM提交
PRIVATE FUNCTION axmt540_send()
   #add-point:send段define(客製用) name="send.define_customerization"
   
   #end add-point 
   #add-point:send段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="send.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="send.pre_function"
   
   #end add-point
   
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
   LET g_wc2_table2 = " 1=1"
 
 
   CALL axmt540_show()
   CALL axmt540_set_pk_array()
   
   #add-point: 初始化的ADP name="send.before_send"
   #確認前檢核段
   IF NOT s_axmt540_conf_chk(g_xmdk_m.xmdkdocno) THEN
      CLOSE axmt540_cl
      CALL s_transaction_end('N','0')
#160705-00040#1-s
#      RETURN
      RETURN FALSE
#160705-00040#1-e
   END IF
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_xmdk_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_xmdl_d))
   CALL cl_bpm_set_detail_data("s_detail2", util.JSONArray.fromFGL(g_xmdl2_d))
   CALL cl_bpm_set_detail_data("s_detail3", util.JSONArray.fromFGL(g_xmdl3_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP name="send.before_cli"
   
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP name="send.after_send"
   
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL axmt540_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL axmt540_ui_headershow()
   CALL axmt540_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
#應用 a40 樣板自動產生(Version:9)
#+ BPM抽單
PRIVATE FUNCTION axmt540_draw_out()
   #add-point:draw段define name="draw.define_customerization"
   
   #end add-point
   #add-point:draw段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="draw.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="draw.pre_function"
   
   #end add-point
   
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_idx].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL axmt540_ui_headershow()  
   CALL axmt540_ui_detailshow()
 
   #add-point:Function後置處理  name="draw.after_function"
   
   #end add-point
 
   RETURN TRUE
   
END FUNCTION
 
 
 
 
 
{</section>}
 
{<section id="axmt540.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION axmt540_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_xmdk_m.xmdkdocno
   LET g_pk_array[1].column = 'xmdkdocno'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axmt540.other_dialog" readonly="Y" >}
   
 
{</section>}
 
{<section id="axmt540.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION axmt540_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL axmt540_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_xmdk_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axmt540.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION axmt540_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   #160818-00017#43-s
   SELECT xmdkstus INTO g_xmdk_m.xmdkstus FROM xmdk_t
    WHERE xmdkent = g_enterprise
      AND xmdksite = g_site
      AND xmdkdocno = g_xmdk_m.xmdkdocno
   IF (g_action_choice="modify" OR g_action_choice="delete" OR g_action_choice="modify_detail")  THEN
     LET g_errno = NULL
     CASE g_xmdk_m.xmdkstus
        WHEN 'W'
           LET g_errno = 'sub-01347'
        WHEN 'X'
           LET g_errno = 'sub-00229'
        WHEN 'Y'
           LET g_errno = 'sub-00178'
        WHEN 'S'
           LET g_errno = 'sub-00230'
        WHEN 'Z'
           LET g_errno = 'sub-01351'
        WHEN 'UH'
           LET g_errno = 'sub-01358'
        WHEN 'H'
           LET g_errno = 'sub-01348'
     END CASE

     IF NOT cl_null(g_errno) THEN
        INITIALIZE g_errparam TO NULL
        LET g_errparam.code = g_errno
        LET g_errparam.extend = g_xmdk_m.xmdkdocno
        LET g_errparam.popup = TRUE
        CALL cl_err()
        LET g_errno = NULL
        CALL axmt540_set_act_visible()
        CALL axmt540_set_act_no_visible()
        CALL axmt540_show()
        RETURN FALSE
     END IF
   END IF      
   #160818-00017#43-e
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="axmt540.other_function" readonly="Y" >}

PRIVATE FUNCTION axmt540_xmdk018_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xmdk_m.xmdk018
   CALL ap_ref_array2(g_ref_fields,"SELECT xmahl003 FROM xmahl_t WHERE xmahlent='"||g_enterprise||"' AND xmahl001=? AND xmahl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmdk_m.xmdk018_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmdk_m.xmdk018_desc
END FUNCTION

PRIVATE FUNCTION axmt540_location_ref(p_transport,p_location)
   DEFINE p_transport           LIKE xmdk_t.xmdk022   #運輸方式
   DEFINE p_location            LIKE xmdk_t.xmdk023   #地點
   DEFINE r_display             LIKE type_t.chr10
   DEFINE l_oocq019             LIKE oocq_t.oocq019   #運輸方式

   LET r_display = ''
   LET l_oocq019 = ''

   IF cl_null(p_transport) OR
      cl_null(p_location) THEN
      RETURN r_display
   END IF

   SELECT oocq019 INTO l_oocq019
     FROM oocq_t
    WHERE oocqent = g_enterprise
      AND oocq001 = '263'
      AND oocq002 = p_transport

   CASE
      WHEN l_oocq019 = '1' OR    #陸運
           l_oocq019 = '4'       #其他
           
         DECLARE axmt540_location_sel_cs SCROLL CURSOR FOR
            SELECT oockl005 FROM oockl_t
             WHERE oocklent = g_enterprise
               AND oockl003 = p_location
               AND oockl004 = g_dlang
             ORDER BY oockl001,oockl002
         OPEN axmt540_location_sel_cs
         FETCH FIRST axmt540_location_sel_cs INTO r_display
         RETURN r_display
                    
      WHEN l_oocq019 = '2'     #海運
            
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = p_location
         CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='262' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET r_display = '', g_rtn_fields[1] , ''
         RETURN r_display                                
   
      WHEN l_oocq019 = '3'     #空運

         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = p_location
         CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='276' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET r_display = '', g_rtn_fields[1] , ''
         RETURN r_display
           
   END CASE
   RETURN r_display
END FUNCTION

PRIVATE FUNCTION axmt540_xmdk021_ref()
   DEFINE l_pmaa027   LIKE pmaa_t.pmaa027  #聯絡對象識別碼
   DEFINE l_success   LIKE type_t.num5       #處理狀態
   DEFINE l_address   STRING                 #地址

   INITIALIZE g_ref_fields TO NULL
   
   CALL s_axmt500_get_pmaa027(g_xmdk_m.xmdk009) RETURNING l_pmaa027

   LET g_ref_fields[1] = l_pmaa027
   LET g_ref_fields[2] = g_xmdk_m.xmdk021
   CALL ap_ref_array2(g_ref_fields,"SELECT oofb011 FROM oofb_t 
                                     WHERE oofbent='"||g_enterprise||"' 
                                       AND oofb002 =? AND oofbstus = 'Y' 
                                       AND oofb019 =?","") RETURNING g_rtn_fields
   LET g_xmdk_m.xmdk021_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmdk_m.xmdk021_desc
   
   #組合地址
   LET l_address = ''
   IF NOT cl_null(g_xmdk_m.xmdk009) AND NOT cl_null(g_xmdk_m.xmdk021) THEN         
      
      IF NOT cl_null(l_pmaa027) THEN
         CALL s_aooi350_get_address(l_pmaa027,g_xmdk_m.xmdk021,g_dlang) RETURNING l_success,l_address
         IF NOT l_success THEN
            LET l_address = ''
         END IF   
      END IF      
   END IF
   
   LET g_xmdk_m.address = l_address
   DISPLAY BY NAME g_xmdk_m.address
END FUNCTION
################################################################################
# Descriptions...: 由出通單多庫儲批自動帶出單身
# Memo...........:
# Usage..........: CALL axmt540_auto_insert_xmdm(p_xmdl001,p_xmdl002,p_xmdlseq)
#                  
# Input parameter: p_xmdl001(出通單號)
#                : p_xmdl002(出通單項次)
#                : p_xmdlseq(出貨單項次)
# Return code....: r_only(符合的多庫儲批是否只有一筆)TRUE/FALSE
#                : r_xmdm005(庫位)若只有一筆多庫儲批時回傳才有值
#                : r_xmdm006(儲位)若只有一筆多庫儲批時回傳才有值
#                : r_xmdm007(批號)若只有一筆多庫儲批時回傳才有值
#                : r_xmdm033(庫存管理特徵)若只有一筆多庫儲批時回傳才有值
# Date & Author..: 140304 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_auto_insert_xmdm(p_xmdl001,p_xmdl002,p_xmdlseq)
   DEFINE p_xmdl001    LIKE xmdl_t.xmdl001
   DEFINE p_xmdl002    LIKE xmdl_t.xmdl002
   DEFINE p_xmdlseq    LIKE xmdl_t.xmdlseq
   DEFINE r_only       LIKE type_t.num5
   DEFINE r_xmdm005    LIKE xmdm_t.xmdm005
   DEFINE r_xmdm006    LIKE xmdm_t.xmdm006
   DEFINE r_xmdm007    LIKE xmdm_t.xmdm007
   DEFINE r_xmdm033    LIKE xmdm_t.xmdm033

   DEFINE l_success    LIKE type_t.num5
   DEFINE l_n          LIKE type_t.num5
   DEFINE l_can_ship   LIKE xmdm_t.xmdm009
   DEFINE l_xmdm     RECORD      
      xmdmseq          LIKE xmdm_t.xmdmseq,   #160512-00004#2-add
      xmdmseq1         LIKE xmdm_t.xmdmseq1,  #160512-00004#2-add
      xmdm001          LIKE xmdm_t.xmdm001,
      xmdm002          LIKE xmdm_t.xmdm002,
      xmdm003          LIKE xmdm_t.xmdm003,
      xmdm004          LIKE xmdm_t.xmdm004,
      xmdm005          LIKE xmdm_t.xmdm005,
      xmdm006          LIKE xmdm_t.xmdm006,
      xmdm007          LIKE xmdm_t.xmdm007,
      xmdm008          LIKE xmdm_t.xmdm008,
      xmdm009          LIKE xmdm_t.xmdm009,
      xmdm010          LIKE xmdm_t.xmdm010,
      xmdm011          LIKE xmdm_t.xmdm011,
      xmdm033          LIKE xmdm_t.xmdm033,
      xmdm034          LIKE xmdm_t.xmdm034,   #160408-00035#7
      xmdm035          LIKE xmdm_t.xmdm035    #160408-00035#7
                     END RECORD

   DEFINE l_xmdl   RECORD
      xmdl007          LIKE xmdl_t.xmdl007,  #子件特性
      xmdl010          LIKE xmdl_t.xmdl010,  #包裝容器
      xmdl017          LIKE xmdl_t.xmdl017,  #出貨單位
      xmdl019          LIKE xmdl_t.xmdl019,  #參考單位
      xmdl021          LIKE xmdl_t.xmdl021,  #計價單位
      xmdl014          LIKE xmdl_t.xmdl014,  #出貨庫位
      xmdl015          LIKE xmdl_t.xmdl015,  #出貨儲位
      xmdl016          LIKE xmdl_t.xmdl016,  #批號         #160512-00004#2-add
      xmdl052          LIKE xmdl_t.xmdl052   #庫存管理特徵  #160512-00004#2-add
                   END RECORD

   #150917-00001#3  2016/01/21  By earl add s
   DEFINE l_chk           LIKE type_t.num5        #TRUE 需要校驗檢查  FALSE  不需校驗檢查
   DEFINE l_qty           LIKE xmdl_t.xmdl205     #未續拋數量
   DEFINE l_qty_batch     LIKE xmdl_t.xmdl205     #未續拋數量(考慮批號)
   #150917-00001#3  2016/01/21  By earl add e
   #160408-00035#7---add---begin 
   DEFINE l_xmdl003 LIKE xmdl_t.xmdl003
   DEFINE l_xmdl004 LIKE xmdl_t.xmdl004   
   DEFINE l_xmdl005 LIKE xmdl_t.xmdl005
   DEFINE l_xmdl006 LIKE xmdl_t.xmdl006
   DEFINE l_xmdr007 LIKE xmdr_t.xmdr007
   DEFINE l_qty1    LIKE xmdm_t.xmdm009
   DEFINE l_xmdm034 LIKE xmdm_t.xmdm034
   DEFINE l_xmdm035 LIKE xmdm_t.xmdm035
   #160408-00035#7---add---end 
   
   LET g_errno = ''
   LET r_only = TRUE
   LET r_xmdm005 = ''
   LET r_xmdm006 = ''
   LET r_xmdm007 = ''
   LET r_xmdm033 = ''

   IF NOT cl_null(p_xmdl001) AND NOT cl_null(p_xmdl002) THEN
      #160512-00004#2-mod-(S)
#      LET g_sql = "SELECT xmdi001,xmdi002,xmdi003,xmdi004,xmdi005,",
#                  "       xmdi006,xmdi007,xmdi008,xmdi009,xmdi010,",
#                  "       xmdi011,xmdi013",
#                  "  FROM xmdi_t",
#                  " WHERE xmdient = '",g_enterprise,"'",
#                  "   AND xmdidocno = '",p_xmdl001,"'",
#                  "   AND xmdiseq = '",p_xmdl002,"'",
#                  " ORDER BY xmdiseq1"
      LET g_sql = "SELECT xmdiseq,xmdiseq1,xmdi001,xmdi002,xmdi003,xmdi004,xmdi005,",
                  "       xmdi006,xmdi007,xmdi008,xmdi009,xmdi010,",
                  "       xmdi011,xmdi013",
                  "  FROM xmdi_t",
                  " WHERE xmdient = '",g_enterprise,"'",
                  "   AND xmdidocno = '",p_xmdl001,"'",
                  "   AND xmdiseq = '",p_xmdl002,"'",
                  " ORDER BY xmdiseq1"
      #160512-00004#2-mod-(E)
      PREPARE auto_import3_pre FROM g_sql
      DECLARE auto_import3_cur CURSOR FOR auto_import3_pre

      #161205-00025#10 161219 by lori add---(S)
      LET l_xmdl003 = ''
      LET l_xmdl004 = ''
      LET l_xmdl005 = ''
      LET l_xmdl006 = ''
      
      SELECT xmdl003,xmdl004,xmdl005,xmdl006 INTO l_xmdl003,l_xmdl004,l_xmdl005,l_xmdl006
        FROM xmdl_t
       WHERE xmdlent = g_enterprise
         AND xmdldocno = g_xmdk_m.xmdkdocno
         AND xmdlseq = p_xmdlseq  
      #161205-00025#10 161219 by lori add---(E)
      
      LET l_n = 1
      INITIALIZE l_xmdm.* TO NULL
      #160512-00004#2--add-'l_xmdm.xmdmseq,l_xmdm.xmdmseq1,'
      FOREACH auto_import3_cur INTO l_xmdm.xmdmseq,l_xmdm.xmdmseq1,l_xmdm.xmdm001,l_xmdm.xmdm002,l_xmdm.xmdm003,l_xmdm.xmdm004,l_xmdm.xmdm005,
                                    l_xmdm.xmdm006,l_xmdm.xmdm007,l_xmdm.xmdm008,l_xmdm.xmdm009,l_xmdm.xmdm010,
                                    l_xmdm.xmdm011,l_xmdm.xmdm033
      
         IF SQLCA.sqlcode THEN
            LET g_errno = SQLCA.sqlcode
            EXIT FOREACH
         END IF      
         
         #檢核不可大於(xmdi009-xmdi012-已登打出貨單未確認的數量) 
         CALL s_axmt540_get_max_ship_qty1('','',
                                          l_xmdm.xmdm005,l_xmdm.xmdm006,l_xmdm.xmdm007,l_xmdm.xmdm033,
                                          p_xmdl001,p_xmdl002) RETURNING l_can_ship
         
         #150917-00001#3  2016/01/21  By earl add s
         #多角可續拋量
         CALL s_aic_carry_continue_qty(g_site,g_xmdk_m.xmdk044,'1',g_xmdl.xmdl003,g_xmdl.xmdl004,g_xmdl.xmdl005,g_xmdl.xmdl006,l_xmdm.xmdm007,'','')
         RETURNING l_chk,l_qty,l_qty_batch
         
         IF l_chk THEN
            IF l_qty_batch < l_can_ship THEN
               LET l_can_ship = l_qty_batch
            END IF
         END IF
         #150917-00001#3  2016/01/21  By earl add s
         
         IF l_can_ship < l_xmdm.xmdm009 THEN
            IF l_can_ship > 0 THEN
               LET l_xmdm.xmdm009 = l_can_ship
               #出貨數量取位
               CALL s_aooi250_take_decimals(l_xmdm.xmdm008,l_xmdm.xmdm009) RETURNING l_success,l_xmdm.xmdm009
     
               #推算參考數量
               IF NOT cl_null(l_xmdm.xmdm001) AND NOT cl_null(l_xmdm.xmdm008) AND
                  NOT cl_null(l_xmdm.xmdm010) AND NOT cl_null(l_xmdm.xmdm009) THEN
                  #161205-00025#10 161219 by lori add---(S)
                  IF l_xmdm.xmdm008 = l_xmdm.xmdm011 THEN 
                     LET l_xmdm.xmdm011 = l_xmdm.xmdm009
                  ELSE   
                  #161205-00025#10 161219 by lori add---(E)
                     CALL s_aooi250_convert_qty(l_xmdm.xmdm001,l_xmdm.xmdm008,l_xmdm.xmdm010,l_xmdm.xmdm009)
                     RETURNING l_success,l_xmdm.xmdm011
                  END IF   #161205-00025#10 161219 by lori add    
               ELSE
                  LET l_xmdm.xmdm011 = ''
               END IF
     
            ELSE 
               CONTINUE FOREACH
            END IF
         END IF
     
         #產品特徵
         IF cl_null(l_xmdm.xmdm002) THEN
            LET l_xmdm.xmdm002 = ' '
         END IF
     
         IF cl_null(l_xmdm.xmdm005) THEN
            CALL axmt540_xmdl014_default(l_xmdm.xmdm005,l_xmdm.xmdm006)
            RETURNING l_xmdm.xmdm005,l_xmdm.xmdm006  #dorislai-20150824-add
            
            #預帶料件預設值
            #160512-00004#2-mod-(S)
#            CALL s_axmt540_materials_search(g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdk007,l_xmdm.xmdm001,l_xmdm.xmdm002)
#            RETURNING l_xmdl.xmdl007,l_xmdl.xmdl010,l_xmdl.xmdl017,l_xmdl.xmdl019,l_xmdl.xmdl021,l_xmdl.xmdl014,l_xmdl.xmdl015
            CALL axmt540_materials_search_1(g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdk007,g_xmdk_m.xmdkdocno,l_xmdm.xmdmseq,l_xmdm.xmdmseq1,l_xmdm.xmdm001,l_xmdm.xmdm002,l_xmdm.xmdm007,l_xmdm.xmdm009,l_xmdm.xmdm008)
               RETURNING l_xmdl.xmdl007,l_xmdl.xmdl010,l_xmdl.xmdl017,l_xmdl.xmdl019,l_xmdl.xmdl021,l_xmdl.xmdl014,l_xmdl.xmdl015,l_xmdl.xmdl016,l_xmdl.xmdl052
            #160512-00004#2-mod-(E)
            IF cl_null(l_xmdm.xmdm005) THEN
               LET l_xmdm.xmdm005 = l_xmdl.xmdl014    #預設庫位
               IF cl_null(l_xmdm.xmdm006) THEN
                  LET l_xmdm.xmdm006 = l_xmdl.xmdl015   #預設儲位
               END IF
               #160512-00004#2-add-(S)
               IF cl_null(l_xmdm.xmdm007) THEN  #批號
                  LET l_xmdm.xmdm007 = l_xmdl.xmdl016
               END IF
               IF cl_null(l_xmdm.xmdm033) THEN  #庫存管理特徵
                  LET l_xmdm.xmdm033 = l_xmdl.xmdl052
               END IF
               #160512-00004#2-add-(E)
               
            END IF
         
         END IF
         #160408-00035#7---add---begin
        
        #161205-00025#10 161219 by lori mark---(S)
        ##效能優化,遷至迴圈之前
        #SELECT xmdl003,xmdl004,xmdl005,xmdl006 INTO l_xmdl003,l_xmdl004,l_xmdl005,l_xmdl006
        #  FROM xmdl_t
        # WHERE xmdlent = g_enterprise
        #   AND xmdldocno = g_xmdk_m.xmdkdocno
        #   AND xmdlseq = p_xmdlseq               
        #161205-00025#10 161219 by lori mark---(E)   
            
         CALL s_inventory_unit(g_site,l_xmdm.xmdm001,l_xmdm.xmdm008,l_xmdm.xmdm009,g_site)
           RETURNING l_success,l_xmdr007,l_qty1
         CALL s_axmt540_get_xmdr008_xmdr009(l_xmdl003,l_xmdl004,l_xmdl005,l_xmdl006,l_xmdm.xmdm001,l_xmdm.xmdm002,l_xmdm.xmdm033,l_xmdm.xmdm005,l_xmdm.xmdm006,l_xmdm.xmdm007,l_xmdr007) 
            RETURNING l_xmdm.xmdm034         
         IF l_xmdm.xmdm034 > l_qty1 THEN 
             LET l_xmdm.xmdm034 = l_qty1
         END IF
         LET l_xmdm.xmdm035 = l_qty1 - l_xmdm.xmdm034
         #160408-00035#7---add---end      
         INSERT INTO xmdm_t (xmdment,xmdmsite,xmdmdocno,xmdmseq,xmdmseq1,
                             xmdm001,xmdm002,xmdm003,xmdm004,xmdm005,
                             xmdm006,xmdm007,xmdm008,xmdm009,xmdm010,
                             xmdm011,xmdm012,xmdm013,xmdm014,
                             xmdm033,xmdm034,xmdm035)    #160408-00035#7 xmdm034,xmdm035
              VALUES (g_enterprise,g_site,g_xmdk_m.xmdkdocno,p_xmdlseq,l_n,
                      l_xmdm.xmdm001,l_xmdm.xmdm002,l_xmdm.xmdm003,l_xmdm.xmdm004,l_xmdm.xmdm005,
                      l_xmdm.xmdm006,l_xmdm.xmdm007,l_xmdm.xmdm008,l_xmdm.xmdm009,l_xmdm.xmdm010,
                      l_xmdm.xmdm011,0,0,0,
                      l_xmdm.xmdm033,l_xmdm.xmdm034,l_xmdm.xmdm035)
         IF SQLCA.sqlcode THEN
            LET g_errno = SQLCA.sqlcode
            EXIT FOREACH
         END IF
         #150821-xianghui
         CALL s_axmt540_inao_copy(p_xmdl001,p_xmdl002,'2',l_xmdm.xmdm033,l_xmdm.xmdm005,l_xmdm.xmdm006,l_xmdm.xmdm007,g_xmdk_m.xmdkdocno,p_xmdlseq,l_n,'1','Y','2') RETURNING l_success   
         IF l_success THEN     
            CALL s_axmt540_update_inao(g_xmdk_m.xmdkdocno,p_xmdlseq,l_n,p_xmdl001,p_xmdl002,'1','1') RETURNING l_success 
         END IF         
         #150821-xianghui
        
         LET l_n = l_n + 1
      END FOREACH
      
      #僅有一個項序符合，代表已無多庫儲批
      IF l_n <= 2 THEN
         LET r_only = TRUE
         LET r_xmdm005 = l_xmdm.xmdm005 #庫位
         LET r_xmdm006 = l_xmdm.xmdm006 #儲位
         LET r_xmdm007 = l_xmdm.xmdm007 #批號
         LET r_xmdm033 = l_xmdm.xmdm033 #庫存管理特徵
      ELSE
         LET r_only = FALSE
      END IF
   END IF
   
   RETURN r_only,r_xmdm005,r_xmdm006,r_xmdm007,r_xmdm033
END FUNCTION
################################################################################
# Descriptions...: 客戶編號帶值
# Memo...........: 自動帶出客戶預設資料
# Usage..........: CALL axmt540_xmdk007_default()
#                  
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 140227 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_xmdk007_default()
   DEFINE l_xmdk       RECORD
      xmdk003             LIKE xmdk_t.xmdk003,   #業務人員   #2015/03/04 by stellar add
      xmdk004             LIKE xmdk_t.xmdk004,   #業務部門   #2015/03/04 by stellar add
      xmdk010             LIKE xmdk_t.xmdk010,   #收款條件
      xmdk011             LIKE xmdk_t.xmdk011,   #交易條件
      xmdk012             LIKE xmdk_t.xmdk012,   #稅別
      xmdk015             LIKE xmdk_t.xmdk015,   #發票類型
      xmdk016             LIKE xmdk_t.xmdk016,   #幣別
      xmdk018             LIKE xmdk_t.xmdk018,   #取價方式
      xmdk022             LIKE xmdk_t.xmdk022,   #運輸方式
      xmdk023             LIKE xmdk_t.xmdk023,   #交運起點
      xmdk024             LIKE xmdk_t.xmdk024,   #交運終點
      xmdk030             LIKE xmdk_t.xmdk030,   #銷售通路
      xmdk031             LIKE xmdk_t.xmdk031,   #銷售分類
      xmdk042             LIKE xmdk_t.xmdk042,   #內外銷
      xmdk043             LIKE xmdk_t.xmdk043    #取匯率方式
                       END RECORD

   DEFINE l_success       LIKE type_t.num5
   DEFINE l_oodbl004      LIKE oodbl_t.oodbl004
   DEFINE l_oodb005       LIKE oodb_t.oodb005
   DEFINE l_oodb006       LIKE oodb_t.oodb006
   DEFINE l_oodb011       LIKE oodb_t.oodb011
   DEFINE l_slip          LIKE ooba_t.ooba002    #150721-00001#1 160118 earl add
   
   IF NOT cl_null(g_xmdk_m.xmdk007) THEN
      #150721-00001#1 160118 earl add s
      CALL s_aooi200_get_slip(g_xmdk_m.xmdkdocno) RETURNING l_success,l_slip
      #150721-00001#1 160118 earl add e
   
      CALL s_axmt540_client_default(g_xmdk_m.xmdk007,g_xmdk_m.xmdk003,g_xmdk_m.xmdk004) RETURNING l_xmdk.*
      
      #2015/03/04 by stellar add ----- (S)
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',l_slip,'xmdk003') THEN #150721-00001#1 160118 earl add
         LET g_xmdk_m.xmdk003 = l_xmdk.xmdk003
      END IF
      
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',l_slip,'xmdk004') THEN #150721-00001#1 160118 earl add
         LET g_xmdk_m.xmdk004 = l_xmdk.xmdk004
      END IF
      #2015/03/04 by stellar add ----- (E)
      
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',l_slip,'xmdk011') THEN #150721-00001#1 160118 earl add
         LET g_xmdk_m.xmdk011 = l_xmdk.xmdk011
      END IF
      
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',l_slip,'xmdk012') THEN #150721-00001#1 160118 earl add
         LET g_xmdk_m.xmdk012 = l_xmdk.xmdk012
      END IF
      
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',l_slip,'xmdk015') THEN #150721-00001#1 160118 earl add
         LET g_xmdk_m.xmdk015 = l_xmdk.xmdk015
      END IF
      
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',l_slip,'xmdk016') THEN #150721-00001#1 160118 earl add
         LET g_xmdk_m.xmdk016 = l_xmdk.xmdk016
      END IF
      
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',l_slip,'xmdk022') THEN #150721-00001#1 160118 earl add
         LET g_xmdk_m.xmdk022 = l_xmdk.xmdk022
      END IF
      
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',l_slip,'xmdk023') THEN #150721-00001#1 160118 earl add
         LET g_xmdk_m.xmdk023 = l_xmdk.xmdk023
      END IF
      
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',l_slip,'xmdk024') THEN #150721-00001#1 160118 earl add
         LET g_xmdk_m.xmdk024 = l_xmdk.xmdk024
      END IF
      
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',l_slip,'xmdk030') THEN #150721-00001#1 160118 earl add
         LET g_xmdk_m.xmdk030 = l_xmdk.xmdk030
      END IF
      
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',l_slip,'xmdk031') THEN #150721-00001#1 160118 earl add
         LET g_xmdk_m.xmdk031 = l_xmdk.xmdk031
      END IF
      
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',l_slip,'xmdk042') THEN #150721-00001#1 160118 earl add
         LET g_xmdk_m.xmdk042 = l_xmdk.xmdk042
      END IF
      
      IF NOT s_aooi200_chk_doc_fields(g_site,'1',l_slip,'xmdk043') THEN #150721-00001#1 160118 earl add
         LET g_xmdk_m.xmdk043 = l_xmdk.xmdk043
      END IF
      
      #160623-00014#1-mod-(S)
#      IF g_prog = 'axmt541' THEN   #取價方式只有無訂單出貨才帶出，其他回抓訂單
#         LET g_xmdk_m.xmdk018 = l_xmdk.xmdk018
#      END IF
      IF g_prog MATCHES 'axmt541' THEN   #取價方式只有無訂單出貨才帶出，其他回抓訂單
         LET g_xmdk_m.xmdk018 = l_xmdk.xmdk018
      END IF
      #160623-00014#1-mod-(E)
      
      #檢查收款條件
      IF NOT s_axmt540_receive_condition_chk(g_xmdk_m.xmdk007,l_xmdk.xmdk010) THEN
         LET g_xmdk_m.xmdk010 = ''
      ELSE
         LET g_xmdk_m.xmdk010 = l_xmdk.xmdk010
      END IF

      CALL axmt540_xmdk018_ref()

      CALL s_desc_get_ooib002_desc(g_xmdk_m.xmdk010) RETURNING g_xmdk_m.xmdk010_desc

      CALL s_desc_get_acc_desc('238',g_xmdk_m.xmdk011) RETURNING g_xmdk_m.xmdk011_desc

      CALL s_desc_get_tax_desc1(g_site,g_xmdk_m.xmdk012) RETURNING g_xmdk_m.xmdk012_desc

      CALL s_desc_get_invoice_type_desc1(g_site,g_xmdk_m.xmdk015) RETURNING g_xmdk_m.xmdk015_desc

      CALL s_desc_get_currency_desc(g_xmdk_m.xmdk016) RETURNING g_xmdk_m.xmdk016_desc

      CALL s_desc_get_acc_desc('263',g_xmdk_m.xmdk022) RETURNING g_xmdk_m.xmdk022_desc

      CALL axmt540_location_ref(g_xmdk_m.xmdk022,g_xmdk_m.xmdk023) RETURNING g_xmdk_m.xmdk023_desc

      CALL axmt540_location_ref(g_xmdk_m.xmdk022,g_xmdk_m.xmdk024) RETURNING g_xmdk_m.xmdk024_desc
      
      #160621-00003#3 20160629 modify by beckxie---S
      #CALL s_desc_get_acc_desc('275',g_xmdk_m.xmdk030) RETURNING g_xmdk_m.xmdk030_desc
      CALL s_desc_get_oojdl003_desc(g_xmdk_m.xmdk030) RETURNING g_xmdk_m.xmdk030_desc
      #160621-00003#3 20160629 modify by beckxie---E

      CALL s_desc_get_acc_desc('295',g_xmdk_m.xmdk031) RETURNING g_xmdk_m.xmdk031_desc

      #取得稅別、單價含稅否
      CALL s_tax_chk(g_site,g_xmdk_m.xmdk012) RETURNING l_success,l_oodbl004,l_oodb005,l_oodb006,l_oodb011
      
      IF l_success THEN
         LET g_xmdk_m.xmdk013 = l_oodb006
         LET g_xmdk_m.xmdk014 = l_oodb005
      ELSE
         LET g_xmdk_m.xmdk013 = ''
         LET g_xmdk_m.xmdk014 = ''
      END IF
      
      #帶出匯率
      #modify--151118-00012#1 By shiun  更改取匯率方式--(S)
      CALL axmt540_xmda_xmdk017() RETURNING g_xmdk_m.xmdk017
      IF cl_null(g_xmdk_m.xmdk017) THEN
         CALL axmt540_get_ratedate() RETURNING g_ratedate
         CALL s_axmt540_get_exchange(g_xmdk_m.xmdk042,g_xmdk_m.xmdk016,g_ratedate) RETURNING g_xmdk_m.xmdk017
      END IF
      #modify--151118-00012#1 By shiun  更改取匯率方式--(E)
      
      #2015/03/04 by stellar add ----- (S)
      CALL s_desc_get_person_desc(g_xmdk_m.xmdk003) RETURNING g_xmdk_m.xmdk003_desc
      CALL s_desc_get_department_desc(g_xmdk_m.xmdk004) RETURNING g_xmdk_m.xmdk004_desc
      #2015/03/04 by stellar add ----- (E)

      LET g_xmdk_m_o.* = g_xmdk_m.*
      DISPLAY BY NAME g_xmdk_m.*

   END IF
END FUNCTION
################################################################################
# Descriptions...: 帶出來源單頭資料
# Memo...........:
# Usage..........: CALL axmt540_source_default(p_docno,p_type)
#                  
# Input parameter: p_docno   #來源單號(出通單,訂單)
#                : p_type    #來源類型(1.出通單2.訂單)
# Return code....: 
#                :
# Date & Author..: 140703 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_source_default(p_docno,p_type)
   DEFINE p_docno    LIKE xmdk_t.xmdkdocno
   DEFINE p_type     LIKE type_t.chr1
   DEFINE l_xmdk035  LIKE xmdk_t.xmdk035
   DEFINE l_type     LIKE type_t.num5      #161207-00033#30-add
   DEFINE l_docno    LIKE xmdk_t.xmdkdocno #161207-00033#30-add
   DEFINE l_cnt      LIKE type_t.num5
   
   LET l_xmdk035 = ''
 
   CASE p_type
      WHEN '1'   #出通單
         SELECT xmdg001,xmdg034,
                xmdg004,xmdg005,xmdg006,xmdg007,xmdg008,
                xmdg009,xmdg010,xmdg011,xmdg012,xmdg013,
                xmdg014,xmdg015,xmdg016,
                xmdg017,xmdg018,xmdg019,xmdg020,xmdg021,
                xmdg028,xmdg023,xmdg024,xmdg025,xmdg026,
                xmdg027,xmdg030,xmdg031,
                xmdg032,xmdg033,
                xmdg056,
                xmdg202,
                xmdg002,xmdg003,                     #150408---earl---add
                xmdg055
           INTO g_xmdk_m.xmdk002,g_xmdk_m.xmdk045,
                g_xmdk_m.xmdk006,g_xmdk_m.xmdk007,g_xmdk_m.xmdk008,g_xmdk_m.xmdk009,g_xmdk_m.xmdk010,
                g_xmdk_m.xmdk011,g_xmdk_m.xmdk012,g_xmdk_m.xmdk013,g_xmdk_m.xmdk014,g_xmdk_m.xmdk015,
                g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,g_xmdk_m.xmdk020,
                g_xmdk_m.xmdk021,g_xmdk_m.xmdk022,g_xmdk_m.xmdk023,g_xmdk_m.xmdk024,g_xmdk_m.xmdk025,
                g_xmdk_m.xmdk026,g_xmdk_m.xmdk027,g_xmdk_m.xmdk028,g_xmdk_m.xmdk029,g_xmdk_m.xmdk030,
                g_xmdk_m.xmdk031,g_xmdk_m.xmdk033,g_xmdk_m.xmdk034,
                g_xmdk_m.xmdk042,g_xmdk_m.xmdk043,
                g_xmdk_m.xmdk044,
                g_xmdk_m.xmdk202,
                g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,   #150408---earl---add
                l_xmdk035
           FROM xmdg_t
          WHERE xmdgent = g_enterprise
            AND xmdgdocno = p_docno

         #取價方式、優惠條件
         SELECT xmda017,xmda018
           INTO g_xmdk_m.xmdk018,g_xmdk_m.xmdk019
           FROM xmda_t
          WHERE xmdaent = g_enterprise
            AND xmdadocno = g_xmdk_m.xmdk006

          IF g_xmdk_m.xmdk028 = 'Y' THEN      #包裝單製作不可同時為Y
             LET g_xmdk_m.xmdk028 = 'N'
          END IF

          IF g_xmdk_m.xmdk029 = 'Y' THEN      #Invoice製作不可同時為Y
             LET g_xmdk_m.xmdk029 = 'N'
          END IF

         #多角處理
         CALL axmt540_xmdk045_default('1',g_xmdk_m.xmdk045,g_xmdk_m.xmdk044,l_xmdk035) RETURNING g_xmdk_m.xmdk045
         
         #150917-00001#3  2016/01/19 By earl mark s
#         #若多角流程代碼為中斷續拋
#         IF axmt540_break_continue(g_xmdk_m.xmdk044) THEN
#            CALL axmt540_sel_xmdk035('1',p_docno,g_xmdk_m.xmdk035) RETURNING l_cnt,g_xmdk_m.xmdk035
#         ELSE
            LET g_xmdk_m.xmdk035 = ''
#         END IF
         #150917-00001#3  2016/01/19 By earl mark e
         

      WHEN '2'   #訂單
         SELECT xmda005,xmda006,
                xmda004,xmda021,xmda022,xmda009,
                xmda010,xmda011,xmda012,xmda013,xmda035,
                xmda015,xmda016,xmda017,xmda018,xmda036,
                xmda025,xmda020,xmda037,xmda038,
                xmda044,xmda023,
                xmda024,xmda032,
                xmda048,xmda049,
                xmda050,
                xmda203,
                xmda002,xmda003,                     #150408---earl---add
                xmda031,
                xmda028                              #add--160531-00047#1 By shiun
           INTO g_xmdk_m.xmdk002,g_xmdk_m.xmdk045,
                g_xmdk_m.xmdk007,g_xmdk_m.xmdk008,g_xmdk_m.xmdk009,g_xmdk_m.xmdk010,
                g_xmdk_m.xmdk011,g_xmdk_m.xmdk012,g_xmdk_m.xmdk013,g_xmdk_m.xmdk014,g_xmdk_m.xmdk015,
                g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,g_xmdk_m.xmdk018,g_xmdk_m.xmdk019,g_xmdk_m.xmdk020,
                g_xmdk_m.xmdk021,g_xmdk_m.xmdk022,g_xmdk_m.xmdk023,g_xmdk_m.xmdk024,
                g_xmdk_m.xmdk027,g_xmdk_m.xmdk030,
                g_xmdk_m.xmdk031,g_xmdk_m.xmdk034,
                g_xmdk_m.xmdk042,g_xmdk_m.xmdk043,
                g_xmdk_m.xmdk044,
                g_xmdk_m.xmdk202,
                g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,   #150408---earl---add
                l_xmdk035,
                g_xmdk_m.xmdk047                     #add--160531-00047#1 By shiun
           FROM xmda_t
          WHERE xmdaent = g_enterprise
            AND xmdadocno = p_docno
            
         #多角處理
         CALL axmt540_xmdk045_default('2',g_xmdk_m.xmdk045,g_xmdk_m.xmdk044,l_xmdk035) RETURNING g_xmdk_m.xmdk045
         
         #150917-00001#3  2016/01/19 By earl mark s
#         #若多角流程代碼為中斷續拋
#         IF axmt540_break_continue(g_xmdk_m.xmdk044) THEN
#            CALL axmt540_sel_xmdk035('2',p_docno,g_xmdk_m.xmdk035) RETURNING l_cnt,g_xmdk_m.xmdk035
#         ELSE
            LET g_xmdk_m.xmdk035 = ''
#         END IF
         #150917-00001#3  2016/01/19 By earl mark e
         
   END CASE
   
   IF g_xmdk_m.xmdk043 <> '1' THEN    #若不為1:依訂單日匯率，重算匯率
      #帶出匯率
      #modify--151118-00012#1 By shiun  更改取匯率方式--(S)
      CALL axmt540_xmda_xmdk017() RETURNING g_xmdk_m.xmdk017
      IF cl_null(g_xmdk_m.xmdk017) THEN
         CALL axmt540_get_ratedate() RETURNING g_ratedate
         CALL s_axmt540_get_exchange(g_xmdk_m.xmdk042,g_xmdk_m.xmdk016,g_ratedate) RETURNING g_xmdk_m.xmdk017
      END IF
      #modify--151118-00012#1 By shiun  更改取匯率方式--(E)
   END IF

   CALL axmt540_xmdk021_ref()
   CALL axmt540_xmdk018_ref()

   CALL s_desc_get_person_desc(g_xmdk_m.xmdk003) RETURNING g_xmdk_m.xmdk003_desc      #150408---earl---add
   CALL s_desc_get_department_desc(g_xmdk_m.xmdk004) RETURNING g_xmdk_m.xmdk004_desc  #150408---earl---add

   CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk007) RETURNING g_xmdk_m.xmdk007_desc

   CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk008) RETURNING g_xmdk_m.xmdk008_desc

   CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk009) RETURNING g_xmdk_m.xmdk009_desc
   
   CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk202) RETURNING g_xmdk_m.xmdk202_desc

   CALL s_desc_get_ooib002_desc(g_xmdk_m.xmdk010) RETURNING g_xmdk_m.xmdk010_desc

   CALL s_desc_get_acc_desc('238',g_xmdk_m.xmdk011) RETURNING g_xmdk_m.xmdk011_desc

   CALL s_desc_get_tax_desc1(g_site,g_xmdk_m.xmdk012) RETURNING g_xmdk_m.xmdk012_desc

   CALL s_desc_get_invoice_type_desc1(g_site,g_xmdk_m.xmdk015) RETURNING g_xmdk_m.xmdk015_desc

   CALL s_desc_get_currency_desc(g_xmdk_m.xmdk016) RETURNING g_xmdk_m.xmdk016_desc

   CALL s_desc_ooid001_desc(g_xmdk_m.xmdk019) RETURNING g_xmdk_m.xmdk019_desc

   CALL s_desc_get_trading_partner_full_desc(g_xmdk_m.xmdk020) RETURNING g_xmdk_m.xmdk020_desc

   CALL s_desc_get_acc_desc('263',g_xmdk_m.xmdk022) RETURNING g_xmdk_m.xmdk022_desc

   CALL axmt540_location_ref(g_xmdk_m.xmdk022,g_xmdk_m.xmdk023) RETURNING g_xmdk_m.xmdk023_desc

   CALL axmt540_location_ref(g_xmdk_m.xmdk022,g_xmdk_m.xmdk024) RETURNING g_xmdk_m.xmdk024_desc

   #160621-00003#3 20160629 modify by beckxie---S
   #CALL s_desc_get_acc_desc('275',g_xmdk_m.xmdk030) RETURNING g_xmdk_m.xmdk030_desc
   CALL s_desc_get_oojdl003_desc(g_xmdk_m.xmdk030) RETURNING g_xmdk_m.xmdk030_desc
   #160621-00003#3 20160629 modify by beckxie---E

   CALL s_desc_get_acc_desc('295',g_xmdk_m.xmdk031) RETURNING g_xmdk_m.xmdk031_desc

   CALL s_desc_get_acc_desc('209',g_xmdk_m.xmdk033) RETURNING g_xmdk_m.xmdk033_desc

   CALL s_desc_get_acc_desc('297',g_xmdk_m.xmdk034) RETURNING g_xmdk_m.xmdk034_desc

   CALL s_desc_get_stock_desc(g_site,g_xmdk_m.xmdk039) RETURNING g_xmdk_m.xmdk039_desc

   CALL s_desc_get_stock_desc(g_site,g_xmdk_m.xmdk040) RETURNING g_xmdk_m.xmdk040_desc

   CALL axmt540_xmdk027_ref(g_xmdk_m.xmdk007,g_xmdk_m.xmdk027) RETURNING  g_xmdk_m.xmdk027_desc
   
   #add--160531-00047#1 By shiun--(S)
   LET g_pmaa004 = ''
   SELECT pmaa004 INTO g_pmaa004 FROM pmaa_t WHERE pmaaent = g_enterprise AND pmaa001 = g_xmdk_m.xmdk007
   IF g_pmaa004 MATCHES '[24]' THEN
#      CALL axmt540_xmdk047_ref(g_xmdk_m.xmdk047,'') RETURNING g_xmdk_m.xmdk007_desc   #161207-00033#30   mark
      CALL axmt540_xmdk047_ref(g_xmdk_m.xmdk047,'') RETURNING g_xmdk_m.xmdk007_desc   #161207-00033#30   mod
   ELSE
      CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk007) RETURNING g_xmdk_m.xmdk007_desc
   END IF
   #add--160531-00047#1 By shiun--(E)
   #add--161101-00091#1 By shiun--(S)
   IF g_xmdk_m.xmdk042 = '2' THEN
      LET g_xmdk_m.xmdk032 = g_today
   END IF
   #add--161101-00091#1 By shiun--(E)
   LET g_xmdk_m_o.* = g_xmdk_m.*
      
   DISPLAY BY NAME g_xmdk_m.*
    
END FUNCTION
################################################################################
# Descriptions...: 由訂單自動帶出單身
# Memo...........:
# Usage..........: CALL axmt540_auto_insert_2(p_date)
#                  
# Input parameter: p_date     排除約定交貨日期
#                : 
# Return code....: r_success  執行結果
#                : 
# Date & Author..: 140303 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_auto_insert_2(p_date)
   DEFINE p_date       LIKE xmdk_t.xmdkdocdt
   DEFINE r_success    LIKE type_t.num5      
   DEFINE l_seq        LIKE type_t.num5
   DEFINE l_xmddseq    LIKE xmdd_t.xmddseq
   DEFINE l_xmddseq1   LIKE xmdd_t.xmddseq1
   DEFINE l_xmddseq2   LIKE xmdd_t.xmddseq2
   DEFINE l_xmdd011    LIKE xmdd_t.xmdd011
   DEFINE l_msg        STRING
   #add--160408-00035#5 By shiun--(S)
   DEFINE l_xmdr_cnt   LIKE type_t.num5   
   DEFINE l_xmdr_qty   LIKE xmdr_t.xmdr008
   DEFINE l_qty        LIKE xmdr_t.xmdr008
   DEFINE l_diff_qty   LIKE xmdr_t.xmdr008
   DEFINE l_success    LIKE type_t.num5
   DEFINE l_xmdr003    LIKE xmdr_t.xmdr003   #add--160927-00022#1 By shiun
   #add--160408-00035#5 By shiun--(E)
   
   #add--160408-00035#5 By shiun--(S)
   #先將抓取訂單備置明細檔的CURSOR準備好
   #mod--160927-00022#1 By shiun--(S)
#   LET g_sql = " SELECT xmdr004,xmdr005,xmdr006,xmdr010,(xmdr008-xmdr009) ",   
   LET g_sql = " SELECT xmdr004,xmdr005,xmdr006,xmdr010,(xmdr008-xmdr009),xmdr003 ",   
   #mod--160927-00022#1 By shiun--(E)
               "  FROM xmdr_t",
               "  WHERE xmdrent = ",g_enterprise,
               "    AND xmdrdocno = ? AND xmdrseq = ? AND xmdrseq1 = ? AND xmdrseq2 = ? "
   PREPARE axmt540_sel_xmdr_rep FROM g_sql
   DECLARE axmt540_sel_xmdr_cur CURSOR FOR axmt540_sel_xmdr_rep
   #add--160408-00035#5 By shiun--(E)
   
   LET g_sql = "SELECT xmddseq,xmddseq1,xmddseq2,",
               "       xmdd011",
               #add--160408-00035#5 By shiun--(S)  #查看有沒有硬備置的資料
               "      ,(SELECT COUNT(*) FROM xmdr_t ",
               "         WHERE xmdrent=xmddent AND xmdrsite=xmddsite AND xmdrdocno=xmdddocno",
               "           AND xmdrseq=xmddseq AND xmdrseq1=xmddseq1 AND xmdrseq2=xmddseq2",
               "           AND xmdr004 IS NOT NULL AND xmdr004 <> ' ') xmdr_cnt",
               "      ,(SELECT SUM(xmdr008-xmdr009) FROM xmdr_t ",
               "         WHERE xmdrent=xmddent AND xmdrsite=xmddsite AND xmdrdocno=xmdddocno",
               "           AND xmdrseq=xmddseq AND xmdrseq1=xmddseq1 AND xmdrseq2=xmddseq2",
               "           AND xmdr004 IS NOT NULL AND xmdr004 <> ' ') xmdr_qty",
              #add--160408-00035#5 By shiun--(E)
               "  FROM xmdc_t,xmdd_t",
               " WHERE xmdcent = xmddent",
               "   AND xmdcdocno = xmdddocno",
               "   AND xmdcseq = xmddseq",
               "   AND xmddent = '",g_enterprise,"'",
               "   AND xmdddocno = ?",
               "   AND xmdc045 = '1'",
               "   AND xmdcunit = '",g_site,"'",
               " ORDER BY xmddseq,xmddseq1,xmddseq2"
   
   PREPARE auto_import2_pre FROM g_sql
   DECLARE auto_import2_cur CURSOR FOR auto_import2_pre   

   LET l_xmdd011 = ''   
   LET l_seq = 1
   
   CALL cl_showmsg_init()
   
   LET r_success = TRUE
   LET l_xmdr_cnt = 0   #add--160408-00035#5 By shiun
   LET l_xmdr_qty = 0   #add--160408-00035#5 By shiun
   OPEN auto_import2_cur USING g_xmdk_m.xmdk006
   FOREACH auto_import2_cur INTO l_xmddseq,l_xmddseq1,l_xmddseq2,l_xmdd011
                                ,l_xmdr_cnt,l_xmdr_qty   #add--160408-00035#5 By shiun
      IF SQLCA.sqlcode THEN
         CALL cl_errmsg('FOREACH','','',SQLCA.sqlcode,1)
         LET r_success = FALSE
         EXIT FOREACH
      END IF
      
      #替換錯誤訊息
      CALL cl_getmsg_parm('axm-00219',g_dlang,g_xmdk_m.xmdk006 ||'|'|| l_xmddseq ||'|'|| l_xmddseq1 ||'|'|| l_xmddseq2)
      RETURNING l_msg  #單號：%1 項次：%2 項序：%3 分批序：%4

      IF NOT cl_null(p_date) THEN
         IF l_xmdd011 > p_date THEN
            #CALL cl_errmsg('',l_msg,'','axm-00222',1) #140718修改為不報錯
            CONTINUE FOREACH
         END IF
      END IF

      LET g_xmdlseq = l_seq  #160512-00004#2-add
      CALL axmt540_xmdd_search('1',g_xmdk_m.xmdk006,l_xmddseq,l_xmddseq1,l_xmddseq2)
      #add--160408-00035#5 By shiun--(S)
      #如果訂單有做硬備置，那麼出貨單產生單身資料的時候，要自動帶出備置的庫儲批與數量
      #當有做硬備置(l_xmdr_cnt>0) 且 訂單數量<>硬備置數量時 , 差異數量應該再寫一筆進多倉儲批
      #例如:訂單數量100，硬備置A倉數量25、B倉數量25
      CASE 
         WHEN l_xmdr_cnt = 1   #備置1筆倉儲批 
            IF l_xmdr_cnt > 0 AND g_xmdl.xmdl018 <> l_xmdr_qty THEN
               LET g_xmdl.xmdl013 = 'Y'   #多庫儲批
               LET g_xmdl.xmdl014 = ''
               LET g_xmdl.xmdl015 = ''
               LET g_xmdl.xmdl016 = ''
            ELSE
               LET g_xmdl.xmdl013 = 'N'   #多庫儲批
               OPEN axmt540_sel_xmdr_cur USING g_xmdk_m.xmdk006,l_xmddseq,l_xmddseq1,l_xmddseq2
               FETCH axmt540_sel_xmdr_cur INTO g_xmdl.xmdl014,g_xmdl.xmdl015,g_xmdl.xmdl016,
               #mod--160927-00022#1 By shiun--(S)
                                               g_xmdl.xmdl017,g_xmdl.xmdl018,g_xmdl.xmdl052
#                                               g_xmdl.xmdl017,g_xmdl.xmdl018
               #mod--160927-00022#1 By shiun--(E)
            END IF
         WHEN l_xmdr_cnt > 1   #備置多筆倉儲批
            LET g_xmdl.xmdl013 = 'Y'   #多庫儲批
            LET g_xmdl.xmdl014 = ''
            LET g_xmdl.xmdl015 = ''
            LET g_xmdl.xmdl016 = ''
         OTHERWISE             #沒有備置
            LET g_xmdl.xmdl013 = 'N'   #多庫儲批
      END CASE
      #add--160408-00035#5 By shiun--(E)
      IF NOT cl_null(g_errno) THEN
         #CALL cl_errmsg('',l_msg,'',g_errno,1)
         LET g_errno = '' #140718修改為不報錯
         CONTINUE FOREACH
      END IF

      #稅額計算                     
      CALL s_axmt540_tax_count('',g_xmdk_m.xmdkdocno,l_seq,g_site,g_xmdl.xmdl025,
                               g_xmdl.xmdl022,g_xmdl.xmdl024,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,
                               g_xmdl.xmdl003,g_xmdl.xmdl004,g_xmdl.xmdl018)
      RETURNING g_xmdl.xmdl027,g_xmdl.xmdl028,g_xmdl.xmdl029

      INSERT INTO xmdl_t (xmdlent,xmdlsite,xmdldocno,xmdlseq,
                          xmdl003,xmdl004,xmdl005,xmdl006,
                          xmdl007,xmdl008,xmdl009,xmdl010,
                          xmdl011,xmdl012,xmdl013,xmdl014,xmdl015,
                          xmdl016,xmdl017,xmdl018,xmdl019,xmdl020,
                          xmdl021,xmdl022,xmdl023,xmdl024,xmdl025,
                          xmdl026,xmdl027,xmdl028,xmdl029,xmdl030,
                          xmdl031,xmdl032,xmdl033,xmdl034,xmdl035,
                          xmdl036,xmdl037,
                          xmdl041,xmdl042,xmdl043,xmdl044,xmdl045,
                          xmdl046,xmdl050,
                          xmdl051,    #150326
                          xmdl052,xmdl056,
                          xmdl087,xmdl088)
           VALUES (g_enterprise,g_site,g_xmdk_m.xmdkdocno,l_seq,
                   g_xmdl.xmdl003,g_xmdl.xmdl004,g_xmdl.xmdl005,g_xmdl.xmdl006,
                   g_xmdl.xmdl007,g_xmdl.xmdl008,g_xmdl.xmdl009,g_xmdl.xmdl010,
                   g_xmdl.xmdl011,g_xmdl.xmdl012,g_xmdl.xmdl013,g_xmdl.xmdl014,g_xmdl.xmdl015,
                   g_xmdl.xmdl016,g_xmdl.xmdl017,g_xmdl.xmdl018,g_xmdl.xmdl019,g_xmdl.xmdl020,
                   g_xmdl.xmdl021,g_xmdl.xmdl022,g_xmdl.xmdl023,g_xmdl.xmdl024,g_xmdl.xmdl025,
                   g_xmdl.xmdl026,g_xmdl.xmdl027,g_xmdl.xmdl028,g_xmdl.xmdl029,g_xmdl.xmdl030,
                   g_xmdl.xmdl031,g_xmdl.xmdl032,g_xmdl.xmdl033,g_xmdl.xmdl034,g_xmdl.xmdl035,
                   g_xmdl.xmdl036,g_xmdl.xmdl037,
                   g_xmdl.xmdl041,g_xmdl.xmdl042,g_xmdl.xmdl043,g_xmdl.xmdl044,g_xmdl.xmdl045,
                   g_xmdl.xmdl046,g_xmdl.xmdl050,
                   g_xmdl.xmdl051,   #150326
                   g_xmdl.xmdl052,g_xmdl.xmdl056,
                   g_xmdl.xmdl087,g_xmdl.xmdl088)
                   
      IF SQLCA.sqlcode THEN
         CALL cl_errmsg('INSERT',l_msg,'',SQLCA.sqlcode,1)
         LET r_success = FALSE
         EXIT FOREACH
      END IF      
            
      #mark--160408-00035#5 By shiun--(S)
      #新增多庫儲批
#      CALL axmt540_01_xmdm_modify('1',l_seq,g_site,g_xmdk_m.xmdkdocno,l_seq,
#                                  g_xmdl.xmdl008,g_xmdl.xmdl009,g_xmdl.xmdl011,g_xmdl.xmdl012,
#                                  g_xmdl.xmdl014,g_xmdl.xmdl015,g_xmdl.xmdl016,g_xmdl.xmdl052,
#                                  g_xmdl.xmdl017,g_xmdl.xmdl018,g_xmdl.xmdl019,g_xmdl.xmdl020,
#                                  '','') RETURNING r_success
#      IF NOT r_success THEN
#         EXIT FOREACH
#      END IF
      #mark--160408-00035#5 By shiun--(E)
      #add--160408-00035#5 By shiun--(S)
      #如果訂單有做硬備置，那麼出通單產生單身資料的時候，要自動帶出備置的庫儲批與數量
      IF g_xmdl.xmdl013 = 'Y' THEN
         #把硬備置的資料繞過一輪
         FOREACH axmt540_sel_xmdr_cur
           USING g_xmdk_m.xmdk006,l_xmddseq,l_xmddseq1,l_xmddseq2
            #mod--160927-00022#1 By shiun--(S)
#            INTO g_xmdl.xmdl014,g_xmdl.xmdl015,g_xmdl.xmdl016,g_xmdl.xmdl017,l_qty
            INTO g_xmdl.xmdl014,g_xmdl.xmdl015,g_xmdl.xmdl016,g_xmdl.xmdl017,l_qty,l_xmdr003
            #mod--160927-00022#1 By shiun--(E)
           
            #推算參考數量
            IF NOT cl_null(g_xmdl.xmdl008) AND NOT cl_null(g_xmdl.xmdl017) AND
               NOT cl_null(g_xmdl.xmdl019) AND NOT cl_null(l_qty) THEN
               
               CALL s_aooi250_convert_qty(g_xmdl.xmdl008,g_xmdl.xmdl017,g_xmdl.xmdl019,l_qty)
               RETURNING l_success,g_xmdl.xmdl020
               LET g_xmdl_d_o.xmdl020 = g_xmdl.xmdl020
            ELSE
               LET g_xmdl.xmdl020 = ''
               LET g_xmdl_d_o.xmdl020 = g_xmdl.xmdl020
            END IF
             
            #推算計價數量
            IF NOT cl_null(g_xmdl.xmdl008) AND NOT cl_null(g_xmdl.xmdl017) AND
               NOT cl_null(g_xmdl.xmdl021) AND NOT cl_null(l_qty) THEN
               
               CALL s_aooi250_convert_qty(g_xmdl.xmdl008,g_xmdl.xmdl017,g_xmdl.xmdl021,l_qty)
               RETURNING l_success,g_xmdl.xmdl022
               LET g_xmdl_d_o.xmdl022 = g_xmdl.xmdl022
            ELSE
               LET g_xmdl.xmdl022 = ''
               LET g_xmdl_d_o.xmdl022 = g_xmdl.xmdl022
            END IF
                                    
            #mod--160927-00022#1 By shiun--(S)
#            CALL axmt540_01_xmdm_insert('1',g_site,g_xmdk_m.xmdkdocno,l_seq,
#                                        g_xmdl.xmdl008,g_xmdl.xmdl009,g_xmdl.xmdl011,g_xmdl.xmdl012,
#                                        g_xmdl.xmdl014,g_xmdl.xmdl015,g_xmdl.xmdl016,g_xmdl.xmdl052,
#                                        g_xmdl.xmdl017,l_qty,g_xmdl.xmdl019,g_xmdl.xmdl020,
#                                        '','') RETURNING l_success
            CALL axmt540_01_xmdm_insert('1',g_site,g_xmdk_m.xmdkdocno,l_seq,
                                        g_xmdl.xmdl008,g_xmdl.xmdl009,g_xmdl.xmdl011,g_xmdl.xmdl012,
                                        g_xmdl.xmdl014,g_xmdl.xmdl015,g_xmdl.xmdl016,l_xmdr003,
                                        g_xmdl.xmdl017,l_qty,g_xmdl.xmdl019,g_xmdl.xmdl020,
                                        '','') RETURNING l_success
            #mod--160927-00022#1 By shiun--(E)
            IF NOT l_success THEN
               LET r_success = FALSE
               EXIT FOREACH
            END IF
         END FOREACH
         #硬備置的都跑完了,比較一下訂單數量與備置數量若有差異,則把剩下的量再寫入一筆倉儲批為空的
         IF g_xmdl.xmdl018 <> l_xmdr_qty THEN
            LET l_diff_qty = g_xmdl.xmdl018 - l_xmdr_qty
            
            #推算參考數量
            IF NOT cl_null(g_xmdl.xmdl008) AND NOT cl_null(g_xmdl.xmdl017) AND
               NOT cl_null(g_xmdl.xmdl019) AND NOT cl_null(l_diff_qty) THEN
               
               CALL s_aooi250_convert_qty(g_xmdl.xmdl008,g_xmdl.xmdl017,g_xmdl.xmdl019,l_diff_qty)
               RETURNING l_success,g_xmdl.xmdl020
               LET g_xmdl_d_o.xmdl020 = g_xmdl.xmdl020
            ELSE
               LET g_xmdl.xmdl020 = ''
               LET g_xmdl_d_o.xmdl020 = g_xmdl.xmdl020
            END IF
             
            #推算計價數量
            IF NOT cl_null(g_xmdl.xmdl008) AND NOT cl_null(g_xmdl.xmdl017) AND
               NOT cl_null(g_xmdl.xmdl021) AND NOT cl_null(l_diff_qty) THEN
               
               CALL s_aooi250_convert_qty(g_xmdl.xmdl008,g_xmdl.xmdl017,g_xmdl.xmdl021,l_diff_qty)
               RETURNING l_success,g_xmdl.xmdl022
               LET g_xmdl_d_o.xmdl022 = g_xmdl.xmdl022
            ELSE
               LET g_xmdl.xmdl022 = ''
               LET g_xmdl_d_o.xmdl022 = g_xmdl.xmdl022
            END IF
                        
            CALL axmt540_01_xmdm_insert('1',g_site,g_xmdk_m.xmdkdocno,l_seq,
                                        g_xmdl.xmdl008,g_xmdl.xmdl009,g_xmdl.xmdl011,g_xmdl.xmdl012,
                                        '','','',g_xmdl.xmdl052,
                                        g_xmdl.xmdl017,l_diff_qty,g_xmdl.xmdl019,g_xmdl.xmdl020,
                                        '','') RETURNING l_success
            IF NOT l_success THEN
               LET r_success = FALSE
               EXIT FOREACH
            END IF
         END IF
      ELSE    #備置1筆倉儲批或沒有備置
         IF NOT axmt540_01_xmdm_modify('1',l_seq,g_site,g_xmdk_m.xmdkdocno,l_seq,
                                       g_xmdl.xmdl008,g_xmdl.xmdl009,g_xmdl.xmdl011,g_xmdl.xmdl012,
                                       g_xmdl.xmdl014,g_xmdl.xmdl015,g_xmdl.xmdl016,g_xmdl.xmdl052,
                                       g_xmdl.xmdl017,g_xmdl.xmdl018,g_xmdl.xmdl019,g_xmdl.xmdl020,
                                       '','') THEN
            LET r_success = FALSE
            EXIT FOREACH
         END IF
      END IF
      #add--160408-00035#5 By shiun--(E)
            
      LET l_seq = l_seq + 1
   END FOREACH

   CALL cl_showmsg()
   
   RETURN r_success
END FUNCTION
################################################################################
# Descriptions...: 由出通單自動帶出單身
# Memo...........:
# Usage..........: CALL axmt540_auto_insert_1()
#                  
# Input parameter: 
#                : 
# Return code....: r_success  執行結果
#                : 
# Date & Author..: 140303 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_auto_insert_1()
   DEFINE l_seq        LIKE type_t.num5
   DEFINE l_xmdhseq    LIKE xmdh_t.xmdhseq
   DEFINE l_msg        STRING
   DEFINE r_success    LIKE type_t.num5
   DEFINE l_only       LIKE type_t.num5
   DEFINE l_xmdm005    LIKE xmdm_t.xmdm005
   DEFINE l_xmdm006    LIKE xmdm_t.xmdm006
   DEFINE l_xmdm007    LIKE xmdm_t.xmdm007
   DEFINE l_xmdm033    LIKE xmdm_t.xmdm033

   LET g_sql = "SELECT xmdhseq",
               "  FROM xmdh_t",
               " WHERE xmdhent = '",g_enterprise,"'",
               "   AND xmdhdocno = ?",
               " ORDER BY xmdhseq"
                  
   PREPARE auto_import1_pre FROM g_sql
   DECLARE auto_import1_cur CURSOR FOR auto_import1_pre   
   OPEN auto_import1_cur USING g_xmdk_m.xmdk005
   
   LET l_seq = 1
   
   CALL cl_showmsg_init()
   
   LET r_success = TRUE
   
   FOREACH auto_import1_cur INTO l_xmdhseq
      IF SQLCA.sqlcode THEN
         CALL cl_errmsg('FOREACH','','',SQLCA.sqlcode,1)
         LET r_success = FALSE
         EXIT FOREACH
      END IF

      #替換錯誤訊息
      CALL cl_getmsg_parm('axm-00218',g_dlang,g_xmdk_m.xmdk005 ||'|'|| l_xmdhseq) RETURNING l_msg   #單號：%1 項次：%2
      
      CALL axmt540_xmdh_search('1',g_xmdk_m.xmdk005,l_xmdhseq)
      IF NOT cl_null(g_errno) THEN
#         CALL cl_errmsg('',l_msg,'',g_errno,1)
         LET g_errno = ''     #140718修改為不報錯
         CONTINUE FOREACH
      END IF

      #稅額計算
      CALL s_axmt540_tax_count('',g_xmdk_m.xmdkdocno,l_seq,g_site,g_xmdl.xmdl025,
                               g_xmdl.xmdl022,g_xmdl.xmdl024,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,
                               g_xmdl.xmdl003,g_xmdl.xmdl004,g_xmdl.xmdl018)
      RETURNING g_xmdl.xmdl027,g_xmdl.xmdl028,g_xmdl.xmdl029

      #由出通單多庫儲批自動帶出單身
      CALL axmt540_auto_insert_xmdm(g_xmdl.xmdl001,g_xmdl.xmdl002,l_seq) RETURNING l_only,l_xmdm005,l_xmdm006,l_xmdm007,l_xmdm033
      IF NOT cl_null(g_errno) THEN
         CALL cl_errmsg('INSERT',l_msg,'',SQLCA.sqlcode,1)
         LET r_success = FALSE
         EXIT FOREACH
      END IF

      IF l_only THEN  #代表已無多庫儲批
         LET g_xmdl.xmdl013 = 'N'
         LET g_xmdl.xmdl014 = l_xmdm005
         LET g_xmdl.xmdl015 = l_xmdm006
         LET g_xmdl.xmdl016 = l_xmdm007
         LET g_xmdl.xmdl052 = l_xmdm033
      END IF
      
      INSERT INTO xmdl_t (xmdlent,xmdlsite,xmdldocno,xmdlseq,
                          xmdl001,xmdl002,
                          xmdl003,xmdl004,xmdl005,xmdl006,
                          xmdl007,xmdl008,xmdl009,xmdl010,
                          xmdl011,xmdl012,xmdl013,xmdl014,xmdl015,
                          xmdl016,xmdl017,xmdl018,xmdl019,xmdl020,
                          xmdl021,xmdl022,xmdl023,xmdl024,xmdl025,
                          xmdl026,xmdl027,xmdl028,xmdl029,xmdl030,
                          xmdl031,xmdl032,xmdl033,xmdl034,xmdl035,
                          xmdl036,xmdl037,
                          xmdl041,xmdl042,xmdl043,xmdl044,xmdl045,
                          xmdl046,xmdl050,
                          xmdl051,  #150326
                          xmdl052,xmdl056,
                          xmdl087,xmdl088) 
           VALUES (g_enterprise,g_site,g_xmdk_m.xmdkdocno,l_seq,
                   g_xmdl.xmdl001,g_xmdl.xmdl002,
                   g_xmdl.xmdl003,g_xmdl.xmdl004,g_xmdl.xmdl005,g_xmdl.xmdl006,
                   g_xmdl.xmdl007,g_xmdl.xmdl008,g_xmdl.xmdl009,g_xmdl.xmdl010,
                   g_xmdl.xmdl011,g_xmdl.xmdl012,g_xmdl.xmdl013,g_xmdl.xmdl014,g_xmdl.xmdl015,
                   g_xmdl.xmdl016,g_xmdl.xmdl017,g_xmdl.xmdl018,g_xmdl.xmdl019,g_xmdl.xmdl020,
                   g_xmdl.xmdl021,g_xmdl.xmdl022,g_xmdl.xmdl023,g_xmdl.xmdl024,g_xmdl.xmdl025,
                   g_xmdl.xmdl026,g_xmdl.xmdl027,g_xmdl.xmdl028,g_xmdl.xmdl029,g_xmdl.xmdl030,
                   g_xmdl.xmdl031,g_xmdl.xmdl032,g_xmdl.xmdl033,g_xmdl.xmdl034,g_xmdl.xmdl035,
                   g_xmdl.xmdl036,g_xmdl.xmdl037,
                   g_xmdl.xmdl041,g_xmdl.xmdl042,g_xmdl.xmdl043,g_xmdl.xmdl044,g_xmdl.xmdl045,
                   g_xmdl.xmdl046,g_xmdl.xmdl050,
                   g_xmdl.xmdl051,   #150326
                   g_xmdl.xmdl052,g_xmdl.xmdl056,
                   g_xmdl.xmdl087,g_xmdl.xmdl088)
                             
      IF SQLCA.sqlcode THEN
         CALL cl_errmsg('INSERT',l_msg,'',SQLCA.sqlcode,1)
         LET r_success = FALSE
         EXIT FOREACH
      END IF     


      LET l_seq = l_seq + 1
   END FOREACH

   CALL cl_showmsg()
   
   RETURN r_success
END FUNCTION
################################################################################
# Descriptions...: 檢查單身是否有輸入出通單號
# Memo...........:
# Usage..........: CALL axmt540_detail_count()
#                  
# Input parameter: 
#                : 
# Return code....: r_numseq  單身項次數量
#                : r_num01   單身出通單數量
#                : r_num03   單身訂單數量
# Date & Author..: 140305 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_detail_count()
   DEFINE r_numseq     LIKE type_t.num5
   DEFINE r_num01      LIKE type_t.num5
   DEFINE r_num03      LIKE type_t.num5
   
   LET r_numseq = 0
   LET r_num01 = 0
   LET r_num03 = 0
   
   IF NOT cl_null(g_xmdk_m.xmdkdocno) THEN         
      SELECT COUNT(xmdlseq),COUNT(xmdl001),COUNT(xmdl003)
        INTO r_numseq,r_num01,r_num03
        FROM xmdl_t
       WHERE xmdlent = g_enterprise
         AND xmdldocno = g_xmdk_m.xmdkdocno
   END IF
   
   RETURN r_numseq,r_num01,r_num03
   
END FUNCTION

PRIVATE FUNCTION axmt540_xmdl001_xmdl002_chk()
   DEFINE l_num       LIKE type_t.num5
   DEFINE r_success   LIKE type_t.num5
   DEFINE l_seq       LIKE xmdl_t.xmdlseq
   
   LET r_success = TRUE
  
   IF NOT cl_null(g_xmdl_d[l_ac].xmdl001) AND
      NOT cl_null(g_xmdl_d[l_ac].xmdl002) THEN

      #檢查該筆出貨單項次是否已輸入單身
      LET l_seq = g_xmdl_d_t.xmdlseq
      IF cl_null(l_seq) THEN
         LET l_seq = g_xmdl_d[l_ac].xmdlseq
      END IF
      
      LET l_num = 0      
      SELECT COUNT(xmdlseq) INTO l_num
        FROM xmdl_t
       WHERE xmdlent = g_enterprise
         AND xmdldocno = g_xmdk_m.xmdkdocno
         AND xmdl001 = g_xmdl_d[l_ac].xmdl001
         AND xmdl002 = g_xmdl_d[l_ac].xmdl002
         AND xmdlseq <> l_seq    #排除該項次
      
      IF l_num > 0 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'axm-00245'   #該單據%1項次%2已存在此單身，不可重複輸入！
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         LET g_errparam.replace[1] = g_xmdl_d[l_ac].xmdl001 
         LET g_errparam.replace[2] =  g_xmdl_d[l_ac].xmdl002
         CALL cl_err()

         LET r_success = FALSE
         RETURN r_success
      END IF

      #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
      INITIALIZE g_chkparam.* TO NULL
      #160318-00025#15 by 07900 --add-str 
      LET g_errshow = TRUE #是否開窗
      #160318-00025#15 by 07900 --add-end
      #設定g_chkparam.*的參數
      LET g_chkparam.arg1 = g_xmdl_d[l_ac].xmdl001
      LET g_chkparam.arg2 = g_xmdl_d[l_ac].xmdl002

#      IF g_prog = 'axmt542' THEN       #160623-00014#1-mod-(S)
      IF g_prog MATCHES 'axmt542' THEN #160623-00014#1-mod-(E)
         #替換錯誤訊息
         LET g_chkparam.err_str[1] = "axm-00069:axm-00591"  #輸入的資料不存在出通單單身明細檔中！
#         LET g_chkparam.err_str[2] = "axm-00070:axm-00595"   #輸入的資料無效！    #160318-00005#50  mark
         LET g_chkparam.err_str[2] = "axm-00070:sub-01302|axmt521|",cl_get_progname('axmt521',g_lang,"2"),"|:EXEPROGapaxmt521"   #輸入的資料無效！     #160318-00005#50  add
      END IF
       #160318-00025#15 by 07900 --add-str 
      LET g_chkparam.err_str[3] ="axm-00070:sub-01302|axmt520|",cl_get_progname("axmt520",g_lang,"2"),"|:EXEPROGaxmt520"
      #160318-00025#15 by 07900 --add-end 
      #呼叫檢查存在並帶值的library
      IF NOT cl_chk_exist("v_xmdhseq") THEN
         LET r_success = FALSE
         RETURN r_success
      END IF      
      
   END IF
   
   RETURN r_success
END FUNCTION
################################################################################
# Descriptions...: 檢查來源訂單單號
# Memo...........:
# Usage..........: CALL axmt540_order_chk(p_xmdadocno,p_type)
#                  RETURNING r_success
# Input parameter: p_xmdadocno 來源訂單單號
#                : p_type      1.單頭2.單身
# Return code....: r_success   執行結果
#                : 
# Date & Author..: 140701 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_order_chk(p_xmdadocno,p_type)
   DEFINE p_xmdadocno  LIKE xmda_t.xmdadocno
   DEFINE p_type       LIKE type_t.chr1
   DEFINE r_success    LIKE type_t.num5
   DEFINE l_n          LIKE type_t.num5
   DEFINE l_slip       LIKE ooba_t.ooba001
   DEFINE l_sql        STRING
   
   DEFINE l_success    LIKE type_t.num5
   DEFINE l_gzze003    LIKE gzze_t.gzze003
   DEFINE l_errno      DYNAMIC ARRAY OF LIKE type_t.chr10
   DEFINE l_errnum     LIKE type_t.num5

   DEFINE l_xmda RECORD
      xmdasite         LIKE xmda_t.xmdasite,
      xmdastus         LIKE xmda_t.xmdastus,
      xmda004          LIKE xmda_t.xmda004,
      xmda005          LIKE xmda_t.xmda005,
      xmda006          LIKE xmda_t.xmda006,      
      xmda009          LIKE xmda_t.xmda009,
      xmda010          LIKE xmda_t.xmda010,
      xmda011          LIKE xmda_t.xmda011,
      xmda015          LIKE xmda_t.xmda015,      
      xmda021          LIKE xmda_t.xmda021,
      xmda022          LIKE xmda_t.xmda022,
      xmda030          LIKE xmda_t.xmda030,
      xmda031          LIKE xmda_t.xmda031,
      xmda035          LIKE xmda_t.xmda035,      
      xmda045          LIKE xmda_t.xmda045,
      xmda048          LIKE xmda_t.xmda048,
      xmda050          LIKE xmda_t.xmda050,
      xmda203          LIKE xmda_t.xmda203
   END RECORD   

   LET r_success = TRUE
   LET l_errnum = 0
   INITIALIZE l_errno TO NULL

   CALL cl_err_collect_init()
   
   #檢核前後置單別的合理性
   IF NOT s_aooi210_check_doc(g_site,'',p_xmdadocno,g_xmdk_m.xmdkdocno,'4','') THEN
      LET r_success = FALSE
   END IF

   LET l_sql = "SELECT xmdasite,",
               "       xmdastus,xmda004,xmda005,",
               "       xmda006,xmda009,xmda010,",
               "       xmda011,xmda015,",
               "       xmda021,xmda022,",
               "       xmda030,xmda031,xmda035,",
               "       xmda045,xmda048,xmda050,",
               "       xmda203",
               "  FROM xmda_t",
               " WHERE xmdaent = ",g_enterprise,
               "   AND xmdadocno = '",p_xmdadocno,"'"
   PREPARE axmt540_order_pre FROM l_sql
   #160623-00014#1-mod-(S)
#   CASE g_prog
#      WHEN 'axmt542'
#         LET l_sql = l_sql," AND xmda005 = '8'"
#         CALL cl_getmsg('axm-00586',g_dlang) RETURNING l_gzze003   #借貨訂單維護作業axmt501
#      OTHERWISE
#         LET l_sql = l_sql," AND xmda005 <> '8'"
#         CALL cl_getmsg('axm-00585',g_dlang) RETURNING l_gzze003   #訂單維護作業axmt500
#   END CASE
   CASE 
      WHEN g_prog MATCHES 'axmt542'
         LET l_sql = l_sql," AND xmda005 = '8'"
         CALL cl_getmsg('axm-00586',g_dlang) RETURNING l_gzze003   #借貨訂單維護作業axmt501
      OTHERWISE
         LET l_sql = l_sql," AND xmda005 <> '8'"
         CALL cl_getmsg('axm-00585',g_dlang) RETURNING l_gzze003   #訂單維護作業axmt500
   END CASE
   #160623-00014#1-mod-(E)
   INITIALIZE l_xmda.* TO NULL
   EXECUTE axmt540_order_pre INTO l_xmda.xmdasite,
                                  l_xmda.xmdastus,l_xmda.xmda004,l_xmda.xmda005,     
                                  l_xmda.xmda006,l_xmda.xmda009,l_xmda.xmda010,
                                  l_xmda.xmda011,l_xmda.xmda015,          
                                  l_xmda.xmda021,l_xmda.xmda022,
                                  l_xmda.xmda030,l_xmda.xmda031,l_xmda.xmda035,
                                  l_xmda.xmda045,l_xmda.xmda048,l_xmda.xmda050,
                                  l_xmda.xmda203

   IF SQLCA.sqlcode THEN
      IF SQLCA.sqlcode = 100 THEN
         LET l_errnum = l_errnum + 1
         LET l_errno[l_errnum] = 'axm-00041'    #輸入的資料不存在於訂單單頭檔中!
      ELSE
         LET l_errnum = l_errnum + 1
         LET l_errno[l_errnum] = SQLCA.sqlcode
      END IF
   END IF

   #多角處理
   CALL axmt540_xmdk045_default('2',l_xmda.xmda006,l_xmda.xmda050,l_xmda.xmda031) RETURNING l_xmda.xmda006
   
   IF l_xmda.xmdastus <> 'Y' THEN
      LET l_errnum = l_errnum + 1
      LET l_errno[l_errnum] = 'axm-00042'       #輸入的資料狀態非"已確認"!
   END IF
   
   IF l_xmda.xmda005 = '5' THEN
      LET l_errnum = l_errnum + 1
      LET l_errno[l_errnum] = 'axm-00237'       #此筆資料的單據性質為預先訂單，不可以出貨！
   END IF
   
   IF l_xmda.xmda045 = 'Y' THEN
      LET l_errnum = l_errnum + 1
      LET l_errno[l_errnum] = 'axm-00359'       #該訂單已物流結案，不可輸入！
   END IF
   
   IF p_type = '2' THEN
      IF l_xmda.xmda004 <> g_xmdk_m.xmdk007 THEN
         LET l_errnum = l_errnum + 1
         LET l_errno[l_errnum] = 'axm-00128'       #訂單客戶編號與出貨單單頭資料不符！
      END IF
      
      IF l_xmda.xmda021 <> g_xmdk_m.xmdk008 THEN
         LET l_errnum = l_errnum + 1
         LET l_errno[l_errnum] = 'axm-00129'       #訂單收款客戶與出貨單單頭資料不符！
      END IF
      
      IF l_xmda.xmda022 <> g_xmdk_m.xmdk009 THEN
         LET l_errnum = l_errnum + 1
         LET l_errno[l_errnum] = 'axm-00130'      #訂單收貨客戶與出貨單單頭資料不符！
      END IF
      
      IF l_xmda.xmda203 <> g_xmdk_m.xmdk202 THEN
         LET l_errnum = l_errnum + 1
         LET l_errno[l_errnum] = 'axm-00514'      #訂單發票客戶與出貨單單頭資料不符！
      END IF
      
      IF l_xmda.xmda011 <> g_xmdk_m.xmdk012 AND g_oodb011 = '1' THEN
         LET l_errnum = l_errnum + 1
         LET l_errno[l_errnum] = 'axm-00131'      #訂單稅別與出貨單單頭資料不符！
      END IF
      
      IF l_xmda.xmda015 <> g_xmdk_m.xmdk016 THEN
         LET l_errnum = l_errnum + 1
         LET l_errno[l_errnum] = 'axm-00132'      #訂單幣別與出貨單單頭資料不符！
      END IF
      
      IF l_xmda.xmda010 <> g_xmdk_m.xmdk011 THEN
         LET l_errnum = l_errnum + 1
         LET l_errno[l_errnum] = 'axm-00133'      #訂單交易條件與出貨單單頭資料不符！
      END IF
      
      IF l_xmda.xmda009 <> g_xmdk_m.xmdk010 THEN
         LET l_errnum = l_errnum + 1
         LET l_errno[l_errnum] = 'axm-00134'      #訂單收款條件與出貨單單頭資料不符！
      END IF
      
      IF l_xmda.xmda035 <> g_xmdk_m.xmdk015 THEN
         LET l_errnum = l_errnum + 1
         LET l_errno[l_errnum] = 'axm-00135'      #訂單發票類型與出貨單單頭資料不符！
      END IF
      
      IF l_xmda.xmda005 <> g_xmdk_m.xmdk002 THEN
         LET l_errnum = l_errnum + 1
         LET l_errno[l_errnum] = 'axm-00092'      #出貨性質與訂單出貨性質不符！
      END IF
      
      IF l_xmda.xmda006 <> g_xmdk_m.xmdk045 THEN
         LET l_errnum = l_errnum + 1
         LET l_errno[l_errnum] = 'axm-00156'      #單身訂單對應的多角性質需與單頭多角性質一致！
      END IF
      
      IF l_xmda.xmda048 <> g_xmdk_m.xmdk042 THEN
         LET l_errnum = l_errnum + 1
         LET l_errno[l_errnum] = 'axm-00356'      #單據內外銷與單頭資料不符！
      END IF
      
      IF l_xmda.xmda050 <> g_xmdk_m.xmdk044 THEN
         LET l_errnum = l_errnum + 1
         LET l_errno[l_errnum] = 'axm-00272'      #單身多角流程代碼需一致！
      END IF
   END IF

   FOR l_n = 1 TO l_errno.getlength()
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = l_errno[l_n]
      LET g_errparam.extend = p_xmdadocno
      LET g_errparam.popup = TRUE

      LET g_errparam.replace[1] = l_gzze003
      
      CALL cl_err()

      LET r_success = FALSE
   END FOR

   CALL s_aooi200_get_slip(p_xmdadocno) RETURNING l_success,l_slip
   IF l_success THEN
      IF cl_get_doc_para(g_enterprise,l_xmda.xmdasite,l_slip,'D-BAS-0077') = 'Y' THEN    #訂單需走出通單
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'axm-00360'   #此訂單單據別參數設定為需走出通單，不可輸入！
         LET g_errparam.extend = p_xmdadocno
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET r_success = FALSE
      END IF
      
      #151210-00009#1  2015/12/30 By earl s
      IF NOT axmt540_order_notice_chk('2',l_slip) THEN
         LET r_success = FALSE
      END IF
      #151210-00009#1  2015/12/30 By earl e
      
   END IF

   #客戶編號檢查
   IF NOT cl_null(l_xmda.xmda004) THEN
      IF NOT s_axmt540_client_chk(g_xmdk_m.xmdkdocno,'1',l_xmda.xmda004,'') THEN
         LET r_success = FALSE
      END IF
   END IF
   
   LET l_n = 0
   SELECT COUNT(xmdcseq) INTO l_n
     FROM xmdc_t
    WHERE xmdcent = g_enterprise
      AND xmdcdocno = p_xmdadocno
      AND xmdcunit = g_site
      
   IF cl_null(l_n) OR l_n = 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'axm-00097'   #此訂單無任何一筆項次的出貨據點與當前營運據點一樣，不允許輸入此訂單！
      LET g_errparam.extend = p_xmdadocno
      LET g_errparam.popup = TRUE
      
      LET g_errparam.replace[1] = l_gzze003
      
      CALL cl_err()
   
      LET r_success = FALSE
   END IF

   #多角check
   #多角性質為："2.銷售多角,5.中間交易,7:代採購出貨"
   IF l_xmda.xmda006 = '2' OR
      l_xmda.xmda006 = '5' OR
      l_xmda.xmda006 = '7' THEN
      
      IF cl_null(l_xmda.xmda050) THEN          #"多角流程代碼"為空白
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'axm-00496'     #多角性質為多角流程時，"多角流程代碼"不可為空！
         LET g_errparam.extend = p_xmdadocno
         LET g_errparam.popup = TRUE

         LET g_errparam.replace[1] = l_gzze003
         
         CALL cl_err()

         LET r_success = FALSE
      ELSE
         IF NOT axmt540_xmdk044_chk(l_xmda.xmda050,l_xmda.xmda005) THEN
            LET r_success = FALSE
         END IF
         
         #150917-00001#3  2016/01/19 By earl mark s
#         #中斷續拋
#         IF axmt540_break_continue(l_xmda.xmda050) THEN
#            #多角序號檢查
#            IF NOT axmt540_source_xmdk035_chk('2',p_xmdadocno,g_xmdk_m.xmdk035) THEN
#               LET r_success = FALSE
#            END IF
#         END IF
         #150917-00001#3  2016/01/19 By earl mark e
         
      END IF
      
      IF l_xmda.xmda030 <> 'Y' THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'axm-00517'     #來源需為"多角貿易已拋轉"之單據！
         LET g_errparam.extend = p_xmdadocno
         LET g_errparam.popup = TRUE
         
         LET g_errparam.replace[1] = l_gzze003
         
         CALL cl_err()

         LET r_success = FALSE
      END IF      
   END IF

   CALL cl_err_collect_show()
   RETURN r_success
END FUNCTION

PRIVATE FUNCTION axmt540_xmdl001_xmdl002_default()
   DEFINE r_success     LIKE type_t.num5
   DEFINE l_only        LIKE type_t.num5
   DEFINE l_xmdm005     LIKE xmdm_t.xmdm005
   DEFINE l_xmdm006     LIKE xmdm_t.xmdm006
   DEFINE l_xmdm007     LIKE xmdm_t.xmdm007
   DEFINE l_xmdm033     LIKE xmdm_t.xmdm033
      
   LET r_success = TRUE
   LET g_errno = ''

   IF cl_null(g_xmdl_d[l_ac].xmdl001) THEN
      LET g_xmdl_d[l_ac].xmdl002 = ''
   END IF

   CALL axmt540_xmdh_search('2',g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002)                
   IF cl_null(g_errno) THEN  

      #由出通單多庫儲批自動帶出單身
      CALL axmt540_auto_insert_xmdm(g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,g_xmdl_d[l_ac].xmdlseq)
      RETURNING l_only,l_xmdm005,l_xmdm006,l_xmdm007,l_xmdm033

      IF l_only THEN  #代表已無多庫儲批
         LET g_xmdl.xmdl013 = 'N'
         LET g_xmdl.xmdl014 = l_xmdm005
         LET g_xmdl.xmdl015 = l_xmdm006
         LET g_xmdl.xmdl016 = l_xmdm007
         LET g_xmdl.xmdl052 = l_xmdm033
      END IF

      IF cl_null(g_errno) THEN
         LET g_xmdl_d[l_ac].xmdl003 = g_xmdl.xmdl003
         LET g_xmdl_d[l_ac].xmdl004 = g_xmdl.xmdl004
         LET g_xmdl_d[l_ac].xmdl005 = g_xmdl.xmdl005
         LET g_xmdl_d[l_ac].xmdl006 = g_xmdl.xmdl006
         LET g_xmdl_d[l_ac].xmdl007 = g_xmdl.xmdl007
         LET g_xmdl_d[l_ac].xmdl008 = g_xmdl.xmdl008
         LET g_xmdl_d[l_ac].xmdl009 = g_xmdl.xmdl009
         LET g_xmdl_d[l_ac].xmdl010 = g_xmdl.xmdl010
         LET g_xmdl_d[l_ac].xmdl011 = g_xmdl.xmdl011
         LET g_xmdl_d[l_ac].xmdl012 = g_xmdl.xmdl012
         LET g_xmdl_d[l_ac].xmdl013 = g_xmdl.xmdl013
         LET g_xmdl_d[l_ac].xmdl014 = g_xmdl.xmdl014
         LET g_xmdl_d[l_ac].xmdl015 = g_xmdl.xmdl015
         LET g_xmdl_d[l_ac].xmdl016 = g_xmdl.xmdl016
         LET g_xmdl_d[l_ac].xmdl017 = g_xmdl.xmdl017
         LET g_xmdl_d[l_ac].xmdl018 = g_xmdl.xmdl018
         LET g_xmdl_d[l_ac].xmdl019 = g_xmdl.xmdl019
         LET g_xmdl_d[l_ac].xmdl020 = g_xmdl.xmdl020
         LET g_xmdl_d[l_ac].xmdl021 = g_xmdl.xmdl021
         LET g_xmdl_d[l_ac].xmdl022 = g_xmdl.xmdl022
         LET g_xmdl_d[l_ac].xmdl023 = g_xmdl.xmdl023
      
         LET g_xmdl_d[l_ac].xmdl030 = g_xmdl.xmdl030
         LET g_xmdl_d[l_ac].xmdl031 = g_xmdl.xmdl031
         LET g_xmdl_d[l_ac].xmdl032 = g_xmdl.xmdl032
         LET g_xmdl_d[l_ac].xmdl033 = g_xmdl.xmdl033
         LET g_xmdl_d[l_ac].xmdl034 = g_xmdl.xmdl034
         LET g_xmdl_d[l_ac].xmdl035 = g_xmdl.xmdl035
         LET g_xmdl_d[l_ac].xmdl036 = g_xmdl.xmdl036
         LET g_xmdl_d[l_ac].xmdl037 = g_xmdl.xmdl037
         
         LET g_xmdl_d[l_ac].xmdl041 = g_xmdl.xmdl041

         LET g_xmdl_d[l_ac].xmdl050 = g_xmdl.xmdl050
         LET g_xmdl_d[l_ac].xmdl051 = g_xmdl.xmdl051  #150326
         LET g_xmdl_d[l_ac].xmdl052 = g_xmdl.xmdl052

         LET g_xmdl_d[l_ac].xmdl056 = g_xmdl.xmdl056

         LET g_xmdl_d[l_ac].xmdl088 = g_xmdl.xmdl088

         LET g_xmdl2_d[l_ac].xmdl024 = g_xmdl.xmdl024
         LET g_xmdl2_d[l_ac].xmdl025 = g_xmdl.xmdl025
         LET g_xmdl2_d[l_ac].xmdl026 = g_xmdl.xmdl026
         LET g_xmdl2_d[l_ac].xmdl027 = g_xmdl.xmdl027
         LET g_xmdl2_d[l_ac].xmdl028 = g_xmdl.xmdl028
         LET g_xmdl2_d[l_ac].xmdl029 = g_xmdl.xmdl029
         
         LET g_xmdl2_d[l_ac].xmdl042 = g_xmdl.xmdl042
         LET g_xmdl2_d[l_ac].xmdl043 = g_xmdl.xmdl043
         LET g_xmdl2_d[l_ac].xmdl044 = g_xmdl.xmdl044
         LET g_xmdl2_d[l_ac].xmdl045 = g_xmdl.xmdl045
         LET g_xmdl2_d[l_ac].xmdl046 = g_xmdl.xmdl046
         
         CALL s_desc_get_item_desc(g_xmdl_d[l_ac].xmdl008)RETURNING g_xmdl_d[l_ac].xmdl008_desc,g_xmdl_d[l_ac].xmdl008_desc_desc
         CALL s_desc_get_acc_desc('221',g_xmdl_d[l_ac].xmdl011) RETURNING g_xmdl_d[l_ac].xmdl011_desc            
         CALL s_desc_get_stock_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014) RETURNING g_xmdl_d[l_ac].xmdl014_desc
         CALL s_desc_get_locator_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015) RETURNING g_xmdl_d[l_ac].xmdl015_desc
         CALL s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl017) RETURNING g_xmdl_d[l_ac].xmdl017_desc
         CALL s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl019) RETURNING g_xmdl_d[l_ac].xmdl019_desc            
         
         CALL s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl021) RETURNING g_xmdl_d[l_ac].xmdl021_desc
                     
         CALL s_desc_get_tax_desc1(g_site,g_xmdl2_d[l_ac].xmdl025) RETURNING g_xmdl2_d[l_ac].xmdl025_desc
         
         CALL axmt540_xmdl050_ref()
         
         LET g_xmdl_d_o.* = g_xmdl_d[l_ac].*
         LET g_xmdl2_d_o.* = g_xmdl2_d[l_ac].*
      END IF         
   END IF

   IF NOT cl_null(g_errno) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = g_errno
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      LET r_success = FALSE
      RETURN r_success
   END IF 

   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 檢查來源出通單號
# Memo...........:
# Usage..........: CALL axmt540_notice_chk(p_xmdgdocno,p_type)
#                  RETURNING r_success
# Input parameter: p_xmdgdocno   來源出通單號
#                : p_type        1.單頭2.單身
# Return code....: r_success  執行結果
#                : 
# Date & Author..: 140701 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_notice_chk(p_xmdgdocno,p_type)
   DEFINE p_xmdgdocno  LIKE xmdg_t.xmdgdocno
   DEFINE p_type       LIKE type_t.chr1
   DEFINE r_success    LIKE type_t.num5   
   DEFINE l_num        LIKE type_t.num5
   DEFINE l_sql        STRING
   
   DEFINE l_gzze003    LIKE gzze_t.gzze003
   DEFINE l_errno      DYNAMIC ARRAY OF LIKE type_t.chr10
   DEFINE l_errnum     LIKE type_t.num5

   DEFINE l_xmdg RECORD
      xmdgstus         LIKE xmdg_t.xmdgstus,
      xmdg001          LIKE xmdg_t.xmdg001,
      xmdg005          LIKE xmdg_t.xmdg005,
      xmdg006          LIKE xmdg_t.xmdg006,
      xmdg007          LIKE xmdg_t.xmdg007,
      xmdg008          LIKE xmdg_t.xmdg008,
      xmdg009          LIKE xmdg_t.xmdg009,
      xmdg010          LIKE xmdg_t.xmdg010,
      xmdg013          LIKE xmdg_t.xmdg013,      
      xmdg014          LIKE xmdg_t.xmdg014,
      xmdg024          LIKE xmdg_t.xmdg024,
      xmdg025          LIKE xmdg_t.xmdg025,
      xmdg032          LIKE xmdg_t.xmdg032,
      xmdg034          LIKE xmdg_t.xmdg034,
      xmdg054          LIKE xmdg_t.xmdg054,
      xmdg055          LIKE xmdg_t.xmdg055,
      xmdg056          LIKE xmdg_t.xmdg056,
      xmdg202          LIKE xmdg_t.xmdg202
   END RECORD   
   
   DEFINE l_xmda RECORD
      xmdadocno      LIKE xmda_t.xmdadocno,
      xmda005        LIKE xmda_t.xmda005
   END RECORD

   DEFINE l_slip     LIKE ooba_t.ooba001  #151001 earl add
   DEFINE l_onebyone LIKE type_t.chr80    #151001 earl add

   DEFINE l_xmdh017  LIKE xmdh_t.xmdh017  #151002 earl add
   DEFINE l_xmdh030  LIKE xmdh_t.xmdh030  #151002 earl add

   LET r_success = TRUE
   LET l_errnum = 0
   INITIALIZE l_errno TO NULL

   CALL cl_err_collect_init()

   #151001 earl add s
   CALL s_aooi200_get_slip(p_xmdgdocno) RETURNING r_success,l_slip
   IF r_success THEN
      CALL cl_get_doc_para(g_enterprise,g_site,l_slip,'D-BAS-0060') RETURNING l_onebyone
      IF l_onebyone = '1' OR l_onebyone = '3' THEN  #出通轉出貨單控管為"一對一"或"一對一(回寫出通量)"
         LET l_num = 0
         SELECT COUNT(xmdkdocno) INTO l_num
           FROM xmdk_t LEFT OUTER JOIN xmdl_t ON xmdkent = xmdlent AND xmdkdocno = xmdldocno
          WHERE xmdkent = g_enterprise
            AND xmdk000 = g_xmdk_m.xmdk000
            AND xmdkdocno <> g_xmdk_m.xmdkdocno #排除當下單據
            AND (xmdk005 = p_xmdgdocno OR xmdl001 = p_xmdgdocno)
            AND xmdkstus <> 'X'
         
         IF l_num > 0 THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'adb-00179'   #出通單別參數設置出通轉出貨單為"一對一"或"一對一(回寫出通量)"，且已存在出貨單時(非作廢的出貨單)，則不可再轉出貨單!
            LET g_errparam.extend = p_xmdgdocno
            LET g_errparam.popup = TRUE
            
            CALL cl_err()
           
            LET r_success = FALSE
         END IF
         
         #151210-00009#1  2015/12/30 By earl s
         IF NOT axmt540_order_notice_chk('1',l_slip) THEN
            LET r_success = FALSE
         END IF
         #151210-00009#1  2015/12/30 By earl e
         
      END IF
   END IF
   #151001 earl add e

   #檢核前後置單別的合理性
   IF NOT s_aooi210_check_doc(g_site,'',p_xmdgdocno,g_xmdk_m.xmdkdocno,'4','') THEN
      LET r_success = FALSE
   END IF

   #過濾已全數出貨  151002 earl add
   LET l_sql = "SELECT SUM(xmdh017),SUM(xmdh030)",
               "  FROM xmdh_t",
               " WHERE xmdhent = ",g_enterprise,
               "   AND xmdhdocno = '",p_xmdgdocno,"'"
   PREPARE axmt540_notice_sum_pre FROM l_sql
   
   LET l_xmdh017 = 0
   LET l_xmdh030 = 0
   EXECUTE axmt540_notice_sum_pre INTO l_xmdh017,l_xmdh030
   IF SQLCA.sqlcode THEN
      LET l_errnum = l_errnum + 1
      LET l_errno[l_errnum] = SQLCA.sqlcode
   END IF

   IF l_xmdh017 <= l_xmdh030 THEN
      LET l_errnum = l_errnum + 1
      LET l_errno[l_errnum] = 'axm-00730'   #該出通單已全數出貨，不可輸入！
   END IF

   LET l_sql = "SELECT xmdadocno,xmda005,",
               "       xmdgstus,xmdg001,xmdg005,",
               "       xmdg006,xmdg007,xmdg008,xmdg009,xmdg010,",
               "       xmdg013,xmdg014,",
               "       xmdg024,xmdg025,",
               "       xmdg032,xmdg034,",
               "       xmdg054,xmdg055,xmdg056,",
               "       xmdg202",
               "  FROM xmdg_t LEFT OUTER JOIN xmda_t ON xmdgent = xmdaent AND xmdg004 = xmdadocno",
               " WHERE xmdgent = ",g_enterprise,
               "   AND xmdgsite = '",g_site,"'",
               "   AND xmdgdocno = '",p_xmdgdocno,"'"
   PREPARE axmt540_notice_pre FROM l_sql
   #160623-00014#1-mod-(S)
#   CASE g_prog
#      WHEN 'axmt542'
#         LET l_sql = l_sql," AND xmdg001 = '8'"
#         CALL cl_getmsg('axm-00584',g_dlang) RETURNING l_gzze003   #借貨出貨通知單維護作業axmt521
#      OTHERWISE
#         LET l_sql = l_sql," AND xmdg001 <> '8'"
#         CALL cl_getmsg('axm-00583',g_dlang) RETURNING l_gzze003   #出貨通知單維護作業axmt520
#   END CASE
   CASE 
      WHEN g_prog MATCHES 'axmt542'
         LET l_sql = l_sql," AND xmdg001 = '8'"
         CALL cl_getmsg('axm-00584',g_dlang) RETURNING l_gzze003   #借貨出貨通知單維護作業axmt521
      OTHERWISE
         LET l_sql = l_sql," AND xmdg001 <> '8'"
         CALL cl_getmsg('axm-00583',g_dlang) RETURNING l_gzze003   #出貨通知單維護作業axmt520
   END CASE
   #160623-00014#1-mod-(E)
   INITIALIZE l_xmdg.* TO NULL
   INITIALIZE l_xmda.* TO NULL
   EXECUTE axmt540_notice_pre INTO l_xmda.xmdadocno,l_xmda.xmda005,
                                   l_xmdg.xmdgstus,l_xmdg.xmdg001,l_xmdg.xmdg005,
                                   l_xmdg.xmdg006,l_xmdg.xmdg007,l_xmdg.xmdg008,l_xmdg.xmdg009,l_xmdg.xmdg010,
                                   l_xmdg.xmdg013,l_xmdg.xmdg014,                    
                                   l_xmdg.xmdg024,l_xmdg.xmdg025,
                                   l_xmdg.xmdg032,l_xmdg.xmdg034,
                                   l_xmdg.xmdg054,l_xmdg.xmdg055,l_xmdg.xmdg056,
                                   l_xmdg.xmdg202
   IF SQLCA.sqlcode THEN
      IF SQLCA.sqlcode = 100 THEN
         LET l_errnum = l_errnum + 1
         LET l_errno[l_errnum] = 'axm-00043'  #輸入的資料不存在於出通單單頭檔中!
      ELSE
         LET l_errnum = l_errnum + 1
         LET l_errno[l_errnum] = SQLCA.sqlcode
      END IF
   END IF

   #多角性質
   CALL axmt540_xmdk045_default('1',l_xmdg.xmdg034,l_xmdg.xmdg056,l_xmdg.xmdg055) RETURNING l_xmdg.xmdg034
   
   IF l_xmdg.xmdgstus <> 'Y' THEN
      LET l_errnum = l_errnum + 1
#      LET l_errno[l_errnum] = 'axm-00044'  #輸入的資料未確認!   #160318-00005#50  mark
      LET l_errno[l_errnum] = 'ain-00265'  #輸入的資料未確認!    #160318-00005#50  add
   END IF
   
   IF p_type = '2' THEN
      IF l_xmdg.xmdg005 <> g_xmdk_m.xmdk007  THEN
         LET l_errnum = l_errnum + 1
         LET l_errno[l_errnum] = 'axm-00110'  #出通單客戶編號與出貨單單頭資料不符！
      END IF
      
      IF l_xmdg.xmdg006 <> g_xmdk_m.xmdk008 THEN
         LET l_errnum = l_errnum + 1
         LET l_errno[l_errnum] = 'axm-00111'  #出通單收款客戶與出貨單單頭資料不符！
      END IF
      
      IF l_xmdg.xmdg007 <> g_xmdk_m.xmdk009 THEN
         LET l_errnum = l_errnum + 1
         LET l_errno[l_errnum] = 'axm-00112'  #出通單收貨客戶與出貨單單頭資料不符！
      END IF
      
      IF l_xmdg.xmdg202 <> g_xmdk_m.xmdk202 THEN
         LET l_errnum = l_errnum + 1
         LET l_errno[l_errnum] = 'axm-00513'  #出通單稅別與出貨單單頭資料不符！
      END IF
      
      IF l_xmdg.xmdg001 <> g_xmdk_m.xmdk002 THEN
         LET l_errnum = l_errnum + 1
         LET l_errno[l_errnum] = 'axm-00091'  #出貨性質與出通單出貨性質不符！
      END IF
      
      IF l_xmdg.xmdg034 <> g_xmdk_m.xmdk045 THEN
         LET l_errnum = l_errnum + 1
         LET l_errno[l_errnum] = 'axm-00138'  #單身出通單對應的多角性質需與單頭多角性質一致！
      END IF
      
      IF l_xmdg.xmdg010 <> g_xmdk_m.xmdk012 AND g_oodb011 = '1' THEN
         LET l_errnum = l_errnum + 1
         LET l_errno[l_errnum] = 'axm-00113'  #出通單稅別與出貨單單頭資料不符！
      END IF
      
      IF l_xmdg.xmdg014 <> g_xmdk_m.xmdk016 THEN
         LET l_errnum = l_errnum + 1
         LET l_errno[l_errnum] = 'axm-00114'  #出通單幣別與出貨單單頭資料不符！
      END IF
      
      IF l_xmdg.xmdg009 <> g_xmdk_m.xmdk011 THEN
         LET l_errnum = l_errnum + 1
         LET l_errno[l_errnum] = 'axm-00115'  #出通單交易條件與出貨單單頭資料不符！
      END IF
      
      IF l_xmdg.xmdg008 <> g_xmdk_m.xmdk010 THEN
         LET l_errnum = l_errnum + 1
         LET l_errno[l_errnum] = 'axm-00116'  #出通單收款條件與出貨單單頭資料不符！
      END IF
      
      IF l_xmdg.xmdg013 <> g_xmdk_m.xmdk015 THEN
         LET l_errnum = l_errnum + 1
         LET l_errno[l_errnum] = 'axm-00117'  #出通單發票類型與出貨單單頭資料不符！
      END IF
      
      IF l_xmdg.xmdg032 <> g_xmdk_m.xmdk042 THEN
         LET l_errnum = l_errnum + 1
         LET l_errno[l_errnum] = 'axm-00356'  #單據內外銷與單頭資料不符！
      END IF
      
      IF l_xmdg.xmdg024 = 'Y' AND g_xmdk_m.xmdk028 = 'Y' THEN
         LET l_errnum = l_errnum + 1
         LET l_errno[l_errnum] = 'axm-00093'  #出通單已勾選要製作包裝單，不可重複勾選！
      END IF
      
      IF l_xmdg.xmdg025 = 'Y' AND g_xmdk_m.xmdk029 = 'Y' THEN
         LET l_errnum = l_errnum + 1
         LET l_errno[l_errnum] = 'axm-00094'  #出通單已勾選要製作Invoice，不可重複勾選！
      END IF
      
      IF l_xmdg.xmdg056 <> g_xmdk_m.xmdk044 THEN
         LET l_errnum = l_errnum + 1
         LET l_errno[l_errnum] = 'axm-00272'  #單身多角流程代碼需一致！
      END IF
   END IF

   FOR l_num = 1 TO l_errno.getlength()
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = l_errno[l_num]
      LET g_errparam.extend = p_xmdgdocno
      LET g_errparam.popup = TRUE
       
      LET g_errparam.replace[1] = l_gzze003
      
      CALL cl_err()

      LET r_success = FALSE
   END FOR

   #客戶編號檢查
   IF NOT cl_null(l_xmdg.xmdg005) THEN               
      IF NOT s_axmt540_client_chk(g_xmdk_m.xmdkdocno,'1',l_xmdg.xmdg005,'') THEN
         LET r_success = FALSE
      END IF
   END IF

   IF p_type = '2' THEN
      #單身"包裝單製作"不可混和輸入
      LET l_sql = "SELECT COUNT(xmdlseq)",
                  "  FROM xmdl_t LEFT OUTER JOIN xmdg_t ON xmdlent = xmdgent AND xmdl001 = xmdgdocno",
                  " WHERE xmdlent = '",g_enterprise,"'",
                  "   AND xmdldocno = '",g_xmdk_m.xmdkdocno,"'",
                  "   AND xmdg024 <> '",l_xmdg.xmdg024,"'"
                  
      IF NOT cl_null(g_xmdl_d_t.xmdlseq) THEN
         LET l_sql = l_sql," AND xmdlseq <> '",g_xmdl_d_t.xmdlseq,"'"   #排除當下單身
      END IF
      
      PREPARE axmt540_notice_pre1 FROM l_sql
      
      LET l_num = 0      
      EXECUTE axmt540_notice_pre1 INTO l_num

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "EXECUTE" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         LET r_success = FALSE
      END IF

      IF l_num > 0 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = 'axm-00180'   #出通單設置的"是否製作包裝單"不一致！
         LET g_errparam.popup  = TRUE 
         
         LET g_errparam.replace[1] = l_gzze003
         
         CALL cl_err()
 
         LET r_success = FALSE
      END IF
      
      #單身"Invoice"不可混和輸入
      LET l_sql = "SELECT COUNT(xmdlseq)",
                  "  FROM xmdl_t LEFT OUTER JOIN xmdg_t ON xmdlent = xmdgent AND xmdl001 = xmdgdocno",
                  " WHERE xmdlent = '",g_enterprise,"'",
                  "   AND xmdldocno = '",g_xmdk_m.xmdkdocno,"'",
                  "   AND xmdg025 <> '",l_xmdg.xmdg025,"'"
                  
      IF NOT cl_null(g_xmdl_d_t.xmdlseq) THEN
         LET l_sql = l_sql," AND xmdlseq <> '",g_xmdl_d_t.xmdlseq,"'"   #排除當下單身
      END IF
      
      PREPARE axmt540_notice_pre2 FROM l_sql
      
      LET l_num = 0      
      EXECUTE axmt540_notice_pre2 INTO l_num

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "EXECUTE" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         LET r_success = FALSE
      END IF

      IF l_num > 0 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = 'axm-00181'   #出通單設置的"是否製作Invoice"不一致！
         LET g_errparam.popup  = TRUE 
         
         LET g_errparam.replace[1] = l_gzze003
         
         CALL cl_err()
 
         LET r_success = FALSE
      END IF
      
   END IF

   #多角check
   #多角性質為："2.銷售多角,5.中間交易,7:代採購出貨"
   IF l_xmdg.xmdg034 = '2' OR
      l_xmdg.xmdg034 = '5' OR
      l_xmdg.xmdg034 = '7' THEN
      
      IF cl_null(l_xmdg.xmdg056) THEN          #"多角流程代碼"為空
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'axm-00496'     #多角性質為多角流程時，"多角流程代碼"不可為空！
         LET g_errparam.extend = p_xmdgdocno
         LET g_errparam.popup = TRUE

         LET g_errparam.replace[1] = l_gzze003
         
         CALL cl_err()

         LET r_success = FALSE
      ELSE
         IF NOT axmt540_xmdk044_chk(l_xmdg.xmdg056,l_xmdg.xmdg001) THEN
            LET r_success = FALSE
         END IF
         
         #150917-00001#3  2016/01/19 By earl mark s
#         #中斷續拋
#         IF axmt540_break_continue(l_xmdg.xmdg056) THEN
#            #多角序號檢查
#            IF NOT axmt540_source_xmdk035_chk('1',p_xmdgdocno,g_xmdk_m.xmdk035) THEN
#               LET r_success = FALSE
#            END IF
#         END IF
         #150917-00001#3  2016/01/19 By earl mark e
         
      END IF
      
      IF l_xmdg.xmdg054 <> 'Y' THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'axm-00517'     #來源需為"多角貿易已拋轉"之單據！
         LET g_errparam.extend = p_xmdgdocno
         LET g_errparam.popup = TRUE
         
         LET g_errparam.replace[1] = l_gzze003
         
         CALL cl_err()

         LET r_success = FALSE
      END IF      
   END IF

   CALL cl_err_collect_show()
   RETURN r_success
END FUNCTION
################################################################################
# Descriptions...: 檢查來源訂單單身
# Memo...........:
# Usage..........: CALL axmt540_xmdl003_xmdl004_xmdl005_xmdl006_chk()
#                  RETURNING r_success
# Input parameter: 
# Return code....: r_success   執行結果
#                : 
# Date & Author..: 140701 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_xmdl003_xmdl004_xmdl005_xmdl006_chk()
   DEFINE l_num      LIKE type_t.num5
   DEFINE r_success  LIKE type_t.num5
   DEFINE l_seq      LIKE xmdl_t.xmdlseq
 
   LET r_success = TRUE
   
   IF NOT cl_null(g_xmdl_d[l_ac].xmdl003) AND
      NOT cl_null(g_xmdl_d[l_ac].xmdl004) AND
      NOT cl_null(g_xmdl_d[l_ac].xmdl005) AND
      NOT cl_null(g_xmdl_d[l_ac].xmdl006) THEN
      
      #檢查該筆出貨單項次是否已輸入單身
      LET l_seq = g_xmdl_d_t.xmdlseq
      IF cl_null(l_seq) THEN
         LET l_seq = g_xmdl_d[l_ac].xmdlseq
      END IF      
      
      LET l_num = 0
      SELECT COUNT(xmdlseq) INTO l_num
        FROM xmdl_t
       WHERE xmdlent = g_enterprise
         AND xmdldocno = g_xmdk_m.xmdkdocno
         AND xmdl003 = g_xmdl_d[l_ac].xmdl003
         AND xmdl004 = g_xmdl_d[l_ac].xmdl004
         AND xmdl005 = g_xmdl_d[l_ac].xmdl005
         AND xmdl006 = g_xmdl_d[l_ac].xmdl006
         AND xmdlseq <> l_seq
      
      IF l_num > 0 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'axm-00246'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         LET g_errparam.replace[1] = g_xmdl_d[l_ac].xmdl003 
         LET g_errparam.replace[2] =  g_xmdl_d[l_ac].xmdl004 
         LET g_errparam.replace[3] =  g_xmdl_d[l_ac].xmdl005 
         LET g_errparam.replace[4] =  g_xmdl_d[l_ac].xmdl006
         CALL cl_err()
         LET r_success = FALSE
         RETURN r_success
      END IF
            
      #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
      INITIALIZE g_chkparam.* TO NULL
      #160318-00025#15 by 07900 --add-str 
      LET g_errshow = TRUE #是否開窗
      #160318-00025#15 by 07900 --add-end       
      #設定g_chkparam.*的參數
      LET g_chkparam.arg1 = g_xmdl_d[l_ac].xmdl003
      LET g_chkparam.arg2 = g_xmdl_d[l_ac].xmdl004
      LET g_chkparam.arg3 = g_xmdl_d[l_ac].xmdl005
      LET g_chkparam.arg4 = g_xmdl_d[l_ac].xmdl006

#      IF g_prog = 'axmt542' THEN        #160623-00014#1-mod-(S)
      IF g_prog MATCHES 'axmt542' THEN  #160623-00014#1-mod-(E)
         #替換錯誤訊息
#         LET g_chkparam.err_str[1] = "axm-00136:axm-00592"   #查無此訂單交期明細！     #160318-00005#50  mark
         LET g_chkparam.err_str[1] = "axm-00136:sub-01327|axmt501|",cl_get_progname('axmt501',g_lang,"2"),"|:EXEPROGapaxmt501"   #查無此訂單交期明細！      #160318-00005#50  add
#         LET g_chkparam.err_str[2] = "ais-00085:axm-00593"   #該單據未確認！        #160318-00005#50  mark
         LET g_chkparam.err_str[2] = "ais-00085:sub-01332|axmt501|",cl_get_progname('axmt501',g_lang,"2"),"|:EXEPROGapaxmt501"   #該單據未確認！         #160318-00005#50  add
         LET g_chkparam.err_str[3] = "axm-00139:axm-00594"   #此訂單的出貨據點與當前營運據點不一樣，不允許輸入此訂單！
         LET g_chkparam.err_str[4] = "axm-00631:axm-00632"   #訂單項次已結案或留置，不可輸入！
      END IF
    
      #呼叫檢查存在並帶值的library
      IF NOT cl_chk_exist("v_xmddseq2") THEN
         LET r_success = FALSE
         RETURN r_success
      END IF     

 
   END IF
   
   RETURN r_success
END FUNCTION

PRIVATE FUNCTION axmt540_xmdl003_xmdl004_xmdl005_xmdl006_default()
   DEFINE r_success     LIKE type_t.num5

   LET r_success = TRUE
   LET g_errno = ''

   IF cl_null(g_xmdl_d[l_ac].xmdl003) THEN
      LET g_xmdl_d[l_ac].xmdl004 = ''
      LET g_xmdl_d[l_ac].xmdl005 = ''
      LET g_xmdl_d[l_ac].xmdl006 = ''
   END IF

   IF cl_null(g_xmdl_d[l_ac].xmdl004) THEN
      LET g_xmdl_d[l_ac].xmdl005 = ''
      LET g_xmdl_d[l_ac].xmdl006 = ''
   END IF

   IF cl_null(g_xmdl_d[l_ac].xmdl005) THEN
      LET g_xmdl_d[l_ac].xmdl006 = ''
   END IF
   
   LET g_xmdlseq = g_xmdl_d[l_ac].xmdlseq  #160512-00004#2-add
   CALL axmt540_xmdd_search('2',g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,g_xmdl_d[l_ac].xmdl005,g_xmdl_d[l_ac].xmdl006)   
   IF cl_null(g_errno) THEN

      LET g_xmdl_d[l_ac].xmdl007 = g_xmdl.xmdl007         
      LET g_xmdl_d[l_ac].xmdl008 = g_xmdl.xmdl008
      LET g_xmdl_d[l_ac].xmdl009 = g_xmdl.xmdl009
      LET g_xmdl_d[l_ac].xmdl010 = g_xmdl.xmdl010
      LET g_xmdl_d[l_ac].xmdl011 = g_xmdl.xmdl011
      LET g_xmdl_d[l_ac].xmdl012 = g_xmdl.xmdl012
      LET g_xmdl_d[l_ac].xmdl013 = g_xmdl.xmdl013
      LET g_xmdl_d[l_ac].xmdl014 = g_xmdl.xmdl014
      LET g_xmdl_d[l_ac].xmdl015 = g_xmdl.xmdl015
      LET g_xmdl_d[l_ac].xmdl016 = g_xmdl.xmdl016
      LET g_xmdl_d[l_ac].xmdl017 = g_xmdl.xmdl017
      LET g_xmdl_d[l_ac].xmdl018 = g_xmdl.xmdl018
      LET g_xmdl_d[l_ac].xmdl019 = g_xmdl.xmdl019
      LET g_xmdl_d[l_ac].xmdl020 = g_xmdl.xmdl020
      LET g_xmdl_d[l_ac].xmdl021 = g_xmdl.xmdl021
      LET g_xmdl_d[l_ac].xmdl022 = g_xmdl.xmdl022
      LET g_xmdl_d[l_ac].xmdl023 = g_xmdl.xmdl023
      
      LET g_xmdl_d[l_ac].xmdl030 = g_xmdl.xmdl030
      LET g_xmdl_d[l_ac].xmdl031 = g_xmdl.xmdl031
      LET g_xmdl_d[l_ac].xmdl032 = g_xmdl.xmdl032
      LET g_xmdl_d[l_ac].xmdl033 = g_xmdl.xmdl033
      LET g_xmdl_d[l_ac].xmdl034 = g_xmdl.xmdl034
      
      LET g_xmdl_d[l_ac].xmdl035 = g_xmdl.xmdl035
      LET g_xmdl_d[l_ac].xmdl036 = g_xmdl.xmdl036
      LET g_xmdl_d[l_ac].xmdl037 = g_xmdl.xmdl037
      
      LET g_xmdl_d[l_ac].xmdl041 = g_xmdl.xmdl041
      
      LET g_xmdl_d[l_ac].xmdl050 = g_xmdl.xmdl050
      LET g_xmdl_d[l_ac].xmdl051 = g_xmdl.xmdl051  #150326
      LET g_xmdl_d[l_ac].xmdl052 = g_xmdl.xmdl052
      
      LET g_xmdl_d[l_ac].xmdl056 = g_xmdl.xmdl056

      LET g_xmdl_d[l_ac].xmdl088 = g_xmdl.xmdl088

      LET g_xmdl2_d[l_ac].xmdl024 = g_xmdl.xmdl024
      LET g_xmdl2_d[l_ac].xmdl025 = g_xmdl.xmdl025
      LET g_xmdl2_d[l_ac].xmdl026 = g_xmdl.xmdl026
      LET g_xmdl2_d[l_ac].xmdl027 = g_xmdl.xmdl027
      LET g_xmdl2_d[l_ac].xmdl028 = g_xmdl.xmdl028
      LET g_xmdl2_d[l_ac].xmdl029 = g_xmdl.xmdl029        
     
      LET g_xmdl2_d[l_ac].xmdl042 = g_xmdl.xmdl042
      LET g_xmdl2_d[l_ac].xmdl043 = g_xmdl.xmdl043
      LET g_xmdl2_d[l_ac].xmdl044 = g_xmdl.xmdl044
      LET g_xmdl2_d[l_ac].xmdl045 = g_xmdl.xmdl045
      LET g_xmdl2_d[l_ac].xmdl046 = g_xmdl.xmdl046
      
      CALL s_desc_get_item_desc(g_xmdl_d[l_ac].xmdl008)RETURNING g_xmdl_d[l_ac].xmdl008_desc,g_xmdl_d[l_ac].xmdl008_desc_desc         
      CALL s_desc_get_acc_desc('221',g_xmdl_d[l_ac].xmdl011) RETURNING g_xmdl_d[l_ac].xmdl011_desc
      
      CALL s_desc_get_stock_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014) RETURNING g_xmdl_d[l_ac].xmdl014_desc
      CALL s_desc_get_locator_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015) RETURNING g_xmdl_d[l_ac].xmdl015_desc
      CALL s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl017) RETURNING g_xmdl_d[l_ac].xmdl017_desc
      CALL s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl019) RETURNING g_xmdl_d[l_ac].xmdl019_desc         
               
      CALL s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl021) RETURNING g_xmdl_d[l_ac].xmdl021_desc
      CALL s_desc_get_tax_desc1(g_site,g_xmdl2_d[l_ac].xmdl025) RETURNING g_xmdl2_d[l_ac].xmdl025_desc
      
      CALL axmt540_xmdl050_ref()
      
      LET g_xmdl_d_o.* = g_xmdl_d[l_ac].*
      LET g_xmdl2_d_o.* = g_xmdl2_d[l_ac].*
         
   END IF

   IF NOT cl_null(g_errno) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = g_errno
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      LET r_success = FALSE
      RETURN r_success
   END IF 

   RETURN r_success

END FUNCTION

PRIVATE FUNCTION axmt540_xmdl005_count()
   DEFINE l_n          LIKE type_t.num5
   #若只有一筆項序自動帶出
   IF NOT cl_null(g_xmdl_d[l_ac].xmdl003) AND
      NOT cl_null(g_xmdl_d[l_ac].xmdl004) THEN
      
      LET l_n = 0
      
      SELECT COUNT(xmddseq1) INTO l_n
        FROM xmdd_t
       WHERE xmddent = g_enterprise
         AND xmdddocno = g_xmdl_d[l_ac].xmdl003
         AND xmddseq = g_xmdl_d[l_ac].xmdl004
      
      IF l_n = 1 THEN
         SELECT xmddseq1 INTO g_xmdl_d[l_ac].xmdl005
           FROM xmdd_t
          WHERE xmddent = g_enterprise
            AND xmdddocno = g_xmdl_d[l_ac].xmdl003
            AND xmddseq = g_xmdl_d[l_ac].xmdl004
      END IF
   END IF
   
END FUNCTION

PRIVATE FUNCTION axmt540_xmdl006_count()
   DEFINE l_n          LIKE type_t.num5
   #若只有一筆分批序自動帶出
   IF NOT cl_null(g_xmdl_d[l_ac].xmdl003) AND
      NOT cl_null(g_xmdl_d[l_ac].xmdl004) AND
      NOT cl_null(g_xmdl_d[l_ac].xmdl005) THEN
      
      LET l_n = 0
      
      SELECT COUNT(xmddseq2) INTO l_n
        FROM xmdd_t
       WHERE xmddent = g_enterprise
         AND xmdddocno = g_xmdl_d[l_ac].xmdl003
         AND xmddseq = g_xmdl_d[l_ac].xmdl004
         AND xmddseq1 = g_xmdl_d[l_ac].xmdl005
      
      IF l_n = 1 THEN
         SELECT xmddseq2 INTO g_xmdl_d[l_ac].xmdl006
           FROM xmdd_t
          WHERE xmddent = g_enterprise
            AND xmdddocno = g_xmdl_d[l_ac].xmdl003
            AND xmddseq = g_xmdl_d[l_ac].xmdl004
            AND xmddseq1 = g_xmdl_d[l_ac].xmdl005
      END IF
   END IF   
   
END FUNCTION

PRIVATE FUNCTION axmt540_xmdl007_chk()
   DEFINE r_success    LIKE type_t.num5   
   
   LET r_success = TRUE
   
#   IF g_prog <> 'axmt541' THEN            #160623-00014#1-mod-(S)
   IF g_prog NOT MATCHES 'axmt541' THEN   #160623-00014#1-mod-(E)
      #若無輸入出通單或訂單時，子件特性只可為9.樣品
      IF cl_null(g_xmdl_d[l_ac].xmdl001) AND
         cl_null(g_xmdl_d[l_ac].xmdl003) AND
         g_xmdl_d[l_ac].xmdl007 <> '9' THEN
         
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'axm-00141'   #單身沒有輸入來源的出通單或訂單資料時，子件特性只能選擇'9:樣品'
         LET g_errparam.extend = g_xmdl_d[l_ac].xmdl007
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF
   
   RETURN r_success
END FUNCTION

PRIVATE FUNCTION axmt540_xmdl050_ref()
   DEFINE l_gzcb004     LIKE gzcb_t.gzcb004
   
   LET l_gzcb004 = ''
   #160705-00042#12 160715 by sakura mark(S)   
   #SELECT gzcb004
   #  INTO l_gzcb004
   #  FROM gzcb_t
   # WHERE gzcb001 = '24'
   #   AND gzcb002 = 'axmt540'   #出貨單、無訂單出貨共用
   #160705-00042#12 160715 by sakura mark(E)
   #160705-00042#12 160715 by sakura add(S)      
   SELECT gzcb004
     INTO l_gzcb004
     FROM gzcb_t,gzzz_t 
    WHERE gzcb001 = '24' 
      AND gzcb002 = gzzz006 
      AND gzzz001 = g_prog
   #160705-00042#12 160715 by sakura add(E)      
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = l_gzcb004
   LET g_ref_fields[2] = g_xmdl_d[l_ac].xmdl050
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001=? AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xmdl_d[l_ac].xmdl050_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xmdl_d[l_ac].xmdl050_desc
END FUNCTION

PRIVATE FUNCTION axmt540_xmdk009_xmdk021_chk()
   DEFINE l_pmaa027       LIKE pmaa_t.pmaa027
   DEFINE r_success       LIKE type_t.num5
   
   LET r_success = TRUE
   
   IF NOT cl_null(g_xmdk_m.xmdk009) AND NOT cl_null(g_xmdk_m.xmdk021) THEN     
                  
      #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
      INITIALIZE g_chkparam.* TO NULL
       #160318-00025#15 by 07900 --add-str 
       LET g_errshow = TRUE #是否開窗
        #160318-00025#15 by 07900 --add-end       
      CALL s_axmt500_get_pmaa027(g_xmdk_m.xmdk009) RETURNING l_pmaa027
               
      #設定g_chkparam.*的參數
      LET g_chkparam.arg1 = l_pmaa027
      LET g_chkparam.arg2 = g_xmdk_m.xmdk021
      #160318-00025#15 by 07900 --add-str 
      LET g_chkparam.err_str[1] ="anm-00025:sub-01302|aooi350|",cl_get_progname("aooi350",g_lang,"2"),"|:EXEPROGaooi350"
      #160318-00025#15 by 07900 --add-end                        
      #呼叫檢查存在並帶值的library
      IF NOT cl_chk_exist("v_oofb019") THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF
   
   RETURN r_success
END FUNCTION
################################################################################
# Descriptions...: 料件編號檢查
# Memo...........:
# Usage..........: CALL axmt540_xmdl008_chk()
#                  
# Input parameter: 
#                : 
# Return code....: r_success  執行結果
#                :
# Date & Author..: 140313 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_xmdl008_chk()
   DEFINE r_success              LIKE type_t.num5
   
   DEFINE l_success              LIKE type_t.num5
   DEFINE l_flag                 LIKE type_t.num5
   DEFINE l_num                  LIKE type_t.num5

   LET r_success = TRUE

   IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) THEN
   
      IF NOT cl_null(g_xmdl_d[l_ac].xmdl003) AND cl_null(g_xmdl_d[l_ac].xmdl004) THEN #費用料號
         LET l_num = 0
         SELECT COUNT(xmdsseq) INTO l_num
           FROM xmds_t
          WHERE xmdsent = g_enterprise
            AND xmdsdocno = g_xmdl_d[l_ac].xmdl003
            AND xmds001 = g_xmdl_d[l_ac].xmdl008
         
         IF l_num = 0 THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = "axm-00516"   #該料號不存在於[訂單維護作業axmt500]的預估費用資料中！
            LET g_errparam.extend = g_xmdl_d[l_ac].xmdl008
            LET g_errparam.popup = TRUE
            CALL cl_err()
         
            LET r_success = FALSE
            RETURN r_success
         END IF

      ELSE                  
         #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
         INITIALIZE g_chkparam.* TO NULL
               
         #設定g_chkparam.*的參數
         LET g_chkparam.arg1 = g_xmdl_d[l_ac].xmdl008
                 
         #呼叫檢查存在並帶值的library
         IF NOT cl_chk_exist("v_imaf001_14") THEN
            LET r_success = FALSE
            RETURN r_success
         END IF
      END IF

      #檢核輸入的料件的生命週期是否在單據別限制範圍內
      CALL s_control_chk_doc('4',g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdl008,'','','','')
      RETURNING l_success,l_flag

      IF NOT l_success OR NOT l_flag THEN
         LET r_success = FALSE
         RETURN r_success
      END IF                

      #檢核輸入的料件的產品分類是否在單據別限制範圍內
      CALL s_control_chk_doc('5',g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdl008,'','','','')
      RETURNING l_success,l_flag
      
      IF NOT l_success OR NOT l_flag THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
      
      #產品特徵、替代料號檢查
      IF NOT axmt540_xmdl008_xmdl009_chk() THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
      
      #單位檢查，因有來源時不可更改單位
      IF NOT cl_null(g_xmdl_d[l_ac].xmdl001) OR NOT cl_null(g_xmdl_d[l_ac].xmdl003) THEN
         IF NOT s_axmt540_unit_chk(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl017) THEN
            LET r_success = FALSE
            RETURN r_success
         END IF
      END IF
      
   END IF 

   RETURN r_success
END FUNCTION

PRIVATE FUNCTION axmt540_xmdl050_chk()
   DEFINE l_gzcb004     LIKE gzcb_t.gzcb004
   DEFINE l_success     LIKE type_t.num5
   
   LET l_gzcb004 = ''
   #160705-00042#12 160715 by sakura mark(S)   
   #SELECT gzcb004
   #  INTO l_gzcb004
   #  FROM gzcb_t
   # WHERE gzcb001 = '24'
   #   AND gzcb002 = 'axmt540'   #出貨單、無訂單出貨共用
   #160705-00042#12 160715 by sakura mark(E)
   #160705-00042#12 160715 by sakura add(S)
   SELECT gzcb004
     INTO l_gzcb004
     FROM gzcb_t,gzzz_t 
    WHERE gzcb001 = '24' 
      AND gzcb002 = gzzz006 
      AND gzzz001 = g_prog
   #160705-00042#12 160715 by sakura add(E)      
   
   CALL s_azzi650_chk_exist(l_gzcb004,g_xmdl_d[l_ac].xmdl050) RETURNING l_success
   IF NOT l_success THEN
      RETURN FALSE
   END IF
   
   RETURN TRUE
END FUNCTION
#頁籤Form only欄位顯示
PRIVATE FUNCTION axmt540_xmdl_display()
LET g_xmdl2_d[l_ac].xmdlseq = g_xmdl_d[l_ac].xmdlseq   #項次
LET g_xmdl2_d[l_ac].xmdl0071 = g_xmdl_d[l_ac].xmdl007  #子料件特性
LET g_xmdl2_d[l_ac].xmdl0081 = g_xmdl_d[l_ac].xmdl008  #料件編號

LET g_xmdl2_d[l_ac].xmdl0091 = g_xmdl_d[l_ac].xmdl009  #產品特徵
LET g_xmdl2_d[l_ac].xmdl0091_desc = g_xmdl_d[l_ac].xmdl009_desc  #產品特徵說明

LET g_xmdl2_d[l_ac].xmdl0111 = g_xmdl_d[l_ac].xmdl011  #作業編號
LET g_xmdl2_d[l_ac].xmdl0121 = g_xmdl_d[l_ac].xmdl012  #製成序

LET g_xmdl2_d[l_ac].xmdl0171 = g_xmdl_d[l_ac].xmdl017  #出貨單位
LET g_xmdl2_d[l_ac].xmdl0171_desc = g_xmdl_d[l_ac].xmdl017_desc  #單位名稱
LET g_xmdl2_d[l_ac].xmdl0181 = g_xmdl_d[l_ac].xmdl018  #數量

LET g_xmdl2_d[l_ac].xmdl0211 = g_xmdl_d[l_ac].xmdl021  #計價單位
LET g_xmdl2_d[l_ac].xmdl0211_desc = g_xmdl_d[l_ac].xmdl021_desc  #單位名稱
LET g_xmdl2_d[l_ac].xmdl0221 = g_xmdl_d[l_ac].xmdl022  #計價數量

LET g_xmdl2_d[l_ac].xmdl0081_desc = g_xmdl_d[l_ac].xmdl008_desc  #品名
LET g_xmdl2_d[l_ac].xmdl0081_desc_desc = g_xmdl_d[l_ac].xmdl008_desc_desc  #規格

END FUNCTION

################################################################################
# Descriptions...: 出貨單過帳Input
# Memo...........:
# Usage..........: CALL axmt540_post_input()
#                  RETURNING r_success
# Input parameter: 
#                : 
# Return code....: r_success   處理狀況
#                : 
# Date & Author..: 140326 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_post_input()
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_para_data     LIKE type_t.chr80          #接參數用
   
   LET r_success = TRUE
   #160604-00034#18-s add
   #若aoos020"進銷存過帳日期控管方式"參數設定為"不可修改"時，則將過帳日期關閉
   IF NOT cl_chk_update_pstdt() THEN
      CALL cl_set_comp_entry("xmdk001",FALSE)    
      LET g_xmdk_m.xmdk001 = g_today  #过账日期
      DISPLAY BY NAME g_xmdk_m.xmdk001 
   END IF
   #160604-00034#18-e add
   INPUT BY NAME g_xmdk_m.xmdk001 ATTRIBUTE(WITHOUT DEFAULTS)

      BEFORE INPUT
         IF cl_null(g_xmdk_m.xmdk001) THEN
            LET g_xmdk_m.xmdk001 = g_today
         END IF
         DISPLAY BY NAME g_xmdk_m.xmdk001

      AFTER FIELD xmdk001
         IF NOT cl_null(g_xmdk_m.xmdk001) THEN
            #151120-00003#1 20151120 mark by beckxie
            #IF g_xmdk_m.xmdk001 < g_xmdk_m.xmdkdocdt THEN
            #   INITIALIZE g_errparam TO NULL
            #   LET g_errparam.code = 'axm-00267'   #扣帳日期不可小於單據日期！
            #   LET g_errparam.extend = g_xmdk_m.xmdk001
            #   LET g_errparam.popup = TRUE
            #   CALL cl_err()
            #
            #   LET g_xmdk_m.xmdk001 = g_xmdk_m_t.xmdk001
            #   NEXT FIELD CURRENT
            #END IF
            #151120-00003#1 20151120 mark by beckxie
            CALL cl_get_para(g_enterprise,g_site,'S-MFG-0031') RETURNING l_para_data
            IF g_xmdk_m.xmdk001 <= l_para_data THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00077'
               LET g_errparam.extend = g_xmdk_m.xmdk001
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_xmdk_m.xmdk001 = g_xmdk_m_t.xmdk001
               NEXT FIELD CURRENT
            END IF
         END IF
            
     AFTER INPUT
         IF INT_FLAG THEN
            EXIT INPUT
         END IF

         ON ACTION accept
            ACCEPT INPUT

         ON ACTION cancel
            LET INT_FLAG = TRUE
            EXIT INPUT

         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT INPUT

         ON ACTION close
            LET INT_FLAG = TRUE
            EXIT INPUT

   END INPUT

   IF INT_FLAG THEN
      LET INT_FLAG = FALSE      
      
      LET r_success = FALSE
      RETURN r_success
   END IF

   UPDATE xmdk_t
      SET xmdk001 = g_xmdk_m.xmdk001
    WHERE xmdkent = g_enterprise
      AND xmdkdocno = g_xmdk_m.xmdkdocno

   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE:"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      LET r_success = FALSE
      RETURN r_success
   END IF

   RETURN r_success

END FUNCTION

################################################################################
# Descriptions...: 自動產生簽收單
# Memo...........:
# Usage..........: CALL axmt540_produce_axmt580(p_xmdkdocno)
#                  RETURNING r_success
# Input parameter: p_xmdkdocno  單據單號
#                : p_xmdkstus   單據狀態
#                : p_xmdk002    出貨性質
# Return code....: r_success    執行結果
#                : r_xmdkdocno  簽收單號
# Date & Author..: 140423 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_produce_axmt580(p_xmdkdocno,p_xmdkstus,p_xmdk002)
   DEFINE p_xmdkdocno     LIKE xmdk_t.xmdkdocno
   DEFINE p_xmdkstus      LIKE xmdk_t.xmdkstus
   DEFINE p_xmdk002       LIKE xmdk_t.xmdk002
   DEFINE r_success       LIKE type_t.num5
   DEFINE r_xmdkdocno     LIKE xmdk_t.xmdkdocno
   
   DEFINE l_ooef004       LIKE ooef_t.ooef004
   DEFINE l_n             LIKE type_t.num5
   DEFINE l_produce    RECORD
             slip         LIKE xmdk_t.xmdkdocno,
             date         LIKE xmdk_t.xmdk001
                       END RECORD
   DEFINE l_xmdk       RECORD
             xmdkdocno    LIKE xmdk_t.xmdkdocno,
             xmdkdocdt    LIKE xmdk_t.xmdkdocdt,
             xmdk000      LIKE xmdk_t.xmdk000,
             xmdk001      LIKE xmdk_t.xmdk001,
             xmdk002      LIKE xmdk_t.xmdk002,
             xmdk003      LIKE xmdk_t.xmdk003,
             xmdk004      LIKE xmdk_t.xmdk004,
             xmdk005      LIKE xmdk_t.xmdk005,
             xmdk006      LIKE xmdk_t.xmdk006,
             xmdk007      LIKE xmdk_t.xmdk007,
             xmdk008      LIKE xmdk_t.xmdk008,
             xmdk009      LIKE xmdk_t.xmdk009,
             xmdk010      LIKE xmdk_t.xmdk010,
             xmdk011      LIKE xmdk_t.xmdk011,
             xmdk012      LIKE xmdk_t.xmdk012,
             xmdk013      LIKE xmdk_t.xmdk013,
             xmdk014      LIKE xmdk_t.xmdk014,
             xmdk015      LIKE xmdk_t.xmdk015,    
             xmdk016      LIKE xmdk_t.xmdk016,             
             xmdk017      LIKE xmdk_t.xmdk017,
             xmdk018      LIKE xmdk_t.xmdk018,
             xmdk019      LIKE xmdk_t.xmdk019,
             xmdk035      LIKE xmdk_t.xmdk035,
             xmdk037      LIKE xmdk_t.xmdk037,
             xmdk042      LIKE xmdk_t.xmdk042,
             xmdk043      LIKE xmdk_t.xmdk043,
             xmdk044      LIKE xmdk_t.xmdk044,
             xmdk045      LIKE xmdk_t.xmdk045,
             xmdk083      LIKE xmdk_t.xmdk083,
             xmdk202      LIKE xmdk_t.xmdk202,
             xmdk087      LIKE xmdk_t.xmdk087,   #出貨走發票倉調撥 #add by lixiang 2015/12/30
             xmdkownid    LIKE xmdk_t.xmdkownid,
             xmdkowndp    LIKE xmdk_t.xmdkowndp,
             xmdkcrtid    LIKE xmdk_t.xmdkcrtid,
             xmdkcrtdp    LIKE xmdk_t.xmdkcrtdp,
             xmdkcrtdt    DATETIME YEAR TO SECOND,
             xmdkstus     LIKE xmdk_t.xmdkstus
                       END RECORD
   
   LET r_success = TRUE
   LET r_xmdkdocno = ''
   
   IF cl_null(p_xmdkdocno) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'sub-00324'  #單號欄位不可為空！
      LET g_errparam.extend = p_xmdkdocno
      LET g_errparam.popup = TRUE
      CALL cl_err()

      LET r_success = FALSE
      RETURN r_success,r_xmdkdocno
   END IF
   
   IF p_xmdkstus <> 'S' OR
      cl_null(p_xmdkstus) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'agl-00054'  #單據還未過帳不可進行此操作
      LET g_errparam.extend = p_xmdkdocno
      LET g_errparam.popup = TRUE
      CALL cl_err()

      LET r_success = FALSE
      RETURN r_success,r_xmdkdocno
   END IF
   
   IF p_xmdk002 <> '3' OR cl_null(p_xmdk002) THEN    #簽收訂單
   
#      IF g_prog = 'axmt541' THEN         #160623-00014#1-mod-(S)
      IF g_prog MATCHES 'axmt541' THEN   #160623-00014#1-mod-(E)
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'axm-00271'   #無訂單出貨單的出貨性質需為"3:簽收訂單"
         LET g_errparam.extend = p_xmdkdocno
         LET g_errparam.popup = TRUE
         CALL cl_err()

      ELSE
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'axm-00207'   #出貨單的出貨性質需為"3:簽收訂單"
         LET g_errparam.extend = p_xmdkdocno
         LET g_errparam.popup = TRUE
         CALL cl_err()

      END IF
      
      LET r_success = FALSE
      RETURN r_success,r_xmdkdocno
   END IF
   
   #若出貨單已經有對應得簽收單且還未確認扣帳時則不允許再轉出貨簽收單
   LET l_n = 0
   SELECT COUNT(xmdkdocno) INTO l_n
     FROM xmdk_t
    WHERE xmdkent = g_enterprise
      AND xmdk000 = '4'    #簽收單
      AND xmdk005 = p_xmdkdocno
      AND xmdkstus = 'N'

   IF l_n > 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'axm-00215'  #該出貨單已有存在其他未過帳簽收單！
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      LET r_success = FALSE
      RETURN r_success,r_xmdkdocno
   END IF

   INITIALIZE l_produce.* TO NULL
   LET l_produce.date = g_today

   #依據單據流程設置傳入前置單別取得後置單別
   CALL s_aooi210_get_doc(g_site,'','2',g_xmdk_m.xmdkdocno,'axmt580','axm-00435') RETURNING r_success,l_produce.slip
   IF NOT r_success THEN
      RETURN r_success,r_xmdkdocno
   END IF

#此子畫面已由s_aooi210代替
#   OPEN WINDOW w_axmt540_s01 WITH FORM cl_ap_formpath("axm",'axmt540_s01')
#   
#   INITIALIZE l_produce.* TO NULL
#   LET l_produce.date = g_today
#      
#   INPUT BY NAME l_produce.slip,l_produce.date WITHOUT DEFAULTS   
#      BEFORE INPUT
#      
#      AFTER FIELD slip
#         IF NOT cl_null(l_produce.slip) THEN         
#            #檢查單別
#            IF NOT s_aooi200_chk_slip(g_site,'',l_produce.slip,'axmt580') THEN
#               LET l_produce.slip = ''
#               NEXT FIELD CURRENT
#            END IF
#         END IF
#            
#      ON ACTION controlp INFIELD slip                          
#         #開窗i段
#			INITIALIZE g_qryparam.* TO NULL
#         LET g_qryparam.state = 'i'
#			LET g_qryparam.reqry = FALSE
#
#         LET g_qryparam.default1 = l_produce.slip             #給予default值
#
#         #給予arg
#         LET l_ooef004 = ''
#         SELECT ooef004 
#           INTO l_ooef004
#           FROM ooef_t
#          WHERE ooefent = g_enterprise
#            AND ooef001 = g_site
#            AND ooefstus = 'Y'
#             
#         LET g_qryparam.arg1 = l_ooef004
#         LET g_qryparam.arg2 = 'axmt580'
#
#         CALL q_ooba002_1()                                #呼叫開窗
#
#         LET l_produce.slip = g_qryparam.return1              #將開窗取得的值回傳到變數
#
#         DISPLAY l_produce.slip TO slip              #顯示到畫面上
#
#         NEXT FIELD slip                          #返回原欄位
#            
#      ON ACTION accept
#         ACCEPT INPUT
#         
#      ON ACTION cancel
#         EXIT INPUT
#
#      ON ACTION exit
#         EXIT INPUT
#      
#      AFTER INPUT
#      
#   END INPUT
#   
#   CLOSE WINDOW w_axmt540_s01
#   
#   IF INT_FLAG THEN
#      LET INT_FLAG = FALSE
#      LET r_success = FALSE
#      RETURN r_success,r_xmdkdocno
#   END IF

   INITIALIZE l_xmdk.* TO NULL
   SELECT xmdk002,
          xmdk003,xmdk004,
          xmdk006,xmdk007,xmdk008,xmdk009,
          xmdk010,xmdk011,xmdk012,xmdk013,
          xmdk014,xmdk015,xmdk016,xmdk017,
          xmdk018,xmdk019,xmdk035,xmdk037,
          xmdk042,xmdk043,xmdk044,xmdk045,
          xmdk083,xmdk202,
          xmdk087   #出貨走發票倉調撥 #add by lixiang 2015/12/30
     INTO l_xmdk.xmdk002,
          l_xmdk.xmdk003,l_xmdk.xmdk004,
          l_xmdk.xmdk006,l_xmdk.xmdk007,l_xmdk.xmdk008,l_xmdk.xmdk009,
          l_xmdk.xmdk010,l_xmdk.xmdk011,l_xmdk.xmdk012,l_xmdk.xmdk013,
          l_xmdk.xmdk014,l_xmdk.xmdk015,l_xmdk.xmdk016,l_xmdk.xmdk017,
          l_xmdk.xmdk018,l_xmdk.xmdk019,l_xmdk.xmdk035,l_xmdk.xmdk037,
          l_xmdk.xmdk042,l_xmdk.xmdk043,l_xmdk.xmdk044,l_xmdk.xmdk045,
          l_xmdk.xmdk083,l_xmdk.xmdk202,
          l_xmdk.xmdk087  #add by lixiang 2015/12/30
     FROM xmdk_t
    WHERE xmdkent = g_enterprise
      AND xmdkdocno = p_xmdkdocno
   
   LET l_xmdk.xmdkownid = g_user
   LET l_xmdk.xmdkowndp = g_dept
   LET l_xmdk.xmdkcrtid = g_user
   LET l_xmdk.xmdkcrtdp = g_dept 
   LET l_xmdk.xmdkcrtdt = cl_get_current()
   
   LET l_xmdk.xmdk000 = '4'          #簽收單
   LET l_xmdk.xmdk005 = p_xmdkdocno  #出貨單號
   LET l_xmdk.xmdkdocdt = g_today         #單據日期
   LET l_xmdk.xmdk001 = l_produce.date    #簽收日期
   LET l_xmdk.xmdkstus = 'N'
      
   #自動產生單號
   CALL s_aooi200_gen_docno(g_site,l_produce.slip,l_xmdk.xmdkdocdt,'axmt580')
   RETURNING r_success,l_xmdk.xmdkdocno
   IF NOT r_success THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'apm-00003'
      LET g_errparam.extend = l_produce.slip
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN r_success,r_xmdkdocno
   END IF
   
   LET r_xmdkdocno = l_xmdk.xmdkdocno
   
   INSERT INTO xmdk_t(xmdkent,xmdksite,xmdkdocno,
                      xmdk002,
                      xmdk003,xmdk004,
                      xmdk006,xmdk007,xmdk008,xmdk009,
                      xmdk010,xmdk011,xmdk012,xmdk013,
                      xmdk014,xmdk015,xmdk016,xmdk017,
                      xmdk018,xmdk019,xmdk035,xmdk037,
                      xmdk042,xmdk043,xmdk044,xmdk045,
                      xmdk083,xmdk202,
                      xmdk087,   #出貨走發票倉調撥 #add by lixiang 2015/12/30
                      xmdkownid,xmdkowndp,
                      xmdkcrtid,xmdkcrtdp,xmdkcrtdt,
                      xmdk000,xmdk005,xmdkdocdt,
                      xmdk001,xmdkstus)   
   VALUES (g_enterprise,g_site,l_xmdk.xmdkdocno,
           l_xmdk.xmdk002,
           l_xmdk.xmdk003,l_xmdk.xmdk004,
           l_xmdk.xmdk006,l_xmdk.xmdk007,l_xmdk.xmdk008,l_xmdk.xmdk009,
           l_xmdk.xmdk010,l_xmdk.xmdk011,l_xmdk.xmdk012,l_xmdk.xmdk013,
           l_xmdk.xmdk014,l_xmdk.xmdk015,l_xmdk.xmdk016,l_xmdk.xmdk017,
           l_xmdk.xmdk018,l_xmdk.xmdk019,l_xmdk.xmdk035,l_xmdk.xmdk037,
           l_xmdk.xmdk042,l_xmdk.xmdk043,l_xmdk.xmdk044,l_xmdk.xmdk045,
           l_xmdk.xmdk083,l_xmdk.xmdk202,
           l_xmdk.xmdk087,  #add by lixiang 2015/12/30
           l_xmdk.xmdkownid,l_xmdk.xmdkowndp,
           l_xmdk.xmdkcrtid,l_xmdk.xmdkcrtdp,l_xmdk.xmdkcrtdt,
           l_xmdk.xmdk000,l_xmdk.xmdk005,l_xmdk.xmdkdocdt,
           l_xmdk.xmdk001,l_xmdk.xmdkstus)   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "INSERT:"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      LET r_success = FALSE
      RETURN r_success,r_xmdkdocno
   END IF
   
   CALL s_axmt580_auto_insert(l_xmdk.xmdkdocno,l_xmdk.xmdk005,l_xmdk.xmdk016,l_xmdk.xmdk017) RETURNING r_success

#   141224改為直接開啟axmt580
#   IF r_success THEN
#      CALL cl_ask_msg_error(l_xmdk.xmdkdocno,'axm-00270','')
#   ELSE
#      RETURN r_success,r_xmdkdocno
#   END IF

   RETURN r_success,r_xmdkdocno
END FUNCTION

PRIVATE FUNCTION axmt540_xmdd_search(p_type,p_xmdl003,p_xmdl004,p_xmdl005,p_xmdl006)
   DEFINE p_type      LIKE type_t.chr1       #1.自動帶出 2.手動輸入
   DEFINE p_xmdl003   LIKE xmdl_t.xmdl003
   DEFINE p_xmdl004   LIKE xmdl_t.xmdl004
   DEFINE p_xmdl005   LIKE xmdl_t.xmdl005
   DEFINE p_xmdl006   LIKE xmdl_t.xmdl006   
   DEFINE l_xmda006   LIKE xmda_t.xmda006    #多角性質
   DEFINE l_xmdcunit  LIKE xmdc_t.xmdcunit   #出貨據點
   DEFINE l_num       LIKE xmdl_t.xmdl018
   DEFINE l_num1      LIKE xmdl_t.xmdl018
   DEFINE l_success   LIKE type_t.num5   

   DEFINE l_xmdl   RECORD
             xmdl007    LIKE xmdl_t.xmdl007,  #子件特性
             xmdl010    LIKE xmdl_t.xmdl010,  #包裝容器
             xmdl017    LIKE xmdl_t.xmdl017,  #出貨單位
             xmdl019    LIKE xmdl_t.xmdl019,  #參考單位
             xmdl021    LIKE xmdl_t.xmdl021,  #計價單位
             xmdl014    LIKE xmdl_t.xmdl014,  #出貨庫位
             xmdl015    LIKE xmdl_t.xmdl015,  #出貨儲位
             xmdl016    LIKE xmdl_t.xmdl016,  #批號          #160512-00004#2-add
             xmdl052    LIKE xmdl_t.xmdl052   #庫存管理特徵   #160512-00004#2-add
                   END RECORD
   #150917-00001#3  2016/01/21  By earl add s
   DEFINE l_chk           LIKE type_t.num5        #TRUE 需要校驗檢查  FALSE  不需校驗檢查
   DEFINE l_qty           LIKE xmdl_t.xmdl205     #未續拋數量
   DEFINE l_qty_batch     LIKE xmdl_t.xmdl205     #未續拋數量(考慮批號)
   #150917-00001#3  2016/01/21  By earl add e
   DEFINE l_xmdc032    LIKE xmdc_t.xmdc032   #160219-00003#1 add
   DEFINE l_pmdp023    LIKE pmdp_t.pmdp023   #160219-00003#1 add
   #add--160408-00035#5 By shiun--(S)
   #mod--161109-00085#4-s
   #DEFINE l_xmdl_a   RECORD LIKE xmdl_t.*   
   DEFINE l_xmdl_a RECORD  #出貨/簽收/銷退單單身明細檔
       xmdlent LIKE xmdl_t.xmdlent, #企業編號
       xmdlsite LIKE xmdl_t.xmdlsite, #營運據點
       xmdldocno LIKE xmdl_t.xmdldocno, #單據編號
       xmdlseq LIKE xmdl_t.xmdlseq, #項次
       xmdl001 LIKE xmdl_t.xmdl001, #出通單號
       xmdl002 LIKE xmdl_t.xmdl002, #出通項次
       xmdl003 LIKE xmdl_t.xmdl003, #訂單單號
       xmdl004 LIKE xmdl_t.xmdl004, #訂單項次
       xmdl005 LIKE xmdl_t.xmdl005, #訂單項序
       xmdl006 LIKE xmdl_t.xmdl006, #訂單分批序
       xmdl007 LIKE xmdl_t.xmdl007, #子件特性
       xmdl008 LIKE xmdl_t.xmdl008, #料件編號
       xmdl009 LIKE xmdl_t.xmdl009, #產品特徵
       xmdl010 LIKE xmdl_t.xmdl010, #包裝容器
       xmdl011 LIKE xmdl_t.xmdl011, #作業編號
       xmdl012 LIKE xmdl_t.xmdl012, #作業序
       xmdl013 LIKE xmdl_t.xmdl013, #多庫儲批出貨
       xmdl014 LIKE xmdl_t.xmdl014, #庫位
       xmdl015 LIKE xmdl_t.xmdl015, #儲位
       xmdl016 LIKE xmdl_t.xmdl016, #批號
       xmdl017 LIKE xmdl_t.xmdl017, #出貨單位
       xmdl018 LIKE xmdl_t.xmdl018, #數量
       xmdl019 LIKE xmdl_t.xmdl019, #參考單位
       xmdl020 LIKE xmdl_t.xmdl020, #參考數量
       xmdl021 LIKE xmdl_t.xmdl021, #計價單位
       xmdl022 LIKE xmdl_t.xmdl022, #計價數量
       xmdl023 LIKE xmdl_t.xmdl023, #檢驗否
       xmdl024 LIKE xmdl_t.xmdl024, #單價
       xmdl025 LIKE xmdl_t.xmdl025, #稅別
       xmdl026 LIKE xmdl_t.xmdl026, #稅率
       xmdl027 LIKE xmdl_t.xmdl027, #未稅金額
       xmdl028 LIKE xmdl_t.xmdl028, #含稅金額
       xmdl029 LIKE xmdl_t.xmdl029, #稅額
       xmdl030 LIKE xmdl_t.xmdl030, #專案編號
       xmdl031 LIKE xmdl_t.xmdl031, #WBS編號
       xmdl032 LIKE xmdl_t.xmdl032, #活動編號
       xmdl033 LIKE xmdl_t.xmdl033, #客戶料號
       xmdl034 LIKE xmdl_t.xmdl034, #QPA
       xmdl035 LIKE xmdl_t.xmdl035, #已簽收量
       xmdl036 LIKE xmdl_t.xmdl036, #已簽退量
       xmdl037 LIKE xmdl_t.xmdl037, #已銷退量
       xmdl038 LIKE xmdl_t.xmdl038, #主帳套已立帳數量
       xmdl039 LIKE xmdl_t.xmdl039, #帳套二已立帳數量
       xmdl040 LIKE xmdl_t.xmdl040, #帳套三已立帳數量
       xmdl041 LIKE xmdl_t.xmdl041, #保稅否
       xmdl042 LIKE xmdl_t.xmdl042, #取價來源
       xmdl043 LIKE xmdl_t.xmdl043, #價格來源參考單號
       xmdl044 LIKE xmdl_t.xmdl044, #價格來源參考項次
       xmdl045 LIKE xmdl_t.xmdl045, #取出價格
       xmdl046 LIKE xmdl_t.xmdl046, #價差比
       xmdl047 LIKE xmdl_t.xmdl047, #已開發票數量
       xmdl048 LIKE xmdl_t.xmdl048, #發票編號
       xmdl049 LIKE xmdl_t.xmdl049, #發票號碼
       xmdl050 LIKE xmdl_t.xmdl050, #理由碼
       xmdl051 LIKE xmdl_t.xmdl051, #備註
       xmdl052 LIKE xmdl_t.xmdl052, #庫存管理特徵
       xmdl053 LIKE xmdl_t.xmdl053, #主帳套暫估數量
       xmdl054 LIKE xmdl_t.xmdl054, #帳套二暫估數量
       xmdl055 LIKE xmdl_t.xmdl055, #帳套三暫估數量
       xmdl081 LIKE xmdl_t.xmdl081, #簽退數量(簽收、簽退單使用)
       xmdl082 LIKE xmdl_t.xmdl082, #簽退參考數量(簽收、簽退單使用)
       xmdl083 LIKE xmdl_t.xmdl083, #簽退計價數量(簽收、簽退單使用)
       xmdl084 LIKE xmdl_t.xmdl084, #簽退理由碼(簽收、簽退單使用)
       xmdl085 LIKE xmdl_t.xmdl085, #訂單開立據點
       xmdl086 LIKE xmdl_t.xmdl086, #訂單多角性質
       xmdl087 LIKE xmdl_t.xmdl087, #需自立應收否
       xmdl088 LIKE xmdl_t.xmdl088, #多角流程編號
       xmdl089 LIKE xmdl_t.xmdl089, #QC單號
       xmdl090 LIKE xmdl_t.xmdl090, #判定項次
       xmdl091 LIKE xmdl_t.xmdl091, #判定結果
       xmdl092 LIKE xmdl_t.xmdl092, #借貨還量數量
       xmdl093 LIKE xmdl_t.xmdl093, #借貨還量參考數量
       xmdl200 LIKE xmdl_t.xmdl200, #銷售通路
       xmdl201 LIKE xmdl_t.xmdl201, #產品組編碼
       xmdl202 LIKE xmdl_t.xmdl202, #銷售範圍編碼
       xmdl203 LIKE xmdl_t.xmdl203, #銷售辦公室
       xmdl204 LIKE xmdl_t.xmdl204, #出貨包裝單位
       xmdl205 LIKE xmdl_t.xmdl205, #出貨包裝數量
       xmdl206 LIKE xmdl_t.xmdl206, #簽退包裝數量
       xmdl207 LIKE xmdl_t.xmdl207, #庫存鎖定等級
       xmdl208 LIKE xmdl_t.xmdl208, #標準價
       xmdl209 LIKE xmdl_t.xmdl209, #促銷價
       xmdl210 LIKE xmdl_t.xmdl210, #交易價
       xmdl211 LIKE xmdl_t.xmdl211, #折價金額
       xmdl212 LIKE xmdl_t.xmdl212, #銷售組織
       xmdl213 LIKE xmdl_t.xmdl213, #銷售人員
       xmdl214 LIKE xmdl_t.xmdl214, #銷售部門
       xmdl215 LIKE xmdl_t.xmdl215, #合約編號
       xmdl216 LIKE xmdl_t.xmdl216, #經營方式
       xmdl217 LIKE xmdl_t.xmdl217, #結算類型
       xmdl218 LIKE xmdl_t.xmdl218, #結算方式
       xmdl219 LIKE xmdl_t.xmdl219, #交易類型
       xmdl220 LIKE xmdl_t.xmdl220, #寄銷已核銷數量
       xmdl222 LIKE xmdl_t.xmdl222, #地區編號
       xmdl223 LIKE xmdl_t.xmdl223, #縣市編號
       xmdl224 LIKE xmdl_t.xmdl224, #省區編號
       xmdl225 LIKE xmdl_t.xmdl225, #區域編號
       xmdl226 LIKE xmdl_t.xmdl226, #商品條碼
       xmdlunit LIKE xmdl_t.xmdlunit, #應用組織
       xmdlorga LIKE xmdl_t.xmdlorga, #帳務組織
       #161109-00085#76 --s add
       xmdlud001 LIKE xmdl_t.xmdlud001, #自定義欄位(文字)001
       xmdlud002 LIKE xmdl_t.xmdlud002, #自定義欄位(文字)002
       xmdlud003 LIKE xmdl_t.xmdlud003, #自定義欄位(文字)003
       xmdlud004 LIKE xmdl_t.xmdlud004, #自定義欄位(文字)004
       xmdlud005 LIKE xmdl_t.xmdlud005, #自定義欄位(文字)005
       xmdlud006 LIKE xmdl_t.xmdlud006, #自定義欄位(文字)006
       xmdlud007 LIKE xmdl_t.xmdlud007, #自定義欄位(文字)007
       xmdlud008 LIKE xmdl_t.xmdlud008, #自定義欄位(文字)008
       xmdlud009 LIKE xmdl_t.xmdlud009, #自定義欄位(文字)009
       xmdlud010 LIKE xmdl_t.xmdlud010, #自定義欄位(文字)010
       xmdlud011 LIKE xmdl_t.xmdlud011, #自定義欄位(數字)011
       xmdlud012 LIKE xmdl_t.xmdlud012, #自定義欄位(數字)012
       xmdlud013 LIKE xmdl_t.xmdlud013, #自定義欄位(數字)013
       xmdlud014 LIKE xmdl_t.xmdlud014, #自定義欄位(數字)014
       xmdlud015 LIKE xmdl_t.xmdlud015, #自定義欄位(數字)015
       xmdlud016 LIKE xmdl_t.xmdlud016, #自定義欄位(數字)016
       xmdlud017 LIKE xmdl_t.xmdlud017, #自定義欄位(數字)017
       xmdlud018 LIKE xmdl_t.xmdlud018, #自定義欄位(數字)018
       xmdlud019 LIKE xmdl_t.xmdlud019, #自定義欄位(數字)019
       xmdlud020 LIKE xmdl_t.xmdlud020, #自定義欄位(數字)020
       xmdlud021 LIKE xmdl_t.xmdlud021, #自定義欄位(日期時間)021
       xmdlud022 LIKE xmdl_t.xmdlud022, #自定義欄位(日期時間)022
       xmdlud023 LIKE xmdl_t.xmdlud023, #自定義欄位(日期時間)023
       xmdlud024 LIKE xmdl_t.xmdlud024, #自定義欄位(日期時間)024
       xmdlud025 LIKE xmdl_t.xmdlud025, #自定義欄位(日期時間)025
       xmdlud026 LIKE xmdl_t.xmdlud026, #自定義欄位(日期時間)026
       xmdlud027 LIKE xmdl_t.xmdlud027, #自定義欄位(日期時間)027
       xmdlud028 LIKE xmdl_t.xmdlud028, #自定義欄位(日期時間)028
       xmdlud029 LIKE xmdl_t.xmdlud029, #自定義欄位(日期時間)029
       xmdlud030 LIKE xmdl_t.xmdlud030, #自定義欄位(日期時間)030
       #161109-00085#76 --e add
       xmdl056 LIKE xmdl_t.xmdl056, #檢驗合格量
       xmdl094 LIKE xmdl_t.xmdl094, #來源單號(銷退)
       xmdl095 LIKE xmdl_t.xmdl095, #項次(銷退)
       xmdl227 LIKE xmdl_t.xmdl227, #現金折扣單號
       xmdl228 LIKE xmdl_t.xmdl228, #現金折扣單項次
       xmdl057 LIKE xmdl_t.xmdl057, #有效日期
       xmdl058 LIKE xmdl_t.xmdl058, #製造日期
       xmdl096 LIKE xmdl_t.xmdl096, #來源項次
       xmdl059 LIKE xmdl_t.xmdl059, #客戶退貨量
       xmdl060 LIKE xmdl_t.xmdl060 #放行狀態
               END RECORD
   #mod--161109-00085#4-e
   
   DEFINE l_xmdr_cnt   LIKE type_t.num5   
   DEFINE l_xmdr_qty   LIKE xmdr_t.xmdr008
   DEFINE l_qty1       LIKE xmdr_t.xmdr008
   DEFINE l_diff_qty   LIKE xmdr_t.xmdr008
   #add--160408-00035#5 By shiun--(E)

   INITIALIZE g_xmdl.* TO NULL
   LET g_errno = ''
   
   IF NOT cl_null(p_xmdl003) AND
      NOT cl_null(p_xmdl004) AND
      NOT cl_null(p_xmdl005) AND
      NOT cl_null(p_xmdl006) THEN  

      #add--160408-00035#5 By shiun--(S)
      #先將抓取訂單備置明細檔的CURSOR準備好
      LET g_sql = "SELECT xmdr004,xmdr005,xmdr006,xmdr010,(xmdr008-xmdr009) FROM xmdr_t",
                  " WHERE xmdrent = ",g_enterprise,
                  "   AND xmdrdocno = ? AND xmdrseq = ? AND xmdrseq1 = ? AND xmdrseq2 = ? "
      PREPARE axmt540_sel_xmdr_rep1 FROM g_sql
      DECLARE axmt540_sel_xmdr_cur1 CURSOR FOR axmt540_sel_xmdr_rep1
      #add--160408-00035#5 By shiun--(E)

      #帶出訂單交期明細     
      LET l_xmdcunit = ''
 
      #帶出訂單單身
      SELECT xmda050,
             xmdddocno,xmddseq,xmddseq1,xmddseq2,
             xmdd003,xmdd001,xmdd002,
             xmdd004,xmdd006,xmdd024,xmdd025,xmdd026,xmdd027,
             xmdd018,xmdd019,xmdd020,
             xmdd008,
             
             xmdc003,xmdc004,xmdc005,xmdc028,xmdc029,             
             xmdc030,
             xmdc036,xmdc037,xmdc038,
             xmdc052,xmdc021,xmdc040,xmdc041,
             xmdc042,xmdc043,xmdc044,xmdc027,
             xmdc050,  #150326
             xmdc057,
             xmdcunit,xmda006
            #add--160408-00035#5 By shiun--(S)  #查看有沒有硬備置的資料
            ,(SELECT COUNT(*) FROM xmdr_t 
               WHERE xmdrent=xmddent AND xmdrsite=xmddsite AND xmdrdocno=xmdddocno
                 AND xmdrseq=xmddseq AND xmdrseq1=xmddseq1 AND xmdrseq2=xmddseq2
                 AND xmdr004 IS NOT NULL AND xmdr004 <> ' ') xmdr_cnt
            ,(SELECT SUM(xmdr008-xmdr009) FROM xmdr_t 
               WHERE xmdrent=xmddent AND xmdrsite=xmddsite AND xmdrdocno=xmdddocno
                 AND xmdrseq=xmddseq AND xmdrseq1=xmddseq1 AND xmdrseq2=xmddseq2
                 AND xmdr004 IS NOT NULL AND xmdr004 <> ' ') xmdr_qty
            #add--160408-00035#5 By shiun--(E)
        INTO g_xmdl.xmdl088,
             g_xmdl.xmdl003,g_xmdl.xmdl004,g_xmdl.xmdl005,g_xmdl.xmdl006,
             g_xmdl.xmdl007,g_xmdl.xmdl008,g_xmdl.xmdl009,
             g_xmdl.xmdl017,g_xmdl.xmdl018,g_xmdl.xmdl019,g_xmdl.xmdl020,g_xmdl.xmdl021,g_xmdl.xmdl022,
             g_xmdl.xmdl024,g_xmdl.xmdl025,g_xmdl.xmdl026,
             g_xmdl.xmdl034,
             
             g_xmdl.xmdl010,g_xmdl.xmdl011,g_xmdl.xmdl012,g_xmdl.xmdl014,g_xmdl.xmdl015,
             g_xmdl.xmdl016,
             g_xmdl.xmdl030,g_xmdl.xmdl031,g_xmdl.xmdl032,
             g_xmdl.xmdl023,g_xmdl.xmdl041,g_xmdl.xmdl042,g_xmdl.xmdl043,
             g_xmdl.xmdl044,g_xmdl.xmdl045,g_xmdl.xmdl046,g_xmdl.xmdl033,
             g_xmdl.xmdl051, #150326
             g_xmdl.xmdl052,
             l_xmdcunit,l_xmda006
            ,l_xmdr_cnt,l_xmdr_qty   #add--160408-00035#5 By shiun             
        FROM xmda_t,xmdc_t,xmdd_t
       WHERE xmdaent = xmdcent AND xmdcent = xmddent AND xmddent = g_enterprise
         AND xmdadocno = xmdcdocno AND xmdcdocno = xmdddocno
         AND xmdcseq = xmddseq         
         AND xmdddocno = p_xmdl003
         AND xmddseq = p_xmdl004
         AND xmddseq1 = p_xmdl005
         AND xmddseq2 = p_xmdl006
      
      IF SQLCA.sqlcode THEN
         LET g_errno = SQLCA.sqlcode
         RETURN
      END IF   
            
      LET g_xmdl.xmdl035 = 0
      LET g_xmdl.xmdl036 = 0
      LET g_xmdl.xmdl037 = 0
      
      LET g_xmdl.xmdl013 = 'N'
      
      CALL axmt540_xmdl014_default(g_xmdl.xmdl014,g_xmdl.xmdl015)
      RETURNING g_xmdl.xmdl014,g_xmdl.xmdl015  #dorislai-20150824-add
      
      #需自立應收否 #151105改為Y
      LET g_xmdl.xmdl087 = "Y"     #需自立應收
      
#      #150901 earl add s
#      #若為2:銷售多角、3:統銷統收、5:中間交易、7:代採購出貨，自立應收為"N"
#      IF l_xmda006 MATCHES "[2357]" THEN
#         LET g_xmdl.xmdl087 = "N"
#      ELSE
#         LET g_xmdl.xmdl087 = "Y"     #需自立應收
#      END IF
#      #150901 earl add e

      #產品特徵
      IF cl_null(g_xmdl.xmdl009) THEN
         LET g_xmdl.xmdl009 = ' '
      END IF

      IF cl_null(g_xmdl.xmdl014) THEN
         #預帶料件預設值
         #160512-00004#2-mod-(S)
#         CALL s_axmt540_materials_search(g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdk007,g_xmdl.xmdl008,g_xmdl.xmdl009)
#         RETURNING l_xmdl.xmdl007,l_xmdl.xmdl010,l_xmdl.xmdl017,l_xmdl.xmdl019,l_xmdl.xmdl021,l_xmdl.xmdl014,l_xmdl.xmdl015
         CALL axmt540_materials_search_1(g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdk007,g_xmdk_m.xmdkdocno,g_xmdlseq,1,g_xmdl.xmdl008,g_xmdl.xmdl009,g_xmdl.xmdl016,g_xmdl.xmdl018,g_xmdl.xmdl017)
            RETURNING l_xmdl.xmdl007,l_xmdl.xmdl010,l_xmdl.xmdl017,l_xmdl.xmdl019,l_xmdl.xmdl021,l_xmdl.xmdl014,l_xmdl.xmdl015,l_xmdl.xmdl016,l_xmdl.xmdl052
         #160512-00004#2-mod-(E)
         LET g_xmdl.xmdl014 = l_xmdl.xmdl014    #預設庫位
         
         IF cl_null(g_xmdl.xmdl015) THEN
            LET g_xmdl.xmdl015 = l_xmdl.xmdl015   #預設儲位
         END IF
         #160512-00004#2-add-(S)
         IF cl_null(g_xmdl.xmdl016) THEN  #批號
            LET g_xmdl.xmdl016 = l_xmdl.xmdl016
         END IF
         IF cl_null(g_xmdl.xmdl052) THEN  #庫存管理特徵
            LET g_xmdl.xmdl052 = l_xmdl.xmdl052
         END IF
         #160512-00004#2-add-(E)
      END IF      

      #add--160408-00035#5 By shiun--(S)
      #如果訂單有做硬備置，那麼出貨單產生單身資料的時候，要自動帶出備置的庫儲批與數量
      #當有做硬備置(l_xmdr_cnt>0) 且 訂單數量<>硬備置數量時 , 差異數量應該再寫一筆進多倉儲批
      #例如:訂單數量100，硬備置A倉數量25、B倉數量25
      CASE 
         WHEN l_xmdr_cnt = 1   #備置1筆倉儲批 
            IF l_xmdr_cnt > 0 AND g_xmdl.xmdl018 <> l_xmdr_qty THEN
               LET g_xmdl.xmdl013 = 'Y'   #多庫儲批
               LET g_xmdl.xmdl014 = ''
               LET g_xmdl.xmdl015 = ''
               LET g_xmdl.xmdl016 = ''
            ELSE
               LET g_xmdl.xmdl013 = 'N'   #多庫儲批
               OPEN axmt540_sel_xmdr_cur1 USING p_xmdl003,p_xmdl004,p_xmdl005,p_xmdl006
               FETCH axmt540_sel_xmdr_cur1 INTO g_xmdl.xmdl014,g_xmdl.xmdl015,g_xmdl.xmdl016,
                                                g_xmdl.xmdl017,g_xmdl.xmdl018
            END IF
         WHEN l_xmdr_cnt > 1   #備置多筆倉儲批
            LET g_xmdl.xmdl013 = 'Y'   #多庫儲批
            LET g_xmdl.xmdl014 = ''
            LET g_xmdl.xmdl015 = ''
            LET g_xmdl.xmdl016 = ''
         OTHERWISE             #沒有備置
            LET g_xmdl.xmdl013 = 'N'   #多庫儲批
      END CASE
      #add--160408-00035#5 By shiun--(E)

      #檢核不可大於(xmdd006-xmdd014-已登打出貨未過帳的出貨量+xmdd016+xmdd034)
      CALL s_axmt540_get_max_ship_qty(2,'','',g_xmdl.xmdl003,g_xmdl.xmdl004,g_xmdl.xmdl005,g_xmdl.xmdl006) RETURNING l_num,l_num1
      
      #150917-00001#3  2016/01/21  By earl add s
      #多角可續拋量
      CALL s_aic_carry_continue_qty(g_site,g_xmdk_m.xmdk044,'1',g_xmdl.xmdl003,g_xmdl.xmdl004,g_xmdl.xmdl005,g_xmdl.xmdl006,'','','')
      RETURNING l_chk,l_qty,l_qty_batch
         
      IF l_chk THEN
         IF l_qty < l_num THEN
            LET l_num = l_qty
         END IF
         
         IF l_qty < l_num1 THEN
            LET l_num1 = l_qty
         END IF
      END IF
      #150917-00001#3  2016/01/21  By earl add s
      
      IF l_num < g_xmdl.xmdl018 THEN
         IF l_num > 0 THEN
            LET g_xmdl.xmdl018 = l_num   #帶入未出貨數量
            #出貨數量取位
            CALL s_aooi250_take_decimals(g_xmdl.xmdl017,g_xmdl.xmdl018) RETURNING l_success,g_xmdl.xmdl018 
         ELSE
            IF p_type = '2' AND l_num1 > 0 THEN  #手動輸入且有超交量
               LET g_xmdl.xmdl018 = ''  #讓使用者輸入超交量
            ELSE
               #--160219-00003#1--add--(S)
               CALL s_axmt540_get_xmdc032(g_xmdl.xmdl003,g_xmdl.xmdl004,g_xmdl.xmdl005,g_xmdl.xmdl006)
                 RETURNING l_xmdc032,l_pmdp023
               IF l_xmdc032 = '3' THEN
                  LET g_errno = 'axm-00753'   #訂單單身取貨方式為「供應商直送」，出通/出貨數量不足採購單已確認之需求量
               ELSE                
               #--160219-00003#1--add--(E)               
                  #160623-00014#1-mod-(S)
#                  CASE g_prog
#                     WHEN 'axmt542'
#                        LET g_errno = 'axm-00587'    #此單據項次可出貨量為0("分批訂購數量"-"已出貨量"+"銷退換貨量"+"已還量數量"-"已登打出貨單未確認的出貨量")
#                     OTHERWISE
#                        LET g_errno = 'axm-00220'    #此單據項次可出貨量為0("分批訂購數量"-"已出貨量"+"銷退換貨量"+"已簽退數量"-"已登打出貨單未確認的出貨量")
#                  END CASE
                  CASE 
                     WHEN g_prog MATCHES 'axmt542'
                        LET g_errno = 'axm-00587'    #此單據項次可出貨量為0("分批訂購數量"-"已出貨量"+"銷退換貨量"+"已還量數量"-"已登打出貨單未確認的出貨量")
                     OTHERWISE
                        LET g_errno = 'axm-00220'    #此單據項次可出貨量為0("分批訂購數量"-"已出貨量"+"銷退換貨量"+"已簽退數量"-"已登打出貨單未確認的出貨量")
                  END CASE
                  #160623-00014#1-mod-(E)
               END IF       #160219-00003#1 add
               RETURN
               
            END IF
         END IF
         
         #推算參考數量
         IF NOT cl_null(g_xmdl.xmdl008) AND NOT cl_null(g_xmdl.xmdl017) AND
            NOT cl_null(g_xmdl.xmdl019) AND NOT cl_null(g_xmdl.xmdl018) THEN
                
            CALL s_aooi250_convert_qty(g_xmdl.xmdl008,g_xmdl.xmdl017,g_xmdl.xmdl019,g_xmdl.xmdl018)
            RETURNING l_success,g_xmdl.xmdl020
         ELSE
            LET g_xmdl.xmdl020 = ''
         END IF
        
         #推算計價數量
         IF NOT cl_null(g_xmdl.xmdl008) AND NOT cl_null(g_xmdl.xmdl017) AND
            NOT cl_null(g_xmdl.xmdl021) AND NOT cl_null(g_xmdl.xmdl018) THEN
            
            CALL s_aooi250_convert_qty(g_xmdl.xmdl008,g_xmdl.xmdl017,g_xmdl.xmdl021,g_xmdl.xmdl018)
            RETURNING l_success,g_xmdl.xmdl022
         ELSE
            LET g_xmdl.xmdl022 = ''
         END IF
         
      END IF

      #多角流程代碼
      LET g_xmdl.xmdl088 = g_xmdk_m.xmdk044

      #檢驗
      IF cl_null(g_xmdl.xmdl023) THEN
         LET g_xmdl.xmdl023 = 'N'
      END IF
      
      #保稅
      IF cl_null(g_xmdl.xmdl041) THEN
         LET g_xmdl.xmdl041 = 'N'
      END IF
      
      #多庫儲批
#     LET g_xmdl.xmdl013 = 'N'  #160408-00035#5 mark
      
      #子件特性
      IF cl_null(g_xmdl.xmdl007) THEN
         LET g_xmdl.xmdl007 = '1'
      END IF

      #檢驗否
      IF g_xmdl.xmdl023 = 'N' THEN
         LET g_xmdl.xmdl056 = g_xmdl.xmdl018
      ELSE
         LET g_xmdl.xmdl056 = 0
      END IF

      #add--160408-00035#5 By shiun--(S)
      #如果訂單有做硬備置，那麼出通單產生單身資料的時候，要自動帶出備置的庫儲批與數量
      IF g_xmdl.xmdl013 = 'Y' THEN
         #把硬備置的資料繞過一輪
         FOREACH axmt540_sel_xmdr_cur1
           USING p_xmdl003,p_xmdl004,p_xmdl005,p_xmdl006
            INTO l_xmdl_a.xmdl014,l_xmdl_a.xmdl015,l_xmdl_a.xmdl016,l_xmdl_a.xmdl017,l_qty1
            
            #推算參考數量
            IF NOT cl_null(g_xmdl.xmdl008) AND NOT cl_null(g_xmdl.xmdl017) AND
               NOT cl_null(g_xmdl.xmdl019) AND NOT cl_null(l_qty1) THEN
                   
               CALL s_aooi250_convert_qty(g_xmdl.xmdl008,g_xmdl.xmdl017,g_xmdl.xmdl019,l_qty1)
                    RETURNING l_success,l_xmdl_a.xmdl020
            ELSE
               LET l_xmdl_a.xmdl020 = ''
            END IF
           
            #推算計價數量
            IF NOT cl_null(g_xmdl.xmdl008) AND NOT cl_null(g_xmdl.xmdl017) AND
               NOT cl_null(g_xmdl.xmdl021) AND NOT cl_null(l_qty1) THEN
               
               CALL s_aooi250_convert_qty(g_xmdl.xmdl008,g_xmdl.xmdl017,g_xmdl.xmdl021,l_qty1)
                    RETURNING l_success,l_xmdl_a.xmdl022
            ELSE
               LET l_xmdl_a.xmdl022 = ''
            END IF            

            CALL axmt540_01_xmdm_insert('1',g_site,p_xmdl003,p_xmdl004,
                                        g_xmdl.xmdl008,g_xmdl.xmdl009,g_xmdl.xmdl011,g_xmdl.xmdl012,
                                        l_xmdl_a.xmdl014,l_xmdl_a.xmdl015,l_xmdl_a.xmdl016,g_xmdl.xmdl052,
                                        l_xmdl_a.xmdl017,l_qty1,g_xmdl.xmdl019,l_xmdl_a.xmdl020,
                                        '','') RETURNING l_success
            IF NOT l_success THEN
               EXIT FOREACH
            END IF
         END FOREACH
         #硬備置的都跑完了,比較一下訂單數量與備置數量若有差異,則把剩下的量再寫入一筆倉儲批為空的
         IF g_xmdl.xmdl018 <> l_xmdr_qty THEN
            LET l_diff_qty = g_xmdl.xmdl018 - l_xmdr_qty
            
            #推算參考數量
            IF NOT cl_null(g_xmdl.xmdl008) AND NOT cl_null(g_xmdl.xmdl017) AND
               NOT cl_null(g_xmdl.xmdl019) AND NOT cl_null(l_diff_qty) THEN
                   
               CALL s_aooi250_convert_qty(g_xmdl.xmdl008,g_xmdl.xmdl017,g_xmdl.xmdl019,l_diff_qty)
                    RETURNING l_success,l_xmdl_a.xmdl020
            ELSE
               LET l_xmdl_a.xmdl020 = ''
            END IF
           
            #推算計價數量
            IF NOT cl_null(g_xmdl.xmdl008) AND NOT cl_null(g_xmdl.xmdl017) AND
               NOT cl_null(g_xmdl.xmdl021) AND NOT cl_null(l_diff_qty) THEN
               
               CALL s_aooi250_convert_qty(g_xmdl.xmdl008,g_xmdl.xmdl017,g_xmdl.xmdl021,l_diff_qty)
                    RETURNING l_success,l_xmdl_a.xmdl022
            ELSE
               LET l_xmdl_a.xmdl022 = ''
            END IF

            CALL axmt540_01_xmdm_insert('1',g_site,p_xmdl003,p_xmdl004,
                                        g_xmdl.xmdl008,g_xmdl.xmdl009,g_xmdl.xmdl011,g_xmdl.xmdl012,
                                        '','','',g_xmdl.xmdl052,
                                        l_xmdl_a.xmdl017,l_diff_qty,g_xmdl.xmdl019,l_xmdl_a.xmdl020,
                                        '','') RETURNING l_success
         END IF
      ELSE    #備置1筆倉儲批或沒有備置
         IF NOT axmt540_01_xmdm_modify('1',p_xmdl004,g_site,p_xmdl003,p_xmdl004,
                                       g_xmdl.xmdl008,g_xmdl.xmdl009,g_xmdl.xmdl011,g_xmdl.xmdl012,
                                       g_xmdl.xmdl014,g_xmdl.xmdl015,g_xmdl.xmdl016,g_xmdl.xmdl052,
                                       g_xmdl.xmdl017,g_xmdl.xmdl018,g_xmdl.xmdl019,g_xmdl.xmdl020,
                                       '','') THEN
         END IF
      END IF
      #add--160408-00035#5 By shiun--(E)

   END IF
END FUNCTION

PRIVATE FUNCTION axmt540_xmdh_search(p_type,p_xmdl001,p_xmdl002)
   DEFINE p_type      LIKE type_t.chr1    #1.自動帶出 2.手動輸入
   DEFINE p_xmdl001   LIKE xmdl_t.xmdl001
   DEFINE p_xmdl002   LIKE xmdl_t.xmdl002

   DEFINE l_num       LIKE xmdl_t.xmdl018
   DEFINE l_num1      LIKE xmdl_t.xmdl018
   DEFINE l_success   LIKE type_t.num5
   DEFINE l_xmda006   LIKE xmda_t.xmda006
   DEFINE l_slip      LIKE ooba_t.ooba002
   
   #150917-00001#3  2016/01/21  By earl add s
   DEFINE l_chk           LIKE type_t.num5        #TRUE 需要校驗檢查  FALSE  不需校驗檢查
   DEFINE l_qty           LIKE xmdl_t.xmdl205     #未續拋數量
   DEFINE l_qty_batch     LIKE xmdl_t.xmdl205     #未續拋數量(考慮批號)
   #150917-00001#3  2016/01/21  By earl add e
   
   LET g_errno = ''
   INITIALIZE g_xmdl.* TO NULL

   IF NOT cl_null(p_xmdl001) AND NOT cl_null(p_xmdl002) THEN

      #帶出出通單單身      
      SELECT xmdhdocno,xmdhseq,
             xmdh001,xmdh002,xmdh003,xmdh004,
             xmdh005,xmdh006,xmdh007,xmdh008,xmdh009,xmdh010,
             xmdh011,xmdh012,xmdh013,xmdh014,
             xmdh015,
             xmdh017,
             xmdh018,xmdh019,xmdh020,xmdh021,
             xmdh022,
             xmdh023,xmdh024,xmdh025,xmdh029,
             xmdh031,xmdh032,xmdh033,xmdh034,xmdh035,
             xmdh036,
             xmdh050     #150326
        INTO g_xmdl.xmdl001,g_xmdl.xmdl002,
             g_xmdl.xmdl003,g_xmdl.xmdl004,g_xmdl.xmdl005,g_xmdl.xmdl006,
             g_xmdl.xmdl007,g_xmdl.xmdl008,g_xmdl.xmdl009,g_xmdl.xmdl010,g_xmdl.xmdl011,g_xmdl.xmdl012,
             g_xmdl.xmdl013,g_xmdl.xmdl014,g_xmdl.xmdl015,g_xmdl.xmdl016,
             g_xmdl.xmdl017,
             g_xmdl.xmdl018,
             g_xmdl.xmdl019,g_xmdl.xmdl020,g_xmdl.xmdl021,g_xmdl.xmdl022,
             g_xmdl.xmdl023,
             g_xmdl.xmdl024,g_xmdl.xmdl025,g_xmdl.xmdl026,g_xmdl.xmdl052,
             g_xmdl.xmdl030,g_xmdl.xmdl031,g_xmdl.xmdl032,g_xmdl.xmdl033,g_xmdl.xmdl034,
             g_xmdl.xmdl041,
             g_xmdl.xmdl051  #150326
        FROM xmdh_t
       WHERE xmdhent = g_enterprise
         AND xmdhdocno = p_xmdl001
         AND xmdhseq = p_xmdl002
       ORDER BY xmdh001,xmdh002,xmdh003,xmdh004
       
      IF SQLCA.sqlcode THEN
         LET g_errno = SQLCA.sqlcode
         RETURN
      END IF

      #帶出訂單單身
      IF NOT cl_null(g_xmdl.xmdl003) AND NOT cl_null(g_xmdl.xmdl004) THEN
         
         SELECT xmda050,
                xmdc040,xmdc041,xmdc042,xmdc043,xmdc044,
                xmda006
           INTO g_xmdl.xmdl088,
                g_xmdl.xmdl042,g_xmdl.xmdl043,g_xmdl.xmdl044,g_xmdl.xmdl045,g_xmdl.xmdl046,
                l_xmda006
           FROM xmda_t,xmdc_t
          WHERE xmdaent = xmdcent AND xmdcent = g_enterprise
            AND xmdadocno = xmdcdocno AND xmdcdocno = g_xmdl.xmdl003
            AND xmdcseq = g_xmdl.xmdl004

         IF SQLCA.sqlcode THEN
            LET g_errno = SQLCA.sqlcode
            RETURN
         END IF
      END IF

      LET g_xmdl.xmdl035 = 0
      LET g_xmdl.xmdl036 = 0
      LET g_xmdl.xmdl037 = 0
      
      #需自立應收否 #151105改為Y
      LET g_xmdl.xmdl087 = "Y"     #需自立應收
      
#      #150901 earl add s
#      #若為2:銷售多角、3:統銷統收、5:中間交易、7:代採購出貨，自立應收為"N"
#      IF l_xmda006 MATCHES "[2357]" THEN
#         LET g_xmdl.xmdl087 = "N"
#      ELSE
#         LET g_xmdl.xmdl087 = "Y"     #需自立應收
#      END IF
#      #150901 earl add e

      #產品特徵
      IF cl_null(g_xmdl.xmdl009) THEN
         LET g_xmdl.xmdl009 = ' '
      END IF

      #檢核不可大於(xmdh016-xmdh030-已登打出貨單未確認的數量) 
      CALL s_axmt540_get_max_ship_qty(1,'','',g_xmdl.xmdl001,g_xmdl.xmdl002,'','') RETURNING l_num,l_num1
      
      #150917-00001#3  2016/01/21  By earl add s
      #多角可續拋量
      CALL s_aic_carry_continue_qty(g_site,g_xmdk_m.xmdk044,'1',g_xmdl.xmdl003,g_xmdl.xmdl004,g_xmdl.xmdl005,g_xmdl.xmdl006,'','','')
      RETURNING l_chk,l_qty,l_qty_batch
         
      IF l_chk THEN
         IF l_qty < l_num THEN
            LET l_num = l_qty
         END IF
         
         IF l_qty < l_num1 THEN
            LET l_num1 = l_qty
         END IF
      END IF
      #150917-00001#3  2016/01/21  By earl add s
      
      IF l_num < g_xmdl.xmdl018 THEN
         IF l_num > 0 THEN
            LET g_xmdl.xmdl018 = l_num
            #出貨數量取位
            CALL s_aooi250_take_decimals(g_xmdl.xmdl017,g_xmdl.xmdl018) RETURNING l_success,g_xmdl.xmdl018
         ELSE
            IF p_type = '2' AND l_num1 > 0 THEN  #手動輸入且有超交量
               LET g_xmdl.xmdl018 = ''  #讓使用者輸入超交量
            ELSE
               #160623-00014#1-mod-(S)
#               CASE g_prog
#                  WHEN 'axmt542'
#                     LET g_errno = 'axm-00588'    #此單據項次可出貨量為0("申請出通數量"-"已轉出貨數量"-"已登打出貨單未確認的出貨量")
#                  OTHERWISE
#                     LET g_errno = 'axm-00217'    #此單據項次可出貨量為0("申請出通數量"-"已轉出貨數量"-"已登打出貨單未確認的出貨量")
#               END CASE
               CASE 
                  WHEN g_prog MATCHES 'axmt542'
                     LET g_errno = 'axm-00588'    #此單據項次可出貨量為0("申請出通數量"-"已轉出貨數量"-"已登打出貨單未確認的出貨量")
                  OTHERWISE
                     LET g_errno = 'axm-00217'    #此單據項次可出貨量為0("申請出通數量"-"已轉出貨數量"-"已登打出貨單未確認的出貨量")
               END CASE
               #160623-00014#1-mod-(E)
               RETURN
               
            END IF
         END IF
         
         #推算參考數量
         IF NOT cl_null(g_xmdl.xmdl008) AND NOT cl_null(g_xmdl.xmdl017) AND
            NOT cl_null(g_xmdl.xmdl019) AND NOT cl_null(g_xmdl.xmdl018) THEN
               
            CALL s_aooi250_convert_qty(g_xmdl.xmdl008,g_xmdl.xmdl017,g_xmdl.xmdl019,g_xmdl.xmdl018)
            RETURNING l_success,g_xmdl.xmdl020
         ELSE
            LET g_xmdl.xmdl020 = ''
         END IF
          
         #推算計價數量
         IF NOT cl_null(g_xmdl.xmdl008) AND NOT cl_null(g_xmdl.xmdl017) AND
            NOT cl_null(g_xmdl.xmdl021) AND NOT cl_null(g_xmdl.xmdl018) THEN
               
            CALL s_aooi250_convert_qty(g_xmdl.xmdl008,g_xmdl.xmdl017,g_xmdl.xmdl021,g_xmdl.xmdl018)
            RETURNING l_success,g_xmdl.xmdl022
         ELSE
            LET g_xmdl.xmdl022 = ''
         END IF
         
      END IF

      #多角流程代碼
      LET g_xmdl.xmdl088 = g_xmdk_m.xmdk044

      #檢驗
      IF cl_null(g_xmdl.xmdl023) THEN
         LET g_xmdl.xmdl023 = 'N'
      END IF
      
      #保稅
      IF cl_null(g_xmdl.xmdl041) THEN
         LET g_xmdl.xmdl041 = 'N'
      END IF
      
      #子件特性
      IF cl_null(g_xmdl.xmdl007) THEN
         LET g_xmdl.xmdl007 = '1'
      END IF

      #檢驗否
      IF g_xmdl.xmdl023 = 'Y' AND NOT cl_null(g_xmdl.xmdl003) THEN
         #單據別參數
         CALL s_aooi200_get_slip(g_xmdl.xmdl003) RETURNING l_success,l_slip
         IF cl_get_doc_para(g_enterprise,g_site,l_slip,'D-BAS-0094') = '2' THEN   #OQC檢驗時機為"2出貨時檢驗"
            LET g_xmdl.xmdl056 = 0
         ELSE
            LET g_xmdl.xmdl056 = g_xmdl.xmdl018
         END IF
      ELSE
         LET g_xmdl.xmdl056 = g_xmdl.xmdl018
      END IF

   END IF
END FUNCTION

PRIVATE FUNCTION axmt540_row_default()
   
   #先將可能為NULL欄位預設為' '
   IF cl_null(g_xmdl_d[l_ac].xmdl009) THEN LET g_xmdl_d[l_ac].xmdl009 = ' ' END IF  #產品特徵
   
   IF cl_null(g_xmdl_d[l_ac].xmdl014) THEN LET g_xmdl_d[l_ac].xmdl014 = ' ' END IF  #庫位
   IF cl_null(g_xmdl_d[l_ac].xmdl015) THEN LET g_xmdl_d[l_ac].xmdl015 = ' ' END IF  #儲位
   IF cl_null(g_xmdl_d[l_ac].xmdl016) THEN LET g_xmdl_d[l_ac].xmdl016 = ' ' END IF  #批號 
   IF cl_null(g_xmdl_d[l_ac].xmdl052) THEN LET g_xmdl_d[l_ac].xmdl052 = ' ' END IF  #庫存管理特徵
     
END FUNCTION

################################################################################
# Descriptions...: 訂單匯入單身子畫面詢問帶出
# Memo...........:
# Usage..........: CALL axmt540_detail_ask()
#                  RETURNING 回传参数
# Input parameter: 
#                : 
# Return code....: r_success  執行結果
#                : 
# Date & Author..: 140718 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_detail_ask()
   DEFINE r_success  LIKE type_t.num5
   DEFINE l_date     LIKE type_t.dat
   DEFINE l_gzze003  LIKE gzze_t.gzze003
   DEFINE l_ask    RECORD
          all        LIKE type_t.chr1,
          assign     LIKE type_t.chr1,
          day        LIKE type_t.num5
                   END RECORD

   LET r_success = TRUE

   OPEN WINDOW w_axmt540_s02 WITH FORM cl_ap_formpath("axm",'axmt540_s02')
   
   #瀏覽頁簽資料初始化
   CALL cl_ui_init()
   
   #160623-00014#1-mod-(S)
#   IF g_prog = 'axmt542' THEN  #借貨出貨單
#      CALL cl_getmsg('axm-00566',g_dlang) RETURNING l_gzze003  #是否由[借貨訂單axmt501]自動產生單身資料？
#      CALL cl_set_comp_att_text('label1',l_gzze003)
#   END IF 
   IF g_prog MATCHES 'axmt542' THEN  #借貨出貨單
      CALL cl_getmsg('axm-00566',g_dlang) RETURNING l_gzze003  #是否由[借貨訂單axmt501]自動產生單身資料？
      CALL cl_set_comp_att_text('label1',l_gzze003)
   END IF
   #160623-00014#1-mod-(E)
   
   INITIALIZE l_ask.* TO NULL
   LET l_ask.all = 'Y'
   LET l_ask.assign = 'N'
   CALL axmt540_s02_set_entry(l_ask.assign)
   CALL axmt540_s02_set_no_entry(l_ask.assign)

   INPUT BY NAME l_ask.all,l_ask.assign,l_ask.day WITHOUT DEFAULTS
      BEFORE INPUT
      
      ON CHANGE all
         IF l_ask.all = 'Y' THEN
            LET l_ask.assign = 'N'            
         ELSE 
            LET l_ask.assign = 'Y'
         END IF
         
         CALL axmt540_s02_set_entry(l_ask.assign)
         CALL axmt540_s02_set_no_entry(l_ask.assign)
         DISPLAY BY NAME l_ask.*

      ON CHANGE assign
         IF l_ask.assign = 'Y' THEN
            LET l_ask.all = 'N'
         ELSE
            LET l_ask.all = 'Y'
         END IF
         
         CALL axmt540_s02_set_entry(l_ask.assign)
         CALL axmt540_s02_set_no_entry(l_ask.assign)         
         DISPLAY BY NAME l_ask.*
                               
      ON ACTION accept
         ACCEPT INPUT
         
      ON ACTION cancel
         LET INT_FLAG = TRUE
         EXIT INPUT

      ON ACTION exit
         LET INT_FLAG = TRUE
         EXIT INPUT
      
      AFTER INPUT
   END INPUT
   
   CLOSE WINDOW w_axmt540_s02
   
   IF INT_FLAG THEN
      LET INT_FLAG = FALSE
      LET r_success = TRUE
      RETURN r_success
   END IF   

   IF l_ask.all = 'N' THEN
      CALL s_date_get_date(g_xmdk_m.xmdkdocdt,0,l_ask.day) RETURNING l_date
   ELSE
      LET l_date = ''
   END IF
   
   #帶出單身
   CALL axmt540_auto_insert_2(l_date) RETURNING r_success

   RETURN r_success
END FUNCTION

PRIVATE FUNCTION axmt540_s02_set_entry(p_assign)
   DEFINE p_assign   LIKE type_t.chr1
   
   CALL cl_set_comp_entry("day",TRUE)
END FUNCTION

PRIVATE FUNCTION axmt540_s02_set_no_entry(p_assign)
   DEFINE p_assign   LIKE type_t.chr1
   
   IF p_assign = 'N' THEN
      CALL cl_set_comp_entry("day",FALSE)
   END IF
END FUNCTION

PRIVATE FUNCTION axmt540_xmdkdocdt_xmdk001_chk()
   DEFINE r_success    LIKE type_t.num5

   LET r_success = TRUE
   #151120-00003#1 20151120 mark by beckxie
   #IF NOT cl_null(g_xmdk_m.xmdk001) AND NOT cl_null(g_xmdk_m.xmdkdocdt) THEN
   #   IF g_xmdk_m.xmdk001 < g_xmdk_m.xmdkdocdt THEN
   #      INITIALIZE g_errparam TO NULL
   #      LET g_errparam.code = 'axm-00267'    #扣帳日期不可小於單據日期！
   #      LET g_errparam.extend = ''
   #      LET g_errparam.popup = TRUE
   #      CALL cl_err()
   #      
   #      LET r_success = FALSE
   #      RETURN r_success
   #   END IF
   #END IF
   #151120-00003#1 20151120 mark by beckxie
   RETURN r_success   
END FUNCTION

################################################################################
# Descriptions...: 單身稅額計算UPDATE單頭
# Memo...........:
# Usage..........: CALL axmt540_tax_recount(p_xmdkdocno)
#                  RETURNING r_success
# Input parameter: p_xmdkdocno    單據單號
#                : 
# Return code....: r_success      執行結果
#                : 
# Date & Author..: 140803 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_tax_recount(p_xmdkdocno)
   DEFINE p_xmdkdocno    LIKE xmdk_t.xmdkdocno
   DEFINE r_success      LIKE type_t.num5

   DEFINE l_xrcd      RECORD
             xrcd103      LIKE xrcd_t.xrcd103,
             xrcd104      LIKE xrcd_t.xrcd104,
             xrcd105      LIKE xrcd_t.xrcd105,
             xrcd113      LIKE xrcd_t.xrcd113,
             xrcd114      LIKE xrcd_t.xrcd114,
             xrcd115      LIKE xrcd_t.xrcd115
                      END RECORD
   
   LET r_success = TRUE
   
   INITIALIZE l_xrcd.* TO NULL
   #重新計算整單的未稅、含稅總金額
   CALL s_tax_recount(p_xmdkdocno) RETURNING l_xrcd.xrcd103,l_xrcd.xrcd104,l_xrcd.xrcd105,l_xrcd.xrcd113,l_xrcd.xrcd114,l_xrcd.xrcd115
   
   UPDATE xmdk_t SET xmdk051 = l_xrcd.xrcd103,
                     xmdk052 = l_xrcd.xrcd105,
                     xmdk053 = l_xrcd.xrcd104
    WHERE xmdkent = g_enterprise
      AND xmdkdocno = p_xmdkdocno
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL       
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = 'UPDATE'
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   CALL axmt540_adjust_xmdl(p_xmdkdocno,l_xrcd.xrcd103,l_xrcd.xrcd104,l_xrcd.xrcd105) RETURNING r_success  #161011-00017#1-add
   
   RETURN r_success   
END FUNCTION

################################################################################
# Descriptions...: 單頭更改時單身更新重新取價計算
# Memo...........:
# Usage..........: CALL axmt540_detail_update(p_oodb006,p_oodb011,p_xmdk017,p_type)
#                  RETURNING r_success
# Input parameter: p_oodb006  #稅率      p_type為1時使用
#                : p_oodb011  #稅別應用  p_type為1時使用
#                : p_xmdk017  #匯率
#                : p_type     #0.其他(重新取價)1.更改稅別2.更改幣別4.重新取價Action
# Return code....: r_success  #執行結果
#                : 
# Date & Author..: 140803 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_detail_update(p_oodb006,p_oodb011,p_xmdk017,p_type)
   DEFINE p_oodb006     LIKE oodb_t.oodb006
   DEFINE p_oodb011     LIKE oodb_t.oodb011
   DEFINE p_xmdk017     LIKE xmdk_t.xmdk017
   DEFINE p_type        LIKE type_t.chr1
   DEFINE r_success     LIKE type_t.num5

   DEFINE l_num         LIKE type_t.num5
   DEFINE l_sql         STRING

   DEFINE l_xmdl027     LIKE xmdl_t.xmdl027
   DEFINE l_xmdl028     LIKE xmdl_t.xmdl028
   DEFINE l_xmdl029     LIKE xmdl_t.xmdl029
     
   DEFINE l_xmdl     RECORD
             xmdlseq       LIKE xmdl_t.xmdlseq,
             xmdl001       LIKE xmdl_t.xmdl001,
             xmdl003       LIKE xmdl_t.xmdl003,
             xmdl004       LIKE xmdl_t.xmdl004,
             xmdl008       LIKE xmdl_t.xmdl008,
             xmdl009       LIKE xmdl_t.xmdl009,
             xmdl018       LIKE xmdl_t.xmdl018,
             xmdl021       LIKE xmdl_t.xmdl021,
             xmdl022       LIKE xmdl_t.xmdl022,
             xmdl024       LIKE xmdl_t.xmdl024,
             xmdl025       LIKE xmdl_t.xmdl025,
             xmdl026       LIKE xmdl_t.xmdl026,
             xmdl042       LIKE xmdl_t.xmdl042,
             xmdl043       LIKE xmdl_t.xmdl043,
             xmdl044       LIKE xmdl_t.xmdl044,
             xmdl045       LIKE xmdl_t.xmdl045
                     END RECORD

   DEFINE l_source  LIKE xmdc_t.xmdc040
   DEFINE l_price   LIKE xmdc_t.xmdc043
   DEFINE l_docno   LIKE xmdc_t.xmdcdocno
   DEFINE l_seq     LIKE xmdc_t.xmdcseq
   DEFINE l_errshow LIKE type_t.num5

   LET r_success = TRUE
   
   IF p_type = '4' THEN
      LET l_errshow = TRUE
   ELSE
      LET l_errshow = FALSE
   END IF
   
   IF cl_null(p_type) THEN
      RETURN r_success
   END IF

   LET l_sql = "SELECT xmdlseq,xmdl001,xmdl003,xmdl004,",
               "       xmdl008,xmdl009,",
               "       xmdl018,xmdl021,xmdl022,",
               "       xmdl024,xmdl025,xmdl026,",
               "       xmdl042,xmdl043,xmdl044,xmdl045",
               "  FROM xmdl_t",
               " WHERE xmdlent = '",g_enterprise,"'",
               "   AND xmdldocno = '",g_xmdk_m.xmdkdocno,"'"
   PREPARE axmt540_detail_pre FROM l_sql
   DECLARE axmt540_detail_cs CURSOR WITH HOLD FOR axmt540_detail_pre

   #無設定幣別、內外銷不更新
   IF cl_null(g_xmdk_m.xmdk016) OR cl_null(g_xmdk_m.xmdk042) THEN
      IF l_errshow THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'axm-00555'    #幣別、內外銷不可為空！
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()
      END IF
   
      RETURN r_success
   END IF

   LET l_num = 0
   SELECT COUNT(xmdlseq) INTO l_num
     FROM xmdl_t
    WHERE xmdlent = g_enterprise
      AND xmdldocno = g_xmdk_m.xmdkdocno
      
   IF l_num = 0 THEN
      RETURN r_success  #無單身不更新
   END IF

   CASE p_type
      WHEN '0' #其他(無來源項次重新取價)
         LET l_num = 0
         SELECT COUNT(xmdlseq) INTO l_num
           FROM xmdl_t
          WHERE xmdlent = g_enterprise
            AND xmdldocno = g_xmdk_m.xmdkdocno
            AND xmdl001 IS NULL
            AND xmdl003 IS NULL
      
         IF l_num = 0 THEN
            IF l_errshow THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00556'    #單身皆有來源單據，不可重新取價！
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
            END IF
         
            RETURN r_success  #單身皆有來源不更新
         END IF
         
         IF NOT cl_ask_confirm('axm-00230') THEN  #條件已變更，是否重新取價，並重新計算含税、未税金额
            LET r_success = FALSE
            RETURN r_success
         END IF

      WHEN '1' #稅別
         IF cl_null(g_xmdk_m.xmdk012) THEN
            RETURN r_success
         END IF
                  
         #稅別應用為'1'正常稅率
         IF p_oodb011 = '1' THEN
            IF NOT cl_ask_confirm('axm-00230') THEN  #條件已變更，是否重新取價，並重新計算含税、未税金额
               LET r_success = FALSE
               RETURN r_success
            END IF
         END IF
           
      WHEN '2' #幣別         
         IF NOT cl_ask_confirm('axm-00230') THEN  #條件已變更，是否重新取價，並重新計算含税、未税金额
            LET r_success = FALSE
            RETURN r_success
         END IF

      WHEN '4' #重新取價Action
         LET l_num = 0
         SELECT COUNT(xmdlseq) INTO l_num
           FROM xmdl_t
          WHERE xmdlent = g_enterprise
            AND xmdldocno = g_xmdk_m.xmdkdocno
            AND xmdl001 IS NULL
            AND xmdl003 IS NULL
      
         IF l_num = 0 THEN
            IF l_errshow THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00556'    #單身皆有來源單據，不可重新取價！
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
            END IF
         
            RETURN r_success  #單身皆有來源不更新
         END IF
         
         IF NOT cl_ask_confirm('apm-00801') THEN  #是否確認對單身資料重新取價
            LET r_success = FALSE
            RETURN r_success
         END IF
      
         LET p_type = '0'   #重新取價

   END CASE

   INITIALIZE l_xmdl.* TO NULL
   FOREACH axmt540_detail_cs INTO l_xmdl.xmdlseq,l_xmdl.xmdl001,l_xmdl.xmdl003,l_xmdl.xmdl004,
                                  l_xmdl.xmdl008,l_xmdl.xmdl009,
                                  l_xmdl.xmdl018,l_xmdl.xmdl021,l_xmdl.xmdl022,
                                  l_xmdl.xmdl024,l_xmdl.xmdl025,l_xmdl.xmdl026,
                                  l_xmdl.xmdl042,l_xmdl.xmdl043,l_xmdl.xmdl044,l_xmdl.xmdl045
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'FOREACH'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET r_success = FALSE
         EXIT FOREACH
      END IF

      IF p_type = '1' THEN        #稅別修改
         IF p_oodb011 = '1' THEN  #正常稅率
            LET l_xmdl.xmdl025 = g_xmdk_m.xmdk012  #稅別
            LET l_xmdl.xmdl026 = p_oodb006         #稅率
         END IF
         
      ELSE   #重新取價、修改幣別
         #取價
         IF cl_null(l_xmdl.xmdl001) AND cl_null(l_xmdl.xmdl003) THEN   #無來源且有輸入料號、產品特徵時才做取價

            IF NOT cl_null(g_xmdk_m.xmdk018) AND NOT cl_null(g_xmdk_m.xmdk007) AND NOT cl_null(g_xmdk_m.xmdk016)
               AND NOT cl_null(g_xmdk_m.xmdk010) AND NOT cl_null(g_xmdk_m.xmdk011) AND NOT cl_null(g_xmdk_m.xmdk030)
               AND NOT cl_null(g_xmdk_m.xmdkdocno) AND NOT cl_null(g_xmdk_m.xmdkdocdt) AND NOT cl_null(g_xmdk_m.xmdk042)
               AND NOT cl_null(l_xmdl.xmdl008)
               AND NOT cl_null(l_xmdl.xmdl021) AND NOT cl_null(l_xmdl.xmdl022)
               AND NOT cl_null(l_xmdl.xmdl025) THEN

               IF cl_null(l_xmdl.xmdl009) THEN  #產品特徵
                  LET l_xmdl.xmdl009 = ' '
               END IF
             
               CALL s_sale_price_get(g_xmdk_m.xmdk018,g_xmdk_m.xmdk007,l_xmdl.xmdl008,l_xmdl.xmdl009,g_xmdk_m.xmdk016,
                                     l_xmdl.xmdl025,g_xmdk_m.xmdk010,g_xmdk_m.xmdk011,g_xmdk_m.xmdk030,g_xmdk_m.xmdkdocno,
                                     g_xmdk_m.xmdkdocdt,l_xmdl.xmdl021,l_xmdl.xmdl022,g_site,'1',
                                     g_xmdk_m.xmdk042)
               RETURNING l_source,l_price,l_docno,l_seq

               LET l_xmdl.xmdl042 = l_source
               LET l_xmdl.xmdl043 = l_docno
               LET l_xmdl.xmdl044 = l_seq
               LET l_xmdl.xmdl045 = l_price
            
               LET l_xmdl.xmdl024 = l_price
            END IF
         END IF
      END IF

      #稅額計算                     
      CALL s_axmt540_tax_count('',g_xmdk_m.xmdkdocno,l_xmdl.xmdlseq,g_site,g_xmdk_m.xmdk012,
                               l_xmdl.xmdl022,l_xmdl.xmdl024,g_xmdk_m.xmdk016,p_xmdk017,
                               l_xmdl.xmdl003,l_xmdl.xmdl004,l_xmdl.xmdl018)
      RETURNING l_xmdl027,l_xmdl028,l_xmdl029

      UPDATE xmdl_t
         SET xmdl042 = l_xmdl.xmdl042,   #取價來源
             xmdl043 = l_xmdl.xmdl043,   #來源參考單號
             xmdl044 = l_xmdl.xmdl044,   #來源參考項次
             xmdl045 = l_xmdl.xmdl045,   #取出價格             
             xmdl024 = l_xmdl.xmdl024,   #單價
             xmdl025 = l_xmdl.xmdl025,   #稅別
             xmdl026 = l_xmdl.xmdl026,   #稅率
             xmdl027 = l_xmdl027,        #未稅金額
             xmdl028 = l_xmdl028,        #含稅金額
             xmdl029 = l_xmdl029         #稅額
       WHERE xmdlent = g_enterprise
         AND xmdldocno = g_xmdk_m.xmdkdocno
         AND xmdlseq = l_xmdl.xmdlseq

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'UPDATE'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET r_success = FALSE
         EXIT FOREACH
      END IF      
   END FOREACH

   IF NOT r_success THEN
      RETURN r_success
   END IF

   #重新計算整單的未稅、含稅總金額
   CALL axmt540_tax_recount(g_xmdk_m.xmdkdocno) RETURNING r_success
   
   #更新單身顯示
   CALL axmt540_b_fill()
   
   RETURN r_success   
END FUNCTION

################################################################################
# Descriptions...: 來源出通單的包裝單、Invoice
# Memo...........:
# Usage..........: CALL axmt540_xmdk028_xmdk029_sel()
#                  RETURNING r_xmdg024,r_xmdg025
# Input parameter: 
#                : 
# Return code....: r_xmdg024   #包裝單製作
#                : r_xmdg025   #Invoice製作
# Date & Author..: 140804 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_xmdk028_xmdk029_sel()
   DEFINE l_xmdgdocno  LIKE xmdg_t.xmdgdocno   #出通單號
   DEFINE l_sql        STRING
   DEFINE r_xmdg024    LIKE xmdg_t.xmdg024     #包裝單
   DEFINE r_xmdg025    LIKE xmdg_t.xmdg025     #Invoice

   LET l_xmdgdocno = ''
   LET r_xmdg024 = ''
   LET r_xmdg025 = ''

   #抓來源出通單號
   IF NOT cl_null(g_xmdk_m.xmdk005) THEN
      LET l_xmdgdocno = g_xmdk_m.xmdk005
   ELSE #抓單身第一筆出通單
      LET l_sql = "SELECT xmdl001",
                  "  FROM xmdl_t",
                  " WHERE xmdlent = '",g_enterprise,"'",
                  "   AND xmdldocno = '",g_xmdk_m.xmdkdocno,"'",
                  " ORDER BY xmdl001"
      PREPARE axmt540_chk_pre FROM l_sql
      DECLARE axmt540_chk_cs SCROLL CURSOR FOR axmt540_chk_pre

      OPEN axmt540_chk_cs
      FETCH FIRST axmt540_chk_cs INTO l_xmdgdocno
   END IF

   IF NOT cl_null(l_xmdgdocno) THEN
      SELECT xmdg024,xmdg025
        INTO r_xmdg024,r_xmdg025
        FROM xmdg_t
       WHERE xmdgent = g_enterprise
         AND xmdgdocno = l_xmdgdocno
   END IF

   RETURN r_xmdg024,r_xmdg025
END FUNCTION

################################################################################
# Descriptions...: 留置狀態
# Memo...........:
# Usage..........: CALL axmt540_hold_upd(p_type)
#                  RETURNING r_success
# Input parameter: p_type    1.留置2.取消留置
#                : 
# Return code....: r_success 執行結果
#                : 
# Date & Author..: 140816 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_hold_upd(p_type)
   DEFINE p_type        LIKE type_t.chr1
   DEFINE r_success     LIKE type_t.num5

   LET r_success = TRUE
      
   OPEN axmt540_cl USING g_enterprise,g_xmdk_m.xmdkdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = STATUS
      LET g_errparam.extend = "OPEN axmt540_cl:"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CLOSE axmt540_cl
      LET r_success = FALSE
      RETURN r_success
   END IF  
   
   CALL axmt540_show()

   LET g_xmdkdocno_t = g_xmdk_m.xmdkdocno

   IF p_type = '1' THEN  #留置
      CALL axmt540_set_entry('h')
      CALL axmt540_set_no_entry('h')
            
      INPUT BY NAME g_xmdk_m.xmdk034 ATTRIBUTE(WITHOUT DEFAULTS)     
         
         BEFORE INPUT            

         AFTER FIELD xmdk034
            CALL s_desc_get_acc_desc('297',g_xmdk_m.xmdk034) RETURNING g_xmdk_m.xmdk034_desc
            DISPLAY BY NAME g_xmdk_m.xmdk034,g_xmdk_m.xmdk034_desc
                     
            IF NOT cl_null(g_xmdk_m.xmdk034) THEN
               IF g_xmdk_m.xmdk034 <> g_xmdk_m_t.xmdk034 OR cl_null(g_xmdk_m_t.xmdk034) THEN
               
                  IF NOT s_azzi650_chk_exist('297',g_xmdk_m.xmdk034) THEN
                     LET g_xmdk_m.xmdk034 = g_xmdk_m_o.xmdk034
                     CALL s_desc_get_acc_desc('297',g_xmdk_m.xmdk034) RETURNING g_xmdk_m.xmdk034_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk034_desc
                     
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
                        
            ON ACTION controlp INFIELD xmdk034
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_xmdk_m.xmdk034  #給予default值
               LET g_qryparam.arg1 = "297"
               
               CALL q_oocq002()                            #呼叫開窗
               
               LET g_xmdk_m.xmdk034 = g_qryparam.return1   #將開窗取得的值回傳到變數
               DISPLAY g_xmdk_m.xmdk034 TO xmdk034         #顯示到畫面上
               CALL s_desc_get_acc_desc('297',g_xmdk_m.xmdk034) RETURNING g_xmdk_m.xmdk034_desc
               DISPLAY BY NAME g_xmdk_m.xmdk034_desc
               NEXT FIELD xmdk034                          #返回原欄位            

         AFTER INPUT
            IF INT_FLAG THEN
               EXIT INPUT
            END IF
     
            ON ACTION accept
               ACCEPT INPUT
     
            ON ACTION cancel
               LET INT_FLAG = TRUE
               EXIT INPUT
     
            ON ACTION exit
               LET INT_FLAG = TRUE
               EXIT INPUT
     
            ON ACTION close
               LET INT_FLAG = TRUE
               EXIT INPUT
     
      END INPUT
     
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_xmdk_m.* = g_xmdk_m_t.*
         CALL axmt540_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
     
         CLOSE axmt540_cl
         LET r_success = FALSE
         RETURN r_success
      END IF 
     
      UPDATE xmdk_t SET xmdk034 = g_xmdk_m.xmdk034
       WHERE xmdkent = g_enterprise AND xmdkdocno = g_xmdkdocno_t
 
   ELSE  #取消留置
      UPDATE xmdk_t SET xmdk034 = ''
       WHERE xmdkent = g_enterprise AND xmdkdocno = g_xmdkdocno_t   
       
   END IF
 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "xmdk_t" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      CLOSE axmt540_cl
      LET r_success = FALSE
      RETURN r_success
   END IF               
             
   CLOSE axmt540_cl
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 無來源時，料號預帶欄位(子件特性、包裝容器、出貨單位、參考單位、計價單位、出貨庫位、出貨儲位)並且重算參考數量、計價數量
#                : 有來源時，料號預帶欄位(出貨庫位、出貨儲位)
# Memo...........:
# Usage..........: CALL axmt540_xmdl008_default()
#                  
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 140818 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_xmdl008_default()
   DEFINE l_success     LIKE type_t.num5
   DEFINE l_controlno   LIKE ooha_t.ooha001
   
   DEFINE l_xmdl   RECORD
             xmdl007    LIKE xmdl_t.xmdl007,  #子件特性
             xmdl010    LIKE xmdl_t.xmdl010,  #包裝容器
             xmdl017    LIKE xmdl_t.xmdl017,  #出貨單位
             xmdl019    LIKE xmdl_t.xmdl019,  #參考單位
             xmdl021    LIKE xmdl_t.xmdl021,  #計價單位
             xmdl014    LIKE xmdl_t.xmdl014,  #出貨庫位
             xmdl015    LIKE xmdl_t.xmdl015,  #出貨儲位
             xmdl016    LIKE xmdl_t.xmdl016,  #出貨批號     #160512-00004#2-add
             xmdl052    LIKE xmdl_t.xmdl052   #庫存管理特徵  #160512-00004#2-add
                   END RECORD

   DEFINE l_sql    STRING
   DEFINE l_xmdl014     LIKE xmdl_t.xmdl014
   DEFINE l_xmdl015     LIKE xmdl_t.xmdl015

   #151209-00018#1  2015/12/10 By earl add s
   DEFINE l_price   RECORD
      source           LIKE xmdc_t.xmdc040,
      docno            LIKE xmdc_t.xmdcdocno,
      seq              LIKE xmdc_t.xmdcseq,
      price            LIKE xmdc_t.xmdc043
      
                    END RECORD
   #151209-00018#1  2015/12/10 By earl add e

   #幣別、匯率、預估金額
   LET l_sql = "SELECT xmds003*xmds004",
               "  FROM xmds_t",
               " WHERE xmdsent = ",g_enterprise,
               "   AND xmdsdocno = ?",
               "   AND xmds001 = ?",
               " ORDER BY xmdsseq"
   PREPARE axmt540_xmds_pre FROM l_sql
   DECLARE axmt540_xmds_cur SCROLL CURSOR FOR axmt540_xmds_pre


   IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) AND
      NOT g_xmdl_d[l_ac].xmdl009 IS NULL THEN

#      #產品特徵
#      IF cl_null(g_xmdl_d[l_ac].xmdl009) THEN
#         LET g_xmdl_d[l_ac].xmdl009 = ' '
#      END IF

      LET l_xmdl014 = ''
      LET l_xmdl015 = ''
      CALL axmt540_xmdl014_default(l_xmdl014,l_xmdl015)
      RETURNING l_xmdl014,l_xmdl015  #dorislai-20150824-add
      
      #預帶料件預設值
      #160512-00004#2-mod-(S)
#      CALL s_axmt540_materials_search(g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdk007,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009)
#      RETURNING l_xmdl.xmdl007,l_xmdl.xmdl010,l_xmdl.xmdl017,l_xmdl.xmdl019,l_xmdl.xmdl021,l_xmdl.xmdl014,l_xmdl.xmdl015
     #CALL axmt540_materials_search_1(g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdk007,g_xmdk_m.xmdkdocno,g_xmdlseq,1,g_xmdl.xmdl008,g_xmdl.xmdl009,g_xmdl.xmdl016,g_xmdl.xmdl018,g_xmdl.xmdl017)                                                       #170103-00026#1 mark
      CALL axmt540_materials_search_1(g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdk007,g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,1,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,g_xmdl_d[l_ac].xmdl016,g_xmdl_d[l_ac].xmdl018,g_xmdl_d[l_ac].xmdl017)  #170103-00026#1 add  
         RETURNING l_xmdl.xmdl007,l_xmdl.xmdl010,l_xmdl.xmdl017,l_xmdl.xmdl019,l_xmdl.xmdl021,l_xmdl.xmdl014,l_xmdl.xmdl015,l_xmdl.xmdl016,l_xmdl.xmdl052
      #160512-00004#2-mod-(E)
      #151209-00018#1  2015/12/09 By earl add s
      IF cl_null(l_xmdl.xmdl021) THEN
         LET l_xmdl.xmdl021 = l_xmdl.xmdl017
      END IF
      #151209-00018#1  2015/12/09 By earl add e
      
      IF NOT cl_null(l_xmdl014) THEN
         LET l_xmdl.xmdl014 = l_xmdl014
         LET l_xmdl.xmdl015 = l_xmdl015
      END IF
      
      #無來源預設、費用料號
      IF cl_null(g_xmdl_d[l_ac].xmdl002) AND cl_null(g_xmdl_d[l_ac].xmdl004) THEN

         IF NOT cl_null(l_xmdl.xmdl007) THEN
            LET g_xmdl_d[l_ac].xmdl007 = l_xmdl.xmdl007  #子件特性
         ELSE  #費用料號  150214 earl
            #170103-00034#1---add----begin-----
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl001) THEN
              SELECT xmdg004 INTO g_xmdl_d[l_ac].xmdl003 FROM xmdg_t 
                 WHERE xmdgent   = g_enterprise
                   AND xmdgdocno = g_xmdl_d[l_ac].xmdl001
            END IF
            #170103-00034#1---add----end-------
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl003) THEN  #子件特性預設為"1.一般"
               LET g_xmdl_d[l_ac].xmdl007 = '1'
            END IF
            
            LET g_xmdl_d[l_ac].xmdl023 = 'N'   #檢驗
            LET g_xmdl_d[l_ac].xmdl041 = 'N'   #保稅
         END IF

         IF NOT cl_null(l_xmdl.xmdl010) THEN
            LET g_xmdl_d[l_ac].xmdl010 = l_xmdl.xmdl010  #包裝容器
         END IF
         
         LET g_xmdl_d[l_ac].xmdl017 = l_xmdl.xmdl017  #出貨單位
         CALL s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl017) RETURNING g_xmdl_d[l_ac].xmdl017_desc

         IF NOT cl_null(g_xmdl_d[l_ac].xmdl003) AND cl_null(g_xmdl_d[l_ac].xmdl004) THEN #費用料號
            #單價
            OPEN axmt540_xmds_cur USING g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl008
            FETCH FIRST axmt540_xmds_cur INTO g_xmdl2_d[l_ac].xmdl024

            LET g_xmdl_d[l_ac].xmdl018 = 1   #出貨數量
#161130-00043#1-s mark
#因為費用料號的單位可能是Null，呼叫取位元件後反而會把出貨數量清空了，所以mark掉取位
#           #取位
#           CALL s_aooi250_take_decimals(g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018) RETURNING l_success,g_xmdl_d[l_ac].xmdl018
#161130-00043#1-e mark            
         ELSE
            LET g_xmdl_d[l_ac].xmdl014 = l_xmdl.xmdl014  #出貨庫位
            CALL s_desc_get_stock_desc(g_site,g_xmdl_d[l_ac].xmdl014) RETURNING g_xmdl_d[l_ac].xmdl014_desc
      
            LET g_xmdl_d[l_ac].xmdl015 = l_xmdl.xmdl015  #出貨儲位
            CALL s_desc_get_locator_desc(g_site,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015) RETURNING g_xmdl_d[l_ac].xmdl015_desc         
            
            #160512-00004#2-add-(S)
            LET g_xmdl_d[l_ac].xmdl016 = l_xmdl.xmdl016  #出貨批號
            LET g_xmdl_d[l_ac].xmdl052 = l_xmdl.xmdl052  #出貨庫存管理特徵
            #160512-00004#2-add-(E)
         END IF
         
         #營運據點是否使用參考單位(若不使用為'')
         IF cl_get_para(g_enterprise,g_site,'S-BAS-0028') = "N" THEN
            LET g_xmdl_d[l_ac].xmdl019 = ''  #參考單位
         ELSE
            LET g_xmdl_d[l_ac].xmdl019 = l_xmdl.xmdl019  #參考單位
         END IF
         CALL s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl019) RETURNING g_xmdl_d[l_ac].xmdl019_desc
      
         #推算參考數量
         IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) AND NOT cl_null(g_xmdl_d[l_ac].xmdl017) AND
            NOT cl_null(g_xmdl_d[l_ac].xmdl019) AND NOT cl_null(g_xmdl_d[l_ac].xmdl018) THEN
         
            CALL s_aooi250_convert_qty(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl018)
            RETURNING l_success,g_xmdl_d[l_ac].xmdl020
         ELSE
            LET g_xmdl_d[l_ac].xmdl020 = ''
         END IF

         #營運據點是否使用計價單位(若不使用為出貨單位)
         IF cl_get_para(g_enterprise,g_site,'S-BAS-0007') = "N" THEN
            LET g_xmdl_d[l_ac].xmdl021 = l_xmdl.xmdl017
            LET g_xmdl_d_o.xmdl021 = g_xmdl_d[l_ac].xmdl021
         ELSE
            LET g_xmdl_d[l_ac].xmdl021 = l_xmdl.xmdl021  #計價單位
            LET g_xmdl_d_o.xmdl021 = g_xmdl_d[l_ac].xmdl021
         END IF      
         CALL s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl021) RETURNING g_xmdl_d[l_ac].xmdl021_desc   

         #推算計價數量
         IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) AND NOT cl_null(g_xmdl_d[l_ac].xmdl017) AND
            NOT cl_null(g_xmdl_d[l_ac].xmdl021) AND NOT cl_null(g_xmdl_d[l_ac].xmdl018) THEN
         
            CALL s_aooi250_convert_qty(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl021,g_xmdl_d[l_ac].xmdl018)
            RETURNING l_success,g_xmdl_d[l_ac].xmdl022
            LET g_xmdl_d_o.xmdl022 = g_xmdl_d[l_ac].xmdl022
         ELSE
            LET g_xmdl_d[l_ac].xmdl022 = ''
            LET g_xmdl_d_o.xmdl022 = g_xmdl_d[l_ac].xmdl022
         END IF
#161130-00043#1-s add
         IF NOT cl_null(g_xmdl_d[l_ac].xmdl003) AND cl_null(g_xmdl_d[l_ac].xmdl004) THEN #費用料號
            LET g_xmdl_d[l_ac].xmdl022 = 1        #計價數量
         END IF
#161130-00043#1-e add

         #取價
         #151209-00018#1  2015/12/10 By earl mod s
         IF cl_null(g_xmdl_d[l_ac].xmdl001) AND cl_null(g_xmdl_d[l_ac].xmdl003) THEN   #無來源且有輸入料號、產品特徵時才做取價
            INITIALIZE l_price.* TO NULL
            CALL axmt540_get_price(l_ac)
            RETURNING l_price.source,l_price.docno,l_price.seq,l_price.price
            
            #重新取價
            IF cl_null(g_xmdl2_d[l_ac].xmdl042) THEN
               LET g_xmdl2_d[l_ac].xmdl042 = l_price.source
               LET g_xmdl2_d[l_ac].xmdl043 = l_price.docno
               LET g_xmdl2_d[l_ac].xmdl044 = l_price.seq
               LET g_xmdl2_d[l_ac].xmdl045 = l_price.price
            ELSE
               IF g_xmdl2_d[l_ac].xmdl045 <> l_price.price THEN
                  IF cl_ask_confirm('axm-00230') THEN
                     LET g_xmdl2_d[l_ac].xmdl042 = l_price.source
                     LET g_xmdl2_d[l_ac].xmdl043 = l_price.docno
                     LET g_xmdl2_d[l_ac].xmdl044 = l_price.seq
                     LET g_xmdl2_d[l_ac].xmdl045 = l_price.price
                  END IF
               END IF
            END IF
         #151209-00018#1  2015/12/10 By earl mod e
            
            LET g_xmdl2_d[l_ac].xmdl024 = g_xmdl2_d[l_ac].xmdl045
            LET g_xmdl2_d_o.xmdl024 = g_xmdl2_d[l_ac].xmdl024
         END IF

      ELSE       #有來源預設
         IF g_xmdh011 = 'N' THEN  #來源沒做多庫儲批         
            IF cl_null(g_xmdh012) THEN  #來源無限定庫位
               LET g_xmdl_d[l_ac].xmdl014 = l_xmdl.xmdl014  #出貨庫位
               CALL s_desc_get_stock_desc(g_site,g_xmdl_d[l_ac].xmdl014) RETURNING g_xmdl_d[l_ac].xmdl014_desc
      
               IF cl_null(g_xmdh013) THEN #來源無限定儲位
                  LET g_xmdl_d[l_ac].xmdl015 = l_xmdl.xmdl015  #出貨儲位
                  CALL s_desc_get_locator_desc(g_site,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015) RETURNING g_xmdl_d[l_ac].xmdl015_desc
               END IF
               #160512-00004#2-add-(S)
               IF cl_null(g_xmdh014) THEN #來源無限定批號
                  LET g_xmdl_d[l_ac].xmdl016 = l_xmdl.xmdl016
               END IF
               IF cl_null(g_xmdh029) THEN #庫存管理特徵
                  LET g_xmdl_d[l_ac].xmdl052 = l_xmdl.xmdl052
               END IF
               #160512-00004#2-add-(E)
            END IF
         END IF
         
      END IF
      
   END IF
   
END FUNCTION

################################################################################
# Descriptions...: 依據取價方式抓取銷售單價
# Memo...........:
# Usage..........: CALL axmt540_get_price(p_seq)
#                  RETURNING r_source,r_docno,r_seq,r_price
# Input parameter: p_seq    單據項次
#                : 
# Return code....: r_source 取價來源
#                : r_docno  參考單號
#                : r_seq    參考項次
#                : r_price  取出單價
# Date & Author..: 140820 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_get_price(p_seq)
   DEFINE p_seq     LIKE xmdl_t.xmdlseq
   
   DEFINE r_source  LIKE xmdc_t.xmdc040
   DEFINE r_price   LIKE xmdc_t.xmdc043
   DEFINE r_docno   LIKE xmdc_t.xmdcdocno
   DEFINE r_seq     LIKE xmdc_t.xmdcseq

   LET r_source = ''
   LET r_price = 0
   LET r_docno = ''
   LET r_seq = ''

   IF NOT cl_null(g_xmdk_m.xmdk018) AND NOT cl_null(g_xmdk_m.xmdk007) AND NOT cl_null(g_xmdk_m.xmdk016)
      AND NOT cl_null(g_xmdk_m.xmdk010) AND NOT cl_null(g_xmdk_m.xmdk011) AND NOT cl_null(g_xmdk_m.xmdk030)
      AND NOT cl_null(g_xmdk_m.xmdkdocno) AND NOT cl_null(g_xmdk_m.xmdkdocdt) AND NOT cl_null(g_xmdk_m.xmdk042)
      AND NOT cl_null(g_xmdl_d[p_seq].xmdl008)
      AND NOT cl_null(g_xmdl_d[p_seq].xmdl021) AND NOT cl_null(g_xmdl_d[p_seq].xmdl022)
      AND NOT cl_null(g_xmdl2_d[p_seq].xmdl025) THEN

      IF cl_null(g_xmdl_d[p_seq].xmdl009) THEN  #產品特徵
         LET g_xmdl_d[p_seq].xmdl009 = ' '
      END IF
       
      CALL s_sale_price_get(g_xmdk_m.xmdk018,g_xmdk_m.xmdk007,g_xmdl_d[p_seq].xmdl008,g_xmdl_d[p_seq].xmdl009,g_xmdk_m.xmdk016,
                            g_xmdl2_d[p_seq].xmdl025,g_xmdk_m.xmdk010,g_xmdk_m.xmdk011,g_xmdk_m.xmdk030,g_xmdk_m.xmdkdocno,
                            g_xmdk_m.xmdkdocdt,g_xmdl_d[p_seq].xmdl021,g_xmdl_d[p_seq].xmdl022,g_site,'1',
                            g_xmdk_m.xmdk042)
      RETURNING r_source,r_price,r_docno,r_seq
         
   END IF

   RETURN r_source,r_docno,r_seq,r_price
END FUNCTION

################################################################################
# Descriptions...: 修改多庫儲批Action
# Memo...........:
# Usage..........: CALL axmt540_call_axmt540_01(p_seq)
#                  
# Input parameter: p_seq 項次
#                : 
# Return code....: 
#                : 
# Date & Author..: 140821 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_call_axmt540_01(p_seq)
   DEFINE p_seq      LIKE xmdl_t.xmdlseq
   DEFINE l_success  LIKE type_t.num5
   DEFINE l_rollback LIKE type_t.num5 
   DEFINE l_xmdl014  LIKE xmdl_t.xmdl014
   DEFINE l_xmdl015  LIKE xmdl_t.xmdl015
   DEFINE l_xmdl016  LIKE xmdl_t.xmdl016
   DEFINE l_xmdl052  LIKE xmdl_t.xmdl052

   DEFINE l_xmdl     RECORD
      xmdlseq           LIKE xmdl_t.xmdlseq,
      xmdl001           LIKE xmdl_t.xmdl001,
      xmdl002           LIKE xmdl_t.xmdl002,
      xmdl003           LIKE xmdl_t.xmdl003,
      xmdl004           LIKE xmdl_t.xmdl004,
      xmdl008           LIKE xmdl_t.xmdl008,
      xmdl009           LIKE xmdl_t.xmdl009,
      xmdl011           LIKE xmdl_t.xmdl011,
      xmdl012           LIKE xmdl_t.xmdl012,
      xmdl017           LIKE xmdl_t.xmdl017,
      xmdl018           LIKE xmdl_t.xmdl018,
      xmdl019           LIKE xmdl_t.xmdl019,
      xmdl020           LIKE xmdl_t.xmdl020,
      xmdl030           LIKE xmdl_t.xmdl030
                     END RECORD

   INITIALIZE l_xmdl.* TO NULL
   SELECT xmdlseq,
          xmdl001,xmdl002,xmdl003,xmdl004,
          xmdl008,xmdl009,
          xmdl011,xmdl012,
          xmdl017,xmdl018,xmdl019,xmdl020,xmdl030
     INTO l_xmdl.xmdlseq,
          l_xmdl.xmdl001,l_xmdl.xmdl002,l_xmdl.xmdl003,l_xmdl.xmdl004,
          l_xmdl.xmdl008,l_xmdl.xmdl009,
          l_xmdl.xmdl011,l_xmdl.xmdl012,
          l_xmdl.xmdl017,l_xmdl.xmdl018,l_xmdl.xmdl019,l_xmdl.xmdl020,
          l_xmdl.xmdl030
     FROM xmdl_t
    WHERE xmdlent = g_enterprise
      AND xmdldocno = g_xmdk_m.xmdkdocno
      AND xmdlseq = p_seq

   CALL s_transaction_begin()
   
   OPEN axmt540_cl USING g_enterprise,g_xmdk_m.xmdkdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code =  STATUS
      LET g_errparam.extend = "OPEN axmt540_cl:"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CLOSE axmt540_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF

   #在揀量先歸零
   IF NOT s_axmt540_change_xmdm_upd_before(g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkstus) THEN               
      CLOSE axmt540_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF    
   #150821-xianghui-b   
   DROP TABLE axmt540_inao1
   LET g_sql = "CREATE GLOBAL TEMPORARY TABLE axmt540_inao1 AS ",
               #mod--161109-00085#4-s
               #"SELECT * FROM inao_t"
               #161109-00085#76 
               #"SELECT inaoent,inaosite,inaodocno,inaoseq,inaoseq1,
               #        inaoseq2,inao000,inao001,inao002,inao003,
               #        inao004,inao005,inao006,inao007,inao008,
               #        inao009,inao010,inao011,inao012,inao013,
               #        inao014,inao020,inao021,inao022,inao023,
               #        inao024,inao025 
               # FROM inao_t "
               #mod--161109-00085#4-e
               #161109-00085#76 --s add
               " SELECT inaoent,inaosite,inaodocno,inaoseq,inaoseq1, ",
               "        inaoseq2,inao000,inao001,inao002,inao003, ",
               "        inao004,inao005,inao006,inao007,inao008, ",
               "        inao009,inao010,inao011,inao012,inao013, ",
               "        inaoud001,inaoud002,inaoud003,inaoud004,inaoud005, ",
               "        inaoud006,inaoud007,inaoud008,inaoud009,inaoud010, ",
               "        inaoud011,inaoud012,inaoud013,inaoud014,inaoud015, ",
               "        inaoud016,inaoud017,inaoud018,inaoud019,inaoud020, ",
               "        inaoud021,inaoud022,inaoud023,inaoud024,inaoud025, ",
               "        inaoud026,inaoud027,inaoud028,inaoud029,inaoud030, ",
               "        inao014,inao020,inao021,inao022,inao023, ",
               "        inao024,inao025 ",
               "   FROM inao_t "
               #161109-00085#76 --e add
   PREPARE inao_tbl1 FROM g_sql
   EXECUTE inao_tbl1
   FREE inao_tbl1        
   INSERT INTO axmt540_inao1 
   #mod--161109-00085#4-s
   #SELECT *
   SELECT inaoent,inaosite,inaodocno,inaoseq,inaoseq1,
          inaoseq2,inao000,inao001,inao002,inao003,
          inao004,inao005,inao006,inao007,inao008,
          inao009,inao010,inao011,inao012,inao013,
          #161109-00085#76 --s add
          inaoud001,inaoud002,inaoud003,inaoud004,inaoud005,
          inaoud006,inaoud007,inaoud008,inaoud009,inaoud010,
          inaoud011,inaoud012,inaoud013,inaoud014,inaoud015,
          inaoud016,inaoud017,inaoud018,inaoud019,inaoud020,
          inaoud021,inaoud022,inaoud023,inaoud024,inaoud025,
          inaoud026,inaoud027,inaoud028,inaoud029,inaoud030,
          #161109-00085#76 --e add
          inao014,inao020,inao021,inao022,inao023,
          inao024,inao025
   #mod--161109-00085#4-e 
   FROM inao_t 
   WHERE inaoent = g_enterprise 
     AND inaodocno = g_xmdk_m.xmdkdocno
     AND inaoseq = l_xmdl.xmdlseq  
   #150821-xianghui-e
   #開啟多庫儲批
   CALL axmt540_01('1',g_xmdk_m.xmdksite,'',g_xmdk_m.xmdkdocno,
                   l_xmdl.xmdlseq,l_xmdl.xmdl008,l_xmdl.xmdl009,
                   l_xmdl.xmdl011,l_xmdl.xmdl012,
                   l_xmdl.xmdl017,l_xmdl.xmdl018,'',                               
                   l_xmdl.xmdl019,l_xmdl.xmdl020,'',
                   l_xmdl.xmdl001,l_xmdl.xmdl002,l_xmdl.xmdl003,l_xmdl.xmdl004,l_xmdl.xmdl030)
                   RETURNING l_success,l_rollback,l_xmdl014,l_xmdl015,l_xmdl016,l_xmdl052
   #150821-xianghui-b                
   IF l_success = FALSE AND l_rollback = FALSE THEN 
      DELETE FROM inao_t 
       WHERE inaoent = g_enterprise 
         AND inaodocno = g_xmdk_m.xmdkdocno
         AND inaoseq = l_xmdl.xmdlseq       
      #將資料塞回原table   
      INSERT INTO inao_t 
      #mod--161109-00085#4-s
      #SELECT *
      SELECT inaoent,inaosite,inaodocno,inaoseq,inaoseq1,
             inaoseq2,inao000,inao001,inao002,inao003,
             inao004,inao005,inao006,inao007,inao008,
             inao009,inao010,inao011,inao012,inao013,
             #161109-00085#76 --s add
             inaoud001,inaoud002,inaoud003,inaoud004,inaoud005,
             inaoud006,inaoud007,inaoud008,inaoud009,inaoud010,
             inaoud011,inaoud012,inaoud013,inaoud014,inaoud015,
             inaoud016,inaoud017,inaoud018,inaoud019,inaoud020,
             inaoud021,inaoud022,inaoud023,inaoud024,inaoud025,
             inaoud026,inaoud027,inaoud028,inaoud029,inaoud030,
             #161109-00085#76 --e add
             inao014,inao020,inao021,inao022,inao023,
             inao024,inao025
      #mod--161109-00085#4-e 
      FROM axmt540_inao1
      DROP TABLE axmt540_inao1
   END IF
   #150821-xianghui-e 
   IF l_rollback OR NOT l_success THEN
      CLOSE axmt540_cl
      CALL s_transaction_end('N','0')
      RETURN
      
   ELSE

      IF NOT cl_null(l_xmdl014) THEN  #只有一筆         
         UPDATE xmdl_t
            SET xmdl013 = 'N',
                xmdl014 = l_xmdl014,
                xmdl015 = l_xmdl015,
                xmdl016 = l_xmdl016,
                xmdl052 = l_xmdl052
          WHERE xmdlent = g_enterprise
            AND xmdldocno = g_xmdk_m.xmdkdocno
            AND xmdlseq = l_xmdl.xmdlseq                     
            
      ELSE
      
         UPDATE xmdl_t
            SET xmdl013 = 'Y',
                xmdl014 = ' ',
                xmdl015 = ' ',
                xmdl016 = ' ',
                xmdl052 = ' '
          WHERE xmdlent = g_enterprise
            AND xmdldocno = g_xmdk_m.xmdkdocno
            AND xmdlseq = l_xmdl.xmdlseq      
      END IF
      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE:"
         LET g_errparam.popup = TRUE
         CALL cl_err()
     
         CLOSE axmt540_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF

   END IF
   
   #重新回寫出通單，更新在揀量
   IF NOT s_axmt540_change_xmdm_upd_after(g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkstus) THEN
      CLOSE axmt540_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF

   CLOSE axmt540_cl
   CALL s_transaction_end('Y','0')
   
   CALL axmt540_show()
END FUNCTION

################################################################################
# Descriptions...: 單身Action隱藏
# Memo...........:
# Usage..........: CALL axmt540_detail_action_hidden(p_ac)
#                 
# Input parameter: p_ac   單身所在項次
#                : 
# Return code....: 
#                : 
# Date & Author..: 140822 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_detail_action_hidden(p_ac)
   DEFINE p_ac      LIKE type_t.num5

   DEFINE l_slip     LIKE ooba_t.ooba001
   DEFINE l_success  LIKE type_t.num5
   DEFINE l_onebyone LIKE type_t.chr80
   DEFINE l_xmdl013  LIKE xmdl_t.xmdl013  #多庫儲批
   DEFINE l_xmdl014  LIKE xmdl_t.xmdl014  #庫位
   DEFINE l_xmdl015  LIKE xmdl_t.xmdl015  #單儲位
   DEFINE l_xmdl016  LIKE xmdl_t.xmdl016  #批號
   DEFINE l_xmdl052  LIKE xmdl_t.xmdl052  #庫存管理特徵

   CALL cl_set_act_visible("axmt540_call_axmt540_01",FALSE)  #多庫儲批
   CALL cl_set_act_visible("axmt540_refresh_price",FALSE)    #重新取價

   IF g_xmdk_m.xmdkstus <> 'X' AND g_xmdk_m.xmdkstus <> 'S' THEN
   
      IF NOT cl_null(p_ac) AND p_ac > 0 THEN
         CALL cl_set_act_visible("axmt540_call_axmt540_01",TRUE)
         
         IF g_xmdk_m.xmdkstus MATCHES "[NDR]" THEN
            CALL cl_set_act_visible("axmt540_refresh_price",TRUE)    #重新取價
         END IF

         #有來源出通單
         IF NOT cl_null(g_xmdl_d[p_ac].xmdl001) THEN
            CALL s_aooi200_get_slip(g_xmdl_d[p_ac].xmdl001) RETURNING l_success,l_slip
            IF l_success THEN
               LET l_onebyone = ''
               CALL cl_get_doc_para(g_enterprise,g_site,l_slip,'D-BAS-0060') RETURNING l_onebyone
               LET l_xmdl013 = 'N'  #多庫儲批
               LET l_xmdl014 = ''  #庫位
               LET l_xmdl015 = ''  #儲位
               LET l_xmdl016 = ''  #批號
               LET l_xmdl052 = ''  #庫存管理特徵
               CALL s_axmt540_source_define(g_xmdl_d[p_ac].xmdl001,g_xmdl_d[p_ac].xmdl002,g_xmdl_d[p_ac].xmdl003,g_xmdl_d[p_ac].xmdl004)
               RETURNING l_xmdl013,l_xmdl014,l_xmdl015,l_xmdl016,l_xmdl052

               IF NOT cl_null(l_xmdl014) AND NOT cl_null(l_xmdl015) AND
                  NOT cl_null(l_xmdl016) AND NOT cl_null(l_xmdl052) THEN
                  
                  CALL cl_set_act_visible("axmt540_call_axmt540_01",FALSE)
               END IF

               #出通轉出貨單控管為"一對一"，且出通做多庫儲批，不可以更動多庫儲批
               IF l_xmdl013 = 'Y' AND l_onebyone = '1' THEN
                  CALL cl_set_act_visible("axmt540_call_axmt540_01",FALSE)
               END IF
          
            END IF
         END IF
         
      END IF
   END IF
   
END FUNCTION

#產品特徵、替代料號檢查
PRIVATE FUNCTION axmt540_xmdl008_xmdl009_chk()
   DEFINE r_success    LIKE type_t.num5
   
   DEFINE l_xmdl008              LIKE xmdl_t.xmdl008
   DEFINE l_xmdl009              LIKE xmdl_t.xmdl009
   
   LET r_success = TRUE
   
   IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) THEN
      IF NOT g_xmdl_d[l_ac].xmdl009 IS NULL THEN
      
         #產品特徵檢查
         IF NOT cl_null(g_xmdl_d[l_ac].xmdl009) THEN
            IF NOT s_feature_check (g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) THEN
               LET r_success = FALSE
               RETURN r_success
            END IF
         END IF
         
         #有來源
         IF (NOT cl_null(g_xmdl_d[l_ac].xmdl001) AND NOT cl_null(g_xmdl_d[l_ac].xmdl002)) OR
            (NOT cl_null(g_xmdl_d[l_ac].xmdl003) AND NOT cl_null(g_xmdl_d[l_ac].xmdl004) AND
             NOT cl_null(g_xmdl_d[l_ac].xmdl005) AND NOT cl_null(g_xmdl_d[l_ac].xmdl006)) THEN         
                     
            #找出原出通單or原訂單料號
            LET l_xmdl008 = ''
            LET l_xmdl009 = ''
         
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl001) THEN
               SELECT xmdh006,COALESCE(xmdh007,' ') INTO l_xmdl008,l_xmdl009
                 FROM xmdh_t
                WHERE xmdhent = g_enterprise
                  AND xmdhdocno = g_xmdl_d[l_ac].xmdl001
                  AND xmdhseq = g_xmdl_d[l_ac].xmdl002
            ELSE
               SELECT xmdd001,COALESCE(xmdd002,' ') INTO l_xmdl008,l_xmdl009
                 FROM xmdd_t
                WHERE xmddent = g_enterprise
                  AND xmdddocno = g_xmdl_d[l_ac].xmdl003
                  AND xmddseq = g_xmdl_d[l_ac].xmdl004
                  AND xmddseq1 = g_xmdl_d[l_ac].xmdl005
                  AND xmddseq2 = g_xmdl_d[l_ac].xmdl006    
            END IF
            
            #替代料號檢查
            IF (l_xmdl008 <> g_xmdl_d[l_ac].xmdl008) OR (l_xmdl009 <> g_xmdl_d[l_ac].xmdl009) THEN
               #151208-00018#1   2015/12/09  By earl mod s
               #IF NOT s_pmaq_chk_replacement(g_xmdk_m.xmdk007,l_xmdl008,g_xmdl_d[l_ac].xmdl008,'3',l_xmdl009,g_xmdl_d[l_ac].xmdl009) THEN
               IF NOT s_pmaq_chk_replacement_sale(g_xmdk_m.xmdk007,l_xmdl008,g_xmdl_d[l_ac].xmdl008,'12',l_xmdl009,g_xmdl_d[l_ac].xmdl009) THEN
               #151208-00018#1   2015/12/09  By earl mod e
                  LET r_success = FALSE
                  RETURN r_success
               END IF
            END IF
            
         END IF
      END IF
      
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 庫、儲、批、庫存管理特徵，輸入開窗
# Memo...........:
# Usage..........: CALL axmt540_xmdl014_xmdl015_xmdl016_xmdl052_qry(p_type)
#                  
# Input parameter: p_type 1.庫位2.儲位3.批號4.庫存管理特徵
#                : 
# Return code....: 
#                : 
# Date & Author..: 140905 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_xmdl014_xmdl015_xmdl016_xmdl052_qry(p_type)
   DEFINE p_type            LIKE type_t.chr1
   DEFINE l_success         LIKE type_t.num5  #150921-00014 earl add
   DEFINE l_where           STRING            #150921-00014 earl add
   DEFINE l_imaf054         LIKE imaf_t.imaf054   #20151106 by stellar add
   DEFINE l_imaf055     LIKE imaf_t.imaf055  #160519-00008#8
   DEFINE l_imaf061     LIKE imaf_t.imaf061  #160519-00008#8
   
   #出通單若有做多庫儲批，輸入儲位必須存在
   IF g_xmdh011 = 'Y' THEN         
      #開窗i段
      INITIALIZE g_qryparam.* TO NULL
      LET g_qryparam.state = 'i'
      LET g_qryparam.reqry = FALSE
    
      LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl014             #給予default值
      LET g_qryparam.default2 = g_xmdl_d[l_ac].xmdl015
      LET g_qryparam.default3 = g_xmdl_d[l_ac].xmdl016
      LET g_qryparam.default4 = g_xmdl_d[l_ac].xmdl052
        
      #給予arg
      LET g_qryparam.arg1 = g_xmdl_d[l_ac].xmdl001
      LET g_qryparam.arg2 = g_xmdl_d[l_ac].xmdl002
      
      #150921-00014 earl mod s
      #單據別庫位限制(From)
      CALL s_control_get_doc_sql('xmdi005',g_xmdk_m.xmdkdocno,'6') RETURNING l_success,l_where
      IF l_success THEN
         LET g_qryparam.where = l_where
      END IF
      #150921-00014 earl mod e
      
      CALL q_xmdi005()                                #呼叫開窗
    
      LET g_xmdl_d[l_ac].xmdl014 = g_qryparam.return1              #將開窗取得的值回傳到變數
      LET g_xmdl_d[l_ac].xmdl015 = g_qryparam.return2
      LET g_xmdl_d[l_ac].xmdl016 = g_qryparam.return3
      LET g_xmdl_d[l_ac].xmdl052 = g_qryparam.return4
    
      DISPLAY g_xmdl_d[l_ac].xmdl014 TO xmdl014              #顯示到畫面上
      DISPLAY g_xmdl_d[l_ac].xmdl015 TO xmdl015
      DISPLAY g_xmdl_d[l_ac].xmdl016 TO xmdl016
      DISPLAY g_xmdl_d[l_ac].xmdl052 TO xmdl052
      
      CALL s_desc_get_stock_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014) RETURNING g_xmdl_d[l_ac].xmdl014_desc
      CALL s_desc_get_locator_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015) RETURNING g_xmdl_d[l_ac].xmdl015_desc
      
   ELSE
   
      #開窗i段
      INITIALIZE g_qryparam.* TO NULL
      LET g_qryparam.state = 'i'
      LET g_qryparam.reqry = FALSE
      
      LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl014             #給予default值
      LET g_qryparam.default2 = g_xmdl_d[l_ac].xmdl015
      LET g_qryparam.default3 = g_xmdl_d[l_ac].xmdl016
      LET g_qryparam.default4 = g_xmdl_d[l_ac].xmdl052
      
      #給予arg
      LET g_qryparam.arg1 = g_xmdl_d[l_ac].xmdl008
      LET g_qryparam.arg2 = g_xmdl_d[l_ac].xmdl009
      
      #20151106 by stellar modify ----- (S)
      #stellar modify:使用單一單位時，不限制只能是該單位的倉儲批
#      LET g_qryparam.where = "inag007 = '",g_xmdl_d[l_ac].xmdl017,"'"
      LET l_imaf054 = ''
      SELECT imaf054 INTO l_imaf054
        FROM imaf_t
       WHERE imafent = g_enterprise
         AND imafsite= g_site
         AND imaf001 = g_xmdl_d[l_ac].xmdl008
      IF l_imaf054 = 'Y' THEN
         LET g_qryparam.where = "inag007 = '",g_xmdl_d[l_ac].xmdl017,"'"
      ELSE
         LET g_qryparam.where = " 1=1"
      END IF
      #20151106 by stellar modify ----- (E)

      #150921-00014 earl mod s
      #單據別庫位限制(From)
      CALL s_control_get_doc_sql('inag004',g_xmdk_m.xmdkdocno,'6') RETURNING l_success,l_where
      IF l_success THEN
         LET g_qryparam.where = g_qryparam.where," AND ",l_where
      END IF
      
      #限定庫位
      IF NOT cl_null(g_xmdh012) THEN
         LET g_qryparam.where = g_qryparam.where," AND inag004 = '",g_xmdh012,"'"
      END IF
      #150921-00014 earl mod e
            
      #限定儲位
      IF NOT cl_null(g_xmdh013) THEN
         LET g_qryparam.where = g_qryparam.where," AND inag005 = '",g_xmdh013,"'"
      END IF
      #限定批號
      IF NOT cl_null(g_xmdh014) THEN
         LET g_qryparam.where = g_qryparam.where," AND inag006 = '",g_xmdh014,"'"
      END IF
      #限定庫存管理特徵
      IF NOT cl_null(g_xmdh029) THEN
         LET g_qryparam.where = g_qryparam.where," AND inag003 = '",g_xmdh029,"'"
      END IF

      CALL q_inag004_13()

      #庫位
      LET g_xmdl_d[l_ac].xmdl014 = g_qryparam.return1
      DISPLAY g_xmdl_d[l_ac].xmdl014 TO xmdl014
      CALL s_desc_get_stock_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014) RETURNING g_xmdl_d[l_ac].xmdl014_desc
      
      #儲位
      LET g_xmdl_d[l_ac].xmdl015 = g_qryparam.return2
      DISPLAY g_xmdl_d[l_ac].xmdl015 TO xmdl015
      CALL s_desc_get_locator_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015) RETURNING g_xmdl_d[l_ac].xmdl015_desc
      
      #批號      
      LET g_xmdl_d[l_ac].xmdl016 = g_qryparam.return3      
      DISPLAY g_xmdl_d[l_ac].xmdl016 TO xmdl016
      
      #庫存管理特徵
      #160519-00008#8--(S)
      CALL s_axmt540_get_imaf(g_xmdl_d[l_ac].xmdl008) RETURNING l_imaf055,l_imaf061
      IF l_imaf055 = '1' AND (cl_null(g_qryparam.return3) OR g_qryparam.return3 = ' ') THEN
         LET g_xmdl_d[l_ac].xmdl016 = ''
      ELSE
      #160519-00008#8--(E)
         LET g_xmdl_d[l_ac].xmdl052 = g_qryparam.return4
      END IF         #160519-00008#8
      DISPLAY g_xmdl_d[l_ac].xmdl052 TO xmdl052


#      CASE p_type
#         WHEN '1' #庫位
#            #開窗i段
#            INITIALIZE g_qryparam.* TO NULL
#            LET g_qryparam.state = 'i'
#            LET g_qryparam.reqry = FALSE
#            
#            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl014             #給予default值
#            LET g_qryparam.arg1 = g_xmdl_d[l_ac].xmdl008
#            LET g_qryparam.arg2 = g_xmdl_d[l_ac].xmdl009
#            LET g_qryparam.arg3 = g_xmdl_d[l_ac].xmdl017
#            
#            CALL q_inaa001_26()
#            
#            LET g_xmdl_d[l_ac].xmdl014 = g_qryparam.return1              #將開窗取得的值回傳到變數            
#            DISPLAY g_xmdl_d[l_ac].xmdl014 TO xmdl014              #顯示到畫面上            
#            CALL s_desc_get_stock_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014) RETURNING g_xmdl_d[l_ac].xmdl014_desc
#         
#         WHEN '2' #儲位
#            #開窗i段
#            INITIALIZE g_qryparam.* TO NULL
#            LET g_qryparam.state = 'i'
#            LET g_qryparam.reqry = FALSE
#            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl015             #給予default值
#            
#            #給予arg
#            LET g_qryparam.arg1 = g_xmdl_d[l_ac].xmdl014
#            LET g_qryparam.arg2 = g_xmdl_d[l_ac].xmdl008
#            LET g_qryparam.arg3 = g_xmdl_d[l_ac].xmdl009
#            LET g_qryparam.arg4 = g_xmdl_d[l_ac].xmdl017
#            
#            CALL q_inab002_13()
#            
#            LET g_xmdl_d[l_ac].xmdl015 = g_qryparam.return1              #將開窗取得的值回傳到變數            
#            DISPLAY g_xmdl_d[l_ac].xmdl015 TO xmdl015
#            CALL s_desc_get_locator_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015) RETURNING g_xmdl_d[l_ac].xmdl015_desc
#            
#         WHEN '3' #批號
#            INITIALIZE g_qryparam.* TO NULL
#            LET g_qryparam.state = 'i'
#            LET g_qryparam.reqry = FALSE         
#            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl016             #給予default值
#            
#            #給予arg
#            LET g_qryparam.arg1 = g_site
#            LET g_qryparam.arg2 = g_xmdl_d[l_ac].xmdl008
#            LET g_qryparam.arg3 = g_xmdl_d[l_ac].xmdl009
#            LET g_qryparam.arg4 = g_xmdl_d[l_ac].xmdl014
#            LET g_qryparam.arg5 = g_xmdl_d[l_ac].xmdl015
#            LET g_qryparam.arg6 = g_xmdl_d[l_ac].xmdl017
#            
#            CALL q_inad003_2()
#            LET g_xmdl_d[l_ac].xmdl016 = g_qryparam.return1              #將開窗取得的值回傳到變數
#            DISPLAY g_xmdl_d[l_ac].xmdl016 TO xmdl016
#            
#         
#         WHEN '4' #庫存管理特徵
##            INITIALIZE g_qryparam.* TO NULL
##            LET g_qryparam.state = 'i'
##            LET g_qryparam.reqry = FALSE    
##            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl052             #給予default值
##
##            #給予arg
##            LET g_qryparam.arg1 = g_site
##
##            CALL q_xmdl052()
##            LET g_xmdl_d[l_ac].xmdl052 = g_qryparam.return1              #將開窗取得的值回傳到變數
##            DISPLAY g_xmdl_d[l_ac].xmdl052 TO xmdl052
#
#      END CASE

   END IF


END FUNCTION

################################################################################
# Descriptions...: 出貨數量檢查
# Memo...........:
# Usage..........: CALL axmt540_xmdl018_chk()
#                  RETURNING r_success
# Input parameter: 
#                : 
# Return code....: r_success
#                : 
# Date & Author..: 140825 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_xmdl018_chk()
   DEFINE r_success         LIKE type_t.num5
   DEFINE l_success         LIKE type_t.num5
   DEFINE l_num             LIKE xmdl_t.xmdl018
   DEFINE l_num1            LIKE xmdl_t.xmdl018
   DEFINE l_slip            LIKE ooba_t.ooba002   

   #151209-00018#1  2015/12/10 By earl add s
   DEFINE l_price   RECORD
      source           LIKE xmdc_t.xmdc040,
      docno            LIKE xmdc_t.xmdcdocno,
      seq              LIKE xmdc_t.xmdcseq,
      price            LIKE xmdc_t.xmdc043
      
                    END RECORD
   #151209-00018#1  2015/12/10 By earl add e
   
   #150917-00001#3  2016/01/21  By earl add s
   DEFINE l_chk           LIKE type_t.num5        #TRUE 需要校驗檢查  FALSE  不需校驗檢查
   DEFINE l_qty           LIKE xmdl_t.xmdl205     #未續拋數量
   DEFINE l_qty_batch     LIKE xmdl_t.xmdl205     #未續拋數量(考慮批號)
   #150917-00001#3  2016/01/21  By earl add e
   DEFINE l_xmdc032    LIKE xmdc_t.xmdc032   #160219-00003#1 add
   DEFINE l_pmdp023    LIKE pmdp_t.pmdp023   #160219-00003#1 add



   LET r_success = TRUE

   IF NOT cl_null(g_xmdl_d[l_ac].xmdl001) THEN        #出通單
      #檢核不可大於(xmdh016-xmdh030-已登打出貨單未確認的數量) 
      CALL s_axmt540_get_max_ship_qty(1,g_xmdk_m.xmdkdocno,g_xmdl_d_t.xmdlseq,g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,'','') RETURNING l_num,l_num1

      IF l_num1 < g_xmdl_d[l_ac].xmdl018 THEN
         INITIALIZE g_errparam TO NULL
         
         #160623-00014#1-mod-(S)
#         CASE g_prog
#            WHEN 'axmt542'
#               LET g_errparam.code = 'axm-00589'  #出貨量不可大於"申請出通數量" - "已轉出貨數量" - "已登打出貨單未確認的出貨量"！
#            OTHERWISE
#               LET g_errparam.code = 'axm-00189'    #出貨量不可大於"申請出通數量" - "已轉出貨數量" - "已登打出貨單未確認的出貨量"！
#         END CASE
         CASE 
            WHEN g_prog MATCHES 'axmt542'
               LET g_errparam.code = 'axm-00589'  #出貨量不可大於"申請出通數量" - "已轉出貨數量" - "已登打出貨單未確認的出貨量"！
            OTHERWISE
               LET g_errparam.code = 'axm-00189'    #出貨量不可大於"申請出通數量" - "已轉出貨數量" - "已登打出貨單未確認的出貨量"！
         END CASE
         #160623-00014#1-mod-(E)
         
         LET g_errparam.extend = g_xmdl_d[l_ac].xmdl018
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET r_success = FALSE
         RETURN r_success
      END IF

      #檢查是否超出出通單的多庫儲批
      IF g_xmdl_d[l_ac].xmdl013 <> 'Y' THEN
      
         #出通單若有做多庫儲批，檢查是否超出多庫儲批數量
         IF g_xmdh011 = 'Y' THEN
            CALL s_axmt540_get_max_ship_qty1(g_xmdk_m.xmdkdocno,g_xmdl_d_t.xmdlseq,
                                             g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,g_xmdl_d[l_ac].xmdl052,
                                             g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002) RETURNING l_num

            IF l_num < g_xmdl_d[l_ac].xmdl018 THEN
               INITIALIZE g_errparam TO NULL
               #160623-00014#1-mod-(S)
#               CASE g_prog
#                  WHEN 'axmt542'
#                     LET g_errparam.code = 'axm-00589'  #出貨量不可大於"申請出通數量" - "已轉出貨數量" - "已登打出貨單未確認的出貨量"！
#                  OTHERWISE
#                     LET g_errparam.code = 'axm-00189'    #出貨量不可大於"申請出通數量" - "已轉出貨數量" - "已登打出貨單未確認的出貨量"！
#               END CASE
               CASE 
                  WHEN g_prog MATCHES 'axmt542'
                     LET g_errparam.code = 'axm-00589'  #出貨量不可大於"申請出通數量" - "已轉出貨數量" - "已登打出貨單未確認的出貨量"！
                  OTHERWISE
                     LET g_errparam.code = 'axm-00189'    #出貨量不可大於"申請出通數量" - "已轉出貨數量" - "已登打出貨單未確認的出貨量"！
               END CASE
               #160623-00014#1-mod-(E)
               LET g_errparam.extend = g_xmdl_d[l_ac].xmdl018
               LET g_errparam.popup = TRUE
               CALL cl_err()
         
               LET r_success = FALSE
               RETURN r_success
            END IF
                                             
         END IF
      END IF
      
   ELSE
      IF NOT cl_null(g_xmdl_d[l_ac].xmdl003) THEN    #訂單
         #檢核不可大於(xmdd006-xmdd014-已登打出貨未過帳的出貨量+xmdd016+xmdd034)
         CALL s_axmt540_get_max_ship_qty(2,g_xmdk_m.xmdkdocno,g_xmdl_d_t.xmdlseq,g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,g_xmdl_d[l_ac].xmdl005,g_xmdl_d[l_ac].xmdl006) RETURNING l_num,l_num1                                 

         IF l_num1 < g_xmdl_d[l_ac].xmdl018 THEN
            INITIALIZE g_errparam TO NULL
           #--160219-00003#1--add--(S)
            CALL s_axmt540_get_xmdc032(g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,g_xmdl_d[l_ac].xmdl005,g_xmdl_d[l_ac].xmdl006)
              RETURNING l_xmdc032,l_pmdp023
            IF l_xmdc032 = '3' THEN
               LET g_errparam.code = 'axm-00753'   #訂單單身取貨方式為「供應商直送」，出通/出貨數量不足採購單已確認之需求量
            ELSE                
           #--160219-00003#1--add--(E)
               #160623-00014#1-mod-(S)
#               CASE g_prog
#                  WHEN 'axmt542'
#                     LET g_errparam.code = 'axm-00590'  #出貨量不可大於"分批訂購數量"-"已出貨量"-"已登打出貨單未確認的出貨量"！
#                  OTHERWISE
#                     LET g_errparam.code = 'axm-00190'  #出貨量不可大於"分批訂購數量"-"已出貨量"-"已登打出貨單未確認的出貨量"！
#               END CASE
               CASE 
                  WHEN g_prog MATCHES 'axmt542'
                     LET g_errparam.code = 'axm-00590'  #出貨量不可大於"分批訂購數量"-"已出貨量"-"已登打出貨單未確認的出貨量"！
                  OTHERWISE
                     LET g_errparam.code = 'axm-00190'  #出貨量不可大於"分批訂購數量"-"已出貨量"-"已登打出貨單未確認的出貨量"！
               END CASE
               #160623-00014#1-mod-(E)
            END IF    #--160219-00003#1--add
            LET g_errparam.extend = g_xmdl_d[l_ac].xmdl018
            LET g_errparam.popup = TRUE
            CALL cl_err()

            LET r_success = FALSE
            RETURN r_success
         END IF
         
      END IF
   END IF       
   
   #150917-00001#3  2016/01/21  By earl add s
   CALL s_aic_carry_continue_qty(g_site,g_xmdk_m.xmdk044,'1',g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,g_xmdl_d[l_ac].xmdl005,g_xmdl_d[l_ac].xmdl006,'',g_xmdk_m.xmdkdocno,g_xmdl_d_t.xmdlseq)
   RETURNING l_chk,l_qty,l_qty_batch
         
   IF l_chk THEN
      IF l_qty < g_xmdl_d[l_ac].xmdl018 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'axm-00748'  #項次%1 多角出貨單"出貨數量"不可大於最終站可續拋數量！
         LET g_errparam.extend = g_xmdk_m.xmdkdocno
         LET g_errparam.popup = TRUE
         LET g_errparam.replace[1] = g_xmdl_d[l_ac].xmdlseq
         CALL cl_err()
               
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF
   #150917-00001#3  2016/01/21  By earl add e
   
   
   CALL axmt540_inao()    #150821-xianghui
   #取位
   IF NOT cl_null(g_xmdl_d[l_ac].xmdl017) AND NOT cl_null(g_xmdl_d[l_ac].xmdl018) THEN
      CALL s_aooi250_take_decimals(g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018) RETURNING l_success,g_xmdl_d[l_ac].xmdl018
      LET g_xmdl_d_o.xmdl018 = g_xmdl_d[l_ac].xmdl018      
   END IF

   #檢驗否
   IF g_xmdl_d[l_ac].xmdl023 = 'N' THEN
      LET g_xmdl_d[l_ac].xmdl056 = g_xmdl_d[l_ac].xmdl018
   ELSE
      IF NOT cl_null(g_xmdl_d[l_ac].xmdl001) AND NOT cl_null(g_xmdl_d[l_ac].xmdl003) THEN   #出通單
         #單據別參數
         CALL s_aooi200_get_slip(g_xmdl_d[l_ac].xmdl003) RETURNING l_success,l_slip
         IF cl_get_doc_para(g_enterprise,g_site,l_slip,'D-BAS-0094') = '2' THEN   #OQC檢驗時機為"2出貨時檢驗"
            LET g_xmdl_d[l_ac].xmdl056 = 0
         ELSE
            LET g_xmdl_d[l_ac].xmdl056 = g_xmdl_d[l_ac].xmdl018
         END IF
   
      ELSE  #訂單或無訂單出貨
         LET g_xmdl_d[l_ac].xmdl056 = 0
      END IF
   END IF
   LET g_xmdl_d_o.xmdl056 = g_xmdl_d[l_ac].xmdl056

   #推算參考數量
   IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) AND NOT cl_null(g_xmdl_d[l_ac].xmdl017) AND
      NOT cl_null(g_xmdl_d[l_ac].xmdl019) AND NOT cl_null(g_xmdl_d[l_ac].xmdl018) THEN
      
      CALL s_aooi250_convert_qty(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl018)
      RETURNING l_success,g_xmdl_d[l_ac].xmdl020
      LET g_xmdl_d_o.xmdl020 = g_xmdl_d[l_ac].xmdl020
   ELSE
      LET g_xmdl_d[l_ac].xmdl020 = ''
      LET g_xmdl_d_o.xmdl020 = g_xmdl_d[l_ac].xmdl020
   END IF

   #推算計價數量
   IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) AND NOT cl_null(g_xmdl_d[l_ac].xmdl017) AND
      NOT cl_null(g_xmdl_d[l_ac].xmdl021) AND NOT cl_null(g_xmdl_d[l_ac].xmdl018) THEN
      
      CALL s_aooi250_convert_qty(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl021,g_xmdl_d[l_ac].xmdl018)
      RETURNING l_success,g_xmdl_d[l_ac].xmdl022
      LET g_xmdl_d_o.xmdl022 = g_xmdl_d[l_ac].xmdl022
   ELSE
#161130-00043#1-s add
      IF NOT cl_null(g_xmdl_d[l_ac].xmdl003) AND cl_null(g_xmdl_d[l_ac].xmdl004) THEN #費用料號
         #費用料號的計價單位可能是空的，不做處理
      ELSE
#161130-00043#1-e add
         LET g_xmdl_d[l_ac].xmdl022 = ''
         LET g_xmdl_d_o.xmdl022 = g_xmdl_d[l_ac].xmdl022
      END IF   #161130-00043#1 add
   END IF            

   #取價
   #151209-00018#1  2015/12/10 By earl mod s
   IF cl_null(g_xmdl_d[l_ac].xmdl001) AND cl_null(g_xmdl_d[l_ac].xmdl003) THEN   #無來源且有輸入料號、產品特徵時才做取價
      INITIALIZE l_price.* TO NULL
      CALL axmt540_get_price(l_ac)
      RETURNING l_price.source,l_price.docno,l_price.seq,l_price.price
      
      #重新取價
      IF cl_null(g_xmdl2_d[l_ac].xmdl042) THEN
         LET g_xmdl2_d[l_ac].xmdl042 = l_price.source
         LET g_xmdl2_d[l_ac].xmdl043 = l_price.docno
         LET g_xmdl2_d[l_ac].xmdl044 = l_price.seq
         LET g_xmdl2_d[l_ac].xmdl045 = l_price.price
      ELSE
         IF g_xmdl2_d[l_ac].xmdl045 <> l_price.price THEN
            IF cl_ask_confirm('axm-00230') THEN
               LET g_xmdl2_d[l_ac].xmdl042 = l_price.source
               LET g_xmdl2_d[l_ac].xmdl043 = l_price.docno
               LET g_xmdl2_d[l_ac].xmdl044 = l_price.seq
               LET g_xmdl2_d[l_ac].xmdl045 = l_price.price
            END IF
         END IF
      END IF
   #151209-00018#1  2015/12/10 By earl mod e
      
      LET g_xmdl2_d[l_ac].xmdl024 = g_xmdl2_d[l_ac].xmdl045
      LET g_xmdl2_d_o.xmdl024 = g_xmdl2_d[l_ac].xmdl024
   END IF

   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 修改單價Input
# Memo...........:
# Usage..........: CALL axmt540_modify_price()
#                  
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 140919 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_modify_price()
   DEFINE l_success         LIKE type_t.num5
   DEFINE l_oodbl004        LIKE oodbl_t.oodbl004
   DEFINE l_oodb005         LIKE oodb_t.oodb005
   DEFINE l_oodb006         LIKE oodb_t.oodb006
   DEFINE l_oodb011         LIKE oodb_t.oodb011
   
   DEFINE l_xmdl038         LIKE xmdl_t.xmdl038
   DEFINE l_xmdl053         LIKE xmdl_t.xmdl053
   DEFINE l_xmdl047         LIKE xmdl_t.xmdl047

   LET l_success = TRUE

   #顯示價格資訊頁籤
   CALL cl_set_comp_visible("page_7",TRUE)

   IF g_xmdl_d.getLength() = 0 THEN
      RETURN   #僅顯示不可修改單價
   END IF

   CALL cl_err_collect_init()

   IF g_xmdk_m.xmdkstus = 'X' THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "axm-00552"   #此單據已作廢，僅顯示不可修改！
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()
   
      LET l_success = FALSE
   END IF
   
   #財務檢查(立帳、暫估、發票)
   LET l_xmdl038 = 0
   LET l_xmdl053 = 0
   LET l_xmdl047 = 0
   SELECT SUM(COALESCE(xmdl038,0)) + SUM(COALESCE(xmdl039,0)) + SUM(COALESCE(xmdl040,0)),
          SUM(COALESCE(xmdl053,0)) + SUM(COALESCE(xmdl054,0)) + SUM(COALESCE(xmdl055,0)),
          SUM(COALESCE(xmdl047,0))
     INTO l_xmdl038,l_xmdl053,l_xmdl047
     FROM xmdl_t
    WHERE xmdlent = g_enterprise
      AND xmdldocno = g_xmdk_m.xmdkdocno
   
   IF l_xmdl038 <> 0 AND NOT cl_null(l_xmdl038) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "axm-00549"   #此單據已立帳，僅顯示不可修改！
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()
      
      LET l_success = FALSE
   END IF

   IF l_xmdl053 <> 0 AND NOT cl_null(l_xmdl053) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "axm-00550"   #此單據已有暫估資料，僅顯示不可修改！
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()
      
      LET l_success = FALSE
   END IF
   
   IF l_xmdl047 <> 0 AND NOT cl_null(l_xmdl047) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "axm-00551"   #此單據已有發票資料，僅顯示不可修改！
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()
      
      LET l_success = FALSE
   END IF   

   CALL cl_err_collect_show()

   IF NOT l_success THEN
      RETURN   #僅顯示不可修改單價
   END IF
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      INPUT ARRAY g_xmdl2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                   INSERT ROW = FALSE,
                   DELETE ROW = FALSE,
                   APPEND ROW = FALSE)                 
      
         BEFORE INPUT    
            CALL axmt540_b_fill()
            LET g_rec_b = g_xmdl2_d.getLength()
      
            LET g_forupd_sql = "SELECT xmdlsite,xmdlseq,xmdl001,xmdl002,xmdl003,xmdl004,xmdl005,xmdl006,xmdl007, 
                xmdl008,xmdl009,xmdl033,xmdl011,xmdl012,xmdl017,xmdl018,xmdl019,xmdl020,xmdl010,xmdl013,xmdl014, 
                xmdl015,xmdl016,xmdl021,xmdl022,xmdl050,xmdl023,xmdl041,xmdl030,xmdl031,xmdl032,xmdl051,xmdl035, 
                xmdl036,xmdl037,xmdl088,xmdl034,xmdlseq,xmdl024,xmdl025,xmdl026,xmdl027,xmdl028,xmdl029,xmdl042, 
                xmdl043,xmdl044,xmdl045,xmdl046,xmdl087 FROM xmdl_t WHERE xmdlent=? AND xmdldocno=? AND xmdlseq=?  
                FOR UPDATE"
           
            LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
            LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
            DECLARE axmt540_bcl_p CURSOR FROM g_forupd_sql
      
         BEFORE ROW
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
      
            DISPLAY l_ac TO FORMONLY.idx
            
            CALL s_transaction_begin()
            OPEN axmt540_cl USING g_enterprise,g_xmdk_m.xmdkdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axmt540_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               
               CLOSE axmt540_cl
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            END IF
               
            LET g_rec_b = g_xmdl2_d.getLength()
               
            IF g_rec_b >= l_ac  AND g_xmdl2_d[l_ac].xmdlseq IS NOT NULL THEN 
               LET g_xmdl2_d_t.* = g_xmdl2_d[l_ac].*  #BACKUP
               LET g_xmdl2_d_o.* = g_xmdl2_d[l_ac].*  #BACKUP
       
               CALL axmt540_set_entry_b('p')
               CALL axmt540_set_no_entry_b('p')
               
               OPEN axmt540_bcl_p USING g_enterprise,g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq     
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "axmt540_bcl" 
                  LET g_errparam.code   = SQLCA.sqlcode
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()        
      
                  CLOSE axmt540_cl
                  CLOSE axmt540_bcl_p
                  CALL s_transaction_end('N','0')
                  EXIT DIALOG
               END IF
      
               FETCH axmt540_bcl_p INTO g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdlseq,g_xmdl_d[l_ac].xmdl001, 
                   g_xmdl_d[l_ac].xmdl002,g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,g_xmdl_d[l_ac].xmdl005, 
                   g_xmdl_d[l_ac].xmdl006,g_xmdl_d[l_ac].xmdl007,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009, 
                   g_xmdl_d[l_ac].xmdl033,g_xmdl_d[l_ac].xmdl011,g_xmdl_d[l_ac].xmdl012,g_xmdl_d[l_ac].xmdl017, 
                   g_xmdl_d[l_ac].xmdl018,g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl020,g_xmdl_d[l_ac].xmdl010, 
                   g_xmdl_d[l_ac].xmdl013,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016, 
                   g_xmdl_d[l_ac].xmdl021,g_xmdl_d[l_ac].xmdl022,g_xmdl_d[l_ac].xmdl050,g_xmdl_d[l_ac].xmdl023, 
                   g_xmdl_d[l_ac].xmdl041,g_xmdl_d[l_ac].xmdl030,g_xmdl_d[l_ac].xmdl031,g_xmdl_d[l_ac].xmdl032, 
                   g_xmdl_d[l_ac].xmdl051,g_xmdl_d[l_ac].xmdl035,g_xmdl_d[l_ac].xmdl036,g_xmdl_d[l_ac].xmdl037, 
                   g_xmdl_d[l_ac].xmdl088,g_xmdl_d[l_ac].xmdl034,g_xmdl2_d[l_ac].xmdlseq,g_xmdl2_d[l_ac].xmdl024, 
                   g_xmdl2_d[l_ac].xmdl025,g_xmdl2_d[l_ac].xmdl026,g_xmdl2_d[l_ac].xmdl027,g_xmdl2_d[l_ac].xmdl028, 
                   g_xmdl2_d[l_ac].xmdl029,g_xmdl2_d[l_ac].xmdl042,g_xmdl2_d[l_ac].xmdl043,g_xmdl2_d[l_ac].xmdl044, 
                   g_xmdl2_d[l_ac].xmdl045,g_xmdl2_d[l_ac].xmdl046,g_xmdl2_d[l_ac].xmdl087
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = '' 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
               END IF
                  
               CALL axmt540_b_fill()
               CALL cl_show_fld_cont()
            END IF
                           
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_xmdl2_d[l_ac].* = g_xmdl2_d_t.*
               
               CLOSE axmt540_cl            
               CLOSE axmt540_bcl_p
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            END IF
                                             
            UPDATE xmdl_t SET xmdl024 = g_xmdl2_d[l_ac].xmdl024,
                              xmdl025 = g_xmdl2_d[l_ac].xmdl025,
                              xmdl026 = g_xmdl2_d[l_ac].xmdl026,
                              xmdl027 = g_xmdl2_d[l_ac].xmdl027,
                              xmdl028 = g_xmdl2_d[l_ac].xmdl028,
                              xmdl029 = g_xmdl2_d[l_ac].xmdl029,
                              xmdl042 = g_xmdl2_d[l_ac].xmdl042,
                              xmdl043 = g_xmdl2_d[l_ac].xmdl043,
                              xmdl044 = g_xmdl2_d[l_ac].xmdl044,
                              xmdl045 = g_xmdl2_d[l_ac].xmdl045
             WHERE xmdlent = g_enterprise AND xmdldocno = g_xmdk_m.xmdkdocno
               AND xmdlseq = g_xmdl2_d_t.xmdlseq
                                    
            CASE
               WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "xmdl_t" 
                  LET g_errparam.code   = "std-00009" 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  LET g_xmdl2_d[l_ac].* = g_xmdl2_d_t.*
                  
                  CLOSE axmt540_cl            
                  CLOSE axmt540_bcl_p
                  CALL s_transaction_end('N','0')
                  EXIT DIALOG
                  
               WHEN SQLCA.sqlcode #其他錯誤
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "xmdl_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  LET g_xmdl2_d[l_ac].* = g_xmdl2_d_t.*
                  
                  CLOSE axmt540_cl            
                  CLOSE axmt540_bcl_p
                  CALL s_transaction_end('N','0')
                  EXIT DIALOG
                                 
            END CASE
               
            #修改歷程記錄
            LET g_log1 = util.JSON.stringify(g_xmdk_m),util.JSON.stringify(g_xmdl2_d_t)
            LET g_log2 = util.JSON.stringify(g_xmdk_m),util.JSON.stringify(g_xmdl2_d[l_ac])
            IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
               CLOSE axmt540_cl            
               CLOSE axmt540_bcl_p
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            END IF
                              
            #重新計算整單的未稅、含稅總金額
            CALL axmt540_tax_recount(g_xmdk_m.xmdkdocno) RETURNING l_success                     
            IF NOT l_success THEN
               LET g_xmdl2_d[l_ac].* = g_xmdl2_d_t.*
               
               CLOSE axmt540_cl            
               CLOSE axmt540_bcl_p
               CALL s_transaction_end('N','0')
               EXIT DIALOG            
            END IF
            
         AFTER FIELD xmdl024
            IF NOT cl_ap_chk_range(g_xmdl2_d[l_ac].xmdl024,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xmdl024
            END IF
      
            IF NOT cl_null(g_xmdl2_d[l_ac].xmdl024) THEN 
               IF g_xmdl2_d[l_ac].xmdl024 <> g_xmdl2_d_o.xmdl024 OR cl_null(g_xmdl2_d_o.xmdl024) THEN
      
                  IF NOT s_axmt540_price_chk(g_xmdk_m.xmdk018,g_xmdl_d[l_ac].xmdl003,g_xmdl2_d[l_ac].xmdl024,g_xmdl2_d[l_ac].xmdl045) THEN
                     LET g_xmdl2_d[l_ac].xmdl024 = g_xmdl2_d_o.xmdl024
                     NEXT FIELD CURRENT
                  END IF
                  
                  #稅額計算                     
                  CALL s_axmt540_tax_count(g_xmdl2_d_t.xmdlseq,g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,g_site,g_xmdl2_d[l_ac].xmdl025,
                                           g_xmdl_d[l_ac].xmdl022,g_xmdl2_d[l_ac].xmdl024,
                                           g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,
                                           g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,g_xmdl_d[l_ac].xmdl018)
                  RETURNING g_xmdl2_d[l_ac].xmdl027,g_xmdl2_d[l_ac].xmdl028,g_xmdl2_d[l_ac].xmdl029
                  
               END IF
            END IF 
            
            LET g_xmdl2_d_o.xmdl024 = g_xmdl2_d[l_ac].xmdl024
      
         AFTER FIELD xmdl025
            CALL s_desc_get_tax_desc1(g_site,g_xmdl2_d[l_ac].xmdl025) RETURNING g_xmdl2_d[l_ac].xmdl025_desc
            
            IF NOT cl_null(g_xmdl2_d[l_ac].xmdl025) THEN 
               IF g_xmdl2_d[l_ac].xmdl025 <> g_xmdl2_d_o.xmdl025 OR cl_null(g_xmdl2_d_o.xmdl025) THEN
                  
                  #檢查、取得稅別、單價含稅否
                  CALL s_tax_chk(g_site,g_xmdl2_d[l_ac].xmdl025)
                  RETURNING l_success,l_oodbl004,l_oodb005,l_oodb006,l_oodb011 
      
                  IF NOT l_success THEN
                     LET g_xmdl2_d[l_ac].xmdl025 = g_xmdl2_d_o.xmdl025                     
                     CALL s_desc_get_tax_desc1(g_site,g_xmdl2_d[l_ac].xmdl025) RETURNING g_xmdl2_d[l_ac].xmdl025_desc
                     
                     NEXT FIELD CURRENT
                  END IF       
                              
                  LET g_xmdl2_d[l_ac].xmdl026 = l_oodb006  #稅率
      
                  #稅額計算                     
                  CALL s_axmt540_tax_count(g_xmdl2_d_t.xmdlseq,g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,g_site,g_xmdl2_d[l_ac].xmdl025,
                                           g_xmdl_d[l_ac].xmdl022,g_xmdl2_d[l_ac].xmdl024,
                                           g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,
                                           g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,g_xmdl_d[l_ac].xmdl018)
                  RETURNING g_xmdl2_d[l_ac].xmdl027,g_xmdl2_d[l_ac].xmdl028,g_xmdl2_d[l_ac].xmdl029
               
               END IF
            END IF  
            
            LET g_xmdl2_d_o.xmdl025 = g_xmdl2_d[l_ac].xmdl025
      
         ON ACTION controlp INFIELD xmdl025
            #開窗i段
	   		INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
	   		LET g_qryparam.reqry = FALSE
      
            LET g_qryparam.default1 = g_xmdl2_d[l_ac].xmdl025             #給予default值
      
            LET g_qryparam.arg1 = g_site
      
            CALL q_oodb002_3()                                #呼叫開窗
      
            LET g_xmdl2_d[l_ac].xmdl025 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmdl2_d[l_ac].xmdl025 TO s_detail2[l_ac].xmdl025
      
            CALL s_desc_get_tax_desc1(g_site,g_xmdl2_d[l_ac].xmdl025) RETURNING g_xmdl2_d[l_ac].xmdl025_desc
      
            NEXT FIELD xmdl025                          #返回原欄位
      
         AFTER ROW
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.extend = ''
               LET g_errparam.code   = 9001
               LET g_errparam.popup  = FALSE
               CALL cl_err()
               LET INT_FLAG = 0
      
               LET g_xmdl2_d[l_ac].* = g_xmdl2_d_t.*
      
               CLOSE axmt540_cl
               CLOSE axmt540_bcl_p
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            END IF
            
            CLOSE axmt540_cl         
            CLOSE axmt540_bcl_p
            
            CALL s_transaction_end('Y','0')
      
         AFTER INPUT
            CLOSE axmt540_cl         
            CLOSE axmt540_bcl_p
            
            CALL axmt540_b_fill()
            
      END INPUT
      
      BEFORE DIALOG 
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
         CALL DIALOG.setCurrentRow("s_detail2",g_detail_idx)
         CALL DIALOG.setCurrentRow("s_detail3",g_detail_idx)
    
         ON ACTION controlf
            CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
            CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
    
         ON ACTION controlr
            CALL cl_show_req_fields()
    
         ON ACTION controls
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         ON ACTION accept
            ACCEPT DIALOG
           
         ON ACTION cancel      #在dialog button (放棄)
            LET INT_FLAG = TRUE 
            LET g_detail_idx  = 1
            LET g_detail_idx2 = 1
            
            ACCEPT DIALOG
#            EXIT DIALOG         #ACCEPT DIALOG才會把lock cursor關閉
    
         ON ACTION close       #在dialog 右上角 (X)
            ACCEPT DIALOG
#            EXIT DIALOG         #ACCEPT DIALOG才會把lock cursor關閉
    
         ON ACTION exit        #toolbar 離開
            ACCEPT DIALOG
#            EXIT DIALOG         #ACCEPT DIALOG才會把lock cursor關閉
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
   END DIALOG
END FUNCTION

################################################################################
# Descriptions...: 修改客戶收貨日
# Memo...........:
# Usage..........: CALL axmt540_modify_xmdk055()
#                  RETURNING r_success
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 141128 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_modify_xmdk055()
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_para_data     LIKE type_t.chr80          #接參數用
   
   LET r_success = TRUE

   INPUT BY NAME g_xmdk_m.xmdk055 ATTRIBUTE(WITHOUT DEFAULTS)

      BEFORE INPUT
         IF cl_null(g_xmdk_m.xmdk055) THEN
            LET g_xmdk_m.xmdk055 = g_today
         END IF
         DISPLAY BY NAME g_xmdk_m.xmdk055

      AFTER FIELD xmdk055
            
      AFTER INPUT
         IF INT_FLAG THEN
            EXIT INPUT
         END IF

         ON ACTION accept
            ACCEPT INPUT

         ON ACTION cancel
            LET INT_FLAG = TRUE
            EXIT INPUT

         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT INPUT

         ON ACTION close
            LET INT_FLAG = TRUE
            EXIT INPUT

   END INPUT

   IF INT_FLAG THEN
      LET INT_FLAG = FALSE      
      
      LET r_success = FALSE
      RETURN r_success
   END IF

   UPDATE xmdk_t
      SET xmdk055 = g_xmdk_m.xmdk055
    WHERE xmdkent = g_enterprise
      AND xmdkdocno = g_xmdk_m.xmdkdocno

   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE:"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      LET r_success = FALSE
      RETURN r_success
   END IF

   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 取得單據別設定帶出單頭預設值
# Memo...........:
# Usage..........: CALL axmt540_doc_default()
#                 
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 141202 By earl
# Modify.........: aooi200設定之預設值
################################################################################
PRIVATE FUNCTION axmt540_doc_default()
   DEFINE  l_success    LIKE type_t.num5
   DEFINE  l_slip       LIKE oobal_t.oobal002
   DEFINE  l_oodbl004   LIKE oodbl_t.oodbl004  #稅別名稱
   DEFINE  l_oodb005    LIKE oodb_t.oodb005    #含稅否
   DEFINE  l_oodb006    LIKE oodb_t.oodb006    #稅率
   DEFINE  l_oodb011    LIKE oodb_t.oodb011    #取得稅別類型1:正常稅率2:依料件設定

   #抓取單據別
   LET l_slip = ''
   CALL s_aooi200_get_slip(g_xmdk_m.xmdkdocno) RETURNING l_success,l_slip
   IF NOT l_success THEN
      RETURN
   END IF
   
   LET g_xmdk_m.xmdk001 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk001',g_xmdk_m.xmdk001)
   LET g_xmdk_m.xmdk002 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk002',g_xmdk_m.xmdk002)
   LET g_xmdk_m.xmdk003 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk003',g_xmdk_m.xmdk003)
   LET g_xmdk_m.xmdk004 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk004',g_xmdk_m.xmdk004)

   LET g_xmdk_m.xmdk007 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk007',g_xmdk_m.xmdk007)
   LET g_xmdk_m.xmdk008 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk008',g_xmdk_m.xmdk008)
   LET g_xmdk_m.xmdk009 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk009',g_xmdk_m.xmdk009)
   LET g_xmdk_m.xmdk010 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk010',g_xmdk_m.xmdk010)   
   LET g_xmdk_m.xmdk011 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk011',g_xmdk_m.xmdk011)
   LET g_xmdk_m.xmdk012 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk012',g_xmdk_m.xmdk012)
   
   LET g_xmdk_m.xmdk015 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk015',g_xmdk_m.xmdk015)
   LET g_xmdk_m.xmdk016 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk016',g_xmdk_m.xmdk016)

   LET g_xmdk_m.xmdk018 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk018',g_xmdk_m.xmdk018)
   LET g_xmdk_m.xmdk019 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk019',g_xmdk_m.xmdk019)
   LET g_xmdk_m.xmdk020 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk020',g_xmdk_m.xmdk020)
   LET g_xmdk_m.xmdk021 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk021',g_xmdk_m.xmdk021)
   LET g_xmdk_m.xmdk022 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk022',g_xmdk_m.xmdk022)
   LET g_xmdk_m.xmdk023 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk023',g_xmdk_m.xmdk023)
   LET g_xmdk_m.xmdk024 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk024',g_xmdk_m.xmdk024)
   LET g_xmdk_m.xmdk025 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk025',g_xmdk_m.xmdk025)
   LET g_xmdk_m.xmdk026 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk026',g_xmdk_m.xmdk026)
   LET g_xmdk_m.xmdk027 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk027',g_xmdk_m.xmdk027)   
   LET g_xmdk_m.xmdk028 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk028',g_xmdk_m.xmdk028)
   LET g_xmdk_m.xmdk029 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk029',g_xmdk_m.xmdk029)
   
   LET g_xmdk_m.xmdk030 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk030',g_xmdk_m.xmdk030)
   LET g_xmdk_m.xmdk031 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk031',g_xmdk_m.xmdk031)
   LET g_xmdk_m.xmdk032 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk032',g_xmdk_m.xmdk032)
   LET g_xmdk_m.xmdk033 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk033',g_xmdk_m.xmdk033)

   LET g_xmdk_m.xmdk042 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk042',g_xmdk_m.xmdk042)
   LET g_xmdk_m.xmdk043 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk043',g_xmdk_m.xmdk043)
   
   LET g_xmdk_m.xmdk044 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk044',g_xmdk_m.xmdk044)
   LET g_xmdk_m.xmdk045 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk045',g_xmdk_m.xmdk045)
   LET g_xmdk_m.xmdk054 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk054',g_xmdk_m.xmdk054)
   
   LET g_xmdk_m.xmdk055 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk055',g_xmdk_m.xmdk055)

   LET g_xmdk_m.xmdk202 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk202',g_xmdk_m.xmdk202)
   LET g_xmdk_m.xmdk039 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk039',g_xmdk_m.xmdk039)     #160907-00054#1
   LET g_xmdk_m.xmdk040 = s_aooi200_get_doc_default(g_site,'1',l_slip,'xmdk040',g_xmdk_m.xmdk040)     #170103-00026#1   add
   
   IF NOT cl_null(g_xmdk_m.xmdk012) THEN                   
      #檢查、取得稅別、單價含稅否
      CALL s_tax_chk(g_site,g_xmdk_m.xmdk012)
      RETURNING l_success,l_oodbl004,l_oodb005,l_oodb006,l_oodb011
      
      LET g_xmdk_m.xmdk013 = l_oodb006
      LET g_xmdk_m.xmdk014 = l_oodb005
   END IF
   
   IF NOT cl_null(g_xmdk_m.xmdk042) AND NOT cl_null(g_xmdk_m.xmdk016) THEN
      #帶出匯率
      #modify--151118-00012#1 By shiun  更改取匯率方式--(S)
      CALL axmt540_xmda_xmdk017() RETURNING g_xmdk_m.xmdk017
      IF cl_null(g_xmdk_m.xmdk017) THEN
         CALL axmt540_get_ratedate() RETURNING g_ratedate
         CALL s_axmt540_get_exchange(g_xmdk_m.xmdk042,g_xmdk_m.xmdk016,g_ratedate) RETURNING g_xmdk_m.xmdk017
      END IF
      #modify--151118-00012#1 By shiun  更改取匯率方式--(E)
   END IF
   
   CALL s_desc_get_person_desc(g_xmdk_m.xmdk003) RETURNING g_xmdk_m.xmdk003_desc            
   CALL s_desc_get_department_desc(g_xmdk_m.xmdk004) RETURNING g_xmdk_m.xmdk004_desc
            
   CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk007) RETURNING g_xmdk_m.xmdk007_desc            
   CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk008) RETURNING g_xmdk_m.xmdk008_desc
   CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk009) RETURNING g_xmdk_m.xmdk009_desc
   CALL s_desc_get_ooib002_desc(g_xmdk_m.xmdk010) RETURNING g_xmdk_m.xmdk010_desc
   CALL s_desc_get_acc_desc('238',g_xmdk_m.xmdk011) RETURNING g_xmdk_m.xmdk011_desc
   CALL s_desc_get_tax_desc1(g_site,g_xmdk_m.xmdk012) RETURNING g_xmdk_m.xmdk012_desc
           
   CALL s_desc_get_invoice_type_desc1(g_site,g_xmdk_m.xmdk015) RETURNING g_xmdk_m.xmdk015_desc
   CALL s_desc_get_currency_desc(g_xmdk_m.xmdk016) RETURNING g_xmdk_m.xmdk016_desc
   
   CALL axmt540_xmdk018_ref()
   CALL s_desc_ooid001_desc(g_xmdk_m.xmdk019) RETURNING g_xmdk_m.xmdk019_desc
   CALL s_desc_get_trading_partner_full_desc(g_xmdk_m.xmdk020) RETURNING g_xmdk_m.xmdk020_desc
   CALL axmt540_xmdk021_ref()
   CALL s_desc_get_acc_desc('263',g_xmdk_m.xmdk022) RETURNING g_xmdk_m.xmdk022_desc
   CALL axmt540_location_ref(g_xmdk_m.xmdk022,g_xmdk_m.xmdk023) RETURNING g_xmdk_m.xmdk023_desc
   CALL axmt540_location_ref(g_xmdk_m.xmdk022,g_xmdk_m.xmdk024) RETURNING g_xmdk_m.xmdk024_desc
            
   #160621-00003#3 20160629 modify by beckxie---S
   #CALL s_desc_get_acc_desc('275',g_xmdk_m.xmdk030) RETURNING g_xmdk_m.xmdk030_desc
   CALL s_desc_get_oojdl003_desc(g_xmdk_m.xmdk030) RETURNING g_xmdk_m.xmdk030_desc
   #160621-00003#3 20160629 modify by beckxie---E
   CALL s_desc_get_acc_desc('295',g_xmdk_m.xmdk031) RETURNING g_xmdk_m.xmdk031_desc
            
   CALL s_desc_get_acc_desc('209',g_xmdk_m.xmdk033) RETURNING g_xmdk_m.xmdk033_desc
               
   CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk202) RETURNING g_xmdk_m.xmdk202_desc
   
   CALL axmt540_xmdk027_ref(g_xmdk_m.xmdk007,g_xmdk_m.xmdk027) RETURNING  g_xmdk_m.xmdk027_desc 
   
   LET g_xmdk_m_o.* = g_xmdk_m.*
   DISPLAY BY NAME g_xmdk_m.*
   
END FUNCTION

PRIVATE FUNCTION axmt540_set_required(p_cmd)
DEFINE p_cmd   LIKE type_t.chr1  
   #add--161101-00091#1 By shiun--(S)
   IF g_xmdk_m.xmdk042 = '2' THEN
      CALL cl_set_comp_required("xmdk032",TRUE)
   END IF
   #add--161101-00091#1 By shiun--(E)
   IF g_xmdk_m.xmdk045 = '2' THEN  #2:銷售多角
      
      CALL cl_set_comp_required("xmdk044",TRUE)
   END IF
END FUNCTION

PRIVATE FUNCTION axmt540_set_no_required(p_cmd)
DEFINE p_cmd   LIKE type_t.chr1  

   CALL cl_set_comp_required("xmdk044,xmdk032",FALSE)   #mod--161101-00091#1 By shiun   增加xmdk032
END FUNCTION
################################################################################
# Descriptions...: 串查單號
# Memo...........:
# Usage..........: CALL axmt540_qrystr(p_docno)
# Input parameter: p_docno   查詢單號
# Date & Author..: 2015/05/05 By Shiun
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_qrystr(p_docno)
   DEFINE p_docno LIKE xmdk_t.xmdkdocno
   DEFINE l_slip     LIKE oobal_t.oobal002
   DEFINE l_prog     LIKE oobx_t.oobx004
   DEFINE l_success  LIKE type_t.num5
   DEFINE ls_js      STRING
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   #抓取單據別
   LET l_slip = ''
   LET l_prog = ''
   IF NOT cl_null(p_docno) THEN
      CALL s_aooi200_get_slip(p_docno) RETURNING l_success,l_slip
      IF NOT cl_null(l_slip) THEN
         #抓取程式名稱
         SELECT oobx004 INTO l_prog
           FROM oobx_t
          WHERE oobxent = g_enterprise
            AND oobx001 = l_slip
      END IF
      IF NOT cl_null(l_prog) THEN
         INITIALIZE la_param.* TO NULL
         LET la_param.prog     = l_prog
        #LET la_param.param[1] = p_docno     #160831-00033#1 mark
         LET la_param.param[2] = p_docno     #160831-00033#1
         LET ls_js = util.JSON.stringify(la_param)
         CALL cl_cmdrun_wait(ls_js)
      END IF
   END IF
END FUNCTION

################################################################################
# Descriptions...: 中斷續拋否
# Memo...........:
# Usage..........: CALL axmt540_break_continue(p_xmdk044)
#                  RETURNING r_success
# Input parameter: p_xmdk044  多角流程代碼
#                : 
# Return code....: r_success  執行結果
#                : 
# Date & Author..: 150603 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_break_continue(p_xmdk044)
   DEFINE p_xmdk044   LIKE xmdk_t.xmdk044
   DEFINE r_success   LIKE type_t.num5
   DEFINE l_sel       RECORD
      icaa004            LIKE icaa_t.icaa004,
      icaa005            LIKE icaa_t.icaa005,
      icab003            LIKE icab_t.icab003
                      END RECORD
   LET r_success = FALSE
   
   IF NOT cl_null(p_xmdk044) THEN
      INITIALIZE l_sel.* TO NULL
      SELECT icaa004,icaa005,
             icab003
        INTO l_sel.icaa004,l_sel.icaa005,
             l_sel.icab003
        FROM icaa_t LEFT OUTER JOIN icab_t ON icabent = icaaent AND icab001 = icaa001 AND icab002 = 0
       WHERE icaaent = g_enterprise
         AND icaa001 = p_xmdk044
   
      IF l_sel.icaa004 = '2' AND
         l_sel.icaa005 = 'Y' AND
         l_sel.icab003 = g_site THEN
         
         LET r_success = TRUE
         RETURN r_success
      END IF
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 多角序號檢查
# Memo...........:
# Usage..........: CALL axmt540_source_xmdk035_chk(p_type,p_source,p_xmdk035)
#                  RETURNING r_success
# Input parameter: p_type     #1.出通單 2.訂單
#                : p_source   #來源單號
#                : p_xmdk035  #多角流程序號
# Return code....: r_success  #執行結果
#                : 
# Date & Author..: 150603 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_source_xmdk035_chk(p_type,p_source,p_xmdk035)
   DEFINE p_type        LIKE type_t.chr1     #1.出通單 2.訂單
   DEFINE p_source      LIKE xmdk_t.xmdk005  #來源單號
   DEFINE p_xmdk035     LIKE xmdk_t.xmdk035
   
   DEFINE r_success     LIKE type_t.num5
   DEFINE l_cnt         LIKE type_t.num5
   
   LET r_success = TRUE
   
   IF NOT cl_null(p_xmdk035) THEN
      #檢查初始站是否重複
      LET l_cnt = 0
      SELECT COUNT(xmdkdocno) INTO l_cnt
        FROM xmdk_t
       WHERE xmdkent = g_enterprise
         AND xmdk000 = '1'
         AND xmdk035 = p_xmdk035
         AND xmdkdocno <> g_xmdk_m.xmdkdocno
         AND xmdkstus <> 'X'
         AND xmdksite = g_site
      
      IF cl_null(l_cnt) THEN
         LET l_cnt = 0
      END IF
      
      IF l_cnt > 0 THEN 
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'axm-00652'   #該"多角流程序號"已存在初始站之"出貨單"，不可重複輸入！
         LET g_errparam.extend = p_xmdk035
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET r_success = FALSE
         RETURN r_success
      END IF
      
      #檢查是否有已拋轉之逆拋出貨單
      LET l_cnt = 0
      SELECT COUNT(xmdkdocno) INTO l_cnt
        FROM xmdk_t
       WHERE xmdkent = g_enterprise
         AND xmdk000 = '1'
         AND xmdk035 = p_xmdk035
         AND xmdkstus <> 'X'
         AND xmdk083 = 'Y'
         AND xmdksite = (SELECT icab003 FROM icab_t
                          WHERE icabent = g_enterprise
                            AND icab001 = xmdk044
                            AND icab002 = (SELECT MAX(icab002) FROM icab_t
                                            WHERE icabent = g_enterprise
                                              AND icab001 = xmdk044)
                        )

      IF cl_null(l_cnt) THEN
         LET l_cnt = 0
      END IF

      IF l_cnt = 0 THEN 
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'axm-00653'   #該"多角流程序號"不存在已拋轉之"出貨單"，不可輸入！
         LET g_errparam.extend = p_xmdk035
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET r_success = FALSE
         RETURN r_success
      END IF
      
      IF NOT cl_null(p_type) AND NOT cl_null(p_source) THEN
         #檢查是否有已拋轉之出貨單，且對應相對來源單號
         LET l_cnt = 0
         
         CASE p_type
            WHEN '1'  #出通單
               CALL axmt540_sel_xmdk035('1',p_source,p_xmdk035) RETURNING l_cnt,p_xmdk035
               
            WHEN '2'  #訂單
               CALL axmt540_sel_xmdk035('2',p_source,p_xmdk035) RETURNING l_cnt,p_xmdk035

         END CASE
         
         IF cl_null(l_cnt) THEN
            LET l_cnt = 0
         END IF

         IF l_cnt = 0 THEN 
            INITIALIZE g_errparam TO NULL

            LET g_errparam.code = 'axm-00654'   #該"多角流程序號"與"來源單號"不存在對應關係，不可輸入！
            LET g_errparam.extend = p_xmdk035
            LET g_errparam.popup = TRUE
            CALL cl_err()

            LET r_success = FALSE
            RETURN r_success
         END IF
         
      END IF
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 取得多角流程代碼
# Memo...........:
# Usage..........: CALL axmt540_sel_xmdk035(p_type,p_source,p_xmdk035)
#                  RETURNING r_cnt,r_xmdk035
# Input parameter: p_type     1.出通 2.訂單
#                : p_source   來源單號
#                : p_xmdk035  多角流程序號(可Null)
# Return code....: r_cnt      符合之多角序號數量
#                : r_xmdk035  唯一符合之多角流程序號
# Date & Author..: 150603 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_sel_xmdk035(p_type,p_source,p_xmdk035)
   DEFINE p_type    LIKE type_t.chr1    #1.出通  2.訂單
   DEFINE p_source  LIKE xmdk_t.xmdk005 #來源單號
   DEFINE p_xmdk035 LIKE xmdk_t.xmdk035 #多角流程序號(可為Null)
   DEFINE r_cnt     LIKE type_t.num10   #符合之多角流程序號數量
   DEFINE r_xmdk035 LIKE xmdk_t.xmdk035 #多角流程序號

   DEFINE l_sql         STRING
   DEFINE l_sql_count   STRING
   DEFINE l_sql_sel     STRING
   DEFINE l_sql_from    STRING
   DEFINE l_sql_where_1 STRING
   DEFINE l_sql_where_2 STRING

   LET l_sql_count =   "SELECT COUNT( DISTINCT xmdk035)"
   
   LET l_sql_sel =     "SELECT DISTINCT xmdk035"
   
   LET l_sql_from =    "  FROM xmdk_t",
                       " WHERE xmdkent = ",g_enterprise,
                       "   AND xmdk000 = '1'",
                       "   AND xmdkstus <> 'X'",
                       "   AND xmdk083 = 'Y'",
                       #逆拋最終站
                       "   AND xmdksite = (SELECT icab003 FROM icab_t",
                       "                    WHERE icabent = ",g_enterprise,
                       "                      AND icab001 = xmdk044",
                       "                      AND icab002 = (SELECT MAX(icab002) FROM icab_t",
                       "                                      WHERE icabent = ",g_enterprise,
                       "                                        AND icab001 = xmdk044))",
                       #排除已續拋之出貨單
                       "   AND xmdk035 NOT IN (SELECT xmdk035 FROM xmdk_t",
                       "                        WHERE xmdkent = ",g_enterprise,
                       "                          AND xmdk000 = '1'",
                       "                          AND xmdksite = '",g_site,"'",
                       "                          AND xmdkdocno <> '",g_xmdk_m.xmdkdocno,"'",
                       "                          AND xmdkstus <> 'X'",
                       "                          AND xmdk035 IS NOT NULL)"
                       
   IF NOT cl_null(p_xmdk035) THEN
      LET l_sql_from = l_sql_from," AND xmdk035 = '",p_xmdk035,"'"
   END IF
   
   LET l_sql_where_1 = "   AND xmdk005 = (SELECT xmdgdocno FROM xmdg_t",
                       "                   WHERE xmdgent = ",g_enterprise,
                       "                     AND xmdgsite = xmdksite",
                       "                     AND xmdgstus <> 'X'",
                       "                     AND xmdg054 = 'Y'",
                       "                     AND xmdg055 = (SELECT xmdg055 FROM xmdg_t",
                       "                                     WHERE xmdgent = ",g_enterprise,
                       "                                       AND xmdgdocno = '",p_source,"'",
                       "                                   )",
                       "                 )"
                       
   LET l_sql_where_2 = "   AND xmdk006 = (SELECT xmdadocno FROM xmda_t",
                       "                   WHERE xmdaent = ",g_enterprise,
                       "                     AND xmdasite = xmdksite",
                       "                     AND xmdastus <> 'X'",
                       "                     AND xmda030 = 'Y'",
                       "                     AND xmda031 = (SELECT xmda031 FROM xmda_t",
                       "                                     WHERE xmdaent = ",g_enterprise,
                       "                                       AND xmdadocno = '",p_source,"'",
                       "                                   )",
                       "                 )"

   LET r_cnt = 0
   LET r_xmdk035 = p_xmdk035

   IF NOT cl_null(p_type) AND NOT cl_null(p_source) THEN
   
      CASE p_type
         WHEN '1'  #出通單
            LET l_sql = l_sql_count,l_sql_from,l_sql_where_1
            
         WHEN '2'  #訂單
            LET l_sql = l_sql_count,l_sql_from,l_sql_where_2
         
      END CASE
      
      PREPARE axmt540_aic_pre FROM l_sql
      EXECUTE axmt540_aic_pre INTO r_cnt
      
      IF cl_null(r_cnt) THEN
         LET r_cnt = 0
      END IF
      
      #若只有唯一一筆，SELECT
      IF r_cnt = 1 AND cl_null(p_xmdk035) THEN
         CASE p_type
            WHEN '1'  #出通單
               LET l_sql = l_sql_sel,l_sql_from,l_sql_where_1
            
            WHEN '2'  #訂單
               LET l_sql = l_sql_sel,l_sql_from,l_sql_where_2
         
         END CASE
         
         PREPARE axmt540_aic_sel_pre FROM l_sql
         EXECUTE axmt540_aic_sel_pre INTO r_xmdk035
         
      END IF
   END IF
   
   RETURN r_cnt,r_xmdk035
END FUNCTION

################################################################################
# Descriptions...: 由多角流程代碼將續拋資料帶出
# Memo...........:
# Usage..........: CALL axmt540_default(p_xmdkdocno,p_xmdk006,p_xmdk044,p_xmdk035)
#                  RETURNING r_success
# Input parameter: p_xmdkdocno  #出貨單號
#                : p_xmdk006    #來源訂單單號
#                : p_xmdk044    #多角代碼
#                : p_xmdk035    #多角序號
# Return code....: 
#                : 
# Date & Author..: 150608 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_default(p_xmdkdocno,p_xmdk006,p_xmdk044,p_xmdk035)
   DEFINE p_xmdkdocno LIKE xmdk_t.xmdkdocno #出貨單號
   DEFINE p_xmdk006   LIKE xmdk_t.xmdk006   #訂單單號
   DEFINE p_xmdk044   LIKE xmdk_t.xmdk044   #多角代碼
   DEFINE p_xmdk035   LIKE xmdk_t.xmdk035   #多角流程序號
   
   DEFINE r_success LIKE type_t.num5    #執行結果
   
   DEFINE l_sql       STRING
   DEFINE l_xmdl001   LIKE xmdl_t.xmdl001   #來源出通單號
   DEFINE l_xmdl003   LIKE xmdl_t.xmdl003   #來源訂單單號
   DEFINE l_xmdk016   LIKE xmdk_t.xmdk016   #幣別
   DEFINE l_xmdk017   LIKE xmdk_t.xmdk017   #匯率
   
   DEFINE l_xrcd    RECORD
              xrcd103      LIKE xrcd_t.xrcd103,
              xrcd104      LIKE xrcd_t.xrcd104,
              xrcd105      LIKE xrcd_t.xrcd105,
              xrcd113      LIKE xrcd_t.xrcd113,
              xrcd114      LIKE xrcd_t.xrcd114,
              xrcd115      LIKE xrcd_t.xrcd115
                    END RECORD
   
   DEFINE l_xmdk    RECORD
              xmdk001      LIKE xmdk_t.xmdk001,
              xmdk003      LIKE xmdk_t.xmdk003,
              xmdk004      LIKE xmdk_t.xmdk004,
              xmdk026      LIKE xmdk_t.xmdk026,
              xmdk028      LIKE xmdk_t.xmdk028,
              xmdk029      LIKE xmdk_t.xmdk029,
              xmdk032      LIKE xmdk_t.xmdk032,
              xmdk083      LIKE xmdk_t.xmdk083
                    END RECORD
   
   DEFINE l_xmdl    RECORD
              xmdlsite     LIKE xmdl_t.xmdlsite,
              xmdldocno    LIKE xmdl_t.xmdldocno,
              xmdlseq      LIKE xmdl_t.xmdlseq,
              xmdl001      LIKE xmdl_t.xmdl001,
              xmdl002      LIKE xmdl_t.xmdl002,
              xmdl003      LIKE xmdl_t.xmdl003,
              xmdl004      LIKE xmdl_t.xmdl004,
              xmdl005      LIKE xmdl_t.xmdl005,
              xmdl006      LIKE xmdl_t.xmdl006,
              xmdl007      LIKE xmdl_t.xmdl007,
              xmdl008      LIKE xmdl_t.xmdl008,
              xmdl009      LIKE xmdl_t.xmdl009,
              xmdl010      LIKE xmdl_t.xmdl010,
              xmdl011      LIKE xmdl_t.xmdl011,
              xmdl012      LIKE xmdl_t.xmdl012,
              xmdl013      LIKE xmdl_t.xmdl013,
              xmdl014      LIKE xmdl_t.xmdl014,
              xmdl015      LIKE xmdl_t.xmdl015,
              xmdl016      LIKE xmdl_t.xmdl016,
              xmdl017      LIKE xmdl_t.xmdl017,
              xmdl018      LIKE xmdl_t.xmdl018,
              xmdl019      LIKE xmdl_t.xmdl019,
              xmdl020      LIKE xmdl_t.xmdl020,
              xmdl021      LIKE xmdl_t.xmdl021,
              xmdl022      LIKE xmdl_t.xmdl022,
              xmdl023      LIKE xmdl_t.xmdl023,
              xmdl024      LIKE xmdl_t.xmdl024,
              xmdl025      LIKE xmdl_t.xmdl025,
              xmdl026      LIKE xmdl_t.xmdl026,
              xmdl027      LIKE xmdl_t.xmdl027,
              xmdl028      LIKE xmdl_t.xmdl028,
              xmdl029      LIKE xmdl_t.xmdl029,
              xmdl030      LIKE xmdl_t.xmdl030,
              xmdl031      LIKE xmdl_t.xmdl031,
              xmdl032      LIKE xmdl_t.xmdl032,
              xmdl033      LIKE xmdl_t.xmdl033,
              xmdl034      LIKE xmdl_t.xmdl034,
              xmdl035      LIKE xmdl_t.xmdl035,
              xmdl036      LIKE xmdl_t.xmdl036,
              xmdl037      LIKE xmdl_t.xmdl037,
              xmdl038      LIKE xmdl_t.xmdl038,
              xmdl039      LIKE xmdl_t.xmdl039,
              xmdl040      LIKE xmdl_t.xmdl040,
              xmdl041      LIKE xmdl_t.xmdl041,
              xmdl042      LIKE xmdl_t.xmdl042,
              xmdl043      LIKE xmdl_t.xmdl043,
              xmdl044      LIKE xmdl_t.xmdl044,
              xmdl045      LIKE xmdl_t.xmdl045,
              xmdl046      LIKE xmdl_t.xmdl046,
              xmdl047      LIKE xmdl_t.xmdl047,
              xmdl048      LIKE xmdl_t.xmdl048,
              xmdl049      LIKE xmdl_t.xmdl049,
              xmdl050      LIKE xmdl_t.xmdl050,
              xmdl051      LIKE xmdl_t.xmdl051,
              xmdl052      LIKE xmdl_t.xmdl052,
              xmdl053      LIKE xmdl_t.xmdl053,
              xmdl054      LIKE xmdl_t.xmdl054,
              xmdl055      LIKE xmdl_t.xmdl055,
              xmdl056      LIKE xmdl_t.xmdl056,
              xmdl081      LIKE xmdl_t.xmdl081,
              xmdl082      LIKE xmdl_t.xmdl082,
              xmdl083      LIKE xmdl_t.xmdl083,
              xmdl084      LIKE xmdl_t.xmdl084,
              xmdl085      LIKE xmdl_t.xmdl085,
              xmdl086      LIKE xmdl_t.xmdl086,
              xmdl087      LIKE xmdl_t.xmdl087,
              xmdl088      LIKE xmdl_t.xmdl088
                    END RECORD
   
   DEFINE l_xmdm    RECORD
              xmdmsite     LIKE xmdm_t.xmdmsite,
              xmdmdocno    LIKE xmdm_t.xmdmdocno,
              xmdmseq      LIKE xmdm_t.xmdmseq,
              xmdmseq1     LIKE xmdm_t.xmdmseq1,
              xmdm001      LIKE xmdm_t.xmdm001,
              xmdm002      LIKE xmdm_t.xmdm002,
              xmdm003      LIKE xmdm_t.xmdm003,
              xmdm004      LIKE xmdm_t.xmdm004,
              xmdm005      LIKE xmdm_t.xmdm005,
              xmdm006      LIKE xmdm_t.xmdm006,
              xmdm007      LIKE xmdm_t.xmdm007,
              xmdm008      LIKE xmdm_t.xmdm008,
              xmdm009      LIKE xmdm_t.xmdm009,
              xmdm010      LIKE xmdm_t.xmdm010,
              xmdm011      LIKE xmdm_t.xmdm011,
              xmdm012      LIKE xmdm_t.xmdm012,
              xmdm013      LIKE xmdm_t.xmdm013,
              xmdm014      LIKE xmdm_t.xmdm014,
              xmdm031      LIKE xmdm_t.xmdm031,
              xmdm032      LIKE xmdm_t.xmdm032,
              xmdm033      LIKE xmdm_t.xmdm033
                    END RECORD

   #逆拋最終站之出貨單
   LET l_sql = "SELECT xmdl001,xmdl003,",
               "       xmdlseq,",
               "       xmdl002,xmdl004,xmdl005,xmdl006,",
               "       xmdl007,xmdl008,xmdl009,xmdl010,",
               "       xmdl011,xmdl012,xmdl013,xmdl014,xmdl015,",
               "       xmdl016,xmdl017,xmdl018,xmdl019,xmdl020,",
               "       xmdl021,xmdl022,",
               "       xmdl087",
               "  FROM xmdk_t,xmdl_t",
               " WHERE xmdkent = xmdlent AND xmdlent = ",g_enterprise,
               "   AND xmdkdocno = xmdldocno",
               "   AND xmdkstus = 'S'",
               "   AND xmdk035 = '",p_xmdk035,"'",
               "   AND xmdksite = (SELECT icab003 FROM icab_t",
               "                    WHERE icabent = ",g_enterprise,
               "                      AND icab001 = '",p_xmdk044,"'",
               "                      AND icab002 = (SELECT MAX(icab002) FROM icab_t",
               "                                      WHERE icabent = ",g_enterprise,
               "                                        AND icab001 = '",p_xmdk044,"'))"
   PREPARE axmt540_xmdl_default_pre FROM l_sql
   DECLARE axmt540_xmdl_default_cur CURSOR FOR axmt540_xmdl_default_pre
   
   LET l_sql = "SELECT xmdmseq1,",
               "       xmdm001,xmdm002,xmdm003,xmdm004,xmdm005,",
               "       xmdm006,xmdm007,xmdm008,xmdm009,xmdm010,",
               "       xmdm011",
               "  FROM xmdk_t,xmdm_t",
               " WHERE xmdkent = xmdment AND xmdment = ",g_enterprise,
               "   AND xmdkdocno = xmdmdocno",
               "   AND xmdkstus = 'S'",
               "   AND xmdk035 = '",p_xmdk035,"'",
               "   AND xmdmseq = ?",
               "   AND xmdksite = (SELECT icab003 FROM icab_t",
               "                    WHERE icabent = ",g_enterprise,
               "                      AND icab001 = '",p_xmdk044,"'",
               "                      AND icab002 = (SELECT MAX(icab002) FROM icab_t",
               "                                      WHERE icabent = ",g_enterprise,
               "                                        AND icab001 = '",p_xmdk044,"'))"
   PREPARE axmt540_xmdm_default_pre FROM l_sql
   DECLARE axmt540_xmdm_default_cur CURSOR FOR axmt540_xmdm_default_pre

   LET l_sql = "SELECT b.xmdgdocno,xmdh001,",
               "       xmdh023,xmdh024,xmdh025,",
               "       xmdh031,xmdh032,xmdh033,xmdh034",
               "  FROM xmdg_t a,xmdg_t b,xmdh_t",
               " WHERE a.xmdgent = b.xmdgent AND b.xmdgent = xmdhent AND xmdhent = ",g_enterprise,
               "   AND b.xmdgdocno = xmdhdocno",
               "   AND a.xmdg055 = b.xmdg055",
               "   AND b.xmdgsite = ?",
               "   AND a.xmdgdocno = ?",
               "   AND xmdhseq = ?"
   PREPARE axmt540_xmdh_pre FROM l_sql


   LET l_sql = "SELECT b.xmdadocno,",
               "       xmdd018,xmdd019,xmdd020,",
               "       xmdc036,xmdc037,xmdc038,xmdc027",
               "  FROM xmda_t a,xmda_t b,xmdc_t,xmdd_t",
               " WHERE a.xmdaent = b.xmdaent AND b.xmdaent = xmdcent AND xmdcent = xmddent AND xmddent = ",g_enterprise,
               "   AND b.xmdadocno = xmdcdocno AND xmdcdocno = xmdddocno",
               "   AND xmdcseq = xmddseq",
               "   AND a.xmda031 = b.xmda031",
               "   AND b.xmdasite = ?",
               "   AND a.xmdadocno = ?",
               "   AND xmddseq = ?",
               "   AND xmddseq1 = ?",
               "   AND xmddseq2 = ?"
   PREPARE axmt540_xmdc_pre FROM l_sql

   LET r_success = TRUE

   IF cl_null(p_xmdkdocno) OR
      cl_null(p_xmdk044) OR
      cl_null(p_xmdk035) THEN
      
      RETURN r_success
   END IF

   INITIALIZE l_xmdk.* TO NULL
   
   #塞xmdk_t
   LET l_xmdk.xmdk001 = g_today  #扣帳日期
   LET l_xmdk.xmdk026 = g_today  #起運日期
   LET l_xmdk.xmdk028 = 'N'      #包裝單製作
   LET l_xmdk.xmdk029 = 'N'      #Invoice製作
   LET l_xmdk.xmdk032 = g_today  #結關日期
   LET l_xmdk.xmdk083 = 'N'      #多角貿易已拋轉
       
   SELECT xmda002,xmda003
     INTO l_xmdk.xmdk003,l_xmdk.xmdk004
     FROM xmda_t
    WHERE xmdaent = g_enterprise
      AND xmdadocno = p_xmdk006

   UPDATE xmdk_t
      SET xmdk001 = l_xmdk.xmdk001,
          xmdk003 = l_xmdk.xmdk003,
          xmdk004 = l_xmdk.xmdk004,
          xmdk026 = l_xmdk.xmdk026,
          xmdk028 = l_xmdk.xmdk028,
          xmdk029 = l_xmdk.xmdk029,
          xmdk032 = l_xmdk.xmdk032,
          xmdk083 = l_xmdk.xmdk083
    WHERE xmdkent = g_enterprise
      AND xmdkdocno = p_xmdkdocno

   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = "UPDATE:xmdk_t"
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      
      LET r_success = FALSE
      RETURN r_success
   END IF

   #SELECT icaa_t,icab_t,icac_t,icad_t,icae_t
   CALL s_aic_carry_get_ica(p_xmdk044,0)

   #先清空單身
   DELETE FROM xmdl_t
    WHERE xmdlent = g_enterprise
      AND xmdldocno = p_xmdkdocno

   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = "DELETE:xmdl_t"
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      
      LET r_success = FALSE
      RETURN r_success
   END IF

   DELETE FROM xmdm_t
    WHERE xmdment = g_enterprise
      AND xmdmdocno = p_xmdkdocno

   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = "DELETE:xmdm_t"
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      
      LET r_success = FALSE
      RETURN r_success
   END IF

   #刪除稅額xrcd
   IF NOT s_axmt540_tax_delete(p_xmdkdocno,'','1') THEN
      LET r_success = FALSE
      RETURN r_success   
   END IF
   
   #INSERT單身
   
   #塞l_xmdl.*
   LET l_xmdl001 = ''
   LET l_xmdl003 = ''
   INITIALIZE l_xmdl.* TO NULL
   
   #SELECT單頭資料
   LET l_xmdk016 = ''
   LET l_xmdk017 = ''
   SELECT xmdksite,
          xmdk016,xmdk017
     INTO l_xmdl.xmdlsite,
          l_xmdk016,l_xmdk017
     FROM xmdk_t
    WHERE xmdkent = g_enterprise
      AND xmdkdocno = p_xmdkdocno
   
   LET l_xmdl.xmdldocno = p_xmdkdocno
   
   FOREACH axmt540_xmdl_default_cur INTO l_xmdl001,l_xmdl003,
                                         l_xmdl.xmdlseq,
                                         l_xmdl.xmdl002,l_xmdl.xmdl004,l_xmdl.xmdl005,l_xmdl.xmdl006,
                                         l_xmdl.xmdl007,l_xmdl.xmdl008,l_xmdl.xmdl009,l_xmdl.xmdl010,
                                         l_xmdl.xmdl011,l_xmdl.xmdl012,l_xmdl.xmdl013,l_xmdl.xmdl014,l_xmdl.xmdl015,
                                         l_xmdl.xmdl016,l_xmdl.xmdl017,l_xmdl.xmdl018,l_xmdl.xmdl019,l_xmdl.xmdl020,
                                         l_xmdl.xmdl021,l_xmdl.xmdl022,
                                         l_xmdl.xmdl087

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = "axmt540_xmdl_default_cur"
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.popup  = TRUE
         CALL cl_err()
       
         LET r_success = FALSE
         EXIT FOREACH
      END IF

      LET l_xmdl.xmdl023 = 'N'            #檢驗否
      LET l_xmdl.xmdl056 = l_xmdl.xmdl018 #檢驗合格量
      
      LET l_xmdl.xmdl035 = 0    #已簽收數量
      LET l_xmdl.xmdl036 = 0    #已簽退數量
      LET l_xmdl.xmdl037 = 0    #已銷退數量
      LET l_xmdl.xmdl038 = 0    #主帳套已立帳數量
      LET l_xmdl.xmdl039 = 0    #帳套二已立帳數量
      LET l_xmdl.xmdl040 = 0    #帳套三已立帳數量
      LET l_xmdl.xmdl041 = 'N'  #保稅否
      
      LET l_xmdl.xmdl047 = 0    #已開發票數量
      
      LET l_xmdl.xmdl053 = 0    #主帳套暫估數量
      LET l_xmdl.xmdl054 = 0    #帳套二暫估數量
      LET l_xmdl.xmdl055 = 0    #帳套三暫估數量
      
      LET l_xmdl.xmdl081 = 0
      LET l_xmdl.xmdl082 = 0
      LET l_xmdl.xmdl083 = 0
      
      LET l_xmdl.xmdl088 = p_xmdk044
      
      LET l_xmdl.xmdl052 = ' '  #庫存管理特徵
      
      #庫位、儲位
      IF NOT cl_null(l_xmdl.xmdl014) THEN
         IF cl_null(g_icad.icad004) THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = ""
            LET g_errparam.code   = 'aic-00169'   #流程代碼%1站別%2之庫位為空！
            LET g_errparam.popup  = TRUE
            LET g_errparam.replace[1] = p_xmdk044
            LET g_errparam.replace[2] = 0
               
            CALL cl_err()
            
            LET r_success = FALSE
            EXIT FOREACH            
         ELSE
            LET l_xmdl.xmdl014 = g_icad.icad004     #庫位
               
            IF cl_null(g_icad.icad005) THEN
               LET l_xmdl.xmdl015 = ' '             #儲位
            ELSE
               LET l_xmdl.xmdl015 = g_icad.icad005  #儲位
            END IF
         END IF
      ELSE
         LET l_xmdl.xmdl014 = ' '             #庫位
         LET l_xmdl.xmdl015 = ' '             #儲位
      END IF

      IF NOT cl_null(l_xmdl001) THEN  #來源出通
         EXECUTE axmt540_xmdh_pre USING l_xmdl.xmdlsite,l_xmdl001,l_xmdl.xmdl002
         INTO l_xmdl.xmdl001,l_xmdl.xmdl003,
              l_xmdl.xmdl024,l_xmdl.xmdl025,l_xmdl.xmdl026,
              l_xmdl.xmdl030,l_xmdl.xmdl031,l_xmdl.xmdl032,l_xmdl.xmdl033
         
      ELSE  #來源訂單
         EXECUTE axmt540_xmdc_pre USING l_xmdl.xmdlsite,l_xmdl003,l_xmdl.xmdl004,l_xmdl.xmdl005,l_xmdl.xmdl006
         INTO l_xmdl.xmdl003,
              l_xmdl.xmdl024,l_xmdl.xmdl025,l_xmdl.xmdl026,
              l_xmdl.xmdl030,l_xmdl.xmdl031,l_xmdl.xmdl032,l_xmdl.xmdl033
      END IF

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = "EXECUTE:s_aic_carry_xmdc_pre"
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.popup  = TRUE
         CALL cl_err()
     
         LET r_success = FALSE
         EXIT FOREACH
      END IF

      #稅額計算                     
      CALL s_axmt540_tax_count('',l_xmdl.xmdldocno,l_xmdl.xmdlseq,l_xmdl.xmdlsite,l_xmdl.xmdl025,
                               l_xmdl.xmdl022,l_xmdl.xmdl024,l_xmdk016,l_xmdk017,
                               l_xmdl.xmdl003,l_xmdl.xmdl004,l_xmdl.xmdl018)
      RETURNING l_xmdl.xmdl027,l_xmdl.xmdl028,l_xmdl.xmdl029
       
      INSERT INTO xmdl_t(xmdlent,xmdlsite,xmdldocno,xmdlseq,
                         xmdl001,xmdl002,xmdl003,xmdl004,xmdl005,
                         xmdl006,xmdl007,xmdl008,xmdl009,xmdl010,
                         xmdl011,xmdl012,xmdl013,xmdl014,xmdl015,
                         xmdl016,xmdl017,xmdl018,xmdl019,xmdl020,
                         xmdl021,xmdl022,xmdl023,xmdl024,xmdl025,
                         xmdl026,xmdl027,xmdl028,xmdl029,xmdl030,
                         xmdl031,xmdl032,xmdl033,xmdl034,xmdl035,
                         xmdl036,xmdl037,xmdl038,xmdl039,xmdl040,
                         xmdl041,xmdl042,xmdl043,xmdl044,xmdl045,
                         xmdl046,xmdl047,xmdl048,xmdl049,xmdl050,
                         xmdl051,xmdl052,xmdl053,xmdl054,xmdl055,
                         xmdl081,xmdl082,xmdl083,xmdl084,xmdl085,
                         xmdl086,xmdl087,xmdl088)
      VALUES (g_enterprise,l_xmdl.xmdlsite,l_xmdl.xmdldocno,l_xmdl.xmdlseq,
              l_xmdl.xmdl001,l_xmdl.xmdl002,l_xmdl.xmdl003,l_xmdl.xmdl004,l_xmdl.xmdl005,
              l_xmdl.xmdl006,l_xmdl.xmdl007,l_xmdl.xmdl008,l_xmdl.xmdl009,l_xmdl.xmdl010,
              l_xmdl.xmdl011,l_xmdl.xmdl012,l_xmdl.xmdl013,l_xmdl.xmdl014,l_xmdl.xmdl015,
              l_xmdl.xmdl016,l_xmdl.xmdl017,l_xmdl.xmdl018,l_xmdl.xmdl019,l_xmdl.xmdl020,
              l_xmdl.xmdl021,l_xmdl.xmdl022,l_xmdl.xmdl023,l_xmdl.xmdl024,l_xmdl.xmdl025,
              l_xmdl.xmdl026,l_xmdl.xmdl027,l_xmdl.xmdl028,l_xmdl.xmdl029,l_xmdl.xmdl030,
              l_xmdl.xmdl031,l_xmdl.xmdl032,l_xmdl.xmdl033,l_xmdl.xmdl034,l_xmdl.xmdl035,
              l_xmdl.xmdl036,l_xmdl.xmdl037,l_xmdl.xmdl038,l_xmdl.xmdl039,l_xmdl.xmdl040,
              l_xmdl.xmdl041,l_xmdl.xmdl042,l_xmdl.xmdl043,l_xmdl.xmdl044,l_xmdl.xmdl045,
              l_xmdl.xmdl046,l_xmdl.xmdl047,l_xmdl.xmdl048,l_xmdl.xmdl049,l_xmdl.xmdl050,
              l_xmdl.xmdl051,l_xmdl.xmdl052,l_xmdl.xmdl053,l_xmdl.xmdl054,l_xmdl.xmdl055,
              l_xmdl.xmdl081,l_xmdl.xmdl082,l_xmdl.xmdl083,l_xmdl.xmdl084,l_xmdl.xmdl085,
              l_xmdl.xmdl086,l_xmdl.xmdl087,l_xmdl.xmdl088)
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = "INSERT:xmdl_t"
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.popup  = TRUE
         CALL cl_err()
       
         LET r_success = FALSE
         EXIT FOREACH
      END IF
   
      #多庫儲批      
      INITIALIZE l_xmdm.* TO NULL
      OPEN axmt540_xmdm_default_cur USING l_xmdl.xmdlseq
      FOREACH axmt540_xmdm_default_cur INTO l_xmdm.xmdmseq1,
                                            l_xmdm.xmdm001,l_xmdm.xmdm002,l_xmdm.xmdm003,l_xmdm.xmdm004,l_xmdm.xmdm005,
                                            l_xmdm.xmdm006,l_xmdm.xmdm007,l_xmdm.xmdm008,l_xmdm.xmdm009,l_xmdm.xmdm010,
                                            l_xmdm.xmdm011
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = "FOREACH:s_aic_carry_pmdu_cs"
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            
            LET r_success = FALSE
            EXIT FOREACH
         END IF
          
         LET l_xmdm.xmdmsite = l_xmdl.xmdlsite
         LET l_xmdm.xmdmdocno = l_xmdl.xmdldocno
         LET l_xmdm.xmdmseq = l_xmdl.xmdlseq
         
         LET l_xmdm.xmdm012 = 0                 #已簽收數量
         LET l_xmdm.xmdm013 = 0                 #已簽退數量
         LET l_xmdm.xmdm014 = 0                 #已銷退數量
         LET l_xmdm.xmdm031 = 0                 #簽退數量
         LET l_xmdm.xmdm032 = 0                 #簽退參考數量
          
         LET l_xmdm.xmdm033 = ' '              #庫存管理特徵
         
         #庫位、儲位
         IF NOT cl_null(l_xmdm.xmdm005) THEN
            IF cl_null(g_icad.icad004) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.extend = ""
               LET g_errparam.code   = 'aic-00169'   #流程代碼%1站別%2之庫位為空！
               LET g_errparam.popup  = TRUE
               LET g_errparam.replace[1] = p_xmdk044
               LET g_errparam.replace[2] = 0
               
               CALL cl_err()
            
               LET r_success = FALSE
               EXIT FOREACH            
            ELSE
               LET l_xmdm.xmdm005 = g_icad.icad004     #庫位
               
               IF cl_null(g_icad.icad005) THEN
                  LET l_xmdm.xmdm006 = ' '             #儲位
               ELSE
                  LET l_xmdm.xmdm006 = g_icad.icad005  #儲位
               END IF
            END IF
         ELSE
            LET l_xmdm.xmdm005 = ' '             #庫位
            LET l_xmdm.xmdm006 = ' '             #儲位
         END IF
          
         INSERT INTO xmdm_t(xmdment,xmdmsite,xmdmdocno,xmdmseq,xmdmseq1,
                            xmdm001,xmdm002,xmdm003,xmdm004,xmdm005,
                            xmdm006,xmdm007,xmdm008,xmdm009,xmdm010,
                            xmdm011,xmdm012,xmdm013,xmdm014,
                            xmdm031,xmdm032,xmdm033)
           VALUES (g_enterprise,l_xmdm.xmdmsite,l_xmdm.xmdmdocno,l_xmdm.xmdmseq,l_xmdm.xmdmseq1,
                   l_xmdm.xmdm001,l_xmdm.xmdm002,l_xmdm.xmdm003,l_xmdm.xmdm004,l_xmdm.xmdm005,
                   l_xmdm.xmdm006,l_xmdm.xmdm007,l_xmdm.xmdm008,l_xmdm.xmdm009,l_xmdm.xmdm010,
                   l_xmdm.xmdm011,l_xmdm.xmdm012,l_xmdm.xmdm013,l_xmdm.xmdm014,
                   l_xmdm.xmdm031,l_xmdm.xmdm032,l_xmdm.xmdm033)
          
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = "INSERT:xmdm_t"
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.popup  = TRUE
            CALL cl_err()         
         
            LET r_success = FALSE
            EXIT FOREACH
         END IF
      END FOREACH
         
      IF NOT r_success THEN
         EXIT FOREACH
      END IF
         
   END FOREACH

   IF NOT r_success THEN
      RETURN r_success
   ELSE
   
      #重新計算整單的未稅、含稅總金額
      CALL s_tax_recount(p_xmdkdocno) RETURNING l_xrcd.xrcd103,l_xrcd.xrcd104,l_xrcd.xrcd105,
                                                l_xrcd.xrcd113,l_xrcd.xrcd114,l_xrcd.xrcd115
   
      UPDATE xmdk_t SET xmdk051 = l_xrcd.xrcd103,
                        xmdk052 = l_xrcd.xrcd105,
                        xmdk053 = l_xrcd.xrcd104
       WHERE xmdkent = g_enterprise
         AND xmdkdocno = p_xmdkdocno
   
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = "UPDATE:xmdk_t"
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.popup  = TRUE
         CALL cl_err()
   
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF

   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 麥頭編號檢查
# Memo...........:
# Usage..........: CALL axmt540_xmdk009_xmdk027_chk(p_xmdk009,p_xmdk027)
#                  RETURNING r_success
# Input parameter: #p_xmdk007   #客戶編號
#                : p_xmdk009   #收貨客戶
#                : p_xmdk027   #麥頭編號
# Return code....: r_success
#                : 
# Date & Author..: 150609 By earl
# Modify.........: 160126 By dorislai xmdk007改成xmdk009(收貨客戶)
################################################################################
PRIVATE FUNCTION axmt540_xmdk009_xmdk027_chk(p_xmdk009,p_xmdk027)
#   DEFINE p_xmdk007    LIKE xmdk_t.xmdk007  #160119-00015#1-mod-(S)
   DEFINE p_xmdk009    LIKE xmdk_t.xmdk009   #160119-00015#1-mod-(E)
   DEFINE p_xmdk027    LIKE xmdk_t.xmdk027
   DEFINE r_success    LIKE type_t.num5
   
   LET r_success = TRUE
   #160119-00015#1-mod-(S) 將xmdk007(客戶編號) 改成xmdk009(收貨客戶)
#   IF NOT cl_null(p_xmdk007) AND NOT cl_null(p_xmdk027) THEN
#      INITIALIZE g_chkparam.* TO NULL               
#      LET g_chkparam.arg1 = p_xmdk007
#      LET g_chkparam.arg2 = p_xmdk027
#      
#      IF NOT cl_chk_exist("v_xmao002") THEN
#         LET r_success = FALSE
#         RETURN r_success
#      END IF
#   END IF
   IF NOT cl_null(p_xmdk009) AND NOT cl_null(p_xmdk027) THEN
      INITIALIZE g_chkparam.* TO NULL               
      LET g_chkparam.arg1 = p_xmdk009
      LET g_chkparam.arg2 = p_xmdk027
      
      IF NOT cl_chk_exist("v_xmao002") THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF
   #160119-00015#1-mod-(E)
   
   RETURN r_success
END FUNCTION

#麥頭顯示
PRIVATE FUNCTION axmt540_xmdk027_ref(p_xmdk007,p_xmdk027)
   DEFINE p_xmdk007    LIKE xmdk_t.xmdk007
   DEFINE p_xmdk027    LIKE xmdk_t.xmdk027
   DEFINE r_xmaol004   LIKE xmaol_t.xmaol004
 
   LET r_xmaol004 = ''
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_xmdk007
   LET g_ref_fields[2] = p_xmdk027
   CALL ap_ref_array2(g_ref_fields,"SELECT xmaol004 FROM xmaol_t WHERE xmaolent='"||g_enterprise||"' AND xmaol001=? AND xmaol002=? AND xmaol003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET r_xmaol004 = '', g_rtn_fields[1] , ''
   
   RETURN r_xmaol004
END FUNCTION

################################################################################
# Descriptions...: 多角代碼檢查
# Memo...........:
# Usage..........: CALL axmt540_xmdk044_chk(p_xmdk044,p_xmdk002)
#                  RETURNING r_success
# Input parameter: p_xmdk044  多角流程代碼
#                : p_xmdk002  出貨性質
# Return code....: r_success
#                : 
# Date & Author..: 150818 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_xmdk044_chk(p_xmdk044,p_xmdk002)
   DEFINE p_xmdk044     LIKE xmdk_t.xmdk044
   DEFINE p_xmdk002     LIKE xmdk_t.xmdk002
   DEFINE r_success     LIKE type_t.num5
   
   LET r_success = TRUE
   
   IF NOT cl_null(p_xmdk044) THEN
      INITIALIZE g_chkparam.* TO NULL
      #160318-00025#15 by 07900 --add-str 
      LET g_errshow = TRUE #是否開窗
     #160318-00025#15 by 07900 --add-end
      #設定g_chkparam.*的參數
      LET g_chkparam.arg1 = p_xmdk044
      LET g_chkparam.arg2 = g_site
      LET g_chkparam.arg3 = p_xmdk002
      #160318-00025#15 by 07900 --add-str 
      LET g_chkparam.err_str[1] ="aic-00012:sub-01302|aici100|",cl_get_progname("aici100",g_lang,"2"),"|:EXEPROGaici100"
     #160318-00025#15 by 07900 --add-end
      #呼叫檢查存在並帶值的library
      IF NOT cl_chk_exist("v_icaa001_3") THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 從單據別(aooi200)預帶庫位設定
# Memo...........:
# Usage..........: CALL axmt540_xmdl014_default(p_xmdl014,p_xmdl015)
#                  RETURNING r_xmdl014,r_xmdl015
# Input parameter: p_xmdl014  #庫位
#                : p_xmdl015  #儲位
# Return code....: r_xmdl014  #庫位
#                : r_xmdl015  #儲位
# Date & Author..: 20150825 By dorislai
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_xmdl014_default(p_xmdl014,p_xmdl015)
   DEFINE  p_xmdl014  LIKE xmdl_t.xmdl014  #庫位
   DEFINE  p_xmdl015  LIKE xmdl_t.xmdl015  #儲位
   DEFINE  r_xmdl014  LIKE xmdl_t.xmdl014  #庫位   
   DEFINE  r_xmdl015  LIKE xmdl_t.xmdl015  #儲位
   DEFINE  l_success  LIKE type_t.num5     #判斷是否成功
   DEFINE  l_ooba002  LIKE ooba_t.ooba002  #單據編號
   
   LET r_xmdl014 = ''
   LET r_xmdl015 = ''
   
   #預帶預設庫位的值，aooi200抓值優先順序：預設欄位>應用參數
   IF cl_null(p_xmdl014) THEN
      #預設欄位
      CALL s_aooi200_get_slip(g_xmdk_m.xmdkdocno) RETURNING l_success,l_ooba002
      IF l_success THEN
         CALL s_aooi200_get_doc_default(g_site,'1',l_ooba002,'xmdl014',p_xmdl014)
         RETURNING r_xmdl014
         #應用參數
         IF cl_null(r_xmdl014) THEN
            CALL cl_get_doc_para(g_enterprise,g_site,l_ooba002,'D-MFG-0076')
            RETURNING r_xmdl014
         END IF
      END IF
   ELSE
      LET r_xmdl014 = p_xmdl014
      LET r_xmdl015 = p_xmdl015
   END IF

   RETURN r_xmdl014,r_xmdl015

END FUNCTION

################################################################################
# Descriptions...: 制造批序号
# Memo...........:
# Usage..........: CALL axmt540_inao()
# Date & Author..: 2015/09/01 By xianghui
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_inao()
DEFINE l_success   LIKE type_t.num5

   IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) AND NOT cl_null(g_xmdl_d[l_ac].xmdl018) AND NOT cl_null(g_xmdl_d[l_ac].xmdl014) THEN 
      #若料件設置要做製造批序號管理時，新增時維護完數量時自動開啟批序號維護作業維護相關資料
      #160603-00026#1 20160615 modify by ming -----(S) 
      ##IF s_lot_batch_number(g_xmdl_d[l_ac].xmdl008,g_site) THEN     #160314-00008#1 mark
      #IF s_lot_batch_number_1n3(g_xmdl_d[l_ac].xmdl008,g_site) THEN #160314-00008#1 add
      IF s_lot_batch_number(g_xmdl_d[l_ac].xmdl008,g_site) THEN     
      #160603-00026#1 20160615 modify by ming -----(E) 
         IF g_xmdl_d[l_ac].xmdl018 > 0 AND g_xmdl_d[l_ac].xmdl013 = 'N' THEN
            IF cl_get_para(g_enterprise,g_site,'S-BAS-0048') = 'N' OR g_xmdl_d[l_ac].xmdl001 IS NULL THEN      
               CALL s_lot_sel('1','2',g_site,g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,'1',g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,g_xmdl_d[l_ac].xmdl052,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,'-1',g_prog,'','','','','0')
                    RETURNING l_success 
            ELSE
               CALL s_axmt540_inao_copy(g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,'2',g_xmdl_d[l_ac].xmdl052,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,'1','1',g_xmdl_d[l_ac].xmdl013,'1') RETURNING l_success
            
               CALL s_lot_sel('2','2',g_site,g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,'1',g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,g_xmdl_d[l_ac].xmdl052,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,'-1',g_prog,'','','','','0')
                    RETURNING l_success
             
               IF l_success THEN     
                  CALL s_axmt540_update_inao(g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,'1',g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,'1','1') RETURNING l_success 
               END IF  
               #刪除申請資料                              
               DELETE FROM inao_t 
                WHERE inaoent = g_enterprise 
                  AND inaosite = g_site
                  AND inaodocno = g_xmdk_m.xmdkdocno
                  AND inaoseq = g_xmdl_d[l_ac].xmdlseq
                  AND inaoseq1 = '1'
                  AND inao000 = '1'
                  AND inao013 = '-1'                
            END IF
         END IF
      END IF 
   END IF
END FUNCTION

################################################################################
# Descriptions...: 抓取匯率基準日
# Memo...........:
# Usage..........: CALL axmt540_get_ratedate()
#                  RETURNING r_date
# Return code....: r_date   匯率基準日
# Date & Author..: 2015/11/18 By shiun
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_get_ratedate()
DEFINE r_date   LIKE xmdk_t.xmdkdocdt   #匯率基準日

   LET r_date = ''
   IF NOT cl_null(g_xmdk_m.xmdk032) THEN
      LET r_date = g_xmdk_m.xmdk032
   ELSE
      LET r_date = g_xmdk_m.xmdkdocdt
   END IF
   
   RETURN r_date
END FUNCTION

################################################################################
# Descriptions...: 過帳後仍可修改部分欄位
# Memo...........:
# Usage..........: CALL axmt540_address_mod()
#                  RETURNING 回传参数
# Input parameter: 
# Return code....: 
# Date & Author..: 2015/11/18 By shiun
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_address_mod()
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE  l_success       LIKE type_t.num5
   DEFINE  l_ooef004       LIKE ooef_t.ooef004
   DEFINE  l_ooac004       LIKE ooac_t.ooac004
   DEFINE  l_inaa007       LIKE inaa_t.inaa007
   DEFINE  l_rate          LIKE inaj_t.inaj014
   DEFINE  l_ooba002       LIKE ooba_t.ooba002
   DEFINE  l_ooba015       LIKE ooba_t.ooba015
   DEFINE  l_site          LIKE ooef_t.ooef001
   DEFINE  l_ooba014       LIKE ooba_t.ooba014
   DEFINE  l_flag1         LIKE type_t.num5
   DEFINE  l_ooac002       LIKE ooac_t.ooac002
   DEFINE  l_imaa005       LIKE imaa_t.imaa005       #特徵類別
   DEFINE  l_inam          DYNAMIC ARRAY OF RECORD   #記錄產品特徵
              inam001      LIKE inam_t.inam001,
              inam002      LIKE inam_t.inam002,
              inam004      LIKE inam_t.inam004
                        END RECORD
   #mod--161109-00085#4-s                     
   #DEFINE l_inbb     RECORD LIKE inbb_t.*                        
   DEFINE l_inbb RECORD  #雜項庫存異動申請明細檔
       inbbent LIKE inbb_t.inbbent, #企業編號
       inbbsite LIKE inbb_t.inbbsite, #營運據點
       inbbdocno LIKE inbb_t.inbbdocno, #單據編號
       inbbseq LIKE inbb_t.inbbseq, #項次
       inbb001 LIKE inbb_t.inbb001, #料件編號
       inbb002 LIKE inbb_t.inbb002, #產品特徵
       inbb003 LIKE inbb_t.inbb003, #庫存管理特徵
       inbb004 LIKE inbb_t.inbb004, #包裝容器編號
       inbb007 LIKE inbb_t.inbb007, #庫位
       inbb008 LIKE inbb_t.inbb008, #限定儲位
       inbb009 LIKE inbb_t.inbb009, #限定批號
       inbb010 LIKE inbb_t.inbb010, #交易單位
       inbb011 LIKE inbb_t.inbb011, #申請數量
       inbb012 LIKE inbb_t.inbb012, #實際異動數量
       inbb013 LIKE inbb_t.inbb013, #參考單位
       inbb014 LIKE inbb_t.inbb014, #參考單位申請數量
       inbb015 LIKE inbb_t.inbb015, #參考單位實際數量
       inbb016 LIKE inbb_t.inbb016, #理由碼
       inbb017 LIKE inbb_t.inbb017, #來源單號
       inbb018 LIKE inbb_t.inbb018, #檢驗否
       inbb019 LIKE inbb_t.inbb019, #檢驗合格量
       inbb020 LIKE inbb_t.inbb020, #單據備註
       inbb021 LIKE inbb_t.inbb021, #存貨備註
       inbb022 LIKE inbb_t.inbb022, #有效日期
       #161109-00085#76 --s add
       inbbud001 LIKE inbb_t.inbbud001, #自定義欄位(文字)001
       inbbud002 LIKE inbb_t.inbbud002, #自定義欄位(文字)002
       inbbud003 LIKE inbb_t.inbbud003, #自定義欄位(文字)003
       inbbud004 LIKE inbb_t.inbbud004, #自定義欄位(文字)004
       inbbud005 LIKE inbb_t.inbbud005, #自定義欄位(文字)005
       inbbud006 LIKE inbb_t.inbbud006, #自定義欄位(文字)006
       inbbud007 LIKE inbb_t.inbbud007, #自定義欄位(文字)007
       inbbud008 LIKE inbb_t.inbbud008, #自定義欄位(文字)008
       inbbud009 LIKE inbb_t.inbbud009, #自定義欄位(文字)009
       inbbud010 LIKE inbb_t.inbbud010, #自定義欄位(文字)010
       inbbud011 LIKE inbb_t.inbbud011, #自定義欄位(數字)011
       inbbud012 LIKE inbb_t.inbbud012, #自定義欄位(數字)012
       inbbud013 LIKE inbb_t.inbbud013, #自定義欄位(數字)013
       inbbud014 LIKE inbb_t.inbbud014, #自定義欄位(數字)014
       inbbud015 LIKE inbb_t.inbbud015, #自定義欄位(數字)015
       inbbud016 LIKE inbb_t.inbbud016, #自定義欄位(數字)016
       inbbud017 LIKE inbb_t.inbbud017, #自定義欄位(數字)017
       inbbud018 LIKE inbb_t.inbbud018, #自定義欄位(數字)018
       inbbud019 LIKE inbb_t.inbbud019, #自定義欄位(數字)019
       inbbud020 LIKE inbb_t.inbbud020, #自定義欄位(數字)020
       inbbud021 LIKE inbb_t.inbbud021, #自定義欄位(日期時間)021
       inbbud022 LIKE inbb_t.inbbud022, #自定義欄位(日期時間)022
       inbbud023 LIKE inbb_t.inbbud023, #自定義欄位(日期時間)023
       inbbud024 LIKE inbb_t.inbbud024, #自定義欄位(日期時間)024
       inbbud025 LIKE inbb_t.inbbud025, #自定義欄位(日期時間)025
       inbbud026 LIKE inbb_t.inbbud026, #自定義欄位(日期時間)026
       inbbud027 LIKE inbb_t.inbbud027, #自定義欄位(日期時間)027
       inbbud028 LIKE inbb_t.inbbud028, #自定義欄位(日期時間)028
       inbbud029 LIKE inbb_t.inbbud029, #自定義欄位(日期時間)029
       inbbud030 LIKE inbb_t.inbbud030, #自定義欄位(日期時間)030
       #161109-00085#76 --e add
       inbb200 LIKE inbb_t.inbb200, #商品條碼
       inbb201 LIKE inbb_t.inbb201, #包裝單位
       inbb202 LIKE inbb_t.inbb202, #申請包裝數量
       inbb203 LIKE inbb_t.inbb203, #實際包裝數量
       inbbunit LIKE inbb_t.inbbunit, #應用組織
       inbb204 LIKE inbb_t.inbb204, #製造日期
       inbb023 LIKE inbb_t.inbb023, #專案編號
       inbb024 LIKE inbb_t.inbb024, #WBS
       inbb025 LIKE inbb_t.inbb025, #活動編號
       inbb205 LIKE inbb_t.inbb205, #領用/退回單價
       inbb206 LIKE inbb_t.inbb206, #領用/退回金額
       inbb207 LIKE inbb_t.inbb207, #成本單價
       inbb208 LIKE inbb_t.inbb208, #成本金額
       inbb209 LIKE inbb_t.inbb209, #費用編號
       inbb210 LIKE inbb_t.inbb210, #進價
       inbb211 LIKE inbb_t.inbb211, #來源單據項次
       inbb212 LIKE inbb_t.inbb212, #來源單據項序
       inbb213 LIKE inbb_t.inbb213, #轉入商品條碼
       inbb214 LIKE inbb_t.inbb214, #轉入商品編號
       inbb215 LIKE inbb_t.inbb215, #轉入產品特徵
       inbb216 LIKE inbb_t.inbb216, #轉入單位
       inbb217 LIKE inbb_t.inbb217, #轉入數量
       inbb218 LIKE inbb_t.inbb218, #轉入包裝單位
       inbb219 LIKE inbb_t.inbb219, #轉入包裝數量
       inbb220 LIKE inbb_t.inbb220, #轉入庫位
       inbb221 LIKE inbb_t.inbb221, #轉入儲位
       inbb222 LIKE inbb_t.inbb222, #轉入批號
       inbb223 LIKE inbb_t.inbb223, #轉入進價
       inbb224 LIKE inbb_t.inbb224, #計價單位
       inbb225 LIKE inbb_t.inbb225 #計價數量
               END RECORD
   #mod--161109-00085#4-e
   
   DEFINE l_inbbseq        LIKE inbb_t.inbbseq   
   DEFINE l_inbc016        LIKE inbc_t.inbc016   #有效日期
   DEFINE l_imaf032        LIKE imaf_t.imaf032   #有效期加天數
   DEFINE l_inbcseq1       LIKE inbc_t.inbcseq1
   DEFINE l_amount         LIKE inbb_t.inbb011
   DEFINE l_sql1           STRING
   DEFINE l_sql2           STRING
   DEFINE l_imaf062        LIKE imaf_t.imaf062
   DEFINE l_imaf063        LIKE imaf_t.imaf063
   DEFINE l_imaf061        LIKE imaf_t.imaf061
   DEFINE l_imaf031        LIKE imaf_t.imaf031  
   DEFINE l_inad011        LIKE inad_t.inad011    
   DEFINE l_xmdk017        LIKE xmdk_t.xmdk017
   DEFINE l_flag           LIKE type_t.num5
   DEFINE l_oocq019        LIKE oocq_t.oocq019   #運輸方式
   DEFINE l_where          STRING
   DEFINE ls_page     STRING
   DEFINE ls_table    STRING
   DEFINE ls_group    STRING
   
   #先做狀態判定
   LET p_cmd = 'u'    
   
   IF g_xmdk_m.xmdkstus <> 'S' AND g_xmdk_m.xmdkstus <> 'Y' THEN
      INITIALIZE g_errparam TO NULL  
      LET g_errparam.code   = "axm-00735" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xmdk_m.xmdk000,g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocno_desc,g_xmdk_m.xmdkdocdt, 
       g_xmdk_m.xmdk001,g_xmdk_m.xmdk003,g_xmdk_m.xmdk003_desc,g_xmdk_m.xmdk004,g_xmdk_m.xmdk004_desc, 
       g_xmdk_m.xmdkstus,g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk007,g_xmdk_m.xmdk007_desc,g_xmdk_m.xmdk009, 
       g_xmdk_m.xmdk009_desc,g_xmdk_m.xmdk008,g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk202,g_xmdk_m.xmdk202_desc, 
       g_xmdk_m.xmdk002,g_xmdk_m.xmdk045,g_xmdk_m.xmdk032,g_xmdk_m.xmdk030,g_xmdk_m.xmdk030_desc,g_xmdk_m.xmdk028, 
       g_xmdk_m.xmdk029,g_xmdk_m.xmdk037,g_xmdk_m.xmdk034,g_xmdk_m.xmdk034_desc,g_xmdk_m.xmdk054,g_xmdk_m.xmdk039, 
       g_xmdk_m.xmdk039_desc,g_xmdk_m.xmdk040,g_xmdk_m.xmdk040_desc,g_xmdk_m.xmdk021,g_xmdk_m.xmdk021_desc, 
       g_xmdk_m.address,g_xmdk_m.xmdk022,g_xmdk_m.xmdk022_desc,g_xmdk_m.xmdk023,g_xmdk_m.xmdk023_desc, 
       g_xmdk_m.xmdk024,g_xmdk_m.xmdk024_desc,g_xmdk_m.xmdk020,g_xmdk_m.xmdk020_desc,g_xmdk_m.xmdk025, 
       g_xmdk_m.xmdk026,g_xmdk_m.xmdk027,g_xmdk_m.xmdk027_desc,g_xmdk_m.xmdk038,g_xmdk_m.xmdk038_desc, 
       g_xmdk_m.xmdk055,g_xmdk_m.xmdk010,g_xmdk_m.xmdk010_desc,g_xmdk_m.xmdk011,g_xmdk_m.xmdk011_desc, 
       g_xmdk_m.xmdk012,g_xmdk_m.xmdk012_desc,g_xmdk_m.xmdk013,g_xmdk_m.xmdk014,g_xmdk_m.xmdk015,g_xmdk_m.xmdk015_desc, 
       g_xmdk_m.xmdk016,g_xmdk_m.xmdk016_desc,g_xmdk_m.xmdk017,g_xmdk_m.xmdk018,g_xmdk_m.xmdk018_desc, 
       g_xmdk_m.xmdk019,g_xmdk_m.xmdk019_desc,g_xmdk_m.xmdk042,g_xmdk_m.xmdk043,g_xmdk_m.xmdk031,g_xmdk_m.xmdk031_desc, 
       g_xmdk_m.xmdk033,g_xmdk_m.xmdk033_desc,g_xmdk_m.xmdk044,g_xmdk_m.xmdk035,g_xmdk_m.xmdk046,g_xmdk_m.xmdk036, 
       g_xmdk_m.xmdk083,g_xmdk_m.xmdkownid,g_xmdk_m.xmdkownid_desc,g_xmdk_m.xmdkowndp,g_xmdk_m.xmdkowndp_desc, 
       g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtid_desc,g_xmdk_m.xmdkcrtdp,g_xmdk_m.xmdkcrtdp_desc,g_xmdk_m.xmdkcrtdt, 
       g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmodid_desc,g_xmdk_m.xmdkmoddt,g_xmdk_m.xmdkcnfid,g_xmdk_m.xmdkcnfid_desc, 
       g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid,g_xmdk_m.xmdkpstid_desc,g_xmdk_m.xmdkpstdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""

 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL axmt540_set_entry(p_cmd)
   #add-point:set_entry後
   CALL axmt540_set_no_required(p_cmd)
   CALL axmt540_set_required(p_cmd)
   #end add-point
   CALL axmt540_set_no_entry(p_cmd)
   
   DISPLAY BY NAME g_xmdk_m.xmdk000,g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001, 
       g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdkstus,g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk007, 
       g_xmdk_m.xmdk009,g_xmdk_m.xmdk008,g_xmdk_m.xmdk202,g_xmdk_m.xmdk002,g_xmdk_m.xmdk045,g_xmdk_m.xmdk032, 
       g_xmdk_m.xmdk030,g_xmdk_m.xmdk028,g_xmdk_m.xmdk029,g_xmdk_m.xmdk037,g_xmdk_m.xmdk034,g_xmdk_m.xmdk054, 
       g_xmdk_m.xmdk039,g_xmdk_m.xmdk040,g_xmdk_m.xmdk021,g_xmdk_m.address,g_xmdk_m.xmdk022,g_xmdk_m.xmdk023, 
       g_xmdk_m.xmdk024,g_xmdk_m.xmdk020,g_xmdk_m.xmdk025,g_xmdk_m.xmdk026,g_xmdk_m.xmdk027,g_xmdk_m.xmdk038, 
       g_xmdk_m.xmdk055,g_xmdk_m.xmdk010,g_xmdk_m.xmdk011,g_xmdk_m.xmdk012,g_xmdk_m.xmdk013,g_xmdk_m.xmdk014, 
       g_xmdk_m.xmdk015,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,g_xmdk_m.xmdk018,g_xmdk_m.xmdk019,g_xmdk_m.xmdk042, 
       g_xmdk_m.xmdk043,g_xmdk_m.xmdk031,g_xmdk_m.xmdk033,g_xmdk_m.xmdk044,g_xmdk_m.xmdk035,g_xmdk_m.xmdk046, 
       g_xmdk_m.xmdk036
   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   LET g_errshow = 1
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

      #單頭段
      INPUT BY NAME g_xmdk_m.xmdk010,g_xmdk_m.xmdk011,g_xmdk_m.xmdk021,g_xmdk_m.xmdk022,g_xmdk_m.xmdk023,g_xmdk_m.xmdk024,
                    g_xmdk_m.xmdk025,g_xmdk_m.xmdk026,g_xmdk_m.xmdk027,g_xmdk_m.xmdk032,g_xmdk_m.xmdk039

         ATTRIBUTE(WITHOUT DEFAULTS)   
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN axmt540_cl USING g_enterprise,g_xmdk_m.xmdkdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axmt540_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE axmt540_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL axmt540_set_entry(p_cmd)
            #add-point:資料輸入前
            CALL cl_showmsg_init()            
            CALL axmt540_set_entry(p_cmd)
            CALL axmt540_set_no_entry(p_cmd)
            #end add-point
            CALL axmt540_set_no_entry(p_cmd)
            CALL axmt540_set_entry_address()
            CALL axmt540_set_no_entry_address()
        
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk010
            
            #add-point:AFTER FIELD xmdk010
 
            CALL s_desc_get_ooib002_desc(g_xmdk_m.xmdk010) RETURNING g_xmdk_m.xmdk010_desc
            DISPLAY BY NAME g_xmdk_m.xmdk010_desc
            
            IF NOT cl_null(g_xmdk_m.xmdk010) THEN
               IF g_xmdk_m.xmdk010 <> g_xmdk_m_o.xmdk010 OR cl_null(g_xmdk_m_o.xmdk010) THEN
               
                  IF NOT s_axmt540_receive_condition_chk(g_xmdk_m.xmdk007,g_xmdk_m.xmdk010) THEN
                     LET g_xmdk_m.xmdk010 = g_xmdk_m_o.xmdk010

                     CALL s_desc_get_ooib002_desc(g_xmdk_m.xmdk010) RETURNING g_xmdk_m.xmdk010_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk010_desc

                     NEXT FIELD CURRENT
                  END IF
                  
                  #更新單身
                  IF NOT axmt540_detail_update('','',g_xmdk_m.xmdk017,'0') THEN
                     LET g_xmdk_m.xmdk010 = g_xmdk_m_o.xmdk010
                     
                     CALL s_desc_get_ooib002_desc(g_xmdk_m.xmdk010) RETURNING g_xmdk_m.xmdk010_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk010_desc

                     CALL s_transaction_end('N',0)
                     CALL s_transaction_begin()

                     NEXT FIELD CURRENT
                  END IF
                  
               END IF            
            END IF 
            
            LET g_xmdk_m_o.xmdk010 = g_xmdk_m.xmdk010
            #END add-point
         
         AFTER FIELD xmdk011
            
            #add-point:AFTER FIELD xmdk011
            CALL s_desc_get_acc_desc('238',g_xmdk_m.xmdk011) RETURNING g_xmdk_m.xmdk011_desc
            DISPLAY BY NAME g_xmdk_m.xmdk011_desc

            IF NOT cl_null(g_xmdk_m.xmdk011) THEN
               IF g_xmdk_m.xmdk011 <> g_xmdk_m_o.xmdk011 OR cl_null(g_xmdk_m_o.xmdk011) THEN
               
                  IF NOT s_azzi650_chk_exist('238',g_xmdk_m.xmdk011) THEN
                     LET g_xmdk_m.xmdk011 = g_xmdk_m_o.xmdk011

                     CALL s_desc_get_acc_desc('238',g_xmdk_m.xmdk011) RETURNING g_xmdk_m.xmdk011_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk011_desc

                     NEXT FIELD CURRENT
                  END IF
                  
                  #更新單身
                  IF NOT axmt540_detail_update('','',g_xmdk_m.xmdk017,'0') THEN
                     LET g_xmdk_m.xmdk011 = g_xmdk_m_o.xmdk011
                     
                     CALL s_desc_get_acc_desc('238',g_xmdk_m.xmdk011) RETURNING g_xmdk_m.xmdk011_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk011_desc

                     CALL s_transaction_end('N',0)
                     CALL s_transaction_begin()

                     NEXT FIELD CURRENT
                  END IF                  
                  
               END IF            
            END IF 
            
            LET g_xmdk_m_o.xmdk011 = g_xmdk_m.xmdk011
            #END add-point
         
         AFTER FIELD xmdk021
            
            #add-point:AFTER FIELD xmdk021
                        
            CALL axmt540_xmdk021_ref()
            IF NOT cl_null(g_xmdk_m.xmdk021) THEN                                
               IF g_xmdk_m.xmdk021 <> g_xmdk_m_o.xmdk021 OR cl_null(g_xmdk_m_o.xmdk021) THEN
               
                  IF NOT axmt540_xmdk009_xmdk021_chk() THEN
                     LET g_xmdk_m.xmdk021 = g_xmdk_m_o.xmdk021
                     CALL axmt540_xmdk021_ref()

                     NEXT FIELD xmdk021
                  END IF
               END IF            
            END IF 

            LET g_xmdk_m_o.xmdk021 = g_xmdk_m.xmdk021
            #END add-point
         
         AFTER FIELD xmdk022
            
            #add-point:AFTER FIELD xmdk022

            CALL s_desc_get_acc_desc('263',g_xmdk_m.xmdk022) RETURNING g_xmdk_m.xmdk022_desc
            DISPLAY BY NAME g_xmdk_m.xmdk022_desc

            IF NOT cl_null(g_xmdk_m.xmdk022) THEN
               IF g_xmdk_m.xmdk022 <> g_xmdk_m_o.xmdk022 OR cl_null(g_xmdk_m_o.xmdk022) THEN
            
                  IF NOT s_azzi650_chk_exist('263',g_xmdk_m.xmdk022) THEN
                     LET g_xmdk_m.xmdk022 = g_xmdk_m_o.xmdk022

                     CALL s_desc_get_acc_desc('263',g_xmdk_m.xmdk022) RETURNING g_xmdk_m.xmdk022_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk022_desc

                     NEXT FIELD CURRENT
                  END IF

                  #檢查起運地
                  IF NOT cl_null(g_xmdk_m.xmdk023) THEN
                     IF NOT s_apmi011_check_location(g_xmdk_m.xmdk022,g_xmdk_m.xmdk023) THEN

                        LET g_xmdk_m.xmdk022 = g_xmdk_m_o.xmdk022

                        CALL s_desc_get_acc_desc('263',g_xmdk_m.xmdk022) RETURNING g_xmdk_m.xmdk022_desc
                        DISPLAY BY NAME g_xmdk_m.xmdk022_desc

                        NEXT FIELD CURRENT

                     END IF
                  END IF

                  #檢查目的地
                  IF NOT cl_null(g_xmdk_m.xmdk024) THEN
                     IF NOT s_apmi011_check_location(g_xmdk_m.xmdk022,g_xmdk_m.xmdk024) THEN

                        LET g_xmdk_m.xmdk022 = g_xmdk_m_o.xmdk022

                        CALL s_desc_get_acc_desc('263',g_xmdk_m.xmdk022) RETURNING g_xmdk_m.xmdk022_desc
                        DISPLAY BY NAME g_xmdk_m.xmdk022_desc

                        NEXT FIELD CURRENT

                     END IF
                  END IF              

               END IF          
            END IF 
            
            LET g_xmdk_m_o.xmdk022 = g_xmdk_m.xmdk022

            #END add-point
         
         AFTER FIELD xmdk023
            
            #add-point:AFTER FIELD xmdk023
            
            CALL axmt540_location_ref(g_xmdk_m.xmdk022,g_xmdk_m.xmdk023) RETURNING g_xmdk_m.xmdk023_desc
            DISPLAY BY NAME g_xmdk_m.xmdk023_desc
            
            IF NOT cl_null(g_xmdk_m.xmdk023) THEN
               IF g_xmdk_m.xmdk023 <> g_xmdk_m_o.xmdk023 OR cl_null(g_xmdk_m_o.xmdk023) THEN
               
                  IF NOT s_apmi011_check_location(g_xmdk_m.xmdk022,g_xmdk_m.xmdk023) THEN
                     LET g_xmdk_m.xmdk023 = g_xmdk_m_o.xmdk023
                     
                     CALL axmt540_location_ref(g_xmdk_m.xmdk022,g_xmdk_m.xmdk023) RETURNING g_xmdk_m.xmdk023_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk023_desc
          
                     NEXT FIELD CURRENT
                  END IF
               END IF
           
            END IF 
            
            LET g_xmdk_m_o.xmdk023 = g_xmdk_m.xmdk023
            
            #檢查目的地
            IF NOT cl_null(g_xmdk_m.xmdk024) THEN
               IF NOT s_apmi011_check_location(g_xmdk_m.xmdk022,g_xmdk_m.xmdk024) THEN
                  LET g_xmdk_m_o.xmdk024 = ''
                  NEXT FIELD xmdk024
               END IF
            END IF
            
            CALL axmt540_location_ref(g_xmdk_m.xmdk022,g_xmdk_m.xmdk024) RETURNING g_xmdk_m.xmdk024_desc
            DISPLAY BY NAME g_xmdk_m.xmdk024_desc  

            #END add-point
         
         AFTER FIELD xmdk024
            
            #add-point:AFTER FIELD xmdk024
            
            CALL axmt540_location_ref(g_xmdk_m.xmdk022,g_xmdk_m.xmdk024) RETURNING g_xmdk_m.xmdk024_desc
            DISPLAY BY NAME g_xmdk_m.xmdk024_desc
            
            IF NOT cl_null(g_xmdk_m.xmdk024) THEN
               IF g_xmdk_m.xmdk024 <> g_xmdk_m_o.xmdk024 OR cl_null(g_xmdk_m_o.xmdk024) THEN
                           
                  IF NOT s_apmi011_check_location(g_xmdk_m.xmdk022,g_xmdk_m.xmdk024) THEN
                     LET g_xmdk_m.xmdk024 = g_xmdk_m_o.xmdk024
                        
                     CALL axmt540_location_ref(g_xmdk_m.xmdk022,g_xmdk_m.xmdk024) RETURNING g_xmdk_m.xmdk024_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk024_desc
                        
                     NEXT FIELD CURRENT
               
                  END IF
               END IF
            END IF
            
            LET g_xmdk_m_o.xmdk024 = g_xmdk_m.xmdk024
            #END add-point
         
         AFTER FIELD xmdk025
            
            #add-point:AFTER FIELD xmdk025
                                                                                                            
            #END add-point
         
         AFTER FIELD xmdk026
            
            #add-point:AFTER FIELD xmdk026
                                                                                                            
            #END add-point
         
         AFTER FIELD xmdk027
            
            #add-point:AFTER FIELD xmdk027
            
            CALL axmt540_xmdk027_ref(g_xmdk_m.xmdk007,g_xmdk_m.xmdk027)
            RETURNING  g_xmdk_m.xmdk027_desc 
            DISPLAY BY NAME g_xmdk_m.xmdk027_desc
            
            IF NOT cl_null(g_xmdk_m.xmdk027) THEN
               IF g_xmdk_m.xmdk027 <> g_xmdk_m_o.xmdk027 OR cl_null(g_xmdk_m_o.xmdk027) THEN
               
#                  IF NOT axmt540_xmdk007_xmdk027_chk(g_xmdk_m.xmdk007,g_xmdk_m.xmdk027) THEN #160119-00015#1-mod-(S)
                  IF NOT axmt540_xmdk009_xmdk027_chk(g_xmdk_m.xmdk009,g_xmdk_m.xmdk027) THEN  #160119-00015#1-mod-(E)
                     LET g_xmdk_m.xmdk027 = g_xmdk_m_o.xmdk027

                     CALL axmt540_xmdk027_ref(g_xmdk_m.xmdk007,g_xmdk_m.xmdk027)
                     RETURNING  g_xmdk_m.xmdk027_desc 
                     DISPLAY BY NAME g_xmdk_m.xmdk027_desc

                     NEXT FIELD CURRENT
                  END IF
                  
               END IF
            END IF  
            
            LET g_xmdk_m_o.xmdk027 = g_xmdk_m.xmdk027
            #END add-point
         
         AFTER FIELD xmdk032
            
            IF NOT cl_null(g_xmdk_m.xmdk032) THEN
               IF g_xmdk_m.xmdk032 <> g_xmdk_m_o.xmdk032 OR cl_null(g_xmdk_m_o.xmdk032) THEN

                  #帶出匯率
                  #modify--151118-00012#1 By shiun  更改取匯率方式--(S)
                  CALL axmt540_xmda_xmdk017() RETURNING l_xmdk017
                  IF cl_null(l_xmdk017) THEN
                     CALL axmt540_get_ratedate() RETURNING g_ratedate
                     CALL s_axmt540_get_exchange(g_xmdk_m.xmdk042,g_xmdk_m.xmdk016,g_ratedate) RETURNING l_xmdk017
                  END IF
                  #modify--151118-00012#1 By shiun  更改取匯率方式--(E)

                  #更新單身
                  IF NOT axmt540_detail_update('','',l_xmdk017,'2') THEN
                     LET g_xmdk_m.xmdk032 = g_xmdk_m_o.xmdk032

                     CALL s_transaction_end('N',0)
                     CALL s_transaction_begin()

                     NEXT FIELD CURRENT
                  END IF
                  
                  LET g_xmdk_m.xmdk017 = l_xmdk017
                  LET g_xmdk_m_o.xmdk017 = g_xmdk_m.xmdk017
                  DISPLAY BY NAME g_xmdk_m.xmdk017

               END IF
            END IF
            
            LET g_xmdk_m_o.xmdk032 = g_xmdk_m.xmdk032
            #END add-point
            
         AFTER FIELD xmdk039
            
            #add-point:AFTER FIELD xmdk039
            
            CALL s_desc_get_stock_desc(g_site,g_xmdk_m.xmdk039) RETURNING g_xmdk_m.xmdk039_desc
            DISPLAY BY NAME g_xmdk_m.xmdk039_desc
            
            IF NOT cl_null(g_xmdk_m.xmdk039) THEN
               IF g_xmdk_m.xmdk039 <> g_xmdk_m_o.xmdk039 OR cl_null(g_xmdk_m_o.xmdk039) THEN
            
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_site
                  LET g_chkparam.arg2 = g_xmdk_m.xmdk039
                  LET g_chkparam.arg3 = 'Y'
                     
                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_inaa001_6") THEN
                     LET g_xmdk_m.xmdk039 = g_xmdk_m_o.xmdk039
                     CALL s_desc_get_stock_desc(g_site,g_xmdk_m.xmdk039) RETURNING g_xmdk_m.xmdk039_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk039_desc
             
                     NEXT FIELD CURRENT
                  END IF
                  
                  #150921-00014 earl add s
                  #檢核輸入的庫位(To)是否在單據別限制範圍內
                  CALL s_control_chk_doc('7',g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk039,'','','','')
                  RETURNING l_success,l_flag
                  
                  IF NOT l_success OR NOT l_flag THEN
                     LET g_xmdk_m.xmdk039 = g_xmdk_m_o.xmdk039
                     CALL s_desc_get_stock_desc(g_site,g_xmdk_m.xmdk039) RETURNING g_xmdk_m.xmdk039_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk039_desc
             
                     NEXT FIELD CURRENT                     
                  END IF
                  #150921-00014 earl add e

               END IF
            END IF
            
            LET g_xmdk_m_o.xmdk039 = g_xmdk_m.xmdk039
            #END add-point
         
 #欄位檢查
 
         ON ACTION controlp INFIELD xmdk010
            #add-point:ON ACTION controlp INFIELD xmdk010
            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk010             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_xmdk_m.xmdk007            #客戶編號

            CALL q_pmad002_3()                                #呼叫開窗

            LET g_xmdk_m.xmdk010 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk010 TO xmdk010              #顯示到畫面上

            CALL s_desc_get_ooib002_desc(g_xmdk_m.xmdk010) RETURNING g_xmdk_m.xmdk010_desc
            DISPLAY BY NAME g_xmdk_m.xmdk010_desc
            
            NEXT FIELD xmdk010                          #返回原欄位

            #END add-point
 
         ON ACTION controlp INFIELD xmdk011
            #add-point:ON ACTION controlp INFIELD xmdk011
            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk011             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '238' #

            CALL q_oocq002()                                #呼叫開窗

            LET g_xmdk_m.xmdk011 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk011 TO xmdk011              #顯示到畫面上

            CALL s_desc_get_acc_desc('238',g_xmdk_m.xmdk011) RETURNING g_xmdk_m.xmdk011_desc
            DISPLAY BY NAME g_xmdk_m.xmdk011_desc

            NEXT FIELD xmdk011                          #返回原欄位

            #END add-point
            
         ON ACTION controlp INFIELD xmdk021
            #add-point:ON ACTION controlp INFIELD xmdk021
            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk021             #給予default值

            #給予arg            
            LET g_qryparam.arg1 = s_axmt500_get_pmaa027(g_xmdk_m.xmdk009)

            CALL q_oofb019_1()                                #呼叫開窗

            LET g_xmdk_m.xmdk021 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk021 TO xmdk021              #顯示到畫面上

            CALL axmt540_xmdk021_ref()
            NEXT FIELD xmdk021                          #返回原欄位

            #END add-point
            
         ON ACTION controlp INFIELD xmdk022
            #add-point:ON ACTION controlp INFIELD xmdk022
            
            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk022             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '263'

            CALL q_oocq002()                                #呼叫開窗

            LET g_xmdk_m.xmdk022 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk022 TO xmdk022              #顯示到畫面上

            CALL s_desc_get_acc_desc('263',g_xmdk_m.xmdk022) RETURNING g_xmdk_m.xmdk022_desc
            DISPLAY BY NAME g_xmdk_m.xmdk022_desc

            NEXT FIELD xmdk022                          #返回原欄位

            #END add-point
            
         ON ACTION controlp INFIELD xmdk023
            #add-point:ON ACTION controlp INFIELD xmdk023
            
            #開窗i段   
            IF cl_null(g_xmdk_m.xmdk022) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00085'  #請先輸入運輸方式
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
       
               NEXT FIELD xmdk022
            END IF   
            
            LET l_oocq019 = ''
            SELECT oocq019 INTO l_oocq019
              FROM oocq_t
             WHERE oocqent = g_enterprise
               AND oocq001 = '263'
               AND oocq002 = g_xmdk_m.xmdk022
            
            CASE
               WHEN l_oocq019 = '1' OR l_oocq019 = '4'      #陸運、海運
                  INITIALIZE g_qryparam.* TO NULL
                  LET g_qryparam.state = 'i'
	               LET g_qryparam.reqry = FALSE

                  LET g_qryparam.default1 = g_xmdk_m.xmdk023             #給予default值

                  LET g_qryparam.arg1 = '315'
                  CALL q_oocq002()                           #呼叫開窗
                  
                  LET g_xmdk_m.xmdk023 = g_qryparam.return1        #將開窗取得的值回傳到變數
                  DISPLAY g_xmdk_m.xmdk023 TO xmdk023              #顯示到畫面上
                 
                    
               WHEN l_oocq019 = '2'      #空運
                  INITIALIZE g_qryparam.* TO NULL
                  LET g_qryparam.state = 'i'
	               LET g_qryparam.reqry = FALSE	              
	              
	               LET g_qryparam.default1 = g_xmdk_m.xmdk023             #給予default值
	              
	               LET g_qryparam.arg1 = '262'
	              
                  CALL q_oocq002()                           #呼叫開窗

                  LET g_xmdk_m.xmdk023 = g_qryparam.return1        #將開窗取得的值回傳到變數
                  DISPLAY g_xmdk_m.xmdk023 TO xmdk023              #顯示到畫面上
               
               WHEN l_oocq019 = '3'      #其它
                  INITIALIZE g_qryparam.* TO NULL
                  LET g_qryparam.state = 'i'
	               LET g_qryparam.reqry = FALSE
	              
	               LET g_qryparam.default1 = g_xmdk_m.xmdk023             #給予default值
	              
	               LET g_qryparam.arg1 = '276'
	              
                  CALL q_oocq002()                           #呼叫開窗

                  LET g_xmdk_m.xmdk023 = g_qryparam.return1        #將開窗取得的值回傳到變數
                  DISPLAY g_xmdk_m.xmdk023 TO xmdk023              #顯示到畫面上
              
            END CASE
            
            CALL axmt540_location_ref(g_xmdk_m.xmdk022,g_xmdk_m.xmdk023) RETURNING g_xmdk_m.xmdk023_desc
            DISPLAY BY NAME g_xmdk_m.xmdk023_desc
            
            NEXT FIELD xmdk023     #返回原欄位 
            #END add-point
            
         ON ACTION controlp INFIELD xmdk024
            #add-point:ON ACTION controlp INFIELD xmdk024
            
            #開窗i段   
            IF cl_null(g_xmdk_m.xmdk022) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00085'  #請先輸入運輸方式
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
       
               NEXT FIELD xmdk022
            END IF   
            
            LET l_oocq019 = ''
            SELECT oocq019 INTO l_oocq019
              FROM oocq_t
             WHERE oocqent = g_enterprise
               AND oocq001 = '263'
               AND oocq002 = g_xmdk_m.xmdk022
            
            CASE
               WHEN l_oocq019 = '1' OR l_oocq019 = '4'      #陸運、海運                    
                  INITIALIZE g_qryparam.* TO NULL
                  LET g_qryparam.state = 'i'
	               LET g_qryparam.reqry = FALSE

                  LET g_qryparam.default1 = g_xmdk_m.xmdk024             #給予default值
                  
                  LET g_qryparam.arg1 = '315'
	              
                  CALL q_oocq002()                           #呼叫開窗
                  
                  LET g_xmdk_m.xmdk024 = g_qryparam.return1        #將開窗取得的值回傳到變數
                  DISPLAY g_xmdk_m.xmdk024 TO xmdk024              #顯示到畫面上
                 
                    
               WHEN l_oocq019 = '2'      #空運
                  INITIALIZE g_qryparam.* TO NULL
                  LET g_qryparam.state = 'i'
	               LET g_qryparam.reqry = FALSE	              
	              
	               LET g_qryparam.default1 = g_xmdk_m.xmdk024             #給予default值
	              
	               LET g_qryparam.arg1 = '262'
	              
                  CALL q_oocq002()                           #呼叫開窗

                  LET g_xmdk_m.xmdk024 = g_qryparam.return1        #將開窗取得的值回傳到變數
                  DISPLAY g_xmdk_m.xmdk024 TO xmdk024              #顯示到畫面上
               
               WHEN l_oocq019 = '3'      #其它
                  INITIALIZE g_qryparam.* TO NULL
                  LET g_qryparam.state = 'i'
	               LET g_qryparam.reqry = FALSE
	              
	               LET g_qryparam.default1 = g_xmdk_m.xmdk024             #給予default值
	              
	               LET g_qryparam.arg1 = '276'
	              
                  CALL q_oocq002()                           #呼叫開窗

                  LET g_xmdk_m.xmdk024 = g_qryparam.return1        #將開窗取得的值回傳到變數
                  DISPLAY g_xmdk_m.xmdk024 TO xmdk024              #顯示到畫面上
              
            END CASE
            
            CALL axmt540_location_ref(g_xmdk_m.xmdk022,g_xmdk_m.xmdk024) RETURNING g_xmdk_m.xmdk024_desc
            DISPLAY BY NAME g_xmdk_m.xmdk024_desc
            
            NEXT FIELD xmdk024     #返回原欄位 
            #END add-point
            
         ON ACTION controlp INFIELD xmdk025
            #add-point:ON ACTION controlp INFIELD xmdk025
                                                                                                            
            #END add-point
 
         ON ACTION controlp INFIELD xmdk026
            #add-point:ON ACTION controlp INFIELD xmdk026
                                                                                                            
            #END add-point
 
         ON ACTION controlp INFIELD xmdk027
            #add-point:ON ACTION controlp INFIELD xmdk027
            
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xmao002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk027  #顯示到畫面上
            NEXT FIELD xmdk027                     #返回原欄位    
            
            #END add-point
            
         ON ACTION controlp INFIELD xmdk032
            #add-point:ON ACTION controlp INFIELD xmdk032
                                                                                                            
            #END add-point
         
         ON ACTION controlp INFIELD xmdk039
            #add-point:ON ACTION controlp INFIELD xmdk039
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk039             #給予default值

            LET g_qryparam.where = "inaa010 = 'Y' "
            
            #150921-00014 earl add s
            #單據別庫位限制(To)
            CALL s_control_get_doc_sql('inaa001',g_xmdk_m.xmdkdocno,'7') RETURNING l_success,l_where
            IF l_success THEN
               LET g_qryparam.where = g_qryparam.where," AND ",l_where
            END IF
            #150921-00014 earl add e
            
            CALL q_inaa001_2()                               #呼叫開窗                               #呼叫開窗

            LET g_xmdk_m.xmdk039 = g_qryparam.return1              

            DISPLAY g_xmdk_m.xmdk039 TO xmdk039              #

            CALL s_desc_get_stock_desc(g_site,g_xmdk_m.xmdk039) RETURNING g_xmdk_m.xmdk039_desc
            DISPLAY BY NAME g_xmdk_m.xmdk039_desc

            NEXT FIELD xmdk039                          #返回原欄位

            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            DISPLAY BY NAME g_xmdk_m.xmdkdocno
                        
            IF p_cmd = 'u' THEN
               CALL s_transaction_begin()
               
               #將遮罩欄位還原
               CALL axmt540_xmdk_t_mask_restore('restore_mask_o')
               
               UPDATE xmdk_t SET (xmdk010,xmdk011,xmdk021,xmdk022,xmdk023,xmdk024,xmdk025,xmdk026,xmdk027,
                   xmdk032,xmdk039) = (g_xmdk_m.xmdk010,g_xmdk_m.xmdk011,g_xmdk_m.xmdk021,g_xmdk_m.xmdk022,g_xmdk_m.xmdk023,g_xmdk_m.xmdk024,
                    g_xmdk_m.xmdk025,g_xmdk_m.xmdk026,g_xmdk_m.xmdk027,g_xmdk_m.xmdk032,g_xmdk_m.xmdk039)
                WHERE xmdkent = g_enterprise AND xmdkdocno = g_xmdk_m.xmdkdocno
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "xmdk_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #150917-00001#3  2016/01/19 By earl mark s
#               #中斷續拋，直接由最終站將資料帶出
#               IF axmt540_break_continue(g_xmdk_m.xmdk044) THEN
#                  
#                  CALL axmt540_default(g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk006,g_xmdk_m.xmdk044,g_xmdk_m.xmdk035)
#                  RETURNING l_success
#                  
#                  IF NOT l_success THEN
#                     CALL s_transaction_end('N','0')
#                     CONTINUE DIALOG
#                  END IF    
#               
#                  CALL axmt540_b_fill()
#               END IF
               #150917-00001#3  2016/01/19 By earl mark e
               
               #將遮罩欄位進行遮蔽
               CALL axmt540_xmdk_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_xmdk_m_t)
               LET g_log2 = util.JSON.stringify(g_xmdk_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF

            END IF
 
            
      END INPUT
      
            #Page1 預設值產生於此處
#      INPUT ARRAY g_xmdl_d FROM s_detail1.*
#          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
#                  INSERT ROW = l_allow_insert, 
#                  DELETE ROW = l_allow_delete,
#                  APPEND ROW = l_allow_insert)
# 
#         BEFORE INPUT
#            #add-point:資料輸入前
#            
#            #中斷續拋，不可修改單身
#            IF axmt540_break_continue(g_xmdk_m.xmdk044) THEN
#               EXIT DIALOG
#            END IF
#            
#            
#            IF g_ask THEN
#               LET l_num = 0
#               SELECT COUNT(xmdlseq) INTO l_num
#                 FROM xmdl_t
#                WHERE xmdlent = g_enterprise
#                  AND xmdldocno = g_xmdk_m.xmdkdocno
#           
#               IF l_num = 0 THEN   #單身無輸入資料
#               
#                  LET l_success = FALSE
#                  CALL s_transaction_begin()                      #單身transaction
#
#                  IF g_prog = 'axmt542' THEN   #借貨出貨單'
#                     LET l_msg = 'axm-00579'   #是否由[借貨出貨通知單axmt521]自動產生單身資料！
#                  ELSE
#                     LET l_msg = 'axm-00098'   #是否由[出貨通知單axmt520]自動產生單身資料！
#                  END IF
#
#                  IF NOT cl_null(g_xmdk_m.xmdk005) THEN
#                     IF cl_ask_confirm(l_msg) THEN
#                        CALL axmt540_auto_insert_1() RETURNING l_success #自動帶入出通單單身
#                     END IF
#                  ELSE
#                     IF NOT cl_null(g_xmdk_m.xmdk006) THEN               #自動帶入訂單單身
#                        CALL axmt540_detail_ask() RETURNING l_success
#                     END IF
#                  END IF
#           
#                  IF l_success THEN
#                     #重新計算整單的未稅、含稅總金額
#                     CALL axmt540_tax_recount(g_xmdk_m.xmdkdocno) RETURNING l_success
#                  END IF
#           
#                  IF l_success THEN
#                     CALL s_transaction_end('Y','0')
#                  ELSE
#                     CALL s_transaction_end('N','0')
#                  END IF
#               END IF
#            ELSE
#               LET g_ask = TRUE
#            END IF
#            
#            #end add-point
#            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
#              CALL FGL_SET_ARR_CURR(g_xmdl_d.getLength()+1) 
#              LET g_insert = 'N' 
#           END IF 
# 
#            CALL axmt540_b_fill()
#            #如果一直都在單身1則控制筆數位置
#            IF g_loc = 'm' AND g_rec_b != 0 THEN
#               CALL FGL_SET_ARR_CURR(g_detail_idx)
#            END IF
#            LET g_loc = 'm'
#            LET g_rec_b = g_xmdl_d.getLength()
#            #add-point:資料輸入前
#            
#            #取得單頭稅別應用
#            CALL s_tax_chk(g_site,g_xmdk_m.xmdk012)
#            RETURNING l_success,l_oodbl004,l_oodb005,l_oodb006,g_oodb011
#            
#            #end add-point
#         
#         BEFORE ROW
#            #add-point:modify段before row2
#
#            #end add-point  
#            LET l_insert = FALSE
#            LET l_cmd = ''
#            LET l_ac_t = l_ac 
#            LET l_ac = ARR_CURR()
#            LET g_detail_idx = l_ac
#            LET g_current_page = 1
#            
#            LET l_lock_sw = 'N'            #DEFAULT
#            LET l_n = ARR_COUNT()
#            DISPLAY l_ac TO FORMONLY.idx
#         
#            CALL s_transaction_begin()
#            OPEN axmt540_cl USING g_enterprise,g_xmdk_m.xmdkdocno
#            IF STATUS THEN
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = "OPEN axmt540_cl:" 
#               LET g_errparam.code   = STATUS 
#               LET g_errparam.popup  = TRUE 
#               CALL cl_err()
#               CLOSE axmt540_cl
#               CALL s_transaction_end('N','0')
#               RETURN
#            END IF
#            
#            LET g_rec_b = g_xmdl_d.getLength()
#            
#            IF g_rec_b >= l_ac 
#               AND g_xmdl_d[l_ac].xmdlseq IS NOT NULL
# 
#            THEN
#               LET l_cmd='u'
#               LET g_xmdl_d_t.* = g_xmdl_d[l_ac].*  #BACKUP
#               LET g_xmdl_d_o.* = g_xmdl_d[l_ac].*  #BACKUP
#               CALL axmt540_set_entry_b(l_cmd)
#               #add-point:modify段after_set_entry_b
#
#               #end add-point  
#               CALL axmt540_set_no_entry_b(l_cmd)
#               IF NOT axmt540_lock_b("xmdl_t","'1'") THEN
#                  LET l_lock_sw='Y'
#               ELSE
#                  FETCH axmt540_bcl INTO g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdlseq,g_xmdl_d[l_ac].xmdl001, 
#                      g_xmdl_d[l_ac].xmdl002,g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,g_xmdl_d[l_ac].xmdl005, 
#                      g_xmdl_d[l_ac].xmdl006,g_xmdl_d[l_ac].xmdl007,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009, 
#                      g_xmdl_d[l_ac].xmdl033,g_xmdl_d[l_ac].xmdl011,g_xmdl_d[l_ac].xmdl012,g_xmdl_d[l_ac].xmdl017, 
#                      g_xmdl_d[l_ac].xmdl018,g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl020,g_xmdl_d[l_ac].xmdl010, 
#                      g_xmdl_d[l_ac].xmdl013,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016, 
#                      g_xmdl_d[l_ac].xmdl052,g_xmdl_d[l_ac].xmdl021,g_xmdl_d[l_ac].xmdl022,g_xmdl_d[l_ac].xmdl050, 
#                      g_xmdl_d[l_ac].xmdl023,g_xmdl_d[l_ac].xmdl041,g_xmdl_d[l_ac].xmdl030,g_xmdl_d[l_ac].xmdl031, 
#                      g_xmdl_d[l_ac].xmdl032,g_xmdl_d[l_ac].xmdl051,g_xmdl_d[l_ac].xmdl035,g_xmdl_d[l_ac].xmdl036, 
#                      g_xmdl_d[l_ac].xmdl037,g_xmdl_d[l_ac].xmdl056,g_xmdl_d[l_ac].xmdl088,g_xmdl_d[l_ac].xmdl034, 
#                      g_xmdl2_d[l_ac].xmdlseq,g_xmdl2_d[l_ac].xmdl024,g_xmdl2_d[l_ac].xmdl025,g_xmdl2_d[l_ac].xmdl026, 
#                      g_xmdl2_d[l_ac].xmdl027,g_xmdl2_d[l_ac].xmdl028,g_xmdl2_d[l_ac].xmdl029,g_xmdl2_d[l_ac].xmdl042, 
#                      g_xmdl2_d[l_ac].xmdl043,g_xmdl2_d[l_ac].xmdl044,g_xmdl2_d[l_ac].xmdl045,g_xmdl2_d[l_ac].xmdl046, 
#                      g_xmdl2_d[l_ac].xmdl087
#                  IF SQLCA.sqlcode THEN
#                     INITIALIZE g_errparam TO NULL 
#                     LET g_errparam.extend = g_xmdl_d_t.xmdlseq 
#                     LET g_errparam.code   = SQLCA.sqlcode 
#                     LET g_errparam.popup  = TRUE 
#                     CALL cl_err()
#                     LET l_lock_sw = "Y"
#                  END IF
#                  
#                  #遮罩相關處理
#                  LET g_xmdl_d_mask_o[l_ac].* =  g_xmdl_d[l_ac].*
#                  CALL axmt540_xmdl_t_mask()
#                  LET g_xmdl_d_mask_n[l_ac].* =  g_xmdl_d[l_ac].*
#                  
#                  LET g_bfill = "N"
#                  CALL axmt540_show()
#                  LET g_bfill = "Y"
#                  
#                  CALL cl_show_fld_cont()
#               END IF
#            ELSE
#               LET l_cmd='a'
#            END IF
#            #add-point:modify段before row
#            
#            LET l_xmdlseq_backup = g_xmdl_d[l_ac].xmdlseq  #備份多庫儲批項次
#            LET g_pmao_flag = 'N'
#            
#            #單身Action隱藏
#            CALL axmt540_detail_action_hidden(l_ac)
#            CALL axmt540_set_act_visible_b()
#            CALL axmt540_set_act_no_visible_b()            
#            #end add-point  
#            #其他table資料備份(確定是否更改用)
#            
#            #其他table進行lock
#            
#        
#         BEFORE INSERT  
#            
#            IF s_transaction_chk("N",0) THEN
#               CALL s_transaction_begin()
#            END IF
#            LET l_insert = TRUE
#            LET l_n = ARR_COUNT()
#            LET l_cmd = 'a'
#            INITIALIZE g_xmdl_d[l_ac].* TO NULL 
#            INITIALIZE g_xmdl_d_t.* TO NULL 
#            INITIALIZE g_xmdl_d_o.* TO NULL 
#            #公用欄位給值(單身)
#            
#            #自定義預設值
#                  LET g_xmdl_d[l_ac].xmdl007 = "1"
#      LET g_xmdl_d[l_ac].xmdl018 = "0"
#      LET g_xmdl_d[l_ac].xmdl020 = "0"
#      LET g_xmdl_d[l_ac].xmdl013 = "N"
#      LET g_xmdl_d[l_ac].xmdl022 = "0"
#      LET g_xmdl_d[l_ac].xmdl023 = "Y"
#      LET g_xmdl_d[l_ac].xmdl041 = "N"
#      LET g_xmdl_d[l_ac].xmdl035 = "0"
#      LET g_xmdl_d[l_ac].xmdl036 = "0"
#      LET g_xmdl_d[l_ac].xmdl037 = "0"
#      LET g_xmdl_d[l_ac].xmdl056 = "0"
# 
#            #add-point:modify段before備份
#            LET g_pmao_flag = 'N'
#            LET g_xmdl_d[l_ac].xmdlsite = g_site
#            LET g_xmdl_d[l_ac].xmdl088 = g_xmdk_m.xmdk044  #多角流程代碼
#            
#            #需自立應收否 #151105改為Y
#            LET g_xmdl2_d[l_ac].xmdl087 = "Y"     #需自立應收
#            
##            #150901 earl add s
##            #若為2:銷售多角、3:統銷統收、5:中間交易、7:代採購出貨，自立應收為"N"
##            IF g_xmdk_m.xmdk045 MATCHES "[2357]" THEN
##               LET g_xmdl2_d[l_ac].xmdl087 = "N"
##            ELSE
##               LET g_xmdl2_d[l_ac].xmdl087 = "Y"     #需自立應收
##            END IF
##            #150901 earl add e
#               
#            #預設來源單別
#            IF NOT cl_null(g_xmdk_m.xmdk005) THEN
#               LET g_xmdl_d[l_ac].xmdl001 = g_xmdk_m.xmdk005
#            ELSE
#               LET g_xmdl_d[l_ac].xmdl003 = g_xmdk_m.xmdk006
#            END IF
#
#            #稅別應用為'1'正常稅率帶入單頭的稅率
#            IF g_oodb011 = '1' THEN
#               LET g_xmdl2_d[l_ac].xmdl025 = g_xmdk_m.xmdk012
#               LET g_xmdl2_d[l_ac].xmdl026 = g_xmdk_m.xmdk013
#            END IF
#
#            IF cl_null(g_xmdl_d[l_ac].xmdlseq) THEN
#               SELECT MAX(xmdlseq)+1
#                 INTO g_xmdl_d[l_ac].xmdlseq
#                 FROM xmdl_t
#                WHERE xmdlent = g_enterprise
#                  AND xmdldocno = g_xmdk_m.xmdkdocno 
#
#               IF cl_null(g_xmdl_d[l_ac].xmdlseq) THEN
#                 LET g_xmdl_d[l_ac].xmdlseq = 1
#               END IF
#            END IF
#
#            #end add-point
#            LET g_xmdl_d_t.* = g_xmdl_d[l_ac].*     #新輸入資料
#            LET g_xmdl_d_o.* = g_xmdl_d[l_ac].*     #新輸入資料
#            CALL cl_show_fld_cont()
#            CALL axmt540_set_entry_b(l_cmd)
#            #add-point:modify段after_set_entry_b
#
#            #end add-point
#            CALL axmt540_set_no_entry_b(l_cmd)
#            IF lb_reproduce THEN
#               LET lb_reproduce = FALSE
#               LET g_xmdl_d[li_reproduce_target].* = g_xmdl_d[li_reproduce].*
#               LET g_xmdl2_d[li_reproduce_target].* = g_xmdl2_d[li_reproduce].*
# 
#               LET g_xmdl_d[li_reproduce_target].xmdlseq = NULL
# 
#            END IF
#            
#            #add-point:modify段before insert
#
#            LET l_xmdlseq_backup = g_xmdl_d[l_ac].xmdlseq   #備份多庫儲批項次
#            
#            CALL axmt540_xmdl014_default(g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015)
#            RETURNING g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015  #dorislai-20150824-add
#            
#            #單身Action隱藏
#            CALL axmt540_detail_action_hidden(l_ac)            
#            #end add-point  
#  
#         AFTER INSERT
#            LET l_insert = FALSE
#            IF INT_FLAG THEN
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = '' 
#               LET g_errparam.code   = 9001 
#               LET g_errparam.popup  = FALSE 
#               CALL cl_err()
#               LET INT_FLAG = 0
#               CANCEL INSERT
#            END IF
#               
#            #add-point:單身新增
#            CALL axmt540_row_default()
#            
#            #end add-point
#               
#            LET l_count = 1  
#            SELECT COUNT(1) INTO l_count FROM xmdl_t 
#             WHERE xmdlent = g_enterprise AND xmdldocno = g_xmdk_m.xmdkdocno
# 
#               AND xmdlseq = g_xmdl_d[l_ac].xmdlseq
# 
#                
#            #資料未重複, 插入新增資料
#            IF l_count = 0 THEN 
#               #add-point:單身新增前
#               IF g_pmao_flag = 'Y' THEN
#                  
#                      IF NOT s_axmt500_ins_pmao(g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk007,g_xmdl_d[l_ac].xmdl006,g_xmdl_d[l_ac].xmdl007,g_xmdl_d[l_ac].xmdl033,
#                                                g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010) THEN
#                        LET g_xmdl_d[l_ac].xmdl033 = ''
#                        LET g_xmdl_d[l_ac].l_pmao009 = ''
#                        LET g_xmdl_d[l_ac].l_pmao010 = ''
#                        DISPLAY BY NAME g_xmdl_d[l_ac].xmdl007,g_xmdl_d[l_ac].xmdl033,
#                                                g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
#                      END IF
#                  
#               END IF                
#               #稅額計算
#               CALL s_axmt540_tax_count('',g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,g_site,g_xmdl2_d[l_ac].xmdl025,
#                                        g_xmdl_d[l_ac].xmdl022,g_xmdl2_d[l_ac].xmdl024,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,
#                                        g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,g_xmdl_d[l_ac].xmdl018)
#               RETURNING g_xmdl2_d[l_ac].xmdl027,g_xmdl2_d[l_ac].xmdl028,g_xmdl2_d[l_ac].xmdl029
#               
#               #end add-point
#            
#               #同步新增到同層的table
#                              INITIALIZE gs_keys TO NULL 
#               LET gs_keys[1] = g_xmdk_m.xmdkdocno
#               LET gs_keys[2] = g_xmdl_d[g_detail_idx].xmdlseq
#               CALL axmt540_insert_b('xmdl_t',gs_keys,"'1'")
#                           
#               #add-point:單身新增後
#
#               #end add-point
#            ELSE    
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = 'INSERT' 
#               LET g_errparam.code   = "std-00006" 
#               LET g_errparam.popup  = TRUE 
#               CALL cl_err()
#               INITIALIZE g_xmdl_d[l_ac].* TO NULL
#               CALL s_transaction_end('N','0')
#               CANCEL INSERT
#            END IF
# 
#            IF SQLCA.SQLcode  THEN
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = "xmdl_t" 
#               LET g_errparam.code   = SQLCA.sqlcode 
#               LET g_errparam.popup  = TRUE 
#               CALL cl_err()
#               CALL s_transaction_end('N','0')                    
#               CANCEL INSERT
#            ELSE
#               #先刷新資料
#               #CALL axmt540_b_fill()
#               #資料多語言用-增/改
#               
#               #add-point:input段-after_insert
#               #新增多庫儲批
#               CALL axmt540_01_xmdm_modify('1',l_xmdlseq_backup,g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,
#                                           g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,g_xmdl_d[l_ac].xmdl011,g_xmdl_d[l_ac].xmdl012,
#                                           g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,g_xmdl_d[l_ac].xmdl052,
#                                           g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl020,
#                                           '','') RETURNING l_success
#               IF NOT l_success THEN
#                  CALL s_transaction_end('N','0')
#                  CANCEL INSERT
#               END IF
#               
#               #重新計算整單的未稅、含稅總金額
#               CALL axmt540_tax_recount(g_xmdk_m.xmdkdocno) RETURNING l_success                     
#               IF NOT l_success THEN
#                  CALL s_transaction_end('N','0')
#                  CANCEL INSERT
#               END IF
#
#               CALL s_transaction_end('Y','0')
#               
#               #產品特徵碼insert
#               CALL s_transaction_begin()
#               
#               #若有來源時不可新增多筆產品特徵
#               IF NOT cl_null(g_xmdl_d[l_ac].xmdl001) OR NOT cl_null(g_xmdl_d[l_ac].xmdl003) THEN
#                  CALL l_inam.clear()
#               END IF
#               
#               IF l_inam.getLength() > 1 THEN   #第一筆已呈現在畫面上，固從第二筆開始新增               
#                  LET l_xmdlseq = ''               
#                  INITIALIZE g_xmdl.* TO NULL
#                  
#                  SELECT xmdl001,xmdl002,
#                         xmdl003,xmdl004,xmdl005,xmdl006,
#                         xmdl007,xmdl008,xmdl010,
#                         xmdl011,
#                         xmdl012,xmdl014,xmdl015,xmdl016,
#                         xmdl017,xmdl018,xmdl019,xmdl020,xmdl021,
#                         xmdl022,xmdl023,xmdl024,xmdl025,xmdl026,
#                         xmdl027,xmdl028,xmdl029,xmdl030,xmdl031,
#                         xmdl032,xmdl033,xmdl034,xmdl035,xmdl036,
#                         xmdl037,xmdl038,xmdl039,xmdl040,xmdl041,
#                         xmdl042,xmdl043,xmdl044,xmdl045,xmdl046,
#                         xmdl050,xmdl051,xmdl081,xmdl082,xmdl083,
#                         xmdl084,xmdl087,
#                         xmdl056
#                    INTO g_xmdl.xmdl001,g_xmdl.xmdl002,
#                         g_xmdl.xmdl003,g_xmdl.xmdl004,g_xmdl.xmdl005,g_xmdl.xmdl006,
#                         g_xmdl.xmdl007,g_xmdl.xmdl008,g_xmdl.xmdl010,g_xmdl.xmdl011,
#                         g_xmdl.xmdl012,g_xmdl.xmdl014,g_xmdl.xmdl015,g_xmdl.xmdl016,
#                         g_xmdl.xmdl017,g_xmdl.xmdl018,g_xmdl.xmdl019,g_xmdl.xmdl020,g_xmdl.xmdl021,
#                         g_xmdl.xmdl022,g_xmdl.xmdl023,g_xmdl.xmdl024,g_xmdl.xmdl025,g_xmdl.xmdl026,
#                         g_xmdl.xmdl027,g_xmdl.xmdl028,g_xmdl.xmdl029,g_xmdl.xmdl030,g_xmdl.xmdl031,
#                         g_xmdl.xmdl032,g_xmdl.xmdl033,g_xmdl.xmdl034,g_xmdl.xmdl035,g_xmdl.xmdl036,
#                         g_xmdl.xmdl037,g_xmdl.xmdl038,g_xmdl.xmdl039,g_xmdl.xmdl040,g_xmdl.xmdl041,
#                         g_xmdl.xmdl042,g_xmdl.xmdl043,g_xmdl.xmdl044,g_xmdl.xmdl045,g_xmdl.xmdl046,
#                         g_xmdl.xmdl050,g_xmdl.xmdl051,g_xmdl.xmdl081,g_xmdl.xmdl082,g_xmdl.xmdl083,
#                         g_xmdl.xmdl084,g_xmdl.xmdl087,
#                         g_xmdl.xmdl056
#                    FROM xmdl_t
#                   WHERE xmdlent = g_enterprise
#                     AND xmdldocno = g_xmdk_m.xmdkdocno
#                     AND xmdlseq = g_xmdl_d[l_ac].xmdlseq
#
#                  FOR l_i = 2 TO l_inam.getLength()
#                     SELECT MAX(xmdlseq)+1 INTO l_xmdlseq
#                       FROM xmdl_t
#                      WHERE xmdlent = g_enterprise
#                        AND xmdldocno = g_xmdk_m.xmdkdocno
#                        
#                     #取位
#                     CALL s_aooi250_take_decimals(g_xmdl.xmdl017,l_inam[l_i].inam004) RETURNING l_success,l_inam[l_i].inam004
#
#                     #推算參考數量
#                     IF NOT cl_null(g_xmdl.xmdl008) AND NOT cl_null(g_xmdl.xmdl017) AND
#                        NOT cl_null(g_xmdl.xmdl019) AND NOT cl_null(l_inam[l_i].inam004) THEN
#                        
#                        CALL s_aooi250_convert_qty(g_xmdl.xmdl008,g_xmdl.xmdl017,g_xmdl.xmdl019,l_inam[l_i].inam004)
#                        RETURNING l_success,g_xmdl.xmdl020
#                     ELSE
#                        LET g_xmdl.xmdl020 = ''
#                     END IF  
#
#                     #推算計價數量
#                     IF NOT cl_null(g_xmdl.xmdl008) AND NOT cl_null(g_xmdl.xmdl017) AND
#                        NOT cl_null(g_xmdl.xmdl021) AND NOT cl_null(l_inam[l_i].inam004) THEN
#                        
#                        CALL s_aooi250_convert_qty(g_xmdl.xmdl008,g_xmdl.xmdl017,g_xmdl.xmdl021,l_inam[l_i].inam004)
#                        RETURNING l_success,g_xmdl.xmdl022
#                     ELSE
#                        LET g_xmdl.xmdl022 = ''
#                     END IF
#
#                     #稅額計算                     
#                     CALL s_axmt540_tax_count('',g_xmdk_m.xmdkdocno,l_xmdlseq,g_site,g_xmdl.xmdl025,
#                                              g_xmdl.xmdl022,g_xmdl.xmdl024,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,
#                                              g_xmdl.xmdl003,g_xmdl.xmdl004,l_inam[l_i].inam004)
#                     RETURNING g_xmdl.xmdl027,g_xmdl.xmdl028,g_xmdl.xmdl029                                             
#                        
#                     INSERT INTO xmdl_t (xmdlent,xmdlsite,xmdldocno,xmdlseq,xmdl001,
#                                         xmdl002,xmdl003,xmdl004,xmdl005,xmdl006,
#                                         xmdl007,xmdl008,xmdl009,xmdl010,xmdl011,
#                                         xmdl012,xmdl013,xmdl014,xmdl015,xmdl016,
#                                         xmdl017,xmdl018,xmdl019,xmdl020,xmdl021,
#                                         xmdl022,xmdl023,xmdl024,xmdl025,xmdl026,
#                                         xmdl027,xmdl028,xmdl029,xmdl030,xmdl031,
#                                         xmdl032,xmdl033,xmdl034,xmdl035,xmdl036,
#                                         xmdl037,xmdl038,xmdl039,xmdl040,xmdl041,
#                                         xmdl042,xmdl043,xmdl044,xmdl045,xmdl046,
#                                         xmdl050,xmdl051,xmdl081,xmdl082,xmdl083,
#                                         xmdl084,xmdl087,xmdl088,xmdl052,
#                                         xmdl056)
#                          VALUES (g_enterprise,g_site,g_xmdk_m.xmdkdocno,l_xmdlseq,g_xmdl.xmdl001,
#                                  g_xmdl.xmdl002,g_xmdl.xmdl003,g_xmdl.xmdl004,g_xmdl.xmdl005,g_xmdl.xmdl006,
#                                  g_xmdl.xmdl007,g_xmdl.xmdl008,l_inam[l_i].inam002,g_xmdl.xmdl010,g_xmdl.xmdl011,
#                                  g_xmdl.xmdl012,'N',g_xmdl.xmdl014,g_xmdl.xmdl015,g_xmdl.xmdl016,
#                                  g_xmdl.xmdl017,l_inam[l_i].inam004,g_xmdl.xmdl019,g_xmdl.xmdl020,g_xmdl.xmdl021,
#                                  g_xmdl.xmdl022,g_xmdl.xmdl023,g_xmdl.xmdl024,g_xmdl.xmdl025,g_xmdl.xmdl026,
#                                  g_xmdl.xmdl027,g_xmdl.xmdl028,g_xmdl.xmdl029,g_xmdl.xmdl030,g_xmdl.xmdl031,
#                                  g_xmdl.xmdl032,g_xmdl.xmdl033,g_xmdl.xmdl034,g_xmdl.xmdl035,g_xmdl.xmdl036,
#                                  g_xmdl.xmdl037,g_xmdl.xmdl038,g_xmdl.xmdl039,g_xmdl.xmdl040,g_xmdl.xmdl041,
#                                  g_xmdl.xmdl042,g_xmdl.xmdl043,g_xmdl.xmdl044,g_xmdl.xmdl045,g_xmdl.xmdl046,
#                                  g_xmdl.xmdl050,g_xmdl.xmdl051,g_xmdl.xmdl081,g_xmdl.xmdl082,g_xmdl.xmdl083,
#                                  g_xmdl.xmdl084,g_xmdl.xmdl087,g_xmdl.xmdl088,g_xmdl.xmdl052,
#                                  g_xmdl.xmdl056)
#                     IF SQLCA.sqlcode THEN
#                        INITIALIZE g_errparam TO NULL
#                        LET g_errparam.code = SQLCA.sqlcode
#                        LET g_errparam.extend = "xmdl_t"
#                        LET g_errparam.popup = FALSE
#                        CALL cl_err()
#                        
#                        CALL s_transaction_end('N','0')                    
#                        CANCEL INSERT                        
#                     END IF
#
#                     #新增多庫儲批
#                     CALL axmt540_01_xmdm_modify('1',l_xmdlseq,g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,l_xmdlseq,
#                                                 g_xmdl.xmdl008,l_inam[l_i].inam002,g_xmdl.xmdl011,g_xmdl.xmdl012,
#                                                 g_xmdl.xmdl014,g_xmdl.xmdl015,g_xmdl.xmdl016,g_xmdl.xmdl052,
#                                                 g_xmdl.xmdl017,l_inam[l_i].inam004,g_xmdl.xmdl019,g_xmdl.xmdl020,
#                                                 '','') RETURNING l_success                   
#                     IF NOT l_success THEN 
#                        CALL s_transaction_end('N','0')                    
#                        CANCEL INSERT
#                     END IF
#
#                     #重新計算整單的未稅、含稅總金額
#                     CALL axmt540_tax_recount(g_xmdk_m.xmdkdocno) RETURNING l_success                     
#                     IF NOT l_success THEN
#                        CALL s_transaction_end('N','0')
#                        CANCEL INSERT
#                     END IF
#
#                  END FOR  
#                  CALL axmt540_show()
#                  LET g_rec_b = l_inam.getLength() - 1                  
#               END IF
#                                     
#               #end add-point
#               CALL s_transaction_end('Y','0')
#               #ERROR 'INSERT O.K'
#               LET g_rec_b = g_rec_b + 1
#            END IF
#              
#         BEFORE DELETE                            #是否取消單身
#            IF l_cmd = 'a' THEN
#               LET l_cmd='d'
#               #add-point:單身刪除後(=d)
#               CALL s_transaction_end('N','0')   #151015-xianghui
#               #end add-point
#            ELSE
#               IF NOT cl_ask_del_detail() THEN
#                  CANCEL DELETE
#               END IF
#               IF l_lock_sw = "Y" THEN
#                  INITIALIZE g_errparam TO NULL 
#                  LET g_errparam.extend = "" 
#                  LET g_errparam.code   = -263 
#                  LET g_errparam.popup  = TRUE 
#                  CALL cl_err()
#                  CANCEL DELETE
#               END IF
#               
#               #add-point:單身刪除前
#               #刪除多庫儲批
#               IF NOT axmt540_01_xmdm_delete('1',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'N') THEN                                    
#                  CALL s_transaction_end('N','0')
#                  CLOSE axmt540_bcl
#                  CANCEL DELETE                   
#               END IF
#               
#               #刪除稅額xrcd
#               CALL s_axmt540_tax_delete(g_xmdk_m.xmdkdocno,g_xmdl_d_t.xmdlseq,'2') RETURNING l_success
#               IF NOT l_success THEN
#                  CALL s_transaction_end('N','0')
#                  CLOSE axmt540_bcl
#                  CANCEL DELETE
#               END IF
#
#               #重新計算整單的未稅、含稅總金額
#               CALL axmt540_tax_recount(g_xmdk_m.xmdkdocno) RETURNING l_success                     
#               IF NOT l_success THEN
#                  CALL s_transaction_end('N','0')
#                  CLOSE axmt540_bcl
#                  CANCEL DELETE
#               END IF
#               
#               DELETE FROM inao_t
#                WHERE inaoent = g_enterprise
#                  AND inaodocno = g_xmdk_m.xmdkdocno
#                  AND inaoseq = g_xmdl_d_t.xmdlseq
#               IF SQLCA.sqlcode THEN
#                  CALL s_transaction_end('N','0')
#                  CLOSE axmt540_bcl
#                  CANCEL DELETE
#               END IF 
#            
#               #end add-point 
#               
#               #取得該筆資料key值
#               INITIALIZE gs_keys TO NULL
#               LET gs_keys[01] = g_xmdk_m.xmdkdocno
# 
#               LET gs_keys[gs_keys.getLength()+1] = g_xmdl_d_t.xmdlseq
# 
#            
#               #刪除同層單身
#               IF NOT axmt540_delete_b('xmdl_t',gs_keys,"'1'") THEN
#                  CALL s_transaction_end('N','0')
#                  CLOSE axmt540_bcl
#                  CANCEL DELETE
#               END IF
#    
#               #刪除下層單身
#               IF NOT axmt540_key_delete_b(gs_keys,'xmdl_t') THEN
#                  CALL s_transaction_end('N','0')
#                  CLOSE axmt540_bcl
#                  CANCEL DELETE
#               END IF
#               
#               #刪除多語言
#               
#               
#               #add-point:單身刪除中
#                                                                                                                                       
#               #end add-point 
#               
#               CALL s_transaction_end('Y','0')
#               CLOSE axmt540_bcl
#            
#               LET g_rec_b = g_rec_b-1
#               #add-point:單身刪除後
#
#               #end add-point
#               LET l_count = g_xmdl_d.getLength()
#               
#               #add-point:單身刪除後(<>d)
#
#               #end add-point
#            END IF
# 
#         AFTER DELETE
#            #如果是最後一筆
#            IF l_ac = (g_xmdl_d.getLength() + 1) THEN
#               CALL FGL_SET_ARR_CURR(l_ac-1)
#            END IF
# 
#                  #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdlsite
#            #add-point:BEFORE FIELD xmdlsite
#                                                                                                            
#            #END add-point
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdlsite
#            
#            #add-point:AFTER FIELD xmdlsite
#                                                                                                            
#            #END add-point
#            
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdlsite
#            #add-point:ON CHANGE xmdlsite
#                                                                                                            
#            #END add-point 
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdlseq
#            #應用 a15 樣板自動產生(Version:2)
#            #確認欄位值在特定區間內
#            IF NOT cl_ap_chk_range(g_xmdl_d[l_ac].xmdlseq,"0","0","","","azz-00079",1) THEN
#               NEXT FIELD xmdlseq
#            END IF 
# 
# 
#            #add-point:AFTER FIELD xmdlseq
#            
#            #此段落由子樣板a05產生
#            IF  g_xmdk_m.xmdkdocno IS NOT NULL AND g_xmdl_d[g_detail_idx].xmdlseq IS NOT NULL THEN 
#               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmdk_m.xmdkdocno != g_xmdkdocno_t OR g_xmdl_d[g_detail_idx].xmdlseq != g_xmdl_d_t.xmdlseq)) THEN 
#                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmdl_t WHERE "||"xmdlent = '" ||g_enterprise|| "' AND "||"xmdldocno = '"||g_xmdk_m.xmdkdocno ||"' AND "|| "xmdlseq = '"||g_xmdl_d[g_detail_idx].xmdlseq ||"'",'std-00004',0) THEN 
#                     LET g_xmdl_d[g_detail_idx].xmdlseq = g_xmdl_d_t.xmdlseq
#                     NEXT FIELD CURRENT
#                  END IF
#               END IF
#            END IF
#            
#            #END add-point
#            
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdlseq
#            #add-point:BEFORE FIELD xmdlseq
#
#            #END add-point
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdlseq
#            #add-point:ON CHANGE xmdlseq
#                                                                                                            
#            #END add-point 
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl001
#            #add-point:BEFORE FIELD xmdl001
#
#            #END add-point
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl001
#            
#            #add-point:AFTER FIELD xmdl001
#      
#            IF NOT cl_null(g_xmdl_d[l_ac].xmdl001) THEN
#               #單頭有輸入出通單號
#               IF NOT cl_null(g_xmdk_m.xmdk005) THEN
#                  IF g_xmdl_d[l_ac].xmdl001 <> g_xmdk_m.xmdk005 THEN
#                     INITIALIZE g_errparam TO NULL 
#                     LET g_errparam.extend = "" 
#                     LET g_errparam.code   = "axm-00520"   #單身來源單號不可與單頭不同！
#                     LET g_errparam.popup  = TRUE 
#                     CALL cl_err()
#                     
#                     LET g_xmdl_d[l_ac].xmdl001 = g_xmdl_d_o.xmdl001
#                     LET g_xmdl_d[l_ac].xmdl002 = g_xmdl_d_o.xmdl002                  
#                     NEXT FIELD CURRENT
#                  END IF
#               END IF
#               
#               IF g_xmdl_d[l_ac].xmdl001 <> g_xmdl_d_o.xmdl001 OR cl_null(g_xmdl_d_o.xmdl001) THEN
#
#                  IF NOT axmt540_notice_chk(g_xmdl_d[l_ac].xmdl001,'2') THEN
#                     LET g_xmdl_d[l_ac].xmdl001 = g_xmdl_d_o.xmdl001
#                     LET g_xmdl_d[l_ac].xmdl002 = g_xmdl_d_o.xmdl002
#                     NEXT FIELD CURRENT
#                  END IF
#
#                  IF NOT axmt540_xmdl001_xmdl002_chk() THEN
#                     LET g_xmdl_d[l_ac].xmdl001 = g_xmdl_d_o.xmdl001
#                     LET g_xmdl_d[l_ac].xmdl002 = g_xmdl_d_o.xmdl002
#                     NEXT FIELD CURRENT
#                  END IF
#
#                  #刪除多庫儲批
#                  IF NOT axmt540_01_xmdm_delete('1',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
#                     LET g_xmdl_d[l_ac].xmdl001 = g_xmdl_d_o.xmdl001
#                     LET g_xmdl_d[l_ac].xmdl002 = g_xmdl_d_o.xmdl002
#                     NEXT FIELD CURRENT
#                  ELSE
#                     LET g_xmdl_d[l_ac].xmdl013 = 'N'
#                     LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013
#                  END IF
#
#                  #帶出出通單
#                  IF NOT axmt540_xmdl001_xmdl002_default() THEN
#                     LET g_xmdl_d[l_ac].xmdl001 = g_xmdl_d_o.xmdl001
#                     LET g_xmdl_d[l_ac].xmdl002 = g_xmdl_d_o.xmdl002
#                     NEXT FIELD CURRENT
#                  END IF
#                  
#               END IF
#               
#            ELSE
#               #刪除多庫儲批
#               IF NOT axmt540_01_xmdm_delete('1',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
#                  LET g_xmdl_d[l_ac].xmdl001 = g_xmdl_d_o.xmdl001
#                  LET g_xmdl_d[l_ac].xmdl002 = g_xmdl_d_o.xmdl002
#                  NEXT FIELD CURRENT
#               ELSE
#                  LET g_xmdl_d[l_ac].xmdl013 = 'N'
#                  LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013
#               END IF            
#            
#               #清空出通單欄位
#               IF NOT axmt540_xmdl001_xmdl002_default() THEN
#                  LET g_xmdl_d[l_ac].xmdl001 = g_xmdl_d_o.xmdl001
#                  LET g_xmdl_d[l_ac].xmdl002 = g_xmdl_d_o.xmdl002
#                  NEXT FIELD CURRENT
#               END IF
#            END IF 
#
#            LET g_xmdl_d_o.xmdl001 = g_xmdl_d[l_ac].xmdl001
#            LET g_xmdl_d_o.xmdl002 = g_xmdl_d[l_ac].xmdl002
#
#            CALL axmt540_set_entry_b(l_cmd)
#            CALL axmt540_set_no_entry_b(l_cmd)
#            
#            #單身Action隱藏
#            CALL axmt540_detail_action_hidden(l_ac)
#            
#            #END add-point
#            
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl001
#            #add-point:ON CHANGE xmdl001
#                                                                                                            
#            #END add-point 
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl002
#            
#            #add-point:AFTER FIELD xmdl002
#                                                            
#            IF NOT cl_null(g_xmdl_d[l_ac].xmdl002) THEN 
#               IF g_xmdl_d[l_ac].xmdl002 <> g_xmdl_d_o.xmdl002 OR cl_null(g_xmdl_d_o.xmdl002) THEN
#               
#                  #刪除多庫儲批
#                  IF NOT axmt540_01_xmdm_delete('1',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
#                     LET g_xmdl_d[l_ac].xmdl002 = g_xmdl_d_o.xmdl002
#                     NEXT FIELD CURRENT                   
#                  ELSE
#                     LET g_xmdl_d[l_ac].xmdl013 = 'N'
#                     LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013
#                  END IF
#               
#                  IF NOT axmt540_xmdl001_xmdl002_chk() THEN
#                     LET g_xmdl_d[l_ac].xmdl002 = g_xmdl_d_o.xmdl002
#                     NEXT FIELD CURRENT
#                  END IF
#                  
#                  #帶出出通單
#                  IF NOT axmt540_xmdl001_xmdl002_default() THEN
#                     LET g_xmdl_d[l_ac].xmdl002 = g_xmdl_d_o.xmdl002
#                     NEXT FIELD CURRENT
#                  END IF
#                  
#               END IF
#            ELSE
#               #刪除多庫儲批
#               IF NOT axmt540_01_xmdm_delete('1',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
#                  LET g_xmdl_d[l_ac].xmdl002 = g_xmdl_d_o.xmdl002
#                  NEXT FIELD CURRENT                   
#               ELSE
#                  LET g_xmdl_d[l_ac].xmdl013 = 'N'
#                  LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013
#               END IF            
#            
#               #清空出通單欄位
#               IF NOT axmt540_xmdl001_xmdl002_default() THEN
#                  LET g_xmdl_d[l_ac].xmdl002 = g_xmdl_d_o.xmdl002
#                  NEXT FIELD CURRENT
#               END IF
#            END IF 
#
#            LET g_xmdl_d_o.xmdl002 = g_xmdl_d[l_ac].xmdl002
#
#            CALL axmt540_set_entry_b(l_cmd)
#            CALL axmt540_set_no_entry_b(l_cmd)
#            #END add-point
#            
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl002
#            #add-point:BEFORE FIELD xmdl002
#                                                                                           
#            #END add-point
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl002
#            #add-point:ON CHANGE xmdl002
#                                                                                                            
#            #END add-point 
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl003
#            #add-point:BEFORE FIELD xmdl003
#                                                       
#            #END add-point
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl003
#            
#            #add-point:AFTER FIELD xmdl003
#                                    
#            IF NOT cl_null(g_xmdl_d[l_ac].xmdl003) THEN
#               #單頭有輸入出通單號
#               IF NOT cl_null(g_xmdk_m.xmdk006) THEN
#                  IF g_xmdl_d[l_ac].xmdl003 <> g_xmdk_m.xmdk006 THEN
#                     INITIALIZE g_errparam TO NULL 
#                     LET g_errparam.extend = "" 
#                     LET g_errparam.code   = "axm-00520"   #單身來源單號不可與單頭不同！
#                     LET g_errparam.popup  = TRUE 
#                     CALL cl_err()
#                     
#                     LET g_xmdl_d[l_ac].xmdl003 = g_xmdl_d_o.xmdl003
#                     LET g_xmdl_d[l_ac].xmdl004 = g_xmdl_d_o.xmdl004
#                     LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
#                     LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
#                     NEXT FIELD CURRENT
#                  END IF
#               END IF
#            
#               IF g_xmdl_d[l_ac].xmdl003 <> g_xmdl_d_o.xmdl003 OR cl_null(g_xmdl_d_o.xmdl003) THEN                  
#                  IF NOT cl_null(g_xmdl_d[l_ac].xmdl001) AND cl_null(g_xmdl_d[l_ac].xmdl002) THEN #費用料號(來源為出通單)
#                     LET l_num = 0
#                     SELECT COUNT(xmdhseq) INTO l_num
#                       FROM xmdh_t
#                      WHERE xmdhent = g_enterprise
#                        AND xmdhdocno = g_xmdl_d[l_ac].xmdl001
#                        AND xmdh001 = g_xmdl_d[l_ac].xmdl003
#
#                     IF l_num = 0 THEN
#                        INITIALIZE g_errparam TO NULL 
#                        LET g_errparam.extend = "" 
#                        
#                        CASE g_prog
#                           WHEN 'axmt542'
#                              LET g_errparam.code   = "axm-00591"  #輸入的資料不存在出通單單身明細檔中！
#                           OTHERWISE
#                              LET g_errparam.code   = "axm-00069"  #輸入的資料不存在出通單單身明細檔中！
#                        END CASE
#                        
#                        LET g_errparam.popup  = TRUE
#                        CALL cl_err()
#                        
#                        LET g_xmdl_d[l_ac].xmdl003 = g_xmdl_d_o.xmdl003
#                        LET g_xmdl_d[l_ac].xmdl004 = g_xmdl_d_o.xmdl004
#                        LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
#                        LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
#                        NEXT FIELD CURRENT
#                        
#                     END IF
#                                          
#                  ELSE
#                     IF NOT axmt540_order_chk(g_xmdl_d[l_ac].xmdl003,'2') THEN
#                        LET g_xmdl_d[l_ac].xmdl003 = g_xmdl_d_o.xmdl003
#                        LET g_xmdl_d[l_ac].xmdl004 = g_xmdl_d_o.xmdl004
#                        LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
#                        LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
#                        NEXT FIELD CURRENT
#                     END IF
#                 
#                     CALL axmt540_xmdl005_count()   #若項序唯一自動產生
#                     CALL axmt540_xmdl006_count()   #若分批序唯一自動產生
#                 
#                     IF NOT axmt540_xmdl003_xmdl004_xmdl005_xmdl006_chk() THEN
#                        LET g_xmdl_d[l_ac].xmdl003 = g_xmdl_d_o.xmdl003
#                        LET g_xmdl_d[l_ac].xmdl004 = g_xmdl_d_o.xmdl004
#                        LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
#                        LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
#                        NEXT FIELD CURRENT
#                     END IF
#                     
#                     IF NOT axmt540_xmdl003_xmdl004_xmdl005_xmdl006_default() THEN  #帶出訂單
#                        LET g_xmdl_d[l_ac].xmdl003 = g_xmdl_d_o.xmdl003
#                        LET g_xmdl_d[l_ac].xmdl004 = g_xmdl_d_o.xmdl004
#                        LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
#                        LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
#                        NEXT FIELD CURRENT
#                     END IF
#                  END IF
#                  
#                  #刪除多庫儲批
#                  IF NOT axmt540_01_xmdm_delete('1',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
#                     LET g_xmdl_d[l_ac].xmdl003 = g_xmdl_d_o.xmdl003
#                     LET g_xmdl_d[l_ac].xmdl004 = g_xmdl_d_o.xmdl004
#                     LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
#                     LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
#                     NEXT FIELD CURRENT
#                  ELSE
#                     LET g_xmdl_d[l_ac].xmdl013 = 'N'
#                     LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013
#                  END IF
#                  
#               END IF
#               
#            ELSE
#               #刪除多庫儲批
#               IF NOT axmt540_01_xmdm_delete('1',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
#                  LET g_xmdl_d[l_ac].xmdl003 = g_xmdl_d_o.xmdl003
#                  LET g_xmdl_d[l_ac].xmdl004 = g_xmdl_d_o.xmdl004
#                  LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
#                  LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
#                  NEXT FIELD CURRENT                   
#               ELSE
#                  LET g_xmdl_d[l_ac].xmdl013 = 'N'
#                  LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013
#               END IF
#               
#               #清空訂單欄位
#               IF NOT axmt540_xmdl003_xmdl004_xmdl005_xmdl006_default() THEN
#                  LET g_xmdl_d[l_ac].xmdl003 = g_xmdl_d_o.xmdl003
#                  LET g_xmdl_d[l_ac].xmdl004 = g_xmdl_d_o.xmdl004
#                  LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
#                  LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
#                  NEXT FIELD CURRENT
#               END IF
#            END IF 
#
#            LET g_xmdl_d_o.xmdl003 = g_xmdl_d[l_ac].xmdl003
#            LET g_xmdl_d_o.xmdl004 = g_xmdl_d[l_ac].xmdl004
#            LET g_xmdl_d_o.xmdl005 = g_xmdl_d[l_ac].xmdl005
#            LET g_xmdl_d_o.xmdl006 = g_xmdl_d[l_ac].xmdl006
#
#            CALL axmt540_set_entry_b(l_cmd) 
#            CALL axmt540_set_no_entry_b(l_cmd)
#            CALL axmt540_set_act_visible_b()
#            CALL axmt540_set_act_no_visible_b()            
#            #END add-point
#            
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl003
#            #add-point:ON CHANGE xmdl003
#                                                                                                            
#            #END add-point 
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl004
#            
#            #add-point:AFTER FIELD xmdl004
#                                                     
#            IF NOT cl_null(g_xmdl_d[l_ac].xmdl004) THEN
#               IF g_xmdl_d[l_ac].xmdl004 <> g_xmdl_d_o.xmdl004 OR cl_null(g_xmdl_d_o.xmdl004) THEN                  
#
#                  #刪除多庫儲批
#                  IF NOT axmt540_01_xmdm_delete('1',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
#                     LET g_xmdl_d[l_ac].xmdl004 = g_xmdl_d_o.xmdl004
#                     LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
#                     LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
#                     NEXT FIELD CURRENT                   
#                  ELSE
#                     LET g_xmdl_d[l_ac].xmdl013 = 'N'
#                     LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013
#                  END IF
#
#                  CALL axmt540_xmdl005_count()    #若項序唯一自動產生
#                  CALL axmt540_xmdl006_count()    #若分批序唯一自動產生
#
#                  IF NOT axmt540_xmdl003_xmdl004_xmdl005_xmdl006_chk() THEN
#                     LET g_xmdl_d[l_ac].xmdl004 = g_xmdl_d_o.xmdl004
#                     LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
#                     LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
#                     NEXT FIELD CURRENT
#                  END IF
#                  
#                  IF NOT axmt540_xmdl003_xmdl004_xmdl005_xmdl006_default() THEN  #帶出訂單
#                     LET g_xmdl_d[l_ac].xmdl004 = g_xmdl_d_o.xmdl004
#                     LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
#                     LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
#                     NEXT FIELD CURRENT
#                  END IF  
#                  
#               END IF
#               
#            ELSE
#               #刪除多庫儲批
#               IF NOT axmt540_01_xmdm_delete('1',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
#                  LET g_xmdl_d[l_ac].xmdl004 = g_xmdl_d_o.xmdl004
#                  LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
#                  LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
#                  NEXT FIELD CURRENT                   
#               ELSE
#                  LET g_xmdl_d[l_ac].xmdl013 = 'N'
#                  LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013
#               END IF
#               
#               #清空訂單欄位
#               IF NOT axmt540_xmdl003_xmdl004_xmdl005_xmdl006_default() THEN
#                  LET g_xmdl_d[l_ac].xmdl004 = g_xmdl_d_o.xmdl004
#                  LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
#                  LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
#                  NEXT FIELD CURRENT
#               END IF
#
#            END IF 
#
#            LET g_xmdl_d_o.xmdl004 = g_xmdl_d[l_ac].xmdl004
#            LET g_xmdl_d_o.xmdl005 = g_xmdl_d[l_ac].xmdl005
#            LET g_xmdl_d_o.xmdl006 = g_xmdl_d[l_ac].xmdl006
#
#            CALL axmt540_set_entry_b(l_cmd) 
#            CALL axmt540_set_no_entry_b(l_cmd)
#            #END add-point
#            
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl004
#            #add-point:BEFORE FIELD xmdl004
#                                                                                               
#            #END add-point
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl004
#            #add-point:ON CHANGE xmdl004
#                                                                                                            
#            #END add-point 
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl005
#            
#            #add-point:AFTER FIELD xmdl005
#                                                 
#            IF NOT cl_null(g_xmdl_d[l_ac].xmdl005) THEN
#               IF g_xmdl_d[l_ac].xmdl005 <> g_xmdl_d_o.xmdl005 OR cl_null(g_xmdl_d_o.xmdl005) THEN
#
#                  #刪除多庫儲批
#                  IF NOT axmt540_01_xmdm_delete('1',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
#                     LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
#                     LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
#                     NEXT FIELD CURRENT                   
#                  ELSE
#                     LET g_xmdl_d[l_ac].xmdl013 = 'N'
#                     LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013
#                  END IF
#
#                  CALL axmt540_xmdl006_count()   #若分批序唯一自動產生
#
#                  IF NOT axmt540_xmdl003_xmdl004_xmdl005_xmdl006_chk() THEN
#                     LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
#                     LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
#                     NEXT FIELD CURRENT
#                  END IF
#                  
#                  IF NOT axmt540_xmdl003_xmdl004_xmdl005_xmdl006_default() THEN  #帶出訂單
#                     LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
#                     LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
#                     NEXT FIELD CURRENT
#                  END IF  
#                  
#               END IF
#               
#            ELSE
#               #刪除多庫儲批
#               IF NOT axmt540_01_xmdm_delete('1',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
#                  LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
#                  LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
#                  NEXT FIELD CURRENT                   
#               ELSE
#                  LET g_xmdl_d[l_ac].xmdl013 = 'N'
#                  LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013
#               END IF
#
#               #清空訂單欄位
#               IF NOT axmt540_xmdl003_xmdl004_xmdl005_xmdl006_default() THEN
#                  LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
#                  LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
#                  NEXT FIELD CURRENT
#               END IF  
#            END IF
#
#            LET g_xmdl_d_o.xmdl005 = g_xmdl_d[l_ac].xmdl005
#            LET g_xmdl_d_o.xmdl006 = g_xmdl_d[l_ac].xmdl006
#            CALL axmt540_set_act_visible_b()
#            CALL axmt540_set_act_no_visible_b()            
#            #END add-point
#            
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl005
#            #add-point:BEFORE FIELD xmdl005
#                                                                                                            
#            #END add-point
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl005
#            #add-point:ON CHANGE xmdl005
#                                                                                                            
#            #END add-point 
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl006
#            
#            #add-point:AFTER FIELD xmdl006
#                                                 
#            IF NOT cl_null(g_xmdl_d[l_ac].xmdl006) THEN
#               IF g_xmdl_d[l_ac].xmdl006 <> g_xmdl_d_o.xmdl006 OR cl_null(g_xmdl_d_o.xmdl006) THEN
#                  
#                  #刪除多庫儲批
#                  IF NOT axmt540_01_xmdm_delete('1',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
#                     LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
#                     NEXT FIELD CURRENT                   
#                  ELSE
#                     LET g_xmdl_d[l_ac].xmdl013 = 'N'
#                     LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013
#                  END IF
#                  
#                  IF NOT axmt540_xmdl003_xmdl004_xmdl005_xmdl006_chk() THEN
#                     LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
#                     NEXT FIELD CURRENT
#                  END IF
#                  
#                  IF NOT axmt540_xmdl003_xmdl004_xmdl005_xmdl006_default() THEN  #帶出訂單
#                     LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
#                     NEXT FIELD CURRENT
#                  END IF  
#                  
#               END IF
#            ELSE
#               #刪除多庫儲批
#               IF NOT axmt540_01_xmdm_delete('1',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
#                  LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
#                  NEXT FIELD CURRENT                   
#               ELSE
#                  LET g_xmdl_d[l_ac].xmdl013 = 'N'
#                  LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013
#               END IF
#
#               #清空訂單欄位
#               IF NOT axmt540_xmdl003_xmdl004_xmdl005_xmdl006_default() THEN
#                  LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
#                  NEXT FIELD CURRENT
#               END IF  
#
#            END IF
#
#            LET g_xmdl_d_o.xmdl006 = g_xmdl_d[l_ac].xmdl006
#            CALL axmt540_set_act_visible_b()
#            CALL axmt540_set_act_no_visible_b()            
#            #END add-point
#            
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl006
#            #add-point:BEFORE FIELD xmdl006
#                                                                                                            
#            #END add-point
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl006
#            #add-point:ON CHANGE xmdl006
#                                                                                                            
#            #END add-point 
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl007
#            #add-point:BEFORE FIELD xmdl007
#                                                                                                            
#            #END add-point
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl007
#            
#            #add-point:AFTER FIELD xmdl007
#                        
#            IF NOT cl_null(g_xmdl_d[l_ac].xmdl007) THEN
#               IF g_xmdl_d[l_ac].xmdl007 <> g_xmdl_d_o.xmdl007 OR cl_null(g_xmdl_d_o.xmdl007) THEN
#
##改用no_entry去卡
##                  IF NOT axmt540_xmdl007_chk() THEN
##                     LET g_xmdl_d[l_ac].xmdl007 = g_xmdl_d_o.xmdl007
##                     NEXT FIELD CURRENT
##                  END IF
#                  
#                  LET g_xmdl2_d[l_ac].xmdl024 = 0
#                  LET g_xmdl2_d_o.xmdl024 = g_xmdl2_d[l_ac].xmdl024
#               END IF
#            END IF
#
#            LET g_xmdl_d_o.xmdl007 = g_xmdl_d[l_ac].xmdl007
#
#            CALL axmt540_set_entry_b(l_cmd)
#            CALL axmt540_set_no_entry_b(l_cmd)
#            #END add-point
#            
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl007
#            #add-point:ON CHANGE xmdl007
#                                                                                                
#            #END add-point 
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl008
#            
#            #add-point:AFTER FIELD xmdl008
#            CALL s_desc_get_item_desc(g_xmdl_d[l_ac].xmdl008)RETURNING g_xmdl_d[l_ac].xmdl008_desc,g_xmdl_d[l_ac].xmdl008_desc_desc
#                        
#            IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) THEN 
#               IF g_xmdl_d[l_ac].xmdl008 <> g_xmdl_d_o.xmdl008 OR cl_null(g_xmdl_d_o.xmdl008) THEN
#
#                  #判斷料件是否存在產品特徵
#                  CALL s_axmt500_get_imaa005(g_enterprise,g_xmdl_d[l_ac].xmdl008) RETURNING l_imaa005
#                  IF cl_null(l_imaa005) THEN
#                     LET g_xmdl_d[l_ac].xmdl009 = ' '
#                  ELSE
#                     LET g_xmdl_d[l_ac].xmdl009 = ''
#                  END IF  
#                  CALL s_feature_description(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,g_xmdl_d[l_ac].xmdl009_desc
#
#                  IF NOT axmt540_xmdl008_chk() THEN
#                     LET g_xmdl_d[l_ac].xmdl008 = g_xmdl_d_o.xmdl008
#                     LET g_xmdl_d[l_ac].xmdl009 = g_xmdl_d_o.xmdl009
#                     CALL s_desc_get_item_desc(g_xmdl_d[l_ac].xmdl008)RETURNING g_xmdl_d[l_ac].xmdl008_desc,g_xmdl_d[l_ac].xmdl008_desc_desc
#                     CALL s_feature_description(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,g_xmdl_d[l_ac].xmdl009_desc
#
#                     NEXT FIELD CURRENT
#                  END IF
#
#                  #檢查批號
#                  IF NOT s_axmt540_xmdl016_chk(g_xmdh011,g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,
#                                               g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,g_xmdl_d[l_ac].xmdl016) THEN
#                     LET g_xmdl_d[l_ac].xmdl008 = g_xmdl_d_o.xmdl008
#                     LET g_xmdl_d[l_ac].xmdl009 = g_xmdl_d_o.xmdl009
#                     CALL s_desc_get_item_desc(g_xmdl_d[l_ac].xmdl008)RETURNING g_xmdl_d[l_ac].xmdl008_desc,g_xmdl_d[l_ac].xmdl008_desc_desc
#                     CALL s_feature_description(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,g_xmdl_d[l_ac].xmdl009_desc
#
#                     NEXT FIELD CURRENT
#                  END IF
#
#                  #刪除多庫儲批
#                  IF NOT axmt540_01_xmdm_delete('1',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
#                     LET g_xmdl_d[l_ac].xmdl008 = g_xmdl_d_o.xmdl008
#                     LET g_xmdl_d[l_ac].xmdl009 = g_xmdl_d_o.xmdl009
#                     CALL s_desc_get_item_desc(g_xmdl_d[l_ac].xmdl008)RETURNING g_xmdl_d[l_ac].xmdl008_desc,g_xmdl_d[l_ac].xmdl008_desc_desc
#                     CALL s_feature_description(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,g_xmdl_d[l_ac].xmdl009_desc
#                     
#                     NEXT FIELD CURRENT
#                  ELSE
#                     LET g_xmdl_d[l_ac].xmdl013 = 'N'
#                     LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013
#                  END IF                      
#
#                  #若稅別應用為2.依料件設定，呼叫應用元件帶出稅別、稅率
#                  IF g_oodb011 = '2' THEN
#                     CALL s_tax_chktype(g_site,g_xmdk_m.xmdk007,g_xmdl_d[l_ac].xmdl008,'1',g_xmdk_m.xmdk031)
#                     RETURNING l_success,l_oodb002,l_oodb006
#
#                     IF NOT l_success THEN
#                        LET g_xmdl2_d[l_ac].xmdl025 = ''
#                        LET g_xmdl2_d[l_ac].xmdl026 = ''
#                     ELSE                     
#                        LET g_xmdl2_d[l_ac].xmdl025 = l_oodb002
#                        LET g_xmdl2_d[l_ac].xmdl026 = l_oodb006
#                     END IF
#                     
#                  ELSE
#                     LET g_xmdl2_d[l_ac].xmdl025 = g_xmdk_m.xmdk012   #稅別
#                     LET g_xmdl2_d[l_ac].xmdl026 = g_xmdk_m.xmdk013   #稅率
#                  END IF
#                  
#                  LET g_xmdl2_d_o.xmdl025 = g_xmdl2_d[l_ac].xmdl025
#                  LET g_xmdl2_d_o.xmdl026 = g_xmdl2_d[l_ac].xmdl026
#                  
#                  #料號預帶欄位
#                  CALL axmt540_xmdl008_default()
#                  
#                  #顯示客戶料號
#                  CALL s_axmt540_client_no(g_xmdk_m.xmdk007,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,l_xmdl033
#                  IF l_success THEN
#                     LET g_xmdl_d[l_ac].xmdl033 = l_xmdl033
#                     LET g_xmdl_d_o.xmdl033 = g_xmdl_d[l_ac].xmdl033
#                  ELSE
#                     LET g_xmdl_d[l_ac].xmdl033 = ''
#                     LET g_xmdl_d_o.xmdl033 = g_xmdl_d[l_ac].xmdl033
#                  END IF                  
#                  SELECT pmao009,pmao010
#                    INTO g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
#                    FROM pmao_t
#                   WHERE pmaoent = g_enterprise
#                     AND pmao001 = g_xmdk_m.xmdk007
#                     AND pmao002 = g_xmdl_d[l_ac].xmdl008
#                     AND pmao003 = g_xmdl_d[l_ac].xmdl009
#                     AND pmao004 = g_xmdl_d[l_ac].xmdl033                     
#                  DISPLAY BY NAME g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
#               END IF 
#            END IF
#                                                            
#            LET g_xmdl_d_o.xmdl008 = g_xmdl_d[l_ac].xmdl008
#            LET g_xmdl_d_o.xmdl009 = g_xmdl_d[l_ac].xmdl009
#            
#            CALL axmt540_set_entry_b(l_cmd)  
#            CALL axmt540_set_no_entry_b(l_cmd)
#            CALL axmt540_set_act_visible_b()
#            CALL axmt540_set_act_no_visible_b()            
#            #END add-point
#            
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl008
#            #add-point:BEFORE FIELD xmdl008
#
#            #END add-point
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl008
#            #add-point:ON CHANGE xmdl008
#                                                                                                            
#            #END add-point 
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl009
#            
#            #add-point:AFTER FIELD xmdl009
#            CALL s_feature_description(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,g_xmdl_d[l_ac].xmdl009_desc
#            
#            IF NOT cl_null(g_xmdl_d[l_ac].xmdl009) THEN 
#               IF g_xmdl_d[l_ac].xmdl009 <> g_xmdl_d_o.xmdl009 OR cl_null(g_xmdl_d_o.xmdl009) THEN
#                          
#                  #產品特徵、替代料號檢查
#                  IF NOT axmt540_xmdl008_xmdl009_chk() THEN
#                     LET g_xmdl_d[l_ac].xmdl009 = g_xmdl_d_o.xmdl009
#                     CALL s_feature_description(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,g_xmdl_d[l_ac].xmdl009_desc
#
#                     NEXT FIELD CURRENT
#                  END IF             
#
#                  #檢查批號
#                  IF NOT s_axmt540_xmdl016_chk(g_xmdh011,g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,
#                                               g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,g_xmdl_d[l_ac].xmdl016) THEN
#                     LET g_xmdl_d[l_ac].xmdl009 = g_xmdl_d_o.xmdl009
#                     CALL s_feature_description(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,g_xmdl_d[l_ac].xmdl009_desc
#
#                     NEXT FIELD CURRENT
#                  END IF
#
#                  #刪除多庫儲批
#                  IF NOT axmt540_01_xmdm_delete('1',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
#                     LET g_xmdl_d[l_ac].xmdl009 = g_xmdl_d_o.xmdl009
#                     CALL s_feature_description(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,g_xmdl_d[l_ac].xmdl009_desc
#                     
#                     NEXT FIELD CURRENT                     
#                  ELSE
#                     LET g_xmdl_d[l_ac].xmdl013 = 'N'
#                     LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013
#                  END IF                     
#
#                  #料號預帶欄位
#                  CALL axmt540_xmdl008_default()
#
#                  #顯示客戶料號
#                  CALL s_axmt540_client_no(g_xmdk_m.xmdk007,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,l_xmdl033
#                  IF l_success THEN
#                     LET g_xmdl_d[l_ac].xmdl033 = l_xmdl033
#                     LET g_xmdl_d_o.xmdl033 = g_xmdl_d[l_ac].xmdl033
#                  ELSE
#                     LET g_xmdl_d[l_ac].xmdl033 = ''
#                     LET g_xmdl_d_o.xmdl033 = g_xmdl_d[l_ac].xmdl033            
#                  END IF                  
#                  SELECT pmao009,pmao010
#                    INTO g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
#                    FROM pmao_t
#                   WHERE pmaoent = g_enterprise
#                     AND pmao001 = g_xmdk_m.xmdk007
#                     AND pmao002 = g_xmdl_d[l_ac].xmdl006
#                     AND pmao003 = g_xmdl_d[l_ac].xmdl007
#                     AND pmao004 = g_xmdl_d[l_ac].xmdl033                     
#                  DISPLAY BY NAME g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
#                  #數量檢查
#                  IF NOT axmt540_xmdl018_chk() THEN
#                     LET g_xmdl_d[l_ac].xmdl018 = ''
#                  END IF
#                  
#               END IF
#            END IF            
#            
#            LET g_xmdl_d_o.xmdl009 = g_xmdl_d[l_ac].xmdl009
#
#            #END add-point
#            
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl009
#            #add-point:BEFORE FIELD xmdl009
#              
#            #必須先輸入料號            
#            IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) THEN
#               #無來源時才可新增多筆產品特徵
#               IF cl_null(g_xmdl_d[l_ac].xmdl001) AND cl_null(g_xmdl_d[l_ac].xmdl003) THEN
#                  #取得產品特徵類別
#                  CALL s_axmt500_get_imaa005(g_enterprise,g_xmdl_d[l_ac].xmdl008) RETURNING l_imaa005
#
#                  IF NOT cl_null(l_imaa005) THEN
#                     CALL l_inam.clear()
#                     
#                     IF l_cmd = 'a' AND cl_null(g_xmdl_d[l_ac].xmdl009) THEN   #新增且無值時開啟
#                        CALL s_feature_multi(g_xmdl_d[l_ac].xmdl008,'','',g_site,g_xmdk_m.xmdkdocno) RETURNING l_success,l_inam
#                        IF l_success THEN
#                           LET g_xmdl_d[l_ac].xmdl009 = l_inam[1].inam002
#                           LET g_xmdl_d[l_ac].xmdl018 = l_inam[1].inam004
#
#                        END IF
#
#                     END IF
#                  END IF
#               END IF
#            END IF
#            
#            CALL s_feature_description(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,g_xmdl_d[l_ac].xmdl009_desc
#            #END add-point
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl009
#            #add-point:ON CHANGE xmdl009
#                                                                                                            
#            #END add-point 
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl009_desc
#            #add-point:BEFORE FIELD xmdl009_desc
#
#            #END add-point
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl009_desc
#            
#            #add-point:AFTER FIELD xmdl009_desc
#
#            #END add-point
#            
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl009_desc
#            #add-point:ON CHANGE xmdl009_desc
#
#            #END add-point 
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl033
#            
#            #add-point:AFTER FIELD xmdl033
#            IF NOT cl_null(g_xmdl_d[l_ac].xmdl033) THEN 
#               IF g_xmdl_d[l_ac].xmdl033 <> g_xmdl_d_o.xmdl033 OR cl_null(g_xmdl_d_o.xmdl033) THEN
#                
#                  #顯示客戶料號
#                  CALL s_axmt540_makings_no(g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk007,
#                                            g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,g_xmdl_d[l_ac].xmdl033)
#                  RETURNING l_success,l_xmdl008,l_xmdl009
#                          ,g_pmao_flag          
#                  IF NOT l_success THEN
#                     LET g_xmdl_d[l_ac].xmdl033 = g_xmdl_d_o.xmdl033
#                     LET g_xmdl_d[l_ac].l_pmao009 = g_xmdl_d_o.l_pmao009
#                     LET g_xmdl_d[l_ac].l_pmao010 = g_xmdl_d_o.l_pmao010
#                     DISPLAY BY NAME g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
#                     NEXT FIELD CURRENT
#                  ELSE
#                     LET g_xmdl_d[l_ac].xmdl008 = l_xmdl008
#                     LET g_xmdl_d[l_ac].xmdl009 = l_xmdl009
#                  END IF
#   
#                  #料號檢查
#                  IF NOT axmt540_xmdl008_chk() THEN
#                     LET g_xmdl_d[l_ac].xmdl008 = g_xmdl_d_o.xmdl008
#                     LET g_xmdl_d[l_ac].xmdl009 = g_xmdl_d_o.xmdl009
#                     LET g_xmdl_d[l_ac].xmdl033 = g_xmdl_d_o.xmdl033
#                     LET g_xmdl_d[l_ac].l_pmao009 = g_xmdl_d_o.l_pmao009
#                     LET g_xmdl_d[l_ac].l_pmao010 = g_xmdl_d_o.l_pmao010
#                     DISPLAY BY NAME g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
#                     CALL s_desc_get_item_desc(g_xmdl_d[l_ac].xmdl008)RETURNING g_xmdl_d[l_ac].xmdl008_desc,g_xmdl_d[l_ac].xmdl008_desc_desc
#               
#                     NEXT FIELD CURRENT
#                  END IF
#                  SELECT pmao009,pmao010
#                    INTO g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
#                    FROM pmao_t
#                   WHERE pmaoent = g_enterprise
#                     AND pmao001 = g_xmdk_m.xmdk007
#                     AND pmao002 = g_xmdl_d[l_ac].xmdl008
#                     AND pmao003 = g_xmdl_d[l_ac].xmdl009
#                     AND pmao004 = g_xmdl_d[l_ac].xmdl033                     
#                  DISPLAY BY NAME g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
#               ELSE
#                  LET g_xmdl_d[l_ac].l_pmao009 =''
#                  LET g_xmdl_d[l_ac].l_pmao010 =''
#                  DISPLAY BY NAME g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
#               END IF
#               
#               LET g_xmdl_d_o.xmdl008 = g_xmdl_d[l_ac].xmdl008
#               LET g_xmdl_d_o.xmdl009 = g_xmdl_d[l_ac].xmdl009
#               CALL s_desc_get_item_desc(g_xmdl_d[l_ac].xmdl008)RETURNING g_xmdl_d[l_ac].xmdl008_desc,g_xmdl_d[l_ac].xmdl008_desc_desc
#
#            END IF
#            CALL axmt540_set_no_entry_b(l_cmd)  
#            LET g_xmdl_d_o.xmdl033 = g_xmdl_d[l_ac].xmdl033
#            IF g_pmao_flag = 'Y' THEN
#               NEXT FIELD l_pmao009
#            END IF 
#            #END add-point
#            
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl033
#            #add-point:BEFORE FIELD xmdl033
#             CALL axmt540_set_entry_b(l_cmd)                                                                                               
#            #END add-point
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl033
#            #add-point:ON CHANGE xmdl033
#                                                                                                            
#            #END add-point 
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD l_pmao009
#            #add-point:BEFORE FIELD l_pmao009
#
#            #END add-point
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD l_pmao009
#            
#            #add-point:AFTER FIELD l_pmao009
#
#            #END add-point
#            
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE l_pmao009
#            #add-point:ON CHANGE l_pmao009
#
#            #END add-point 
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD l_pmao010
#            #add-point:BEFORE FIELD l_pmao010
#
#            #END add-point
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD l_pmao010
#            
#            #add-point:AFTER FIELD l_pmao010
#
#            #END add-point
#            
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE l_pmao010
#            #add-point:ON CHANGE l_pmao010
#
#            #END add-point 
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl011
#            
#            #add-point:AFTER FIELD xmdl011
#            
#            CALL s_desc_get_acc_desc('221',g_xmdl_d[l_ac].xmdl011) RETURNING g_xmdl_d[l_ac].xmdl011_desc           
#
#            IF NOT cl_null(g_xmdl_d[l_ac].xmdl011) THEN 
#               IF g_xmdl_d[l_ac].xmdl011 <> g_xmdl_d_o.xmdl011 OR cl_null(g_xmdl_d_o.xmdl011) THEN
#               
#                  #呼叫檢查存在並帶值的library
#                  IF NOT s_azzi650_chk_exist('221',g_xmdl_d[l_ac].xmdl011) THEN
#                     LET g_xmdl_d[l_ac].xmdl011 = g_xmdl_d_o.xmdl011
#                   
#                     CALL s_desc_get_acc_desc('221',g_xmdl_d[l_ac].xmdl011) RETURNING g_xmdl_d[l_ac].xmdl011_desc
#                  
#                     NEXT FIELD CURRENT               
#                  END IF
#               END IF
#            END IF      
#            
#            LET g_xmdl_d_o.xmdl011 = g_xmdl_d[l_ac].xmdl011
#            #END add-point
#            
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl011
#            #add-point:BEFORE FIELD xmdl011
#                                                                                                            
#            #END add-point
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl011
#            #add-point:ON CHANGE xmdl011
#                                                                                                            
#            #END add-point 
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl012
#            #add-point:BEFORE FIELD xmdl012
#                                                                                                            
#            #END add-point
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl012
#            
#            #add-point:AFTER FIELD xmdl012
#                                                                                                            
#            #END add-point
#            
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl012
#            #add-point:ON CHANGE xmdl012
#                                                                                                            
#            #END add-point 
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl017
#            
#            #add-point:AFTER FIELD xmdl017
#            
#            CALL s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl017) RETURNING g_xmdl_d[l_ac].xmdl017_desc
#            
#            IF NOT cl_null(g_xmdl_d[l_ac].xmdl017) THEN
#               IF g_xmdl_d[l_ac].xmdl017 <> g_xmdl_d_o.xmdl017 OR cl_null(g_xmdl_d_o.xmdl017) THEN            
#
#                  #單位檢查
#                  IF NOT s_axmt540_unit_chk(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl017) THEN
#                     LET g_xmdl_d[l_ac].xmdl017 = g_xmdl_d_o.xmdl017
#                  
#                     CALL s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl017) RETURNING g_xmdl_d[l_ac].xmdl017_desc
#                  
#                     NEXT FIELD CURRENT
#                  END IF
#
#                  #刪除多庫儲批
#                  IF NOT axmt540_01_xmdm_delete('1',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
#                     LET g_xmdl_d[l_ac].xmdl017 = g_xmdl_d_o.xmdl017                  
#                     CALL s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl017) RETURNING g_xmdl_d[l_ac].xmdl017_desc
#                     
#                     NEXT FIELD CURRENT
#                  ELSE
#                     LET g_xmdl_d[l_ac].xmdl013 = 'N'
#                     LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013
#                  END IF
#
#                  #推算參考數量
#                  IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) AND NOT cl_null(g_xmdl_d[l_ac].xmdl017) AND
#                     NOT cl_null(g_xmdl_d[l_ac].xmdl019) AND NOT cl_null(g_xmdl_d[l_ac].xmdl018) THEN
#                     
#                     CALL s_aooi250_convert_qty(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl018)
#                     RETURNING l_success,g_xmdl_d[l_ac].xmdl020
#                     LET g_xmdl_d_o.xmdl020 = g_xmdl_d[l_ac].xmdl020
#                  ELSE
#                     LET g_xmdl_d[l_ac].xmdl020 = ''
#                     LET g_xmdl_d_o.xmdl020 = g_xmdl_d[l_ac].xmdl020
#                  END IF
#
#                  #推算計價數量
#                  IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) AND NOT cl_null(g_xmdl_d[l_ac].xmdl017) AND
#                     NOT cl_null(g_xmdl_d[l_ac].xmdl021) AND NOT cl_null(g_xmdl_d[l_ac].xmdl018) THEN
#                     
#                     CALL s_aooi250_convert_qty(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl021,g_xmdl_d[l_ac].xmdl018)
#                     RETURNING l_success,g_xmdl_d[l_ac].xmdl022
#                     LET g_xmdl_d_o.xmdl022 = g_xmdl_d[l_ac].xmdl022
#                  ELSE
#                     LET g_xmdl_d[l_ac].xmdl022 = ''
#                     LET g_xmdl_d_o.xmdl022 = g_xmdl_d[l_ac].xmdl022
#                  END IF                                                            
#
#                  #取價
#                  IF cl_null(g_xmdl_d[l_ac].xmdl001) AND cl_null(g_xmdl_d[l_ac].xmdl003) THEN   #無來源且有輸入料號、產品特徵時才做取價
#                     CALL axmt540_get_price(l_ac)
#                     RETURNING g_xmdl2_d[l_ac].xmdl042,g_xmdl2_d[l_ac].xmdl043,g_xmdl2_d[l_ac].xmdl044,g_xmdl2_d[l_ac].xmdl045
#                     
#                     LET g_xmdl2_d[l_ac].xmdl024 = g_xmdl2_d[l_ac].xmdl045
#                     LET g_xmdl2_d_o.xmdl024 = g_xmdl2_d[l_ac].xmdl024
#                  END IF
#
#               END IF
#            END IF 
#
#            LET g_xmdl_d_o.xmdl017 = g_xmdl_d[l_ac].xmdl017
#            #END add-point
#            
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl017
#            #add-point:BEFORE FIELD xmdl017
#                                                                                                            
#            #END add-point
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl017
#            #add-point:ON CHANGE xmdl017
#                                                                                                            
#            #END add-point 
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl018
#            #應用 a15 樣板自動產生(Version:2)
#            #確認欄位值在特定區間內
#            IF NOT cl_ap_chk_range(g_xmdl_d[l_ac].xmdl018,"0","0","","","azz-00079",1) THEN
#               NEXT FIELD xmdl018
#            END IF 
# 
# 
#            #add-point:AFTER FIELD xmdl018
#            
#            IF NOT cl_null(g_xmdl_d[l_ac].xmdl018) THEN     
#               IF g_xmdl_d[l_ac].xmdl018 <> g_xmdl_d_o.xmdl018 OR cl_null(g_xmdl_d_o.xmdl018) THEN
#                  
#                  IF NOT axmt540_xmdl018_chk() THEN
#                     LET g_xmdl_d[l_ac].xmdl018 = g_xmdl_d_o.xmdl018
#                     
#                     NEXT FIELD CURRENT
#                  END IF
#                  
#               END IF
#            END IF 
#            
#            LET g_xmdl_d_o.xmdl018 = g_xmdl_d[l_ac].xmdl018
#            #END add-point
#            
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl018
#            #add-point:BEFORE FIELD xmdl018
#                                                                                                            
#            #END add-point
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl018
#            #add-point:ON CHANGE xmdl018
#                                                                                                            
#            #END add-point 
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl019
#            
#            #add-point:AFTER FIELD xmdl019
#
#            #END add-point
#            
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl019
#            #add-point:BEFORE FIELD xmdl019
#                                                                                                            
#            #END add-point
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl019
#            #add-point:ON CHANGE xmdl019
#                                                                                                            
#            #END add-point 
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl020
#            #應用 a15 樣板自動產生(Version:2)
#            #確認欄位值在特定區間內
#            IF NOT cl_ap_chk_range(g_xmdl_d[l_ac].xmdl020,"0.000","1","","","azz-00079",1) THEN
#               NEXT FIELD xmdl020
#            END IF 
# 
# 
#            #add-point:AFTER FIELD xmdl020
#            
#            IF NOT cl_null(g_xmdl_d[l_ac].xmdl020) THEN                
#               #參考數量取位
#               CALL s_aooi250_take_decimals(g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl020) RETURNING l_success,g_xmdl_d[l_ac].xmdl020
#            END IF 
#
#            #END add-point
#            
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl020
#            #add-point:BEFORE FIELD xmdl020
#                                                                                                            
#            #END add-point
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl020
#            #add-point:ON CHANGE xmdl020
#                                                                                                            
#            #END add-point 
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl010
#            #add-point:BEFORE FIELD xmdl010
#                                                                                                            
#            #END add-point
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl010
#            
#            #add-point:AFTER FIELD xmdl010
#                                                                                                            
#            #END add-point
#            
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl010
#            #add-point:ON CHANGE xmdl010
#                                                                                                            
#            #END add-point 
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl013
#            #add-point:BEFORE FIELD xmdl013
#                                                                                                
#            #END add-point
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl013
#            
#            #add-point:AFTER FIELD xmdl013
#
#            LET g_xmdl_d_o.xmdl014 = g_xmdl_d[l_ac].xmdl014
#            LET g_xmdl_d_o.xmdl015 = g_xmdl_d[l_ac].xmdl015
#            LET g_xmdl_d_o.xmdl016 = g_xmdl_d[l_ac].xmdl016
#            LET g_xmdl_d_o.xmdl052 = g_xmdl_d[l_ac].xmdl052               
#            LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013
#
#            CALL axmt540_set_entry_b(l_cmd)
#            CALL axmt540_set_no_entry_b(l_cmd)
#            #END add-point
#            
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl013
#            #add-point:ON CHANGE xmdl013
#            #開啟多庫儲批
#            IF g_xmdl_d[l_ac].xmdl013 = 'Y' THEN
#               #150821-xianghui-b
#               DROP TABLE axmt540_inao3
#               LET g_sql = "CREATE GLOBAL TEMPORARY TABLE axmt540_inao3 AS ",
#                            "SELECT * FROM inao_t "
#               PREPARE inao_tbl3 FROM g_sql
#               EXECUTE inao_tbl3
#               FREE inao_tbl3                
#               INSERT INTO axmt540_inao3 SELECT * FROM inao_t 
#                                           WHERE inaoent = g_enterprise 
#                                             AND inaodocno = g_xmdk_m.xmdkdocno
#                                             AND inaoseq = g_xmdl_d[l_ac].xmdlseq 
#               DELETE FROM inao_t 
#                WHERE inaoent = g_enterprise 
#                  AND inaodocno = g_xmdk_m.xmdkdocno
#                  AND inaoseq = g_xmdl_d[l_ac].xmdlseq                             
#               #150821-xianghui-e                                              
#               CALL axmt540_01('1',g_xmdk_m.xmdksite,'',g_xmdk_m.xmdkdocno,
#                               g_xmdl_d[l_ac].xmdlseq,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,
#                               g_xmdl_d[l_ac].xmdl011,g_xmdl_d[l_ac].xmdl012,
#                               g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,'',
#                               g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl020,'',
#                               g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,g_xmdl_d[l_ac].xmdl030)
#                               RETURNING l_success,l_rollback,l_xmdl014,l_xmdl015,l_xmdl016,l_xmdl052
#               #150821-xianghui-b
#               IF l_success = FALSE AND l_rollback = FALSE THEN 
#                  DELETE FROM inao_t 
#                   WHERE inaoent = g_enterprise 
#                     AND inaodocno = g_xmdk_m.xmdkdocno
#                     AND inaoseq = g_xmdl_d[l_ac].xmdlseq       
#                  #將資料塞回原table   
#                  INSERT INTO inao_t SELECT * FROM axmt540_inao3
#                  DROP TABLE axmt540_inao3
#               END IF 
#               #150821-xianghui-e               
#               IF l_rollback THEN  #多庫儲批資料錯誤必須rollback
#                  CLOSE axmt540_cl
#                  CALL s_transaction_end('N','0')
#                  RETURN
#               END IF
#
#               IF l_success THEN
#                  IF NOT cl_null(l_xmdl014) THEN  #只有一筆
#                     LET g_xmdl_d[l_ac].xmdl013 = 'N'
#                     LET g_xmdl_d[l_ac].xmdl014 = l_xmdl014
#                     LET g_xmdl_d[l_ac].xmdl015 = l_xmdl015
#                     LET g_xmdl_d[l_ac].xmdl016 = l_xmdl016
#                     LET g_xmdl_d[l_ac].xmdl052 = l_xmdl052
#                  ELSE
#                     LET g_xmdl_d[l_ac].xmdl013 = 'Y'
#                     LET g_xmdl_d[l_ac].xmdl014 = ' '
#                     LET g_xmdl_d[l_ac].xmdl015 = ' '
#                     LET g_xmdl_d[l_ac].xmdl016 = ' '
#                     LET g_xmdl_d[l_ac].xmdl052 = ' '
#                  END IF
#
#                  DISPLAY BY NAME g_xmdl_d[l_ac].xmdl013
#                  DISPLAY BY NAME g_xmdl_d[l_ac].xmdl014
#                  DISPLAY BY NAME g_xmdl_d[l_ac].xmdl015
#                  DISPLAY BY NAME g_xmdl_d[l_ac].xmdl016
#                  DISPLAY BY NAME g_xmdl_d[l_ac].xmdl052
#
#                  CALL s_desc_get_stock_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014) RETURNING g_xmdl_d[l_ac].xmdl014_desc
#                  DISPLAY BY NAME g_xmdl_d[l_ac].xmdl014_desc
#                  CALL s_desc_get_locator_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015) RETURNING g_xmdl_d[l_ac].xmdl015_desc
#                  DISPLAY BY NAME g_xmdl_d[l_ac].xmdl015_desc
#                  
#               ELSE
#                  LET g_xmdl_d[l_ac].xmdl013 = g_xmdl_d_o.xmdl013
#
#                  NEXT FIELD CURRENT
#               END IF
#               
#               LET l_xmdlseq_backup = g_xmdl_d[l_ac].xmdlseq #紀錄產生庫儲批所用的項次
#
#            ELSE
#            
#               #檢查是否可多庫儲批若為"N"刪除舊值
#               IF NOT axmt540_01_xmdm_delete('1',g_xmdk_m.xmdkdocno,l_xmdlseq_backup,'Y') THEN
#                  LET g_xmdl_d[l_ac].xmdl013 = g_xmdl_d_o.xmdl013
#               
#                  NEXT FIELD CURRENT
#               END IF
#
#            END IF
#            CALL axmt540_set_act_visible_b()
#            CALL axmt540_set_act_no_visible_b()            
#            #END add-point 
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl014
#            
#            #add-point:AFTER FIELD xmdl014
#            CALL s_desc_get_stock_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014) RETURNING g_xmdl_d[l_ac].xmdl014_desc
#            
#            IF NOT cl_null(g_xmdl_d[l_ac].xmdl014) THEN
#               IF g_xmdl_d[l_ac].xmdl014 <> g_xmdl_d_o.xmdl014 OR cl_null(g_xmdl_d_o.xmdl014) THEN
#                  #150921-00014 earl mod
#                  IF NOT s_axmt540_xmdl014_chk(g_xmdh011,g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,g_xmdl_d[l_ac].xmdl014,g_xmdk_m.xmdkdocno) THEN
#                     LET g_xmdl_d[l_ac].xmdl014 = g_xmdl_d_o.xmdl014
#                     CALL s_desc_get_stock_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014) RETURNING g_xmdl_d[l_ac].xmdl014_desc
#                     
#                     NEXT FIELD CURRENT
#                  END IF
#
#                  #檢查儲位
#                  IF NOT s_axmt540_xmdl015_chk(g_xmdh011,g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015) THEN
#                     LET g_xmdl_d[l_ac].xmdl014 = g_xmdl_d_o.xmdl014                            
#                     CALL s_desc_get_stock_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014) RETURNING g_xmdl_d[l_ac].xmdl014_desc
#                            
#                     NEXT FIELD CURRENT
#                  END IF                 
#                  
#                  #在揀量check
#                  IF NOT s_axmt540_xmdl014_xmdl015_xmdl016_xmdk052_chk(g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,
#                                                                       g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,g_xmdl_d[l_ac].xmdl052,
#                                                                       g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,
#                                                                       g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq) THEN
#                                              
#                     LET g_xmdl_d[l_ac].xmdl014 = g_xmdl_d_o.xmdl014                            
#                     CALL s_desc_get_stock_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014) RETURNING g_xmdl_d[l_ac].xmdl014_desc
#                            
#                     NEXT FIELD CURRENT
#                  END IF                  
#
#                  #儲位控管若為5.不使用儲位控管
#                  IF NOT s_axmt540_inaa007_chk(g_xmdl_d[l_ac].xmdl014) THEN
#                     LET g_xmdl_d[l_ac].xmdl015 = ' '
#                     LET g_xmdl_d_o.xmdl015 = g_xmdl_d[l_ac].xmdl015
#                     CALL s_desc_get_locator_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015) RETURNING g_xmdl_d[l_ac].xmdl015_desc
#                  END IF
#                  CALL axmt540_inao()    #150821-xianghui
#               END IF
#            END IF            
#
#            LET g_xmdl_d_o.xmdl014 = g_xmdl_d[l_ac].xmdl014
#
#            CALL axmt540_set_entry_b(l_cmd)
#            CALL axmt540_set_no_entry_b(l_cmd)
#            
#            #END add-point
#            
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl014
#            #add-point:BEFORE FIELD xmdl014
#                                                                                      
#            #END add-point
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl014
#            #add-point:ON CHANGE xmdl014
#                                                                                                            
#            #END add-point 
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl015
#            
#            #add-point:AFTER FIELD xmdl015
#            CALL s_desc_get_locator_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015) RETURNING g_xmdl_d[l_ac].xmdl015_desc
#
#            IF NOT cl_null(g_xmdl_d[l_ac].xmdl015) THEN
#               IF g_xmdl_d[l_ac].xmdl015 <> g_xmdl_d_o.xmdl015 OR cl_null(g_xmdl_d_o.xmdl015) THEN
#                  
#                  IF NOT s_axmt540_xmdl015_chk(g_xmdh011,g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015) THEN
#                     LET g_xmdl_d[l_ac].xmdl015 = g_xmdl_d_o.xmdl015                  
#                     CALL s_desc_get_locator_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015) RETURNING g_xmdl_d[l_ac].xmdl015_desc
#                     
#                     NEXT FIELD CURRENT
#                  END IF
#
#                  #在揀量check
#                  IF NOT s_axmt540_xmdl014_xmdl015_xmdl016_xmdk052_chk(g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,
#                                                                       g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,g_xmdl_d[l_ac].xmdl052,
#                                                                       g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,
#                                                                       g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq) THEN
#                     LET g_xmdl_d[l_ac].xmdl015 = g_xmdl_d_o.xmdl015
#                     CALL s_desc_get_locator_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015) RETURNING g_xmdl_d[l_ac].xmdl015_desc
#
#                     NEXT FIELD CURRENT
#                  END IF
#                  CALL axmt540_inao()    #150821-xianghui
#               END IF
#            END IF
#
#            LET g_xmdl_d_o.xmdl015 = g_xmdl_d[l_ac].xmdl015
#
#            #END add-point
#            
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl015
#            #add-point:BEFORE FIELD xmdl015
#                                                                                                            
#            #END add-point
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl015
#            #add-point:ON CHANGE xmdl015
#                                                                                                            
#            #END add-point 
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl016
#            
#            #add-point:AFTER FIELD xmdl016
#            
#            IF NOT cl_null(g_xmdl_d[l_ac].xmdl016) THEN            
#               IF g_xmdl_d[l_ac].xmdl016 <> g_xmdl_d_o.xmdl016 OR cl_null(g_xmdl_d_o.xmdl016) THEN
#
#                  IF NOT s_axmt540_xmdl016_chk(g_xmdh011,g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,
#                                               g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,g_xmdl_d[l_ac].xmdl016) THEN
#                     LET g_xmdl_d[l_ac].xmdl016 = g_xmdl_d_o.xmdl016
#                     
#                     NEXT FIELD CURRENT
#                  END IF
#
#                  #在揀量check
#                  IF NOT s_axmt540_xmdl014_xmdl015_xmdl016_xmdk052_chk(g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,
#                                                                       g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,g_xmdl_d[l_ac].xmdl052,
#                                                                       g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,
#                                                                       g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq) THEN
#                     LET g_xmdl_d[l_ac].xmdl016 = g_xmdl_d_o.xmdl016
#                     
#                     NEXT FIELD CURRENT
#                  END IF
#                  CALL axmt540_inao()    #150821-xianghui
#               END IF
#            END IF
#            
#            LET g_xmdl_d_o.xmdl016 = g_xmdl_d[l_ac].xmdl016
#            
#            #END add-point
#            
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl016
#            #add-point:BEFORE FIELD xmdl016
#                                                                                                            
#            #END add-point
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl016
#            #add-point:ON CHANGE xmdl016
#                                                                                                            
#            #END add-point 
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl052
#            #add-point:BEFORE FIELD xmdl052
#
#            #END add-point
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl052
#            
#            #add-point:AFTER FIELD xmdl052
#            IF NOT cl_null(g_xmdl_d[l_ac].xmdl052) THEN            
#               IF g_xmdl_d[l_ac].xmdl052 <> g_xmdl_d_o.xmdl052 OR cl_null(g_xmdl_d_o.xmdl052) THEN
#
#                  #檢查庫存管理特徵
#                  IF NOT s_axmt540_xmdl052_chk(g_xmdh011,g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,g_xmdl_d[l_ac].xmdl052) THEN
#                     LET g_xmdl_d[l_ac].xmdl052 = g_xmdl_d_o.xmdl052
#
#                     NEXT FIELD CURRENT
#                  END IF
#
#                  #在揀量check
#                  IF NOT s_axmt540_xmdl014_xmdl015_xmdl016_xmdk052_chk(g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,
#                                                                       g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,g_xmdl_d[l_ac].xmdl052,
#                                                                       g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,
#                                                                       g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq) THEN
#                     LET g_xmdl_d[l_ac].xmdl052 = g_xmdl_d_o.xmdl052
#                     
#                     NEXT FIELD CURRENT
#                  END IF
#               END IF
#            END IF
#            
#            LET g_xmdl_d_o.xmdl052 = g_xmdl_d[l_ac].xmdl052
#            #END add-point
#            
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl052
#            #add-point:ON CHANGE xmdl052
#
#            #END add-point 
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl021
#            
#            #add-point:AFTER FIELD xmdl021
#
#            #END add-point
#            
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl021
#            #add-point:BEFORE FIELD xmdl021
#                                                                                                            
#            #END add-point
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl021
#            #add-point:ON CHANGE xmdl021
#                                                                                                            
#            #END add-point 
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl022
#            #應用 a15 樣板自動產生(Version:2)
#            #確認欄位值在特定區間內
#            IF NOT cl_ap_chk_range(g_xmdl_d[l_ac].xmdl022,"0.000","0","","","azz-00079",1) THEN
#               NEXT FIELD xmdl022
#            END IF 
# 
# 
#            #add-point:AFTER FIELD xmdl022
#            
#            IF NOT cl_null(g_xmdl_d[l_ac].xmdl022) THEN
#               IF g_xmdl_d[l_ac].xmdl022 <> g_xmdl_d_o.xmdl022 OR cl_null(g_xmdl_d_o.xmdl022) THEN
#               
#                  #取位
#                  CALL s_aooi250_take_decimals(g_xmdl_d[l_ac].xmdl021,g_xmdl_d[l_ac].xmdl022) RETURNING l_success,g_xmdl_d[l_ac].xmdl022
#               
#                  #取價
#                  IF cl_null(g_xmdl_d[l_ac].xmdl001) AND cl_null(g_xmdl_d[l_ac].xmdl003) THEN   #無來源且有輸入料號、產品特徵時才做取價
#                     CALL axmt540_get_price(l_ac)
#                     RETURNING g_xmdl2_d[l_ac].xmdl042,g_xmdl2_d[l_ac].xmdl043,g_xmdl2_d[l_ac].xmdl044,g_xmdl2_d[l_ac].xmdl045
#                     
#                     LET g_xmdl2_d[l_ac].xmdl024 = g_xmdl2_d[l_ac].xmdl045
#                     LET g_xmdl2_d_o.xmdl024 = g_xmdl2_d[l_ac].xmdl024
#                  END IF
#               
#               END IF
#            END IF
#            
#            LET g_xmdl_d_o.xmdl022 = g_xmdl_d[l_ac].xmdl022
#            
#            #END add-point
#            
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl022
#            #add-point:BEFORE FIELD xmdl022
#                                                                                                            
#            #END add-point
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl022
#            #add-point:ON CHANGE xmdl022
#                                                                                                            
#            #END add-point 
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl050
#            
#            #add-point:AFTER FIELD xmdl050
#             
#            CALL axmt540_xmdl050_ref()
#            IF NOT cl_null(g_xmdl_d[l_ac].xmdl050) THEN
#               IF g_xmdl_d[l_ac].xmdl050 <> g_xmdl_d_o.xmdl050 OR cl_null(g_xmdl_d_o.xmdl050) THEN
#            
#                  IF NOT axmt540_xmdl050_chk() THEN
#                     LET g_xmdl_d[l_ac].xmdl050 = g_xmdl_d_o.xmdl050
#                     CALL axmt540_xmdl050_ref()
#                     
#                     NEXT FIELD CURRENT
#                  END IF
#               
#                  #檢核輸入的理由碼是否在單據別限制範圍內
#                  CALL s_control_chk_doc('8',g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdl050,'','','','')
#                  RETURNING l_success,l_flag
#                  
#                  IF NOT l_success OR NOT l_flag THEN
#                     LET g_xmdl_d[l_ac].xmdl050 = g_xmdl_d_o.xmdl050
#                     CALL axmt540_xmdl050_ref()
#                     
#                     NEXT FIELD CURRENT
#                  END IF            
#               END IF
#            END IF
#            
#            LET g_xmdl_d_o.xmdl050 = g_xmdl_d[l_ac].xmdl050
#            #END add-point
#            
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl050
#            #add-point:BEFORE FIELD xmdl050
#                                                                                                            
#            #END add-point
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl050
#            #add-point:ON CHANGE xmdl050
#                                                                                                            
#            #END add-point 
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl050_desc
#            #add-point:BEFORE FIELD xmdl050_desc
#
#            #END add-point
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl050_desc
#            
#            #add-point:AFTER FIELD xmdl050_desc
#
#            #END add-point
#            
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl050_desc
#            #add-point:ON CHANGE xmdl050_desc
#
#            #END add-point 
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl023
#            #add-point:BEFORE FIELD xmdl023
#                                                                                                            
#            #END add-point
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl023
#            
#            #add-point:AFTER FIELD xmdl023
#                                                                                                            
#            #END add-point
#            
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl023
#            #add-point:ON CHANGE xmdl023
#            IF NOT cl_null(g_xmdl_d[l_ac].xmdl023) THEN
#               IF g_xmdl_d[l_ac].xmdl023 <> g_xmdl_d_o.xmdl023 OR cl_null(g_xmdl_d_o.xmdl023) THEN
#               
#                  #檢驗否(因只有axmt541與樣品才可更改故不控管)
#                  IF g_xmdl_d[l_ac].xmdl023 = 'N' THEN
#                     LET g_xmdl_d[l_ac].xmdl056 = g_xmdl_d[l_ac].xmdl018
#                  ELSE
#                     LET g_xmdl_d[l_ac].xmdl056 = 0
#                  END IF
#                  
#               END IF
#            END IF
#            LET g_xmdl_d_o.xmdl023 = g_xmdl_d[l_ac].xmdl023
#            LET g_xmdl_d_o.xmdl056 = g_xmdl_d[l_ac].xmdl056
#            #END add-point 
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl041
#            #add-point:BEFORE FIELD xmdl041
#                                                                                                            
#            #END add-point
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl041
#            
#            #add-point:AFTER FIELD xmdl041
#                                                                                                            
#            #END add-point
#            
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl041
#            #add-point:ON CHANGE xmdl041
#                                                                                                            
#            #END add-point 
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl030
#            
#            #add-point:AFTER FIELD xmdl030
#            CALL s_desc_get_project_desc(g_xmdl_d[l_ac].xmdl030) RETURNING g_xmdl_d[l_ac].xmdl030_desc
#            DISPLAY BY NAME g_xmdl_d[l_ac].xmdl030_desc
#            
#            IF NOT cl_null(g_xmdl_d[l_ac].xmdl030) THEN 
#               IF g_xmdl_d[l_ac].xmdl030 != g_xmdl_d_o.xmdl030 OR cl_null(g_xmdl_d_o.xmdl030) THEN
##應用 a17 樣板自動產生(Version:2)
#               #欄位存在檢查
#                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
#                  INITIALIZE g_chkparam.* TO NULL
#                  
#                  #設定g_chkparam.*的參數
#                  LET g_chkparam.arg1 = g_xmdl_d[l_ac].xmdl030
#                     
#                  #呼叫檢查存在並帶值的library
#                  IF NOT cl_chk_exist("v_pjba001") THEN
#                     #檢查成功時後續處理
#                     LET g_xmdl_d[l_ac].xmdl030 = g_xmdl_d_o.xmdl030
#                     CALL s_desc_get_project_desc(g_xmdl_d[l_ac].xmdl030) RETURNING g_xmdl_d[l_ac].xmdl030_desc
#                     DISPLAY BY NAME g_xmdl_d[l_ac].xmdl030_desc
#                     NEXT FIELD CURRENT
#                  END IF
#                  LET g_xmdl_d[l_ac].xmdl031 = ''
#                  LET g_xmdl_d[l_ac].xmdl031_desc = ''
#                  LET g_xmdl_d[l_ac].xmdl032 = ''
#                  LET g_xmdl_d[l_ac].xmdl032_desc = ''
#               END IF
#            END IF 
#            LET g_xmdl_d_o.xmdl030 = g_xmdl_d[l_ac].xmdl030                                                                                                
#            #END add-point
#            
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl030
#            #add-point:BEFORE FIELD xmdl030
#                                                                                                            
#            #END add-point
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl030
#            #add-point:ON CHANGE xmdl030
#                                                                                                            
#            #END add-point 
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl031
#            
#            #add-point:AFTER FIELD xmdl031
#            CALL s_desc_get_wbs_desc(g_xmdl_d[l_ac].xmdl030,g_xmdl_d[l_ac].xmdl031) RETURNING g_xmdl_d[l_ac].xmdl031_desc
#            DISPLAY BY NAME g_xmdl_d[l_ac].xmdl031_desc
#            
#            IF NOT cl_null(g_xmdl_d[l_ac].xmdl031) THEN 
##應用 a17 樣板自動產生(Version:2)
#               #欄位存在檢查
#               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
#               INITIALIZE g_chkparam.* TO NULL
#
#               #設定g_chkparam.*的參數
#               LET g_chkparam.arg1 = g_xmdl_d[l_ac].xmdl030
#               LET g_chkparam.arg2 = g_xmdl_d[l_ac].xmdl031
#                  
#               #呼叫檢查存在並帶值的library
#               IF NOT cl_chk_exist("v_pjbb002") THEN
#                  #檢查失敗時後續處理
#                  LET g_xmdl_d[l_ac].xmdl031 = g_xmdl_d_t.xmdl031
#                  CALL s_desc_get_wbs_desc(g_xmdl_d[l_ac].xmdl030,g_xmdl_d[l_ac].xmdl031) RETURNING g_xmdl_d[l_ac].xmdl031_desc
#                  DISPLAY BY NAME g_xmdl_d[l_ac].xmdl031_desc
#                  NEXT FIELD CURRENT
#               END IF
#
#            END IF                                                                                                
#            #END add-point
#            
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl031
#            #add-point:BEFORE FIELD xmdl031
#                                                                                                            
#            #END add-point
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl031
#            #add-point:ON CHANGE xmdl031
#                                                                                                            
#            #END add-point 
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl032
#            
#            #add-point:AFTER FIELD xmdl032
#            CALL s_desc_get_activity_desc(g_xmdl_d[l_ac].xmdl030,g_xmdl_d[l_ac].xmdl032) RETURNING g_xmdl_d[l_ac].xmdl032_desc
#            DISPLAY BY NAME g_xmdl_d[l_ac].xmdl032_desc
#            
#            IF NOT cl_null(g_xmdl_d[l_ac].xmdl032) THEN 
##應用 a17 樣板自動產生(Version:2)
#               #欄位存在檢查
#               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
#               INITIALIZE g_chkparam.* TO NULL
#
#               #設定g_chkparam.*的參數
#               LET g_chkparam.arg1 = g_xmdl_d[l_ac].xmdl030
#               LET g_chkparam.arg2 = g_xmdl_d[l_ac].xmdl032
#                  
#               #呼叫檢查存在並帶值的library
#               IF NOT cl_chk_exist("v_pjbm002") THEN
#                  #檢查失敗時後續處理
#                  LET g_xmdl_d[l_ac].xmdl032 = g_xmdl_d_t.xmdl032
#                  CALL s_desc_get_activity_desc(g_xmdl_d[l_ac].xmdl030,g_xmdl_d[l_ac].xmdl032) RETURNING g_xmdl_d[l_ac].xmdl032_desc
#                  DISPLAY BY NAME g_xmdl_d[l_ac].xmdl032_desc
#                  NEXT FIELD CURRENT
#               END IF
#            END IF                                                                                                
#            #END add-point
#            
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl032
#            #add-point:BEFORE FIELD xmdl032
#                                                                                                            
#            #END add-point
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl032
#            #add-point:ON CHANGE xmdl032
#                                                                                                            
#            #END add-point 
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl051
#            #add-point:BEFORE FIELD xmdl051
#                                                                                                            
#            #END add-point
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl051
#            
#            #add-point:AFTER FIELD xmdl051
#                                                                                                            
#            #END add-point
#            
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl051
#            #add-point:ON CHANGE xmdl051
#                                                                                                            
#            #END add-point 
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl035
#            #應用 a15 樣板自動產生(Version:2)
#            #確認欄位值在特定區間內
#            IF NOT cl_ap_chk_range(g_xmdl_d[l_ac].xmdl035,"0","1","","","azz-00079",1) THEN
#               NEXT FIELD xmdl035
#            END IF 
# 
# 
#            #add-point:AFTER FIELD xmdl035
#                                                                                                            
#            #END add-point
#            
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl035
#            #add-point:BEFORE FIELD xmdl035
#                                                                                                            
#            #END add-point
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl035
#            #add-point:ON CHANGE xmdl035
#                                                                                                            
#            #END add-point 
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl036
#            #應用 a15 樣板自動產生(Version:2)
#            #確認欄位值在特定區間內
#            IF NOT cl_ap_chk_range(g_xmdl_d[l_ac].xmdl036,"0","1","","","azz-00079",1) THEN
#               NEXT FIELD xmdl036
#            END IF 
# 
# 
#            #add-point:AFTER FIELD xmdl036
#                                                                                                            
#            #END add-point
#            
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl036
#            #add-point:BEFORE FIELD xmdl036
#                                                                                                            
#            #END add-point
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl036
#            #add-point:ON CHANGE xmdl036
#                                                                                                            
#            #END add-point 
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl037
#            #應用 a15 樣板自動產生(Version:2)
#            #確認欄位值在特定區間內
#            IF NOT cl_ap_chk_range(g_xmdl_d[l_ac].xmdl037,"0","1","","","azz-00079",1) THEN
#               NEXT FIELD xmdl037
#            END IF 
# 
# 
#            #add-point:AFTER FIELD xmdl037
#                                                                                                            
#            #END add-point
#            
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl037
#            #add-point:BEFORE FIELD xmdl037
#                                                                                                            
#            #END add-point
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl037
#            #add-point:ON CHANGE xmdl037
#                                                                                                            
#            #END add-point 
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl056
#            #add-point:BEFORE FIELD xmdl056
#
#            #END add-point
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl056
#            
#            #add-point:AFTER FIELD xmdl056
#
#            #END add-point
#            
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl056
#            #add-point:ON CHANGE xmdl056
#
#            #END add-point 
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl088
#            #add-point:BEFORE FIELD xmdl088
#
#            #END add-point
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl088
#            
#            #add-point:AFTER FIELD xmdl088
#
#            #END add-point
#            
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl088
#            #add-point:ON CHANGE xmdl088
#
#            #END add-point 
# 
#         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD xmdl034
#            #add-point:BEFORE FIELD xmdl034
#
#            #END add-point
# 
#         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD xmdl034
#            
#            #add-point:AFTER FIELD xmdl034
#
#            #END add-point
#            
# 
#         #應用 a04 樣板自動產生(Version:2)
#         ON CHANGE xmdl034
#            #add-point:ON CHANGE xmdl034
#
#            #END add-point 
# 
# 
#                  #Ctrlp:input.c.page1.xmdlsite
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdlsite
#            #add-point:ON ACTION controlp INFIELD xmdlsite
#                                                                                                            
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdlseq
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdlseq
#            #add-point:ON ACTION controlp INFIELD xmdlseq
#                                                                                                            
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl001
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl001
#            #add-point:ON ACTION controlp INFIELD xmdl001
#            #此段落由子樣板a07產生            
#            #開窗i段
#			   INITIALIZE g_qryparam.* TO NULL
#            LET g_qryparam.state = 'i'
#			   LET g_qryparam.reqry = FALSE
#
#            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl001             #給予default值
#            LET g_qryparam.default2 = g_xmdl_d[l_ac].xmdl002
#            
#            #單頭有輸入出通單號
#            IF NOT cl_null(g_xmdk_m.xmdk005) THEN
#               LET g_qryparam.where = "xmdgdocno = '",g_xmdk_m.xmdk005,"'"      #出通單號
#            ELSE
#			      LET g_qryparam.where = " xmdg005 = '",g_xmdk_m.xmdk007,"'",      #客戶編號
#                                      " AND xmdg006 = '",g_xmdk_m.xmdk008,"'",  #收款客戶
#                                      " AND xmdg007 = '",g_xmdk_m.xmdk009,"'",  #收貨客戶
#                                      " AND xmdg202 = '",g_xmdk_m.xmdk202,"'",  #發票客戶
#                                      " AND xmdg001 = '",g_xmdk_m.xmdk002,"'",  #出貨性質
#                                      #" AND xmdg034 = '",g_xmdk_m.xmdk045,"'",  #多角性質
#                                      " AND xmdg010 = '",g_xmdk_m.xmdk012,"'",  #稅別
#                                      " AND xmdg014 = '",g_xmdk_m.xmdk016,"'",  #幣別
#                                      " AND xmdg009 = '",g_xmdk_m.xmdk011,"'",  #交易條件
#                                      " AND xmdg008 = '",g_xmdk_m.xmdk010,"'",  #收款條件
#                                      " AND xmdg013 = '",g_xmdk_m.xmdk015,"'",  #發票類型
#                                      " AND xmdg032 = '",g_xmdk_m.xmdk042,"'",  #內外銷
#                                      " AND ((xmdg056 IS NULL AND xmdg054 = 'N') OR 
#                                             (xmdg056 IS NOT NULL AND xmdg054 = 'Y'))",
#                                      " AND COALESCE(xmdg056,' ') = COALESCE('",g_xmdk_m.xmdk044,"',' ')" #多角流程代碼
#            END IF
#
#            IF g_xmdk_m.xmdk028 = 'Y' THEN     #包裝單
#               LET g_qryparam.where = g_qryparam.where," AND xmdg024 = 'N'"
#            END IF
#            
#            IF g_xmdk_m.xmdk029 = 'Y' THEN     #Invoice
#               LET g_qryparam.where = g_qryparam.where," AND xmdg025 = 'N'"
#            END IF
#
#            #組合過濾前後置單據資料SQL
#            CALL s_aooi210_get_check_sql(g_site,'',g_xmdk_m.xmdkdocno,'4','','xmdgdocno') RETURNING l_success,l_where
#            
#            IF l_success THEN
#
#               LET g_qryparam.where = g_qryparam.where," AND ",l_where
#
#               CALL q_xmdhdocno_2()                                #呼叫開窗
#
#               LET g_xmdl_d[l_ac].xmdl001 = g_qryparam.return1              #將開窗取得的值回傳到變數
#               LET g_xmdl_d[l_ac].xmdl002 = g_qryparam.return2              #將開窗取得的值回傳到變數
#
#               DISPLAY g_xmdl_d[l_ac].xmdl001 TO xmdl001              #顯示到畫面上
#               DISPLAY g_xmdl_d[l_ac].xmdl002 TO xmdl002              #顯示到畫面上
#
#            END IF
#
#            NEXT FIELD xmdl001                          #返回原欄位
#
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl002
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl002
#            #add-point:ON ACTION controlp INFIELD xmdl002
#                                                                                                            
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl003
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl003
#            #add-point:ON ACTION controlp INFIELD xmdl003
#            #開窗i段            
#            IF NOT cl_null(g_xmdl_d[l_ac].xmdl001) AND cl_null(g_xmdl_d[l_ac].xmdl002) THEN #費用料號
#		      	INITIALIZE g_qryparam.* TO NULL
#               LET g_qryparam.state = 'i'
#			      LET g_qryparam.reqry = FALSE            
#            
#               LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl003
#               
#               LET g_qryparam.where = "xmdadocno IN (SELECT xmdh001 FROM xmdh_t",
#                                      "               WHERE xmdhent = ",g_enterprise,
#                                      "                 AND xmdhdocno = '",g_xmdl_d[l_ac].xmdl001,"')"
#               
#               #組合過濾前後置單據資料SQL
#               CALL s_aooi210_get_check_sql(g_site,'',g_xmdk_m.xmdkdocno,'4','','xmdadocno') RETURNING l_success,l_where
#               
#               IF l_success THEN
#                  LET g_qryparam.where = g_qryparam.where," AND ",l_where
#                  CALL q_xmdadocno_8()                                #呼叫開窗
#            
#                  LET g_xmdl_d[l_ac].xmdl003 = g_qryparam.return1              #將開窗取得的值回傳到變數            
#                  DISPLAY g_xmdl_d[l_ac].xmdl003 TO xmdl003              #顯示到畫面上               
#               END IF
#                        
#            ELSE
#		      	INITIALIZE g_qryparam.* TO NULL
#               LET g_qryparam.state = 'i'
#			      LET g_qryparam.reqry = FALSE
#            
#               LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl003             #給予default值
#               LET g_qryparam.default2 = g_xmdl_d[l_ac].xmdl004
#               LET g_qryparam.default3 = g_xmdl_d[l_ac].xmdl005
#               LET g_qryparam.default4 = g_xmdl_d[l_ac].xmdl006
#            
#               #單頭有輸入訂單號
#               IF NOT cl_null(g_xmdk_m.xmdk006) THEN
#                  LET g_qryparam.where = "xmdadocno = '",g_xmdk_m.xmdk006,"'"      #出通單號
#               ELSE
#   		   	   LET g_qryparam.where = " xmda004 = '",g_xmdk_m.xmdk007,"'",      #客戶編號
#                                         " AND xmda021 = '",g_xmdk_m.xmdk008,"'",  #收款客戶
#                                         " AND xmda022 = '",g_xmdk_m.xmdk009,"'",  #收貨客戶
#                                         " AND xmda203 = '",g_xmdk_m.xmdk202,"'",  #發票客戶
#                                         " AND xmda011 = '",g_xmdk_m.xmdk012,"'",  #稅別
#                                         " AND xmda015 = '",g_xmdk_m.xmdk016,"'",  #幣別
#                                         " AND xmda010 = '",g_xmdk_m.xmdk011,"'",  #交易條件
#                                         " AND xmda009 = '",g_xmdk_m.xmdk010,"'",  #收款條件
#                                         " AND xmda035 = '",g_xmdk_m.xmdk015,"'",  #發票類型
#                                         " AND xmda005 = '",g_xmdk_m.xmdk002,"'",  #出貨類型
#                                         #" AND xmda006 = '",g_xmdk_m.xmdk045,"'",  #多角類型
#                                         " AND xmda048 = '",g_xmdk_m.xmdk042,"'",  #內外銷
#                                         " AND xmda005 <> '5'",                    #不可為預先訂單
#                                         " AND xmda045 <> 'Y'",                    #不可為物流結案
#                                         " AND ((xmda050 IS NULL AND xmda030 = 'N') OR 
#                                                (xmda050 IS NOT NULL AND xmda030 = 'Y'))",
#                                         " AND COALESCE(xmda050,' ') = COALESCE('",g_xmdk_m.xmdk044,"',' ')" #多角流程代碼
#               END IF
#                              
#               #組合過濾前後置單據資料SQL
#               CALL s_aooi210_get_check_sql(g_site,'',g_xmdk_m.xmdkdocno,'4','','xmdadocno') RETURNING l_success,l_where
#               
#               IF l_success THEN
#               
#                  LET g_qryparam.where = g_qryparam.where," AND ",l_where
#                  
#                  CALL q_xmdddocno_2()                                #呼叫開窗
#            
#                  LET g_xmdl_d[l_ac].xmdl003 = g_qryparam.return1              #將開窗取得的值回傳到變數
#                  LET g_xmdl_d[l_ac].xmdl004 = g_qryparam.return2
#                  LET g_xmdl_d[l_ac].xmdl005 = g_qryparam.return3
#                  LET g_xmdl_d[l_ac].xmdl006 = g_qryparam.return4
#            
#                  DISPLAY g_xmdl_d[l_ac].xmdl003 TO xmdl003              #顯示到畫面上
#                  DISPLAY g_xmdl_d[l_ac].xmdl004 TO xmdl004
#                  DISPLAY g_xmdl_d[l_ac].xmdl005 TO xmdl005
#                  DISPLAY g_xmdl_d[l_ac].xmdl006 TO xmdl006
#                  
#               END IF
#            END IF
#
#            NEXT FIELD xmdl003                          #返回原欄位
#
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl004
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl004
#            #add-point:ON ACTION controlp INFIELD xmdl004
#                                                                                                            
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl005
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl005
#            #add-point:ON ACTION controlp INFIELD xmdl005
#                                                                                                            
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl006
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl006
#            #add-point:ON ACTION controlp INFIELD xmdl006
#                                                                                                            
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl007
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl007
#            #add-point:ON ACTION controlp INFIELD xmdl007
#                                                                                                            
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl008
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl008
#            #add-point:ON ACTION controlp INFIELD xmdl008
#            #開窗i段                        
#			   INITIALIZE g_qryparam.* TO NULL
#            LET g_qryparam.state = 'i'
#			   LET g_qryparam.reqry = FALSE
#            
#            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl008             #給予default值
#             
#            CALL s_control_get_doc_sql('imaf001',g_xmdk_m.xmdkdocno,'4') RETURNING l_success,l_where
#            IF l_success THEN
#               LET g_qryparam.where = l_where
#            END IF
#            
#            CALL s_control_get_doc_sql('imaf001',g_xmdk_m.xmdkdocno,'5') RETURNING l_success,l_where
#            IF l_success THEN
#               LET g_qryparam.where = g_qryparam.where," AND ",l_where
#            END IF
#            
#            IF NOT cl_null(g_xmdl_d[l_ac].xmdl003) AND cl_null(g_xmdl_d[l_ac].xmdl004) THEN #費用料號
#               LET g_qryparam.where = g_qryparam.where,
#                                      " AND imaf001 IN (SELECT xmds001 FROM xmds_t",
#                                      "                  WHERE xmdsent = ",g_enterprise,
#                                      "                    AND xmdsdocno = '",g_xmdl_d[l_ac].xmdl003,"')"
#               CALL q_imaf001_17()                                #呼叫開窗
#            ELSE
#               CALL q_imaf001_15()                                #呼叫開窗
#            END IF
#             
#            LET g_xmdl_d[l_ac].xmdl008 = g_qryparam.return1              #將開窗取得的值回傳到變數
#
#            DISPLAY g_xmdl_d[l_ac].xmdl008 TO xmdl008              #顯示到畫面上
#
#            CALL s_desc_get_item_desc(g_xmdl_d[l_ac].xmdl008) RETURNING g_xmdl_d[l_ac].xmdl008_desc,g_xmdl_d[l_ac].xmdl008_desc_desc
#            
#            NEXT FIELD xmdl008                          #返回原欄位
#
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl009
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl009
#            #add-point:ON ACTION controlp INFIELD xmdl009
#            
#            #開窗i段                                                                                                
#            #必須先輸入料號            
#            IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) THEN
#            
#               #取得產品特徵
#               CALL s_axmt500_get_imaa005(g_enterprise,g_xmdl_d[l_ac].xmdl008) RETURNING l_imaa005
#
#               IF NOT cl_null(l_imaa005) THEN
#                  IF l_cmd = 'u' OR (l_cmd = 'a' AND NOT cl_null(g_xmdl_d[l_ac].xmdl009)) THEN
#                     CALL s_feature_single(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,g_site,g_xmdk_m.xmdkdocno)
#                     RETURNING l_success,g_xmdl_d[l_ac].xmdl009
#
#                     DISPLAY BY NAME g_xmdl_d[l_ac].xmdl009             
#                  END IF
#                  
#               ELSE   #無使用產品特徵
#               
#                  INITIALIZE g_errparam TO NULL
#                  LET g_errparam.code = 'ain-00121'
#                  LET g_errparam.extend = g_xmdl_d[l_ac].xmdl008
#                  LET g_errparam.popup = TRUE
#                  CALL cl_err()
#
#               END IF
#               
#            ELSE      #未輸入料號
#            
#               INITIALIZE g_errparam TO NULL
#               LET g_errparam.code = 'axm-00229'
#               LET g_errparam.extend = ''
#               LET g_errparam.popup = TRUE
#               CALL cl_err()
#
#            END IF
#
#            CALL s_feature_description(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009) RETURNING l_success,g_xmdl_d[l_ac].xmdl009_desc
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl009_desc
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl009_desc
#            #add-point:ON ACTION controlp INFIELD xmdl009_desc
#
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl033
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl033
#            #add-point:ON ACTION controlp INFIELD xmdl033
#            
#            #此段落由子樣板a07產生            
#            #開窗i段
#			   INITIALIZE g_qryparam.* TO NULL
#            LET g_qryparam.state = 'i'
#			   LET g_qryparam.reqry = FALSE
#
#            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl033             #給予default值
#
#            #給予arg
#            LET g_qryparam.arg1 = g_xmdk_m.xmdk007
#            LET g_qryparam.arg2 = g_xmdl_d[l_ac].xmdl008
#            LET g_qryparam.arg3 = g_xmdl_d[l_ac].xmdl009
#
#            CALL q_pmao004_1()                                #呼叫開窗
#
#            LET g_xmdl_d[l_ac].xmdl033 = g_qryparam.return1              #將開窗取得的值回傳到變數
#
#            DISPLAY g_xmdl_d[l_ac].xmdl033 TO xmdl033              #顯示到畫面上
#            SELECT pmao009,pmao010
#             INTO g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
#             FROM pmao_t
#            WHERE pmaoent = g_enterprise
#              AND pmao001 = g_xmdk_m.xmdk007
#              AND pmao002 = g_xmdl_d[l_ac].xmdl008
#              AND pmao003 = g_xmdl_d[l_ac].xmdl009
#              AND pmao004 = g_xmdl_d[l_ac].xmdl033                     
#            DISPLAY BY NAME g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
#            NEXT FIELD xmdl033                          #返回原欄位
#
#            #END add-point
# 
#         #Ctrlp:input.c.page1.l_pmao009
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD l_pmao009
#            #add-point:ON ACTION controlp INFIELD l_pmao009
#
#            #END add-point
# 
#         #Ctrlp:input.c.page1.l_pmao010
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD l_pmao010
#            #add-point:ON ACTION controlp INFIELD l_pmao010
#
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl011
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl011
#            #add-point:ON ACTION controlp INFIELD xmdl011
#            
#            #開窗i段
#		   	INITIALIZE g_qryparam.* TO NULL
#            LET g_qryparam.state = 'i'
#			   LET g_qryparam.reqry = FALSE
#
#            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl011             #給予default值
#
#            #給予arg
#            LET g_qryparam.arg1 = '221'
#
#            CALL q_oocq002()                                #呼叫開窗
#
#            LET g_xmdl_d[l_ac].xmdl011 = g_qryparam.return1              #將開窗取得的值回傳到變數
#
#            DISPLAY g_xmdl_d[l_ac].xmdl011 TO xmdl011              #顯示到畫面上
#
#            CALL s_desc_get_acc_desc('221',g_xmdl_d[l_ac].xmdl011) RETURNING g_xmdl_d[l_ac].xmdl011_desc
#            NEXT FIELD xmdl011                          #返回原欄位                                                                                          
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl012
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl012
#            #add-point:ON ACTION controlp INFIELD xmdl012
#                                                                                                            
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl017
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl017
#            #add-point:ON ACTION controlp INFIELD xmdl017
#                                                                                                            
#            #開窗i段
#   			INITIALIZE g_qryparam.* TO NULL
#            LET g_qryparam.state = 'i'
#			   LET g_qryparam.reqry = FALSE
#			   
#			   LET g_qryparam.arg1 = g_xmdl_d[l_ac].xmdl008
#
#            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl017             #給予default值
#     
#            CALL q_imao002()                                #呼叫開窗
#
#            LET g_xmdl_d[l_ac].xmdl017 = g_qryparam.return1              #將開窗取得的值回傳到變數
#
#            DISPLAY g_xmdl_d[l_ac].xmdl017 TO xmdl017              #顯示到畫面上
#
#            CALL s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl017) RETURNING g_xmdl_d[l_ac].xmdl017_desc
#            
#            NEXT FIELD xmdl017                          #返回原欄位                                                                                                  
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl018
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl018
#            #add-point:ON ACTION controlp INFIELD xmdl018
#                                                                                                            
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl019
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl019
#            #add-point:ON ACTION controlp INFIELD xmdl019
#
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl020
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl020
#            #add-point:ON ACTION controlp INFIELD xmdl020
#                                                                                                            
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl010
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl010
#            #add-point:ON ACTION controlp INFIELD xmdl010
#                                                                                                            
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl013
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl013
#            #add-point:ON ACTION controlp INFIELD xmdl013
#                                                                                                            
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl014
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl014
#            #add-point:ON ACTION controlp INFIELD xmdl014
#            
#            CALL axmt540_xmdl014_xmdl015_xmdl016_xmdl052_qry('1')
#            NEXT FIELD xmdl014                          #返回原欄位
#
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl015
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl015
#            #add-point:ON ACTION controlp INFIELD xmdl015
#
#            CALL axmt540_xmdl014_xmdl015_xmdl016_xmdl052_qry('2')
#            NEXT FIELD xmdl015                          #返回原欄位
#
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl016
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl016
#            #add-point:ON ACTION controlp INFIELD xmdl016
#            
#            CALL axmt540_xmdl014_xmdl015_xmdl016_xmdl052_qry('3')
#            NEXT FIELD xmdl016                          #返回原欄位
#            
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl052
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl052
#            #add-point:ON ACTION controlp INFIELD xmdl052
#
#            CALL axmt540_xmdl014_xmdl015_xmdl016_xmdl052_qry('4')
#            NEXT FIELD xmdl052                          #返回原欄位
#
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl021
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl021
#            #add-point:ON ACTION controlp INFIELD xmdl021
#                                                                                                          
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl022
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl022
#            #add-point:ON ACTION controlp INFIELD xmdl022
#                                                                                                            
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl050
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl050
#            #add-point:ON ACTION controlp INFIELD xmdl050
#            
#            #此段落由子樣板a07產生            
#            #開窗i段
#            LET l_gzcb004 = ''
#            SELECT gzcb004
#              INTO l_gzcb004
#              FROM gzcb_t
#             WHERE gzcb001 = '24'
#               AND gzcb002 = 'axmt540'   #出貨單、無訂單出貨共用
#                                   
#			   INITIALIZE g_qryparam.* TO NULL
#            LET g_qryparam.state = 'i'
#			   LET g_qryparam.reqry = FALSE
#
#            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl050             #給予default值
#            
#            CALL s_control_get_doc_sql('oocq002',g_xmdk_m.xmdkdocno,'8') RETURNING l_success,l_where
#            IF l_success THEN
#               LET g_qryparam.where = l_where
#            END IF            
#
#            #給予arg
#            LET g_qryparam.arg1 = l_gzcb004
#
#            CALL q_oocq002()                                #呼叫開窗
#
#            LET g_xmdl_d[l_ac].xmdl050 = g_qryparam.return1              #將開窗取得的值回傳到變數
#
#            DISPLAY g_xmdl_d[l_ac].xmdl050 TO xmdl050              #顯示到畫面上
#
#            CALL axmt540_xmdl050_ref()
#            NEXT FIELD xmdl050                          #返回原欄位
#
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl050_desc
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl050_desc
#            #add-point:ON ACTION controlp INFIELD xmdl050_desc
#
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl023
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl023
#            #add-point:ON ACTION controlp INFIELD xmdl023
#                                                                                                            
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl041
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl041
#            #add-point:ON ACTION controlp INFIELD xmdl041
#                                                                                                            
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl030
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl030
#            #add-point:ON ACTION controlp INFIELD xmdl030
#            #開窗i段
#            INITIALIZE g_qryparam.* TO NULL
#            LET g_qryparam.state = 'i'
#            LET g_qryparam.reqry = FALSE
#
#            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl030             #給予default值
#
#            #給予arg
#            LET g_qryparam.arg1 = "" #s
#
#
#            CALL q_pjba001()                                #呼叫開窗
#
#            LET g_xmdl_d[l_ac].xmdl030 = g_qryparam.return1              
#
#            DISPLAY g_xmdl_d[l_ac].xmdl030 TO xmdl030              #
#            CALL s_desc_get_project_desc(g_xmdl_d[l_ac].xmdl030) RETURNING g_xmdl_d[l_ac].xmdl030_desc
#            DISPLAY BY NAME g_xmdl_d[l_ac].xmdl030_desc
#
#            NEXT FIELD xmdl030                          #返回原欄位
#                                                                                                            
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl031
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl031
#            #add-point:ON ACTION controlp INFIELD xmdl031
#            #開窗i段
#            INITIALIZE g_qryparam.* TO NULL
#            LET g_qryparam.state = 'i'
#            LET g_qryparam.reqry = FALSE
#
#            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl031             #給予default值
#
#            #給予arg
#            LET g_qryparam.arg1 = g_xmdl_d[l_ac].xmdl030 #s
#
#
#            CALL q_pjbb002_1()                                #呼叫開窗
#
#            LET g_xmdl_d[l_ac].xmdl031 = g_qryparam.return1              
#
#            DISPLAY g_xmdl_d[l_ac].xmdl031 TO xmdl031              #
#            CALL s_desc_get_wbs_desc(g_xmdl_d[l_ac].xmdl030,g_xmdl_d[l_ac].xmdl031) RETURNING g_xmdl_d[l_ac].xmdl031_desc
#            DISPLAY BY NAME g_xmdl_d[l_ac].xmdl031_desc
#
#            NEXT FIELD xmdl031                          #返回原欄位
#
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl032
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl032
#            #add-point:ON ACTION controlp INFIELD xmdl032
#            #應用 a07 樣板自動產生(Version:2)   
#            #開窗i段
#            INITIALIZE g_qryparam.* TO NULL
#            LET g_qryparam.state = 'i'
#            LET g_qryparam.reqry = FALSE
#
#            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl032             #給予default值
#
#            #給予arg
#            LET g_qryparam.arg1 = g_xmdl_d[l_ac].xmdl030 #s
#
#
#            CALL q_pjbm002()                                #呼叫開窗
#
#            LET g_xmdl_d[l_ac].xmdl032 = g_qryparam.return1              
#
#            DISPLAY g_xmdl_d[l_ac].xmdl032 TO xmdl032              #
#            CALL s_desc_get_activity_desc(g_xmdl_d[l_ac].xmdl030,g_xmdl_d[l_ac].xmdl032) RETURNING g_xmdl_d[l_ac].xmdl032_desc
#            DISPLAY BY NAME g_xmdl_d[l_ac].xmdl032_desc
#
#            NEXT FIELD xmdl032                          #返回原欄位
#
#                                                                                                           
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl051
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl051
#            #add-point:ON ACTION controlp INFIELD xmdl051
#                                                                                                            
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl035
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl035
#            #add-point:ON ACTION controlp INFIELD xmdl035
#                                                                                                            
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl036
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl036
#            #add-point:ON ACTION controlp INFIELD xmdl036
#                                                                                                            
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl037
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl037
#            #add-point:ON ACTION controlp INFIELD xmdl037
#                                                                                                            
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl056
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl056
#            #add-point:ON ACTION controlp INFIELD xmdl056
#
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl088
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl088
#            #add-point:ON ACTION controlp INFIELD xmdl088
#
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xmdl034
#         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD xmdl034
#            #add-point:ON ACTION controlp INFIELD xmdl034
#
#            #END add-point
# 
# 
# 
#         ON ROW CHANGE
#            IF INT_FLAG THEN
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = '' 
#               LET g_errparam.code   = 9001 
#               LET g_errparam.popup  = FALSE 
#               CALL cl_err()
#               LET INT_FLAG = 0
#               LET g_xmdl_d[l_ac].* = g_xmdl_d_t.*
#               CLOSE axmt540_bcl
#               CALL s_transaction_end('N','0')
#               EXIT DIALOG 
#            END IF
#              
#            IF l_lock_sw = 'Y' THEN
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = g_xmdl_d[l_ac].xmdlseq 
#               LET g_errparam.code   = -263 
#               LET g_errparam.popup  = TRUE 
#               CALL cl_err()
#               LET g_xmdl_d[l_ac].* = g_xmdl_d_t.*
#            ELSE
#            
#               #add-point:單身修改前
#              IF g_pmao_flag = 'Y' THEN
#                  
#                      IF NOT s_axmt500_ins_pmao(g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk007,g_xmdl_d[l_ac].xmdl006,g_xmdl_d[l_ac].xmdl007,g_xmdl_d[l_ac].xmdl033,
#                                                g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010) THEN
#                        LET g_xmdl_d[l_ac].xmdl033 = ''
#                        LET g_xmdl_d[l_ac].l_pmao009 = ''
#                        LET g_xmdl_d[l_ac].l_pmao010 = ''
#                        DISPLAY BY NAME g_xmdl_d[l_ac].xmdl007,g_xmdl_d[l_ac].xmdl033,
#                                                g_xmdl_d[l_ac].l_pmao009,g_xmdl_d[l_ac].l_pmao010
#                      END IF
#                  
#               END IF
#              CALL axmt540_row_default()
#
#               #稅額計算
#               CALL s_axmt540_tax_count(g_xmdl_d_t.xmdlseq,g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,g_site,g_xmdl2_d[l_ac].xmdl025,
#                                        g_xmdl_d[l_ac].xmdl022,g_xmdl2_d[l_ac].xmdl024,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,
#                                        g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,g_xmdl_d[l_ac].xmdl018)
#               RETURNING g_xmdl2_d[l_ac].xmdl027,g_xmdl2_d[l_ac].xmdl028,g_xmdl2_d[l_ac].xmdl029
#               
#               #end add-point
#               
#               #寫入修改者/修改日期資訊(單身)
#               
#      
#               #將遮罩欄位還原
#               CALL axmt540_xmdl_t_mask_restore('restore_mask_o')
#      
#               UPDATE xmdl_t SET (xmdldocno,xmdlsite,xmdlseq,xmdl001,xmdl002,xmdl003,xmdl004,xmdl005, 
#                   xmdl006,xmdl007,xmdl008,xmdl009,xmdl033,xmdl011,xmdl012,xmdl017,xmdl018,xmdl019,xmdl020, 
#                   xmdl010,xmdl013,xmdl014,xmdl015,xmdl016,xmdl052,xmdl021,xmdl022,xmdl050,xmdl023,xmdl041, 
#                   xmdl030,xmdl031,xmdl032,xmdl051,xmdl035,xmdl036,xmdl037,xmdl056,xmdl088,xmdl034,xmdl024, 
#                   xmdl025,xmdl026,xmdl027,xmdl028,xmdl029,xmdl042,xmdl043,xmdl044,xmdl045,xmdl046,xmdl087) = (g_xmdk_m.xmdkdocno, 
#                   g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdlseq,g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002, 
#                   g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,g_xmdl_d[l_ac].xmdl005,g_xmdl_d[l_ac].xmdl006, 
#                   g_xmdl_d[l_ac].xmdl007,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,g_xmdl_d[l_ac].xmdl033, 
#                   g_xmdl_d[l_ac].xmdl011,g_xmdl_d[l_ac].xmdl012,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018, 
#                   g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl020,g_xmdl_d[l_ac].xmdl010,g_xmdl_d[l_ac].xmdl013, 
#                   g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,g_xmdl_d[l_ac].xmdl052, 
#                   g_xmdl_d[l_ac].xmdl021,g_xmdl_d[l_ac].xmdl022,g_xmdl_d[l_ac].xmdl050,g_xmdl_d[l_ac].xmdl023, 
#                   g_xmdl_d[l_ac].xmdl041,g_xmdl_d[l_ac].xmdl030,g_xmdl_d[l_ac].xmdl031,g_xmdl_d[l_ac].xmdl032, 
#                   g_xmdl_d[l_ac].xmdl051,g_xmdl_d[l_ac].xmdl035,g_xmdl_d[l_ac].xmdl036,g_xmdl_d[l_ac].xmdl037, 
#                   g_xmdl_d[l_ac].xmdl056,g_xmdl_d[l_ac].xmdl088,g_xmdl_d[l_ac].xmdl034,g_xmdl2_d[l_ac].xmdl024, 
#                   g_xmdl2_d[l_ac].xmdl025,g_xmdl2_d[l_ac].xmdl026,g_xmdl2_d[l_ac].xmdl027,g_xmdl2_d[l_ac].xmdl028, 
#                   g_xmdl2_d[l_ac].xmdl029,g_xmdl2_d[l_ac].xmdl042,g_xmdl2_d[l_ac].xmdl043,g_xmdl2_d[l_ac].xmdl044, 
#                   g_xmdl2_d[l_ac].xmdl045,g_xmdl2_d[l_ac].xmdl046,g_xmdl2_d[l_ac].xmdl087)
#                WHERE xmdlent = g_enterprise AND xmdldocno = g_xmdk_m.xmdkdocno 
# 
#                  AND xmdlseq = g_xmdl_d_t.xmdlseq #項次   
# 
#                  
#               #add-point:單身修改中
#
#               #end add-point
#               CASE
#                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
#                     INITIALIZE g_errparam TO NULL 
#                     LET g_errparam.extend = "xmdl_t" 
#                     LET g_errparam.code   = "std-00009" 
#                     LET g_errparam.popup  = TRUE 
#                     CALL cl_err()
#                     CALL s_transaction_end('N','0')
#                     LET g_xmdl_d[l_ac].* = g_xmdl_d_t.*
#                  WHEN SQLCA.sqlcode #其他錯誤
#                     INITIALIZE g_errparam TO NULL 
#                     LET g_errparam.extend = "xmdl_t" 
#                     LET g_errparam.code   = SQLCA.sqlcode 
#                     LET g_errparam.popup  = TRUE 
#                     CALL cl_err()                   
#                     CALL s_transaction_end('N','0')
#                     LET g_xmdl_d[l_ac].* = g_xmdl_d_t.*  
#                  OTHERWISE
#                                    INITIALIZE gs_keys TO NULL 
#               LET gs_keys[1] = g_xmdk_m.xmdkdocno
#               LET gs_keys_bak[1] = g_xmdkdocno_t
#               LET gs_keys[2] = g_xmdl_d[g_detail_idx].xmdlseq
#               LET gs_keys_bak[2] = g_xmdl_d_t.xmdlseq
#               CALL axmt540_update_b('xmdl_t',gs_keys,gs_keys_bak,"'1'")
#                     #資料多語言用-增/改
#                     
#               END CASE
# 
#               #將遮罩欄位進行遮蔽
#               CALL axmt540_xmdl_t_mask_restore('restore_mask_n')
#               
#               #判斷key是否有改變
#               INITIALIZE gs_keys TO NULL
#               IF NOT(g_xmdl_d[g_detail_idx].xmdlseq = g_xmdl_d_t.xmdlseq 
# 
#                  ) THEN
#                  LET gs_keys[01] = g_xmdk_m.xmdkdocno
# 
#                  LET gs_keys[gs_keys.getLength()+1] = g_xmdl_d_t.xmdlseq
# 
#                  CALL axmt540_key_update_b(gs_keys,'xmdl_t')
#               END IF
#               
#               #修改歷程記錄(單身修改)
#               LET g_log1 = util.JSON.stringify(g_xmdk_m),util.JSON.stringify(g_xmdl_d_t)
#               LET g_log2 = util.JSON.stringify(g_xmdk_m),util.JSON.stringify(g_xmdl_d[l_ac])
#               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
#                  CALL s_transaction_end('N','0')
#               END IF
#               
#               #add-point:單身修改後
#               #新增多庫儲批
#               CALL axmt540_01_xmdm_modify('1',l_xmdlseq_backup,g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,
#                                           g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,g_xmdl_d[l_ac].xmdl011,g_xmdl_d[l_ac].xmdl012,
#                                           g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,g_xmdl_d[l_ac].xmdl052,
#                                           g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl020,
#                                           '','') RETURNING l_success
#               IF NOT l_success THEN
#                  CALL s_transaction_end('N','0')
#                  LET g_xmdl_d[l_ac].* = g_xmdl_d_t.*
#               END IF
#               
#               #重新計算整單的未稅、含稅總金額
#               CALL axmt540_tax_recount(g_xmdk_m.xmdkdocno) RETURNING l_success                     
#               IF NOT l_success THEN
#                  CALL s_transaction_end('N','0')
#                  LET g_xmdl_d[l_ac].* = g_xmdl_d_t.*
#               END IF
#               
#              
#               #end add-point
# 
#            END IF
#            
#         AFTER ROW
#            #add-point:單身after_row
#
#            #end add-point
#            CALL axmt540_unlock_b("xmdl_t","'1'")
#            CALL s_transaction_end('Y','0')
#            #其他table進行unlock
#            #add-point:單身after_row2
#
#            #end add-point
#              
#         AFTER INPUT
#            #add-point:input段after input 
#            
#            CALL axmt540_b_fill()
#            
#            #end add-point 
#    
#         ON ACTION controlo    
#            IF l_insert THEN
#               LET li_reproduce = l_ac_t
#               LET li_reproduce_target = l_ac
#               LET g_xmdl_d[li_reproduce_target].* = g_xmdl_d[li_reproduce].*
#               LET g_xmdl2_d[li_reproduce_target].* = g_xmdl2_d[li_reproduce].*
# 
#               LET g_xmdl_d[li_reproduce_target].xmdlseq = NULL
# 
#            ELSE
#               CALL FGL_SET_ARR_CURR(g_xmdl_d.getLength()+1)
#               LET lb_reproduce = TRUE
#               LET li_reproduce = l_ac
#               LET li_reproduce_target = g_xmdl_d.getLength()+1
#            END IF
#            
#         #ON ACTION cancel
#         #   LET INT_FLAG = 1
#         #   LET g_detail_idx = 1
#         #   EXIT DIALOG 
# 
#      END INPUT
      
 
      
 
      
 
      
      #add-point:自定義input
                                                      
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog
                                                                                 
         #end add-point    
         #重新導回資料到正確位置上
#         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1','2',"))      
#         CALL DIALOG.setCurrentRow("s_detail2",g_idx_group.getValue("'3',"))
#         CALL DIALOG.setCurrentRow("s_detail3",g_idx_group.getValue(""))
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field

            #end add-point  
            NEXT FIELD xmdkdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xmdlsite
               WHEN "s_detail2"
                  NEXT FIELD xmdlseq_2
               WHEN "s_detail3"
                  NEXT FIELD xmdmsite
 
               #add-point:input段modify_detail 

               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog

         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 

         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel

         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close

         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit

         #end add-point
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
END FUNCTION

################################################################################
# Descriptions...: 匯率計算基準為'依訂單日匯率'，直接回抓訂單匯率
# Memo...........:
# Usage..........: CALL axmt540_xmda_xmdk017()
#                  RETURNING r_xmdk017
# Input parameter: 
# Return code....: r_xmdk017  匯率
# Date & Author..: 2015/11/18 By shiun
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_xmda_xmdk017()
   DEFINE r_xmdk017   LIKE xmdk_t.xmdk017

   LET r_xmdk017 = ''
   IF g_xmdk_m.xmdk043 = '1' AND NOT cl_null(g_xmdk_m.xmdk006) THEN
      SELECT xmda016 INTO r_xmdk017
        FROM xmda_t
       WHERE xmdaent = g_enterprise
         AND xmdadocno = g_xmdk_m.xmdk006
   END IF
   RETURN r_xmdk017
END FUNCTION

PRIVATE FUNCTION axmt540_set_entry_address()

   CALL cl_set_comp_entry("xmdk010,xmdk011,xmdk032",TRUE)

END FUNCTION

PRIVATE FUNCTION axmt540_set_no_entry_address()
DEFINE l_count   LIKE xmdl_t.xmdl038

   LET l_count = 0
   SELECT SUM(xmdl038) + SUM(xmdl039) + SUM(xmdl040) INTO l_count
     FROM xmdl_t
    WHERE xmdlent = g_enterprise
      AND xmdldocno = g_xmdk_m.xmdkdocno
   
   IF l_count > 0 THEN
      CALL cl_set_comp_entry("xmdk010,xmdk011,xmdk032",FALSE)
   END IF

END FUNCTION

################################################################################
# Descriptions...: 執行預算轉入功能
# Memo...........:
# Usage..........: CALL axmt540_apjm210_shift_to()
#                  RETURNING r_success
# Return code....: r_success   TRUE/FALSE
# Date & Author..: 2015/11/20 By lixiang
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_apjm210_shift_to()
DEFINE r_success     LIKE type_t.num5
DEFINE l_i           LIKE type_t.num10
DEFINE l_n           LIKE type_t.num10
DEFINE l_cnt         LIKE type_t.num10
DEFINE l_str1        STRING
DEFINE l_str2        STRING
DEFINE l_str3        STRING
DEFINE  tok          base.StringTokenizer

    LET r_success = TRUE
    
    IF cl_null(g_xmdk_m.xmdkdocno) THEN
       #傳入單據編號為空;請指定單據編號!
       INITIALIZE g_errparam TO NULL
       LET g_errparam.code = 'sub-00228'
       LET g_errparam.extend = g_xmdk_m.xmdkdocno
       LET g_errparam.popup = TRUE
       CALL cl_err()
       LET r_success = FALSE
       RETURN r_success
    END IF

    INITIALIZE g_qryparam.* TO NULL
    LET g_qryparam.state = 'm'
	 LET g_qryparam.reqry = FALSE
    CALL q_pjbd005()                           #呼叫開窗
    
    IF g_qryparam.str_array.getLength() > 0 THEN
       LET l_n = 1
       FOR l_i = 1 TO g_qryparam.str_array.getLength()
          LET tok = base.StringTokenizer.create(g_qryparam.str_array[l_i],"|")
          LET l_cnt = 0
          WHILE tok.hasMoreTokens()
             LET l_cnt = l_cnt + 1
             CASE l_cnt
                WHEN "1"
                   LET l_str1 = tok.nextToken()
                WHEN "2"
                   LET l_str2 = tok.nextToken()
                WHEN "3"
                   LET l_str3 = tok.nextToken()
                OTHERWISE
                   EXIT WHILE
             END CASE
          END WHILE
          
          #插入單身表中
          IF NOT axmt540_apjm210_shift_to_ins(l_str1,l_str2,l_str3) THEN
             LET r_success = FALSE
             RETURN r_success
          END IF
          LET l_n = l_n + 1
       END FOR
       #無資料產生
       IF l_n = 1 THEN
          LET r_success = FALSE
          RETURN r_success
       ELSE
          #重新計算整單的未稅、含稅總金額
          IF NOT axmt540_tax_recount(g_xmdk_m.xmdkdocno) THEN
             LET r_success = FALSE
             RETURN r_success
          END IF
       END IF
    ELSE
       LET r_success = FALSE
       RETURN r_success
    END IF
    
    RETURN r_success
     
END FUNCTION
################################################################################
# Descriptions...: 執行預算轉入功能
# Memo...........:
# Usage..........: CALL axmt540_apjm210_shift_to_ins(p_pjbd001,p_pjbd002,p_pjbd003)
#                  RETURNING r_success
# Input parameter: p_pjbd001   專案編號
#                  p_pjbd002   WBS編號
#                  p_pjbd003   項次
# Return code....: r_success   TRUE/FALSE
# Date & Author..: 2015/11/20 By lixiang
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_apjm210_shift_to_ins(p_pjbd001,p_pjbd002,p_pjbd003)
DEFINE p_pjbd001     LIKE pjbd_t.pjbd001
DEFINE p_pjbd002     LIKE pjbd_t.pjbd002
DEFINE p_pjbd003     LIKE pjbd_t.pjbd003
DEFINE r_success     LIKE type_t.num5
#mod--161109-00085#4-s
#DEFINE l_xmdl     RECORD LIKE xmdl_t.*
DEFINE l_xmdl RECORD  #出貨/簽收/銷退單單身明細檔
       xmdlent LIKE xmdl_t.xmdlent, #企業編號
       xmdlsite LIKE xmdl_t.xmdlsite, #營運據點
       xmdldocno LIKE xmdl_t.xmdldocno, #單據編號
       xmdlseq LIKE xmdl_t.xmdlseq, #項次
       xmdl001 LIKE xmdl_t.xmdl001, #出通單號
       xmdl002 LIKE xmdl_t.xmdl002, #出通項次
       xmdl003 LIKE xmdl_t.xmdl003, #訂單單號
       xmdl004 LIKE xmdl_t.xmdl004, #訂單項次
       xmdl005 LIKE xmdl_t.xmdl005, #訂單項序
       xmdl006 LIKE xmdl_t.xmdl006, #訂單分批序
       xmdl007 LIKE xmdl_t.xmdl007, #子件特性
       xmdl008 LIKE xmdl_t.xmdl008, #料件編號
       xmdl009 LIKE xmdl_t.xmdl009, #產品特徵
       xmdl010 LIKE xmdl_t.xmdl010, #包裝容器
       xmdl011 LIKE xmdl_t.xmdl011, #作業編號
       xmdl012 LIKE xmdl_t.xmdl012, #作業序
       xmdl013 LIKE xmdl_t.xmdl013, #多庫儲批出貨
       xmdl014 LIKE xmdl_t.xmdl014, #庫位
       xmdl015 LIKE xmdl_t.xmdl015, #儲位
       xmdl016 LIKE xmdl_t.xmdl016, #批號
       xmdl017 LIKE xmdl_t.xmdl017, #出貨單位
       xmdl018 LIKE xmdl_t.xmdl018, #數量
       xmdl019 LIKE xmdl_t.xmdl019, #參考單位
       xmdl020 LIKE xmdl_t.xmdl020, #參考數量
       xmdl021 LIKE xmdl_t.xmdl021, #計價單位
       xmdl022 LIKE xmdl_t.xmdl022, #計價數量
       xmdl023 LIKE xmdl_t.xmdl023, #檢驗否
       xmdl024 LIKE xmdl_t.xmdl024, #單價
       xmdl025 LIKE xmdl_t.xmdl025, #稅別
       xmdl026 LIKE xmdl_t.xmdl026, #稅率
       xmdl027 LIKE xmdl_t.xmdl027, #未稅金額
       xmdl028 LIKE xmdl_t.xmdl028, #含稅金額
       xmdl029 LIKE xmdl_t.xmdl029, #稅額
       xmdl030 LIKE xmdl_t.xmdl030, #專案編號
       xmdl031 LIKE xmdl_t.xmdl031, #WBS編號
       xmdl032 LIKE xmdl_t.xmdl032, #活動編號
       xmdl033 LIKE xmdl_t.xmdl033, #客戶料號
       xmdl034 LIKE xmdl_t.xmdl034, #QPA
       xmdl035 LIKE xmdl_t.xmdl035, #已簽收量
       xmdl036 LIKE xmdl_t.xmdl036, #已簽退量
       xmdl037 LIKE xmdl_t.xmdl037, #已銷退量
       xmdl038 LIKE xmdl_t.xmdl038, #主帳套已立帳數量
       xmdl039 LIKE xmdl_t.xmdl039, #帳套二已立帳數量
       xmdl040 LIKE xmdl_t.xmdl040, #帳套三已立帳數量
       xmdl041 LIKE xmdl_t.xmdl041, #保稅否
       xmdl042 LIKE xmdl_t.xmdl042, #取價來源
       xmdl043 LIKE xmdl_t.xmdl043, #價格來源參考單號
       xmdl044 LIKE xmdl_t.xmdl044, #價格來源參考項次
       xmdl045 LIKE xmdl_t.xmdl045, #取出價格
       xmdl046 LIKE xmdl_t.xmdl046, #價差比
       xmdl047 LIKE xmdl_t.xmdl047, #已開發票數量
       xmdl048 LIKE xmdl_t.xmdl048, #發票編號
       xmdl049 LIKE xmdl_t.xmdl049, #發票號碼
       xmdl050 LIKE xmdl_t.xmdl050, #理由碼
       xmdl051 LIKE xmdl_t.xmdl051, #備註
       xmdl052 LIKE xmdl_t.xmdl052, #庫存管理特徵
       xmdl053 LIKE xmdl_t.xmdl053, #主帳套暫估數量
       xmdl054 LIKE xmdl_t.xmdl054, #帳套二暫估數量
       xmdl055 LIKE xmdl_t.xmdl055, #帳套三暫估數量
       xmdl081 LIKE xmdl_t.xmdl081, #簽退數量(簽收、簽退單使用)
       xmdl082 LIKE xmdl_t.xmdl082, #簽退參考數量(簽收、簽退單使用)
       xmdl083 LIKE xmdl_t.xmdl083, #簽退計價數量(簽收、簽退單使用)
       xmdl084 LIKE xmdl_t.xmdl084, #簽退理由碼(簽收、簽退單使用)
       xmdl085 LIKE xmdl_t.xmdl085, #訂單開立據點
       xmdl086 LIKE xmdl_t.xmdl086, #訂單多角性質
       xmdl087 LIKE xmdl_t.xmdl087, #需自立應收否
       xmdl088 LIKE xmdl_t.xmdl088, #多角流程編號
       xmdl089 LIKE xmdl_t.xmdl089, #QC單號
       xmdl090 LIKE xmdl_t.xmdl090, #判定項次
       xmdl091 LIKE xmdl_t.xmdl091, #判定結果
       xmdl092 LIKE xmdl_t.xmdl092, #借貨還量數量
       xmdl093 LIKE xmdl_t.xmdl093, #借貨還量參考數量
       xmdl200 LIKE xmdl_t.xmdl200, #銷售通路
       xmdl201 LIKE xmdl_t.xmdl201, #產品組編碼
       xmdl202 LIKE xmdl_t.xmdl202, #銷售範圍編碼
       xmdl203 LIKE xmdl_t.xmdl203, #銷售辦公室
       xmdl204 LIKE xmdl_t.xmdl204, #出貨包裝單位
       xmdl205 LIKE xmdl_t.xmdl205, #出貨包裝數量
       xmdl206 LIKE xmdl_t.xmdl206, #簽退包裝數量
       xmdl207 LIKE xmdl_t.xmdl207, #庫存鎖定等級
       xmdl208 LIKE xmdl_t.xmdl208, #標準價
       xmdl209 LIKE xmdl_t.xmdl209, #促銷價
       xmdl210 LIKE xmdl_t.xmdl210, #交易價
       xmdl211 LIKE xmdl_t.xmdl211, #折價金額
       xmdl212 LIKE xmdl_t.xmdl212, #銷售組織
       xmdl213 LIKE xmdl_t.xmdl213, #銷售人員
       xmdl214 LIKE xmdl_t.xmdl214, #銷售部門
       xmdl215 LIKE xmdl_t.xmdl215, #合約編號
       xmdl216 LIKE xmdl_t.xmdl216, #經營方式
       xmdl217 LIKE xmdl_t.xmdl217, #結算類型
       xmdl218 LIKE xmdl_t.xmdl218, #結算方式
       xmdl219 LIKE xmdl_t.xmdl219, #交易類型
       xmdl220 LIKE xmdl_t.xmdl220, #寄銷已核銷數量
       xmdl222 LIKE xmdl_t.xmdl222, #地區編號
       xmdl223 LIKE xmdl_t.xmdl223, #縣市編號
       xmdl224 LIKE xmdl_t.xmdl224, #省區編號
       xmdl225 LIKE xmdl_t.xmdl225, #區域編號
       xmdl226 LIKE xmdl_t.xmdl226, #商品條碼
       xmdlunit LIKE xmdl_t.xmdlunit, #應用組織
       xmdlorga LIKE xmdl_t.xmdlorga, #帳務組織
       #161109-00085#76 --s add
       xmdlud001 LIKE xmdl_t.xmdlud001, #自定義欄位(文字)001
       xmdlud002 LIKE xmdl_t.xmdlud002, #自定義欄位(文字)002
       xmdlud003 LIKE xmdl_t.xmdlud003, #自定義欄位(文字)003
       xmdlud004 LIKE xmdl_t.xmdlud004, #自定義欄位(文字)004
       xmdlud005 LIKE xmdl_t.xmdlud005, #自定義欄位(文字)005
       xmdlud006 LIKE xmdl_t.xmdlud006, #自定義欄位(文字)006
       xmdlud007 LIKE xmdl_t.xmdlud007, #自定義欄位(文字)007
       xmdlud008 LIKE xmdl_t.xmdlud008, #自定義欄位(文字)008
       xmdlud009 LIKE xmdl_t.xmdlud009, #自定義欄位(文字)009
       xmdlud010 LIKE xmdl_t.xmdlud010, #自定義欄位(文字)010
       xmdlud011 LIKE xmdl_t.xmdlud011, #自定義欄位(數字)011
       xmdlud012 LIKE xmdl_t.xmdlud012, #自定義欄位(數字)012
       xmdlud013 LIKE xmdl_t.xmdlud013, #自定義欄位(數字)013
       xmdlud014 LIKE xmdl_t.xmdlud014, #自定義欄位(數字)014
       xmdlud015 LIKE xmdl_t.xmdlud015, #自定義欄位(數字)015
       xmdlud016 LIKE xmdl_t.xmdlud016, #自定義欄位(數字)016
       xmdlud017 LIKE xmdl_t.xmdlud017, #自定義欄位(數字)017
       xmdlud018 LIKE xmdl_t.xmdlud018, #自定義欄位(數字)018
       xmdlud019 LIKE xmdl_t.xmdlud019, #自定義欄位(數字)019
       xmdlud020 LIKE xmdl_t.xmdlud020, #自定義欄位(數字)020
       xmdlud021 LIKE xmdl_t.xmdlud021, #自定義欄位(日期時間)021
       xmdlud022 LIKE xmdl_t.xmdlud022, #自定義欄位(日期時間)022
       xmdlud023 LIKE xmdl_t.xmdlud023, #自定義欄位(日期時間)023
       xmdlud024 LIKE xmdl_t.xmdlud024, #自定義欄位(日期時間)024
       xmdlud025 LIKE xmdl_t.xmdlud025, #自定義欄位(日期時間)025
       xmdlud026 LIKE xmdl_t.xmdlud026, #自定義欄位(日期時間)026
       xmdlud027 LIKE xmdl_t.xmdlud027, #自定義欄位(日期時間)027
       xmdlud028 LIKE xmdl_t.xmdlud028, #自定義欄位(日期時間)028
       xmdlud029 LIKE xmdl_t.xmdlud029, #自定義欄位(日期時間)029
       xmdlud030 LIKE xmdl_t.xmdlud030, #自定義欄位(日期時間)030
       #161109-00085#76 --e add
       xmdl056 LIKE xmdl_t.xmdl056, #檢驗合格量
       xmdl094 LIKE xmdl_t.xmdl094, #來源單號(銷退)
       xmdl095 LIKE xmdl_t.xmdl095, #項次(銷退)
       xmdl227 LIKE xmdl_t.xmdl227, #現金折扣單號
       xmdl228 LIKE xmdl_t.xmdl228, #現金折扣單項次
       xmdl057 LIKE xmdl_t.xmdl057, #有效日期
       xmdl058 LIKE xmdl_t.xmdl058, #製造日期
       xmdl096 LIKE xmdl_t.xmdl096, #來源項次
       xmdl059 LIKE xmdl_t.xmdl059, #客戶退貨量
       xmdl060 LIKE xmdl_t.xmdl060 #放行狀態
               END RECORD
#mod--161109-00085#4-e     

DEFINE l_success     LIKE type_t.num5
DEFINE l_xmdl017     LIKE xmdl_t.xmdl017

    LET r_success = TRUE
    
    INITIALIZE l_xmdl.* TO NULL
    
    SELECT MAX(xmdlseq)+1 INTO l_xmdl.xmdlseq FROM xmdl_t
      WHERE xmdlent = g_enterprise
        AND xmdldocno = g_xmdk_m.xmdkdocno
           
    IF l_xmdl.xmdlseq = 0 OR cl_null(l_xmdl.xmdlseq) THEN
       LET l_xmdl.xmdlseq = 1
    END IF 

    LET l_xmdl.xmdl007 = "1"
    LET l_xmdl.xmdl020 = "0"
    LET l_xmdl.xmdl013 = "N"
    LET l_xmdl.xmdl022 = "0"
    LET l_xmdl.xmdl023 = "Y"
    LET l_xmdl.xmdl041 = "N"
    LET l_xmdl.xmdl035 = "0"
    LET l_xmdl.xmdl036 = "0"
    LET l_xmdl.xmdl037 = "0"
    LET l_xmdl.xmdl056 = "0"
    LET l_xmdl.xmdlsite = g_site
    LET l_xmdl.xmdl088 = g_xmdk_m.xmdk044  #多角流程代碼
            
    #需自立應收否 #151105改為Y
    LET l_xmdl.xmdl087 = "Y"     #需自立應收

    LET l_xmdl.xmdl025 = g_xmdk_m.xmdk012
    LET l_xmdl.xmdl026 = g_xmdk_m.xmdk013
    
    #料號、單位、數量、單價
    SELECT pjbd001,pjbd002,pjbd005,pjbd006,pjbd007,pjbd008 
       INTO l_xmdl.xmdl030,l_xmdl.xmdl031,l_xmdl.xmdl008,l_xmdl.xmdl017,l_xmdl.xmdl018,l_xmdl.xmdl024
       FROM pjbd_t 
      WHERE pjbdent = g_enterprise AND pjbd001 = p_pjbd001 AND pjbd002 = p_pjbd002 AND pjbd003 = p_pjbd003
    
    IF cl_null(l_xmdl.xmdl018) THEN
       LET l_xmdl.xmdl018 = 0
    END IF
    IF cl_null(l_xmdl.xmdl024) THEN
       LET l_xmdl.xmdl024 = 0
    END IF
    
    LET l_xmdl.xmdl009 = ' '
    
    LET l_xmdl.xmdl014 = ''
    LET l_xmdl.xmdl015 = ''
    CALL axmt540_xmdl014_default(l_xmdl.xmdl014,l_xmdl.xmdl015)
      RETURNING l_xmdl.xmdl014,l_xmdl.xmdl015
      
    #預帶料件預設值
    #160512-00004#2-mod-(S) 
#    CALL s_axmt540_materials_search(g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdk007,l_xmdl.xmdl008,l_xmdl.xmdl009)
#      RETURNING l_xmdl.xmdl007,l_xmdl.xmdl010,l_xmdl017,l_xmdl.xmdl019,l_xmdl.xmdl021,l_xmdl.xmdl014,l_xmdl.xmdl015
    CALL axmt540_materials_search_1(g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdk007,g_xmdk_m.xmdkdocno,l_xmdl.xmdlseq,1,g_xmdl.xmdl008,g_xmdl.xmdl009,g_xmdl.xmdl016,g_xmdl.xmdl018,g_xmdl.xmdl017)
       RETURNING l_xmdl.xmdl007,l_xmdl.xmdl010,l_xmdl.xmdl017,l_xmdl.xmdl019,l_xmdl.xmdl021,l_xmdl.xmdl014,l_xmdl.xmdl015,l_xmdl.xmdl016,l_xmdl.xmdl052
    #160512-00004#2-mod-(E) 
    IF cl_null(l_xmdl.xmdl017) THEN
       LET l_xmdl.xmdl017 = l_xmdl017
    END IF
    
    IF cl_null(l_xmdl.xmdl007) THEN
       LET l_xmdl.xmdl007 = '1'  
       
       LET l_xmdl.xmdl023 = 'N'   #檢驗
       LET l_xmdl.xmdl041 = 'N'   #保稅
    END IF
    
    IF NOT cl_null(l_xmdl.xmdl017) THEN
       #取位
       CALL s_aooi250_take_decimals(l_xmdl.xmdl017,l_xmdl.xmdl018) RETURNING l_success,l_xmdl.xmdl018
    END IF
    
    #營運據點是否使用參考單位(若不使用為'')
    IF cl_get_para(g_enterprise,g_site,'S-BAS-0028') = "N" THEN
       LET l_xmdl.xmdl019 = ''  #參考單位
    END IF
     
    #推算參考數量
    IF NOT cl_null(l_xmdl.xmdl008) AND NOT cl_null(l_xmdl.xmdl017) AND
       NOT cl_null(l_xmdl.xmdl019) AND NOT cl_null(l_xmdl.xmdl018) THEN
    
       CALL s_aooi250_convert_qty(l_xmdl.xmdl008,l_xmdl.xmdl017,l_xmdl.xmdl019,l_xmdl.xmdl018)
          RETURNING l_success,l_xmdl.xmdl020
    ELSE
       LET l_xmdl.xmdl020 = ''
    END IF
     
    #營運據點是否使用計價單位(若不使用為出貨單位)
    IF cl_get_para(g_enterprise,g_site,'S-BAS-0007') = "N" THEN
       LET l_xmdl.xmdl021 = l_xmdl.xmdl017
    END IF      
    
    #推算計價數量
    IF NOT cl_null(l_xmdl.xmdl008) AND NOT cl_null(l_xmdl.xmdl017) AND
       NOT cl_null(l_xmdl.xmdl021) AND NOT cl_null(l_xmdl.xmdl018) THEN
    
       CALL s_aooi250_convert_qty(l_xmdl.xmdl008,l_xmdl.xmdl017,l_xmdl.xmdl021,l_xmdl.xmdl018)
          RETURNING l_success,l_xmdl.xmdl022
    ELSE
       LET l_xmdl.xmdl022 = ''
    END IF
    IF cl_null(l_xmdl.xmdl021) OR cl_null(l_xmdl.xmdl022) THEN
       LET l_xmdl.xmdl021 = l_xmdl.xmdl017
       LET l_xmdl.xmdl022 = l_xmdl.xmdl018
    END IF
    
    #檢驗否
    IF l_xmdl.xmdl023 = 'N' THEN
       LET l_xmdl.xmdl056 = l_xmdl.xmdl018
    ELSE
       LET l_xmdl.xmdl056 = 0
    END IF
    
    #顯示客戶料號
    CALL s_axmt540_client_no(g_xmdk_m.xmdk007,l_xmdl.xmdl008,l_xmdl.xmdl009) RETURNING l_success,l_xmdl.xmdl033
    
    #稅額計算                     
    CALL s_axmt540_tax_count(l_xmdl.xmdlseq,g_xmdk_m.xmdkdocno,l_xmdl.xmdlseq,g_site,l_xmdl.xmdl025,
                             l_xmdl.xmdl022,l_xmdl.xmdl024,
                             g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,
                             l_xmdl.xmdl003,l_xmdl.xmdl004,l_xmdl.xmdl018)
       RETURNING l_xmdl.xmdl027,l_xmdl.xmdl028,l_xmdl.xmdl029

                     
    INSERT INTO xmdl_t (xmdlent,xmdlsite,xmdldocno,xmdlseq,xmdl001,
                        xmdl002,xmdl003,xmdl004,xmdl005,xmdl006,
                        xmdl007,xmdl008,xmdl009,xmdl010,xmdl011,
                        xmdl012,xmdl013,xmdl014,xmdl015,xmdl016,
                        xmdl017,xmdl018,xmdl019,xmdl020,xmdl021,
                        xmdl022,xmdl023,xmdl024,xmdl025,xmdl026,
                        xmdl027,xmdl028,xmdl029,xmdl030,xmdl031,
                        xmdl032,xmdl033,xmdl034,xmdl035,xmdl036,
                        xmdl037,xmdl038,xmdl039,xmdl040,xmdl041,
                        xmdl042,xmdl043,xmdl044,xmdl045,xmdl046,
                        xmdl050,xmdl051,xmdl081,xmdl082,xmdl083,
                        xmdl084,xmdl087,xmdl088,xmdl052,
                        xmdl056)
         VALUES (g_enterprise,g_site,g_xmdk_m.xmdkdocno,l_xmdl.xmdlseq,l_xmdl.xmdl001,
                 l_xmdl.xmdl002,l_xmdl.xmdl003,l_xmdl.xmdl004,l_xmdl.xmdl005,l_xmdl.xmdl006,
                 l_xmdl.xmdl007,l_xmdl.xmdl008,l_xmdl.xmdl009,l_xmdl.xmdl010,l_xmdl.xmdl011,
                 l_xmdl.xmdl012,l_xmdl.xmdl013,l_xmdl.xmdl014,l_xmdl.xmdl015,l_xmdl.xmdl016,
                 l_xmdl.xmdl017,l_xmdl.xmdl018,l_xmdl.xmdl019,l_xmdl.xmdl020,l_xmdl.xmdl021,
                 l_xmdl.xmdl022,l_xmdl.xmdl023,l_xmdl.xmdl024,l_xmdl.xmdl025,l_xmdl.xmdl026,
                 l_xmdl.xmdl027,l_xmdl.xmdl028,l_xmdl.xmdl029,l_xmdl.xmdl030,l_xmdl.xmdl031,
                 l_xmdl.xmdl032,l_xmdl.xmdl033,l_xmdl.xmdl034,l_xmdl.xmdl035,l_xmdl.xmdl036,
                 l_xmdl.xmdl037,l_xmdl.xmdl038,l_xmdl.xmdl039,l_xmdl.xmdl040,l_xmdl.xmdl041,
                 l_xmdl.xmdl042,l_xmdl.xmdl043,l_xmdl.xmdl044,l_xmdl.xmdl045,l_xmdl.xmdl046,
                 l_xmdl.xmdl050,l_xmdl.xmdl051,l_xmdl.xmdl081,l_xmdl.xmdl082,l_xmdl.xmdl083,
                 l_xmdl.xmdl084,l_xmdl.xmdl087,l_xmdl.xmdl088,l_xmdl.xmdl052,
                 l_xmdl.xmdl056)
    IF SQLCA.sqlcode THEN
       INITIALIZE g_errparam TO NULL
       LET g_errparam.code = SQLCA.sqlcode
       LET g_errparam.extend = "xmdl_t"
       LET g_errparam.popup = FALSE
       CALL cl_err()
       LET r_success = FALSE
       RETURN r_success       
    END IF
     
    #新增多庫儲批
    CALL axmt540_01_xmdm_modify('1',l_xmdl.xmdlseq,g_site,g_xmdk_m.xmdkdocno,l_xmdl.xmdlseq,
                                l_xmdl.xmdl008,l_xmdl.xmdl009,l_xmdl.xmdl011,l_xmdl.xmdl012,
                                l_xmdl.xmdl014,l_xmdl.xmdl015,l_xmdl.xmdl016,l_xmdl.xmdl052,
                                l_xmdl.xmdl017,l_xmdl.xmdl018,l_xmdl.xmdl019,l_xmdl.xmdl020,
                                '','') RETURNING l_success                   
    IF NOT l_success THEN 
       LET r_success = FALSE
       RETURN r_success 
    END IF
   
    RETURN r_success
    
END FUNCTION

################################################################################
# Descriptions...: 計價單位修改
# Memo...........:
# Usage..........: CALL axmt540_xmdl021()
#                  
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 151209 By earl
# Modify.........: 151209-00018#1  2015/12/09 By earl         修正無來源時計價單位預設問題
################################################################################
PRIVATE FUNCTION axmt540_xmdl021()
   DEFINE l_xmdl   RECORD
             xmdl007    LIKE xmdl_t.xmdl007,  #子件特性
             xmdl010    LIKE xmdl_t.xmdl010,  #包裝容器
             xmdl017    LIKE xmdl_t.xmdl017,  #出貨單位
             xmdl019    LIKE xmdl_t.xmdl019,  #參考單位
             xmdl021    LIKE xmdl_t.xmdl021,  #計價單位
             xmdl014    LIKE xmdl_t.xmdl014,  #出貨庫位
             xmdl015    LIKE xmdl_t.xmdl015,  #出貨儲位
             xmdl016    LIKE xmdl_t.xmdl016,  #出貨批號     #160512-00004#2-add
             xmdl052    LIKE xmdl_t.xmdl052   #庫存管理特徵 #160512-00004#2-add
                   END RECORD
      
      #預帶料件預設值
      CALL s_axmt540_materials_search(g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdk007,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009)
      RETURNING l_xmdl.xmdl007,l_xmdl.xmdl010,l_xmdl.xmdl017,l_xmdl.xmdl019,l_xmdl.xmdl021,l_xmdl.xmdl014,l_xmdl.xmdl015
      
      #無預設之計價單位
      IF cl_null(l_xmdl.xmdl021) THEN
         LET l_xmdl.xmdl021 = g_xmdl_d[l_ac].xmdl017
      END IF
      
      #營運據點是否使用計價單位(若不使用為出貨單位)
      IF cl_get_para(g_enterprise,g_site,'S-BAS-0007') = "N" THEN
         LET g_xmdl_d[l_ac].xmdl021 = g_xmdl_d[l_ac].xmdl017
      ELSE
         LET g_xmdl_d[l_ac].xmdl021 = l_xmdl.xmdl021  #計價單位
      END IF      
      
      LET g_xmdl_d_o.xmdl021 = g_xmdl_d[l_ac].xmdl021
      CALL s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl021) RETURNING g_xmdl_d[l_ac].xmdl021_desc 
      
END FUNCTION

################################################################################
# Descriptions...: 帶出發起站多角性質
# Memo...........:
# Usage..........: CALL axmt540_xmdk045_default(p_type,p_xmdk045,p_xmdk044,p_xmdk035)
#                  RETURNING r_xmdk045
# Input parameter: p_type      #來源類型 1.出通 2.出貨
#                : p_xmdk045   #多角性質
#                : p_xmdk044   #多角代碼
#                : p_xmdk035   #多角序號
# Return code....: r_xmdk045   #多角性質
#                : 
# Date & Author..: 2015/12/15 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_xmdk045_default(p_type,p_xmdk045,p_xmdk044,p_xmdk035)
   DEFINE p_type        LIKE type_t.chr1     #1.出通 2.出貨
   DEFINE p_xmdk045     LIKE xmdk_t.xmdk045  #多角性質
   DEFINE p_xmdk044     LIKE xmdk_t.xmdk044  #多角代碼
   DEFINE p_xmdk035     LIKE xmdk_t.xmdk035  #多角序號
   DEFINE r_xmdk045     LIKE xmdk_t.xmdk045  #多角性質
   
   DEFINE l_icaa003     LIKE icaa_t.icaa003  #流程類型
   DEFINE l_icaa011     LIKE icaa_t.icaa011  #出通單開立點
   
   LET r_xmdk045 = p_xmdk045
   
   #多角性質
   IF NOT cl_null(p_xmdk044) AND NOT cl_null(p_xmdk035) THEN
      LET l_icaa003 = ''
      LET l_icaa011 = ''
      SELECT icaa003,icaa011
        INTO l_icaa003,l_icaa011
        FROM icaa_t
       WHERE icaaent = g_enterprise
         AND icaa001 = p_xmdk044
      
      LET r_xmdk045 = ''
      CASE p_type
         WHEN '1' #出通單
            IF l_icaa011 = '1' THEN  #出通單正拋
               #改抓第0站之多角性質
               SELECT xmdg034
                 INTO r_xmdk045
                 FROM xmdg_t
                WHERE xmdgent = g_enterprise
                  AND xmdg055 = p_xmdk035
                  AND xmdgsite = (SELECT icab003
                                    FROM icab_t
                                   WHERE icabent = g_enterprise
                                     AND icab001 = p_xmdk044
                                     AND icab002 = 0)
            ELSE #出通單逆拋
               #改抓最終站之多角性質
               SELECT xmdg034
                 INTO r_xmdk045
                 FROM xmdg_t
                WHERE xmdgent = g_enterprise
                  AND xmdg055 = p_xmdk035
                  AND xmdgsite = (SELECT icab003
                                    FROM icab_t
                                   WHERE icabent = g_enterprise
                                     AND icab001 = p_xmdk044
                                     AND icab002 = (SELECT MAX(icab002)
                                                      FROM icab_t
                                                     WHERE icabent = g_enterprise
                                                       AND icab001 = p_xmdk044))
            END IF
            
         WHEN '2' #訂單
            IF l_icaa003 = '1' THEN
               #改抓第0站之多角性質
               SELECT xmda006
                 INTO r_xmdk045
                 FROM xmda_t
                WHERE xmdaent = g_enterprise
                  AND xmda031 = p_xmdk035
                  AND xmdasite = (SELECT icab003
                                    FROM icab_t
                                   WHERE icabent = g_enterprise
                                     AND icab001 = p_xmdk044
                                     AND icab002 = 0)
            END IF
            
      END CASE
         
      IF cl_null(r_xmdk045) THEN
         LET r_xmdk045 = '7'   #7:代採購出貨
      END IF

   END IF
   
   RETURN r_xmdk045
END FUNCTION

################################################################################
# Descriptions...: 多角單號流水號保持一致檢查
# Memo...........:
# Usage..........: CALL axmt540_order_notice_chk(p_type,p_slip)
#                  RETURNING r_success
# Input parameter: p_type     1.訂單 2.出通單
#                : p_slip     來源單別
# Return code....: r_success  執行結果
#                : 
# Date & Author..: #151210-00009#1 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_order_notice_chk(p_type,p_slip)
   DEFINE p_type      LIKE type_t.chr1   #1.出通單 2.訂單
   DEFINE p_slip      LIKE ooba_t.ooba001
   DEFINE r_success   LIKE type_t.num5
   
   DEFINE l_sql       STRING
   DEFINE l_success   LIKE type_t.num5
   DEFINE l_slip      LIKE ooba_t.ooba001
   DEFINE l_n         LIKE type_t.num10
      
   LET r_success = TRUE
   
   IF NOT cl_null(g_xmdk_m.xmdkdocno) THEN
      IF g_aic_doc THEN
         LET l_slip = ''
         CALL s_aooi200_get_slip(g_xmdk_m.xmdkdocno) RETURNING l_success,l_slip
         
         LET l_sql = "SELECT COUNT(*)",
                     "  FROM icab_t,icac_t",
                     " WHERE icabent = icacent AND icacent = ",g_enterprise,
                     "   AND icab001 = icac001",
                     "   AND icab002 = icac002",
                     "   AND icab003 = '",g_site,"'",
                     "   AND (icac007 = '",l_slip,"' OR icac015 = '",l_slip,"')"
         PREPARE axmt540_order_notice_pre1 FROM l_sql
         
         IF p_type = '1' THEN #出通單
            LET l_sql = l_sql," AND icac004 = '",p_slip,"'"
         ELSE   #訂單
            LET l_sql = l_sql," AND icac003 = '",p_slip,"'"
         END IF
         PREPARE axmt540_order_notice_pre2 FROM l_sql
         
         LET l_n = 0
         EXECUTE axmt540_order_notice_pre1 INTO l_n
         
         IF l_n > 0 THEN
            LET l_n = 0
            EXECUTE axmt540_order_notice_pre2 INTO l_n
            IF l_n = 0 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "aic-00211"   #多角貿易設定為"多角單據流水號保持一致"時前後單別需存在對應關係！
               LET g_errparam.extend = ""
               LET g_errparam.popup = FALSE
               CALL cl_err()
             
               LET r_success = FALSE
               RETURN r_success
            END IF
            
         END IF
            
      END IF
   END IF

   RETURN r_success
END FUNCTION
#一次性交易對象全名抓取
PRIVATE FUNCTION axmt540_xmdk047_ref(p_xmdk047,p_cmd)
DEFINE p_xmdk047  LIKE xmdk_t.xmdk047
DEFINE r_pmak003  LIKE pmak_t.pmak003
#161207-00033#30-s-add
DEFINE p_cmd      LIKE type_t.chr1       
DEFINE l_type     LIKE type_t.num5
DEFINE l_docno    LIKE xmdk_t.xmdkdocno
#161207-00033#30-e-add

    LET r_pmak003 = ''
    IF p_cmd = 'a' THEN       #161207-00033#30-s add
       SELECT pmak003 INTO r_pmak003
         FROM pmak_t
        WHERE pmakent = g_enterprise
          AND pmak001 = p_xmdk047 
    ELSE
    #161207-00033#30-s add
       CASE 
          WHEN NOT cl_null(g_xmdk_m.xmdk006) #訂單
             LET l_type = '1'
             LET l_docno = g_xmdk_m.xmdk006
          WHEN NOT cl_null(g_xmdk_m.xmdk005) #出通單
             LET l_type = '2'
             LET l_docno = g_xmdk_m.xmdk006
          OTHERWISE #出貨單
             LET l_type = '3'
             LET l_docno = g_xmdk_m.xmdkdocno
       END CASE
       CALL s_desc_axm_get_oneturn_guest_desc(l_type,l_docno)
          RETURNING r_pmak003 
    END IF       
    #161207-00033#30-e add       
    IF cl_null(r_pmak003) THEN
       CALL s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk007) RETURNING r_pmak003
    #161207-00033#30-s add
    ELSE
       LET g_xmdk_m.xmdk007_desc = r_pmak003
       IF g_xmdk_m.xmdk008 = g_xmdk_m.xmdk007 THEN   #帳款客戶
          LET g_xmdk_m.xmdk008_desc = g_xmdk_m.xmdk007_desc
       END IF
       IF g_xmdk_m.xmdk009 = g_xmdk_m.xmdk007 THEN   #收貨客戶
          LET g_xmdk_m.xmdk009_desc = g_xmdk_m.xmdk007_desc
       END IF
       IF g_xmdk_m.xmdk202 = g_xmdk_m.xmdk007 THEN   #發票客戶
          LET g_xmdk_m.xmdk202_desc = g_xmdk_m.xmdk007_desc
       END IF
       DISPLAY BY NAME g_xmdk_m.xmdk007_desc,g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk009_desc,g_xmdk_m.xmdk202_desc
    #161207-00033#30-e add       
    END IF    
    RETURN r_pmak003
END FUNCTION

################################################################################
# Descriptions...: 預帶料件預設值
# Memo...........: 
# Usage..........: CALL axmt540_materials_search_1(p_xmdk003,p_xmdk004,p_xmdk007,p_xmdl003,p_xmdl004,p_xmdl005,p_xmdl008,p_xmdl009,p_xmdl016,p_xmdl018,p_xmdl017)
#                  RETURNING r_xmdl.xmdl007,r_xmdl.xmdl010,r_xmdl.xmdl017,r_xmdl.xmdl019,r_xmdl.xmdl021,r_xmdl.xmdl014,r_xmdl.xmdl015,r_xmdl.xmdl016,r_xmdl.xmdl052
# Input parameter: p_xmdk003        業務人員
#                : p_xmdk004        業務部門
#                : p_xmdk007        客戶編號
#                : p_xmdl003        單號
#                : p_xmdl004        項次
#                : p_xmdl005        項序
#                : p_xmdl008        料件編號
#                : p_xmdl009        產品特徵
#                : p_xmdl016        批號
#                : p_xmdl018        數量
#                : p_xmdl017        單位
# Return code....: r_xmdl.xmdl007   子件特性
#                : r_xmdl.xmdl010   包裝容器
#                : r_xmdl.xmdl017   出貨單位
#                : r_xmdl.xmdl019   參考單位
#                : r_xmdl.xmdl021   計價單位
#                : r_xmdl.xmdl014   出貨庫位
#                : r_xmdl.xmdl015   出貨儲位
#                : r_xmdl.xmdl016   出貨批號
#                : r_xmdl.xmdl052   出貨庫存管理特徵
# Date & Author..: 2016/06/21 By dorislai (#160512-00004#2)
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_materials_search_1(p_xmdk003,p_xmdk004,p_xmdk007,p_xmdl003,p_xmdl004,p_xmdl005,p_xmdl008,p_xmdl009,p_xmdl016,p_xmdl018,p_xmdl017)
    DEFINE l_imaf059    LIKE imaf_t.imaf059  
    DEFINE l_flag       LIKE type_t.num5     
    DEFINE l_success    LIKE type_t.num5
    DEFINE l_sql        STRING
    DEFINE p_xmdk003    LIKE xmdk_t.xmdk003
    DEFINE p_xmdk004    LIKE xmdk_t.xmdk004
    DEFINE p_xmdk007    LIKE xmdk_t.xmdk007
    DEFINE p_xmdlseq    LIKE xmdl_t.xmdlseq
    DEFINE p_xmdl003    LIKE xmdl_t.xmdl003
    DEFINE p_xmdl004    LIKE xmdl_t.xmdl004
    DEFINE p_xmdl005    LIKE xmdl_t.xmdl005
    DEFINE p_xmdl008    LIKE xmdl_t.xmdl008
    DEFINE p_xmdl009    LIKE xmdl_t.xmdl009
    DEFINE p_xmdl016    LIKE xmdl_t.xmdl016
    DEFINE p_xmdl018    LIKE xmdl_t.xmdl018
    DEFINE p_xmdl017    LIKE xmdl_t.xmdl017
    DEFINE l_inag003    LIKE inag_t.inag003
    DEFINE l_inag004    LIKE inag_t.inag004
    DEFINE l_inag005    LIKE inag_t.inag005
    DEFINE l_inag006    LIKE inag_t.inag006
   
    DEFINE r_xmdl RECORD 
                  xmdl007 LIKE xmdl_t.xmdl007,
                  xmdl010 LIKE xmdl_t.xmdl010,
                  xmdl017 LIKE xmdl_t.xmdl017,
                  xmdl019 LIKE xmdl_t.xmdl019,
                  xmdl021 LIKE xmdl_t.xmdl021,
                  xmdl014 LIKE xmdl_t.xmdl014,
                  xmdl015 LIKE xmdl_t.xmdl015,
                  xmdl016 LIKE xmdl_t.xmdl016,
                  xmdl052 LIKE xmdl_t.xmdl052
                  END RECORD
    #預帶料件預設值 (直接用r_XXX接值，這樣揀貨策略為1.2.3除外的選項，就可以不用多抓一次)
    #---  (在這會先把要回傳的r_xxx值都先給好) ↓
    CALL s_axmt540_materials_search(p_xmdk003,p_xmdk004,p_xmdk007,p_xmdl008,p_xmdl009)
         RETURNING r_xmdl.xmdl007,r_xmdl.xmdl010,r_xmdl.xmdl017,r_xmdl.xmdl019,
                   r_xmdl.xmdl021,r_xmdl.xmdl014,r_xmdl.xmdl015
    LET r_xmdl.xmdl016 = ' ' 
   #LET r_xmdl.xmdl052 = ' '  #160519-00008#8
    #---  (在這會先把要回傳的r_xxx值都先給好) ↑
    
    #抓取aimm212的撿貨策略
    #---1:先進先出(依製造日期) 2:先進先出(依有效日期) 3:後進先出(依製造日期) 4:人工決定
    SELECT imaf059 INTO l_imaf059
      FROM imaf_t
     WHERE imafent = g_enterprise
       AND imafsite = g_site
       AND imaf001 = p_xmdl008
    IF l_imaf059 = '1' OR l_imaf059 = '2' OR l_imaf059 = '3' THEN
       #先依aimm212撿貨策略抓出料號、產品特徵、批號
       LET l_sql = "SELECT inad003 FROM inad_t",
                   " WHERE inadent = ",g_enterprise," AND inadsite = '",g_site,"'",
                   "   AND inad001 = '",p_xmdl008,"' AND inad002 = '",p_xmdl009,"'"
       CASE l_imaf059
         WHEN '1' #先進先出(依製造日期)
            LET l_sql = l_sql CLIPPED," AND inad014=(SELECT MIN(inad014) FROM inad_t ",
                                      "               WHERE inadent = ",g_enterprise," AND inadsite = '",g_site,"'",
                                      "                 AND inad001 = '",p_xmdl008,"' AND inad002 = '",p_xmdl009,"' "
                                      
         WHEN '2' #先進先出(依有效日期)
            LET l_sql = l_sql CLIPPED," AND inad011=(SELECT MIN(inad011) FROM inad_t ",
                                      "               WHERE inadent = ",g_enterprise," AND inadsite = '",g_site,"'",
                                      "                 AND inad001 = '",p_xmdl008,"' AND inad002 = '",p_xmdl009,"' "
         WHEN '3' #後進先出(依製造日期)
            LET l_sql = l_sql CLIPPED," AND inad014=(SELECT MAX(inad014) FROM inad_t ",
                                      "               WHERE inadent = ",g_enterprise," AND inadsite = '",g_site,"'",
                                      "                 AND inad001 = '",p_xmdl008,"' AND inad002 = '",p_xmdl009,"' "
            
       END CASE
       #---若批號有值，要組進去l_sql中            
       IF cl_null(p_xmdl016) THEN
          LET l_sql = l_sql CLIPPED," )"
       ELSE
          LET l_sql = l_sql CLIPPED," AND inad003 = '",p_xmdl016,"')"
       END IF
       LET l_sql = "SELECT inag003,inag004,inag005,inag006 FROM inag_t ",
                   " WHERE inagent = '",g_enterprise,"' AND inagsite = '",g_site,"'",
                   "   AND inag001 = '",p_xmdl008,"' AND inag002 = '",p_xmdl009,"'",
                   "   AND inag004 IS NOT NULL ",
                   "   AND inag008 >= ",p_xmdl018," AND inag006 IN (",l_sql,") ",
                   " ORDER BY inag004,inag005,inag006 "
       PREPARE asft310_01_pre_1 FROM l_sql
       DECLARE asft310_01_cs_1  CURSOR FOR asft310_01_pre_1
       
       LET l_inag003 = ''
       LET l_inag004 = ''
       LET l_inag005 = ''
       LET l_inag006 = ''
       FOREACH asft310_01_cs_1 INTO l_inag003,l_inag004,l_inag005,l_inag006
          #檢查庫存是否足夠
                                       #  ,料件編號  ,產品特徵 ,庫存管理特徵,庫位    ,  儲位   ,  批號   ,
          CALL s_inventory_check_inag008(1,p_xmdl008,p_xmdl009,l_inag003,l_inag004,l_inag005,l_inag006,
                                         # 異動數量     ,  單據   ,   項次  ,  項序    ,  單位  ,營運據點
                                         p_xmdl018     ,p_xmdl003,p_xmdl004,p_xmdl005,p_xmdl017,g_site)
               RETURNING l_success,l_flag
          #庫存量足夠 ; 不足，需將庫儲批拿掉
          IF l_success AND l_flag = '1'THEN
             EXIT FOREACH   #因可能會多筆適合的，但僅需一筆，固有抓到就可以不用在跑FOREACH
          ELSE
             LET l_inag004 = ' '
             LET l_inag005 = ' '
             LET l_inag006 = ' '
          END IF
      END FOREACH
       
      IF l_inag004 IS NULL THEN LET l_inag004 = ' ' END IF
      IF l_inag005 IS NULL THEN LET l_inag005 = ' ' END IF
      IF l_inag006 IS NULL THEN LET l_inag006 = ' ' END IF
     #LET l_inag003 = ' '  #库存管理特征              #160519-00008#8
      LET r_xmdl.xmdl014 = l_inag004
      LET r_xmdl.xmdl015 = l_inag005
      LET r_xmdl.xmdl016 = l_inag006
      LET r_xmdl.xmdl052 = l_inag003     
   END IF
   
   FREE asft310_01_pre_1
   
   RETURN r_xmdl.xmdl007,r_xmdl.xmdl010,r_xmdl.xmdl017,r_xmdl.xmdl019,r_xmdl.xmdl021,
          r_xmdl.xmdl014,r_xmdl.xmdl015,r_xmdl.xmdl016,r_xmdl.xmdl052


END FUNCTION

################################################################################
# Descriptions...: 發票號碼抓取
# Memo...........:
# Usage..........: CALL axmt540_get_xmdk037(p_xmdkdocno,p_xmdk037)
#                  RETURNING r_xmdk037
# Input parameter: p_xmdkdocno    出貨單單號
#                : p_xmdk037      發票號碼
# Return code....: r_xmdk037      發票號碼
# Date & Author..: 160912-00035#1 By 02040
# Modify.........:
################################################################################
PRIVATE FUNCTION axmt540_get_xmdk037(p_xmdkdocno,p_xmdk037)
DEFINE p_xmdkdocno  LIKE xmdk_t.xmdkdocno
DEFINE p_xmdk037    LIKE xmdk_t.xmdk037
DEFINE r_xmdk037    LIKE xmdk_t.xmdk037
DEFINE l_isaf014    LIKE isaf_t.isaf014
DEFINE l_sql        STRING

     IF NOT cl_null(p_xmdk037) THEN
        RETURN p_xmdk037
     END IF
     LET l_sql = "SELECT DISTINCT isaf011,isaf014",
                 "  FROM isaf_t,isag_t ",
                 " WHERE isafent = isagent ",
                 "   AND isafcomp = isagcomp ",
                 "   AND isafdocno = isagdocno ",
                 "   AND isag001 = '11' ",
                 "   AND isag002 = '",p_xmdkdocno,"'",
                 "   AND isafstus IN ('Y','S') ",
                 " ORDER BY isaf014 "
    PREPARE s_axmt540_isaf_pre FROM l_sql
    DECLARE s_axmt540_isaf_cs SCROLL CURSOR FOR s_axmt540_isaf_pre
    OPEN s_axmt540_isaf_cs
    FETCH FIRST s_axmt540_isaf_cs INTO r_xmdk037,l_isaf014
    IF SQLCA.sqlcode THEN
       LET r_xmdk037 = ''
    END IF
    CLOSE s_axmt540_isaf_cs
    RETURN r_xmdk037                
               
END FUNCTION

################################################################################
# Descriptions...: 調整金額尾差
# Memo...........:
# Usage..........: CALL axmt540_adjust_xmdl(p_xmdkdocno,p_xrcd103,p_xrcd104,p_xrcd105)
#                  RETURNING r_success
# Input parameter: p_xmdkdocno 單據單號
#                : p_xrcd103   原幣未稅金額
#                : p_xrcd104   原幣稅額
#                : p_xrcd105   原幣含稅金額
# Return code....: r_success    TRUE/FALSE
# Date & Author..: 20161013 By dorilsai (#161011-00017#1)
# Modify.........
################################################################################
PRIVATE FUNCTION axmt540_adjust_xmdl(p_xmdkdocno,p_xrcd103,p_xrcd104,p_xrcd105)
   DEFINE l_xmdl027    LIKE xmdl_t.xmdl027
   DEFINE l_xmdl028    LIKE xmdl_t.xmdl028
   DEFINE l_xmdl029    LIKE xmdl_t.xmdl029
   DEFINE l_xmdlseq    LIKE xmdl_t.xmdlseq
   DEFINE p_xmdkdocno  LIKE xmdk_t.xmdkdocno
   DEFINE p_xrcd103    LIKE xrcd_t.xrcd103
   DEFINE p_xrcd104    LIKE xrcd_t.xrcd104
   DEFINE p_xrcd105    LIKE xrcd_t.xrcd105
   DEFINE r_success    LIKE type_t.num5
   
   LET r_success = TRUE
   
   LET l_xmdl027 = 0
   LET l_xmdl028 = 0
   LET l_xmdl029 = 0
   LET l_xmdlseq = ''
   
   #抓取出貨總金額(未稅、含稅、稅額)
   SELECT SUM(xmdl027),SUM(xmdl028),SUM(xmdl029) 
     INTO l_xmdl027,l_xmdl028,l_xmdl029
     FROM xmdl_t
    WHERE xmdlent = g_enterprise
      AND xmdlsite = g_site
      AND xmdldocno = p_xmdkdocno
   
   #調整金額(未稅、含稅、稅額)
   IF l_xmdl027 <> p_xrcd103 OR l_xmdl028 <> p_xrcd105 OR l_xmdl029 <> p_xrcd104 THEN
      #抓取最大筆金額的項次
      SELECT xmdlseq INTO l_xmdlseq
        FROM (SELECT xmdlseq 
                FROM xmdl_t
               WHERE xmdlent = g_enterprise
                 AND xmdlsite = g_site
                 AND xmdldocno = p_xmdkdocno
               ORDER BY xmdl027 DESC)
        WHERE ROWNUM = 1
      #補尾差
      UPDATE xmdl_t SET xmdl027 = xmdl027 + (p_xrcd103-l_xmdl027),
                        xmdl028 = xmdl028 + (p_xrcd105-l_xmdl028),
                        xmdl029 = xmdl029 + (p_xrcd104-l_xmdl029)
         WHERE xmdlent = g_enterprise
         AND xmdlsite = g_site
         AND xmdldocno = p_xmdkdocno
         AND xmdlseq = l_xmdlseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xmdl_t"
         LET g_errparam.popup = TRUE
         LET r_success = FALSE
         CALL cl_err()        
      END IF 
   END IF      
   
   RETURN r_success
END FUNCTION

################################################################################
#161031-00025#26 add
#維護備註單身
################################################################################
PRIVATE FUNCTION axmt540_remaks()

   IF g_xmdk_m.xmdkdocno IS NULL THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()
      RETURN
   END IF
       
   CALL s_transaction_begin()
   
   OPEN axmt540_cl USING g_enterprise,g_xmdk_m.xmdkdocno

   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code =  STATUS
      LET g_errparam.extend = "OPEN axmt540_cl:"
      LET g_errparam.popup = TRUE
      CALL cl_err()
      CLOSE axmt540_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #鎖住將被更改的資料
   FETCH axmt540_cl INTO g_xmdk_m.xmdk000,g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocno_desc,g_xmdk_m.xmdkdocdt, 
       g_xmdk_m.xmdk001,g_xmdk_m.xmdk003,g_xmdk_m.xmdk003_desc,g_xmdk_m.xmdk004,g_xmdk_m.xmdk004_desc, 
       g_xmdk_m.xmdkstus,g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk007,g_xmdk_m.xmdk007_desc,g_xmdk_m.xmdk009, 
       g_xmdk_m.xmdk009_desc,g_xmdk_m.xmdk008,g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk202,g_xmdk_m.xmdk202_desc, 
       g_xmdk_m.xmdk047,g_xmdk_m.xmdk002,g_xmdk_m.xmdk045,g_xmdk_m.xmdk032,g_xmdk_m.xmdk030,g_xmdk_m.xmdk030_desc, 
       g_xmdk_m.xmdk028,g_xmdk_m.xmdk029,g_xmdk_m.xmdk037,g_xmdk_m.xmdk034,g_xmdk_m.xmdk034_desc,g_xmdk_m.xmdk054, 
       g_xmdk_m.xmdk039,g_xmdk_m.xmdk039_desc,g_xmdk_m.xmdk040,g_xmdk_m.xmdk040_desc,g_xmdk_m.xmdk087, 
       g_xmdk_m.xmdk021,g_xmdk_m.xmdk021_desc,g_xmdk_m.address,g_xmdk_m.xmdk022,g_xmdk_m.xmdk022_desc, 
       g_xmdk_m.xmdk023,g_xmdk_m.xmdk023_desc,g_xmdk_m.xmdk024,g_xmdk_m.xmdk024_desc,g_xmdk_m.xmdk020, 
       g_xmdk_m.xmdk020_desc,g_xmdk_m.xmdk025,g_xmdk_m.xmdk026,g_xmdk_m.xmdk027,g_xmdk_m.xmdk027_desc, 
       g_xmdk_m.xmdk038,g_xmdk_m.xmdk038_desc,g_xmdk_m.xmdk055,g_xmdk_m.xmdk010,g_xmdk_m.xmdk010_desc, 
       g_xmdk_m.xmdk011,g_xmdk_m.xmdk011_desc,g_xmdk_m.xmdk012,g_xmdk_m.xmdk012_desc,g_xmdk_m.xmdk013, 
       g_xmdk_m.xmdk014,g_xmdk_m.xmdk015,g_xmdk_m.xmdk015_desc,g_xmdk_m.xmdk016,g_xmdk_m.xmdk016_desc, 
       g_xmdk_m.xmdk017,g_xmdk_m.xmdk018,g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdk019,g_xmdk_m.xmdk019_desc, 
       g_xmdk_m.xmdk042,g_xmdk_m.xmdk043,g_xmdk_m.xmdk031,g_xmdk_m.xmdk031_desc,g_xmdk_m.xmdk033,g_xmdk_m.xmdk033_desc, 
       g_xmdk_m.xmdk044,g_xmdk_m.xmdk035,g_xmdk_m.xmdk046,g_xmdk_m.xmdk036,g_xmdk_m.xmdk083,g_xmdk_m.xmdkownid, 
       g_xmdk_m.xmdkownid_desc,g_xmdk_m.xmdkowndp,g_xmdk_m.xmdkowndp_desc,g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtid_desc, 
       g_xmdk_m.xmdkcrtdp,g_xmdk_m.xmdkcrtdp_desc,g_xmdk_m.xmdkcrtdt,g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmodid_desc, 
       g_xmdk_m.xmdkmoddt,g_xmdk_m.xmdkcnfid,g_xmdk_m.xmdkcnfid_desc,g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid, 
       g_xmdk_m.xmdkpstid_desc,g_xmdk_m.xmdkpstdt
       
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = g_xmdk_m.xmdkdocno
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CLOSE axmt540_cl
      CALL s_transaction_end('N','0')
      RETURN 
   END IF
 
   #檢查是否允許此動作
   IF NOT axmt540_action_chk() THEN
      CLOSE axmt540_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   LET g_detail_insert = cl_auth_detail_input("insert")
   LET g_detail_delete = cl_auth_detail_input("delete")
   
   LET g_ooff001_d = '6'   #6.單據單頭備註
   LET g_ooff002_d = g_prog   
   LET g_ooff003_d = g_xmdk_m.xmdkdocno   #单号  
   LET g_ooff004_d = '0'    #项次
   LET g_ooff005_d = ' '
   LET g_ooff006_d = ' '
   LET g_ooff007_d = ' '
   LET g_ooff008_d = ' '
   LET g_ooff009_d = ' '
   LET g_ooff010_d = ' '
   LET g_ooff011_d = ' '
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      SUBDIALOG aoo_aooi360_01.aooi360_01_input   #备注单身
      
      ON ACTION accept  
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄) 
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   CLOSE axmt540_cl
   
   CALL s_transaction_end('Y','0')
   
   CALL aooi360_01_b_fill(g_ooff001_d,g_ooff002_d,g_ooff003_d,g_ooff004_d,g_ooff005_d,g_ooff006_d,g_ooff007_d,g_ooff008_d,g_ooff009_d,g_ooff010_d,g_ooff011_d)   #备注单身
   
END FUNCTION

 
{</section>}
 
