#該程式未解開Section, 採用最新樣板產出!
{<section id="axmr412_x01.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:1(2016-04-28 12:00:01), PR版次:0001(2016-04-28 12:07:05)
#+ Customerized Version.: SD版次:(), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000025
#+ Filename...: axmr412_x01
#+ Description: 銷售報價單未轉訂單統計交叉表
#+ Creator....: 07024(2016-04-19 15:57:33)
#+ Modifier...: 07024 -SD/PR- 07024
 
{</section>}
 
{<section id="axmr412_x01.global" readonly="Y" >}
#報表 x01 樣板自動產生(Version:7)
#add-point:填寫註解說明

#end add-point
#add-point:填寫註解說明

#end add-point
 
IMPORT os
#add-point:增加匯入項目 name="global.import"

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
DEFINE tm RECORD
       wc STRING                   #where condition
       END RECORD
 
DEFINE g_str           STRING,                      #列印條件回傳值              
       g_sql           STRING  
 
#add-point:自定義環境變數(Global Variable)(客製用) name="global.variable_customerization"

#end add-point
#add-point:自定義環境變數(Global Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"

#end add-point
 
{</section>}
 
{<section id="axmr412_x01.main" readonly="Y" >}
PUBLIC FUNCTION axmr412_x01(p_arg1)
DEFINE  p_arg1 STRING                  #tm.wc  where condition
#add-point:init段define(客製用) name="component.define_customerization"

#end add-point
#add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="component.define"

#end add-point
 
   LET tm.wc = p_arg1
 
   #add-point:報表元件參數準備 name="component.arg.prep"
   
   #end add-point
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'
   
   #報表元件代號      
   LET g_rep_code = "axmr412_x01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #create 暫存檔
   CALL axmr412_x01_create_tmptable()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #報表select欄位準備
   CALL axmr412_x01_sel_prep()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #報表insert的prepare
   CALL axmr412_x01_ins_prep()  
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #將資料存入tmptable
   CALL axmr412_x01_ins_data() 
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #將tmptable資料印出
   CALL axmr412_x01_rep_data()
 
END FUNCTION
 
{</section>}
 
{<section id="axmr412_x01.create_tmptable" readonly="Y" >}
PRIVATE FUNCTION axmr412_x01_create_tmptable()
 
   #清除temptable 陣列
   CALL g_rep_tmpname.clear()
   
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.before name="create_tmp.before"
   
   #end add-point:create_tmp.before
 
   #主報表TEMP TABLE的欄位SQL   
   LET g_sql = "xmfd001.xmfd_t.xmfd001,ooag_t_ooag011.ooag_t.ooag011,xmfd002.xmfd_t.xmfd002,ooefl_t_ooefl003.ooefl_t.ooefl003,xmfd003.xmfd_t.xmfd003,pmaal_t_pmaal003.pmaal_t.pmaal003,xmfddocno.xmfd_t.xmfddocno,xmff001.xmff_t.xmff001,x_imaal_t_imaal003.imaal_t.imaal003,x_imaal_t_imaal004.imaal_t.imaal004,xmfd032.xmfd_t.xmfd032,oocql_t_oocql004.oocql_t.oocql004,xmff006.xmff_t.xmff006,xmff007.xmff_t.xmff007,l_cnt.type_t.num5" 
   
   #建立TEMP TABLE,主報表序號1 
   IF NOT cl_xg_create_tmptable(g_sql,1) THEN
      LET g_rep_success = 'N'            
   END IF
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.after name="create_tmp.after"
   
   #end add-point:create_tmp.after
END FUNCTION
 
{</section>}
 
{<section id="axmr412_x01.ins_prep" readonly="Y" >}
PRIVATE FUNCTION axmr412_x01_ins_prep()
DEFINE i              INTEGER
DEFINE l_prep_str     STRING
#add-point:ins_prep.define (客製用) name="ins_prep.define_customerization"

#end add-point:ins_prep.define
#add-point:ins_prep.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_prep.define"

#end add-point:ins_prep.define
 
   FOR i = 1 TO g_rep_tmpname.getLength()
      CALL cl_xg_del_data(g_rep_tmpname[i])
      #LET g_sql = g_rep_ins_prep[i]              #透過此lib取得prepare字串 lib精簡
      CASE i
         WHEN 1
         #INSERT INTO PREP
         LET g_sql = " INSERT INTO ",g_rep_db CLIPPED,g_rep_tmpname[1] CLIPPED," VALUES(?,?,?,?,?,?, 
             ?,?,?,?,?,?,?,?,?)"
         PREPARE insert_prep FROM g_sql
         IF STATUS THEN
            LET l_prep_str ="insert_prep",i
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = l_prep_str
            LET g_errparam.code   = status
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            CALL cl_xg_drop_tmptable()
            LET g_rep_success = 'N'           
         END IF 
         #add-point:insert_prep段 name="insert_prep"
         
         #end add-point                  
 
 
      END CASE
   END FOR
END FUNCTION
 
{</section>}
 
{<section id="axmr412_x01.sel_prep" readonly="Y" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION axmr412_x01_sel_prep()
DEFINE g_select      STRING
DEFINE g_from        STRING
DEFINE g_where       STRING
#add-point:sel_prep段define(客製用) name="sel_prep.define_customerization"

#end add-point
#add-point:sel_prep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sel_prep.define"

#end add-point
 
   #add-point:sel_prep before name="sel_prep.before"
   
   #end add-point
 
   #add-point:sel_prep g_select name="sel_prep.g_select"
   #架構：SELECT 欄位 FROM (SELECT 欄位 FROM xmfd_t,xmff_t WHERE 條件) WHERE 過濾未轉訂單的報價單
   LET g_select = "SELECT xmfdent,xmfdsite,xmfd001,ooag011,xmfd002,ooefl003,xmfd003,pmaal003,xmfddocno,xmff001,imaal003,imaal004,xmfd032,oocql004,xmff006,xmff007,l_cnt",
                  "  FROM (SELECT xmfdent,xmfdsite,xmfd001,
                          (SELECT ooag011 FROM ooag_t WHERE ooag001 = xmfd001 AND ooagent = xmfdent) ooag011,
                          xmfd002,
                          (SELECT ooefl003 FROM ooefl_t WHERE ooefl001 = xmfd002 AND ooeflent = xmfdent AND ooefl002 = '",g_dlang,"') ooefl003,
                          xmfd003,
                          (SELECT pmaal003 FROM pmaal_t WHERE pmaal001 = xmfd003 AND pmaalent = xmfdent AND pmaal_t.pmaal002 = '",g_dlang,"') pmaal003,
                          xmfddocno,
                          xmff001,
                          (SELECT imaal003 FROM imaal_t WHERE imaalent = xmffent AND imaal001 = xmff001 AND imaal002 = '",g_dlang,"') imaal003,
                          (SELECT imaal004 FROM imaal_t WHERE imaalent = xmffent AND imaal001 = xmff001 AND imaal002 = '",g_dlang,"') imaal004,
                          xmfd032,
                          (SELECT oocql004 FROM oocql_t WHERE oocql001 = '319' AND oocql002 = xmfd032 AND oocqlent = xmfdent AND oocql003 = '",g_dlang,"') oocql004,
                          xmff006,xmff007,
                          (SELECT COUNT(*) FROM xmdc_t,xmda_t WHERE xmfdent=xmdcent AND xmfdsite=xmdcsite 
                                                                AND xmdaent=xmdcent AND xmdasite=xmdcsite 
                                                                AND xmdadocno=xmdcdocno AND xmdastus NOT IN ('D','R','X','H') AND xmdc040='5'
                                                                AND trim(xmfddocno)||'-'||trim(xmffseq)=trim(xmdc041)||'-'||trim(xmdc042)
                          ) l_cnt"
#   #end add-point
#   LET g_select = " SELECT xmfdent,xmfdsite,xmfd001,( SELECT ooag011 FROM ooag_t WHERE ooag_t.ooag001 = xmfd_t.xmfd001 AND ooag_t.ooagent = xmfd_t.xmfdent), 
#       xmfd002,( SELECT ooefl003 FROM ooefl_t WHERE ooefl_t.ooefl001 = xmfd_t.xmfd002 AND ooefl_t.ooeflent = xmfd_t.xmfdent AND ooefl_t.ooefl002 = '" , 
#       g_dlang,"'" ,"),xmfd003,( SELECT pmaal003 FROM pmaal_t WHERE pmaal_t.pmaal001 = xmfd_t.xmfd003 AND pmaal_t.pmaalent = xmfd_t.xmfdent AND pmaal_t.pmaal002 = '" , 
#       g_dlang,"'" ,"),xmfddocno,xmff001,x.imaal_t_imaal003,x.imaal_t_imaal004,xmfd032,( SELECT oocql004 FROM oocql_t WHERE oocql_t.oocql001 = '319' AND oocql_t.oocql002 = xmfd_t.xmfd032 AND oocql_t.oocqlent = xmfd_t.xmfdent AND oocql_t.oocql003 = '" , 
#       g_dlang,"'" ,"),xmff006,xmff007,NULL"
# 
#   #add-point:sel_prep g_from name="sel_prep.g_from"
   LET g_from = "        FROM xmfd_t,xmff_t "
#   #end add-point
#    LET g_from = " FROM xmfd_t LEFT OUTER JOIN ( SELECT xmff_t.*,( SELECT imaal003 FROM imaal_t WHERE imaal_t.imaal001 = xmff_t.xmff001 AND imaal_t.imaalent = xmff_t.xmffent AND imaal_t.imaal002 = '" , 
#        g_dlang,"'" ,") imaal_t_imaal003,( SELECT imaal004 FROM imaal_t WHERE imaal_t.imaal001 = xmff_t.xmff001 AND imaal_t.imaalent = xmff_t.xmffent AND imaal_t.imaal002 = '" , 
#        g_dlang,"'" ,") imaal_t_imaal004 FROM xmff_t ) x  ON xmfd_t.xmfdent = x.xmffent AND xmfd_t.xmfddocno  
#        = x.xmffdocno"
# 
#   #add-point:sel_prep g_where name="sel_prep.g_where"
   LET g_where = "       WHERE xmfdent = xmffent AND xmfddocno = xmffdocno AND ",tm.wc CLIPPED,
                 " ) WHERE l_cnt = 0 "
   
#   #end add-point
#    LET g_where = " WHERE " ,tm.wc CLIPPED
# 
#   #add-point:sel_prep g_order name="sel_prep.g_order"
   
   #end add-point
 
   #add-point:sel_prep.sql.before name="sel_prep.sql.before"
   
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("xmfd_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段
 
   #add-point:sel_prep.sql.after name="sel_prep.sql.after"
   
   #end add-point
   PREPARE axmr412_x01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET g_rep_success = 'N' 
   END IF
   DECLARE axmr412_x01_curs CURSOR FOR axmr412_x01_prepare
 
END FUNCTION
 
{</section>}
 
{<section id="axmr412_x01.ins_data" readonly="Y" >}
PRIVATE FUNCTION axmr412_x01_ins_data()
DEFINE sr RECORD 
   xmfdent LIKE xmfd_t.xmfdent, 
   xmfdsite LIKE xmfd_t.xmfdsite, 
   xmfd001 LIKE xmfd_t.xmfd001, 
   ooag_t_ooag011 LIKE ooag_t.ooag011, 
   xmfd002 LIKE xmfd_t.xmfd002, 
   ooefl_t_ooefl003 LIKE ooefl_t.ooefl003, 
   xmfd003 LIKE xmfd_t.xmfd003, 
   pmaal_t_pmaal003 LIKE pmaal_t.pmaal003, 
   xmfddocno LIKE xmfd_t.xmfddocno, 
   xmff001 LIKE xmff_t.xmff001, 
   x_imaal_t_imaal003 LIKE imaal_t.imaal003, 
   x_imaal_t_imaal004 LIKE imaal_t.imaal004, 
   xmfd032 LIKE xmfd_t.xmfd032, 
   oocql_t_oocql004 LIKE oocql_t.oocql004, 
   xmff006 LIKE xmff_t.xmff006, 
   xmff007 LIKE xmff_t.xmff007, 
   l_cnt LIKE type_t.num5
 END RECORD
#add-point:ins_data段define (客製用) name="ins_data.define_customerization"

#end add-point
#add-point:ins_data段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_data.define"

#end add-point
 
    #add-point:ins_data段before name="ins_data.before"
    
    #end add-point
 
    LET g_rep_success = 'Y'
 
    FOREACH axmr412_x01_curs INTO sr.*                               
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach name="ins_data.foreach"
       
       #end add-point
 
       #add-point:ins_data段before.save name="ins_data.before.save"
       
       #end add-point
 
       #EXECUTE
       EXECUTE insert_prep USING sr.xmfd001,sr.ooag_t_ooag011,sr.xmfd002,sr.ooefl_t_ooefl003,sr.xmfd003,sr.pmaal_t_pmaal003,sr.xmfddocno,sr.xmff001,sr.x_imaal_t_imaal003,sr.x_imaal_t_imaal004,sr.xmfd032,sr.oocql_t_oocql004,sr.xmff006,sr.xmff007,sr.l_cnt
 
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = "axmr412_x01_execute"
          LET g_errparam.code   = SQLCA.sqlcode
          LET g_errparam.popup  = FALSE
          CALL cl_err()       
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段after_save name="ins_data.after.save"
       
       #end add-point
       
    END FOREACH
    
    #add-point:ins_data段after name="ins_data.after"
    
    #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="axmr412_x01.rep_data" readonly="Y" >}
PRIVATE FUNCTION axmr412_x01_rep_data()
#add-point:rep_data.define (客製用) name="rep_data.define_customerization"

#end add-point:rep_data.define
#add-point:rep_data.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="rep_data.define"

#end add-point:rep_data.define
 
    #add-point:rep_data.before name="rep_data.before"
    
    #end add-point:rep_data.before
    
    CALL cl_xg_view()
    #add-point:rep_data.after name="rep_data.after"
    
    #end add-point:rep_data.after
END FUNCTION
 
{</section>}
 
{<section id="axmr412_x01.other_function" readonly="Y" >}

 
{</section>}
 
