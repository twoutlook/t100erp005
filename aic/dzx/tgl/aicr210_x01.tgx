{<section id="aicr210_x01.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:1(2016-06-04 15:42:19), PR版次:
#+ Customerized Version.: SD版次:(), PR版次:
#+ Build......: 000022
#+ Filename...: aicr210_x01
#+ Description: ...
#+ Creator....: 07024(2016-06-03 13:37:33)
#+ Modifier...: 07024 -SD/PR-
{</section>}



{<section id="aicr210_x01.global" readonly="Y" >}
#報表 x01 樣板自動產生(Version:8)
#add-point:填寫註解說明 name="global.memo"
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明 name="global.memo_customerization"
{<point name="global.memo_customerization" edit="c"/>}
#end add-point
 
IMPORT os
#add-point:增加匯入項目 name="global.import"
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
DEFINE tm RECORD
       wc STRING                   #where condition
       END RECORD
 
DEFINE g_str           STRING,                      #列印條件回傳值              
       g_sql           STRING  
 
#add-point:自定義環境變數(Global Variable)(客製用) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:自定義環境變數(Global Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>}
#end add-point
{</section>}
 
{<section id="aicr210_x01.main" readonly="Y" >}
PUBLIC FUNCTION aicr210_x01(p_arg1)
DEFINE  p_arg1 STRING                  #tm.wc  where condition
#add-point:init段define(客製用) name="component.define_customerization"
{<point name="component.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="component.define"
{<point name="component.define"/>}
#end add-point
 
   LET tm.wc = p_arg1

   #add-point:報表元件參數準備 name="component.arg.prep"
   {<point name="component.arg.prep" />}
   #end add-point
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'
   
   #報表元件代號      
   LET g_rep_code = "aicr210_x01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #create 暫存檔
   CALL aicr210_x01_create_tmptable()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #報表select欄位準備
   CALL aicr210_x01_sel_prep()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #報表insert的prepare
   CALL aicr210_x01_ins_prep()  
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #將資料存入tmptable
   CALL aicr210_x01_ins_data() 
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #將tmptable資料印出
   CALL aicr210_x01_rep_data()
 
END FUNCTION
{</section>}
 
{<section id="aicr210_x01.create_tmptable" readonly="Y" >}
PRIVATE FUNCTION aicr210_x01_create_tmptable()
 
   #清除temptable 陣列
   CALL g_rep_tmpname.clear()
   
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.before name="create_tmp.before"
   {<point name="create_tmp.before"/>}
   #end add-point:create_tmp.before
 
   #主報表TEMP TABLE的欄位SQL   
   LET g_sql = "pmdl051.pmdl_t.pmdl051,pmdldocno.pmdl_t.pmdldocno,pmdldocdt.pmdl_t.pmdldocdt,pmdl004.pmdl_t.pmdl004,l_pmdl004_desc.pmaal_t.pmaal004,pmdl031.pmdl_t.pmdl031,pmdl015.pmdl_t.pmdl015,l_pmdl015_desc.ooail_t.ooail003,pmdl016.pmdl_t.pmdl016,pmdl002.pmdl_t.pmdl002,l_pmdl002_desc.ooag_t.ooag011,pmdl003.pmdl_t.pmdl003,l_pmdl003_desc.ooefl_t.ooefl003,pmdnseq.pmdn_t.pmdnseq,pmdn001.pmdn_t.pmdn001,imaal_t_imaal003.imaal_t.imaal003,imaal_t_imaal004.imaal_t.imaal004,pmdn002.pmdn_t.pmdn002,l_pmdn002_desc.inaml_t.inaml004,imaa_t_imaa003.imaa_t.imaa003,l_imaa003_desc.oocql_t.oocql004,imaf_t_imaf141.imaf_t.imaf141,l_imaf141_desc.oocql_t.oocql004,imaa_t_imaa127.imaa_t.imaa127,l_imaa127_desc.oocql_t.oocql004,pmdo_t_pmdo013.pmdo_t.pmdo013,l_icab002.icab_t.icab002,pmdlsite.pmdl_t.pmdlsite,l_pmdlsite_desc.ooefl_t.ooefl003,xmdc_t_xmdc015.xmdc_t.xmdc015,l_order_oprice.type_t.num20_6,l_order_cprice.type_t.num20_6,pmdn015.pmdn_t.pmdn015,l_purchase_oprice.type_t.num20_6,l_purchase_cprice.type_t.num20_6,l_oprice_diff.type_t.num20_6,l_cprice_diff.type_t.num20_6" 
   
   #建立TEMP TABLE,主報表序號1 
   IF NOT cl_xg_create_tmptable(g_sql,1) THEN
      LET g_rep_success = 'N'            
   END IF
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.after name="create_tmp.after"
   {<point name="create_tmp.after"/>}
   #end add-point:create_tmp.after
END FUNCTION
{</section>}
 
{<section id="aicr210_x01.ins_prep" readonly="Y" >}
PRIVATE FUNCTION aicr210_x01_ins_prep()
DEFINE i              INTEGER
DEFINE l_prep_str     STRING
#add-point:ins_prep.define (客製用) name="ins_prep.define_customerization"
{<point name="ins_prep.define_customerization" edit="c" mark="Y"/>}
#end add-point:ins_prep.define
#add-point:ins_prep.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_prep.define"
{<point name="ins_prep.define"/>}
#end add-point:ins_prep.define
 
   FOR i = 1 TO g_rep_tmpname.getLength()
      CALL cl_xg_del_data(g_rep_tmpname[i])
      #LET g_sql = g_rep_ins_prep[i]              #透過此lib取得prepare字串 lib精簡
      CASE i
         WHEN 1
         #INSERT INTO PREP
         LET g_sql = " INSERT INTO ",g_rep_db CLIPPED,g_rep_tmpname[1] CLIPPED," VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)"
         PREPARE insert_prep FROM g_sql
         IF STATUS THEN
            LET l_prep_str ="insert_prep",i
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = l_prep_str
            LET g_errparam.code   = status
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            CALL cl_xg_drop_tmptable()
            LET g_rep_success = 'N'           
         END IF 
         #add-point:insert_prep段 name="insert_prep"
         {<point name="insert_prep"/>}
         #end add-point                  


      END CASE
   END FOR
END FUNCTION
{</section>}
 
{<section id="aicr210_x01.sel_prep" readonly="Y" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION aicr210_x01_sel_prep()
DEFINE g_select      STRING
DEFINE g_from        STRING
DEFINE g_where       STRING
#add-point:sel_prep段define(客製用) name="sel_prep.define_customerization"
{<point name="sel_prep.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:sel_prep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sel_prep.define"
{<point name="sel_prep.define"/>}
#end add-point
 
   #add-point:sel_prep before name="sel_prep.before"
   {<point name="sel_prep.before" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep g_select name="sel_prep.g_select"
   {<point name="sel_prep.g_select" mark="Y"/>}
   #end add-point
   LET g_select = " SELECT pmdlent,pmdl051,pmdldocno,pmdldocdt,pmdl004,NULL,pmdl031,pmdl015,NULL,NULL,pmdl016,pmdl002,NULL,pmdl003,NULL,pmdnseq,pmdn001,imaal_t.imaal003,imaal_t.imaal004,pmdn002,NULL,imaa_t.imaa003,NULL,imaf_t.imaf141,NULL,imaa_t.imaa127,NULL,pmdo_t.pmdo013,NULL,pmdlsite,NULL,xmdc_t.xmdc015,NULL,NULL,pmdl054,xmda_t.xmda015,pmdn015,NULL,NULL,NULL,NULL"
 
   #add-point:sel_prep g_from name="sel_prep.g_from"
   {<point name="sel_prep.g_from" mark="Y"/>}
   #end add-point
    LET g_from = " FROM pmdl_t,pmdn_t,pmdo_t,xmda_t,xmdc_t,imaa_t,imaf_t,ooag_t,ooeg_t,imaal_t,ooefl_t"
 
   #add-point:sel_prep g_where name="sel_prep.g_where"
   {<point name="sel_prep.g_where" mark="Y"/>}
   #end add-point
    LET g_where = " WHERE " ,tm.wc CLIPPED
 
   #add-point:sel_prep g_order name="sel_prep.g_order"
   {<point name="sel_prep.g_order" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep.sql.before name="sel_prep.sql.before"
   {<point name="sel_prep.sql.before" mark="Y"/>}
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("pmdl_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段
 
   #add-point:sel_prep.sql.after name="sel_prep.sql.after"
   {<point name="sel_prep.sql.after" mark="Y"/>}
   #end add-point
   PREPARE aicr210_x01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET g_rep_success = 'N' 
   END IF
   DECLARE aicr210_x01_curs CURSOR FOR aicr210_x01_prepare
 
END FUNCTION
{</section>}
 
{<section id="aicr210_x01.ins_data" readonly="Y" >}
PRIVATE FUNCTION aicr210_x01_ins_data()
DEFINE sr RECORD 
   pmdlent LIKE pmdl_t.pmdlent, 
   pmdl051 LIKE pmdl_t.pmdl051, 
   pmdldocno LIKE pmdl_t.pmdldocno, 
   pmdldocdt LIKE pmdl_t.pmdldocdt, 
   pmdl004 LIKE pmdl_t.pmdl004, 
   l_pmdl004_desc LIKE pmaal_t.pmaal004, 
   pmdl031 LIKE pmdl_t.pmdl031, 
   pmdl015 LIKE pmdl_t.pmdl015, 
   l_pmdl015_1 LIKE pmdl_t.pmdl015, 
   l_pmdl015_desc LIKE ooail_t.ooail003, 
   pmdl016 LIKE pmdl_t.pmdl016, 
   pmdl002 LIKE pmdl_t.pmdl002, 
   l_pmdl002_desc LIKE ooag_t.ooag011, 
   pmdl003 LIKE pmdl_t.pmdl003, 
   l_pmdl003_desc LIKE ooefl_t.ooefl003, 
   pmdnseq LIKE pmdn_t.pmdnseq, 
   pmdn001 LIKE pmdn_t.pmdn001, 
   imaal_t_imaal003 LIKE imaal_t.imaal003, 
   imaal_t_imaal004 LIKE imaal_t.imaal004, 
   pmdn002 LIKE pmdn_t.pmdn002, 
   l_pmdn002_desc LIKE inaml_t.inaml004, 
   imaa_t_imaa003 LIKE imaa_t.imaa003, 
   l_imaa003_desc LIKE oocql_t.oocql004, 
   imaf_t_imaf141 LIKE imaf_t.imaf141, 
   l_imaf141_desc LIKE oocql_t.oocql004, 
   imaa_t_imaa127 LIKE imaa_t.imaa127, 
   l_imaa127_desc LIKE oocql_t.oocql004, 
   pmdo_t_pmdo013 LIKE pmdo_t.pmdo013, 
   l_icab002 LIKE icab_t.icab002, 
   pmdlsite LIKE pmdl_t.pmdlsite, 
   l_pmdlsite_desc LIKE ooefl_t.ooefl003, 
   xmdc_t_xmdc015 LIKE xmdc_t.xmdc015, 
   l_order_oprice LIKE type_t.num20_6, 
   l_order_cprice LIKE type_t.num20_6, 
   pmdl054 LIKE pmdl_t.pmdl054, 
   xmda_t_xmda015 LIKE xmda_t.xmda015, 
   pmdn015 LIKE pmdn_t.pmdn015, 
   l_purchase_oprice LIKE type_t.num20_6, 
   l_purchase_cprice LIKE type_t.num20_6, 
   l_oprice_diff LIKE type_t.num20_6, 
   l_cprice_diff LIKE type_t.num20_6
 END RECORD
#add-point:ins_data段define (客製用) name="ins_data.define_customerization"
{<point name="ins_data.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:ins_data段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_data.define"
{<point name="ins_data.define"/>}
#end add-point
 
    #add-point:ins_data段before name="ins_data.before"
    {<point name="ins_data.before"/>}
    #end add-point
 
    LET g_rep_success = 'Y'
 
    FOREACH aicr210_x01_curs INTO sr.*                               
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach name="ins_data.foreach"
       {<point name="ins_data.foreach"/>}
       #end add-point
 
       #add-point:ins_data段before.save name="ins_data.before.save"
       {<point name="ins_data.before.save"/>}
       #end add-point
 
       #EXECUTE
       EXECUTE insert_prep USING sr.pmdl051,sr.pmdldocno,sr.pmdldocdt,sr.pmdl004,sr.l_pmdl004_desc,sr.pmdl031,sr.pmdl015,sr.l_pmdl015_desc,sr.pmdl016,sr.pmdl002,sr.l_pmdl002_desc,sr.pmdl003,sr.l_pmdl003_desc,sr.pmdnseq,sr.pmdn001,sr.imaal_t_imaal003,sr.imaal_t_imaal004,sr.pmdn002,sr.l_pmdn002_desc,sr.imaa_t_imaa003,sr.l_imaa003_desc,sr.imaf_t_imaf141,sr.l_imaf141_desc,sr.imaa_t_imaa127,sr.l_imaa127_desc,sr.pmdo_t_pmdo013,sr.l_icab002,sr.pmdlsite,sr.l_pmdlsite_desc,sr.xmdc_t_xmdc015,sr.l_order_oprice,sr.l_order_cprice,sr.pmdn015,sr.l_purchase_oprice,sr.l_purchase_cprice,sr.l_oprice_diff,sr.l_cprice_diff
 
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = "aicr210_x01_execute"
          LET g_errparam.code   = SQLCA.sqlcode
          LET g_errparam.popup  = FALSE
          CALL cl_err()       
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段after_save name="ins_data.after.save"
       {<point name="ins_data.after.save"/>}
       #end add-point
       
    END FOREACH
    
    #add-point:ins_data段after name="ins_data.after"
    {<point name="ins_data.after"/>}
    #end add-point
 
END FUNCTION
{</section>}
 
{<section id="aicr210_x01.rep_data" readonly="Y" >}
PRIVATE FUNCTION aicr210_x01_rep_data()
#add-point:rep_data.define (客製用) name="rep_data.define_customerization"
{<point name="rep_data.define_customerization" edit="c" mark="Y"/>}
#end add-point:rep_data.define
#add-point:rep_data.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="rep_data.define"
{<point name="rep_data.define"/>}
#end add-point:rep_data.define
 
    #add-point:rep_data.before name="rep_data.before"
    {<point name="rep_data.before"/>}
    #end add-point:rep_data.before
    
    CALL cl_xg_view()
    #add-point:rep_data.after name="rep_data.after"
    {<point name="rep_data.after"/>}
    #end add-point:rep_data.after
END FUNCTION
{</section>}
 
{<section id="aicr210_x01.other_function" readonly="Y" >} 
{<point name="other.function"/>}
{</section>}
