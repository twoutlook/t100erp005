<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="aicp500" std_prog="aicp500" erpver="1.0" module="AIC" ver="3" env="s" zone="t10prd" booking="N" type="M" identity="s" section_flag="Y" designer_ver="1.0">
  <other>
    <code_template value="W" status="u"/>
    <free_style value="N" status="u"/>
    <start_arg value="" status="u"/>
  </other>
  <point name="function.aicp500_process" order="1" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 多角拋轉處理
# Memo...........:
# Usage..........: CALL aicp500_process()
#                  RETURNING 回传参数
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 141113 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION aicp500_process()
   DEFINE l_xmdk         type_g_detail_d
   DEFINE l_trino        LIKE type_t.chr20
   DEFINE l_success      LIKE type_t.num5
   DEFINE l_icaa003      LIKE icaa_t.icaa003
   DEFINE l_icaa004      LIKE icaa_t.icaa004
   DEFINE l_icac007      LIKE icac_t.icac007
   
   DEFINE l_icab_now     RECORD
      icab002               LIKE icab_t.icab002,   #站別
      icab003               LIKE icab_t.icab003,   #營運據點
      icab005               LIKE icab_t.icab005,   #中斷點否
      icab008               LIKE icab_t.icab008    #實體庫存否
                         END RECORD
   DEFINE l_icab_next    RECORD
      icab002               LIKE icab_t.icab002,
      icab003               LIKE icab_t.icab003
                         END RECORD

   DEFINE l_pmdsdocno    LIKE pmds_t.pmdsdocno
   DEFINE l_xmdkdocno    LIKE xmdk_t.xmdkdocno
   DEFINE l_site         LIKE icab_t.icab003
   DEFINE l_num          LIKE type_t.num5
   DEFINE l_xmdksite     LIKE xmdk_t.xmdksite
   
   #有選擇的出貨單
   LET g_sql = "SELECT xmdkdocno,xmdkdocdt,xmdkownid,xmdkcrtid,",
               "       xmdk007,xmdk009,xmdk008,",
               "       xmdk003,xmdk004,xmdk002,xmdk044,",
               "       break,xmdk035",
               "  FROM aicp500_tmp",
               " WHERE sel = 'Y' ",
               " ORDER BY xmdkdocno"
   PREPARE aicp500_process_pre FROM g_sql
   DECLARE aicp500_process_cur CURSOR WITH HOLD FOR aicp500_process_pre

   LET g_sql = "SELECT icaa003,icaa004",
               "  FROM icaa_t",
               " WHERE icaaent = ",g_enterprise,
               "   AND icaa001 = ?"
   PREPARE aicp500_process_icaa_pre FROM g_sql

   #當站多角貿易營運據點(正拋)
   LET g_sql = "SELECT icab002,icab003,",
               "       COALESCE(icab005,'N'),COALESCE(icab008,'N')",
               "  FROM icab_t",
               " WHERE icabent = ",g_enterprise,
               "   AND icab001 = ?",
               " ORDER BY icab002"
   PREPARE aicp500_process_icab_forward_pre FROM g_sql
   DECLARE aicp500_process_icab_forward_cur CURSOR FOR aicp500_process_icab_forward_pre

   #當站多角貿易營運據點(逆拋)
   LET g_sql = "SELECT icab002,icab003,",
               "       COALESCE(icab005,'N'),COALESCE(icab008,'N')",
               "  FROM icab_t",
               " WHERE icabent = ",g_enterprise,
               "   AND icab001 = ?",
               " ORDER BY icab002 DESC"
   PREPARE aicp500_process_icab_backward_pre FROM g_sql
   DECLARE aicp500_process_icab_backward_cur CURSOR FOR aicp500_process_icab_backward_pre

   #出貨單別
   LET g_sql = "SELECT icac007",
               "  FROM icac_t",
               " WHERE icacent = ",g_enterprise,
               "   AND icac001 = ?",
               "   AND icac002 = ?"
   PREPARE aicp500_process_icac007_pre FROM g_sql

   #中斷入庫單
   LET g_sql = "SELECT pmdsdocno",
               "  FROM pmds_t",
               " WHERE pmdssite = ?",
               "   AND pmds041 = ?",
               "   AND pmdsstus <> 'X'"
   PREPARE aicp500_process_pmdsdocno_pre FROM g_sql

   #s_aic_carry_gen_tri_bs
   CALL s_aic_carry_create_temp_table_ship() RETURNING l_success
   IF NOT l_success THEN
      RETURN
   END IF
   
   CALL s_tax_recount_tmp()

   LET g_success_cnt = 1
   LET g_fail_cnt = 0
   CALL g_detail3_d.clear()
   CALL g_detail4_d.clear()
   CALL cl_err_collect_init()   #匯總訊息-初始化

   INITIALIZE l_xmdk.* TO NULL
   FOREACH aicp500_process_cur INTO l_xmdk.xmdkdocno,l_xmdk.xmdkdocdt,l_xmdk.xmdkownid,l_xmdk.xmdkcrtid,
                                    l_xmdk.xmdk007,l_xmdk.xmdk009,l_xmdk.xmdk008,
                                    l_xmdk.xmdk003,l_xmdk.xmdk004,l_xmdk.xmdk002,l_xmdk.xmdk044,
                                    l_xmdk.break,l_xmdk.xmdk035
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'process_cur'
         LET g_errparam.popup = TRUE
         CALL cl_err()
         
         #失敗記錄
         CALL aicp500_fail(l_xmdk.*,'')
         
         EXIT FOREACH
      END IF

      CALL s_transaction_begin()
      LET g_fail_cnt = g_errcollect.getLength()  #先取得錯誤訊息的長度，大於此長度的表示是這張單子的錯誤訊息
      LET l_success = TRUE
      LET l_trino = ''
      LET l_pmdsdocno = ''
      LET l_xmdkdocno = ''
      
      #多角流程代碼為空白時，錯誤
      IF cl_null(l_xmdk.xmdk044) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'aic-00026'   #多角流程代碼不可為空
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE

         CALL cl_err()
         CALL s_transaction_end('N',0)
         #失敗記錄
         CALL aicp500_fail(l_xmdk.*,'')
         CONTINUE FOREACH
      END IF
      
      #中斷續拋
      IF l_xmdk.break = 'Y' THEN
         IF cl_null(l_xmdk.xmdk035) THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'aic-00170'   #中斷續拋之多角序號不可為空！
            LET g_errparam.extend = 'l_xmdk.xmdkdocno'
            LET g_errparam.popup = TRUE
            CALL cl_err()
         
            CALL s_transaction_end('N',0)
            #失敗記錄
            CALL aicp500_fail(l_xmdk.*,'')
            CONTINUE FOREACH
         END IF
         
         LET l_trino = l_xmdk.xmdk035
      ELSE
         #呼叫產生多角序號元件取得多角流程序號
         CALL s_aic_carry_gettrino(l_xmdk.xmdk044,'4',g_today,g_site)
         RETURNING l_success,l_trino
         IF NOT l_success OR cl_null(l_trino) THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'amm-00001'   #自動生成單號失敗！
            LET g_errparam.extend = 'l_xmdk.xmdkdocno'
            LET g_errparam.popup = TRUE
            CALL cl_err()
         
            CALL s_transaction_end('N',0)
            #失敗記錄
            CALL aicp500_fail(l_xmdk.*,'')
            CONTINUE FOREACH
         END IF
      END IF

      #回寫出貨單單頭"多角流程序"xmdk035欄位，"多角貿易已拋轉"='Y'
      UPDATE xmdk_t
         SET xmdk035 = l_trino,
             xmdk083 = 'Y'
       WHERE xmdkent = g_enterprise
         AND xmdkdocno = l_xmdk.xmdkdocno

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'UPDATE xmdk_t'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         CALL s_transaction_end('N',0)
         #失敗記錄
         CALL aicp500_fail(l_xmdk.*,'')
         CONTINUE FOREACH
      END IF

      #取得流程類型icaa003、收貨/出貨確立點icaa004
      LET l_icaa003 = ''
      LET l_icaa004 = ''
      EXECUTE aicp500_process_icaa_pre USING l_xmdk.xmdk044
      INTO l_icaa003,l_icaa004
      
      IF cl_null(l_icaa003) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = l_xmdk.xmdk044
         LET g_errparam.popup = TRUE
         CALL cl_err()

         CALL s_transaction_end('N',0)
         #失敗記錄
         CALL aicp500_fail(l_xmdk.*,'')
         CONTINUE FOREACH
      END IF
      
      IF l_icaa003 <> '1' AND l_icaa003 <> '2' THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'aic-00100'   #流程類型只可為"1.銷售"或"2.代採購"！
         LET g_errparam.extend = l_xmdk.xmdk044
         LET g_errparam.popup = TRUE
         CALL cl_err()
       
         CALL s_transaction_end('N',0)
         #失敗記錄
         CALL aicp500_fail(l_xmdk.*,'')
         CONTINUE FOREACH
      END IF
      
      IF cl_null(l_icaa004) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'aic-00097'   #出貨/收貨確立點不可為空！
         LET g_errparam.extend = l_xmdk.xmdk044
         LET g_errparam.popup = TRUE
         CALL cl_err()

         CALL s_transaction_end('N',0)
         #失敗記錄
         CALL aicp500_fail(l_xmdk.*,'')
         CONTINUE FOREACH
      END IF

      #中斷續拋，一律走正拋流程
      IF l_xmdk.break = 'Y' THEN
         LET l_icaa004 = '1'
      END IF

      IF l_icaa004 = '1' AND l_icaa003 = '2' THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'aic-00101'   #流程類型為"2.代採購為"且出貨/收貨確立點為"1.正拋"不可由出貨單發起！
         LET g_errparam.extend = l_xmdk.xmdk044
         LET g_errparam.popup = TRUE
         CALL cl_err()
         
         CALL s_transaction_end('N',0)
         #失敗記錄
         CALL aicp500_fail(l_xmdk.*,'')
         CONTINUE FOREACH
      END IF

      IF l_icaa004 = '1' THEN  #正拋
         #跑站(當站)
         INITIALIZE l_icab_now.* TO NULL
         OPEN aicp500_process_icab_forward_cur USING l_xmdk.xmdk044
         FOREACH aicp500_process_icab_forward_cur INTO l_icab_now.icab002,l_icab_now.icab003,
                                                       l_icab_now.icab005,l_icab_now.icab008
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = 'process_cur'
               LET g_errparam.popup = TRUE
               CALL cl_err()
       
               LET l_success = FALSE
               EXIT FOREACH
            END IF

            #初始站
            IF l_icab_now.icab002 = 0 THEN
               LET l_site = l_icab_now.icab003
  
               #無實體庫存時，產生入庫單
               IF l_icab_now.icab008 = 'N' THEN
                  #產生第0站多角收貨入庫單
                  CALL s_aic_carry_gen_tri_mr(l_site,l_xmdk.xmdkdocno,l_icab_now.icab003,l_xmdk.xmdkdocdt,
                                              l_xmdk.xmdk044,l_icab_now.icab002,'','','')
                  RETURNING l_success,l_pmdsdocno
                
                  IF NOT l_success THEN
                     EXIT FOREACH
                  END IF
               ELSE
               
                  EXECUTE aicp500_process_pmdsdocno_pre USING l_icab_now.icab003,l_trino INTO l_pmdsdocno
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                        
                     CALL cl_err()
                     LET l_success = FALSE
                     EXIT FOREACH
                  END IF
               
               END IF
                              
            ELSE

               INITIALIZE l_icab_next.* TO NULL
               
               #下站多角貿易營運據點(正拋)   
               DECLARE aicp500_process_next_forward_cur CURSOR FOR 
                  SELECT icab002,icab003
                    FROM icab_t
                   WHERE icabent = g_enterprise
                     AND icab001 = l_xmdk.xmdk044
                     AND icab002 > l_icab_now.icab002
                   ORDER BY icab002
               
               INITIALIZE l_icab_next.* TO NULL
               FOREACH aicp500_process_next_forward_cur INTO l_icab_next.icab002,l_icab_next.icab003
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = 'aicp500_process_next_forward_cur'
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
               
                     LET l_success = FALSE
                     EXIT FOREACH
                  END IF
               
                  EXIT FOREACH
               END FOREACH
               
               IF NOT l_success THEN
                  EXIT FOREACH
               END IF
               
               #出貨單別
               LET l_icac007 = ''
               EXECUTE aicp500_process_icac007_pre USING l_xmdk.xmdk044,l_icab_now.icab002 INTO l_icac007
               
               IF NOT cl_null(l_icab_next.icab002) THEN  #中間站
               
                  #無實體庫存時，產生入庫單
                  IF l_icab_now.icab008 = 'N' THEN
                     #產生中間站多角收貨入庫單
                     CALL s_aic_carry_gen_tri_mr(l_site,l_xmdk.xmdkdocno,l_icab_now.icab003,l_xmdk.xmdkdocdt,
                                                 l_xmdk.xmdk044,l_icab_now.icab002,'','','')
                     RETURNING l_success,l_pmdsdocno
               
                     IF NOT l_success THEN
                        EXIT FOREACH
                     END IF
                  ELSE

                     EXECUTE aicp500_process_pmdsdocno_pre USING l_icab_now.icab003,l_trino INTO l_pmdsdocno
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = ''
                        LET g_errparam.popup = TRUE
                        
                        CALL cl_err()
                        LET l_success = FALSE
                        EXIT FOREACH
                     END IF

                  END IF
                  
                  #產生中間站多角出貨單
                  CALL s_aic_carry_gen_tri_bs(l_site,l_pmdsdocno,'',l_icab_now.icab003,'1',l_xmdk.xmdkdocno,l_xmdk.xmdkdocdt,
                                              l_icac007,'',l_xmdk.xmdk044,l_icab_now.icab002,'')
                  RETURNING l_success,l_xmdkdocno
               
                  IF NOT l_success THEN
                     EXIT FOREACH
                  END IF
               
                  LET l_site = l_icab_now.icab003
                  
               ELSE   #最終站
                  
                  #若為中斷點，結束流程
                  IF l_icab_now.icab005 = 'Y' THEN
                     EXIT FOREACH
                  END IF
               
                  #產生最終站多角出貨單
                  CALL s_aic_carry_gen_tri_bs(l_site,l_pmdsdocno,'',l_icab_now.icab003,'1',l_xmdk.xmdkdocno,l_xmdk.xmdkdocdt,
                                              l_icac007,'',l_xmdk.xmdk044,l_icab_now.icab002,'')
                  RETURNING l_success,l_xmdkdocno
               
                  IF NOT l_success THEN
                     EXIT FOREACH
                  END IF
                  
               END IF
            END IF

            #若為中斷點，不續拋
            IF l_icab_now.icab005 = 'Y' THEN
               EXIT FOREACH
            END IF
            
         END FOREACH
         
      ELSE                     #逆拋
         #跑站(當站)
         INITIALIZE l_icab_now.* TO NULL
         LET l_num = 0
         OPEN aicp500_process_icab_backward_cur USING l_xmdk.xmdk044
         FOREACH aicp500_process_icab_backward_cur INTO l_icab_now.icab002,l_icab_now.icab003,
                                                        l_icab_now.icab005,l_icab_now.icab008
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = 'process_cur'
               LET g_errparam.popup = TRUE
               CALL cl_err()
             
               LET l_success = FALSE
               EXIT FOREACH
            END IF

            #最終站
            IF l_num = 0 THEN
               #若最終站中斷，不續拋
               IF l_icab_now.icab005 = 'Y' THEN
                  EXIT FOREACH
               END IF
            
               LET l_site = l_icab_now.icab003
               
               LET l_num = l_num + 1
               CONTINUE FOREACH
            END IF

            INITIALIZE l_icab_next.* TO NULL

            #下站多角貿易營運據點(逆拋)
            DECLARE aicp500_process_next_backward_cur CURSOR FOR
                SELECT icab002,icab003
                  FROM icab_t
                 WHERE icabent = g_enterprise
                   AND icab001 = l_xmdk.xmdk044
                   AND icab002 < l_icab_now.icab002
                 ORDER BY icab002 DESC

            INITIALIZE l_icab_next.* TO NULL
            FOREACH aicp500_process_next_backward_cur INTO l_icab_next.icab002,l_icab_next.icab003
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = 'aicp500_process_next_backward_cur'
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
       
                  LET l_success = FALSE
                  EXIT FOREACH
               END IF
            
               EXIT FOREACH
            END FOREACH

            IF NOT l_success THEN
               EXIT FOREACH
            END IF

            #出貨單別
            LET l_icac007 = ''
            EXECUTE aicp500_process_icac007_pre USING l_xmdk.xmdk044,l_icab_now.icab002 INTO l_icac007

            IF NOT cl_null(l_icab_next.icab002) THEN  #中間站

               #非中斷點 或 中斷有實體庫存，產生收貨單
               IF l_icab_now.icab005 = 'N' OR l_icab_now.icab008 = 'Y' THEN
                  #產生多角收貨入庫單
                  CALL s_aic_carry_gen_tri_mr(l_site,l_xmdk.xmdkdocno,l_icab_now.icab003,l_xmdk.xmdkdocdt,
                                              l_xmdk.xmdk044,l_icab_now.icab002,'','','')
                  RETURNING l_success,l_pmdsdocno
               
                  IF NOT l_success THEN
                     EXIT FOREACH
                  END IF
               END IF

               #非中斷點，產生出貨單
               IF l_icab_now.icab005 = 'N' THEN
                  #產生多角出貨單
                  CALL s_aic_carry_gen_tri_bs(l_site,l_pmdsdocno,'',l_icab_now.icab003,'1',l_xmdk.xmdkdocno,l_xmdk.xmdkdocdt,
                                              l_icac007,'',l_xmdk.xmdk044,l_icab_now.icab002,'')
                  RETURNING l_success,l_xmdkdocno
              
                  IF NOT l_success THEN
                     EXIT FOREACH
                  END IF
               END IF
              
               LET l_site = l_icab_now.icab003
               
            ELSE   #最終站

               #非中斷點 或 銷售且中斷有實體庫存，產生收貨單
               IF l_icab_now.icab005 = 'N' OR (l_icaa003 = '1' AND l_icab_now.icab008 = 'Y') THEN
                  #產生多角收貨入庫單
                  CALL s_aic_carry_gen_tri_mr(l_site,l_xmdk.xmdkdocno,l_icab_now.icab003,l_xmdk.xmdkdocdt,
                                              l_xmdk.xmdk044,l_icab_now.icab002,'','','')
                  RETURNING l_success,l_pmdsdocno
               
                  IF NOT l_success THEN
                     EXIT FOREACH
                  END IF
               END IF
             
               IF l_icaa003 = '1' THEN  #銷售
               
                  #非中斷點，產生出貨單
                  IF l_icab_now.icab005 = 'N' THEN
               
                     #產生多角出貨單
                     CALL s_aic_carry_gen_tri_bs(l_site,l_pmdsdocno,'',l_icab_now.icab003,'1',l_xmdk.xmdkdocno,l_xmdk.xmdkdocdt,
                                                 l_icac007,'',l_xmdk.xmdk044,l_icab_now.icab002,'')
                     RETURNING l_success,l_xmdkdocno
              
                     IF NOT l_success THEN
                        EXIT FOREACH
                     END IF
                  END IF
                  
               END IF
               
            END IF
         
            #若該站中斷，不續拋
            IF l_icab_now.icab005 = 'Y' THEN
               EXIT FOREACH
            END IF

         END FOREACH
         
      END IF      
      
      IF g_bgjob = 'N' THEN
         IF l_success THEN
            CALL s_transaction_end('Y',0)
            #成功記錄
            CALL aicp500_success(l_xmdk.*,l_trino)                  
         ELSE
            CALL s_transaction_end('N',0)
            #失敗記錄
            CALL aicp500_fail(l_xmdk.*,l_icab_now.icab003)
         END IF
      ELSE
         IF l_success THEN
            #成功
            CALL s_transaction_end('Y',0)
            CALL cl_ask_pressanykey("aic-00176")    #多角流程拋轉成功！
         ELSE
            #失敗
            CALL s_transaction_end('N',0)
            CALL cl_ask_pressanykey("aic-00177")    #多角流程拋轉失敗！
         END IF
      END IF
      
   END FOREACH

   #清空錯誤訊息的array，並且之後的訊息不以array記錄
   CALL cl_err_collect_init()
   CALL cl_err_collect_show()

   CALL s_aic_carry_drop_temp_table_ship()

   IF g_bgjob = 'N' THEN
      CALL cl_ask_pressanykey("std-00012")   #批次作業已執行完成。
   END IF
END FUNCTION]]>
  </point>
  <point name="function.aicp500_create_temp" order="2" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 建立TEMP TABLE
# Memo...........:
# Usage..........: CALL aicp500_create_temp()
#                  
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 141105 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION aicp500_create_temp()
   
   DROP TABLE aicp500_tmp;
   CREATE TEMP TABLE aicp500_tmp( 
       sel            LIKE type_t.chr1,
       xmdkdocno      LIKE xmdk_t.xmdkdocno, 
       xmdkdocdt      LIKE xmdk_t.xmdkdocdt,
       xmdk007        LIKE xmdk_t.xmdk007,
       xmdk009        LIKE xmdk_t.xmdk009,
       xmdk008        LIKE xmdk_t.xmdk008,
       xmdk003        LIKE xmdk_t.xmdk003,
       xmdk004        LIKE xmdk_t.xmdk004,
       xmdkownid      LIKE xmdk_t.xmdkownid,
       xmdkcrtid      LIKE xmdk_t.xmdkcrtid,
       xmdk002        LIKE xmdk_t.xmdk002,
       xmdk000        LIKE xmdk_t.xmdk000,
       xmdk044        LIKE xmdk_t.xmdk044,
       xmdk035        LIKE xmdk_t.xmdk035,
       break          LIKE type_t.chr1
       );
       
END FUNCTION]]>
  </point>
  <point name="function.aicp500_success" order="3" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 成功紀錄
# Memo...........:
# Usage..........: CALL aicp500_success(p_xmdk,p_xmdk035)
#                  
# Input parameter: p_xmdk          RECORD
#                : p_xmdk035       多角流程序號
# Return code....: 
#                : 
# Date & Author..: 141113 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION aicp500_success(p_xmdk,p_xmdk035)
   DEFINE p_xmdk           type_g_detail_d
   DEFINE p_xmdk035        LIKE xmdk_t.xmdk035

   IF cl_null(g_success_cnt) THEN
      LET g_success_cnt = 1
   END IF

   LET g_detail3_d[g_success_cnt].xmdkdocno = p_xmdk.xmdkdocno
   LET g_detail3_d[g_success_cnt].xmdkdocdt = p_xmdk.xmdkdocdt
   LET g_detail3_d[g_success_cnt].xmdk007 = p_xmdk.xmdk007
   LET g_detail3_d[g_success_cnt].xmdk009 = p_xmdk.xmdk009
   LET g_detail3_d[g_success_cnt].xmdk008 = p_xmdk.xmdk008
   LET g_detail3_d[g_success_cnt].xmdk003 = p_xmdk.xmdk003
   LET g_detail3_d[g_success_cnt].xmdk004 = p_xmdk.xmdk004
   LET g_detail3_d[g_success_cnt].xmdk044 = p_xmdk.xmdk044
   LET g_detail3_d[g_success_cnt].xmdk035 = p_xmdk035

   CALL s_desc_get_trading_partner_abbr_desc(g_detail3_d[g_success_cnt].xmdk007)
        RETURNING g_detail3_d[g_success_cnt].xmdk007_desc
   CALL s_desc_get_trading_partner_abbr_desc(g_detail3_d[g_success_cnt].xmdk009)
        RETURNING g_detail3_d[g_success_cnt].xmdk009_desc
   CALL s_desc_get_trading_partner_abbr_desc(g_detail3_d[g_success_cnt].xmdk008)
        RETURNING g_detail3_d[g_success_cnt].xmdk008_desc
   CALL s_desc_get_person_desc(g_detail3_d[g_success_cnt].xmdk003)
        RETURNING g_detail3_d[g_success_cnt].xmdk003_desc
   CALL s_desc_get_department_desc(g_detail3_d[g_success_cnt].xmdk004)
        RETURNING g_detail3_d[g_success_cnt].xmdk004_desc

   LET g_success_cnt = g_success_cnt +  1

END FUNCTION]]>
  </point>
  <point name="function.aicp500_fail" order="4" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 失敗紀錄
# Memo...........:
# Usage..........: CALL aicp500_fail(p_xmdk,p_xmdksite)
#                  
# Input parameter: p_xmdk          
#                : p_xmdksite      營運據點
# Date & Author..: 141113 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION aicp500_fail(p_xmdk,p_xmdksite)
   DEFINE p_xmdk           type_g_detail_d
   DEFINE p_xmdksite       LIKE xmdk_t.xmdksite
   DEFINE l_i              LIKE type_t.num5
   
   IF g_bgjob = 'N' THEN
      IF cl_null(g_fail_cnt) THEN
         LET g_fail_cnt = 0
      END IF
      
      FOR l_i = g_fail_cnt + 1 TO g_errcollect.getLength()
         LET g_detail4_d[l_i].xmdkdocno = p_xmdk.xmdkdocno
         LET g_detail4_d[l_i].xmdkdocdt = p_xmdk.xmdkdocdt
         LET g_detail4_d[l_i].xmdk007 = p_xmdk.xmdk007
         LET g_detail4_d[l_i].xmdk009 = p_xmdk.xmdk009
         LET g_detail4_d[l_i].xmdk008 = p_xmdk.xmdk008
         LET g_detail4_d[l_i].xmdk003 = p_xmdk.xmdk003
         LET g_detail4_d[l_i].xmdk004 = p_xmdk.xmdk004
         LET g_detail4_d[l_i].xmdk044 = p_xmdk.xmdk044
         LET g_detail4_d[l_i].xmdksite = p_xmdksite
      
         #錯誤訊息
         LET g_detail4_d[l_i].reason = g_errcollect[l_i].message
      
         CALL s_desc_get_trading_partner_abbr_desc(g_detail4_d[l_i].xmdk007)
              RETURNING g_detail4_d[l_i].xmdk007_desc
         CALL s_desc_get_trading_partner_abbr_desc(g_detail4_d[l_i].xmdk009)
              RETURNING g_detail4_d[l_i].xmdk009_desc
         CALL s_desc_get_trading_partner_abbr_desc(g_detail4_d[l_i].xmdk008)
              RETURNING g_detail4_d[l_i].xmdk008_desc
         CALL s_desc_get_person_desc(g_detail4_d[l_i].xmdk003)
              RETURNING g_detail4_d[l_i].xmdk003_desc
         CALL s_desc_get_department_desc(g_detail4_d[l_i].xmdk004)
              RETURNING g_detail4_d[l_i].xmdk004_desc
         CALL s_desc_get_department_desc(g_detail4_d[l_i].xmdksite)
              RETURNING g_detail4_d[l_i].xmdksite_desc
      
      END FOR
      
      LET g_fail_cnt = g_errcollect.getLength()
   END IF
   
END FUNCTION]]>
  </point>
  <point name="function.aicp500_sel" order="5" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
#單號過濾條件
PRIVATE FUNCTION aicp500_sel()
   #設定出貨單限制條件
   LET g_aicp500_sel = " xmdkent = ",g_enterprise,
                       " AND xmdksite = '",g_site,"'",
                       " AND xmdk044 IS NOT NULL",      #多角序號
                       " AND xmdk083 = 'N'",            #多角貿易已拋轉
                       " AND xmdk045 IN ('2','7')",
                       " AND ((xmdk000 = '1' AND xmdk002 <> '3' AND xmdkstus = 'S') OR",
                       "      (xmdk000 = '4' AND xmdk002 = '3' AND xmdkstus = 'Y' ))",
                       " AND EXISTS (SELECT 1 ",
                       "               FROM icaa_t",
                       "              WHERE icaaent = ",g_enterprise,
                       "                AND icaa001 = xmdk044",
                       "                AND (icaa003 = '1' OR (icaa003 = '2' AND icaa004 = '2')))"
END FUNCTION]]>
  </point>
  <point name="b_fill.clear" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL g_detail2_d.clear()]]>
  </point>
  <point name="b_fill.foreach_into" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   g_detail_d[l_ac].sel       , g_detail_d[l_ac].xmdkdocno      , g_detail_d[l_ac].xmdkdocdt,
   g_detail_d[l_ac].xmdk007   , g_detail_d[l_ac].xmdk007_desc   ,
   g_detail_d[l_ac].xmdk009   , g_detail_d[l_ac].xmdk009_desc   ,
   g_detail_d[l_ac].xmdk008   , g_detail_d[l_ac].xmdk008_desc   ,
   g_detail_d[l_ac].xmdk003   , g_detail_d[l_ac].xmdk003_desc   ,
   g_detail_d[l_ac].xmdk004   , g_detail_d[l_ac].xmdk004_desc   ,
   g_detail_d[l_ac].xmdkownid , g_detail_d[l_ac].xmdkownid_desc ,
   g_detail_d[l_ac].xmdkcrtid , g_detail_d[l_ac].xmdkcrtid_desc ,
   g_detail_d[l_ac].xmdk002   , g_detail_d[l_ac].xmdk000        , g_detail_d[l_ac].xmdk044,
   g_detail_d[l_ac].break     , g_detail_d[l_ac].xmdk035
  ]]>
  </point>
  <point name="b_fill.foreach_iside" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
      CALL s_desc_get_trading_partner_abbr_desc(g_detail_d[l_ac].xmdk007) RETURNING g_detail_d[l_ac].xmdk007_desc
      CALL s_desc_get_trading_partner_abbr_desc(g_detail_d[l_ac].xmdk009) RETURNING g_detail_d[l_ac].xmdk009_desc
      CALL s_desc_get_trading_partner_abbr_desc(g_detail_d[l_ac].xmdk008) RETURNING g_detail_d[l_ac].xmdk008_desc

      CALL s_desc_get_person_desc(g_detail_d[l_ac].xmdk003) RETURNING g_detail_d[l_ac].xmdk003_desc
      CALL s_desc_get_person_desc(g_detail_d[l_ac].xmdkownid) RETURNING g_detail_d[l_ac].xmdkownid_desc
      CALL s_desc_get_person_desc(g_detail_d[l_ac].xmdkcrtid) RETURNING g_detail_d[l_ac].xmdkcrtid_desc
      
      CALL s_desc_get_department_desc(g_detail_d[l_ac].xmdk004) RETURNING g_detail_d[l_ac].xmdk004_desc
      ]]>
  </point>
  <point name="b_fill.other_table" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL g_detail_d.deleteElement(g_detail_d.getLength())
   IF g_detail_d.getLength() > 0 THEN
      LET g_master_idx = 1
   ELSE
      LET g_master_idx = 0
   END IF
   ]]>
  </point>
  <point name="b_fill.sql_before" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_sql = "SELECT DISTINCT sel,xmdkdocno,xmdkdocdt,",
               "                xmdk007,'',",
               "                xmdk009,'',",
               "                xmdk008,'',",
               "                xmdk003,'',",
               "                xmdk004,'',",
               "                xmdkownid,'',",
               "                xmdkcrtid,'',",
               "                xmdk002,xmdk000,xmdk044,",
               "                break,xmdk035",
               "  FROM aicp500_tmp ",
               " WHERE ",g_wc_filter,
               " ORDER BY xmdkdocno,xmdkdocdt "
               ]]>
  </point>
  <point name="fetch.after_fill" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL g_detail2_d.clear()
   
   IF cl_null(g_master_idx) OR g_master_idx <=0 THEN
      RETURN
   END IF   
   
   LET l_ac = 1
   LET g_sql = "SELECT xmdlseq,",
               "       xmdl001,xmdl002,xmdl003,xmdl004,xmdl005,",
               "       xmdl006,xmdl007,",
               "       xmdl008,imaal003,imaal004,",
               "       xmdl009,'',",
               "       xmdl033,",
               "       xmdl017,a.oocal003,xmdl018,",
               "       xmdl019,b.oocal003,xmdl020,",
               "       xmdl010,xmdl021,c.oocal003,",
               "       xmdl022,xmdl030,xmdl031,xmdl032,xmdl051",
               "  FROM xmdl_t ",
               "       LEFT OUTER JOIN imaal_t ON imaalent = xmdlent AND imaal001 = xmdl008 AND imaal002 = '",g_dlang,"' ",
               "       LEFT OUTER JOIN oocal_t a ON a.oocalent = xmdlent AND a.oocal001 = xmdl017 AND a.oocal002 = '",g_dlang,"' ",
               "       LEFT OUTER JOIN oocal_t b ON b.oocalent = xmdlent AND b.oocal001 = xmdl019 AND b.oocal002 = '",g_dlang,"' ",
               "       LEFT OUTER JOIN oocal_t c ON c.oocalent = xmdlent AND c.oocal001 = xmdl021 AND c.oocal002 = '",g_dlang,"' ",
               " WHERE xmdlent = ",g_enterprise,
               "   AND xmdldocno = '",g_detail_d[g_master_idx].xmdkdocno,"'"
   PREPARE xmdl_fill_pre FROM g_sql
   DECLARE xmdl_fill_cur CURSOR FOR xmdl_fill_pre
   
   FOREACH xmdl_fill_cur INTO
      g_detail2_d[l_ac].xmdlseq,
      g_detail2_d[l_ac].xmdl001,g_detail2_d[l_ac].xmdl002,g_detail2_d[l_ac].xmdl003,g_detail2_d[l_ac].xmdl004,g_detail2_d[l_ac].xmdl005,
      g_detail2_d[l_ac].xmdl006,g_detail2_d[l_ac].xmdl007,
      g_detail2_d[l_ac].xmdl008,g_detail2_d[l_ac].xmdl008_desc,g_detail2_d[l_ac].xmdl008_desc_desc,
      g_detail2_d[l_ac].xmdl009,g_detail2_d[l_ac].xmdl009_desc,
      g_detail2_d[l_ac].xmdl033,
      g_detail2_d[l_ac].xmdl017,g_detail2_d[l_ac].xmdl017_desc,g_detail2_d[l_ac].xmdl018,
      g_detail2_d[l_ac].xmdl019,g_detail2_d[l_ac].xmdl019_desc,g_detail2_d[l_ac].xmdl020,
      g_detail2_d[l_ac].xmdl010,g_detail2_d[l_ac].xmdl021,g_detail2_d[l_ac].xmdl021_desc,
      g_detail2_d[l_ac].xmdl022,g_detail2_d[l_ac].xmdl030,g_detail2_d[l_ac].xmdl031,g_detail2_d[l_ac].xmdl032,g_detail2_d[l_ac].xmdl051
            
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF

      #產品特徵
      CALL s_feature_description(g_detail2_d[l_ac].xmdl008,g_detail2_d[l_ac].xmdl009)
           RETURNING l_success,g_detail2_d[l_ac].xmdl009_desc

      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code =  9035
            LET g_errparam.extend =  ""
            LET g_errparam.popup = TRUE
            CALL cl_err()

         END IF
         EXIT FOREACH
      END IF
   END FOREACH
   
   CALL g_detail2_d.deleteElement(g_detail2_d.getLength())
   LET g_detail_cnt = l_ac - 1 
   DISPLAY g_detail_cnt TO FORMONLY.cnt]]>
  </point>
  <point name="fetch.define" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success       LIKE type_t.num5]]>
  </point>
  <point name="filter.detail_cnt" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   
   CLEAR FORM 
   CALL g_detail_d.clear()
   CALL g_detail2_d.clear()
   
   CONSTRUCT g_wc_filter ON xmdkdocno,xmdkdocdt,xmdk007,xmdk009,xmdk008,xmdk003,xmdk004,xmdkownid,xmdkcrtid,xmdk002
        FROM s_detail1[1].b_xmdkdocno,s_detail1[1].b_xmdkdocdt,s_detail1[1].b_xmdk007,
             s_detail1[1].b_xmdk009  ,s_detail1[1].b_xmdk008  ,s_detail1[1].b_xmdk003,
             s_detail1[1].b_xmdk004  ,s_detail1[1].b_xmdkownid,s_detail1[1].b_xmdkcrtid,
             s_detail1[1].b_xmdk002
           
      BEFORE CONSTRUCT
      
           ON ACTION controlp INFIELD xmdkdocno
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.where = g_aicp500_sel
               
               CALL q_xmdkdocno_14()                       #呼叫開窗
               DISPLAY g_qryparam.return1 TO xmdkdocno  #顯示到畫面上
               NEXT FIELD xmdkdocno                     #返回原欄位    
               
            ON ACTION controlp INFIELD xmdk007
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.arg1 = g_site
               CALL q_pmaa001_6()                     #呼叫開窗
               
               DISPLAY g_qryparam.return1 TO xmdk007  #顯示到畫面上
               NEXT FIELD xmdk007                     #返回原欄位
               
            ON ACTION controlp INFIELD xmdk009            
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.arg1 = g_site
               CALL q_pmaa001_6()                           #呼叫開窗
               
               DISPLAY g_qryparam.return1 TO xmdk009  #顯示到畫面上
               NEXT FIELD xmdk009           
            
            ON ACTION controlp INFIELD xmdk008
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.arg1 = g_site
               CALL q_pmaa001_6()                           #呼叫開窗
               
               DISPLAY g_qryparam.return1 TO xmdk008  #顯示到畫面上
               NEXT FIELD xmdk008    
                
            ON ACTION controlp INFIELD xmdk003
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_ooeg001()                       #呼叫開窗
               
               DISPLAY g_qryparam.return1 TO xmdk003  #顯示到畫面上
               NEXT FIELD xmdk003                     #返回原欄位
               
           ON ACTION controlp INFIELD xmdk004
              INITIALIZE g_qryparam.* TO NULL
              LET g_qryparam.state = 'c'
              LET g_qryparam.reqry = FALSE
              CALL q_ooeg001()                       #呼叫開窗
              
              DISPLAY g_qryparam.return1 TO xmdk004  #顯示到畫面上
              NEXT FIELD xmdk004                       #返回原欄位   
               
            ON ACTION controlp INFIELD xmdkownid
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_ooag001()                         #呼叫開窗
               
               DISPLAY g_qryparam.return1 TO xmdkownid  #顯示到畫面上
               NEXT FIELD xmdkownid                     #返回原欄位
   
            ON ACTION controlp INFIELD xmdkcrtid
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_ooag001()                          #呼叫開窗
               
               DISPLAY g_qryparam.return1 TO xmdkcrtid  #顯示到畫面上
               NEXT FIELD xmdkcrtid                     #返回原欄位
            


   END CONSTRUCT]]>
  </point>
  <point name="global.variable" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[       sel               LIKE type_t.chr1,
       xmdkdocno         LIKE xmdk_t.xmdkdocno,
       xmdkdocdt         LIKE xmdk_t.xmdkdocdt,
       xmdk007           LIKE xmdk_t.xmdk007,
       xmdk007_desc      LIKE type_t.chr80,
       xmdk009           LIKE xmdk_t.xmdk009,
       xmdk009_desc      LIKE type_t.chr80,
       xmdk008           LIKE xmdk_t.xmdk008,
       xmdk008_desc      LIKE type_t.chr80,
       xmdk003           LIKE xmdk_t.xmdk003,
       xmdk003_desc      LIKE type_t.chr80,
       xmdk004           LIKE xmdk_t.xmdk004,
       xmdk004_desc      LIKE type_t.chr80,
       xmdkownid         LIKE xmdk_t.xmdkownid,
       xmdkownid_desc    LIKE type_t.chr80,
       xmdkcrtid         LIKE xmdk_t.xmdkcrtid,
       xmdkcrtid_desc    LIKE type_t.chr80,
       xmdk002           LIKE xmdk_t.xmdk002,
       xmdk000           LIKE xmdk_t.xmdk000,   #150416---earl---add
       xmdk044           LIKE xmdk_t.xmdk044,
       break             LIKE type_t.chr1,      #150416---earl---add
       xmdk035           LIKE xmdk_t.xmdk035    #150527---earl---add
                     END RECORD
DEFINE g_detail_d_t      type_g_detail_d

TYPE type_g_detail2_d RECORD
       xmdlseq           LIKE xmdl_t.xmdlseq, 
       xmdl001           LIKE xmdl_t.xmdl001,
       xmdl002           LIKE xmdl_t.xmdl002,
       xmdl003           LIKE xmdl_t.xmdl003,
       xmdl004           LIKE xmdl_t.xmdl004,
       xmdl005           LIKE xmdl_t.xmdl005,
       xmdl006           LIKE xmdl_t.xmdl006,
       xmdl007           LIKE xmdl_t.xmdl007,
       xmdl008           LIKE xmdl_t.xmdl008,
       xmdl008_desc      LIKE type_t.chr80,
       xmdl008_desc_desc LIKE type_t.chr80,
       xmdl009           LIKE xmdl_t.xmdl009,
       xmdl009_desc      LIKE type_t.chr80,
       xmdl033           LIKE xmdl_t.xmdl033,
       xmdl017           LIKE xmdl_t.xmdl017,
       xmdl017_desc      LIKE type_t.chr80,
       xmdl018           LIKE xmdl_t.xmdl018,
       xmdl019           LIKE xmdl_t.xmdl019,
       xmdl019_desc      LIKE type_t.chr80,
       xmdl020           LIKE xmdl_t.xmdl020,
       xmdl010           LIKE xmdl_t.xmdl010,
       xmdl021           LIKE xmdl_t.xmdl021,
       xmdl021_desc      LIKE type_t.chr80,
       xmdl022           LIKE xmdl_t.xmdl022,       
       xmdl030           LIKE xmdl_t.xmdl030,
       xmdl031           LIKE xmdl_t.xmdl031,       
       xmdl032           LIKE xmdl_t.xmdl032,
       xmdl051           LIKE xmdl_t.xmdl051
                      END RECORD

DEFINE g_detail2_d       DYNAMIC ARRAY OF type_g_detail2_d
DEFINE g_detail2_cnt     LIKE type_t.num5
DEFINE g_rec_b           LIKE type_t.num5

TYPE type_g_detail3_d RECORD
       xmdkdocno         LIKE xmdk_t.xmdkdocno, 
       xmdkdocdt         LIKE xmdk_t.xmdkdocdt,
       xmdk007           LIKE xmdk_t.xmdk007,
       xmdk007_desc      LIKE type_t.chr80,
       xmdk009           LIKE xmdk_t.xmdk009,
       xmdk009_desc      LIKE type_t.chr80,
       xmdk008           LIKE xmdk_t.xmdk008,
       xmdk008_desc      LIKE type_t.chr80,      
       xmdk003           LIKE xmdk_t.xmdk003,
       xmdk003_desc      LIKE type_t.chr80,
       xmdk004           LIKE xmdk_t.xmdk004,
       xmdk004_desc      LIKE type_t.chr80,
       xmdk044           LIKE xmdk_t.xmdk044,
       xmdk035           LIKE xmdk_t.xmdk035
                      END RECORD

DEFINE g_detail3_d  DYNAMIC ARRAY OF type_g_detail3_d
DEFINE g_detail3_cnt     LIKE type_t.num5

TYPE type_g_detail4_d RECORD
       xmdkdocno         LIKE xmdk_t.xmdkdocno, 
       xmdkdocdt         LIKE xmdk_t.xmdkdocdt,
       xmdk007           LIKE xmdk_t.xmdk007,
       xmdk007_desc      LIKE type_t.chr80,
       xmdk009           LIKE xmdk_t.xmdk009,
       xmdk009_desc      LIKE type_t.chr80,
       xmdk008           LIKE xmdk_t.xmdk008,
       xmdk008_desc      LIKE type_t.chr80,      
       xmdk003           LIKE xmdk_t.xmdk003,
       xmdk003_desc      LIKE type_t.chr80,
       xmdk004           LIKE xmdk_t.xmdk004,
       xmdk004_desc      LIKE type_t.chr80,
       xmdk044           LIKE xmdk_t.xmdk044,
       xmdksite          LIKE xmdk_t.xmdksite,
       xmdksite_desc     LIKE type_t.chr80,
       reason            LIKE type_t.chr1000
                      END RECORD

DEFINE g_detail4_d    DYNAMIC ARRAY OF type_g_detail4_d
DEFINE g_detail4_cnt     LIKE type_t.num5

DEFINE g_success_cnt     LIKE type_t.num5
DEFINE g_fail_cnt        LIKE type_t.num5

DEFINE g_aicp500_sel     STRING
]]>
  </point>
  <point name="init.init" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
   CALL cl_set_combo_scc('xmdk002','2063')
   CALL cl_set_combo_scc('b_xmdk002','2063')
   CALL cl_set_combo_scc('b_xmdl007','2055')
   
   CALL cl_set_combo_scc('b_xmdk000','2077')  #150416---earl---add
   
   #判斷據點參數若不使用產品特徵時，則產品特徵需隱藏不可以維護(據點參數:S-BAS-0036)
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0036') = 'N' THEN
      CALL cl_set_comp_visible("b_xmdl009,b_xmdl009_desc",FALSE)
   END IF

   #判斷據點參數若不使用參考單位時，則參考單位、數量需隱藏不可以維護(據點參數:S-BAS-0028)
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0028') = 'N' THEN
      CALL cl_set_comp_visible("b_xmdl019,b_xmdl019_desc,b_xmdl020",FALSE)
   END IF

   #整體參數未使用採購計價單位
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0007') = "N" THEN
      CALL cl_set_comp_visible("b_xmdl021,b_xmdl021_desc,b_xmdl022",FALSE)
   END IF

   LET g_errshow = 1
   IF cl_null(g_bgjob) THEN
      LET g_bgjob = 'N'
   END IF]]>
  </point>
  <point name="main.background" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL aicp500_create_temp()

   CALL aicp500_sel()

   IF NOT cl_null(g_argv[1]) THEN
      LET g_bgjob = 'Y'
   END IF]]>
  </point>
  <point name="main.exit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DROP TABLE aicp500_tmp;]]>
  </point>
  <point name="main.servicecall" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      IF NOT cl_null(g_argv[1]) THEN
         LET g_wc = " xmdkdocno = '",g_argv[1],"' "
         CALL aicp500_query()
         UPDATE aicp500_tmp
            SET sel = 'Y'
         CALL aicp500_process()
      END IF]]>
  </point>
  <point name="menu.filter" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="query.after_construct" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   DELETE FROM aicp500_tmp;
   
   LET g_sql = "SELECT DISTINCT 'N',xmdkdocno,xmdkdocdt,xmdk007,xmdk009,xmdk008,",
               "                xmdk003,xmdk004,xmdkownid,xmdkcrtid,xmdk002,",
               "                xmdk000,",
               "                xmdk044,",
               "                xmdk035,",
               "          CASE xmdksite",
               "          WHEN (SELECT b.icab003 ",
               "                  FROM icaa_t a,icab_t b",
               "                 WHERE a.icaaent = b.icabent AND b.icabent = ",g_enterprise,
               "                   AND a.icaa001 = b.icab001 AND b.icab001 = xmdk044",
               "                   AND a.icaa004 = '2'",
               "                   AND b.icab002 = 0) THEN 'Y'",
               "          ELSE 'N'",
               "          END",
               "  FROM xmdk_t ",
               " WHERE ",g_aicp500_sel,
               "   AND ",g_wc

   LET g_sql = "INSERT INTO aicp500_tmp ",g_sql
   PREPARE tmp_ins_pre FROM g_sql
   EXECUTE tmp_ins_pre


   LET g_wc_filter = " 1=1"]]>
  </point>
  <point name="query.define" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="ui_dialog.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_wc = "1=1"]]>
  </point>
  <point name="ui_dialog.before_dialog2" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
            CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
            
            CALL aicp500_sel()
            ]]>
  </point>
  <point name="ui_dialog.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_cnt       LIKE type_t.num5
]]>
  </point>
  <point name="ui_dialog.more_action" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
         ON ACTION batch_execute
            #變更此筆資料後，直接按執行
            IF l_ac > 0 THEN
               UPDATE aicp500_tmp 
                  SET sel = g_detail_d[l_ac].sel 
                WHERE xmdkdocno = g_detail_d[l_ac].xmdkdocno 
            END IF
                
            LET l_cnt = ''
            SELECT COUNT(*) INTO l_cnt
              FROM aicp500_tmp
             WHERE sel = 'Y'
             
            IF cl_null(l_cnt) OR l_cnt = 0 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = '-400'
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

            ELSE
               CALL aicp500_process()
               CALL aicp500_query()
            END IF
            ACCEPT DIALOG]]>
  </point>
  <point name="ui_dialog.more_construct" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[         CONSTRUCT BY NAME g_wc ON xmdkdocno,xmdkdocdt,xmdk007,xmdk009,xmdk008,xmdk003,xmdk004,xmdkownid,xmdkcrtid,xmdk002

            BEFORE CONSTRUCT
            
            ON ACTION controlp INFIELD xmdkdocno
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.where = g_aicp500_sel
               
               CALL q_xmdkdocno_14()                    #呼叫開窗
               DISPLAY g_qryparam.return1 TO xmdkdocno  #顯示到畫面上
               NEXT FIELD xmdkdocno                     #返回原欄位    

            ON ACTION controlp INFIELD xmdk007
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.arg1 = g_site
               CALL q_pmaa001_6()                     #呼叫開窗
               
               DISPLAY g_qryparam.return1 TO xmdk007  #顯示到畫面上
               NEXT FIELD xmdk007                     #返回原欄位
               
            ON ACTION controlp INFIELD xmdk009            
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.arg1 = g_site
               CALL q_pmaa001_6()                           #呼叫開窗
               
               DISPLAY g_qryparam.return1 TO xmdk009  #顯示到畫面上
               NEXT FIELD xmdk009           
            
            ON ACTION controlp INFIELD xmdk008
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.arg1 = g_site
               CALL q_pmaa001_6()                           #呼叫開窗
               
               DISPLAY g_qryparam.return1 TO xmdk008  #顯示到畫面上
               NEXT FIELD xmdk008    
                
            ON ACTION controlp INFIELD xmdk003
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_ooag001()                       #呼叫開窗
               
               DISPLAY g_qryparam.return1 TO xmdk003  #顯示到畫面上
               NEXT FIELD xmdk003                     #返回原欄位
               
            ON ACTION controlp INFIELD xmdk004
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_ooeg001()                       #呼叫開窗
               
               DISPLAY g_qryparam.return1 TO xmdk004  #顯示到畫面上
               NEXT FIELD xmdk004                       #返回原欄位   
               
            ON ACTION controlp INFIELD xmdkownid
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_ooag001()                         #呼叫開窗
               
               DISPLAY g_qryparam.return1 TO xmdkownid  #顯示到畫面上
               NEXT FIELD xmdkownid                     #返回原欄位
   
            ON ACTION controlp INFIELD xmdkcrtid
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_ooag001()                          #呼叫開窗
               
               DISPLAY g_qryparam.return1 TO xmdkcrtid  #顯示到畫面上
               NEXT FIELD xmdkcrtid                     #返回原欄位
         
         END CONSTRUCT         ]]>
  </point>
  <point name="ui_dialog.more_displayarray" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         DISPLAY ARRAY g_detail2_d TO s_detail2.* ATTRIBUTE(COUNT=g_detail2_cnt)
            BEFORE DISPLAY
              
            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               DISPLAY l_ac TO FORMONLY.idx
              
         END DISPLAY

         DISPLAY ARRAY g_detail3_d TO s_detail3.* ATTRIBUTE(COUNT=g_detail3_cnt)
            BEFORE DISPLAY

            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               DISPLAY l_ac TO FORMONLY.idx

         END DISPLAY

         DISPLAY ARRAY g_detail4_d TO s_detail4.* ATTRIBUTE(COUNT=g_detail4_cnt)
            BEFORE DISPLAY

            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               DISPLAY l_ac TO FORMONLY.idx

         END DISPLAY]]>
  </point>
  <point name="ui_dialog.more_input" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         INPUT ARRAY g_detail_d FROM s_detail1.* 
              ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                        INSERT ROW = FALSE,
                        DELETE ROW = FALSE,
                        APPEND ROW = FALSE)
                        
            BEFORE INPUT
               IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
                 CALL FGL_SET_ARR_CURR(g_detail_d.getLength()+1) 
                 LET g_insert = 'N' 
               END IF 
             
            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_master_idx = l_ac
               DISPLAY l_ac TO FORMONLY.h_index
               CALL aicp500_fetch()
               LET g_detail_d_t.* = g_detail_d[l_ac].*
               
            ON CHANGE b_sel
               UPDATE aicp500_tmp 
                  SET sel = g_detail_d[l_ac].sel 
                WHERE xmdkdocno = g_detail_d[l_ac].xmdkdocno 
                  
         END INPUT               ]]>
  </point>
  <point name="ui_dialog.onaction_sel" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            FOR li_idx = 1 TO g_detail_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  UPDATE aicp500_tmp 
                     SET sel = 'Y' 
                   WHERE xmdkdocno = g_detail_d[li_idx].xmdkdocno 
               END IF
            END FOR]]>
  </point>
  <point name="ui_dialog.onaction_selall" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            UPDATE aicp500_tmp 
               SET sel = 'Y']]>
  </point>
  <point name="ui_dialog.onaction_selnone" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            UPDATE aicp500_tmp 
               SET sel = 'N']]>
  </point>
  <point name="ui_dialog.onaction_unsel" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            FOR li_idx = 1 TO g_detail_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  UPDATE aicp500_tmp 
                     SET sel = 'N' 
                   WHERE xmdkdocno = g_detail_d[li_idx].xmdkdocno
               END IF
            END FOR]]>
  </point>
  <section id="aicp500.b_fill" ver="1" status="" src="m" readonly="">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION aicp500_b_fill()
 
   DEFINE ls_wc           STRING
   #add-point:b_fill段define
{<point name="b_fill.define"/>}
   #end add-point
 
   #add-point:b_fill段sql_before
{<point name="b_fill.sql_before"/>}
   #end add-point
 
   PREPARE aicp500_sel FROM g_sql
   DECLARE b_fill_curs CURSOR FOR aicp500_sel
   
   CALL g_detail_d.clear()
   #add-point:b_fill段其他頁簽清空
{<point name="b_fill.clear"/>}
   #end add-point
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs INTO 
   #add-point:b_fill段foreach_into
{<point name="b_fill.foreach_into"/>}
   #end add-point
   
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
      
      #add-point:b_fill段資料填充
{<point name="b_fill.foreach_iside"/>}
      #end add-point
      
      CALL aicp500_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code =  9035
            LET g_errparam.extend =  ""
            LET g_errparam.popup = TRUE
            CALL cl_err()

         END IF
         EXIT FOREACH
      END IF
      
   END FOREACH
   LET g_error_show = 0
   
   #add-point:b_fill段資料填充(其他單身)
{<point name="b_fill.other_table"/>}
   #end add-point
    
   LET g_detail_cnt = l_ac - 1 
   DISPLAY g_detail_cnt TO FORMONLY.h_count
   LET l_ac = g_cnt
   LET g_cnt = 0
   
   CLOSE b_fill_curs
   FREE aicp500_sel
   
   LET l_ac = 1
   CALL aicp500_fetch()
   #add-point:b_fill段資料填充(其他單身)
{<point name="b_fill.after_b_fill"/>}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="aicp500.description" ver="22" status="u" src="m" readonly="">
    <![CDATA[
]]>
  </section>
  <section id="aicp500.detail_show" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 顯示相關資料
PRIVATE FUNCTION aicp500_detail_show()
   #add-point:show段define
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段
   {<point name="detail_show.detail_show"/>}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="aicp500.fetch" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION aicp500_fetch()
 
   DEFINE li_ac           LIKE type_t.num5
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   #add-point:單身填充後
   {<point name="fetch.after_fill" />}
   #end add-point 
   
   LET l_ac = li_ac
   
END FUNCTION
]]>
  </section>
  <section id="aicp500.filter" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION aicp500_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point    
 
   DISPLAY ARRAY g_detail_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt)
      ON UPDATE
 
   END DISPLAY
 
   LET l_ac = 1
   LET g_detail_cnt = 1
   #add-point:filter段define
   {<point name="filter.detail_cnt"/>}
   #end add-point    
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
   
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
   
   CALL aicp500_b_fill()
   CALL aicp500_fetch()
   
END FUNCTION
]]>
  </section>
  <section id="aicp500.filter_parser" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ filter欄位解析
PRIVATE FUNCTION aicp500_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="aicp500.filter_show" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ Browser標題欄位顯示搜尋條件
PRIVATE FUNCTION aicp500_filter_show(ps_field,ps_object)
   DEFINE ps_field         STRING
   DEFINE ps_object        STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.", ps_object
 
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = aicp500_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="aicp500.global" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc" 
 
#模組變數(Module Variables)
DEFINE g_wc                 STRING
DEFINE g_wc_t               STRING                        #儲存 user 的查詢條件
DEFINE g_wc2                STRING
DEFINE g_wc_filter          STRING
DEFINE g_wc_filter_t        STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num5              
DEFINE l_ac_d               LIKE type_t.num5              #單身idx 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_current_page       LIKE type_t.num5              #目前所在頁數
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_master_idx         LIKE type_t.num5
 
TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
   {<point name="global.parameter"/>}
   #end add-point
        wc               STRING
                     END RECORD
 
TYPE type_g_detail_d RECORD
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
DEFINE g_detail_cnt         LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_detail_d  DYNAMIC ARRAY OF type_g_detail_d
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="aicp500.init" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 畫面資料初始化
PRIVATE FUNCTION aicp500_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point   
 
   LET g_error_show  = 1
   LET g_wc_filter   = " 1=1"
   LET g_wc_filter_t = " 1=1"
 
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aicp500.main" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 作業開始 
MAIN
   DEFINE ls_js  STRING
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("aic","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   {<point name="main.background"/>}
   #end add-point
 
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aicp500 WITH FORM cl_ap_formpath("aic",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aicp500_init()   
 
      #進入選單 Menu (="N")
      CALL aicp500_ui_dialog() 
 
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_aicp500
   END IF 
   
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
]]>
  </section>
  <section id="aicp500.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[#add-point:自定義元件(Function)
{<point name="other.function"/>}
#end add-point
]]>
  </section>
  <section id="aicp500.query" ver="1" status="" src="m" readonly="">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aicp500_query()
   DEFINE ls_wc      STRING
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define
{<point name="query.define" />}
   #end add-point 
   
   #add-point:cs段after_construct
{<point name="query.after_construct" />}
   #end add-point
        
   LET g_error_show = 1
   CALL aicp500_b_fill()
   
END FUNCTION
]]>
  </section>
  <section id="aicp500.ui_dialog" ver="1" status="u" src="m" readonly="">
    <![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION aicp500_ui_dialog()
   DEFINE li_idx   LIKE type_t.num5
   #add-point:ui_dialog段define
{<point name="ui_dialog.define"/>}
   #end add-point 
 
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   
   LET g_action_choice = " "  
   CALL cl_set_act_visible("accept,cancel", FALSE)
         
   LET g_detail_cnt = g_detail_d.getLength()
   #add-point:ui_dialog段before dialog 
{<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
 
      CALL cl_dlg_query_bef_disp()  #相關查詢
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #add-point:ui_dialog段construct
{<point name="ui_dialog.more_construct"/>}
         #end add-point
         #add-point:ui_dialog段input
{<point name="ui_dialog.more_input"/>}
         #end add-point
         #add-point:ui_dialog段自定義display array
{<point name="ui_dialog.more_displayarray"/>}
         #end add-point
 
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
 
         BEFORE DIALOG
            IF g_detail_d.getLength() > 0 THEN
               CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
               CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
            ELSE
               CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
               CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
            END IF
            #add-point:ui_dialog段before_dialog2
{<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #選擇全部
         ON ACTION selall
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 1)
            FOR li_idx = 1 TO g_detail_d.getLength()
               LET g_detail_d[li_idx].sel = "Y"
            END FOR
            #add-point:ui_dialog段on action selall
{<point name="ui_dialog.onaction_selall"/>}
            #end add-point
 
         #取消全部
         ON ACTION selnone
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 0)
            FOR li_idx = 1 TO g_detail_d.getLength()
               LET g_detail_d[li_idx].sel = "N"
            END FOR
            #add-point:ui_dialog段on action selnone
{<point name="ui_dialog.onaction_selnone"/>}
            #end add-point
 
         #勾選所選資料
         ON ACTION sel
            FOR li_idx = 1 TO g_detail_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_detail_d[li_idx].sel = "Y"
               END IF
            END FOR
            #add-point:ui_dialog段on action sel
{<point name="ui_dialog.onaction_sel"/>}
            #end add-point
 
         #取消所選資料
         ON ACTION unsel
            FOR li_idx = 1 TO g_detail_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_detail_d[li_idx].sel = "N"
               END IF
            END FOR
            #add-point:ui_dialog段on action unsel
{<point name="ui_dialog.onaction_unsel"/>}
            #end add-point
      
         ON ACTION filter
            LET g_action_choice="filter"
            CALL aicp500_filter()
            #add-point:ON ACTION filter
{<point name="menu.filter" />}
            #END add-point
            EXIT DIALOG
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
 
         ON ACTION accept
            CALL aicp500_query()
 
         # 條件清除
         ON ACTION qbeclear
 
         # 重新整理
         ON ACTION datarefresh
            LET g_error_show = 1
            CALL aicp500_b_fill()
            CALL aicp500_fetch()
 
         #add-point:ui_dialog段action
{<point name="ui_dialog.more_action"/>}
         #end add-point
 
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
]]>
  </section>
</add_points>
