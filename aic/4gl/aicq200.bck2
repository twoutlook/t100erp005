#該程式未解開Section, 採用最新樣板產出!
{<section id="aicq200.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:5(2016-06-16 10:09:41), PR版次:0005(2016-10-19 17:29:59)
#+ Customerized Version.: SD版次:(), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000030
#+ Filename...: aicq200
#+ Description: 多角貿易追蹤查詢作業
#+ Creator....: 02040(2016-02-23 16:13:36)
#+ Modifier...: 02040 -SD/PR- 02040
 
{</section>}
 
{<section id="aicq200.global" >}
#應用 q01 樣板自動產生(Version:32)
#add-point:填寫註解說明
#160503-00008#1   160616      By 02040    增加頁籤狀態的顯示
#160816-00001#3   16/08/16    By 08742    抓取理由碼改CALL sub
#160909-00080#1   2016/09/13  By 02097    修改開窗
#161019-00035#1   16/10/19    By 02040    抓取立帳明細，出入庫號去串AP/AR，不需限定帳款單性質 ，只需排除作廢單據 

#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
#add-point:增加匯入項目 name="global.import"

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_xmda_d RECORD
       
       sel LIKE type_t.chr1, 
   icaa003 LIKE icaa_t.icaa003, 
   oobx003 LIKE oobx_t.oobx003, 
   xmdadocno LIKE xmda_t.xmdadocno, 
   xmdadocdt LIKE xmda_t.xmdadocdt, 
   xmda004 LIKE xmda_t.xmda004, 
   xmda004_desc LIKE type_t.chr500, 
   xmda002 LIKE xmda_t.xmda002, 
   xmda002_desc LIKE type_t.chr500, 
   xmda031 LIKE xmda_t.xmda031, 
   xmda050 LIKE xmda_t.xmda050, 
   xmda050_desc LIKE type_t.chr500, 
   xmdastus LIKE xmda_t.xmdastus, 
   xmda030 LIKE xmda_t.xmda030
       END RECORD
PRIVATE TYPE type_g_xmda2_d RECORD
       icab002 LIKE icab_t.icab002, 
   xmddsite LIKE xmdd_t.xmddsite, 
   xmddsite_desc LIKE type_t.chr500, 
   oobx003 LIKE oobx_t.oobx003, 
   xmdddocno LIKE xmdd_t.xmdddocno, 
   xmda004 LIKE xmda_t.xmda004, 
   xmda004_1_desc LIKE type_t.chr500, 
   xmda010 LIKE xmda_t.xmda010, 
   xmda010_desc LIKE type_t.chr500, 
   xmda009 LIKE xmda_t.xmda009, 
   xmda009_desc LIKE type_t.chr500, 
   xmdd019 LIKE xmdd_t.xmdd019, 
   xmdd019_desc LIKE type_t.chr500, 
   xmda015 LIKE xmda_t.xmda015, 
   xmda015_desc LIKE type_t.chr500, 
   xmddseq LIKE xmdd_t.xmddseq, 
   xmddseq1 LIKE xmdd_t.xmddseq1, 
   xmddseq2 LIKE xmdd_t.xmddseq2, 
   xmdd001 LIKE xmdd_t.xmdd001, 
   xmdd001_desc LIKE type_t.chr500, 
   xmdd001_desc_1 LIKE type_t.chr500, 
   xmdd002 LIKE xmdd_t.xmdd002, 
   xmdd004 LIKE xmdd_t.xmdd004, 
   xmdd004_desc LIKE type_t.chr500, 
   xmdd006 LIKE xmdd_t.xmdd006, 
   xmdd018 LIKE xmdd_t.xmdd018, 
   xmdd028 LIKE xmdd_t.xmdd028, 
   xmdd030 LIKE xmdd_t.xmdd030, 
   xmdd029 LIKE xmdd_t.xmdd029, 
   xmdd011 LIKE xmdd_t.xmdd011, 
   xmdd014 LIKE xmdd_t.xmdd014, 
   l_xmdastus_1 LIKE type_t.chr10
       END RECORD
 
PRIVATE TYPE type_g_xmda3_d RECORD
       xmdk035 LIKE xmdk_t.xmdk035, 
   icab002 LIKE icab_t.icab002, 
   xmdmsite LIKE xmdm_t.xmdmsite, 
   xmdmsite_desc LIKE type_t.chr500, 
   oobx003 LIKE oobx_t.oobx003, 
   xmdmdocno LIKE xmdm_t.xmdmdocno, 
   xmdk007 LIKE xmdk_t.xmdk007, 
   xmdk007_desc LIKE type_t.chr500, 
   xmdk011 LIKE xmdk_t.xmdk011, 
   xmdk011_desc LIKE type_t.chr500, 
   xmdk010 LIKE xmdk_t.xmdk010, 
   xmdk010_desc LIKE type_t.chr500, 
   xmdl025 LIKE xmdl_t.xmdl025, 
   xmdl025_desc LIKE type_t.chr500, 
   xmdk016 LIKE xmdk_t.xmdk016, 
   xmdk016_desc LIKE type_t.chr500, 
   xmdmseq LIKE xmdm_t.xmdmseq, 
   xmdmseq1 LIKE xmdm_t.xmdmseq1, 
   xmdm001 LIKE xmdm_t.xmdm001, 
   xmdm001_desc LIKE type_t.chr500, 
   xmdm001_desc_1 LIKE type_t.chr500, 
   xmdm002 LIKE xmdm_t.xmdm002, 
   xmdm008 LIKE xmdm_t.xmdm008, 
   xmdm008_desc LIKE type_t.chr500, 
   xmdm009 LIKE xmdm_t.xmdm009, 
   xmdl024 LIKE xmdl_t.xmdl024, 
   xmdm012 LIKE xmdm_t.xmdm012, 
   xmdm013 LIKE xmdm_t.xmdm013, 
   xmdkstus LIKE xmdk_t.xmdkstus
       END RECORD
 
PRIVATE TYPE type_g_xmda4_d RECORD
       xmdg055 LIKE xmdg_t.xmdg055, 
   icab002 LIKE icab_t.icab002, 
   xmdisite LIKE xmdi_t.xmdisite, 
   xmdisite_desc LIKE type_t.chr500, 
   oobx003 LIKE oobx_t.oobx003, 
   xmdidocno LIKE xmdi_t.xmdidocno, 
   xmdg005 LIKE xmdg_t.xmdg005, 
   xmdg005_desc LIKE type_t.chr500, 
   xmdg009 LIKE xmdg_t.xmdg009, 
   xmdg009_desc LIKE type_t.chr500, 
   xmdg008 LIKE xmdg_t.xmdg008, 
   xmdg008_desc LIKE type_t.chr500, 
   xmdg010 LIKE type_t.chr10, 
   xmdg010_desc LIKE type_t.chr500, 
   xmdg014 LIKE xmdg_t.xmdg014, 
   xmdg014_desc LIKE type_t.chr500, 
   xmdiseq LIKE xmdi_t.xmdiseq, 
   xmdiseq1 LIKE xmdi_t.xmdiseq1, 
   xmdi001 LIKE xmdi_t.xmdi001, 
   xmdi001_desc LIKE type_t.chr500, 
   xmdi001_desc_1 LIKE type_t.chr500, 
   xmdi002 LIKE xmdi_t.xmdi002, 
   xmdi008 LIKE xmdi_t.xmdi008, 
   xmdi008_desc LIKE type_t.chr500, 
   xmdi009 LIKE xmdi_t.xmdi009, 
   xmdgstus LIKE xmdg_t.xmdgstus
       END RECORD
 
PRIVATE TYPE type_g_xmda5_d RECORD
       xrca047 LIKE xrca_t.xrca047, 
   icab002 LIKE icab_t.icab002, 
   xrcbsite LIKE xrcb_t.xrcbsite, 
   xrcbsite_desc LIKE type_t.chr500, 
   oobx003 LIKE oobx_t.oobx003, 
   xrcbdocno LIKE xrcb_t.xrcbdocno, 
   xrca004 LIKE xrca_t.xrca004, 
   xrca004_desc LIKE type_t.chr500, 
   xrca008 LIKE xrca_t.xrca008, 
   xrca008_desc LIKE type_t.chr500, 
   xrcb020 LIKE xrcb_t.xrcb020, 
   xrcb020_desc LIKE type_t.chr500, 
   xrca100 LIKE xrca_t.xrca100, 
   xrca100_desc LIKE type_t.chr500, 
   xrca101 LIKE xrca_t.xrca101, 
   xrcb105 LIKE xrcb_t.xrcb105, 
   xrcb115 LIKE xrcb_t.xrcb115, 
   xrcastus LIKE xrca_t.xrcastus
       END RECORD
 
PRIVATE TYPE type_g_xmda6_d RECORD
       pmds041 LIKE pmds_t.pmds041, 
   icab002 LIKE icab_t.icab002, 
   pmdusite LIKE pmdu_t.pmdusite, 
   pmdusite_desc LIKE type_t.chr500, 
   oobx003 LIKE oobx_t.oobx003, 
   pmdudocno LIKE pmdu_t.pmdudocno, 
   pmds007 LIKE pmds_t.pmds007, 
   pmds007_desc LIKE type_t.chr500, 
   pmduseq LIKE pmdu_t.pmduseq, 
   pmduseq1 LIKE pmdu_t.pmduseq1, 
   pmdu001 LIKE pmdu_t.pmdu001, 
   pmdu001_desc LIKE type_t.chr500, 
   pmdu001_desc_1 LIKE type_t.chr500, 
   pmdu002 LIKE pmdu_t.pmdu002, 
   pmdu009 LIKE pmdu_t.pmdu009, 
   pmdu009_desc LIKE type_t.chr500, 
   pmdu010 LIKE pmdu_t.pmdu010, 
   pmdu005 LIKE pmdu_t.pmdu005, 
   pmdu006 LIKE pmdu_t.pmdu006, 
   pmdu006_desc LIKE type_t.chr500, 
   pmdu007 LIKE pmdu_t.pmdu007, 
   pmdu007_desc LIKE type_t.chr500, 
   pmdu008 LIKE pmdu_t.pmdu008, 
   pmdt051 LIKE pmdt_t.pmdt051, 
   pmdt051_desc LIKE type_t.chr500, 
   pmdsstus LIKE pmds_t.pmdsstus
       END RECORD
 
PRIVATE TYPE type_g_xmda7_d RECORD
       xmel017 LIKE xmel_t.xmel017, 
   icab002 LIKE icab_t.icab002, 
   xmemsite LIKE xmem_t.xmemsite, 
   xmemsite_desc LIKE type_t.chr500, 
   oobx003 LIKE oobx_t.oobx003, 
   xmemdocno LIKE xmem_t.xmemdocno, 
   xmel003 LIKE xmel_t.xmel003, 
   xmel003_desc LIKE type_t.chr500, 
   xmemseq LIKE xmem_t.xmemseq, 
   xmem003 LIKE xmem_t.xmem003, 
   xmem003_desc LIKE type_t.chr500, 
   xmem003_desc_1 LIKE type_t.chr500, 
   xmem004 LIKE xmem_t.xmem004, 
   xmem005 LIKE xmem_t.xmem005, 
   xmem005_desc LIKE type_t.chr500, 
   xmem006 LIKE xmem_t.xmem006, 
   xmem007 LIKE xmem_t.xmem007, 
   xmem008 LIKE xmem_t.xmem008, 
   xmem010 LIKE xmem_t.xmem010, 
   xmem011 LIKE xmem_t.xmem011, 
   xmem012 LIKE xmem_t.xmem012, 
   xmem013 LIKE xmem_t.xmem013, 
   xmem013_desc LIKE type_t.chr500, 
   xmem014 LIKE xmem_t.xmem014, 
   xmem015 LIKE xmem_t.xmem015, 
   xmem016 LIKE xmem_t.xmem016, 
   xmem017 LIKE xmem_t.xmem017, 
   xmem018 LIKE xmem_t.xmem018, 
   xmem019 LIKE xmem_t.xmem019, 
   xmelstus LIKE xmel_t.xmelstus
       END RECORD
 
PRIVATE TYPE type_g_xmda8_d RECORD
       xmdo055 LIKE xmdo_t.xmdo055, 
   icab002 LIKE icab_t.icab002, 
   xmdpsite LIKE xmdp_t.xmdpsite, 
   xmdpsite_desc LIKE type_t.chr500, 
   oobx003 LIKE oobx_t.oobx003, 
   xmdpdocno LIKE xmdp_t.xmdpdocno, 
   xmdpseq LIKE xmdp_t.xmdpseq, 
   xmdp008 LIKE xmdp_t.xmdp008, 
   xmdp008_desc LIKE type_t.chr500, 
   xmdp008_desc_1 LIKE type_t.chr500, 
   xmdp009 LIKE xmdp_t.xmdp009, 
   xmdp015 LIKE xmdp_t.xmdp015, 
   xmdp015_desc LIKE type_t.chr500, 
   xmdp016 LIKE xmdp_t.xmdp016, 
   xmdp021 LIKE xmdp_t.xmdp021, 
   xmdp024 LIKE xmdp_t.xmdp024, 
   xmdp026 LIKE xmdp_t.xmdp026, 
   xmdp025 LIKE xmdp_t.xmdp025, 
   xmdostus LIKE xmdo_t.xmdostus
       END RECORD
 
PRIVATE TYPE type_g_xmda9_d RECORD
       icab002 LIKE icab_t.icab002, 
   xmdasite LIKE xmda_t.xmdasite, 
   xmdasite_8_desc LIKE type_t.chr500, 
   oobx003 LIKE oobx_t.oobx003, 
   xmdadocno LIKE xmda_t.xmdadocno, 
   xmda004 LIKE xmda_t.xmda004, 
   xmda004_8_desc LIKE type_t.chr500, 
   xmda010 LIKE xmda_t.xmda010, 
   xmda010_8_desc LIKE type_t.chr500, 
   xmda009 LIKE xmda_t.xmda009, 
   xmda009_8_desc LIKE type_t.chr500, 
   xmda011 LIKE xmda_t.xmda011, 
   xmda011_8_desc LIKE type_t.chr500, 
   xmda015 LIKE xmda_t.xmda015, 
   xmda015_8_desc LIKE type_t.chr500, 
   xmddseq LIKE xmdd_t.xmddseq, 
   xmddseq1 LIKE xmdd_t.xmddseq1, 
   xmddseq2 LIKE xmdd_t.xmddseq2, 
   xmdd001 LIKE xmdd_t.xmdd001, 
   xmdd001_8_desc LIKE type_t.chr500, 
   xmdd001_8_desc_1 LIKE type_t.chr500, 
   xmdd002 LIKE xmdd_t.xmdd002, 
   xmdd004 LIKE xmdd_t.xmdd004, 
   xmdd004_8_desc LIKE type_t.chr500, 
   xmdd006 LIKE xmdd_t.xmdd006, 
   xmdd018 LIKE xmdd_t.xmdd018, 
   xmdd028 LIKE xmdd_t.xmdd028, 
   xmdd030 LIKE xmdd_t.xmdd030, 
   xmdd029 LIKE xmdd_t.xmdd029, 
   l_xmdastus_8 LIKE type_t.chr10
       END RECORD
 
 
 
#add-point:自定義模組變數-標準(Module Variable)  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
 
#end add-point
 
#模組變數(Module Variables)
DEFINE g_xmda_d            DYNAMIC ARRAY OF type_g_xmda_d
DEFINE g_xmda_d_t          type_g_xmda_d
DEFINE g_xmda2_d     DYNAMIC ARRAY OF type_g_xmda2_d
DEFINE g_xmda2_d_t   type_g_xmda2_d
 
DEFINE g_xmda3_d     DYNAMIC ARRAY OF type_g_xmda3_d
DEFINE g_xmda3_d_t   type_g_xmda3_d
 
DEFINE g_xmda4_d     DYNAMIC ARRAY OF type_g_xmda4_d
DEFINE g_xmda4_d_t   type_g_xmda4_d
 
DEFINE g_xmda5_d     DYNAMIC ARRAY OF type_g_xmda5_d
DEFINE g_xmda5_d_t   type_g_xmda5_d
 
DEFINE g_xmda6_d     DYNAMIC ARRAY OF type_g_xmda6_d
DEFINE g_xmda6_d_t   type_g_xmda6_d
 
DEFINE g_xmda7_d     DYNAMIC ARRAY OF type_g_xmda7_d
DEFINE g_xmda7_d_t   type_g_xmda7_d
 
DEFINE g_xmda8_d     DYNAMIC ARRAY OF type_g_xmda8_d
DEFINE g_xmda8_d_t   type_g_xmda8_d
 
DEFINE g_xmda9_d     DYNAMIC ARRAY OF type_g_xmda9_d
DEFINE g_xmda9_d_t   type_g_xmda9_d
 
 
 
 
 
DEFINE g_wc                  STRING                        #儲存 user 的查詢條件
DEFINE g_wc_t                STRING                        #儲存 user 的查詢條件
DEFINE g_wc2                 STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
DEFINE g_sql                 STRING                        #組 sql 用 
DEFINE g_forupd_sql          STRING                        #SELECT ... FOR UPDATE  SQL    
DEFINE g_cnt                 LIKE type_t.num10              
DEFINE l_ac                  LIKE type_t.num10             #目前處理的ARRAY CNT 
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog     
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_current_row         LIKE type_t.num10             #目前所在筆數
DEFINE g_current_idx         LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10             #單身 總筆數(所有資料)
DEFINE g_page                STRING                        #第幾頁
DEFINE g_ch                  base.Channel                  #外串程式用
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE g_row_index           LIKE type_t.num10
DEFINE g_master_idx          LIKE type_t.num10
DEFINE g_detail_idx          LIKE type_t.num10             #單身 所在筆數(所有資料)
DEFINE g_detail_idx2         LIKE type_t.num10
DEFINE g_hyper_url           STRING                        #hyperlink的主要網址
DEFINE g_qbe_hidden          LIKE type_t.num5              #qbe頁籤折疊
DEFINE g_tot_cnt             LIKE type_t.num10             #計算總筆數
DEFINE g_num_in_page         LIKE type_t.num10             #每頁筆數
DEFINE g_page_act_list       STRING                        #分頁ACTION清單
DEFINE g_current_row_tot     LIKE type_t.num10             #目前所在總筆數
DEFINE g_page_start_num      LIKE type_t.num10             #目前頁面起始筆數
DEFINE g_page_end_num        LIKE type_t.num10             #目前頁面結束筆數
 
#多table用wc
DEFINE g_wc_table           STRING
DEFINE g_detail_page_action STRING
DEFINE g_pagestart          LIKE type_t.num10
 
DEFINE g_wc2_table2   STRING
DEFINE g_detail2_page_action2 STRING
 
DEFINE g_wc2_table3   STRING
DEFINE g_detail2_page_action3 STRING
 
DEFINE g_wc2_table4   STRING
DEFINE g_detail2_page_action4 STRING
 
DEFINE g_wc2_table5   STRING
DEFINE g_detail2_page_action5 STRING
 
DEFINE g_wc2_table6   STRING
DEFINE g_detail2_page_action6 STRING
 
DEFINE g_wc2_table7   STRING
DEFINE g_detail2_page_action7 STRING
 
DEFINE g_wc2_table8   STRING
DEFINE g_detail2_page_action8 STRING
 
 
 
DEFINE g_wc_filter_table           STRING
 
DEFINE g_wc2_filter_table2   STRING
 
DEFINE g_wc2_filter_table3   STRING
 
DEFINE g_wc2_filter_table4   STRING
 
DEFINE g_wc2_filter_table5   STRING
 
DEFINE g_wc2_filter_table6   STRING
 
DEFINE g_wc2_filter_table7   STRING
 
DEFINE g_wc2_filter_table8   STRING
 
 
 
#add-point:自定義模組變數-客製(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明 name="global.argv"

#end add-point
 
{</section>}
 
{<section id="aicq200.main" >}
 #應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("aic","")
 
   #add-point:作業初始化 name="main.init"
   
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " ", 
                      " FROM ",
                      " "
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aicq200_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT  ",
               " FROM  t0",
               
               " WHERE  "
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE aicq200_master_referesh FROM g_sql
 
   #add-point:main段define_sql name="main.body.define_sql"
   
   #end add-point 
   LET g_forupd_sql = ""
   #add-point:main段define_sql name="main.body.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aicq200_bcl CURSOR FROM g_forupd_sql
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aicq200 WITH FORM cl_ap_formpath("aic",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aicq200_init()   
 
      #進入選單 Menu (="N")
      CALL aicq200_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aicq200
      
   END IF 
   
   CLOSE aicq200_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="aicq200.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aicq200_init()
   #add-point:init段define-客製 name="init.define_customerization"
   
   #end add-point
   #add-point:init段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   DEFINE l_success         LIKE type_t.num5
   #end add-point
 
   #add-point:FUNCTION前置處理 name="init.before_function"
   
   #end add-point
 
   LET g_wc_filter   = " 1=1"
   LET g_wc_filter_t = " 1=1" 
   LET g_error_show  = 1
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
      CALL cl_set_combo_scc_part('b_xmdastus','13','N,Y,A,D,R,W,C,H,UH,X')
   CALL cl_set_combo_scc_part('b_xmdkstus','13','N,Y,S,A,D,R,W,UH,H,Z,X')
   CALL cl_set_combo_scc_part('b_xmdgstus','13','N,Y,A,D,R,W,H,UH,X')
   CALL cl_set_combo_scc_part('b_xrcastus','13','N,Y,A,D,R,W,X')
   CALL cl_set_combo_scc_part('b_pmdsstus','13','N,Y,S,A,D,R,W,X,Z')
   CALL cl_set_combo_scc_part('b_xmelstus','13','N,Y,A,D,R,W,X')
   CALL cl_set_combo_scc_part('b_xmdostus','13','N,Y,A,D,R,W,X')
 
      CALL cl_set_combo_scc('b_icaa003','2501') 
   CALL cl_set_combo_scc('b_oobx003','24') 
  
 
   #add-point:畫面資料初始化 name="init.init"
   CALL cl_set_combo_scc_part('xmdastus','13','N,Y,A,D,R,W,C,H')
   CALL cl_set_combo_scc("b_oobx003_1",'24')   
   CALL cl_set_combo_scc("b_oobx003_2",'24') 
   CALL cl_set_combo_scc("b_oobx003_3",'24')
   CALL cl_set_combo_scc("b_oobx003_4",'24')   
   CALL cl_set_combo_scc("b_oobx003_5",'24')   
   CALL cl_set_combo_scc("b_oobx003_6",'24')
   CALL cl_set_combo_scc("b_oobx003_7",'24')
   CALL cl_set_combo_scc("b_oobx003_8",'24')
  #160503-00008#1-s-add 
   CALL cl_set_combo_scc_part('l_xmdastus_1','13','N,Y,S,A,D,R,W,UN,H,Z,X')
   CALL cl_set_combo_scc_part('b_xmdkstus','13','N,Y,S,A,D,R,W,UN,H,Z,X')  
   CALL cl_set_combo_scc_part('b_xmdgstus','13','N,Y,S,A,D,R,W,UN,H,Z,X')
   CALL cl_set_combo_scc_part('b_xrcastus','13','N,Y,S,A,D,R,W,UN,H,Z,X')  
   CALL cl_set_combo_scc_part('b_pmdsstus','13','N,Y,S,A,D,R,W,UN,H,Z,X')
   CALL cl_set_combo_scc_part('b_xmelstus','13','N,Y,S,A,D,R,W,UN,H,Z,X')
   CALL cl_set_combo_scc_part('b_xmdostus','13','N,Y,S,A,D,R,W,UN,H,Z,X')    
   CALL cl_set_combo_scc_part('l_xmdastus_8','13','N,Y,S,A,D,R,W,UN,H,Z,X')
  #160503-00008#1-e-add 
   CALL aicq200_create_temp_table() RETURNING l_success
   #end add-point
 
   CALL aicq200_default_search()
END FUNCTION
 
{</section>}
 
{<section id="aicq200.default_search" >}
PRIVATE FUNCTION aicq200_default_search()
   #add-point:default_search段define-客製 name="default_search.define_customerization"
   
   #end add-point
   #add-point:default_search段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point
 
 
   #add-point:default_search段開始前 name="default_search.before"
   
   #end add-point
 
   #應用 qs27 樣板自動產生(Version:3)
   #+ 組承接外部參數時資料庫欄位對應條件(單身)
   IF NOT cl_null(g_argv[01]) THEN
      LET g_wc = g_wc, " xmdadocno = '", g_argv[01], "' AND "
   END IF
 
 
 
 
 
 
 
   IF NOT cl_null(g_wc) THEN
      LET g_wc = g_wc.subString(1,g_wc.getLength()-5)
   ELSE
      #預設查詢條件
      LET g_wc = " 1=2"
   END IF
 
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="aicq200.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION aicq200_ui_dialog() 
   #add-point:ui_dialog段define-客製 name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_exit   LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx    LIKE type_t.num10
   DEFINE ls_result STRING
   DEFINE ls_wc     STRING
   DEFINE lc_action_choice_old   STRING
   DEFINE ls_js     STRING
   DEFINE la_param  RECORD
                    prog       STRING,
                    actionid   STRING,
                    background LIKE type_t.chr1,
                    param      DYNAMIC ARRAY OF STRING
                    END RECORD
   #add-point:ui_dialog段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   
   #end add-point
   
 
   #add-point:FUNCTION前置處理 name="ui_dialog.before_function"
   
   #end add-point
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   CALL cl_get_num_in_page() RETURNING g_num_in_page
 
   LET li_exit = FALSE
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   LET g_current_idx = 1
   LET g_action_choice = " "
   LET lc_action_choice_old = ""
   LET g_current_row_tot = 0
   LET g_page_start_num = 1
   LET g_page_end_num = g_num_in_page
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   LET l_ac = 1
 
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
 
   
   CALL aicq200_b_fill()
  
   WHILE li_exit = FALSE
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_xmda_d.clear()
         CALL g_xmda2_d.clear()
 
         CALL g_xmda3_d.clear()
 
         CALL g_xmda4_d.clear()
 
         CALL g_xmda5_d.clear()
 
         CALL g_xmda6_d.clear()
 
         CALL g_xmda7_d.clear()
 
         CALL g_xmda8_d.clear()
 
         CALL g_xmda9_d.clear()
 
 
         LET g_wc  = " 1=2"
         LET g_wc2 = " 1=1"
         LET g_action_choice = ""
         LET g_detail_page_action = "detail_first"
         LET g_pagestart = 1
         LET g_current_row_tot = 0
         LET g_page_start_num = 1
         LET g_page_end_num = g_num_in_page
         LET g_detail_idx = 1
         LET g_detail_idx2 = 1
 
         CALL aicq200_init()
      END IF
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #add-point:input段落 name="ui_dialog.input"
 
         #end add-point
 
         #add-point:construct段落 name="ui_dialog.construct"
         CONSTRUCT BY NAME g_wc ON xmda031,xmdadocno,xmdadocdt,xmda050,xmda002,
                                   xmda004,xmdastus,xmda030
                                   
             ON ACTION controlp INFIELD xmda031
                INITIALIZE g_qryparam.* TO NULL
                LET g_qryparam.state = 'c'
                LET g_qryparam.reqry = FALSE
                CALL q_xmda031()                       #呼叫開窗
                DISPLAY g_qryparam.return1 TO xmda031  #顯示到畫面上
                NEXT FIELD xmda031
                
             ON ACTION controlp INFIELD xmda050
                INITIALIZE g_qryparam.* TO NULL
                LET g_qryparam.state = 'c'
                LET g_qryparam.reqry = FALSE
                CALL q_icaa001()                       #呼叫開窗
                DISPLAY g_qryparam.return1 TO xmda050  #顯示到畫面上
                NEXT FIELD xmda050
                
             ON ACTION controlp INFIELD xmdadocno
                INITIALIZE g_qryparam.* TO NULL
                LET g_qryparam.state = 'c'
                LET g_qryparam.reqry = FALSE
                CALL q_xmdadocno_12()                   #呼叫開窗
                DISPLAY g_qryparam.return1 TO xmdadocno #顯示到畫面上
                NEXT FIELD xmdadocno
                
             ON ACTION controlp INFIELD xmda004
                INITIALIZE g_qryparam.* TO NULL
                LET g_qryparam.state = 'c'
                LET g_qryparam.reqry = FALSE
                #CALL q_pmaa001()       #160909-00080#1 mark
                CALL q_pmaa001_6()     #160909-00080#1   
                DISPLAY g_qryparam.return1 TO xmda004 #顯示到畫面上
                NEXT FIELD xmda004
                
             ON ACTION controlp INFIELD xmda002
                INITIALIZE g_qryparam.* TO NULL
                LET g_qryparam.state = 'c'
                LET g_qryparam.reqry = FALSE
                CALL q_ooag001()                      #呼叫開窗
                DISPLAY g_qryparam.return1 TO xmda002 #顯示到畫面上
                NEXT FIELD xmda002
                                
             ON ACTION controlp INFIELD xmda011
                INITIALIZE g_qryparam.* TO NULL
                LET g_qryparam.state = 'c'
                LET g_qryparam.reqry = FALSE
                CALL q_oodb002_2()                    #呼叫開窗
                DISPLAY g_qryparam.return1 TO xmda011 #顯示到畫面上
                NEXT FIELD xmda011
                
         END CONSTRUCT  
         #end add-point
     
         DISPLAY ARRAY g_xmda_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt)
 
            BEFORE DISPLAY
               LET g_current_page = 1
 
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               CALL aicq200_detail_action_trans()
 
               LET g_master_idx = l_ac
               #為避免按上下筆時影響執行效能，所以做一些處理
               LET lc_action_choice_old = g_action_choice
               LET g_action_choice = "fetch"
               CALL aicq200_b_fill2()
               LET g_action_choice = lc_action_choice_old
 
               #add-point:input段before row name="input.body.before_row"
               
               #end add-point
 
            
 
            #自訂ACTION(detail_show,page_1)
            
 
            #add-point:page1自定義行為 name="ui_dialog.body.page1.action"
            
            #end add-point
 
         END DISPLAY
 
         #add-point:第一頁籤程式段mark結束用 name="ui_dialog.page1.mark.end"
         
         #end add-point
 
         DISPLAY ARRAY g_xmda2_d TO s_detail2.*
            ATTRIBUTES(COUNT=g_detail_cnt)
 
            BEFORE DISPLAY
               LET g_current_page = 2
 
            BEFORE ROW
               LET g_detail_idx2 = DIALOG.getCurrentRow("s_detail2")
               LET l_ac = g_detail_idx2
               LET g_detail_idx2 = l_ac
               DISPLAY g_detail_idx2 TO FORMONLY.idx
 
               #add-point:input段before row name="input.body2.before_row"
               
               #end add-point
 
            #自訂ACTION(detail_show,page_2)
            
 
            #add-point:page2自定義行為 name="ui_dialog.body2.action"
            
            #end add-point
 
         END DISPLAY
 
         DISPLAY ARRAY g_xmda3_d TO s_detail3.*
            ATTRIBUTES(COUNT=g_detail_cnt)
 
            BEFORE DISPLAY
               LET g_current_page = 3
 
            BEFORE ROW
               LET g_detail_idx2 = DIALOG.getCurrentRow("s_detail3")
               LET l_ac = g_detail_idx2
               LET g_detail_idx2 = l_ac
               DISPLAY g_detail_idx2 TO FORMONLY.idx
 
               #add-point:input段before row name="input.body3.before_row"
               
               #end add-point
 
            #自訂ACTION(detail_show,page_3)
            
 
            #add-point:page3自定義行為 name="ui_dialog.body3.action"
            
            #end add-point
 
         END DISPLAY
 
         DISPLAY ARRAY g_xmda4_d TO s_detail4.*
            ATTRIBUTES(COUNT=g_detail_cnt)
 
            BEFORE DISPLAY
               LET g_current_page = 4
 
            BEFORE ROW
               LET g_detail_idx2 = DIALOG.getCurrentRow("s_detail4")
               LET l_ac = g_detail_idx2
               LET g_detail_idx2 = l_ac
               DISPLAY g_detail_idx2 TO FORMONLY.idx
 
               #add-point:input段before row name="input.body4.before_row"
               
               #end add-point
 
            #自訂ACTION(detail_show,page_4)
            
 
            #add-point:page4自定義行為 name="ui_dialog.body4.action"
            
            #end add-point
 
         END DISPLAY
 
         DISPLAY ARRAY g_xmda5_d TO s_detail5.*
            ATTRIBUTES(COUNT=g_detail_cnt)
 
            BEFORE DISPLAY
               LET g_current_page = 5
 
            BEFORE ROW
               LET g_detail_idx2 = DIALOG.getCurrentRow("s_detail5")
               LET l_ac = g_detail_idx2
               LET g_detail_idx2 = l_ac
               DISPLAY g_detail_idx2 TO FORMONLY.idx
 
               #add-point:input段before row name="input.body5.before_row"
               
               #end add-point
 
            #自訂ACTION(detail_show,page_5)
            
 
            #add-point:page5自定義行為 name="ui_dialog.body5.action"
            
            #end add-point
 
         END DISPLAY
 
         DISPLAY ARRAY g_xmda6_d TO s_detail6.*
            ATTRIBUTES(COUNT=g_detail_cnt)
 
            BEFORE DISPLAY
               LET g_current_page = 6
 
            BEFORE ROW
               LET g_detail_idx2 = DIALOG.getCurrentRow("s_detail6")
               LET l_ac = g_detail_idx2
               LET g_detail_idx2 = l_ac
               DISPLAY g_detail_idx2 TO FORMONLY.idx
 
               #add-point:input段before row name="input.body6.before_row"
               
               #end add-point
 
            #自訂ACTION(detail_show,page_6)
            
 
            #add-point:page6自定義行為 name="ui_dialog.body6.action"
            
            #end add-point
 
         END DISPLAY
 
         DISPLAY ARRAY g_xmda7_d TO s_detail7.*
            ATTRIBUTES(COUNT=g_detail_cnt)
 
            BEFORE DISPLAY
               LET g_current_page = 7
 
            BEFORE ROW
               LET g_detail_idx2 = DIALOG.getCurrentRow("s_detail7")
               LET l_ac = g_detail_idx2
               LET g_detail_idx2 = l_ac
               DISPLAY g_detail_idx2 TO FORMONLY.idx
 
               #add-point:input段before row name="input.body7.before_row"
               
               #end add-point
 
            #自訂ACTION(detail_show,page_7)
            
 
            #add-point:page7自定義行為 name="ui_dialog.body7.action"
            
            #end add-point
 
         END DISPLAY
 
         DISPLAY ARRAY g_xmda8_d TO s_detail8.*
            ATTRIBUTES(COUNT=g_detail_cnt)
 
            BEFORE DISPLAY
               LET g_current_page = 8
 
            BEFORE ROW
               LET g_detail_idx2 = DIALOG.getCurrentRow("s_detail8")
               LET l_ac = g_detail_idx2
               LET g_detail_idx2 = l_ac
               DISPLAY g_detail_idx2 TO FORMONLY.idx
 
               #add-point:input段before row name="input.body8.before_row"
               
               #end add-point
 
            #自訂ACTION(detail_show,page_8)
            
 
            #add-point:page8自定義行為 name="ui_dialog.body8.action"
            
            #end add-point
 
         END DISPLAY
 
         DISPLAY ARRAY g_xmda9_d TO s_detail9.*
            ATTRIBUTES(COUNT=g_detail_cnt)
 
            BEFORE DISPLAY
               LET g_current_page = 9
 
            BEFORE ROW
               LET g_detail_idx2 = DIALOG.getCurrentRow("s_detail9")
               LET l_ac = g_detail_idx2
               LET g_detail_idx2 = l_ac
               DISPLAY g_detail_idx2 TO FORMONLY.idx
 
               #add-point:input段before row name="input.body9.before_row"
               
               #end add-point
 
            #自訂ACTION(detail_show,page_9)
            
 
            #add-point:page9自定義行為 name="ui_dialog.body9.action"
            
            #end add-point
 
         END DISPLAY
 
 
 
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         
         #end add-point
 
         BEFORE DIALOG
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL DIALOG.setSelectionMode("s_detail1", 1)
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            CALL aicq200_detail_action_trans()
 
            #add-point:ui_dialog段before dialog name="ui_dialog.bef_dialog"
 
            #end add-point
            NEXT FIELD xmda031
 
         AFTER DIALOG
            #add-point:ui_dialog段 after dialog name="ui_dialog.after_dialog"
            
            #end add-point
            
         ON ACTION exit
            LET g_action_choice="exit"
            LET INT_FLAG = FALSE
            LET li_exit = TRUE
            EXIT DIALOG 
      
         ON ACTION close
            LET INT_FLAG=FALSE
            LET li_exit = TRUE
            EXIT DIALOG
 
         ON ACTION accept
            INITIALIZE g_wc_filter TO NULL
            IF cl_null(g_wc) THEN
               LET g_wc = " 1=1"
            END IF
 
            IF NOT cl_null(g_wc2_table2) AND g_wc2_table2 <> " 1=1" THEN
               LET g_wc = g_wc, " AND ", g_wc2_table2
            END IF
 
            IF NOT cl_null(g_wc2_table3) AND g_wc2_table3 <> " 1=1" THEN
               LET g_wc = g_wc, " AND ", g_wc2_table3
            END IF
 
            IF NOT cl_null(g_wc2_table4) AND g_wc2_table4 <> " 1=1" THEN
               LET g_wc = g_wc, " AND ", g_wc2_table4
            END IF
 
            IF NOT cl_null(g_wc2_table5) AND g_wc2_table5 <> " 1=1" THEN
               LET g_wc = g_wc, " AND ", g_wc2_table5
            END IF
 
            IF NOT cl_null(g_wc2_table6) AND g_wc2_table6 <> " 1=1" THEN
               LET g_wc = g_wc, " AND ", g_wc2_table6
            END IF
 
            IF NOT cl_null(g_wc2_table7) AND g_wc2_table7 <> " 1=1" THEN
               LET g_wc = g_wc, " AND ", g_wc2_table7
            END IF
 
            IF NOT cl_null(g_wc2_table8) AND g_wc2_table8 <> " 1=1" THEN
               LET g_wc = g_wc, " AND ", g_wc2_table8
            END IF
 
 
         
            IF cl_null(g_wc2) THEN
               LET g_wc2 = " 1=1"
            END IF
 
            IF NOT cl_null(g_wc2_table2) AND g_wc2_table2 <> " 1=1" THEN
               LET g_wc2 = g_wc2, " AND ", g_wc2_table2
            END IF
 
            IF NOT cl_null(g_wc2_table3) AND g_wc2_table3 <> " 1=1" THEN
               LET g_wc2 = g_wc2, " AND ", g_wc2_table3
            END IF
 
            IF NOT cl_null(g_wc2_table4) AND g_wc2_table4 <> " 1=1" THEN
               LET g_wc2 = g_wc2, " AND ", g_wc2_table4
            END IF
 
            IF NOT cl_null(g_wc2_table5) AND g_wc2_table5 <> " 1=1" THEN
               LET g_wc2 = g_wc2, " AND ", g_wc2_table5
            END IF
 
            IF NOT cl_null(g_wc2_table6) AND g_wc2_table6 <> " 1=1" THEN
               LET g_wc2 = g_wc2, " AND ", g_wc2_table6
            END IF
 
            IF NOT cl_null(g_wc2_table7) AND g_wc2_table7 <> " 1=1" THEN
               LET g_wc2 = g_wc2, " AND ", g_wc2_table7
            END IF
 
            IF NOT cl_null(g_wc2_table8) AND g_wc2_table8 <> " 1=1" THEN
               LET g_wc2 = g_wc2, " AND ", g_wc2_table8
            END IF
 
 
 
            #add-point:ON ACTION accept name="ui_dialog.accept"
            
            #end add-point
 
            LET g_detail_idx = 1
            LET g_detail_idx2 = 1
            CALL aicq200_b_fill()
 
            IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.extend = ""
               LET g_errparam.code   = -100
               LET g_errparam.popup  = TRUE
               CALL cl_err()
            END IF
 
 
         ON ACTION agendum   # 待辦事項
            #add-point:ON ACTION agendum name="ui_dialog.agendum"
            
            #end add-point
            CALL cl_user_overview()
 
         ON ACTION exporttoexcel   #匯出excel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               CALL g_export_node.clear()
               LET g_export_node[1] = base.typeInfo.create(g_xmda_d)
               LET g_export_id[1]   = "s_detail1"
               LET g_export_node[2] = base.typeInfo.create(g_xmda2_d)
               LET g_export_id[2]   = "s_detail2"
 
               LET g_export_node[3] = base.typeInfo.create(g_xmda3_d)
               LET g_export_id[3]   = "s_detail3"
 
               LET g_export_node[4] = base.typeInfo.create(g_xmda4_d)
               LET g_export_id[4]   = "s_detail4"
 
               LET g_export_node[5] = base.typeInfo.create(g_xmda5_d)
               LET g_export_id[5]   = "s_detail5"
 
               LET g_export_node[6] = base.typeInfo.create(g_xmda6_d)
               LET g_export_id[6]   = "s_detail6"
 
               LET g_export_node[7] = base.typeInfo.create(g_xmda7_d)
               LET g_export_id[7]   = "s_detail7"
 
               LET g_export_node[8] = base.typeInfo.create(g_xmda8_d)
               LET g_export_id[8]   = "s_detail8"
 
               LET g_export_node[9] = base.typeInfo.create(g_xmda9_d)
               LET g_export_id[9]   = "s_detail9"
 
 
               #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
               
               #END add-point
               CALL cl_export_to_excel_getpage()
               CALL cl_export_to_excel()
            END IF
 
         ON ACTION datarefresh   # 重新整理
            CALL aicq200_b_fill()
 
         ON ACTION qbehidden     #qbe頁籤折疊
            IF g_qbe_hidden THEN
               CALL gfrm_curr.setElementHidden("qbe",0)
               CALL gfrm_curr.setElementImage("qbehidden","16/mainhidden.png")
               LET g_qbe_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("qbe",1)
               CALL gfrm_curr.setElementImage("qbehidden","16/worksheethidden.png")
               LET g_qbe_hidden = 1     #hidden
            END IF
 
         ON ACTION detail_first               #page first
            LET g_action_choice = "detail_first"
            LET g_detail_page_action = "detail_first"
            CALL aicq200_b_fill()
 
         ON ACTION detail_previous                #page previous
            LET g_action_choice = "detail_previous"
            LET g_detail_page_action = "detail_previous"
            CALL aicq200_b_fill()
 
         ON ACTION detail_next               #page next
            LET g_action_choice = "detail_next"
            LET g_detail_page_action = "detail_next"
            CALL aicq200_b_fill()
 
         ON ACTION detail_last               #page last
            LET g_action_choice = "detail_last"
            LET g_detail_page_action = "detail_last"
            CALL aicq200_b_fill()
 
         #應用 qs19 樣板自動產生(Version:3)
         #有關於sel欄位選取的action段落
         #選擇全部
         ON ACTION selall
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 1)
            FOR li_idx = 1 TO g_xmda_d.getLength()
               LET g_xmda_d[li_idx].sel = "Y"
            END FOR
 
            #add-point:ui_dialog段on action selall name="ui_dialog.onaction_selall"
            
            #end add-point
 
         #取消全部
         ON ACTION selnone
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 0)
            FOR li_idx = 1 TO g_xmda_d.getLength()
               LET g_xmda_d[li_idx].sel = "N"
            END FOR
 
            #add-point:ui_dialog段on action selnone name="ui_dialog.onaction_selnone"
            
            #end add-point
 
         #勾選所選資料
         ON ACTION sel
            FOR li_idx = 1 TO g_xmda_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_xmda_d[li_idx].sel = "Y"
               END IF
            END FOR
 
            #add-point:ui_dialog段on action sel name="ui_dialog.onaction_sel"
            
            #end add-point
 
         #取消所選資料
         ON ACTION unsel
            FOR li_idx = 1 TO g_xmda_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_xmda_d[li_idx].sel = "N"
               END IF
            END FOR
 
            #add-point:ui_dialog段on action unsel name="ui_dialog.onaction_unsel"
            
            #end add-point
 
 
 
 
 
         #應用 qs16 樣板自動產生(Version:3)
         ON ACTION filter
            LET g_action_choice="filter"
            CALL aicq200_filter()
            #add-point:ON ACTION filter name="menu.filter"
            
            #END add-point
            EXIT DIALOG
 
 
 
 
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               
               #add-point:ON ACTION insert name="menu.insert"
               
               #END add-point
               
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               
               #END add-point
               
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION datainfo
            LET g_action_choice="datainfo"
            IF cl_auth_chk_act("datainfo") THEN
               
               #add-point:ON ACTION datainfo name="menu.datainfo"
               
               #END add-point
               
               
            END IF
 
 
 
 
      
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
 
         #add-point:查詢方案相關ACTION設定前 name="ui_dialog.set_qbe_action_before"
         
         #end add-point
 
         ON ACTION qbeclear   # 條件清除
            CLEAR FORM
            #add-point:條件清除後 name="ui_dialog.qbeclear"
            
            #end add-point
 
         #add-point:查詢方案相關ACTION設定後 name="ui_dialog.set_qbe_action_after"
         
         #end add-point
 
      END DIALOG 
   
   END WHILE
 
END FUNCTION
 
{</section>}
 
{<section id="aicq200.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION aicq200_b_fill()
   #add-point:b_fill段define-客製 name="b_fill.define_customerization"
   
   #end add-point
   DEFINE ls_wc           STRING
   DEFINE l_pid           LIKE type_t.chr50
   DEFINE ls_sql_rank     STRING
   #add-point:b_fill段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   DEFINE l_wc            STRING
   DEFINE l_wc2           STRING
   DEFINE l_sql           STRING
   #end add-point
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   CALL g_xmda2_d.clear()   
   CALL g_xmda3_d.clear() 
   CALL g_xmda4_d.clear() 
   CALL g_xmda5_d.clear() 
   CALL g_xmda6_d.clear() 
   CALL g_xmda7_d.clear() 
   CALL g_xmda8_d.clear() 
   #end add-point
 
 
   IF cl_null(g_wc_filter) THEN
      LET g_wc_filter = " 1=1"
   END IF
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
 
   LET ls_wc = g_wc, " AND ", g_wc2, " AND ", g_wc_filter
 
   CALL g_xmda_d.clear()
   CALL g_xmda9_d.clear()
 
 
   #add-point:陣列清空 name="b_fill.array_clear"
   LET l_wc = g_wc
   LET l_wc2 = cl_replace_str(g_wc,'xmda','pmdl')
   LET l_sql = "INSERT INTO aicq200_tmp01(icaa003,oobx003,xmdadocno,xmdadocdt,xmda004, ",
               "                          xmda002,xmda031,  xmda050, xmdastus,xmda030,xmdaent) ",
               "   SELECT icaa003,'axmt500',xmdadocno,xmdadocdt,xmda004,xmda002,xmda031,xmda050,xmdastus,xmda030,xmdaent ",  
               "     FROM xmda_t  LEFT OUTER JOIN icaa_t ON xmdaent = icaaent AND xmda050 = icaa001 ",
               "    WHERE xmdaent = ",g_enterprise,
               "      AND xmdasite = '",g_site,"' ", 
               "      AND xmda006 = '2' AND ",l_wc,
               "   UNION ",  
               "   SELECT icaa003,'apmt500',pmdldocno,pmdldocdt,pmdl004,pmdl002,pmdl031,pmdl051,pmdlstus,pmdl030,pmdlent ",
               "     FROM pmdl_t LEFT OUTER JOIN icaa_t ON pmdlent = icaaent AND pmdl051 = icaa001 ",
               "    WHERE pmdlent = ",g_enterprise,
               "      AND pmdlsite = '",g_site,"' ", 
               "      AND (pmdl006 = '2' OR pmdl006 = '3') AND ",l_wc2  
   PREPARE aicq200_ins_tmp FROM l_sql
   DELETE FROM aicq200_tmp01
   EXECUTE aicq200_ins_tmp
   FREE aicq200_ins_tmp
   #end add-point
 
   LET g_cnt = l_ac
   IF g_cnt = 0 THEN
      LET g_cnt = 1
   END IF
   LET l_ac = 1
 
   # b_fill段sql組成及FOREACH撰寫
   #應用 qs04 樣板自動產生(Version:9)
   #+ b_fill段資料取得(包含sql組成及FOREACH段撰寫)
   LET ls_sql_rank = "SELECT  UNIQUE '','','',xmdadocno,xmdadocdt,xmda004,'',xmda002,'',xmda031,xmda050, 
       '',xmdastus,xmda030,'','','','','','','','','','','','','','','','','','','','','','','','','', 
       '','','','',''  ,DENSE_RANK() OVER( ORDER BY xmda_t.xmdadocno) AS RANK FROM xmda_t",
 
#table2
                     " LEFT JOIN xmdd_t ON xmddent = xmdaent AND xmdadocno = xmdddocno",
#table3
                     " LEFT JOIN xmdm_t ON xmdment = xmdaent AND xmdadocno = xmdmdocno AND  = xmdmseq AND  = xmdmseq1",
#table4
                     " LEFT JOIN xmdi_t ON xmdient = xmdaent AND xmdadocno = xmdidocno AND  = xmdiseq AND  = xmdiseq1",
#table5
                     " LEFT JOIN xrcb_t ON xrcbent = xmdaent AND xmdadocno = xrcbld AND  = xrcbdocno AND  = xrcbseq",
#table6
                     " LEFT JOIN pmdu_t ON pmduent = xmdaent AND xmdadocno = pmdudocno AND  = pmduseq AND  = pmduseq1",
#table7
                     " LEFT JOIN xmem_t ON xmement = xmdaent AND xmdadocno = xmemdocno AND  = xmemseq",
#table8
                     " LEFT JOIN xmdp_t ON xmdpent = xmdaent AND xmdadocno = xmdpdocno AND  = xmdpseq",
 
                     "",
                     " WHERE xmdaent= ? AND 1=1 AND ", ls_wc
   LET ls_sql_rank = ls_sql_rank, cl_sql_add_filter("xmda_t"),
                     " ORDER BY xmda_t.xmdadocno"
 
   #add-point:b_fill段rank_sql_after name="b_fill.rank_sql_after"
   LET ls_sql_rank = "SELECT      '',icaa003, oobx003,xmdadocno,xmdadocdt, ",
                     "       xmda004,     '', xmda002,      '',  xmda031, ",
                     "       xmda050,     '',xmdastus, xmda030 ",
                     "  FROM aicq200_tmp01 WHERE xmdaent = ? "    
   #end add-point
 
   LET g_sql = "SELECT COUNT(1) FROM (",ls_sql_rank,")"
 
   PREPARE b_fill_cnt_pre FROM g_sql  #總筆數
   EXECUTE b_fill_cnt_pre USING g_enterprise INTO g_tot_cnt
   FREE b_fill_cnt_pre
 
   #add-point:b_fill段rank_sql_after_count name="b_fill.rank_sql_after_count"
 
   #end add-point
 
   CASE g_detail_page_action
      WHEN "detail_first"
          LET g_pagestart = 1
 
      WHEN "detail_previous"
          LET g_pagestart = g_pagestart - g_num_in_page
          IF g_pagestart < 1 THEN
              LET g_pagestart = 1
          END IF
 
      WHEN "detail_next"
         LET g_pagestart = g_pagestart + g_num_in_page
         IF g_pagestart > g_tot_cnt THEN
            LET g_pagestart = g_tot_cnt - (g_tot_cnt mod g_num_in_page) + 1
            WHILE g_pagestart > g_tot_cnt
               LET g_pagestart = g_pagestart - g_num_in_page
            END WHILE
         END IF
 
      WHEN "detail_last"
         LET g_pagestart = g_tot_cnt - (g_tot_cnt mod g_num_in_page) + 1
         WHILE g_pagestart > g_tot_cnt
            LET g_pagestart = g_pagestart - g_num_in_page
         END WHILE
 
      OTHERWISE
         LET g_pagestart = 1
 
   END CASE
 
   LET g_sql = "SELECT '','','',xmdadocno,xmdadocdt,xmda004,'',xmda002,'',xmda031,xmda050,'',xmdastus, 
       xmda030,'','','','','','','','','','','','','','','','','','','','','','','','','','','','','', 
       ''",
               " FROM (",ls_sql_rank,")",
              " WHERE RANK >= ",g_pagestart,
                " AND RANK < ",g_pagestart + g_num_in_page
 
   #add-point:b_fill段sql_after name="b_fill.sql_after"
   LET g_sql = "SELECT      '',icaa003, oobx003,xmdadocno,xmdadocdt, ",
               "       xmda004,     '', xmda002,      '',  xmda031, ",
               "       xmda050,     '',xmdastus, xmda030 ",
               "  FROM aicq200_tmp01 WHERE xmdaent = ? "  
   #end add-point
 
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE aicq200_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR aicq200_pb
 
   OPEN b_fill_curs USING g_enterprise
 
   FOREACH b_fill_curs INTO g_xmda_d[l_ac].sel,g_xmda_d[l_ac].icaa003,g_xmda_d[l_ac].oobx003,g_xmda_d[l_ac].xmdadocno, 
       g_xmda_d[l_ac].xmdadocdt,g_xmda_d[l_ac].xmda004,g_xmda_d[l_ac].xmda004_desc,g_xmda_d[l_ac].xmda002, 
       g_xmda_d[l_ac].xmda002_desc,g_xmda_d[l_ac].xmda031,g_xmda_d[l_ac].xmda050,g_xmda_d[l_ac].xmda050_desc, 
       g_xmda_d[l_ac].xmdastus,g_xmda_d[l_ac].xmda030,g_xmda9_d[l_ac].icab002,g_xmda9_d[l_ac].xmdasite, 
       g_xmda9_d[l_ac].xmdasite_8_desc,g_xmda9_d[l_ac].oobx003,g_xmda9_d[l_ac].xmdadocno,g_xmda9_d[l_ac].xmda004, 
       g_xmda9_d[l_ac].xmda004_8_desc,g_xmda9_d[l_ac].xmda010,g_xmda9_d[l_ac].xmda010_8_desc,g_xmda9_d[l_ac].xmda009, 
       g_xmda9_d[l_ac].xmda009_8_desc,g_xmda9_d[l_ac].xmda011,g_xmda9_d[l_ac].xmda011_8_desc,g_xmda9_d[l_ac].xmda015, 
       g_xmda9_d[l_ac].xmda015_8_desc,g_xmda9_d[l_ac].xmddseq,g_xmda9_d[l_ac].xmddseq1,g_xmda9_d[l_ac].xmddseq2, 
       g_xmda9_d[l_ac].xmdd001,g_xmda9_d[l_ac].xmdd001_8_desc,g_xmda9_d[l_ac].xmdd001_8_desc_1,g_xmda9_d[l_ac].xmdd002, 
       g_xmda9_d[l_ac].xmdd004,g_xmda9_d[l_ac].xmdd004_8_desc,g_xmda9_d[l_ac].xmdd006,g_xmda9_d[l_ac].xmdd018, 
       g_xmda9_d[l_ac].xmdd028,g_xmda9_d[l_ac].xmdd030,g_xmda9_d[l_ac].xmdd029,g_xmda9_d[l_ac].l_xmdastus_8 
 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
 
      
 
      #add-point:b_fill段資料填充 name="b_fill.fill"
      
      #end add-point
 
      CALL aicq200_detail_show("'1'")
 
      CALL aicq200_xmda_t_mask()
 
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend =  "" 
            LET g_errparam.code   =  9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
 
         END IF
         EXIT FOREACH
      END IF
      LET l_ac = l_ac + 1
 
   END FOREACH
 
 
 
 
 
   #應用 qs05 樣板自動產生(Version:3)
   #+ b_fill段其他table資料取得(包含sql組成及資料填充)
 
 
 
 
 
 
   #add-point:b_fill段資料填充(其他單身) name="b_fill.others.fill"
   
   #end add-point
 
   CALL g_xmda_d.deleteElement(g_xmda_d.getLength())
   CALL g_xmda9_d.deleteElement(g_xmda9_d.getLength())
 
 
   #add-point:陣列長度調整 name="b_fill.array_deleteElement"
   
   #end add-point
 
   LET g_error_show = 0
 
   LET g_detail_cnt = g_xmda_d.getLength()
   LET l_ac = g_cnt
   LET g_cnt = 0
 
   #應用 qs06 樣板自動產生(Version:3)
   #+ b_fill段CURSOR釋放
   CLOSE b_fill_curs
   FREE aicq200_pb
 
 
 
 
 
 
   #調整單身index指標，避免翻頁後指到空白筆數
   CALL aicq200_detail_index_setting()
 
   #重新計算單身筆數並呈現
   CALL aicq200_detail_action_trans()
 
   LET l_ac = 1
   IF g_xmda_d.getLength() > 0 THEN
      CALL aicq200_b_fill2()
   END IF
 
      CALL aicq200_filter_show('icaa003','b_icaa003')
   CALL aicq200_filter_show('oobx003','b_oobx003')
   CALL aicq200_filter_show('xmdadocno','b_xmdadocno')
   CALL aicq200_filter_show('xmdadocdt','b_xmdadocdt')
   CALL aicq200_filter_show('xmda004','b_xmda004')
   CALL aicq200_filter_show('xmda002','b_xmda002')
   CALL aicq200_filter_show('xmda031','b_xmda031')
   CALL aicq200_filter_show('xmda050','b_xmda050')
   CALL aicq200_filter_show('xmdastus','b_xmdastus')
   CALL aicq200_filter_show('xmda030','b_xmda030')
   CALL aicq200_filter_show('icab002','b_icab002')
   CALL aicq200_filter_show('xmddsite','b_xmddsite')
   CALL aicq200_filter_show('xmdddocno','b_xmdddocno')
   CALL aicq200_filter_show('xmda010','b_xmda010')
   CALL aicq200_filter_show('xmda009','b_xmda009')
   CALL aicq200_filter_show('xmdd019','b_xmdd019')
   CALL aicq200_filter_show('xmda015','b_xmda015')
   CALL aicq200_filter_show('xmddseq','b_xmddseq')
   CALL aicq200_filter_show('xmddseq1','b_xmddseq1')
   CALL aicq200_filter_show('xmddseq2','b_xmddseq2')
   CALL aicq200_filter_show('xmdd001','b_xmdd001')
   CALL aicq200_filter_show('xmdd002','b_xmdd002')
   CALL aicq200_filter_show('xmdd004','b_xmdd004')
   CALL aicq200_filter_show('xmdd006','b_xmdd006')
   CALL aicq200_filter_show('xmdd018','b_xmdd018')
   CALL aicq200_filter_show('xmdd028','b_xmdd028')
   CALL aicq200_filter_show('xmdd030','b_xmdd030')
   CALL aicq200_filter_show('xmdd029','b_xmdd029')
   CALL aicq200_filter_show('xmdd011','b_xmdd011')
   CALL aicq200_filter_show('xmdd014','b_xmdd014')
   CALL aicq200_filter_show('xmdk035','b_xmdk035')
   CALL aicq200_filter_show('xmdmsite','b_xmdmsite')
   CALL aicq200_filter_show('xmdmdocno','b_xmdmdocno')
   CALL aicq200_filter_show('xmdk007','b_xmdk007')
   CALL aicq200_filter_show('xmdk011','b_xmdk011')
   CALL aicq200_filter_show('xmdk010','b_xmdk010')
   CALL aicq200_filter_show('xmdl025','b_xmdl025')
   CALL aicq200_filter_show('xmdk016','b_xmdk016')
   CALL aicq200_filter_show('xmdmseq','b_xmdmseq')
   CALL aicq200_filter_show('xmdmseq1','b_xmdmseq1')
   CALL aicq200_filter_show('xmdm001','b_xmdm001')
   CALL aicq200_filter_show('xmdm002','b_xmdm002')
   CALL aicq200_filter_show('xmdm008','b_xmdm008')
   CALL aicq200_filter_show('xmdm009','b_xmdm009')
   CALL aicq200_filter_show('xmdl024','b_xmdl024')
   CALL aicq200_filter_show('xmdm012','b_xmdm012')
   CALL aicq200_filter_show('xmdm013','b_xmdm013')
   CALL aicq200_filter_show('xmdkstus','b_xmdkstus')
   CALL aicq200_filter_show('xmdg055','b_xmdg055')
   CALL aicq200_filter_show('xmdisite','b_xmdisite')
   CALL aicq200_filter_show('xmdidocno','b_xmdidocno')
   CALL aicq200_filter_show('xmdg005','b_xmdg005')
   CALL aicq200_filter_show('xmdg009','b_xmdg009')
   CALL aicq200_filter_show('xmdg008','b_xmdg008')
   CALL aicq200_filter_show('xmdg014','b_xmdg014')
   CALL aicq200_filter_show('xmdiseq','b_xmdiseq')
   CALL aicq200_filter_show('xmdiseq1','b_xmdiseq1')
   CALL aicq200_filter_show('xmdi001','b_xmdi001')
   CALL aicq200_filter_show('xmdi002','b_xmdi002')
   CALL aicq200_filter_show('xmdi008','b_xmdi008')
   CALL aicq200_filter_show('xmdi009','b_xmdi009')
   CALL aicq200_filter_show('xmdgstus','b_xmdgstus')
   CALL aicq200_filter_show('xrca047','b_xrca047')
   CALL aicq200_filter_show('xrcbsite','b_xrcbsite')
   CALL aicq200_filter_show('xrcbdocno','b_xrcbdocno')
   CALL aicq200_filter_show('xrca004','b_xrca004')
   CALL aicq200_filter_show('xrca008','b_xrca008')
   CALL aicq200_filter_show('xrcb020','b_xrcb020')
   CALL aicq200_filter_show('xrca100','b_xrca100')
   CALL aicq200_filter_show('xrca101','b_xrca101')
   CALL aicq200_filter_show('xrcb105','b_xrcb105')
   CALL aicq200_filter_show('xrcb115','b_xrcb115')
   CALL aicq200_filter_show('xrcastus','b_xrcastus')
   CALL aicq200_filter_show('pmds041','b_pmds041')
   CALL aicq200_filter_show('pmdusite','b_pmdusite')
   CALL aicq200_filter_show('pmdudocno','b_pmdudocno')
   CALL aicq200_filter_show('pmds007','b_pmds007')
   CALL aicq200_filter_show('pmduseq','b_pmduseq')
   CALL aicq200_filter_show('pmduseq1','b_pmduseq1')
   CALL aicq200_filter_show('pmdu001','b_pmdu001')
   CALL aicq200_filter_show('pmdu002','b_pmdu002')
   CALL aicq200_filter_show('pmdu009','b_pmdu009')
   CALL aicq200_filter_show('pmdu010','b_pmdu010')
   CALL aicq200_filter_show('pmdu005','b_pmdu005')
   CALL aicq200_filter_show('pmdu006','b_pmdu006')
   CALL aicq200_filter_show('pmdu007','b_pmdu007')
   CALL aicq200_filter_show('pmdu008','b_pmdu008')
   CALL aicq200_filter_show('pmdt051','b_pmdt051')
   CALL aicq200_filter_show('pmdsstus','b_pmdsstus')
   CALL aicq200_filter_show('xmel017','b_xmel017')
   CALL aicq200_filter_show('xmemsite','b_xmemsite')
   CALL aicq200_filter_show('xmemdocno','b_xmemdocno')
   CALL aicq200_filter_show('xmel003','b_xmel003')
   CALL aicq200_filter_show('xmemseq','b_xmemseq')
   CALL aicq200_filter_show('xmem003','b_xmem003')
   CALL aicq200_filter_show('xmem004','b_xmem004')
   CALL aicq200_filter_show('xmem005','b_xmem005')
   CALL aicq200_filter_show('xmem006','b_xmem006')
   CALL aicq200_filter_show('xmem007','b_xmem007')
   CALL aicq200_filter_show('xmem008','b_xmem008')
   CALL aicq200_filter_show('xmem010','b_xmem010')
   CALL aicq200_filter_show('xmem011','b_xmem011')
   CALL aicq200_filter_show('xmem012','b_xmem012')
   CALL aicq200_filter_show('xmem013','b_xmem013')
   CALL aicq200_filter_show('xmem014','b_xmem014')
   CALL aicq200_filter_show('xmem015','b_xmem015')
   CALL aicq200_filter_show('xmem016','b_xmem016')
   CALL aicq200_filter_show('xmem017','b_xmem017')
   CALL aicq200_filter_show('xmem018','b_xmem018')
   CALL aicq200_filter_show('xmem019','b_xmem019')
   CALL aicq200_filter_show('xmelstus','b_xmelstus')
   CALL aicq200_filter_show('xmdo055','b_xmdo055')
   CALL aicq200_filter_show('xmdpsite','b_xmdpsite')
   CALL aicq200_filter_show('xmdpdocno','b_xmdpdocno')
   CALL aicq200_filter_show('xmdpseq','b_xmdpseq')
   CALL aicq200_filter_show('xmdp008','b_xmdp008')
   CALL aicq200_filter_show('xmdp009','b_xmdp009')
   CALL aicq200_filter_show('xmdp015','b_xmdp015')
   CALL aicq200_filter_show('xmdp016','b_xmdp016')
   CALL aicq200_filter_show('xmdp021','b_xmdp021')
   CALL aicq200_filter_show('xmdp024','b_xmdp024')
   CALL aicq200_filter_show('xmdp026','b_xmdp026')
   CALL aicq200_filter_show('xmdp025','b_xmdp025')
   CALL aicq200_filter_show('xmdostus','b_xmdostus')
 
 
END FUNCTION
 
{</section>}
 
{<section id="aicq200.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION aicq200_b_fill2()
   #add-point:b_fill2段define-客製 name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE li_ac           LIKE type_t.num10
   #add-point:b_fill2段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
 
   #add-point:FUNCTION前置處理 name="b_fill2.before_function"
   
   #end add-point
 
   LET li_ac = l_ac
 
   #單身組成
   #應用 qs07 樣板自動產生(Version:6)
   #+ b_fill2段table資料取得(包含sql組成及資料填充)
#Page2
   CALL g_xmda2_d.clear()
#Page3
   CALL g_xmda3_d.clear()
#Page4
   CALL g_xmda4_d.clear()
#Page5
   CALL g_xmda5_d.clear()
#Page6
   CALL g_xmda6_d.clear()
#Page7
   CALL g_xmda7_d.clear()
#Page8
   CALL g_xmda8_d.clear()
 
   #add-point:陣列清空 name="b_fill2.array_clear"
   CALL aicq200_b_fill3()
   RETURN
   #end add-point
 
#table2
   #為避免影響執行效能，若是按上下筆就不重組SQL
   IF g_action_choice <> "fetch" OR cl_null(g_action_choice) THEN
      LET g_sql = "SELECT  UNIQUE '',xmddsite,'','',xmdddocno,'','','','','','',xmdd019,'','','',xmddseq, 
          xmddseq1,xmddseq2,xmdd001,'','',xmdd002,xmdd004,'',xmdd006,xmdd018,xmdd028,xmdd030,xmdd029, 
          xmdd011,xmdd014,'' FROM xmdd_t",
                  "",
                  " WHERE xmddent=? AND xmdddocno=?"
  
      IF NOT cl_null(g_wc2_table2) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
      END IF
  
      LET g_sql = g_sql, " ORDER BY xmdd_t.xmddseq,xmdd_t.xmddseq1,xmdd_t.xmddseq2"
  
      #add-point:單身填充前 name="b_fill2.before_fill2"
      
      #end add-point
 
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE aicq200_pb2 FROM g_sql
      DECLARE b_fill_curs2 CURSOR FOR aicq200_pb2
   END IF
 
   OPEN b_fill_curs2 USING g_enterprise,g_xmda_d[g_detail_idx].xmdadocno
 
   LET l_ac = 1
   FOREACH b_fill_curs2 INTO g_xmda2_d[l_ac].icab002,g_xmda2_d[l_ac].xmddsite,g_xmda2_d[l_ac].xmddsite_desc, 
       g_xmda2_d[l_ac].oobx003,g_xmda2_d[l_ac].xmdddocno,g_xmda2_d[l_ac].xmda004,g_xmda2_d[l_ac].xmda004_1_desc, 
       g_xmda2_d[l_ac].xmda010,g_xmda2_d[l_ac].xmda010_desc,g_xmda2_d[l_ac].xmda009,g_xmda2_d[l_ac].xmda009_desc, 
       g_xmda2_d[l_ac].xmdd019,g_xmda2_d[l_ac].xmdd019_desc,g_xmda2_d[l_ac].xmda015,g_xmda2_d[l_ac].xmda015_desc, 
       g_xmda2_d[l_ac].xmddseq,g_xmda2_d[l_ac].xmddseq1,g_xmda2_d[l_ac].xmddseq2,g_xmda2_d[l_ac].xmdd001, 
       g_xmda2_d[l_ac].xmdd001_desc,g_xmda2_d[l_ac].xmdd001_desc_1,g_xmda2_d[l_ac].xmdd002,g_xmda2_d[l_ac].xmdd004, 
       g_xmda2_d[l_ac].xmdd004_desc,g_xmda2_d[l_ac].xmdd006,g_xmda2_d[l_ac].xmdd018,g_xmda2_d[l_ac].xmdd028, 
       g_xmda2_d[l_ac].xmdd030,g_xmda2_d[l_ac].xmdd029,g_xmda2_d[l_ac].xmdd011,g_xmda2_d[l_ac].xmdd014, 
       g_xmda2_d[l_ac].l_xmdastus_1
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
 
      
 
      #add-point:b_fill2段資料填充 name="b_fill2.fill2"
      
      #end add-point
 
      CALL aicq200_detail_show("'2'")
 
      CALL aicq200_xmdd_t_mask()
 
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend =  "" 
         LET g_errparam.code   =  9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
      LET l_ac = l_ac + 1
 
   END FOREACH
#table3
   #為避免影響執行效能，若是按上下筆就不重組SQL
   IF g_action_choice <> "fetch" OR cl_null(g_action_choice) THEN
      LET g_sql = "SELECT  UNIQUE '','',xmdmsite,'','',xmdmdocno,'','','','','','','','','','',xmdmseq, 
          xmdmseq1,xmdm001,'','',xmdm002,xmdm008,'',xmdm009,'',xmdm012,xmdm013,'' FROM xmdm_t",
                  "",
                  " WHERE"
  
      IF NOT cl_null(g_wc2_table3) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
      END IF
  
      LET g_sql = g_sql, " ORDER BY xmdm_t.xmdmdocno,xmdm_t.xmdmseq,xmdm_t.xmdmseq1"
  
      #add-point:單身填充前 name="b_fill2.before_fill3"
      
      #end add-point
 
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE aicq200_pb3 FROM g_sql
      DECLARE b_fill_curs3 CURSOR FOR aicq200_pb3
   END IF
 
   OPEN b_fill_curs3 USING g_enterprise,g_xmda_d[g_detail_idx].xmdadocno
 
   LET l_ac = 1
   FOREACH b_fill_curs3 INTO g_xmda3_d[l_ac].xmdk035,g_xmda3_d[l_ac].icab002,g_xmda3_d[l_ac].xmdmsite, 
       g_xmda3_d[l_ac].xmdmsite_desc,g_xmda3_d[l_ac].oobx003,g_xmda3_d[l_ac].xmdmdocno,g_xmda3_d[l_ac].xmdk007, 
       g_xmda3_d[l_ac].xmdk007_desc,g_xmda3_d[l_ac].xmdk011,g_xmda3_d[l_ac].xmdk011_desc,g_xmda3_d[l_ac].xmdk010, 
       g_xmda3_d[l_ac].xmdk010_desc,g_xmda3_d[l_ac].xmdl025,g_xmda3_d[l_ac].xmdl025_desc,g_xmda3_d[l_ac].xmdk016, 
       g_xmda3_d[l_ac].xmdk016_desc,g_xmda3_d[l_ac].xmdmseq,g_xmda3_d[l_ac].xmdmseq1,g_xmda3_d[l_ac].xmdm001, 
       g_xmda3_d[l_ac].xmdm001_desc,g_xmda3_d[l_ac].xmdm001_desc_1,g_xmda3_d[l_ac].xmdm002,g_xmda3_d[l_ac].xmdm008, 
       g_xmda3_d[l_ac].xmdm008_desc,g_xmda3_d[l_ac].xmdm009,g_xmda3_d[l_ac].xmdl024,g_xmda3_d[l_ac].xmdm012, 
       g_xmda3_d[l_ac].xmdm013,g_xmda3_d[l_ac].xmdkstus
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
 
      
 
      #add-point:b_fill2段資料填充 name="b_fill2.fill3"
      
      #end add-point
 
      CALL aicq200_detail_show("'3'")
 
      CALL aicq200_xmdm_t_mask()
 
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend =  "" 
         LET g_errparam.code   =  9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
      LET l_ac = l_ac + 1
 
   END FOREACH
#table4
   #為避免影響執行效能，若是按上下筆就不重組SQL
   IF g_action_choice <> "fetch" OR cl_null(g_action_choice) THEN
      LET g_sql = "SELECT  UNIQUE '','',xmdisite,'','',xmdidocno,'','','','','','','','','','',xmdiseq, 
          xmdiseq1,xmdi001,'','',xmdi002,xmdi008,'',xmdi009,'' FROM xmdi_t",
                  "",
                  " WHERE"
  
      IF NOT cl_null(g_wc2_table4) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table4 CLIPPED
      END IF
  
      LET g_sql = g_sql, " ORDER BY xmdi_t.xmdidocno,xmdi_t.xmdiseq,xmdi_t.xmdiseq1"
  
      #add-point:單身填充前 name="b_fill2.before_fill4"
      
      #end add-point
 
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE aicq200_pb4 FROM g_sql
      DECLARE b_fill_curs4 CURSOR FOR aicq200_pb4
   END IF
 
   OPEN b_fill_curs4 USING g_enterprise,g_xmda_d[g_detail_idx].xmdadocno
 
   LET l_ac = 1
   FOREACH b_fill_curs4 INTO g_xmda4_d[l_ac].xmdg055,g_xmda4_d[l_ac].icab002,g_xmda4_d[l_ac].xmdisite, 
       g_xmda4_d[l_ac].xmdisite_desc,g_xmda4_d[l_ac].oobx003,g_xmda4_d[l_ac].xmdidocno,g_xmda4_d[l_ac].xmdg005, 
       g_xmda4_d[l_ac].xmdg005_desc,g_xmda4_d[l_ac].xmdg009,g_xmda4_d[l_ac].xmdg009_desc,g_xmda4_d[l_ac].xmdg008, 
       g_xmda4_d[l_ac].xmdg008_desc,g_xmda4_d[l_ac].xmdg010,g_xmda4_d[l_ac].xmdg010_desc,g_xmda4_d[l_ac].xmdg014, 
       g_xmda4_d[l_ac].xmdg014_desc,g_xmda4_d[l_ac].xmdiseq,g_xmda4_d[l_ac].xmdiseq1,g_xmda4_d[l_ac].xmdi001, 
       g_xmda4_d[l_ac].xmdi001_desc,g_xmda4_d[l_ac].xmdi001_desc_1,g_xmda4_d[l_ac].xmdi002,g_xmda4_d[l_ac].xmdi008, 
       g_xmda4_d[l_ac].xmdi008_desc,g_xmda4_d[l_ac].xmdi009,g_xmda4_d[l_ac].xmdgstus
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
 
      
 
      #add-point:b_fill2段資料填充 name="b_fill2.fill4"
      
      #end add-point
 
      CALL aicq200_detail_show("'4'")
 
      CALL aicq200_xmdi_t_mask()
 
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend =  "" 
         LET g_errparam.code   =  9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
      LET l_ac = l_ac + 1
 
   END FOREACH
#table5
   #為避免影響執行效能，若是按上下筆就不重組SQL
   IF g_action_choice <> "fetch" OR cl_null(g_action_choice) THEN
      LET g_sql = "SELECT  UNIQUE '','',xrcbsite,'','',xrcbdocno,'','','','',xrcb020,'','','','',xrcb105, 
          xrcb115,'' FROM xrcb_t",
                  "",
                  " WHERE"
  
      IF NOT cl_null(g_wc2_table5) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table5 CLIPPED
      END IF
  
      LET g_sql = g_sql, " ORDER BY xrcb_t.xrcbld,xrcb_t.xrcbdocno,xrcb_t.xrcbseq"
  
      #add-point:單身填充前 name="b_fill2.before_fill5"
      
      #end add-point
 
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE aicq200_pb5 FROM g_sql
      DECLARE b_fill_curs5 CURSOR FOR aicq200_pb5
   END IF
 
   OPEN b_fill_curs5 USING g_enterprise,g_xmda_d[g_detail_idx].xmdadocno
 
   LET l_ac = 1
   FOREACH b_fill_curs5 INTO g_xmda5_d[l_ac].xrca047,g_xmda5_d[l_ac].icab002,g_xmda5_d[l_ac].xrcbsite, 
       g_xmda5_d[l_ac].xrcbsite_desc,g_xmda5_d[l_ac].oobx003,g_xmda5_d[l_ac].xrcbdocno,g_xmda5_d[l_ac].xrca004, 
       g_xmda5_d[l_ac].xrca004_desc,g_xmda5_d[l_ac].xrca008,g_xmda5_d[l_ac].xrca008_desc,g_xmda5_d[l_ac].xrcb020, 
       g_xmda5_d[l_ac].xrcb020_desc,g_xmda5_d[l_ac].xrca100,g_xmda5_d[l_ac].xrca100_desc,g_xmda5_d[l_ac].xrca101, 
       g_xmda5_d[l_ac].xrcb105,g_xmda5_d[l_ac].xrcb115,g_xmda5_d[l_ac].xrcastus
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
 
      
 
      #add-point:b_fill2段資料填充 name="b_fill2.fill5"
      
      #end add-point
 
      CALL aicq200_detail_show("'5'")
 
      CALL aicq200_xrcb_t_mask()
 
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend =  "" 
         LET g_errparam.code   =  9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
      LET l_ac = l_ac + 1
 
   END FOREACH
#table6
   #為避免影響執行效能，若是按上下筆就不重組SQL
   IF g_action_choice <> "fetch" OR cl_null(g_action_choice) THEN
      LET g_sql = "SELECT  UNIQUE '','',pmdusite,'','',pmdudocno,'','',pmduseq,pmduseq1,pmdu001,'','', 
          pmdu002,pmdu009,'',pmdu010,pmdu005,pmdu006,'',pmdu007,'',pmdu008,'','','' FROM pmdu_t",
                  "",
                  " WHERE"
  
      IF NOT cl_null(g_wc2_table6) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table6 CLIPPED
      END IF
  
      LET g_sql = g_sql, " ORDER BY pmdu_t.pmdudocno,pmdu_t.pmduseq,pmdu_t.pmduseq1"
  
      #add-point:單身填充前 name="b_fill2.before_fill6"
      
      #end add-point
 
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE aicq200_pb6 FROM g_sql
      DECLARE b_fill_curs6 CURSOR FOR aicq200_pb6
   END IF
 
   OPEN b_fill_curs6 USING g_enterprise,g_xmda_d[g_detail_idx].xmdadocno
 
   LET l_ac = 1
   FOREACH b_fill_curs6 INTO g_xmda6_d[l_ac].pmds041,g_xmda6_d[l_ac].icab002,g_xmda6_d[l_ac].pmdusite, 
       g_xmda6_d[l_ac].pmdusite_desc,g_xmda6_d[l_ac].oobx003,g_xmda6_d[l_ac].pmdudocno,g_xmda6_d[l_ac].pmds007, 
       g_xmda6_d[l_ac].pmds007_desc,g_xmda6_d[l_ac].pmduseq,g_xmda6_d[l_ac].pmduseq1,g_xmda6_d[l_ac].pmdu001, 
       g_xmda6_d[l_ac].pmdu001_desc,g_xmda6_d[l_ac].pmdu001_desc_1,g_xmda6_d[l_ac].pmdu002,g_xmda6_d[l_ac].pmdu009, 
       g_xmda6_d[l_ac].pmdu009_desc,g_xmda6_d[l_ac].pmdu010,g_xmda6_d[l_ac].pmdu005,g_xmda6_d[l_ac].pmdu006, 
       g_xmda6_d[l_ac].pmdu006_desc,g_xmda6_d[l_ac].pmdu007,g_xmda6_d[l_ac].pmdu007_desc,g_xmda6_d[l_ac].pmdu008, 
       g_xmda6_d[l_ac].pmdt051,g_xmda6_d[l_ac].pmdt051_desc,g_xmda6_d[l_ac].pmdsstus
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
 
      
 
      #add-point:b_fill2段資料填充 name="b_fill2.fill6"
      
      #end add-point
 
      CALL aicq200_detail_show("'6'")
 
      CALL aicq200_pmdu_t_mask()
 
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend =  "" 
         LET g_errparam.code   =  9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
      LET l_ac = l_ac + 1
 
   END FOREACH
#table7
   #為避免影響執行效能，若是按上下筆就不重組SQL
   IF g_action_choice <> "fetch" OR cl_null(g_action_choice) THEN
      LET g_sql = "SELECT  UNIQUE '','',xmemsite,'','',xmemdocno,'','',xmemseq,xmem003,'','',xmem004, 
          xmem005,'',xmem006,xmem007,xmem008,xmem010,xmem011,xmem012,xmem013,'',xmem014,xmem015,xmem016, 
          xmem017,xmem018,xmem019,'' FROM xmem_t",
                  "",
                  " WHERE"
  
      IF NOT cl_null(g_wc2_table7) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table7 CLIPPED
      END IF
  
      LET g_sql = g_sql, " ORDER BY xmem_t.xmemdocno,xmem_t.xmemseq"
  
      #add-point:單身填充前 name="b_fill2.before_fill7"
      
      #end add-point
 
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE aicq200_pb7 FROM g_sql
      DECLARE b_fill_curs7 CURSOR FOR aicq200_pb7
   END IF
 
   OPEN b_fill_curs7 USING g_enterprise,g_xmda_d[g_detail_idx].xmdadocno
 
   LET l_ac = 1
   FOREACH b_fill_curs7 INTO g_xmda7_d[l_ac].xmel017,g_xmda7_d[l_ac].icab002,g_xmda7_d[l_ac].xmemsite, 
       g_xmda7_d[l_ac].xmemsite_desc,g_xmda7_d[l_ac].oobx003,g_xmda7_d[l_ac].xmemdocno,g_xmda7_d[l_ac].xmel003, 
       g_xmda7_d[l_ac].xmel003_desc,g_xmda7_d[l_ac].xmemseq,g_xmda7_d[l_ac].xmem003,g_xmda7_d[l_ac].xmem003_desc, 
       g_xmda7_d[l_ac].xmem003_desc_1,g_xmda7_d[l_ac].xmem004,g_xmda7_d[l_ac].xmem005,g_xmda7_d[l_ac].xmem005_desc, 
       g_xmda7_d[l_ac].xmem006,g_xmda7_d[l_ac].xmem007,g_xmda7_d[l_ac].xmem008,g_xmda7_d[l_ac].xmem010, 
       g_xmda7_d[l_ac].xmem011,g_xmda7_d[l_ac].xmem012,g_xmda7_d[l_ac].xmem013,g_xmda7_d[l_ac].xmem013_desc, 
       g_xmda7_d[l_ac].xmem014,g_xmda7_d[l_ac].xmem015,g_xmda7_d[l_ac].xmem016,g_xmda7_d[l_ac].xmem017, 
       g_xmda7_d[l_ac].xmem018,g_xmda7_d[l_ac].xmem019,g_xmda7_d[l_ac].xmelstus
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
 
      
 
      #add-point:b_fill2段資料填充 name="b_fill2.fill7"
      
      #end add-point
 
      CALL aicq200_detail_show("'7'")
 
      CALL aicq200_xmem_t_mask()
 
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend =  "" 
         LET g_errparam.code   =  9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
      LET l_ac = l_ac + 1
 
   END FOREACH
#table8
   #為避免影響執行效能，若是按上下筆就不重組SQL
   IF g_action_choice <> "fetch" OR cl_null(g_action_choice) THEN
      LET g_sql = "SELECT  UNIQUE '','',xmdpsite,'','',xmdpdocno,xmdpseq,xmdp008,'','',xmdp009,xmdp015, 
          '',xmdp016,xmdp021,xmdp024,xmdp026,xmdp025,'' FROM xmdp_t",
                  "",
                  " WHERE"
  
      IF NOT cl_null(g_wc2_table8) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table8 CLIPPED
      END IF
  
      LET g_sql = g_sql, " ORDER BY xmdp_t.xmdpdocno,xmdp_t.xmdpseq"
  
      #add-point:單身填充前 name="b_fill2.before_fill8"
      
      #end add-point
 
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE aicq200_pb8 FROM g_sql
      DECLARE b_fill_curs8 CURSOR FOR aicq200_pb8
   END IF
 
   OPEN b_fill_curs8 USING g_enterprise,g_xmda_d[g_detail_idx].xmdadocno
 
   LET l_ac = 1
   FOREACH b_fill_curs8 INTO g_xmda8_d[l_ac].xmdo055,g_xmda8_d[l_ac].icab002,g_xmda8_d[l_ac].xmdpsite, 
       g_xmda8_d[l_ac].xmdpsite_desc,g_xmda8_d[l_ac].oobx003,g_xmda8_d[l_ac].xmdpdocno,g_xmda8_d[l_ac].xmdpseq, 
       g_xmda8_d[l_ac].xmdp008,g_xmda8_d[l_ac].xmdp008_desc,g_xmda8_d[l_ac].xmdp008_desc_1,g_xmda8_d[l_ac].xmdp009, 
       g_xmda8_d[l_ac].xmdp015,g_xmda8_d[l_ac].xmdp015_desc,g_xmda8_d[l_ac].xmdp016,g_xmda8_d[l_ac].xmdp021, 
       g_xmda8_d[l_ac].xmdp024,g_xmda8_d[l_ac].xmdp026,g_xmda8_d[l_ac].xmdp025,g_xmda8_d[l_ac].xmdostus 
 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
 
      
 
      #add-point:b_fill2段資料填充 name="b_fill2.fill8"
      
      #end add-point
 
      CALL aicq200_detail_show("'8'")
 
      CALL aicq200_xmdp_t_mask()
 
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend =  "" 
         LET g_errparam.code   =  9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
      LET l_ac = l_ac + 1
 
   END FOREACH
 
 
#Page2
   CALL g_xmda2_d.deleteElement(g_xmda2_d.getLength())
#Page3
   CALL g_xmda3_d.deleteElement(g_xmda3_d.getLength())
#Page4
   CALL g_xmda4_d.deleteElement(g_xmda4_d.getLength())
#Page5
   CALL g_xmda5_d.deleteElement(g_xmda5_d.getLength())
#Page6
   CALL g_xmda6_d.deleteElement(g_xmda6_d.getLength())
#Page7
   CALL g_xmda7_d.deleteElement(g_xmda7_d.getLength())
#Page8
   CALL g_xmda8_d.deleteElement(g_xmda8_d.getLength())
 
   #add-point:陣列長度調整 name="b_fill2.array_deleteElement"
   
   #end add-point
 
#Page2
   LET li_ac = g_xmda2_d.getLength()
#Page3
   LET li_ac = g_xmda3_d.getLength()
#Page4
   LET li_ac = g_xmda4_d.getLength()
#Page5
   LET li_ac = g_xmda5_d.getLength()
#Page6
   LET li_ac = g_xmda6_d.getLength()
#Page7
   LET li_ac = g_xmda7_d.getLength()
#Page8
   LET li_ac = g_xmda8_d.getLength()
 
   DISPLAY li_ac TO FORMONLY.cnt
   LET g_detail_idx2 = 1
   DISPLAY g_detail_idx2 TO FORMONLY.idx
 
 
 
 
 
   #add-point:單身填充後 name="b_fill2.after_fill"
   
   #end add-point
 
   LET l_ac = li_ac
 
END FUNCTION
 
{</section>}
 
{<section id="aicq200.detail_show" >}
#+ 顯示相關資料
PRIVATE FUNCTION aicq200_detail_show(ps_page)
   #add-point:show段define-客製 name="detail_show.define_customerization"
   
   #end add-point
   DEFINE ps_page    STRING
   DEFINE ls_sql     STRING
   #add-point:show段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   DEFINE l_gzcb004     LIKE gzcb_t.gzcb004
   #end add-point
 
   #add-point:detail_show段之前 name="detail_show.before"
   
   #end add-point
 
   
 
   #讀入ref值
   IF ps_page.getIndexOf("'1'",1) > 0 THEN
      #帶出公用欄位reference值page1
      #應用 a12 樣板自動產生(Version:4)
 
 
 
 
      #add-point:show段單身reference name="detail_show.body.reference"
      CALL s_desc_get_trading_partner_abbr_desc(g_xmda_d[l_ac].xmda004) RETURNING g_xmda_d[l_ac].xmda004_desc
      DISPLAY BY NAME g_xmda_d[l_ac].xmda004_desc

      CALL s_desc_get_person_desc(g_xmda_d[l_ac].xmda002) RETURNING g_xmda_d[l_ac].xmda002_desc
      DISPLAY BY NAME g_xmda_d[l_ac].xmda002_desc
     
      CALL s_desc_get_icaa001_desc(g_xmda_d[l_ac].xmda050) RETURNING g_xmda_d[l_ac].xmda050_desc
      DISPLAY BY NAME g_xmda_d[l_ac].xmda050_desc
      #end add-point
   END IF
 
   IF ps_page.getIndexOf("'2'",1) > 0 THEN
      #帶出公用欄位reference值page2
      
 
      #add-point:show段單身reference name="detail_show.body2.reference"
      #據點
      CALL s_desc_get_department_desc(g_xmda2_d[l_ac].xmddsite) RETURNING g_xmda2_d[l_ac].xmddsite_desc
      DISPLAY BY NAME g_xmda2_d[l_ac].xmddsite_desc
      #交易對象
      CALL s_desc_get_trading_partner_abbr_desc(g_xmda2_d[l_ac].xmda004) RETURNING g_xmda2_d[l_ac].xmda004_1_desc
      DISPLAY BY NAME g_xmda2_d[l_ac].xmda004_1_desc
      #交易條件
      CALL s_desc_get_acc_desc('238',g_xmda2_d[l_ac].xmda010) RETURNING g_xmda2_d[l_ac].xmda010_desc
      DISPLAY BY NAME g_xmda2_d[l_ac].xmda010_desc
      #收/付款條件
      CALL s_desc_get_ooib002_desc(g_xmda2_d[l_ac].xmda009) RETURNING g_xmda2_d[l_ac].xmda009_desc
      DISPLAY BY NAME g_xmda2_d[l_ac].xmda009_desc
      #稅別
      CALL s_desc_get_tax_desc1(g_xmda2_d[l_ac].xmddsite,g_xmda2_d[l_ac].xmdd019) RETURNING g_xmda2_d[l_ac].xmdd019_desc
      DISPLAY BY NAME g_xmda2_d[l_ac].xmdd019_desc
      #幣別
      CALL s_desc_get_currency_desc(g_xmda2_d[l_ac].xmda015) RETURNING g_xmda2_d[l_ac].xmda015_desc
      DISPLAY BY NAME g_xmda2_d[l_ac].xmda015_desc
      #品名、規格      
      CALL s_desc_get_item_desc(g_xmda2_d[l_ac].xmdd001)
        RETURNING g_xmda2_d[l_ac].xmdd001_desc,g_xmda2_d[l_ac].xmdd001_desc_1
      DISPLAY BY NAME g_xmda2_d[l_ac].xmdd001_desc,g_xmda2_d[l_ac].xmdd001_desc_1
      #單位
      CALL s_desc_get_unit_desc(g_xmda2_d[l_ac].xmdd004) RETURNING g_xmda2_d[l_ac].xmdd004_desc
      DISPLAY BY NAME g_xmda2_d[l_ac].xmdd004_desc
      

      #end add-point
   END IF
 
   IF ps_page.getIndexOf("'3'",1) > 0 THEN
      #帶出公用欄位reference值page3
      
 
      #add-point:show段單身reference name="detail_show.body3.reference"
      #據點
      CALL s_desc_get_department_desc(g_xmda3_d[l_ac].xmdmsite) RETURNING g_xmda3_d[l_ac].xmdmsite_desc
      DISPLAY BY NAME g_xmda3_d[l_ac].xmdmsite_desc
      #交易對象
      CALL s_desc_get_trading_partner_abbr_desc(g_xmda3_d[l_ac].xmdk007) RETURNING g_xmda3_d[l_ac].xmdk007_desc
      DISPLAY BY NAME g_xmda3_d[l_ac].xmdk007_desc
      #交易條件
      CALL s_desc_get_acc_desc('238',g_xmda3_d[l_ac].xmdk011) RETURNING g_xmda3_d[l_ac].xmdk011_desc
      DISPLAY BY NAME g_xmda3_d[l_ac].xmdk011_desc
      #收/付款條件
      CALL s_desc_get_ooib002_desc(g_xmda3_d[l_ac].xmdk010) RETURNING g_xmda3_d[l_ac].xmdk010_desc
      DISPLAY BY NAME g_xmda3_d[l_ac].xmdk010_desc
      #稅別
      CALL s_desc_get_tax_desc1(g_xmda3_d[l_ac].xmdmsite,g_xmda3_d[l_ac].xmdl025) RETURNING g_xmda3_d[l_ac].xmdl025_desc
      DISPLAY BY NAME g_xmda3_d[l_ac].xmdl025_desc
      #幣別
      CALL s_desc_get_currency_desc(g_xmda3_d[l_ac].xmdk016) RETURNING g_xmda3_d[l_ac].xmdk016_desc
      DISPLAY BY NAME g_xmda3_d[l_ac].xmdk016_desc
      #品名、規格      
      CALL s_desc_get_item_desc(g_xmda3_d[l_ac].xmdm001)
        RETURNING g_xmda3_d[l_ac].xmdm001_desc,g_xmda3_d[l_ac].xmdm001_desc_1
      DISPLAY BY NAME g_xmda3_d[l_ac].xmdm001_desc,g_xmda3_d[l_ac].xmdm001_desc_1
      #單位
      CALL s_desc_get_unit_desc(g_xmda3_d[l_ac].xmdm008) RETURNING g_xmda3_d[l_ac].xmdm008_desc
      DISPLAY BY NAME g_xmda3_d[l_ac].xmdm008_desc
      #end add-point
   END IF
 
   IF ps_page.getIndexOf("'4'",1) > 0 THEN
      #帶出公用欄位reference值page4
      
 
      #add-point:show段單身reference name="detail_show.body4.reference"
      #據點
      CALL s_desc_get_department_desc(g_xmda4_d[l_ac].xmdisite) RETURNING g_xmda4_d[l_ac].xmdisite_desc
      DISPLAY BY NAME g_xmda4_d[l_ac].xmdisite_desc
      #交易對象
      CALL s_desc_get_trading_partner_abbr_desc(g_xmda4_d[l_ac].xmdg005) RETURNING g_xmda4_d[l_ac].xmdg005_desc
      DISPLAY BY NAME g_xmda4_d[l_ac].xmdg005_desc
      #交易條件
      CALL s_desc_get_acc_desc('238',g_xmda4_d[l_ac].xmdg009) RETURNING g_xmda4_d[l_ac].xmdg009_desc
      DISPLAY BY NAME g_xmda4_d[l_ac].xmdg009_desc
      #收/付款條件
      CALL s_desc_get_ooib002_desc(g_xmda4_d[l_ac].xmdg008) RETURNING g_xmda4_d[l_ac].xmdg008_desc
      DISPLAY BY NAME g_xmda4_d[l_ac].xmdg008_desc
      #稅別
      CALL s_desc_get_tax_desc1(g_xmda4_d[l_ac].xmdisite,g_xmda4_d[l_ac].xmdg010) RETURNING g_xmda4_d[l_ac].xmdg010_desc
      DISPLAY BY NAME g_xmda4_d[l_ac].xmdg010_desc
      #幣別
      CALL s_desc_get_currency_desc(g_xmda4_d[l_ac].xmdg014) RETURNING g_xmda4_d[l_ac].xmdg014_desc
      DISPLAY BY NAME g_xmda4_d[l_ac].xmdg014_desc
      #品名、規格      
      CALL s_desc_get_item_desc(g_xmda4_d[l_ac].xmdi001)
        RETURNING g_xmda4_d[l_ac].xmdi001_desc,g_xmda4_d[l_ac].xmdi001_desc_1
      DISPLAY BY NAME g_xmda4_d[l_ac].xmdi001_desc,g_xmda4_d[l_ac].xmdi001_desc_1
      #單位
      CALL s_desc_get_unit_desc(g_xmda4_d[l_ac].xmdi008) RETURNING g_xmda4_d[l_ac].xmdi008_desc
      DISPLAY BY NAME g_xmda4_d[l_ac].xmdi008_desc

      #end add-point
   END IF
 
   IF ps_page.getIndexOf("'5'",1) > 0 THEN
      #帶出公用欄位reference值page5
      
 
      #add-point:show段單身reference name="detail_show.body5.reference"
      #據點
      CALL s_desc_get_department_desc(g_xmda5_d[l_ac].xrcbsite) RETURNING g_xmda5_d[l_ac].xrcbsite_desc
      DISPLAY BY NAME g_xmda5_d[l_ac].xrcbsite_desc
      #交易對象
      CALL s_desc_get_trading_partner_abbr_desc(g_xmda5_d[l_ac].xrca004) RETURNING g_xmda5_d[l_ac].xrca004_desc
      DISPLAY BY NAME g_xmda5_d[l_ac].xrca004_desc
      #收/付款條件
      CALL s_desc_get_ooib002_desc(g_xmda5_d[l_ac].xrca008) RETURNING g_xmda5_d[l_ac].xrca008_desc
      DISPLAY BY NAME g_xmda5_d[l_ac].xrca008_desc
      #稅別
      CALL s_desc_get_tax_desc1(g_xmda5_d[l_ac].xrcbsite,g_xmda5_d[l_ac].xrcb020) RETURNING g_xmda5_d[l_ac].xrcb020_desc
      DISPLAY BY NAME g_xmda5_d[l_ac].xrcb020_desc
      #幣別
      CALL s_desc_get_currency_desc(g_xmda5_d[l_ac].xrca100) RETURNING g_xmda5_d[l_ac].xrca100_desc
      DISPLAY BY NAME g_xmda5_d[l_ac].xrca100_desc
      #end add-point
   END IF
 
   IF ps_page.getIndexOf("'6'",1) > 0 THEN
      #帶出公用欄位reference值page6
      
 
      #add-point:show段單身reference name="detail_show.body6.reference"
      #據點
      CALL s_desc_get_department_desc(g_xmda6_d[l_ac].pmdusite) RETURNING g_xmda6_d[l_ac].pmdusite_desc
      DISPLAY BY NAME g_xmda6_d[l_ac].pmdusite_desc
      #交易對象
      CALL s_desc_get_trading_partner_abbr_desc(g_xmda6_d[l_ac].pmds007) RETURNING g_xmda6_d[l_ac].pmds007_desc
      DISPLAY BY NAME g_xmda6_d[l_ac].pmds007_desc
      #品名、規格      
      CALL s_desc_get_item_desc(g_xmda6_d[l_ac].pmdu001)
        RETURNING g_xmda6_d[l_ac].pmdu001_desc,g_xmda6_d[l_ac].pmdu001_desc_1
      DISPLAY BY NAME g_xmda6_d[l_ac].pmdu001_desc,g_xmda6_d[l_ac].pmdu001_desc_1
      #單位
      CALL s_desc_get_unit_desc(g_xmda6_d[l_ac].pmdu009) RETURNING g_xmda6_d[l_ac].pmdu009_desc
      DISPLAY BY NAME g_xmda6_d[l_ac].pmdu009_desc
      #庫位
      CALL s_desc_get_stock_desc(g_xmda3_d[l_ac].xmdmsite,g_xmda6_d[l_ac].pmdu006) RETURNING g_xmda6_d[l_ac].pmdu006_desc
      DISPLAY BY NAME g_xmda6_d[l_ac].pmdu006_desc      
      #儲位
      CALL s_desc_get_locator_desc(g_xmda3_d[l_ac].xmdmsite,g_xmda6_d[l_ac].pmdu006,g_xmda6_d[l_ac].pmdu007) RETURNING g_xmda6_d[l_ac].pmdu007_desc
      DISPLAY BY NAME g_xmda6_d[l_ac].pmdu007_desc      
      #退貨原因
      #SELECT gzcb004 INTO l_gzcb004  FROM gzcb_t  WHERE gzcb001 = '24'  AND gzcb002 = g_xmda6_d[l_ac].oobx003   #160816-00001#3  mark
         
      LET l_gzcb004 = s_fin_get_scc_value('24',g_xmda6_d[l_ac].oobx003,'2')  #160816-00001#3  Add
         
      CALL s_desc_get_acc_desc(l_gzcb004,g_xmda6_d[l_ac].pmdt051) RETURNING g_xmda6_d[l_ac].pmdt051_desc
      DISPLAY BY NAME g_xmda6_d[l_ac].pmdt051_desc      
      #end add-point
   END IF
 
   IF ps_page.getIndexOf("'7'",1) > 0 THEN
      #帶出公用欄位reference值page7
      
 
      #add-point:show段單身reference name="detail_show.body7.reference"
      #據點
      CALL s_desc_get_department_desc(g_xmda7_d[l_ac].xmemsite) RETURNING g_xmda7_d[l_ac].xmemsite_desc
      DISPLAY BY NAME g_xmda7_d[l_ac].xmemsite_desc
      #交易對象
      CALL s_desc_get_trading_partner_abbr_desc(g_xmda7_d[l_ac].xmel003) RETURNING g_xmda7_d[l_ac].xmel003_desc
      DISPLAY BY NAME g_xmda7_d[l_ac].xmel003_desc
      #品名、規格      
      CALL s_desc_get_item_desc(g_xmda7_d[l_ac].xmem003)
        RETURNING g_xmda7_d[l_ac].xmem003_desc,g_xmda7_d[l_ac].xmem003_desc_1
      DISPLAY BY NAME g_xmda7_d[l_ac].xmem003_desc,g_xmda7_d[l_ac].xmem003_desc_1
      #單位
      CALL s_desc_get_unit_desc(g_xmda7_d[l_ac].xmem013) RETURNING g_xmda7_d[l_ac].xmem013_desc
      DISPLAY BY NAME g_xmda7_d[l_ac].xmem013_desc
      
      #包裝方式
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_xmda7_d[l_ac].xmem005
      CALL ap_ref_array2(g_ref_fields,"SELECT xmaml003 FROM xmaml_t WHERE xmamlent='"||g_enterprise||"' AND xmaml001=? AND xmaml002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_xmda7_d[l_ac].xmem005_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_xmda7_d[l_ac].xmem005_desc      

      #end add-point
   END IF
 
   IF ps_page.getIndexOf("'8'",1) > 0 THEN
      #帶出公用欄位reference值page8
      
 
      #add-point:show段單身reference name="detail_show.body8.reference"
      #據點
      CALL s_desc_get_department_desc(g_xmda8_d[l_ac].xmdpsite) RETURNING g_xmda8_d[l_ac].xmdpsite_desc
      DISPLAY BY NAME g_xmda8_d[l_ac].xmdpsite_desc

      #品名、規格      
      CALL s_desc_get_item_desc(g_xmda8_d[l_ac].xmdp008)
        RETURNING g_xmda8_d[l_ac].xmdp008_desc,g_xmda8_d[l_ac].xmdp008_desc_1
      DISPLAY BY NAME g_xmda8_d[l_ac].xmdp008_desc,g_xmda8_d[l_ac].xmdp008_desc_1
      #單位
      CALL s_desc_get_unit_desc(g_xmda8_d[l_ac].xmdp015) RETURNING g_xmda8_d[l_ac].xmdp015_desc
      DISPLAY BY NAME g_xmda8_d[l_ac].xmdp015_desc  

      #end add-point
   END IF
 
   IF ps_page.getIndexOf("'9'",1) > 0 THEN
      #帶出公用欄位reference值page9
      
 
      #add-point:show段單身reference name="detail_show.body9.reference"
      #據點
      CALL s_desc_get_department_desc(g_xmda9_d[l_ac].xmdasite) RETURNING g_xmda9_d[l_ac].xmdasite_8_desc
      DISPLAY BY NAME g_xmda9_d[l_ac].xmdasite_8_desc
      #交易對象
      CALL s_desc_get_trading_partner_abbr_desc(g_xmda9_d[l_ac].xmda004) RETURNING g_xmda9_d[l_ac].xmda004_8_desc
      DISPLAY BY NAME g_xmda9_d[l_ac].xmda004_8_desc
      #交易條件
      CALL s_desc_get_acc_desc('238',g_xmda9_d[l_ac].xmda010) RETURNING g_xmda9_d[l_ac].xmda010_8_desc
      DISPLAY BY NAME g_xmda9_d[l_ac].xmda010_8_desc
      #收/付款條件
      CALL s_desc_get_ooib002_desc(g_xmda9_d[l_ac].xmda009) RETURNING g_xmda9_d[l_ac].xmda009_8_desc
      DISPLAY BY NAME g_xmda9_d[l_ac].xmda009_8_desc
      #稅別
      CALL s_desc_get_tax_desc1(g_xmda9_d[l_ac].xmdasite,g_xmda9_d[l_ac].xmda011) RETURNING g_xmda9_d[l_ac].xmda011_8_desc
      DISPLAY BY NAME g_xmda9_d[l_ac].xmda011_8_desc
      #幣別
      CALL s_desc_get_currency_desc(g_xmda9_d[l_ac].xmda015) RETURNING g_xmda9_d[l_ac].xmda015_8_desc
      DISPLAY BY NAME g_xmda9_d[l_ac].xmda015_8_desc
      #品名、規格      
      CALL s_desc_get_item_desc(g_xmda9_d[l_ac].xmdd001)
        RETURNING g_xmda9_d[l_ac].xmdd001_8_desc,g_xmda9_d[l_ac].xmdd001_8_desc_1
      DISPLAY BY NAME g_xmda9_d[l_ac].xmdd001_8_desc,g_xmda9_d[l_ac].xmdd001_8_desc_1
      #單位
      CALL s_desc_get_unit_desc(g_xmda9_d[l_ac].xmdd004) RETURNING g_xmda9_d[l_ac].xmdd004_8_desc
      DISPLAY BY NAME g_xmda9_d[l_ac].xmdd004_8_desc   
      #end add-point
   END IF
 
 
 
   #add-point:detail_show段之後 name="detail_show.after"
   
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="aicq200.filter" >}
#應用 qs13 樣板自動產生(Version:8)
#+ filter段相關程式段
#+ filter過濾功能
PRIVATE FUNCTION aicq200_filter()
   #add-point:filter段define-客製 name="filter.define_customerization"
   
   #end add-point
   DEFINE  ls_result   STRING
   #add-point:filter段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   
   #end add-point
 
   #add-point:FUNCTION前置處理 name="filter.before_function"
   
   #end add-point
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
 
   CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
   CALL gfrm_curr.setFieldHidden("formonly.b_statepic", TRUE)
 
   
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   #應用 qs08 樣板自動產生(Version:5)
   #+ filter段DIALOG段的組成
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON icaa003,oobx003,xmdadocno,xmdadocdt,xmda004,xmda002,xmda031,xmda050,xmdastus, 
          xmda030
                          FROM s_detail1[1].b_icaa003,s_detail1[1].b_oobx003,s_detail1[1].b_xmdadocno, 
                              s_detail1[1].b_xmdadocdt,s_detail1[1].b_xmda004,s_detail1[1].b_xmda002, 
                              s_detail1[1].b_xmda031,s_detail1[1].b_xmda050,s_detail1[1].b_xmdastus, 
                              s_detail1[1].b_xmda030
 
         BEFORE CONSTRUCT
                     DISPLAY aicq200_filter_parser('icaa003') TO s_detail1[1].b_icaa003
            DISPLAY aicq200_filter_parser('oobx003') TO s_detail1[1].b_oobx003
            DISPLAY aicq200_filter_parser('xmdadocno') TO s_detail1[1].b_xmdadocno
            DISPLAY aicq200_filter_parser('xmdadocdt') TO s_detail1[1].b_xmdadocdt
            DISPLAY aicq200_filter_parser('xmda004') TO s_detail1[1].b_xmda004
            DISPLAY aicq200_filter_parser('xmda002') TO s_detail1[1].b_xmda002
            DISPLAY aicq200_filter_parser('xmda031') TO s_detail1[1].b_xmda031
            DISPLAY aicq200_filter_parser('xmda050') TO s_detail1[1].b_xmda050
            DISPLAY aicq200_filter_parser('xmdastus') TO s_detail1[1].b_xmdastus
            DISPLAY aicq200_filter_parser('xmda030') TO s_detail1[1].b_xmda030
 
 
         #單身公用欄位開窗相關處理
         
 
         #單身一般欄位開窗相關處理
                  #----<<sel>>----
         #----<<b_icaa003>>----
         #Ctrlp:construct.c.filter.page1.b_icaa003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_icaa003
            #add-point:ON ACTION controlp INFIELD b_icaa003 name="construct.c.filter.page1.b_icaa003"
            
            #END add-point
 
 
         #----<<b_oobx003>>----
         #Ctrlp:construct.c.filter.page1.b_oobx003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_oobx003
            #add-point:ON ACTION controlp INFIELD b_oobx003 name="construct.c.filter.page1.b_oobx003"
            
            #END add-point
 
 
         #----<<b_xmdadocno>>----
         #Ctrlp:construct.c.page1.b_xmdadocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_xmdadocno
            #add-point:ON ACTION controlp INFIELD b_xmdadocno name="construct.c.filter.page1.b_xmdadocno"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_xmdadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_xmdadocno  #顯示到畫面上
            NEXT FIELD b_xmdadocno                     #返回原欄位
    



            #END add-point
 
 
         #----<<b_xmdadocdt>>----
         #Ctrlp:construct.c.filter.page1.b_xmdadocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_xmdadocdt
            #add-point:ON ACTION controlp INFIELD b_xmdadocdt name="construct.c.filter.page1.b_xmdadocdt"
            
            #END add-point
 
 
         #----<<b_xmda004>>----
         #Ctrlp:construct.c.page1.b_xmda004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_xmda004
            #add-point:ON ACTION controlp INFIELD b_xmda004 name="construct.c.filter.page1.b_xmda004"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_xmda004  #顯示到畫面上
            NEXT FIELD b_xmda004                     #返回原欄位
    



            #END add-point
 
 
         #----<<b_xmda004_desc>>----
         #----<<b_xmda002>>----
         #Ctrlp:construct.c.page1.b_xmda002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_xmda002
            #add-point:ON ACTION controlp INFIELD b_xmda002 name="construct.c.filter.page1.b_xmda002"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_xmda002  #顯示到畫面上
            NEXT FIELD b_xmda002                     #返回原欄位
    



            #END add-point
 
 
         #----<<b_xmda002_desc>>----
         #----<<b_xmda031>>----
         #Ctrlp:construct.c.page1.b_xmda031
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_xmda031
            #add-point:ON ACTION controlp INFIELD b_xmda031 name="construct.c.filter.page1.b_xmda031"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_xmda031()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_xmda031  #顯示到畫面上
            NEXT FIELD b_xmda031                     #返回原欄位
    



            #END add-point
 
 
         #----<<b_xmda050>>----
         #Ctrlp:construct.c.page1.b_xmda050
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_xmda050
            #add-point:ON ACTION controlp INFIELD b_xmda050 name="construct.c.filter.page1.b_xmda050"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_icaa001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_xmda050  #顯示到畫面上
            NEXT FIELD b_xmda050                     #返回原欄位
    



            #END add-point
 
 
         #----<<b_xmda050_desc>>----
         #----<<b_xmdastus>>----
         #Ctrlp:construct.c.filter.page1.b_xmdastus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_xmdastus
            #add-point:ON ACTION controlp INFIELD b_xmdastus name="construct.c.filter.page1.b_xmdastus"
            
            #END add-point
 
 
         #----<<b_xmda030>>----
         #Ctrlp:construct.c.filter.page1.b_xmda030
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_xmda030
            #add-point:ON ACTION controlp INFIELD b_xmda030 name="construct.c.filter.page1.b_xmda030"
            
            #END add-point
 
 
         #----<<b_icab002_8>>----
         #----<<b_xmdasite_8>>----
         #----<<b_xmdasite_8_desc>>----
         #----<<b_oobx003_8>>----
         #----<<b_xmdadocno_8>>----
         #----<<b_xmda004_8>>----
         #----<<b_xmda004_8_desc>>----
         #----<<b_xmda010_8>>----
         #----<<b_xmda010_8_desc>>----
         #----<<b_xmda009_8>>----
         #----<<b_xmda009_8_desc>>----
         #----<<b_xmda011_8>>----
         #----<<b_xmda011_8_desc>>----
         #----<<b_xmda015_8>>----
         #----<<b_xmda015_8_desc>>----
         #----<<b_xmddseq_8>>----
         #----<<b_xmddseq1_8>>----
         #----<<b_xmddseq2_8>>----
         #----<<b_xmdd001_8>>----
         #----<<b_xmdd001_8_desc>>----
         #----<<b_xmdd001_8_desc_1>>----
         #----<<b_xmdd002_8>>----
         #----<<b_xmdd004_8>>----
         #----<<b_xmdd004_8_desc>>----
         #----<<b_xmdd006_8>>----
         #----<<b_xmdd018_8>>----
         #----<<b_xmdd028_8>>----
         #----<<b_xmdd030_8>>----
         #----<<b_xmdd029_8>>----
         #----<<l_xmdastus_8>>----
 
 
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         
         #end add-point
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
 
   END DIALOG
 
 
 
 
 
   
 
   #add-point:離開DIALOG後相關處理 name="filter.after_dialog"
   
   #end add-point
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = g_wc_filter, " "
   ELSE
      LET g_wc_filter = g_wc_filter_t
   END IF
 
      CALL aicq200_filter_show('icaa003','b_icaa003')
   CALL aicq200_filter_show('oobx003','b_oobx003')
   CALL aicq200_filter_show('xmdadocno','b_xmdadocno')
   CALL aicq200_filter_show('xmdadocdt','b_xmdadocdt')
   CALL aicq200_filter_show('xmda004','b_xmda004')
   CALL aicq200_filter_show('xmda002','b_xmda002')
   CALL aicq200_filter_show('xmda031','b_xmda031')
   CALL aicq200_filter_show('xmda050','b_xmda050')
   CALL aicq200_filter_show('xmdastus','b_xmdastus')
   CALL aicq200_filter_show('xmda030','b_xmda030')
   CALL aicq200_filter_show('icab002','b_icab002')
   CALL aicq200_filter_show('xmddsite','b_xmddsite')
   CALL aicq200_filter_show('xmdddocno','b_xmdddocno')
   CALL aicq200_filter_show('xmda010','b_xmda010')
   CALL aicq200_filter_show('xmda009','b_xmda009')
   CALL aicq200_filter_show('xmdd019','b_xmdd019')
   CALL aicq200_filter_show('xmda015','b_xmda015')
   CALL aicq200_filter_show('xmddseq','b_xmddseq')
   CALL aicq200_filter_show('xmddseq1','b_xmddseq1')
   CALL aicq200_filter_show('xmddseq2','b_xmddseq2')
   CALL aicq200_filter_show('xmdd001','b_xmdd001')
   CALL aicq200_filter_show('xmdd002','b_xmdd002')
   CALL aicq200_filter_show('xmdd004','b_xmdd004')
   CALL aicq200_filter_show('xmdd006','b_xmdd006')
   CALL aicq200_filter_show('xmdd018','b_xmdd018')
   CALL aicq200_filter_show('xmdd028','b_xmdd028')
   CALL aicq200_filter_show('xmdd030','b_xmdd030')
   CALL aicq200_filter_show('xmdd029','b_xmdd029')
   CALL aicq200_filter_show('xmdd011','b_xmdd011')
   CALL aicq200_filter_show('xmdd014','b_xmdd014')
   CALL aicq200_filter_show('xmdk035','b_xmdk035')
   CALL aicq200_filter_show('xmdmsite','b_xmdmsite')
   CALL aicq200_filter_show('xmdmdocno','b_xmdmdocno')
   CALL aicq200_filter_show('xmdk007','b_xmdk007')
   CALL aicq200_filter_show('xmdk011','b_xmdk011')
   CALL aicq200_filter_show('xmdk010','b_xmdk010')
   CALL aicq200_filter_show('xmdl025','b_xmdl025')
   CALL aicq200_filter_show('xmdk016','b_xmdk016')
   CALL aicq200_filter_show('xmdmseq','b_xmdmseq')
   CALL aicq200_filter_show('xmdmseq1','b_xmdmseq1')
   CALL aicq200_filter_show('xmdm001','b_xmdm001')
   CALL aicq200_filter_show('xmdm002','b_xmdm002')
   CALL aicq200_filter_show('xmdm008','b_xmdm008')
   CALL aicq200_filter_show('xmdm009','b_xmdm009')
   CALL aicq200_filter_show('xmdl024','b_xmdl024')
   CALL aicq200_filter_show('xmdm012','b_xmdm012')
   CALL aicq200_filter_show('xmdm013','b_xmdm013')
   CALL aicq200_filter_show('xmdkstus','b_xmdkstus')
   CALL aicq200_filter_show('xmdg055','b_xmdg055')
   CALL aicq200_filter_show('xmdisite','b_xmdisite')
   CALL aicq200_filter_show('xmdidocno','b_xmdidocno')
   CALL aicq200_filter_show('xmdg005','b_xmdg005')
   CALL aicq200_filter_show('xmdg009','b_xmdg009')
   CALL aicq200_filter_show('xmdg008','b_xmdg008')
   CALL aicq200_filter_show('xmdg014','b_xmdg014')
   CALL aicq200_filter_show('xmdiseq','b_xmdiseq')
   CALL aicq200_filter_show('xmdiseq1','b_xmdiseq1')
   CALL aicq200_filter_show('xmdi001','b_xmdi001')
   CALL aicq200_filter_show('xmdi002','b_xmdi002')
   CALL aicq200_filter_show('xmdi008','b_xmdi008')
   CALL aicq200_filter_show('xmdi009','b_xmdi009')
   CALL aicq200_filter_show('xmdgstus','b_xmdgstus')
   CALL aicq200_filter_show('xrca047','b_xrca047')
   CALL aicq200_filter_show('xrcbsite','b_xrcbsite')
   CALL aicq200_filter_show('xrcbdocno','b_xrcbdocno')
   CALL aicq200_filter_show('xrca004','b_xrca004')
   CALL aicq200_filter_show('xrca008','b_xrca008')
   CALL aicq200_filter_show('xrcb020','b_xrcb020')
   CALL aicq200_filter_show('xrca100','b_xrca100')
   CALL aicq200_filter_show('xrca101','b_xrca101')
   CALL aicq200_filter_show('xrcb105','b_xrcb105')
   CALL aicq200_filter_show('xrcb115','b_xrcb115')
   CALL aicq200_filter_show('xrcastus','b_xrcastus')
   CALL aicq200_filter_show('pmds041','b_pmds041')
   CALL aicq200_filter_show('pmdusite','b_pmdusite')
   CALL aicq200_filter_show('pmdudocno','b_pmdudocno')
   CALL aicq200_filter_show('pmds007','b_pmds007')
   CALL aicq200_filter_show('pmduseq','b_pmduseq')
   CALL aicq200_filter_show('pmduseq1','b_pmduseq1')
   CALL aicq200_filter_show('pmdu001','b_pmdu001')
   CALL aicq200_filter_show('pmdu002','b_pmdu002')
   CALL aicq200_filter_show('pmdu009','b_pmdu009')
   CALL aicq200_filter_show('pmdu010','b_pmdu010')
   CALL aicq200_filter_show('pmdu005','b_pmdu005')
   CALL aicq200_filter_show('pmdu006','b_pmdu006')
   CALL aicq200_filter_show('pmdu007','b_pmdu007')
   CALL aicq200_filter_show('pmdu008','b_pmdu008')
   CALL aicq200_filter_show('pmdt051','b_pmdt051')
   CALL aicq200_filter_show('pmdsstus','b_pmdsstus')
   CALL aicq200_filter_show('xmel017','b_xmel017')
   CALL aicq200_filter_show('xmemsite','b_xmemsite')
   CALL aicq200_filter_show('xmemdocno','b_xmemdocno')
   CALL aicq200_filter_show('xmel003','b_xmel003')
   CALL aicq200_filter_show('xmemseq','b_xmemseq')
   CALL aicq200_filter_show('xmem003','b_xmem003')
   CALL aicq200_filter_show('xmem004','b_xmem004')
   CALL aicq200_filter_show('xmem005','b_xmem005')
   CALL aicq200_filter_show('xmem006','b_xmem006')
   CALL aicq200_filter_show('xmem007','b_xmem007')
   CALL aicq200_filter_show('xmem008','b_xmem008')
   CALL aicq200_filter_show('xmem010','b_xmem010')
   CALL aicq200_filter_show('xmem011','b_xmem011')
   CALL aicq200_filter_show('xmem012','b_xmem012')
   CALL aicq200_filter_show('xmem013','b_xmem013')
   CALL aicq200_filter_show('xmem014','b_xmem014')
   CALL aicq200_filter_show('xmem015','b_xmem015')
   CALL aicq200_filter_show('xmem016','b_xmem016')
   CALL aicq200_filter_show('xmem017','b_xmem017')
   CALL aicq200_filter_show('xmem018','b_xmem018')
   CALL aicq200_filter_show('xmem019','b_xmem019')
   CALL aicq200_filter_show('xmelstus','b_xmelstus')
   CALL aicq200_filter_show('xmdo055','b_xmdo055')
   CALL aicq200_filter_show('xmdpsite','b_xmdpsite')
   CALL aicq200_filter_show('xmdpdocno','b_xmdpdocno')
   CALL aicq200_filter_show('xmdpseq','b_xmdpseq')
   CALL aicq200_filter_show('xmdp008','b_xmdp008')
   CALL aicq200_filter_show('xmdp009','b_xmdp009')
   CALL aicq200_filter_show('xmdp015','b_xmdp015')
   CALL aicq200_filter_show('xmdp016','b_xmdp016')
   CALL aicq200_filter_show('xmdp021','b_xmdp021')
   CALL aicq200_filter_show('xmdp024','b_xmdp024')
   CALL aicq200_filter_show('xmdp026','b_xmdp026')
   CALL aicq200_filter_show('xmdp025','b_xmdp025')
   CALL aicq200_filter_show('xmdostus','b_xmdostus')
 
 
   CALL aicq200_b_fill()
 
   CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
   CALL gfrm_curr.setFieldHidden("formonly.b_statepic", FALSE)
 
END FUNCTION
 
{</section>}
 
{<section id="aicq200.filter_parser" >}
#應用 qs14 樣板自動產生(Version:6)
#+ filter pasara段
#+ filter欄位解析
PRIVATE FUNCTION aicq200_filter_parser(ps_field)
   #add-point:filter段define-客製 name="filter_parser.define_customerization"
   
   #end add-point
   {<Local define>}
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   {</Local define>}
   #add-point:filter段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   
   #end add-point
 
   #add-point:FUNCTION前置處理 name="filter_parser.before_function"
   
   #end add-point
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
 
{</section>}
 
{<section id="aicq200.filter_show" >}
#應用 qs15 樣板自動產生(Version:6)
#+ filter標題欄位顯示搜尋條件
PRIVATE FUNCTION aicq200_filter_show(ps_field,ps_object)
   #add-point:filter_show段define-客製 name="filter_show.define_customerization"
   
   #end add-point
   DEFINE ps_field         STRING
   DEFINE ps_object        STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
   #add-point:filter_show段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_show.define"
   
   #end add-point
 
   #add-point:FUNCTION前置處理 name="filter_show.before_function"
   
   #end add-point
 
   LET ls_name = "formonly.", ps_object
 
 
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LET ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = aicq200_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
 
{</section>}
 
{<section id="aicq200.detail_action_trans" >}
#+ 單身分頁筆數顯示及action圖片顯示切換功能
PRIVATE FUNCTION aicq200_detail_action_trans()
   #add-point:detail_action_trans段define-客製 name="detail_action_trans.define_customerization"
   
   #end add-point
   #add-point:detail_action_trans段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_action_trans.define"
   
   #end add-point
 
 
   #add-point:FUNCTION前置處理 name="detail_action_trans.before_function"
   
   #end add-point
 
   #因應單身切頁功能，筆數計算方式調整
   LET g_current_row_tot = g_pagestart + g_detail_idx - 1
   DISPLAY g_current_row_tot TO FORMONLY.h_index
   DISPLAY g_tot_cnt TO FORMONLY.h_count
 
   #顯示單身頁面的起始與結束筆數
   LET g_page_start_num = g_pagestart
   LET g_page_end_num = g_pagestart + g_num_in_page - 1
   DISPLAY g_page_start_num TO FORMONLY.p_start
   DISPLAY g_page_end_num TO FORMONLY.p_end
 
   #目前不支援跳頁功能
   LET g_page_act_list = "detail_first,detail_previous,'',detail_next,detail_last"
   CALL cl_navigator_detail_page_setting(g_page_act_list,g_current_row_tot,g_pagestart,g_num_in_page,g_tot_cnt)
 
END FUNCTION
 
{</section>}
 
{<section id="aicq200.detail_index_setting" >}
#+ 單身切頁後，index重新調整，避免翻頁後指到空白筆數
PRIVATE FUNCTION aicq200_detail_index_setting()
   #add-point:detail_index_setting段define-客製 name="detail_index_setting.define_customerization"
   
   #end add-point
   DEFINE li_redirect     BOOLEAN
   DEFINE ldig_curr       ui.Dialog
   #add-point:detail_index_setting段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_index_setting.define"
   
   #end add-point
 
   #add-point:FUNCTION前置處理 name="detail_index_setting.before_function"
   
   #end add-point
 
   IF g_curr_diag IS NOT NULL THEN
      CASE
         WHEN g_curr_diag.getCurrentRow("s_detail1") <= "0"
            LET g_detail_idx = 1
            IF g_xmda_d.getLength() > 0 THEN
               LET li_redirect = TRUE
            END IF
         WHEN g_curr_diag.getCurrentRow("s_detail1") > g_xmda_d.getLength() AND g_xmda_d.getLength() > 0
            LET g_detail_idx = g_xmda_d.getLength()
            LET li_redirect = TRUE
         WHEN g_curr_diag.getCurrentRow("s_detail1") != g_detail_idx
            IF g_detail_idx > g_xmda_d.getLength() THEN
               LET g_detail_idx = g_xmda_d.getLength()
            END IF
            LET li_redirect = TRUE
      END CASE
   END IF
 
   IF li_redirect THEN
      LET ldig_curr = ui.Dialog.getCurrent()
      CALL ldig_curr.setCurrentRow("s_detail1", g_detail_idx)
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="aicq200.mask_functions" >}
 &include "erp/aic/aicq200_mask.4gl"
 
{</section>}
 
{<section id="aicq200.other_function" readonly="Y" >}

################################################################################
# Descriptions...: 建立temp
# Memo...........:
# Usage..........: CALL aicq200_create_temp_table()
#                  RETURNING r_success
# Input parameter: 
# Return code....: r_success TRUE/FALSE
# Date & Author..: 160224 By 02040
# Modify.........:
################################################################################
PRIVATE FUNCTION aicq200_create_temp_table()
   DEFINE r_success         LIKE type_t.num5

   LET r_success = TRUE
   DROP TABLE aicq200_tmp01;
   
   CREATE TEMP TABLE aicq200_tmp01(       
                       icaa003 LIKE icaa_t.icaa003, 
                       oobx003 LIKE oobx_t.oobx003, 
                       xmdadocno LIKE xmda_t.xmdadocno, 
                       xmdadocdt LIKE xmda_t.xmdadocdt, 
                       xmda004 LIKE xmda_t.xmda004,                       
                       xmda002 LIKE xmda_t.xmda002,                        
                       xmda031 LIKE xmda_t.xmda031, 
                       xmda050 LIKE xmda_t.xmda050,                        
                       xmdastus LIKE xmda_t.xmdastus, 
                       xmda030 LIKE xmda_t.xmda030,
                       xmdaent LIKE xmda_t.xmdaent)                    
   IF SQLCA.sqlcode != 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'aicq200_tmp01'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF 
   DROP TABLE aicq200_tmp02;
   CREATE TEMP TABLE aicq200_tmp02(
       icab002 LIKE icab_t.icab002, 
       xmddsite LIKE xmdd_t.xmddsite, 
       oobx003 LIKE oobx_t.oobx003, 
       xmdddocno LIKE xmdd_t.xmdddocno, 
       xmda004 LIKE xmda_t.xmda004, 
       xmda010 LIKE xmda_t.xmda010, 
       xmda009 LIKE xmda_t.xmda009, 
       xmdd019 LIKE xmdd_t.xmdd019, 
       xmda015 LIKE xmda_t.xmda015, 
       xmddseq LIKE xmdd_t.xmddseq, 
       xmddseq1 LIKE xmdd_t.xmddseq1, 
       xmddseq2 LIKE xmdd_t.xmddseq2, 
       xmdd001 LIKE xmdd_t.xmdd001, 
       xmdd002 LIKE xmdd_t.xmdd002, 
       xmdd004 LIKE xmdd_t.xmdd004, 
       xmdd006 LIKE xmdd_t.xmdd006, 
       xmdd018 LIKE xmdd_t.xmdd018, 
       xmdd028 LIKE xmdd_t.xmdd028, 
       xmdd030 LIKE xmdd_t.xmdd030, 
       xmdd029 LIKE xmdd_t.xmdd029, 
       xmdd011 LIKE xmdd_t.xmdd011, 
       xmdd014 LIKE xmdd_t.xmdd014,
       xmdastus LIKE xmda_t.xmdastus,     #160503-00008#1 add
       l_order LIKE type_t.num5 )   
   
   IF SQLCA.sqlcode != 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'aicq200_tmp02'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF 
   DROP TABLE aicq200_tmp03;
   CREATE TEMP TABLE aicq200_tmp03(
       icab002 LIKE icab_t.icab002, 
       xmdasite LIKE xmda_t.xmdasite, 
       oobx003  LIKE oobx_t.oobx003,
       xmdadocno LIKE xmda_t.xmdadocno, 
       xmda004 LIKE xmda_t.xmda004, 
       xmda010 LIKE xmda_t.xmda010, 
       xmda009 LIKE xmda_t.xmda009,        
       xmda011 LIKE xmda_t.xmda011,        
       xmda015 LIKE xmda_t.xmda015,        
       xmddseq LIKE xmdd_t.xmddseq, 
       xmddseq1 LIKE xmdd_t.xmddseq1, 
       xmddseq2 LIKE xmdd_t.xmddseq2, 
       xmdd001 LIKE xmdd_t.xmdd001,      
       xmdd002 LIKE xmdd_t.xmdd002, 
       xmdd004 LIKE xmdd_t.xmdd004,         
       xmdd006 LIKE xmdd_t.xmdd006, 
       xmdd018 LIKE xmdd_t.xmdd018, 
       xmdd028 LIKE xmdd_t.xmdd028, 
       xmdd030 LIKE xmdd_t.xmdd030,  
       xmdd029 LIKE xmdd_t.xmdd029,
       xmdastus LIKE xmda_t.xmdastus)    #160503-00008#1 add
   IF SQLCA.sqlcode != 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'aicq200_tmp03'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF  
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 單身填充
# Memo...........:
# Usage..........: CALL aicq200_b_fill3()
#                  RETURNING 
# Input parameter: 
# Return code....: 
# Date & Author..: 160225 By 02040
# Modify.........:
################################################################################
PRIVATE FUNCTION aicq200_b_fill3()
   DEFINE li_ac   LIKE type_t.num10
   DEFINE l_sql   STRING
   DEFINE l_tmp   RECORD
            icab002 LIKE icab_t.icab002,
            oobx003 LIKE oobx_t.oobx003,
            site    LIKE xmdd_t.xmddsite,
            docno   LIKE xmdd_t.xmdddocno,
            seq     LIKE xmdd_t.xmddseq,            
            seq1     LIKE xmdd_t.xmddseq,
            seq2     LIKE xmdd_t.xmddseq
           END RECORD

   DELETE FROM aicq200_tmp02;
   DELETE FROM aicq200_tmp03;
   #訂單
   LET l_sql = "INSERT INTO aicq200_tmp02( icab002,xmddsite,oobx003,xmdddocno,xmda004, ",
               "                           xmda010, xmda009,xmdd019,  xmda015,xmddseq, ",
               "                          xmddseq1,xmddseq2,xmdd001,  xmdd002,xmdd004, ",
               "                           xmdd006, xmdd018,xmdd028,  xmdd030,xmdd029, ",
               "                           xmdd011, xmdd014,xmdastus, l_order)         ",  #160503-00008#1 add xmdastus
               "    SELECT  icab002,xmddsite,'axmt500',xmdddocno,xmda004, ",
               "            xmda010, xmda009,  xmdd019,  xmda015,xmddseq, ",
               "           xmddseq1,xmddseq2,  xmdd001,  xmdd002,xmdd004, ",
               "            xmdd006, xmdd018,  xmdd028,  xmdd030,xmdd029, ",
               "            xmdd011, xmdd014, xmdastus,        1          ",               #160503-00008#1 add xmdastus
               "      FROM icab_t,xmda_t,xmdd_t ",
               "     WHERE icabent = xmdaent AND icab003 = xmdasite AND icab001 = xmda050 ",
               "       AND xmdaent = xmddent AND xmdadocno = xmdddocno ",
               "       AND xmdaent = ? ",
               "       AND (xmda031 = ? OR (xmda031 IS NULL AND xmdadocno = ?))"
               
   PREPARE aicq200_ins_tmp02 FROM l_sql
   
   EXECUTE aicq200_ins_tmp02 USING g_enterprise,g_xmda_d[g_detail_idx].xmda031,g_xmda_d[g_detail_idx].xmdadocno
   FREE aicq200_ins_tmp02               
   #採購單
   LET l_sql = "INSERT INTO aicq200_tmp02( icab002,xmddsite,oobx003,xmdddocno,xmda004, ",
               "                           xmda010, xmda009,xmdd019,  xmda015,xmddseq, ",
               "                          xmddseq1,xmddseq2,xmdd001,  xmdd002,xmdd004, ",
               "                           xmdd006, xmdd018,xmdd028,  xmdd030,xmdd029, ",
               "                           xmdd011, xmdd014,xmdastus,  l_order)        ",   #160503-00008#1 add xmdastus
               "    SELECT  icab002,pmdosite,'apmt500',pmdodocno,pmdl004, ",
               "            pmdl010, pmdl009,  pmdo023,  pmdl015,pmdoseq, ",
               "           pmdoseq1,pmdoseq2,  pmdo001,  pmdo002,pmdo004, ",
               "            pmdo006, pmdo022,  pmdo032,  pmdo034,pmdo033, ",
               "            pmdo011, pmdo019, pmdlstus,        2          ",                #160503-00008#1 add pmdlstus
               "      FROM icab_t,pmdl_t,pmdo_t ",
               "     WHERE icabent = pmdlent AND icab003 = pmdlsite AND icab001 = pmdl051 ",
               "       AND pmdlent = pmdoent AND pmdldocno = pmdodocno ",
               "       AND pmdlent = ? ",
               "       AND (pmdl031 = ? OR (pmdl031 IS NULL AND pmdldocno = ?))"
               
   PREPARE aicq200_ins_tmp03 FROM l_sql
   
   EXECUTE aicq200_ins_tmp03 USING g_enterprise,g_xmda_d[g_detail_idx].xmda031,g_xmda_d[g_detail_idx].xmdadocno
   FREE aicq200_ins_tmp03  

#table2#訂單/採購單明細
   IF g_action_choice <> "fetch" OR cl_null(g_action_choice) THEN
      LET g_sql = " SELECT icab002,xmddsite,      '',oobx003,xmdddocno, ",
                  "        xmda004,      '', xmda010,     '',  xmda009, ",
                  "             '', xmdd019,      '',xmda015,       '', ",
                  "        xmddseq,xmddseq1,xmddseq2,xmdd001,       '', ",
                  "             '', xmdd002, xmdd004,     '',  xmdd006, ",
                  "        xmdd018, xmdd028, xmdd030,xmdd029,  xmdd011, ",
                  "        xmdd014, xmdastus                            ",   #160503-00008#1 add xmdastus
                  "   FROM aicq200_tmp02             "
  
      IF NOT cl_null(g_wc2_table2) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
      END IF
  
      LET g_sql = g_sql, " ORDER BY icab002,l_order,xmdddocno,xmddseq,xmddseq1,xmddseq2   "
 
      LET g_sql = cl_sql_add_mask(g_sql)             
      PREPARE aicq200_pb02 FROM g_sql
      DECLARE b_fill_curs02 CURSOR FOR aicq200_pb02
   END IF
 
   LET l_ac = 1
   FOREACH b_fill_curs02 INTO g_xmda2_d[l_ac].icab002,g_xmda2_d[l_ac].xmddsite,g_xmda2_d[l_ac].xmddsite_desc, 
       g_xmda2_d[l_ac].oobx003,g_xmda2_d[l_ac].xmdddocno,g_xmda2_d[l_ac].xmda004,g_xmda2_d[l_ac].xmda004_1_desc, 
       g_xmda2_d[l_ac].xmda010,g_xmda2_d[l_ac].xmda010_desc,g_xmda2_d[l_ac].xmda009,g_xmda2_d[l_ac].xmda009_desc, 
       g_xmda2_d[l_ac].xmdd019,g_xmda2_d[l_ac].xmdd019_desc,g_xmda2_d[l_ac].xmda015,g_xmda2_d[l_ac].xmda015_desc, 
       g_xmda2_d[l_ac].xmddseq,g_xmda2_d[l_ac].xmddseq1,g_xmda2_d[l_ac].xmddseq2,g_xmda2_d[l_ac].xmdd001, 
       g_xmda2_d[l_ac].xmdd001_desc,g_xmda2_d[l_ac].xmdd001_desc_1,g_xmda2_d[l_ac].xmdd002,g_xmda2_d[l_ac].xmdd004, 
       g_xmda2_d[l_ac].xmdd004_desc,g_xmda2_d[l_ac].xmdd006,g_xmda2_d[l_ac].xmdd018,g_xmda2_d[l_ac].xmdd028, 
       g_xmda2_d[l_ac].xmdd030,g_xmda2_d[l_ac].xmdd029,g_xmda2_d[l_ac].xmdd011,g_xmda2_d[l_ac].xmdd014,
       g_xmda2_d[l_ac].l_xmdastus_1                                                                          #160503-00008#1 add

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:b_fill_curs02" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err() 
         EXIT FOREACH
      END IF      
 
      CALL aicq200_detail_show("'2'")
 
      CALL aicq200_xmdd_t_mask()
 
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend =  "" 
         LET g_errparam.code   =  9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err() 
         EXIT FOREACH
      END IF
      INSERT INTO aicq200_tmp03( icab002,xmdasite,oobx003,xmdadocno,xmda004,
                                 xmda010, xmda009,xmda011,  xmda015,xmddseq,
                                xmddseq1,xmddseq2,xmdd001,  xmdd002,xmdd004, 
                                 xmdd006, xmdd018,xmdd028,  xmdd030,xmdd029,
                                xmdastus)        #160503-00008#1 add                                         
      VALUES ( g_xmda2_d[l_ac].icab002,g_xmda2_d[l_ac].xmddsite,g_xmda2_d[l_ac].oobx003,g_xmda2_d[l_ac].xmdddocno,g_xmda2_d[l_ac].xmda004,  
               g_xmda2_d[l_ac].xmda010, g_xmda2_d[l_ac].xmda009,g_xmda2_d[l_ac].xmdd019,  g_xmda2_d[l_ac].xmda015,g_xmda2_d[l_ac].xmddseq,
              g_xmda2_d[l_ac].xmddseq1,g_xmda2_d[l_ac].xmddseq2,g_xmda2_d[l_ac].xmdd001,  g_xmda2_d[l_ac].xmdd002,g_xmda2_d[l_ac].xmdd004,
               g_xmda2_d[l_ac].xmdd006, g_xmda2_d[l_ac].xmdd018,g_xmda2_d[l_ac].xmdd028,  g_xmda2_d[l_ac].xmdd030,g_xmda2_d[l_ac].xmdd029,
               g_xmda2_d[l_ac].l_xmdastus_1 )    #160503-00008#1 add                          
      LET l_ac = l_ac + 1
   END FOREACH

#table3#出貨/入庫明細
   IF g_action_choice <> "fetch" OR cl_null(g_action_choice) THEN
      LET g_sql = "SELECT   xmdk035,icab002,xmdmsite,     '',oobx003, ",
                  "       xmdmdocno,xmdk007,      '',xmdk011,     '', ",
                  "         xmdk010,     '', xmdl025,     '',xmdk016, ", 
                  "              '',xmdmseq,xmdmseq1,xmdm001,     '', ",
                  "              '',xmdm002, xmdm008,     '',xmdm009, ",
                  "         xmdl024,xmdm012, xmdm013,                 ",
                  "         xmdkstus                                  ",    #160503-00008#1 add
                  "  FROM (                                           ",
                  #1出貨單/4簽收單
                  "        SELECT xmdkent,xmdk035,a.icab002 icab002,xmdmsite,'',                    ",
                  "               CASE xmdk000 WHEN '1' THEN 'axmt540' WHEN'4' THEN 'axmt580' END oobx003,  ",
                  "               xmdmdocno,  xmdk007,      '',xmdk011,       '',                   ",
                  "                 xmdk010,       '', xmdl025,     '',  xmdk016,                   ",
                  "                      '',  xmdmseq,xmdmseq1,xmdm001,       '',                   ",
                  "                      '',  xmdm002, xmdm008,     '',  xmdm009,                   ",
                  "                 xmdl024,  xmdm012, xmdm013,                                     ",
                  "                 xmdkstus                                                        ",  #160503-00008#1 add
                  "          FROM xmdk_t,xmdl_t,xmdm_t,aicq200_tmp02 a                              ",
                  "         WHERE xmdkent = xmdlent AND xmdkdocno = xmdldocno                       ",
                  "           AND xmdlent = xmdment AND xmdldocno = xmdmdocno AND xmdlseq = xmdmseq ",
                  "           AND xmdl003 = a.xmdddocno AND xmdl004 = a.xmddseq AND xmdl005 = a.xmddseq1 AND xmdl006 = a.xmddseq2 ", 
                  "           AND a.oobx003 = 'axmt500'                                             ",
                  "           AND xmdk000 IN ('1','4')                                              ",
                  "         UNION                                                                   ",
                  #1收貨單/3收貨入庫/6採購入庫/8委外收貨/12委外採購入庫/20委外採購收貨入庫
                  "        SELECT pmdsent xmdkent,pmds041,a.icab002 icab002,pmdusite,     '',       ",
                  "               CASE pmds000 WHEN '1' THEN 'apmt520' WHEN '3' THEN 'apmt530' WHEN '6' THEN 'apmt570' WHEN '8' THEN 'apmt521' WHEN '12' THEN 'apmt571' WHEN '20' THEN 'apmt531' END oobx003, ",
                  "               pmdudocno,  pmds007,      '',pmds032,     '',                     ",
                  "                 pmds031,       '', pmdt046,     '',pmds037,                     ",
                  "                      '',  pmduseq,pmduseq1,pmdu001,     '',                     ",
                  "                      '',  pmdu002, pmdu009,     '',pmdu010,                     ",
                  "                 pmdt036,  pmdu014, pmdu015,                                     ",
                  "                pmdsstus                                                         ",  #160503-00008#1 add 
                  "          FROM pmds_t,pmdt_t,pmdu_t,aicq200_tmp02 a                              ",
                  "         WHERE pmdsent = pmdtent AND pmdsdocno = pmdtdocno                       ",
                  "           AND pmdtent = pmduent AND pmdtdocno = pmdudocno AND pmdtseq = pmduseq ",
                  "           AND pmdt001 = a.xmdddocno AND pmdt002 = a.xmddseq AND pmdt003 = a.xmddseq1 AND pmdt004 = a.xmddseq2 ",         
                  "           AND a.oobx003 = 'apmt500'                                             ",
                  "           AND pmds000 IN ('1','3','6','8','12','20')                            ",
                  "         )                                                                       ",
                  " WHERE xmdkent = ? ",                                                               
                  " ORDER BY icab002 "                                                               
  
      LET g_sql = cl_sql_add_mask(g_sql)             
      PREPARE aicq200_pb03 FROM g_sql
      DECLARE b_fill_curs03 CURSOR FOR aicq200_pb03
   END IF
 
   OPEN b_fill_curs03 USING g_enterprise
 
   LET l_ac = 1
   FOREACH b_fill_curs03 INTO g_xmda3_d[l_ac].xmdk035,g_xmda3_d[l_ac].icab002,g_xmda3_d[l_ac].xmdmsite, 
       g_xmda3_d[l_ac].xmdmsite_desc,g_xmda3_d[l_ac].oobx003,g_xmda3_d[l_ac].xmdmdocno,g_xmda3_d[l_ac].xmdk007, 
       g_xmda3_d[l_ac].xmdk007_desc,g_xmda3_d[l_ac].xmdk011,g_xmda3_d[l_ac].xmdk011_desc,g_xmda3_d[l_ac].xmdk010, 
       g_xmda3_d[l_ac].xmdk010_desc,g_xmda3_d[l_ac].xmdl025,g_xmda3_d[l_ac].xmdl025_desc,g_xmda3_d[l_ac].xmdk016, 
       g_xmda3_d[l_ac].xmdk016_desc,g_xmda3_d[l_ac].xmdmseq,g_xmda3_d[l_ac].xmdmseq1,g_xmda3_d[l_ac].xmdm001, 
       g_xmda3_d[l_ac].xmdm001_desc,g_xmda3_d[l_ac].xmdm001_desc_1,g_xmda3_d[l_ac].xmdm002,g_xmda3_d[l_ac].xmdm008, 
       g_xmda3_d[l_ac].xmdm008_desc,g_xmda3_d[l_ac].xmdm009,g_xmda3_d[l_ac].xmdl024,g_xmda3_d[l_ac].xmdm012, 
       g_xmda3_d[l_ac].xmdm013,g_xmda3_d[l_ac].xmdkstus               #160503-00008#1 add xmdkstus
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:b_fill_curs03" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err() 
         EXIT FOREACH
      END IF
      
      CALL aicq200_detail_show("'3'")
 
      CALL aicq200_xmdm_t_mask()
 
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend =  "" 
         LET g_errparam.code   =  9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err() 
         EXIT FOREACH
      END IF
      INSERT INTO aicq200_tmp03( icab002,xmdasite,oobx003,xmdadocno,xmda004,
                                 xmda010, xmda009,xmda011,  xmda015,xmddseq,
                                xmddseq1,xmddseq2,xmdd001,  xmdd002,xmdd004,
                                 xmdd006, xmdd018,xmdd028,  xmdd030,xmdd029,
                                xmdastus )          #160503-00008#1 add 
      VALUES ( g_xmda3_d[l_ac].icab002,g_xmda3_d[l_ac].xmdmsite,g_xmda3_d[l_ac].oobx003,g_xmda3_d[l_ac].xmdmdocno,g_xmda3_d[l_ac].xmdk007,  
               g_xmda3_d[l_ac].xmdk011, g_xmda3_d[l_ac].xmdk010,g_xmda3_d[l_ac].xmdl025,  g_xmda3_d[l_ac].xmdk016,g_xmda3_d[l_ac].xmdmseq,
              g_xmda3_d[l_ac].xmdmseq1,                      '',g_xmda3_d[l_ac].xmdm001,  g_xmda3_d[l_ac].xmdm002,g_xmda3_d[l_ac].xmdm008,
               g_xmda3_d[l_ac].xmdm009,g_xmda3_d[l_ac].xmdl024,                     '',                       '',                     '',
               g_xmda3_d[l_ac].xmdkstus )           #160503-00008#1 add         
      LET l_ac = l_ac + 1
 
   END FOREACH


#table4#出通單
   #為避免影響執行效能，若是按上下筆就不重組SQL
   IF g_action_choice <> "fetch" OR cl_null(g_action_choice) THEN
      LET g_sql = "SELECT   xmdg055,a.icab002,xmdisite,     '','axmt520', ",
                  "       xmdidocno,  xmdg005,      '',xmdg009,       '', ",
                  "         xmdg008,       '', xmdg010,     '',  xmdg014, ",
                  "              '',  xmdiseq,xmdiseq1,xmdi001,       '', ",
                  "              '',  xmdi002,xmdi008,       '', xmdi009, ",
                  "        xmdgstus " ,          #160503-00008#1 add
                  "  FROM xmdg_t,xmdh_t,xmdi_t,aicq200_tmp02 a ",
                  " WHERE xmdgent = xmdhent AND xmdgdocno = xmdhdocno ",
                  "   AND xmdh001 = a.xmdddocno AND xmdh002 = a.xmddseq AND xmdh003 = a.xmddseq1 AND xmdh004 = a.xmddseq2 ",
                  "   AND xmdhent = xmdient AND xmdhdocno = xmdidocno AND xmdhseq = xmdiseq ",              
                  "   AND xmdgent = ? ",
                  "   AND a.oobx003 = 'axmt500' ",
                  "ORDER BY a.icab002 "
 
      LET g_sql = cl_sql_add_mask(g_sql)              
      PREPARE aicq200_pb04 FROM g_sql
      DECLARE b_fill_curs04 CURSOR FOR aicq200_pb04
   END IF
 
   OPEN b_fill_curs04 USING g_enterprise
 
   LET l_ac = 1
   FOREACH b_fill_curs04 INTO g_xmda4_d[l_ac].xmdg055,g_xmda4_d[l_ac].icab002,g_xmda4_d[l_ac].xmdisite, 
       g_xmda4_d[l_ac].xmdisite_desc,g_xmda4_d[l_ac].oobx003,g_xmda4_d[l_ac].xmdidocno,g_xmda4_d[l_ac].xmdg005, 
       g_xmda4_d[l_ac].xmdg005_desc,g_xmda4_d[l_ac].xmdg009,g_xmda4_d[l_ac].xmdg009_desc,g_xmda4_d[l_ac].xmdg008, 
       g_xmda4_d[l_ac].xmdg008_desc,g_xmda4_d[l_ac].xmdg010,g_xmda4_d[l_ac].xmdg010_desc,g_xmda4_d[l_ac].xmdg014, 
       g_xmda4_d[l_ac].xmdg014_desc,g_xmda4_d[l_ac].xmdiseq,g_xmda4_d[l_ac].xmdiseq1,g_xmda4_d[l_ac].xmdi001, 
       g_xmda4_d[l_ac].xmdi001_desc,g_xmda4_d[l_ac].xmdi001_desc_1,g_xmda4_d[l_ac].xmdi002,g_xmda4_d[l_ac].xmdi008, 
       g_xmda4_d[l_ac].xmdi008_desc,g_xmda4_d[l_ac].xmdi009,g_xmda4_d[l_ac].xmdgstus                             #160503-00008#1 add xmdgstus
      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err() 
         EXIT FOREACH
      END IF
      
 
      CALL aicq200_detail_show("'4'")
 
      CALL aicq200_xmdi_t_mask()
 
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend =  "" 
         LET g_errparam.code   =  9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err() 
         EXIT FOREACH
      END IF
      INSERT INTO aicq200_tmp03( icab002,xmdasite,oobx003,xmdadocno,xmda004,
                                 xmda010, xmda009,xmda011,  xmda015,xmddseq,
                                xmddseq1,xmddseq2,xmdd001,  xmdd002,xmdd004,
                                 xmdd006, xmdd018,xmdd028,  xmdd030,xmdd029,
                                xmdastus )             #160503-00008#1 add
      VALUES ( g_xmda4_d[l_ac].icab002,g_xmda4_d[l_ac].xmdisite,g_xmda4_d[l_ac].oobx003,g_xmda4_d[l_ac].xmdidocno,g_xmda4_d[l_ac].xmdg005,  
               g_xmda4_d[l_ac].xmdg009, g_xmda4_d[l_ac].xmdg008,g_xmda4_d[l_ac].xmdg010,  g_xmda4_d[l_ac].xmdg014,g_xmda4_d[l_ac].xmdiseq,
              g_xmda4_d[l_ac].xmdiseq1,                      '',g_xmda4_d[l_ac].xmdi001,  g_xmda4_d[l_ac].xmdi002,g_xmda4_d[l_ac].xmdi008,
               g_xmda4_d[l_ac].xmdi009,                      '',                     '',                       '',                     '',
               g_xmda4_d[l_ac].xmdgstus)               #160503-00008#1 add                                   
      LET l_ac = l_ac + 1
 
   END FOREACH
 
#table5#立帳明細
   #為避免影響執行效能，若是按上下筆就不重組SQL
   IF g_action_choice <> "fetch" OR cl_null(g_action_choice) THEN
      LET g_sql = "SELECT   xrca047,icab002,xrcbsite,     '',oobx003,          ",
                  "       xrcbdocno,xrca004,      '',xrca008,     '',          ",
                  "         xrcb020,     '', xrca100,     '',xrca101,          ",
                  "         xrcb105,xrcb115,xrcastus                           ",    #160503-00008#1 add xrcastus
                  "  FROM (                                                    ",  
                  #AR
                  "         SELECT   xrca047,a.icab002 icab002,xrcbsite,   '', ",
                  "                  CASE xrca001 WHEN '12' THEN 'axrt300' WHEN '22' THEN 'axrt340' END oobx003, ",
                  "                xrcbdocno,xrca004,      '',xrca008,     '', ",
                  "                  xrcb020,     '', xrca100,     '',xrca101, ",
                  "                  xrcb105,xrcb115,xrcaent,xrcastus          ",    #160503-00008#1 add xrcastus
                  "           FROM xrca_t,xrcb_t,xmdl_t,aicq200_tmp02 a        ",
                  "          WHERE xrcaent = xrcbent AND xrcald = xrcbld AND xrcadocno = xrcbdocno ",
                  "            AND xrcastus NOT IN ('X') ",                                                #161019-00035#1 add
                  "            AND xmdl003 = a.xmdddocno AND xmdl004 = a.xmddseq AND xmdl005 = a.xmddseq1 AND xmdl006 = a.xmddseq2 ", 
                  "            AND xrcbent = xmdlent AND xrcb002 = xmdldocno AND xrcb003 = xmdlseq ",
                 #"            AND xrca001 IN ('12','22')                                           ",     #161019-00035#1 mark
                  "        UNION                               ",
                  #AP
                  "        SELECT apca047,a.icab002 icab002,apcbsite,     '', ",
                  "                  CASE apca001 WHEN '12' THEN 'aapt300' WHEN '22' THEN 'aapt340' END oobx003, ",
                  "               apcbdocno,apca004,       '',apca008,     '', ",
                  "                  apcb020,     '', apca100,     '',apca101, ",
                  "                  apcb105,apcb115,apcaent xrcaent,apcastus  ",        #160503-00008#1 add apcastus
                  "           FROM apca_t,apcb_t,pmdt_t,aicq200_tmp02 a        ",
                  "          WHERE apcaent = apcbent AND apcald = apcbld AND apcadocno = apcbdocno ",
                  "            AND apcastus NOT IN ('X') ",                               #161019-00035#1 add
                  "            AND pmdt001 = a.xmdddocno AND pmdt002 = a.xmddseq AND pmdt003 = a.xmddseq1 AND pmdt004 = a.xmddseq2 ", 
                  "            AND apcbent = pmdtent AND apcb002 = pmdtdocno AND apcb003 = pmdtseq ",      
                 #"            AND apca001 IN ('12','22')                                           ",       #161019-00035#1 mark
                  "         )  ",
                  " WHERE xrcaent = ? ",                                                               
                  " ORDER BY icab002 "      

 
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE aicq200_pb05 FROM g_sql
      DECLARE b_fill_curs05 CURSOR FOR aicq200_pb05
   END IF
 
   OPEN b_fill_curs05 USING g_enterprise
 
   LET l_ac = 1
   FOREACH b_fill_curs05 INTO g_xmda5_d[l_ac].xrca047,g_xmda5_d[l_ac].icab002,g_xmda5_d[l_ac].xrcbsite, 
       g_xmda5_d[l_ac].xrcbsite_desc,g_xmda5_d[l_ac].oobx003,g_xmda5_d[l_ac].xrcbdocno,g_xmda5_d[l_ac].xrca004, 
       g_xmda5_d[l_ac].xrca004_desc,g_xmda5_d[l_ac].xrca008,g_xmda5_d[l_ac].xrca008_desc,g_xmda5_d[l_ac].xrcb020, 
       g_xmda5_d[l_ac].xrcb020_desc,g_xmda5_d[l_ac].xrca100,g_xmda5_d[l_ac].xrca100_desc,g_xmda5_d[l_ac].xrca101, 
       g_xmda5_d[l_ac].xrcb105,g_xmda5_d[l_ac].xrcb115,g_xmda5_d[l_ac].xrcastus          #160503-00008#1 add xrcastus
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err() 
         EXIT FOREACH
      END IF
 
      CALL aicq200_detail_show("'5'")
 
      CALL aicq200_xrcb_t_mask()
 
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend =  "" 
         LET g_errparam.code   =  9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err() 
         EXIT FOREACH
      END IF
      INSERT INTO aicq200_tmp03( icab002,xmdasite,oobx003,xmdadocno,xmda004,
                                 xmda010, xmda009,xmda011,  xmda015,xmddseq,
                                xmddseq1,xmddseq2,xmdd001,  xmdd002,xmdd004,
                                 xmdd006, xmdd018,xmdd028,  xmdd030,xmdd029,
                                 xmdastus)                      #160503-00008#1 add
      VALUES (g_xmda5_d[l_ac].icab002,g_xmda5_d[l_ac].xrcbsite,g_xmda5_d[l_ac].oobx003,g_xmda5_d[l_ac].xrcbdocno,g_xmda5_d[l_ac].xrca004,  
                                   '', g_xmda5_d[l_ac].xrca008,g_xmda5_d[l_ac].xrcb020,  g_xmda5_d[l_ac].xrca100,                     '',
                                   '',                      '',                     '',                       '',                     '',
                                   '',                      '',                     '',                       '',g_xmda5_d[l_ac].xrcb115,
             g_xmda5_d[l_ac].xrcastus)                          #160503-00008#1 add                         
      LET l_ac = l_ac + 1
 
   END FOREACH
   
#table6#銷退/倉退
   #為避免影響執行效能，若是按上下筆就不重組SQL
   IF g_action_choice <> "fetch" OR cl_null(g_action_choice) THEN
      LET g_sql = "SELECT   xmdk035,icab002,xmdmsite,     '', oobx003, ",
                  "       xmdmdocno,xmdk007,      '',xmdmseq,xmdmseq1, ",
                  "         xmdm001,     '',      '',xmdm002, xmdm008, ",
                  "              '',xmdm009,      '',xmdm005,      '', ",
                  "         xmdm006,     '', xmdm007,xmdl050,      '', ",
                  "        xmdkstus                                    ",
                  "  FROM(                                             ",   #160503-00008#1 add 
                  #6銷退單
                  "        SELECT xmdkent,xmdk035,a.icab002 icab002,xmdmsite,'','axmt600' oobx003,  ",
                  "               xmdmdocno,   xmdk007,     '',xmdmseq,xmdmseq1,                    ",
                  "                 xmdm001,        '',     '',xmdm002, xmdm008,                    ",
                  "                      '',   xmdm009,     '',xmdm005,      '',                    ",
                  "                 xmdm006,        '',xmdm007,xmdl050,      '',                    ",
                  "                xmdkstus                                                         ", #160503-00008#1 add 
                  "          FROM xmdk_t,xmdl_t,xmdm_t,aicq200_tmp02 a                              ",
                  "         WHERE xmdkent = xmdlent AND xmdkdocno = xmdldocno                       ",
                  "           AND xmdlent = xmdment AND xmdldocno = xmdmdocno AND xmdlseq = xmdmseq ",
                  "           AND xmdl003 = a.xmdddocno AND xmdl004 = a.xmddseq AND xmdl005 = a.xmddseq1 AND xmdl006 = a.xmddseq2 ", 
                  "           AND a.oobx003 = 'axmt500'                                             ",
                  "           AND xmdk000 = '6'                                                     ",
                  "         UNION                                                                   ",
                  #7採購倉退維護作業14委外採購倉退作業
                  "        SELECT pmdsent xmdkent,pmds041,a.icab002 icab002,pmdusite,     '',       ",
                  "               CASE pmds000 WHEN '7' THEN 'apmt580' WHEN '14' THEN 'apmt581' END oobx003, ",
                  "               pmdudocno,  pmds007,      '',pmduseq,pmduseq1,                    ",
                  "                 pmdu001,       '',      '',pmdu002, pmdu009,                    ",
                  "                      '',  pmdu010, pmdu005,pmdu006,      '',                    ",
                  "                 pmdu007,       '', pmdu008,pmdt051,      '',                    ",
                  "                pmdsstus                                                         ",  #160503-00008#1 add        
                  "          FROM pmds_t,pmdt_t,pmdu_t,aicq200_tmp02 a                              ",
                  "         WHERE pmdsent = pmdtent AND pmdsdocno = pmdtdocno                       ",
                  "           AND pmdtent = pmduent AND pmdtdocno = pmdudocno AND pmdtseq = pmduseq ",
                  "           AND pmdt001 = a.xmdddocno AND pmdt002 = a.xmddseq AND pmdt003 = a.xmddseq1 AND pmdt004 = a.xmddseq2 ",         
                  "           AND a.oobx003 = 'apmt500'                                             ",
                  "           AND pmds000 IN ('7','14')                                             ",
                  "         )                                                                       ",
                  " WHERE xmdkent = ? ",                                                               
                  " ORDER BY icab002 "  
  
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE aicq200_pb06 FROM g_sql
      DECLARE b_fill_curs06 CURSOR FOR aicq200_pb06
   END IF
 
   OPEN b_fill_curs06 USING g_enterprise
 
   LET l_ac = 1
   FOREACH b_fill_curs06 INTO g_xmda6_d[l_ac].pmds041,g_xmda6_d[l_ac].icab002,g_xmda6_d[l_ac].pmdusite, 
       g_xmda6_d[l_ac].pmdusite_desc,g_xmda6_d[l_ac].oobx003,g_xmda6_d[l_ac].pmdudocno,g_xmda6_d[l_ac].pmds007, 
       g_xmda6_d[l_ac].pmds007_desc,g_xmda6_d[l_ac].pmduseq,g_xmda6_d[l_ac].pmduseq1,g_xmda6_d[l_ac].pmdu001, 
       g_xmda6_d[l_ac].pmdu001_desc,g_xmda6_d[l_ac].pmdu001_desc_1,g_xmda6_d[l_ac].pmdu002,g_xmda6_d[l_ac].pmdu009, 
       g_xmda6_d[l_ac].pmdu009_desc,g_xmda6_d[l_ac].pmdu010,g_xmda6_d[l_ac].pmdu005,g_xmda6_d[l_ac].pmdu006, 
       g_xmda6_d[l_ac].pmdu006_desc,g_xmda6_d[l_ac].pmdu007,g_xmda6_d[l_ac].pmdu007_desc,g_xmda6_d[l_ac].pmdu008, 
       g_xmda6_d[l_ac].pmdt051,g_xmda6_d[l_ac].pmdt051_desc,g_xmda6_d[l_ac].pmdsstus                                #160503-00008#1 add pmdsstus
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:b_fill_curs06" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err() 
         EXIT FOREACH
      END IF
 
      CALL aicq200_detail_show("'6'")
 
      CALL aicq200_pmdu_t_mask()
 
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend =  "" 
         LET g_errparam.code   =  9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err() 
         EXIT FOREACH
      END IF
      INSERT INTO aicq200_tmp03( icab002,xmdasite,oobx003,xmdadocno,xmda004,
                                 xmda010, xmda009,xmda011,  xmda015,xmddseq,
                                xmddseq1,xmddseq2,xmdd001,  xmdd002,xmdd004,
                                 xmdd006, xmdd018,xmdd028,  xmdd030,xmdd029,
                                 xmdastus)                                      #160503-00008#1 add 
      VALUES ( g_xmda6_d[l_ac].icab002,g_xmda6_d[l_ac].pmdusite,g_xmda6_d[l_ac].oobx003,g_xmda6_d[l_ac].pmdudocno,g_xmda6_d[l_ac].pmds007,  
                                    '',                      '',                     '',                       '',g_xmda6_d[l_ac].pmduseq,
              g_xmda6_d[l_ac].pmduseq1,                      '',g_xmda6_d[l_ac].pmdu001,  g_xmda6_d[l_ac].pmdu002,g_xmda6_d[l_ac].pmdu009,
               g_xmda6_d[l_ac].pmdu010,                      '',                     '',                       '',                     '',
              g_xmda6_d[l_ac].pmdsstus)                                  
      LET l_ac = l_ac + 1
 
   END FOREACH

#table7#Packing明細
   #為避免影響執行效能，若是按上下筆就不重組SQL
   IF g_action_choice <> "fetch" OR cl_null(g_action_choice) THEN
      LET g_sql = "SELECT   xmel017,   icab002,xmemsite,     '','axmt610',                        ",
                  "        xmemdocno,  xmel003,      '',xmemseq,  xmem003,                       ",
                  "               '',       '', xmem004,xmem005,       '',                       ",
                  "          xmem006,  xmem007, xmem008,xmem010,  xmem011,                       ",
                  "          xmem012,  xmem013,      '',xmem014,  xmem015,                       ",
                  "          xmem016,  xmem017, xmem018,xmem019,  xmelstus                       ",   #160503-00008#1 add xmelstus
                  "  FROM (                                                                      ", 
                  #來源：出通單                                                                      
                  "        SELECT   xmel017,a.icab002 icab002,xmemsite,     '',                  ",
                  "               xmemdocno,  xmel003,      '',xmemseq,  xmem003,                ",
                  "                      '',       '', xmem004,xmem005,       '',                ",
                  "                 xmem006,  xmem007, xmem008,xmem010,  xmem011,                ",
                  "                 xmem012,  xmem013,      '',xmem014,  xmem015,                ",
                  "                 xmem016,  xmem017, xmem018,xmem019,xmelent,                  ",
                  "                 xmelstus                                                     ",  #160503-00008#1 add xmelstus
                  "         FROM xmel_t,xmem_t,xmdh_t,aicq200_tmp02 a                            ",
                  "        WHERE xmelent = xmement AND xmeldocno = xmemdocno                     ",
                  "          AND xmement = xmdhent AND xmem001 = xmdhdocno AND xmem002 = xmdhseq ",
                  "          AND xmdh001 = a.xmdddocno AND xmdh002 = a.xmddseq AND xmdh003 = a.xmddseq1 AND xmdh004 = a.xmddseq2 ",
                  "          AND a.oobx003 = 'axmt500'                                           ",
                  "        UNION                                                                 ",
                  #來源：出貨單                                                                 
                  "        SELECT   xmel017,a.icab002 icab002,xmemsite,     '',                  ",
                  "               xmemdocno,  xmel003,      '',xmemseq,  xmem003,                ",
                  "                      '',       '', xmem004,xmem005,       '',                ",
                  "                 xmem006,  xmem007, xmem008,xmem010,  xmem011,                ",
                  "                 xmem012,  xmem013,      '',xmem014,  xmem015,                ",
                  "                 xmem016,  xmem017, xmem018,xmem019,  xmelent,                ",
                  "                xmelstus                                                      ",   #160503-00008#1 add xmelstus
                  "         FROM xmel_t,xmem_t,xmdl_t,aicq200_tmp02 a                            ",
                  "        WHERE xmelent = xmement AND xmeldocno = xmemdocno                     ",
                  "          AND xmement = xmdlent AND xmem001 = xmdldocno AND xmem002 = xmdlseq ",
                  "          AND xmdl003 = a.xmdddocno AND xmdl004 = a.xmddseq AND xmdl005 = a.xmddseq1 AND xmdl006 = a.xmddseq2 ",
                  "          AND a.oobx003 = 'axmt500'                                           ",
                  "        UNION                                                                 ",
                  #來源：倉退
                  "        SELECT   xmel017,a.icab002 icab002,xmemsite,     '',                  ",
                  "               xmemdocno,  xmel003,      '',xmemseq,  xmem003,                ",
                  "                      '',       '', xmem004,xmem005,       '',                ",
                  "                 xmem006,  xmem007, xmem008,xmem010,  xmem011,                ",
                  "                 xmem012,  xmem013,      '',xmem014,  xmem015,                ",
                  "                 xmem016,  xmem017, xmem018,xmem019,  xmelent,                ",
                  "                xmelstus                                                      ",   #160503-00008#1 add xmelstus
                  "         FROM xmel_t,xmem_t,pmdt_t,aicq200_tmp02 a                            ",
                  "        WHERE xmelent = xmement AND xmeldocno = xmemdocno                     ",
                  "          AND xmement = pmdtent AND xmem001 = pmdtdocno AND xmem002 = pmdtseq ",
                  "          AND pmdt001 = a.xmdddocno AND pmdt002 = a.xmddseq AND pmdt003 = a.xmddseq1 AND pmdt004 = a.xmddseq2 ",
                  "          AND a.oobx003 = 'apmt500'                                           ",
                  "       )                                                                      ",
                  " WHERE xmelent = ?                                                            "

      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE aicq200_pb07 FROM g_sql
      DECLARE b_fill_curs07 CURSOR FOR aicq200_pb07
   END IF
 
   OPEN b_fill_curs07 USING g_enterprise
 
   LET l_ac = 1
   FOREACH b_fill_curs07 INTO g_xmda7_d[l_ac].xmel017,g_xmda7_d[l_ac].icab002,g_xmda7_d[l_ac].xmemsite, 
       g_xmda7_d[l_ac].xmemsite_desc,g_xmda7_d[l_ac].oobx003,g_xmda7_d[l_ac].xmemdocno,g_xmda7_d[l_ac].xmel003, 
       g_xmda7_d[l_ac].xmel003_desc,g_xmda7_d[l_ac].xmemseq,g_xmda7_d[l_ac].xmem003,g_xmda7_d[l_ac].xmem003_desc, 
       g_xmda7_d[l_ac].xmem003_desc_1,g_xmda7_d[l_ac].xmem004,g_xmda7_d[l_ac].xmem005,g_xmda7_d[l_ac].xmem005_desc, 
       g_xmda7_d[l_ac].xmem006,g_xmda7_d[l_ac].xmem007,g_xmda7_d[l_ac].xmem008,g_xmda7_d[l_ac].xmem010, 
       g_xmda7_d[l_ac].xmem011,g_xmda7_d[l_ac].xmem012,g_xmda7_d[l_ac].xmem013,g_xmda7_d[l_ac].xmem013_desc, 
       g_xmda7_d[l_ac].xmem014,g_xmda7_d[l_ac].xmem015,g_xmda7_d[l_ac].xmem016,g_xmda7_d[l_ac].xmem017, 
       g_xmda7_d[l_ac].xmem018,g_xmda7_d[l_ac].xmem019,g_xmda7_d[l_ac].xmelstus                       #160503-00008#1 add xmelstus
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:b_fill_curs07" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err() 
         EXIT FOREACH
      END IF 
      
      CALL aicq200_detail_show("'7'")
 
      CALL aicq200_xmem_t_mask()
 
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend =  "" 
         LET g_errparam.code   =  9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err() 
         EXIT FOREACH
      END IF
      INSERT INTO aicq200_tmp03( icab002,xmdasite,oobx003,xmdadocno,xmda004,
                                 xmda010, xmda009,xmda011,  xmda015,xmddseq,
                                xmddseq1,xmddseq2,xmdd001,  xmdd002,xmdd004,
                                 xmdd006, xmdd018,xmdd028,  xmdd030,xmdd029,
                                xmdastus)                        #160503-00008#1 add 
      VALUES ( g_xmda7_d[l_ac].icab002,g_xmda7_d[l_ac].xmemsite,g_xmda7_d[l_ac].oobx003,g_xmda7_d[l_ac].xmemdocno,g_xmda7_d[l_ac].xmel003,  
                                    '',                      '',                     '',                       '',g_xmda7_d[l_ac].xmemseq,
                                    '',                      '',g_xmda7_d[l_ac].xmem003,                       '',g_xmda7_d[l_ac].xmem013,
               g_xmda7_d[l_ac].xmem012,                      '',                     '',                       '',                     '',
               g_xmda7_d[l_ac].xmelstus)                         #160503-00008#1 add                                   
      LET l_ac = l_ac + 1
      
 
   END FOREACH

#table8#Invoice
   #為避免影響執行效能，若是按上下筆就不重組SQL
   IF g_action_choice <> "fetch" OR cl_null(g_action_choice) THEN
      LET g_sql = "SELECT   xmdo055,icab002,xmdpsite,     '','axmt620',                          ", 
                  "       xmdpdocno,xmdpseq, xmdp008,     '',     '',                            ",
                  "         xmdp009,xmdp015,      '',xmdp016,xmdp021,                            ",
                  "         xmdp024,xmdp026,xmdp025,xmdostus                                     ",     #160503-00008#1 add  xmdostus       
                  "  FROM (                                                                      ",              
                  #來源：出通單、出貨單                                                                      
                  "        SELECT   xmdo055,a.icab002 icab002,xmdpsite,     '',                  ", 
                  "               xmdpdocno,xmdpseq, xmdp008,     '',     '',                    ",
                  "                 xmdp009,xmdp015,      '',xmdp016,xmdp021,                    ",
                  "                 xmdp024,xmdp026, xmdp025,xmdoent,xmdostus                    ",    #160503-00008#1 add  xmdostus
                  "         FROM xmdo_t,xmdp_t,aicq200_tmp02 a                                   ",
                  "        WHERE xmdoent = xmdpent AND xmdodocno = xmdpdocno                     ",
                  "          AND xmdp003 = a.xmdddocno AND xmdp004 = a.xmddseq AND xmdp005 = a.xmddseq1 AND xmdp006 = a.xmddseq2 ",
                  "          AND a.oobx003 = 'axmt500'                                           ",
                  "        UNION                                                                 ",
                  #來源：倉退
                  "        SELECT   xmdo055,a.icab002 icab002,xmdpsite,     '',                  ", 
                  "               xmdpdocno,xmdpseq, xmdp008,     '',     '',                    ",
                  "                 xmdp009,xmdp015,      '',xmdp016,xmdp021,                    ",
                  "                 xmdp024,xmdp026, xmdp025,xmdoent,xmdostus                    ",     #160503-00008#1 add xmdostus
                  "         FROM xmdo_t,xmdp_t,pmdt_t,aicq200_tmp02 a                            ",
                  "        WHERE xmdoent = xmdpent AND xmdodocno = xmdpdocno                     ",
                  "          AND xmdpent = pmdtent AND xmdp001 = pmdtdocno AND xmdp002 = pmdtseq ",
                  "          AND pmdt001 = a.xmdddocno AND pmdt002 = a.xmddseq AND pmdt003 = a.xmddseq1 AND pmdt004 = a.xmddseq2 ",
                  "          AND a.oobx003 = 'apmt500'                                           ",
                  "       )                                                                      ",
                  " WHERE xmdoent = ?                                                            "                                                                     
 
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE aicq200_pb08 FROM g_sql
      DECLARE b_fill_curs08 CURSOR FOR aicq200_pb08
   END IF
 
   OPEN b_fill_curs08 USING g_enterprise
 
   LET l_ac = 1
   FOREACH b_fill_curs08 INTO g_xmda8_d[l_ac].xmdo055,g_xmda8_d[l_ac].icab002,g_xmda8_d[l_ac].xmdpsite, 
       g_xmda8_d[l_ac].xmdpsite_desc,g_xmda8_d[l_ac].oobx003,g_xmda8_d[l_ac].xmdpdocno,g_xmda8_d[l_ac].xmdpseq, 
       g_xmda8_d[l_ac].xmdp008,g_xmda8_d[l_ac].xmdp008_desc,g_xmda8_d[l_ac].xmdp008_desc_1,g_xmda8_d[l_ac].xmdp009, 
       g_xmda8_d[l_ac].xmdp015,g_xmda8_d[l_ac].xmdp015_desc,g_xmda8_d[l_ac].xmdp016,g_xmda8_d[l_ac].xmdp021, 
       g_xmda8_d[l_ac].xmdp024,g_xmda8_d[l_ac].xmdp026,g_xmda8_d[l_ac].xmdp025,g_xmda8_d[l_ac].xmdostus             #160503-00008#1 add 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err() 
         EXIT FOREACH
      END IF
  
      CALL aicq200_detail_show("'8'")
 
      CALL aicq200_xmdp_t_mask()
 
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend =  "" 
         LET g_errparam.code   =  9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err() 
         EXIT FOREACH
      END IF
      INSERT INTO aicq200_tmp03( icab002,xmdasite,oobx003,xmdadocno,xmda004,
                                 xmda010, xmda009,xmda011,  xmda015,xmddseq,
                                xmddseq1,xmddseq2,xmdd001,  xmdd002,xmdd004,
                                 xmdd006, xmdd018,xmdd028,  xmdd030,xmdd029,
                                xmdastus)                                        #160503-00008#1 add 
      VALUES (g_xmda8_d[l_ac].icab002,g_xmda8_d[l_ac].xmdpsite,g_xmda8_d[l_ac].oobx003,g_xmda8_d[l_ac].xmdpdocno,                     '',  
                                   '',                      '',                     '',                       '',g_xmda8_d[l_ac].xmdpseq,
                                   '',                      '',g_xmda8_d[l_ac].xmdp008,  g_xmda8_d[l_ac].xmdp009,g_xmda8_d[l_ac].xmdp015,
              g_xmda8_d[l_ac].xmdp016, g_xmda8_d[l_ac].xmdp021,g_xmda8_d[l_ac].xmdp024,  g_xmda8_d[l_ac].xmdp026,g_xmda8_d[l_ac].xmdp025,
              g_xmda8_d[l_ac].xmdostus)                                           #160503-00008#1 add
      LET l_ac = l_ac + 1
 
   END FOREACH

#table9#單據明細
   IF g_action_choice <> "fetch" OR cl_null(g_action_choice) THEN
      LET g_sql = " SELECT icab002,xmdasite,      '',oobx003,xmdadocno, ",
                  "        xmda004,      '', xmda010,     '',  xmda009, ",
                  "             '', xmda011,      '',xmda015,       '', ",
                  "        xmddseq,xmddseq1,xmddseq2,xmdd001,       '', ",
                  "             '', xmdd002, xmdd004,     '',  xmdd006, ",
                  "        xmdd018, xmdd028, xmdd030,xmdd029, xmdastus  ",   #160503-00008#1 add
                  "   FROM aicq200_tmp03                                ",
                  "  ORDER BY icab002 "
  
 
      LET g_sql = cl_sql_add_mask(g_sql)             
      PREPARE aicq200_pb09 FROM g_sql
      DECLARE b_fill_curs09 CURSOR FOR aicq200_pb09
   END IF
 
   LET l_ac = 1
   FOREACH b_fill_curs09 INTO g_xmda9_d[l_ac].icab002,g_xmda9_d[l_ac].xmdasite,g_xmda9_d[l_ac].xmdasite_8_desc, 
       g_xmda9_d[l_ac].oobx003,g_xmda9_d[l_ac].xmdadocno,g_xmda9_d[l_ac].xmda004,g_xmda9_d[l_ac].xmda004_8_desc, 
       g_xmda9_d[l_ac].xmda010,g_xmda9_d[l_ac].xmda010_8_desc,g_xmda9_d[l_ac].xmda009,g_xmda9_d[l_ac].xmda009_8_desc, 
       g_xmda9_d[l_ac].xmda011,g_xmda9_d[l_ac].xmda011_8_desc,g_xmda9_d[l_ac].xmda015,g_xmda9_d[l_ac].xmda015_8_desc, 
       g_xmda9_d[l_ac].xmddseq,g_xmda9_d[l_ac].xmddseq1,g_xmda9_d[l_ac].xmddseq2,g_xmda9_d[l_ac].xmdd001, 
       g_xmda9_d[l_ac].xmdd001_8_desc,g_xmda9_d[l_ac].xmdd001_8_desc_1,g_xmda9_d[l_ac].xmdd002,g_xmda9_d[l_ac].xmdd004, 
       g_xmda9_d[l_ac].xmdd004_8_desc,g_xmda9_d[l_ac].xmdd006,g_xmda9_d[l_ac].xmdd018,g_xmda9_d[l_ac].xmdd028, 
       g_xmda9_d[l_ac].xmdd030,g_xmda9_d[l_ac].xmdd029,g_xmda9_d[l_ac].l_xmdastus_8

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:b_fill_curs09" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err() 
         EXIT FOREACH
      END IF      
 
      CALL aicq200_detail_show("'9'")
 
      CALL aicq200_xmdd_t_mask()
 
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend =  "" 
         LET g_errparam.code   =  9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err() 
         EXIT FOREACH
      END IF      
      LET l_ac = l_ac + 1
   END FOREACH


#Page2
   CALL g_xmda2_d.deleteElement(g_xmda2_d.getLength())
#Page3
   CALL g_xmda3_d.deleteElement(g_xmda3_d.getLength())
#Page4
   CALL g_xmda4_d.deleteElement(g_xmda4_d.getLength())
#Page5
   CALL g_xmda5_d.deleteElement(g_xmda5_d.getLength())
#Page6
   CALL g_xmda6_d.deleteElement(g_xmda6_d.getLength())
#Page7
   CALL g_xmda7_d.deleteElement(g_xmda7_d.getLength())
#Page8
   CALL g_xmda8_d.deleteElement(g_xmda8_d.getLength())
#Page9
   CALL g_xmda9_d.deleteElement(g_xmda9_d.getLength())

END FUNCTION

 
{</section>}
 
