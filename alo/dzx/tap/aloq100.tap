<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="aloq100" std_prog="aloq100" erpver="1.0" module="ALO" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="function.aloq100_b_fill_head" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 單頭頁籤資訊填充
# Memo...........:
# Usage..........: CALL aloq100_b_fill_head()
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION aloq100_b_fill_head()
   DEFINE ls_i     LIKE type_t.num5
   DEFINE ls_j     LIKE type_t.num5


   IF cl_null(g_head_wc) THEN
      LET g_head_wc = " 1=1"
   END IF
   IF cl_null(g_wc_table) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc_filter) THEN
      LET g_wc_filter = " 1=1"
   END IF

   CALL g_logt2_d.clear()

   LET g_sql = "SELECT COUNT(UNIQUE logt009) FROM logt_t",
               " WHERE logtent = ? AND ",g_wc," AND ",g_head_wc,
                 " AND ",g_wc_filter,
                 " AND logt009 = ?"
   PREPARE b_fill_head_count_pre FROM g_sql

   # 計算筆數
   # 總數
   LET g_sql = "SELECT COUNT(*) FROM logt_t",
               " WHERE logtent = ?",
                 " AND ",g_wc ," AND ",g_head_wc,
                 " AND ",g_wc_filter,
                 " AND logt009 = ?"
   PREPARE b_fill_head_totsum_pre FROM g_sql

   # 細項筆數
   LET g_sql = "SELECT COUNT(*) FROM logt_t",
               " WHERE logtent = ?",
                 " AND ",g_wc ," AND ",g_head_wc,
                 " AND ",g_wc_filter,
                 " AND logt009 = ?",
                 " AND logt001 = ?"
   PREPARE b_fill_head_typesum_pre FROM g_sql

   # 需依照指定的4個等級(E、I、W、G)取出資料呈現
   FOR ls_i = 1 TO 4   # 目前事件等級只有4個
      LET ls_j = 0
      CASE
         WHEN ls_i = 1
            EXECUTE b_fill_head_count_pre USING g_enterprise,"E" INTO ls_j
            IF ls_j > 0 THEN
               LET l_ac = g_logt2_d.getLength() + 1
               LET g_logt2_d[l_ac].logt009 = "E"
            END IF

         WHEN ls_i = 2
            EXECUTE b_fill_head_count_pre USING g_enterprise,"I" INTO ls_j
            IF ls_j > 0 THEN
               LET l_ac = g_logt2_d.getLength() + 1
               LET g_logt2_d[l_ac].logt009 = "I"
            END IF

         WHEN ls_i = 3
            EXECUTE b_fill_head_count_pre USING g_enterprise,"W" INTO ls_j
            IF ls_j > 0 THEN
               LET l_ac = g_logt2_d.getLength() + 1
               LET g_logt2_d[l_ac].logt009 = "W"
            END IF

         WHEN ls_i = 4
            EXECUTE b_fill_head_count_pre USING g_enterprise,"G" INTO ls_j
            IF ls_j > 0 THEN
               LET l_ac = g_logt2_d.getLength() + 1
               LET g_logt2_d[l_ac].logt009 = "G"
            END IF
      END CASE
      
      IF ls_j > 0 THEN
         # 計算筆數
         # 總數
         EXECUTE b_fill_head_totsum_pre USING g_enterprise,g_logt2_d[l_ac].logt009 INTO g_logt2_d[l_ac].totsum

         # 細項筆數
         # 系統與程式運行
         EXECUTE b_fill_head_typesum_pre USING g_enterprise,g_logt2_d[l_ac].logt009,"A" INTO g_logt2_d[l_ac].spnum

         # 資料處理
         EXECUTE b_fill_head_typesum_pre USING g_enterprise,g_logt2_d[l_ac].logt009,"B" INTO g_logt2_d[l_ac].dnum

         # 服務與功能
         EXECUTE b_fill_head_typesum_pre USING g_enterprise,g_logt2_d[l_ac].logt009,"C" INTO g_logt2_d[l_ac].sfnum
      END IF
   END FOR
END FUNCTION]]>
  </point>
  <point name="function.aloq100_data_delete" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 刪除log資料
# Memo...........:
# Usage..........: CALL aloq100_data_detele()
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION aloq100_data_delete()
   DEFINE ls_msg    STRING
   DEFINE ls_str    STRING

   IF cl_null(g_head_wc) THEN
      LET g_head_wc = " 1=1"
   END IF
   IF cl_null(g_wc_table) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc_filter) THEN
      LET g_wc_filter = " 1=1"
   END IF

   LET ls_msg = "[",cl_get_feldname('logt009',g_lang),"：",g_logt2_d[g_detail_idx2].logt009," ]"
   LET ls_str = cl_getmsg('alo-00001',g_lang)
   LET ls_str = "(alo-00001)",cl_replace_str(ls_str, '%1', ls_msg)
   
   IF cl_ask_confirm2('',ls_str) THEN
      LET g_sql = "DELETE FROM logt_t",
                  " WHERE logtent = ",g_enterprise,
                    " AND ",g_wc,
                    " AND ",g_head_wc,
                    " AND ",g_wc_filter,
                    " AND logt009 = '",g_logt2_d[g_detail_idx2].logt009,"'"
      PREPARE aloq100_delete_all_pre FROM g_sql
      EXECUTE aloq100_delete_all_pre
      IF SQLCA.SQLCODE THEN
         CALL cl_err("DELETE_ALL:",SQLCA.sqlcode,1)
      END IF
   END IF
END FUNCTION]]>
  </point>
  <point name="function.aloq100_org_data_del" order="3" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 刪除原始來源table的資料
# Memo...........:
# Usage..........: CALL aloq100_org_data_del(ls_action,ls_where)
# Input parameter: ls_action      動作
#                : ls_where       WHERE條件
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION aloq100_org_data_del(ls_action,ls_where)
   DEFINE ls_action      STRING
   DEFINE ls_where       STRING
   DEFINE ls_table       STRING
   DEFINE ls_table_name  STRING
   DEFINE ls_msg         STRING
   DEFINE ls_str         STRING


   IF cl_null(ls_action) THEN
      RETURN
   END IF
   IF cl_null(ls_where) THEN
      LET ls_where = " 1=1"
   END IF

   LET ls_table = ls_action.subString(ls_action.getIndexOf("del_",1)+4,ls_action.getLength()),"_t"
   LET ls_table_name = cl_get_table_name(ls_table,g_lang)
   LET ls_msg = "[",ls_table_name,"(",ls_table,") ]"
   LET ls_str = cl_getmsg('alo-00002',g_lang)
   LET ls_str = "(alo-00002)\n",cl_replace_str(ls_str, '%1', ls_msg)

   IF cl_ask_confirm2('',ls_str) THEN
      LET g_sql = "DELETE FROM ",ls_table,
                  " WHERE ",ls_where

      PREPARE aloq100_delete_org_pre FROM g_sql
      EXECUTE aloq100_delete_org_pre
      IF SQLCA.SQLCODE THEN
         CALL cl_err("DELETE_ORG:",SQLCA.sqlcode,1)
      END IF
   END IF
END FUNCTION]]>
  </point>
  <point name="b_fill.sql_after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_sql = cl_replace_str(g_sql, 'SELECT  UNIQUE', 'SELECT')

   LET ls_str = NULL
   IF g_sql.getIndexOf('ORDER BY',1) > 0 THEN
      LET ls_str = g_sql.subString(g_sql.getIndexOf('ORDER BY',1),g_sql.getLength())
      LET g_sql = g_sql.subString(1,g_sql.getIndexOf('ORDER BY',1)-1)
   END IF
   LET g_sql = g_sql," AND logt009 = '",g_logt2_d[g_detail_idx2].logt009,"' "
   IF NOT cl_null(ls_str) THEN
      LET g_sql = g_sql, ls_str
   END IF]]>
  </point>
  <point name="b_fill.sql_before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF cl_null(g_head_wc) THEN
      LET g_head_wc = " 1=1"
   END IF]]>
  </point>
  <point name="construct.a.page1.b_logt002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)]]>
  </point>
  <point name="cs.after_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL aloq100_b_fill_head()]]>
  </point>
  <point name="detail_show.body.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_logt_d[l_ac].logt004
            CALL ap_ref_array2(g_ref_fields,"SELECT gzzal003 FROM gzzal_t WHERE gzzal001=? AND gzzal002='"||g_lang||"'","") RETURNING g_rtn_fields
            LET g_logt_d[l_ac].logt004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_logt_d[l_ac].logt004_desc
]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[TYPE type_g_logt2_d RECORD
     logt009        LIKE logt_t.logt009,
     totsum         LIKE type_t.num10,
     spnum          LIKE type_t.num10,
     dnum           LIKE type_t.num10,
     sfnum          LIKE type_t.num10
                    END RECORD
DEFINE g_logt2_d    DYNAMIC ARRAY OF type_g_logt2_d
DEFINE g_wc_table2  STRING
DEFINE ls_str       STRING
DEFINE g_first      LIKE type_t.chr1
DEFINE g_head_wc    STRING]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_combo_scc('b_logt009','110')
   LET g_first = "Y"]]>
  </point>
  <point name="input.a.page1.logt001" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_logt_d[g_detail_idx].logt001 IS NOT NULL AND g_logt_d[g_detail_idx].logt002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_logt_d[g_detail_idx].logt001 != g_logt_d_t.logt001 OR g_logt_d[g_detail_idx].logt002 != g_logt_d_t.logt002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM logt_t WHERE "||"logtent = '" ||g_enterprise|| "' AND "||"logt001 = '"||g_logt_d[g_detail_idx].logt001 ||"' AND "|| "logt002 = '"||g_logt_d[g_detail_idx].logt002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.logt002" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_logt_d[g_detail_idx].logt001 IS NOT NULL AND g_logt_d[g_detail_idx].logt002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_logt_d[g_detail_idx].logt001 != g_logt_d_t.logt001 OR g_logt_d[g_detail_idx].logt002 != g_logt_d_t.logt002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM logt_t WHERE "||"logtent = '" ||g_enterprise|| "' AND "||"logt001 = '"||g_logt_d[g_detail_idx].logt001 ||"' AND "|| "logt002 = '"||g_logt_d[g_detail_idx].logt002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="menu.data_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL aloq100_data_delete()]]>
  </point>
  <point name="menu.org_data_del" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               MENU "" ATTRIBUTE(STYLE="popup")
                  ON ACTION del_loga
                     LET g_action_choice="del_loga"
                     CALL aloq100_org_data_del("del_loga","")
                     EXIT DIALOG

                  ON ACTION del_logb
                     LET g_action_choice="del_logb"
                     CALL aloq100_org_data_del("del_logb","")
                     EXIT DIALOG

                  ON ACTION del_logd
                     LET g_action_choice="del_logd"
                     CALL aloq100_org_data_del("del_logd","")
                     EXIT DIALOG

                  ON ACTION del_logi
                     LET g_action_choice="del_logi"
                     CALL aloq100_org_data_del("del_logi","")
                     EXIT DIALOG

                  ON ACTION del_logs
                     LET g_action_choice="del_logs"
                     CALL aloq100_org_data_del("del_logs","")
                     EXIT DIALOG

                  ON ACTION del_logw
                     LET g_action_choice="del_logw"
                     CALL aloq100_org_data_del("del_logw","")
                     EXIT DIALOG

               END MENU]]>
  </point>
  <point name="query.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CONSTRUCT g_head_wc ON logt009 FROM s_detail2[1].b_logt009
      END CONSTRUCT]]>
  </point>
  <point name="query.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         IF g_first = "Y" THEN
            LET g_first = "N"
            EXIT DIALOG
         ELSE
            NEXT FIELD b_logt009
         END IF]]>
  </point>
  <point name="ui_dialog.bef_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL DIALOG.setSelectionMode("s_detail2", 1)]]>
  </point>
  <point name="ui_dialog.more_displayarray" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         DISPLAY ARRAY g_logt2_d TO s_detail2.* ATTRIBUTE(COUNT=g_detail_cnt)
            BEFORE ROW
               LET g_detail_idx2 = DIALOG.getCurrentRow("s_detail2")
               LET l_ac = g_detail_idx2
               CALL aloq100_b_fill()
         END DISPLAY]]>
  </point>
  <section id="aloq100.b_fill" ver="4" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION aloq100_b_fill()
   {<Local define>}
   DEFINE ls_wc           STRING
   {</Local define>}
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   IF cl_null(g_wc_filter) THEN
      LET g_wc_filter = " 1=1"
   END IF
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   
   LET ls_wc = g_wc, " AND ", g_wc2, " AND ", g_wc_filter
   
   LET g_sql = "SELECT  UNIQUE logt001,logt002,logt003,logt004,'',logt005,logt006,logt007,logt008 FROM logt_t", 

 
 
               "",
               " WHERE logtent= ? AND 1=1 AND ", ls_wc
    
   LET g_sql = g_sql, " ORDER BY logt_t.logt001,logt_t.logt002"
  
   #add-point:b_fill段sql_after
   {<point name="b_fill.sql_after"/>}
   #end add-point
  
   PREPARE aloq100_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR aloq100_pb
   
   OPEN b_fill_curs USING g_enterprise
 
   CALL g_logt_d.clear()
 
   #add-point:陣列清空
   {<point name="b_fill.array_clear" />}
   #end add-point
 
   LET g_cnt = l_ac
   LET l_ac = 1   
#  ERROR "Searching!" 
 
   FOREACH b_fill_curs INTO g_logt_d[l_ac].logt001,g_logt_d[l_ac].logt002,g_logt_d[l_ac].logt003,g_logt_d[l_ac].logt004, 
       g_logt_d[l_ac].logt004_desc,g_logt_d[l_ac].logt005,g_logt_d[l_ac].logt006,g_logt_d[l_ac].logt007, 
       g_logt_d[l_ac].logt008
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      LET g_logt_d[l_ac].sel = "N"
      #LET g_logt_d[l_ac].statepic = cl_get_actipic(g_logt_d[l_ac].statepic)
 
      
 
      #add-point:b_fill段資料填充
      {<point name="b_fill.fill"/>}
      #end add-point
      
      CALL aloq100_detail_show("'1'")      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            CALL cl_err( "", 9035, 1 )
         END IF
         EXIT FOREACH
      END IF
      
   END FOREACH
   LET g_error_show = 0
   
   CALL g_logt_d.deleteElement(g_logt_d.getLength())   
   #add-point:陣列長度調整
   {<point name="b_fill.array_deleteElement" />}
   #end add-point
   
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.others.fill"/>}
   #end add-point
    
   LET g_detail_cnt = l_ac - 1 
   DISPLAY g_detail_cnt TO FORMONLY.h_count
   LET g_detail_idx = 1
   DISPLAY g_detail_idx TO FORMONLY.h_index
   LET l_ac = g_cnt
   LET g_cnt = 0
   
   CLOSE b_fill_curs
   FREE aloq100_pb
   
   LET l_ac = 1
   CALL aloq100_fetch()
   
      CALL aloq100_filter_show('logt001','b_logt001')
   CALL aloq100_filter_show('logt002','b_logt002')
   CALL aloq100_filter_show('logt003','b_logt003')
   CALL aloq100_filter_show('logt004','b_logt004')
   CALL aloq100_filter_show('logt005','b_logt005')
   CALL aloq100_filter_show('logt006','b_logt006')
   CALL aloq100_filter_show('logt007','b_logt007')
   CALL aloq100_filter_show('logt008','b_logt008')
 
   
END FUNCTION
]]>
  </section>
  <section id="aloq100.delete" ver="1" status="" src="s">
    <![CDATA[#+ delete
PRIVATE FUNCTION aloq100_delete()
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point
 
   #add-point:delete段control
   {<point name="delete.control"/>}
   #end add-point 
END FUNCTION
]]>
  </section>
  <section id="aloq100.description" ver="1" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PD版次:1) Build-000033
#+ 
#+ Filename...: aloq100
#+ Description: 事件檢視器
#+ Creator....: 00824(2014/05/23)
#+ Modifier...: 00824(2014/06/04)
#+ Buildtype..: 應用 q02 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="aloq100.detail_show" ver="1" status="" src="s">
    <![CDATA[#+ 顯示相關資料
PRIVATE FUNCTION aloq100_detail_show(ps_page)
   DEFINE ps_page    STRING
   #add-point:show段define
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   
 
   #讀入ref值
   IF ps_page.getIndexOf("'1'",1) > 0 THEN
      #帶出公用欄位reference值page1
      
 
      #add-point:show段單身reference
      {<point name="detail_show.body.reference"/>}
      #end add-point
   END IF
    
 
 
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="aloq100.fetch" ver="1" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION aloq100_fetch()
   {<Local define>}
   DEFINE li_ac           LIKE type_t.num5
   {</Local define>}
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point
   
 
   #add-point:陣列清空
   {<point name="fetch.array_clear" />}
   #end add-point
   
   LET li_ac = l_ac 
   
 
   
   #add-point:單身填充後
   {<point name="fetch.after_fill" />}
   #end add-point 
   
 
   #add-point:陣列筆數調整
   {<point name="fetch.array_deleteElement" />}
   #end add-point
   
   LET l_ac = li_ac
   
END FUNCTION
]]>
  </section>
  <section id="aloq100.filter" ver="1" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION aloq100_filter()
   {<Local define>}
   {</Local define>}
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point    
   
   LET l_ac = 1
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON logt001,logt002,logt003,logt004,logt005,logt006,logt007,logt008
                          FROM s_detail1[1].b_logt001,s_detail1[1].b_logt002,s_detail1[1].b_logt003, 
                              s_detail1[1].b_logt004,s_detail1[1].b_logt005,s_detail1[1].b_logt006,s_detail1[1].b_logt007, 
                              s_detail1[1].b_logt008
 
         BEFORE CONSTRUCT
#saki       CALL cl_qbe_init()
                     DISPLAY aloq100_filter_parser('logt001') TO s_detail1[1].b_logt001
            DISPLAY aloq100_filter_parser('logt002') TO s_detail1[1].b_logt002
            DISPLAY aloq100_filter_parser('logt003') TO s_detail1[1].b_logt003
            DISPLAY aloq100_filter_parser('logt004') TO s_detail1[1].b_logt004
            DISPLAY aloq100_filter_parser('logt005') TO s_detail1[1].b_logt005
            DISPLAY aloq100_filter_parser('logt006') TO s_detail1[1].b_logt006
            DISPLAY aloq100_filter_parser('logt007') TO s_detail1[1].b_logt007
            DISPLAY aloq100_filter_parser('logt008') TO s_detail1[1].b_logt008
 
 
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
 
      ON ACTION accept
         ACCEPT DIALOG 
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
 
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = g_wc_filter, " "
   ELSE
      LET g_wc_filter = g_wc_filter_t
   END IF
   
      CALL aloq100_filter_show('logt001','b_logt001')
   CALL aloq100_filter_show('logt002','b_logt002')
   CALL aloq100_filter_show('logt003','b_logt003')
   CALL aloq100_filter_show('logt004','b_logt004')
   CALL aloq100_filter_show('logt005','b_logt005')
   CALL aloq100_filter_show('logt006','b_logt006')
   CALL aloq100_filter_show('logt007','b_logt007')
   CALL aloq100_filter_show('logt008','b_logt008')
 
    
   CALL aloq100_b_fill()
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
 
END FUNCTION
]]>
  </section>
  <section id="aloq100.filter_parser" ver="1" status="" src="s">
    <![CDATA[#+ filter欄位解析
PRIVATE FUNCTION aloq100_filter_parser(ps_field)
   {<Local define>}
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   {</Local define>}
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="aloq100.filter_show" ver="2" status="" src="s">
    <![CDATA[#+ Browser標題欄位顯示搜尋條件
PRIVATE FUNCTION aloq100_filter_show(ps_field,ps_object)
   DEFINE ps_field         STRING
   DEFINE ps_object        STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.", ps_object
 
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LET ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = aloq100_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="aloq100.global" ver="2" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_logt_d RECORD
       #statepic       LIKE type_t.chr1,
       sel            LIKE type_t.chr1,
       logt001 LIKE logt_t.logt001, 
   logt002 DATETIME YEAR TO SECOND, 
   logt003 LIKE logt_t.logt003, 
   logt004 LIKE logt_t.logt004, 
   logt004_desc LIKE type_t.chr500, 
   logt005 LIKE logt_t.logt005, 
   logt006 LIKE logt_t.logt006, 
   logt007 LIKE logt_t.logt007, 
   logt008 LIKE logt_t.logt008 
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_master                     type_g_logt_d
DEFINE g_master_t                   type_g_logt_d
DEFINE g_logt_d          DYNAMIC ARRAY OF type_g_logt_d
DEFINE g_logt_d_t        type_g_logt_d
 
      
DEFINE g_wc                 STRING
DEFINE g_wc_t               STRING                        #儲存 user 的查詢條件
DEFINE g_wc2                STRING
DEFINE g_wc_filter          STRING
DEFINE g_wc_filter_t        STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num5              
DEFINE l_ac_d               LIKE type_t.num5              #單身idx 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_current_page       LIKE type_t.num5              #目前所在頁數
DEFINE g_detail_cnt         LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_detail_cnt2        LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_master_idx         LIKE type_t.num5
DEFINE g_detail_idx         LIKE type_t.num5
DEFINE g_detail_idx2        LIKE type_t.num5
DEFINE g_hyper_url          STRING                        #hyperlink的主要網址
 
 
#多table用wc
DEFINE g_wc_table           STRING
 
 
 
DEFINE g_wc_filter_table           STRING
 
 
 
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="aloq100.init" ver="2" status="" src="s">
    <![CDATA[#+ 畫面資料初始化
PRIVATE FUNCTION aloq100_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point   
   
   LET g_error_show  = 1
   LET g_wc_filter   = " 1=1"
   LET g_wc_filter_t = " 1=1"
   
      CALL cl_set_combo_scc('b_logt001','116') 
 
   
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aloq100.insert" ver="1" status="" src="s">
    <![CDATA[#+ insert
PRIVATE FUNCTION aloq100_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point
 
   #add-point:insert段control
   {<point name="insert.control"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="aloq100.main" ver="2" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("alo","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = ""
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   DECLARE aloq100_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE ",
               " FROM ",
               " WHERE  "
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE aloq100_master_referesh FROM g_sql
 
   #add-point:main段define_sql
   {<point name="main.body.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = ""
   #add-point:main段define_sql
   {<point name="main.body.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE aloq100_bcl CURSOR FROM g_forupd_sql
 
 
 
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
 
   ELSE
      
      #畫面開啟 (identifier)
      OPEN WINDOW w_aloq100 WITH FORM cl_ap_formpath("alo",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aloq100_init()   
 
      #進入選單 Menu (="N")
      CALL aloq100_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aloq100
      
   END IF 
   
   CLOSE aloq100_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="aloq100.modify" ver="1" status="" src="s">
    <![CDATA[#+ modify
PRIVATE FUNCTION aloq100_modify()
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point
 
   #add-point:modify段control
   {<point name="modify.control"/>}
   #end add-point 
END FUNCTION
]]>
  </section>
  <section id="aloq100.other_function" ver="1" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="aloq100.query" ver="3" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aloq100_query()
   {<Local define>}
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   {</Local define>}
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point 
   
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_logt_d.clear()
   LET g_wc_filter = " 1=1"
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
   
   LET g_qryparam.state = "c"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   
   #wc備份
   LET ls_wc = g_wc
   LET g_master_idx = l_ac
 
   
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      #add-point:query段before_construct
      {<point name="query.before_construct"/>}
      #end add-point 
 
      #單身根據table分拆construct
      CONSTRUCT g_wc_table ON logt001,logt002,logt003,logt004,logt005,logt006,logt007,logt008
           FROM s_detail1[1].b_logt001,s_detail1[1].b_logt002,s_detail1[1].b_logt003,s_detail1[1].b_logt004, 
               s_detail1[1].b_logt005,s_detail1[1].b_logt006,s_detail1[1].b_logt007,s_detail1[1].b_logt008 

                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #----<<b_logt001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_logt001
            #add-point:BEFORE FIELD b_logt001
            {<point name="construct.b.page1.b_logt001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_logt001
            
            #add-point:AFTER FIELD b_logt001
            {<point name="construct.a.page1.b_logt001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.b_logt001
         ON ACTION controlp INFIELD b_logt001
            #add-point:ON ACTION controlp INFIELD b_logt001
            {<point name="construct.c.page1.b_logt001" />}
            #END add-point
 
         #----<<b_logt002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_logt002
            #add-point:BEFORE FIELD b_logt002
            {<point name="construct.b.page1.b_logt002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_logt002
            
            #add-point:AFTER FIELD b_logt002
            {<point name="construct.a.page1.b_logt002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.b_logt002
         ON ACTION controlp INFIELD b_logt002
            #add-point:ON ACTION controlp INFIELD b_logt002
            {<point name="construct.c.page1.b_logt002" />}
            #END add-point
 
         #----<<b_logt003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_logt003
            #add-point:BEFORE FIELD b_logt003
            {<point name="construct.b.page1.b_logt003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_logt003
            
            #add-point:AFTER FIELD b_logt003
            {<point name="construct.a.page1.b_logt003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.b_logt003
         ON ACTION controlp INFIELD b_logt003
            #add-point:ON ACTION controlp INFIELD b_logt003
            {<point name="construct.c.page1.b_logt003" />}
            #END add-point
 
         #----<<b_logt004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_logt004
            #add-point:BEFORE FIELD b_logt004
            {<point name="construct.b.page1.b_logt004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_logt004
            
            #add-point:AFTER FIELD b_logt004
            {<point name="construct.a.page1.b_logt004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.b_logt004
         ON ACTION controlp INFIELD b_logt004
            #add-point:ON ACTION controlp INFIELD b_logt004
            {<point name="construct.c.page1.b_logt004" />}
            #END add-point
 
         #----<<b_logt004_desc>>----
         #----<<b_logt005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_logt005
            #add-point:BEFORE FIELD b_logt005
            {<point name="construct.b.page1.b_logt005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_logt005
            
            #add-point:AFTER FIELD b_logt005
            {<point name="construct.a.page1.b_logt005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.b_logt005
         ON ACTION controlp INFIELD b_logt005
            #add-point:ON ACTION controlp INFIELD b_logt005
            {<point name="construct.c.page1.b_logt005" />}
            #END add-point
 
         #----<<b_logt006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_logt006
            #add-point:BEFORE FIELD b_logt006
            {<point name="construct.b.page1.b_logt006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_logt006
            
            #add-point:AFTER FIELD b_logt006
            {<point name="construct.a.page1.b_logt006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.b_logt006
         ON ACTION controlp INFIELD b_logt006
            #add-point:ON ACTION controlp INFIELD b_logt006
            {<point name="construct.c.page1.b_logt006" />}
            #END add-point
 
         #----<<b_logt007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_logt007
            #add-point:BEFORE FIELD b_logt007
            {<point name="construct.b.page1.b_logt007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_logt007
            
            #add-point:AFTER FIELD b_logt007
            {<point name="construct.a.page1.b_logt007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.b_logt007
         ON ACTION controlp INFIELD b_logt007
            #add-point:ON ACTION controlp INFIELD b_logt007
            {<point name="construct.c.page1.b_logt007" />}
            #END add-point
 
         #----<<b_logt008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_logt008
            #add-point:BEFORE FIELD b_logt008
            {<point name="construct.b.page1.b_logt008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_logt008
            
            #add-point:AFTER FIELD b_logt008
            {<point name="construct.a.page1.b_logt008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.b_logt008
         ON ACTION controlp INFIELD b_logt008
            #add-point:ON ACTION controlp INFIELD b_logt008
            {<point name="construct.c.page1.b_logt008" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
 
  
      #add-point:query段more_construct
      {<point name="query.more_construct"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:query段befor_dialog
         {<point name="query.before_dialog"/>}
         #end add-point
         
 
      ON ACTION accept
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG 
   END DIALOG
 
   
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc = ls_wc
   ELSE
      LET g_master_idx = 1
   END IF
   
   LET g_wc = g_wc_table 
 
 
        
   LET g_wc2 = " 1=1"
 
        
   #add-point:cs段after_construct
   {<point name="cs.after_construct"/>}
   #end add-point
        
   LET g_error_show = 1
   CALL aloq100_b_fill()
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      CALL cl_err("",-100,1)
   END IF
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
   
END FUNCTION
]]>
  </section>
  <section id="aloq100.reproduce" ver="1" status="" src="s">
    <![CDATA[#+ reproduce
PRIVATE FUNCTION aloq100_reproduce()
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point
 
   #add-point:reproduce段control
   {<point name="reproduce.control"/>}
   #end add-point 
END FUNCTION
]]>
  </section>
  <section id="aloq100.ui_dialog" ver="4" status="" src="s">
    <![CDATA[#+ 功能選單 
PRIVATE FUNCTION aloq100_ui_dialog()
   {<Local define>}
   DEFINE li_idx   LIKE type_t.num5
   {</Local define>}
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point 
 
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   
   LET g_action_choice = " "  
   CALL cl_set_act_visible("accept,cancel", FALSE)
         
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   
   CALL aloq100_query()
   
   WHILE TRUE
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_logt_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               LET g_current_page = 1
 
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.h_index
               DISPLAY g_logt_d.getLength() TO FORMONLY.h_count
               LET g_master_idx = l_ac
               CALL aloq100_fetch()
               #add-point:input段before row
               {<point name="input.body.before_row"/>}
               #end add-point  
            
            #自訂ACTION(detail_show,page_1)
            
               
         END DISPLAY
      
 
         
 
      
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         BEFORE DIALOG      
            CALL DIALOG.setSelectionMode("s_detail1", 1)
 
            #add-point:ui_dialog段before dialog
            {<point name="ui_dialog.bef_dialog"/>}
            #end add-point
 
            NEXT FIELD sel
      
         
         #+ 此段落由子樣板a43產生
         ON ACTION datainfo
            LET g_action_choice="datainfo"
            IF cl_auth_chk_act("datainfo") THEN
               
               #add-point:ON ACTION datainfo
               {<point name="menu.datainfo" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aloq100_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION org_data_del
            LET g_action_choice="org_data_del"
            IF cl_auth_chk_act("org_data_del") THEN
               
               #add-point:ON ACTION org_data_del
               {<point name="menu.org_data_del" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aloq100_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION condition_delete
            LET g_action_choice="condition_delete"
            IF cl_auth_chk_act("condition_delete") THEN
               
               #add-point:ON ACTION condition_delete
               {<point name="menu.condition_delete" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION data_export
            LET g_action_choice="data_export"
            IF cl_auth_chk_act("data_export") THEN
               
               #add-point:ON ACTION data_export
               {<point name="menu.data_export" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION data_delete
            LET g_action_choice="data_delete"
            IF cl_auth_chk_act("data_delete") THEN
               
               #add-point:ON ACTION data_delete
               {<point name="menu.data_delete" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
      
         #選擇全部
         ON ACTION selall
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 1)
            FOR li_idx = 1 TO g_logt_d.getLength()
               LET g_logt_d[li_idx].sel = "Y"
            END FOR
 
            #add-point:ui_dialog段on action selall
            {<point name="ui_dialog.onaction_selall"/>}
            #end add-point
 
         #取消全部
         ON ACTION selnone
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 0)
            FOR li_idx = 1 TO g_logt_d.getLength()
               LET g_logt_d[li_idx].sel = "N"
            END FOR
 
            #add-point:ui_dialog段on action selnone
            {<point name="ui_dialog.onaction_selnone"/>}
            #end add-point
 
         #勾選所選資料
         ON ACTION sel
            FOR li_idx = 1 TO g_logt_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_logt_d[li_idx].sel = "Y"
               END IF
            END FOR
 
            #add-point:ui_dialog段on action sel
            {<point name="ui_dialog.onaction_sel"/>}
            #end add-point
 
         #取消所選資料
         ON ACTION unsel
            FOR li_idx = 1 TO g_logt_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_logt_d[li_idx].sel = "N"
               END IF
            END FOR
 
            #add-point:ui_dialog段on action unsel
            {<point name="ui_dialog.onaction_unsel"/>}
            #end add-point
      
         ON ACTION filter
            LET g_action_choice="filter"
            CALL aloq100_filter()
            #add-point:ON ACTION filter
            {<point name="menu.filter" />}
            #END add-point
            EXIT DIALOG
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
 
         ON ACTION qbeclear   # 條件清除
            CLEAR FORM
 
         ON ACTION datarefresh   # 重新整理
            LET g_error_show = 1
            CALL aloq100_b_fill()
 
         ON ACTION agendum   # 待辦事項
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
 
         
      
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
]]>
  </section>
</add_points>
