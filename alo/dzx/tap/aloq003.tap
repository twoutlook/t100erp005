<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="aloq003" std_prog="aloq003" erpver="1.0" module="ALO" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="construct.c.page1.b_logc001" order="0" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_gzxa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_logc001  #顯示到畫面上

            NEXT FIELD b_logc001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.b_logc002" order="0" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_gzza001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_logc002  #顯示到畫面上

            NEXT FIELD b_logc002                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.b_logc005" order="0" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_logc005  #顯示到畫面上

            NEXT FIELD b_logc005                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.logc001" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_gzxa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO logc001  #顯示到畫面上

            NEXT FIELD logc001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.logc002" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_gzza001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO logc002  #顯示到畫面上

            NEXT FIELD logc002                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.logc005" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO logc005  #顯示到畫面上

            NEXT FIELD logc005                     #返回原欄位

]]>
  </point>
  <point name="input.a.page1.logc001" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_logc_d[g_detail_idx].logc001 IS NOT NULL AND g_logc_d[g_detail_idx].logc002 IS NOT NULL AND g_logc_d[g_detail_idx].logc003 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_logc_d[g_detail_idx].logc001 != g_logc_d_t.logc001 OR g_logc_d[g_detail_idx].logc002 != g_logc_d_t.logc002 OR g_logc_d[g_detail_idx].logc003 != g_logc_d_t.logc003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM logc_t WHERE "||"logc001 = '"||g_logc_d[g_detail_idx].logc001 ||"' AND "|| "logc002 = '"||g_logc_d[g_detail_idx].logc002 ||"' AND "|| "logc003 = '"||g_logc_d[g_detail_idx].logc003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.logc002" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_logc_d[g_detail_idx].logc001 IS NOT NULL AND g_logc_d[g_detail_idx].logc002 IS NOT NULL AND g_logc_d[g_detail_idx].logc003 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_logc_d[g_detail_idx].logc001 != g_logc_d_t.logc001 OR g_logc_d[g_detail_idx].logc002 != g_logc_d_t.logc002 OR g_logc_d[g_detail_idx].logc003 != g_logc_d_t.logc003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM logc_t WHERE "||"logc001 = '"||g_logc_d[g_detail_idx].logc001 ||"' AND "|| "logc002 = '"||g_logc_d[g_detail_idx].logc002 ||"' AND "|| "logc003 = '"||g_logc_d[g_detail_idx].logc003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.logc003" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_logc_d[g_detail_idx].logc001 IS NOT NULL AND g_logc_d[g_detail_idx].logc002 IS NOT NULL AND g_logc_d[g_detail_idx].logc003 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_logc_d[g_detail_idx].logc001 != g_logc_d_t.logc001 OR g_logc_d[g_detail_idx].logc002 != g_logc_d_t.logc002 OR g_logc_d[g_detail_idx].logc003 != g_logc_d_t.logc003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM logc_t WHERE "||"logc001 = '"||g_logc_d[g_detail_idx].logc001 ||"' AND "|| "logc002 = '"||g_logc_d[g_detail_idx].logc002 ||"' AND "|| "logc003 = '"||g_logc_d[g_detail_idx].logc003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.logc005" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
]]>
  </point>
  <point name="input.c.page1.logc001" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_logc_d[l_ac].logc001             #給予default值

            #給予arg

            CALL q_gzxa001()                                #呼叫開窗

            LET g_logc_d[l_ac].logc001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_logc_d[l_ac].logc001 TO logc001              #顯示到畫面上

            NEXT FIELD logc001                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.logc005" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_logc_d[l_ac].logc005             #給予default值

            #給予arg

            CALL q_ooea001()                                #呼叫開窗

            LET g_logc_d[l_ac].logc005 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_logc_d[l_ac].logc005 TO logc005              #顯示到畫面上

            NEXT FIELD logc005                          #返回原欄位

]]>
  </point>
  <point name="detail_show.body.reference" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_logc_d[l_ac].logc001
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa001=? ","") RETURNING g_rtn_fields
            LET g_logc_d[l_ac].logc001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_logc_d[l_ac].logc001_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_logc_d[l_ac].logc002
            CALL ap_ref_array2(g_ref_fields,"SELECT gzzal003 FROM gzzal_t WHERE gzzal001=? AND gzzal002='"||g_lang||"'","") RETURNING g_rtn_fields
            LET g_logc_d[l_ac].logc002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_logc_d[l_ac].logc002_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_logc_d[l_ac].logc005
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_logc_d[l_ac].logc005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_logc_d[l_ac].logc005_desc
]]>
  </point>
  <section id="aloq003.b_fill" ver="7" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION aloq003_b_fill()
   {<Local define>}
   DEFINE ls_wc           STRING
   {</Local define>}
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   IF cl_null(g_wc_filter) THEN
      LET g_wc_filter = " 1=1"
   END IF
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   
   LET ls_wc = g_wc, " AND ", g_wc2, " AND ", g_wc_filter
   
   LET g_sql = "SELECT  UNIQUE logc001,'',logc002,'',logc003,logc004,logc005,'',logc006 FROM logc_t", 

 
 
               "",
               " WHERE logcent= ? AND 1=1 AND ", ls_wc
    
   LET g_sql = g_sql, " ORDER BY logc_t.logc001,logc_t.logc002,logc_t.logc003"
  
   #add-point:b_fill段sql_after
   {<point name="b_fill.sql_after"/>}
   #end add-point
  
   PREPARE aloq003_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR aloq003_pb
   
   OPEN b_fill_curs USING g_enterprise
 
   CALL g_logc_d.clear()
 
   #add-point:陣列清空
   {<point name="b_fill.array_clear" />}
   #end add-point
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs INTO g_logc_d[l_ac].logc001,g_logc_d[l_ac].logc001_desc,g_logc_d[l_ac].logc002, 
       g_logc_d[l_ac].logc002_desc,g_logc_d[l_ac].logc003,g_logc_d[l_ac].logc004,g_logc_d[l_ac].logc005, 
       g_logc_d[l_ac].logc005_desc,g_logc_d[l_ac].logc006
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      LET g_logc_d[l_ac].sel = "N"
      #LET g_logc_d[l_ac].statepic = cl_get_actipic(g_logc_d[l_ac].statepic)
 
      
 
      #add-point:b_fill段資料填充
      {<point name="b_fill.fill"/>}
      #end add-point
      
      CALL aloq003_detail_show("'1'")      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            CALL cl_err( "", 9035, 1 )
         END IF
         EXIT FOREACH
      END IF
      
   END FOREACH
   LET g_error_show = 0
   
   CALL g_logc_d.deleteElement(g_logc_d.getLength())   
   #add-point:陣列長度調整
   {<point name="b_fill.array_deleteElement" />}
   #end add-point
   
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.others.fill"/>}
   #end add-point
    
   LET g_detail_cnt = l_ac - 1 
   DISPLAY g_detail_cnt TO FORMONLY.h_count
   LET l_ac = g_cnt
   LET g_cnt = 0
   
   CLOSE b_fill_curs
   FREE aloq003_pb
   
   LET l_ac = 1
   CALL aloq003_fetch()
   
      CALL aloq003_filter_show('logc001','b_logc001')
   CALL aloq003_filter_show('logc002','b_logc002')
   CALL aloq003_filter_show('logc003','b_logc003')
   CALL aloq003_filter_show('logc004','b_logc004')
   CALL aloq003_filter_show('logc005','b_logc005')
   CALL aloq003_filter_show('logc006','b_logc006')
 
   
END FUNCTION
]]>
  </section>
  <section id="aloq003.delete" ver="1" status="" src="s">
    <![CDATA[#+ delete
PRIVATE FUNCTION aloq003_delete()
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point
 
   #add-point:delete段control
   {<point name="delete.control"/>}
   #end add-point 
END FUNCTION
]]>
  </section>
  <section id="aloq003.description" ver="12" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PD版次:1) Build-000037
#+ 
#+ Filename...: aloq003
#+ Description: 修改歷程查詢作業
#+ Creator....: 00824(2014/01/17)
#+ Modifier...: 00824(2014/05/20)
#+ Buildtype..: 應用 q02 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="aloq003.detail_show" ver="2" status="" src="s">
    <![CDATA[#+ 顯示相關資料
PRIVATE FUNCTION aloq003_detail_show(ps_page)
   DEFINE ps_page    STRING
   #add-point:show段define
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   
 
   #讀入ref值
   IF ps_page.getIndexOf("'1'",1) > 0 THEN
      #帶出公用欄位reference值page1
      
 
      #add-point:show段單身reference
      {<point name="detail_show.body.reference"/>}
      #end add-point
   END IF
    
 
 
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="aloq003.fetch" ver="2" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION aloq003_fetch()
   {<Local define>}
   DEFINE li_ac           LIKE type_t.num5
   {</Local define>}
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point
   
 
   #add-point:陣列清空
   {<point name="fetch.array_clear" />}
   #end add-point
   
   LET li_ac = l_ac 
   
 
   
   #DISPLAY g_detail_cnt TO FORMONLY.cnt
 
   #add-point:單身填充後
   {<point name="fetch.after_fill" />}
   #end add-point 
   
 
   #add-point:陣列筆數調整
   {<point name="fetch.array_deleteElement" />}
   #end add-point
   
   LET l_ac = li_ac
   
END FUNCTION
]]>
  </section>
  <section id="aloq003.filter" ver="5" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION aloq003_filter()
   {<Local define>}
   {</Local define>}
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point    
   
   LET l_ac = 1
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON logc001,logc002,logc003,logc004,logc005,logc006
                          FROM s_detail1[1].b_logc001,s_detail1[1].b_logc002,s_detail1[1].b_logc003, 
                              s_detail1[1].b_logc004,s_detail1[1].b_logc005,s_detail1[1].b_logc006
 
         BEFORE CONSTRUCT
#saki       CALL cl_qbe_init()
                     DISPLAY aloq003_filter_parser('logc001') TO s_detail1[1].b_logc001
            DISPLAY aloq003_filter_parser('logc002') TO s_detail1[1].b_logc002
            DISPLAY aloq003_filter_parser('logc003') TO s_detail1[1].b_logc003
            DISPLAY aloq003_filter_parser('logc004') TO s_detail1[1].b_logc004
            DISPLAY aloq003_filter_parser('logc005') TO s_detail1[1].b_logc005
            DISPLAY aloq003_filter_parser('logc006') TO s_detail1[1].b_logc006
 
 
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
 
      ON ACTION accept
         ACCEPT DIALOG 
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
 
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = g_wc_filter, " "
   ELSE
      LET g_wc_filter = g_wc_filter_t
   END IF
   
      CALL aloq003_filter_show('logc001','b_logc001')
   CALL aloq003_filter_show('logc002','b_logc002')
   CALL aloq003_filter_show('logc003','b_logc003')
   CALL aloq003_filter_show('logc004','b_logc004')
   CALL aloq003_filter_show('logc005','b_logc005')
   CALL aloq003_filter_show('logc006','b_logc006')
 
    
   CALL aloq003_b_fill()
   CALL aloq003_fetch()
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
 
END FUNCTION
]]>
  </section>
  <section id="aloq003.filter_parser" ver="1" status="" src="s">
    <![CDATA[#+ filter欄位解析
PRIVATE FUNCTION aloq003_filter_parser(ps_field)
   {<Local define>}
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   {</Local define>}
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="aloq003.filter_show" ver="1" status="" src="s">
    <![CDATA[#+ Browser標題欄位顯示搜尋條件
PRIVATE FUNCTION aloq003_filter_show(ps_field,ps_object)
   DEFINE ps_field         STRING
   DEFINE ps_object        STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.", ps_object
 
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = aloq003_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="aloq003.global" ver="3" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_logc_d RECORD
       #statepic       LIKE type_t.chr1,
       sel            LIKE type_t.chr1,
       logc001 LIKE logc_t.logc001, 
   logc001_desc LIKE type_t.chr500, 
   logc002 LIKE logc_t.logc002, 
   logc002_desc LIKE type_t.chr500, 
   logc003 LIKE logc_t.logc003, 
   logc004 LIKE logc_t.logc004, 
   logc005 LIKE logc_t.logc005, 
   logc005_desc LIKE type_t.chr500, 
   logc006 LIKE logc_t.logc006 
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_master                     type_g_logc_d
DEFINE g_master_t                   type_g_logc_d
DEFINE g_logc_d          DYNAMIC ARRAY OF type_g_logc_d
DEFINE g_logc_d_t        type_g_logc_d
 
      
DEFINE g_wc                 STRING
DEFINE g_wc_t               STRING                        #儲存 user 的查詢條件
DEFINE g_wc2                STRING
DEFINE g_wc_filter          STRING
DEFINE g_wc_filter_t        STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num5              
DEFINE l_ac_d               LIKE type_t.num5              #單身idx 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_current_page       LIKE type_t.num5              #目前所在頁數
DEFINE g_detail_cnt         LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_master_idx         LIKE type_t.num5
DEFINE g_detail_idx         LIKE type_t.num5
DEFINE g_detail_idx2        LIKE type_t.num5
DEFINE g_hyper_url          STRING                        #hyperlink的主要網址
 
 
#多table用wc
DEFINE g_wc_table           STRING
 
 
 
DEFINE g_wc_filter_table           STRING
 
 
 
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="aloq003.init" ver="1" status="" src="s">
    <![CDATA[#+ 畫面資料初始化
PRIVATE FUNCTION aloq003_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point   
   
   LET g_error_show  = 1
   LET g_wc_filter   = " 1=1"
   LET g_wc_filter_t = " 1=1"
   
   
   
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aloq003.insert" ver="1" status="" src="s">
    <![CDATA[#+ insert
PRIVATE FUNCTION aloq003_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point
 
   #add-point:insert段control
   {<point name="insert.control"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="aloq003.main" ver="4" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("alo","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = ""
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   DECLARE aloq003_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE ",
               " FROM ",
               " WHERE  "
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE aloq003_master_referesh FROM g_sql
 
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
 
   ELSE
      
      #畫面開啟 (identifier)
      OPEN WINDOW w_aloq003 WITH FORM cl_ap_formpath("alo",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aloq003_init()   
 
      #進入選單 Menu (="N")
      CALL aloq003_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aloq003
      
   END IF 
   
   CLOSE aloq003_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="aloq003.modify" ver="1" status="" src="s">
    <![CDATA[#+ modify
PRIVATE FUNCTION aloq003_modify()
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point
 
   #add-point:modify段control
   {<point name="modify.control"/>}
   #end add-point 
END FUNCTION
]]>
  </section>
  <section id="aloq003.other_function" ver="1" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="aloq003.query" ver="9" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aloq003_query()
   {<Local define>}
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   {</Local define>}
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point 
   
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_logc_d.clear()
   LET g_wc_filter = " 1=1"
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
   
   LET g_qryparam.state = "c"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   
   #wc備份
   LET ls_wc = g_wc
   LET g_master_idx = l_ac
 
   
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單身根據table分拆construct
      CONSTRUCT g_wc_table ON logc001,logc002,logc003,logc004,logc005,logc006
           FROM s_detail1[1].b_logc001,s_detail1[1].b_logc002,s_detail1[1].b_logc003,s_detail1[1].b_logc004, 
               s_detail1[1].b_logc005,s_detail1[1].b_logc006
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #----<<b_logc001>>----
         #Ctrlp:construct.c.page1.b_logc001
         ON ACTION controlp INFIELD b_logc001
            #add-point:ON ACTION controlp INFIELD b_logc001
            {<point name="construct.c.page1.b_logc001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD b_logc001
            #add-point:BEFORE FIELD b_logc001
            {<point name="construct.b.page1.b_logc001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_logc001
            
            #add-point:AFTER FIELD b_logc001
            {<point name="construct.a.page1.b_logc001" />}
            #END add-point
            
 
         #----<<b_logc001_desc>>----
         #----<<b_logc002>>----
         #Ctrlp:construct.c.page1.b_logc002
         ON ACTION controlp INFIELD b_logc002
            #add-point:ON ACTION controlp INFIELD b_logc002
            {<point name="construct.c.page1.b_logc002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD b_logc002
            #add-point:BEFORE FIELD b_logc002
            {<point name="construct.b.page1.b_logc002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_logc002
            
            #add-point:AFTER FIELD b_logc002
            {<point name="construct.a.page1.b_logc002" />}
            #END add-point
            
 
         #----<<b_logc002_desc>>----
         #----<<b_logc003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_logc003
            #add-point:BEFORE FIELD b_logc003
            {<point name="construct.b.page1.b_logc003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_logc003
            
            #add-point:AFTER FIELD b_logc003
            {<point name="construct.a.page1.b_logc003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.b_logc003
         ON ACTION controlp INFIELD b_logc003
            #add-point:ON ACTION controlp INFIELD b_logc003
            {<point name="construct.c.page1.b_logc003" />}
            #END add-point
 
         #----<<b_logc004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_logc004
            #add-point:BEFORE FIELD b_logc004
            {<point name="construct.b.page1.b_logc004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_logc004
            
            #add-point:AFTER FIELD b_logc004
            {<point name="construct.a.page1.b_logc004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.b_logc004
         ON ACTION controlp INFIELD b_logc004
            #add-point:ON ACTION controlp INFIELD b_logc004
            {<point name="construct.c.page1.b_logc004" />}
            #END add-point
 
         #----<<b_logc005>>----
         #Ctrlp:construct.c.page1.b_logc005
         ON ACTION controlp INFIELD b_logc005
            #add-point:ON ACTION controlp INFIELD b_logc005
            {<point name="construct.c.page1.b_logc005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD b_logc005
            #add-point:BEFORE FIELD b_logc005
            {<point name="construct.b.page1.b_logc005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_logc005
            
            #add-point:AFTER FIELD b_logc005
            {<point name="construct.a.page1.b_logc005" />}
            #END add-point
            
 
         #----<<b_logc005_desc>>----
         #----<<b_logc006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_logc006
            #add-point:BEFORE FIELD b_logc006
            {<point name="construct.b.page1.b_logc006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_logc006
            
            #add-point:AFTER FIELD b_logc006
            {<point name="construct.a.page1.b_logc006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.b_logc006
         ON ACTION controlp INFIELD b_logc006
            #add-point:ON ACTION controlp INFIELD b_logc006
            {<point name="construct.c.page1.b_logc006" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
 
  
      #add-point:query段more_construct
      {<point name="query.more_construct"/>}
      #end add-point 
      
      ON ACTION accept
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG 
   END DIALOG
 
   
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc = ls_wc
   ELSE
      LET g_master_idx = 1
   END IF
   
   LET g_wc = g_wc_table 
 
 
        
   LET g_wc2 = " 1=1"
 
        
   #add-point:cs段after_construct
   {<point name="cs.after_construct"/>}
   #end add-point
        
   LET g_error_show = 1
   CALL aloq003_b_fill()
   LET l_ac = g_master_idx
   CALL aloq003_fetch()
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      CALL cl_err("",-100,1)
   END IF
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
   
END FUNCTION
]]>
  </section>
  <section id="aloq003.reproduce" ver="1" status="" src="s">
    <![CDATA[#+ reproduce
PRIVATE FUNCTION aloq003_reproduce()
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point
 
   #add-point:reproduce段control
   {<point name="reproduce.control"/>}
   #end add-point 
END FUNCTION
]]>
  </section>
  <section id="aloq003.ui_dialog" ver="4" status="" src="s">
    <![CDATA[#+ 功能選單 
PRIVATE FUNCTION aloq003_ui_dialog()
   {<Local define>}
   DEFINE li_idx   LIKE type_t.num5
   {</Local define>}
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point 
 
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   
   LET g_action_choice = " "  
   CALL cl_set_act_visible("accept,cancel", FALSE)
         
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   
   CALL aloq003_query()
   
   WHILE TRUE
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_logc_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               LET g_current_page = 1
 
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.h_index
               DISPLAY g_logc_d.getLength() TO FORMONLY.h_count
               LET g_master_idx = l_ac
               CALL aloq003_fetch()
               #add-point:input段before row
               {<point name="input.body.before_row"/>}
               #end add-point  
            
            #自訂ACTION(detail_show,page_1)
            
               
         END DISPLAY
      
 
         
 
      
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         BEFORE DIALOG      
            CALL DIALOG.setSelectionMode("s_detail1", 1)
 
            #add-point:ui_dialog段before dialog
            {<point name="ui_dialog.bef_dialog"/>}
            #end add-point
 
            NEXT FIELD sel
      
         
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aloq003_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aloq003_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION datainfo
            LET g_action_choice="datainfo"
            IF cl_auth_chk_act("datainfo") THEN
               
               #add-point:ON ACTION datainfo
               {<point name="menu.datainfo" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
      
         #選擇全部
         ON ACTION selall
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 1)
            FOR li_idx = 1 TO g_logc_d.getLength()
               LET g_logc_d[li_idx].sel = "Y"
            END FOR
 
            #add-point:ui_dialog段on action selall
            {<point name="ui_dialog.onaction_selall"/>}
            #end add-point
 
         #取消全部
         ON ACTION selnone
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 0)
            FOR li_idx = 1 TO g_logc_d.getLength()
               LET g_logc_d[li_idx].sel = "N"
            END FOR
 
            #add-point:ui_dialog段on action selnone
            {<point name="ui_dialog.onaction_selnone"/>}
            #end add-point
 
         #勾選所選資料
         ON ACTION sel
            FOR li_idx = 1 TO g_logc_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_logc_d[li_idx].sel = "Y"
               END IF
            END FOR
 
            #add-point:ui_dialog段on action sel
            {<point name="ui_dialog.onaction_sel"/>}
            #end add-point
 
         #取消所選資料
         ON ACTION unsel
            FOR li_idx = 1 TO g_logc_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_logc_d[li_idx].sel = "N"
               END IF
            END FOR
 
            #add-point:ui_dialog段on action unsel
            {<point name="ui_dialog.onaction_unsel"/>}
            #end add-point
      
         ON ACTION filter
            LET g_action_choice="filter"
            CALL aloq003_filter()
            #add-point:ON ACTION filter
            {<point name="menu.filter" />}
            #END add-point
            EXIT DIALOG
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
 
         ON ACTION qbeclear   # 條件清除
            CLEAR FORM
 
         ON ACTION datarefresh   # 重新整理
            LET g_error_show = 1
            CALL aloq003_b_fill()
            CALL aloq003_fetch()
 
         ON ACTION agendum   # 待辦事項
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
 
         
      
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
]]>
  </section>
</add_points>
