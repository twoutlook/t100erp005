<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="aloq005" std_prog="aloq005" erpver="1.0" module="ALO" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="b_fill.sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_sql = "SELECT '',logs002,t1.gzszl004,logs005,logs004,logs006",
                " FROM logs_t",
                " LEFT JOIN gzszl_t t1 ON t1.gzszl002 = logs002 AND t1.gzszl003 = '"||g_lang||"'",
               " WHERE logsent = '"||g_enterprise||"'",
                 " AND ",g_wc2,
                 " AND logs001 = ?",
                 " AND logs007 = ?",
                 " AND logs003 = ?"

   PREPARE aloq005_bf_pre FROM g_sql
   DECLARE aloq005_bf_curs CURSOR FOR aloq005_bf_pre
   OPEN aloq005_bf_curs USING g_master.logs001,g_master.logs007,g_master.logs003
   FOREACH aloq005_bf_curs INTO g_detail[l_ac].*
      IF SQLCA.sqlcode THEN
         CALL cl_err('FOREACH:',SQLCA.sqlcode,0)
         EXIT FOREACH
      END IF

      LET l_ac = l_ac + 1
   END FOREACH]]>
  </point>
  <point name="cs.head_total_row_count" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_cnt_sql = "SELECT COUNT(*) FROM (",g_sql,")"]]>
  </point>
  <point name="cs.head_total_row_count_1" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      LET g_sql = "SELECT COUNT(*) FROM (",g_sql,")"]]>
  </point>
  <point name="cs.head_total_row_count_2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      LET g_sql = "SELECT COUNT(*) FROM (",g_sql,")"]]>
  </point>
  <point name="cs.sql_define_1" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      LET g_sql = "SELECT UNIQUE logs001,t1.oofa011,logs007,t2.ooefl003,logs003,t3.ooefl003",
                  " FROM logs_t",
                  " LEFT JOIN oofa_t t1  ON t1.oofaent = '"||g_enterprise||"' AND t1.oofa002='2' AND t1.oofa003 = logs001",
                  " LEFT JOIN ooefl_t t2 ON t2.ooeflent = '"||g_enterprise||"' AND t2.ooefl001 = logs007 AND t2.ooefl002 = '"||g_lang||"'",
                  " LEFT JOIN ooefl_t t3 ON t3.ooeflent = '"||g_enterprise||"' AND t3.ooefl001 = logs003 AND t3.ooefl002 = '"||g_lang||"'",
                 " WHERE logsent = '"||g_enterprise||"'",
                   " AND ",g_wc,
                 " ORDER BY 1"]]>
  </point>
  <point name="cs.sql_define_2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      LET g_sql = "SELECT UNIQUE logs001,t1.oofa011,logs007,t2.ooefl003,logs003,t3.ooefl003",
                  " FROM logs_t",
                  " LEFT JOIN oofa_t t1  ON t1.oofaent = '"||g_enterprise||"' AND t1.oofa002='2' AND t1.oofa003 = logs001",
                  " LEFT JOIN ooefl_t t2 ON t2.ooeflent = '"||g_enterprise||"' AND t2.ooefl001 = logs007 AND t2.ooefl002 = '"||g_lang||"'",
                  " LEFT JOIN ooefl_t t3 ON t3.ooeflent = '"||g_enterprise||"' AND t3.ooefl001 = logs003 AND t3.ooefl002 = '"||g_lang||"'",
                 " WHERE logsent = '"||g_enterprise||"'",
                   " AND ", g_wc CLIPPED, " AND ",g_wc2 CLIPPED,
                  " ORDER BY 1"]]>
  </point>
  <point name="detail_show.body.reference" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_detail[l_ac].logs002
            CALL ap_ref_array2(g_ref_fields,"SELECT gzszl004 FROM gzszl_t WHERE gzszl002=? AND gzszl003='"||g_lang||"'","") RETURNING g_rtn_fields
            LET g_detail[l_ac].logs002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_detail[l_ac].logs002_desc
]]>
  </point>
  <point name="fetch.cursor_action" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CASE p_flag
        WHEN 'N' FETCH NEXT     aloq005_curs INTO g_master.*
        WHEN 'P' FETCH PREVIOUS aloq005_curs INTO g_master.*
        WHEN 'F' FETCH FIRST    aloq005_curs INTO g_master.*
        WHEN 'L' FETCH LAST     aloq005_curs INTO g_master.*
        WHEN '/'
            IF (NOT g_no_ask) THEN
                CALL cl_getmsg('fetch',g_lang) RETURNING g_msg
                LET INT_FLAG = 0  ######add for prompt bug
                PROMPT g_msg CLIPPED,': ' FOR g_jump
                    ON IDLE g_idle_seconds
                       CALL cl_on_idle()

                    ON ACTION about
                       CALL cl_about()

                    ON ACTION controlg
                       CALL cl_cmdask()
                END PROMPT
                IF INT_FLAG THEN
                    LET INT_FLAG = 0
                    EXIT CASE
                END IF
            END IF
            FETCH ABSOLUTE g_jump aloq005_curs INTO g_master.*
            LET g_no_ask = FALSE
    END CASE]]>
  </point>
  <point name="ui_dialog.construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         #單頭查詢條件
         CONSTRUCT BY NAME g_wc ON logs001,logs007,logs003
            ON ACTION controlp
               CASE
                  WHEN INFIELD(logs001)
                     ### 內部員工代碼查詢 ###
                     INITIALIZE g_qryparam.* TO NULL
                     LET g_qryparam.state = "c"
                     LET g_qryparam.reqry = FALSE
                     CALL q_gzxa003_1()                     #呼叫開窗
                     DISPLAY g_qryparam.return1 TO logs001  #顯示到畫面上
                     NEXT FIELD logs001

                  WHEN INFIELD(logs007)
                     ### 部門查詢 ###
                     INITIALIZE g_qryparam.* TO NULL
                     LET g_qryparam.state = "c"
                     LET g_qryparam.reqry = FALSE
                     CALL q_ooef001_13()                    #呼叫開窗
                     DISPLAY g_qryparam.return1 TO logs007  #顯示到畫面上
                     NEXT FIELD logs007

                  WHEN INFIELD(logs003)
                     ### 營運據點查詢 ###
                     INITIALIZE g_qryparam.* TO NULL
                     LET g_qryparam.state = "c"
                     LET g_qryparam.reqry = FALSE
                     CALL q_ooef001_14()                    #呼叫開窗
                     DISPLAY g_qryparam.return1 TO logs003  #顯示到畫面上
                     NEXT FIELD logs003
               END CASE
         END CONSTRUCT
         
         #單身查詢條件
         CONSTRUCT BY NAME g_wc2 ON logs002,logs005,logs004,logs006
            ON ACTION controlp
               CASE
                  WHEN INFIELD(logs002)
                     ### 表格參數查詢 ###
                     INITIALIZE g_qryparam.* TO NULL
                     LET g_qryparam.state = "c"
                     LET g_qryparam.reqry = FALSE
                     CALL q_gzsz002_1()                       #呼叫開窗
                     DISPLAY g_qryparam.return1 TO logs002  #顯示到畫面上
                     NEXT FIELD logs002
               END CASE
         END CONSTRUCT]]>
  </point>
  <section id="aloq005.b_fill" ver="1" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION aloq005_b_fill()
   {<Local define>}
   DEFINE ls_wc           STRING
   {</Local define>}
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
 
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
 
   CALL g_detail.clear()
 
   #add-point:陣列清空
   {<point name="b_fill.array_clear" />}
   #end add-point
 
   
 
   LET l_ac = 1
 
   # b_fill段sql組成及FOREACH撰寫
   #+ 此段落由子樣板qs09產生
   #+ b_fill段資料取得(包含sql組成及FOREACH段撰寫)
   #add-point:b_fill段sql
   {<point name="b_fill.sql"/>}
   #end add-point
 
 
 
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.others.fill"/>}
   #end add-point
 
   CALL g_detail.deleteElement(g_detail.getLength())
 
   #add-point:陣列長度調整
   {<point name="b_fill.array_deleteElement" />}
   #end add-point
 
   LET g_error_show = 0
 
   #單身總筆數顯示
   LET g_detail_cnt = g_detail.getLength()
   DISPLAY g_detail_cnt TO FORMONLY.cnt
   IF g_detail_cnt > 0 THEN
      LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx
   END IF
 
   CALL aloq005_b_fill2()
 
   
 
END FUNCTION
]]>
  </section>
  <section id="aloq005.b_fill2" ver="1" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION aloq005_b_fill2()
   {<Local define>}
   DEFINE li_ac           LIKE type_t.num5
   {</Local define>}
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
 
   LET li_ac = 1
 
   #單身組成
   #+ 此段落由子樣板qs11產生
   #+ b_fill2段table資料取得(包含sql組成及資料填充)
   #add-point:sql組成
   {<point name="b_fill2.fill" />}
   #end add-point
 
 
 
 
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="aloq005.cs" ver="4" status="" src="s">
    <![CDATA[#+ 組單頭CURSOR
PRIVATE FUNCTION aloq005_cs()
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point
 
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
 
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
 
   IF g_wc2 = " 1=1" THEN
      #add-point:cs段單頭sql組成(未下單身條件)
      {<point name="cs.sql_define_1"/>}
      #end add-point
   ELSE
      #add-point:cs段單頭sql組成(有下單身條件)
      {<point name="cs.sql_define_2"/>}
      #end add-point
   END IF
 
   PREPARE aloq005_pre FROM g_sql
   DECLARE aloq005_curs SCROLL CURSOR WITH HOLD FOR aloq005_pre
   OPEN aloq005_curs
 
   #add-point:cs段單頭總筆數計算
   {<point name="cs.head_total_row_count"/>}
   #end add-point
   PREPARE aloq005_precount FROM g_cnt_sql
   EXECUTE aloq005_precount INTO g_row_count
 
   IF SQLCA.SQLCODE THEN
      CALL cl_err('',SQLCA.SQLCODE,0)
   ELSE
      CALL aloq005_fetch("F")
   END IF
END FUNCTION
]]>
  </section>
  <section id="aloq005.description" ver="14" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PD版次:1) Build-000013
#+ 
#+ Filename...: aloq005
#+ Description: 參數修改紀錄查詢作業
#+ Creator....: 00824(2014/04/30)
#+ Modifier...: 00824(2014/05/02)
#+ Buildtype..: 應用 q04 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="aloq005.detail_show" ver="2" status="" src="s">
    <![CDATA[#+ 顯示相關資料
PRIVATE FUNCTION aloq005_detail_show(ps_page)
   DEFINE ps_page   STRING
   #add-point:show段define
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
 
   
 
   #讀入ref值
   IF ps_page.getIndexOf("'1'",1) > 0 THEN
      #帶出公用欄位reference值page1
      
 
      #add-point:show段單身reference
      {<point name="detail_show.body.reference"/>}
      #end add-point
   END IF
 
 
 
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="aloq005.fetch" ver="1" status="" src="s">
    <![CDATA[#+ 抓取單頭資料
PRIVATE FUNCTION aloq005_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point
 
   MESSAGE ""
 
   #FETCH段CURSOR移動
   #+ 此段落由子樣板qs18產生
   #add-point:fetch段CURSOR移動
   {<point name="fetch.cursor_action"/>}
   #end add-point
 
 
 
   IF SQLCA.sqlcode THEN
      # 清空右側畫面欄位值，但須保留左側qbe查詢條件
      INITIALIZE g_master.* TO NULL
      DISPLAY g_master.* TO b_logs001,b_logs001_desc,b_logs007,b_logs007_desc,b_logs003,b_logs003_desc 

      CALL g_detail.clear()
 
      #add-point:陣列清空
      {<point name="fetch.array_clear" />}
      #end add-point
      DISPLAY '' TO FORMONLY.h_index
      DISPLAY '' TO FORMONLY.h_count
      DISPLAY '' TO FORMONLY.idx
      DISPLAY '' TO FORMONLY.cnt
      CALL cl_err('','-100',1)
      RETURN
   ELSE
      CASE p_flag
         WHEN 'F' LET g_current_idx = 1
         WHEN 'P' LET g_current_idx = g_current_idx - 1
         WHEN 'N' LET g_current_idx = g_current_idx + 1
         WHEN 'L' LET g_current_idx = g_row_count
         WHEN '/' LET g_current_idx = g_jump
      END CASE
      DISPLAY g_current_idx TO FORMONLY.h_index
      DISPLAY g_row_count TO FORMONLY.h_count
      CALL cl_navigator_setting( g_current_idx, g_row_count )
   END IF
 
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
 
   #重新顯示
   CALL aloq005_show()
 
END FUNCTION
]]>
  </section>
  <section id="aloq005.global" ver="3" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_master        RECORD
       logs001 LIKE logs_t.logs001, 
   logs001_desc LIKE type_t.chr80, 
   logs007 LIKE logs_t.logs007, 
   logs007_desc LIKE type_t.chr80, 
   logs003 LIKE logs_t.logs003, 
   logs003_desc LIKE type_t.chr80
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_detail RECORD
       sel            LIKE type_t.chr1,
       logs002 LIKE logs_t.logs002, 
   logs002_desc LIKE type_t.chr500, 
   logs005 LIKE logs_t.logs005, 
   logs004 LIKE logs_t.logs004, 
   logs006 DATETIME YEAR TO SECOND
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_master            type_g_master
DEFINE g_master_t          type_g_master
 
   
 
DEFINE g_detail            DYNAMIC ARRAY OF type_g_detail
DEFINE g_detail_t          type_g_detail
 
 
 
DEFINE g_wc                  STRING                        #儲存 user 的查詢條件
DEFINE g_wc_t                STRING                        #儲存 user 的查詢條件
DEFINE g_wc2                 STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
DEFINE g_sql                 STRING                        #組 sql 用 
DEFINE g_cnt_sql             STRING                        #組 sql 用 
DEFINE g_forupd_sql          STRING                        #SELECT ... FOR UPDATE  SQL    
DEFINE g_cnt                 LIKE type_t.num10              
DEFINE l_ac                  LIKE type_t.num5              #目前處理的ARRAY CNT 
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog     
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_current_row         LIKE type_t.num5              #目前所在筆數
DEFINE g_current_idx         LIKE type_t.num5
DEFINE g_detail_cnt          LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_page                STRING                        #第幾頁
DEFINE g_ch                  base.Channel                  #外串程式用
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE g_master_idx          LIKE type_t.num5
DEFINE g_detail_idx          LIKE type_t.num5              #單身 所在筆數(所有資料)
DEFINE g_detail_idx2         LIKE type_t.num5
DEFINE g_hyper_url           STRING                        #hyperlink的主要網址
DEFINE g_msg                 STRING
DEFINE g_jump                LIKE type_t.num10
DEFINE g_no_ask              LIKE type_t.num5
DEFINE g_row_count           LIKE type_t.num10
 
#多table用wc
DEFINE g_wc_table           STRING
 
 
 
DEFINE g_wc_filter_table           STRING
 
 
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="aloq005.init" ver="1" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aloq005_init()
 
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point
 
   LET g_wc_filter   = " 1=1"
   LET g_wc_filter_t = " 1=1" 
   LET g_error_show  = 1
#  LET g_selcolor    = "#D0E7FD"
   
     
 
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="aloq005.main" ver="1" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("alo","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = ""
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   DECLARE aloq005_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE ",
               " FROM ",
               " WHERE  "
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE aloq005_master_referesh FROM g_sql
 
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
 
   ELSE
      
      #畫面開啟 (identifier)
      OPEN WINDOW w_aloq005 WITH FORM cl_ap_formpath("alo",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aloq005_init()   
 
      #進入選單 Menu (="N")
      CALL aloq005_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aloq005
      
   END IF 
   
   CLOSE aloq005_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="aloq005.other_function" ver="1" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="aloq005.show" ver="2" status="" src="s">
    <![CDATA[PRIVATE FUNCTION aloq005_show()
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point
 
   DISPLAY g_master.* TO b_logs001,b_logs001_desc,b_logs007,b_logs007_desc,b_logs003,b_logs003_desc
 
   #讀入ref值
   #add-point:show段單身reference
   {<point name="show.head.reference"/>}
   #end add-point
 
   CALL aloq005_b_fill()
END FUNCTION
]]>
  </section>
  <section id="aloq005.ui_dialog" ver="5" status="" src="s">
    <![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION aloq005_ui_dialog() 
   {<Local define>}
   DEFINE li_exit   LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_result STRING
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   {</Local define>}
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
 
   CLEAR FORM  
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   LET li_exit = FALSE
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   LET g_current_row = 0
   LET g_current_idx = 1
   LET g_action_choice = " "
   LET g_main_hidden = 1
   LET l_ac = 1
 
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   
  
   WHILE li_exit = FALSE
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #add-point:input段落
         {<point name="ui_dialog.input"/>}
         #end add-point
 
         #add-point:construct段落
         {<point name="ui_dialog.construct"/>}
         #end add-point
     
         DISPLAY ARRAY g_detail TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt)
 
            BEFORE DISPLAY
               LET g_current_page = 1
 
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.idx
               DISPLAY g_detail.getLength() TO FORMONLY.cnt
               LET g_master_idx = l_ac
               CALL aloq005_b_fill2()
 
               #add-point:input段before row
               {<point name="input.body.before_row"/>}
               #end add-point
 
            #自訂ACTION(detail_show,page_1)
            
 
         END DISPLAY
 
 
 
         #add-point:ui_dialog段define
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
    
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
  
         BEFORE DIALOG
            CALL DIALOG.setSelectionMode("s_detail1", 1)
            CALL aloq005_fetch('')
 
            #add-point:ui_dialog段before dialog
            {<point name="ui_dialog.bef_dialog"/>}
            #end add-point
            NEXT FIELD sel
 
         AFTER DIALOG
            #add-point:ui_dialog段 after dialog
            {<point name="ui_dialog.after_dialog"/>}
            #end add-point
            
         #選擇全部
         ON ACTION selall
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 1)
            FOR li_idx = 1 TO g_detail.getLength()
               LET g_detail[li_idx].sel = "Y"
            END FOR
 
            #add-point:ui_dialog段on action selall
            {<point name="ui_dialog.onaction_selall"/>}
            #end add-point
 
         #取消全部
         ON ACTION selnone
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 0)
            FOR li_idx = 1 TO g_detail.getLength()
               LET g_detail[li_idx].sel = "N"
            END FOR
 
            #add-point:ui_dialog段on action selnone
            {<point name="ui_dialog.onaction_selnone"/>}
            #end add-point
 
         #勾選所選資料
         ON ACTION sel
            FOR li_idx = 1 TO g_detail.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_detail[li_idx].sel = "Y"
               END IF
            END FOR
 
            #add-point:ui_dialog段on action sel
            {<point name="ui_dialog.onaction_sel"/>}
            #end add-point
 
         #取消所選資料
         ON ACTION unsel
            FOR li_idx = 1 TO g_detail.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_detail[li_idx].sel = "N"
               END IF
            END FOR
 
            #add-point:ui_dialog段on action unsel
            {<point name="ui_dialog.onaction_unsel"/>}
            #end add-point
 
         ON ACTION exit
            LET g_action_choice="exit"
            LET INT_FLAG = FALSE
            LET li_exit = TRUE
            EXIT DIALOG 
      
         ON ACTION close
            LET INT_FLAG=FALSE
            LET li_exit = TRUE
            EXIT DIALOG
 
         ON ACTION accept
            INITIALIZE g_wc_filter TO NULL
            IF cl_null(g_wc) THEN
               LET g_wc = " 1=1"
            END IF
 
 
   
            IF cl_null(g_wc2) THEN
               LET g_wc2 = " 1=1"
            END IF
 
            CALL aloq005_cs()
            NEXT FIELD sel   # 為了讓一開始的focus停留在單頭
      
 
         ON ACTION agendum   # 待辦事項
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
 
         ON ACTION qbeclear   # 條件清除
            CLEAR FORM
 
         ON ACTION datarefresh   # 重新整理
            CALL aloq005_fetch('F')
 
         ON ACTION first   # 第一筆
            CALL aloq005_fetch('F')
 
         ON ACTION previous   # 上一筆
            CALL aloq005_fetch('P')
 
         ON ACTION jump   # 跳至第幾筆
            CALL aloq005_fetch('/')
 
         ON ACTION next   # 下一筆
            CALL aloq005_fetch('N')
 
         ON ACTION last   # 最後一筆
            CALL aloq005_fetch('L')
 
         
 
         
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION datainfo
            LET g_action_choice="datainfo"
            IF cl_auth_chk_act("datainfo") THEN
               
               #add-point:ON ACTION datainfo
               {<point name="menu.datainfo" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
      
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
 
      END DIALOG 
   
   END WHILE
 
END FUNCTION
]]>
  </section>
</add_points>
